/*
#############################################################################################
# BattleBorn (1.0.0.0) SDK
# Generated with the CodeRedGenerator v1.0.3
# ========================================================================================= #
# File: GearboxFramework_classes.cpp
# ========================================================================================= #
# Credits: TheFeckless, ItsBranK
# Links: www.github.com/CodeRedModding/CodeRed-Generator, www.twitter.com/ItsBranK
#############################################################################################
*/
#include "../SdkHeaders.hpp"

#ifdef _MSC_VER
	#pragma pack(push, 0x8)
#endif

/*
# ========================================================================================= #
# Functions
# ========================================================================================= #
*/

// Function GearboxFramework.ActionSequence.TriggerBehavior
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36571])
// Parameter Info:
// const struct FName&            OutputName                     (CPF_Parm)

void UActionSequence::TriggerBehavior(const struct FName& OutputName)
{
	static UFunction* uFnTriggerBehavior = nullptr;

	if (!uFnTriggerBehavior)
	{
		uFnTriggerBehavior = UFunction::FindFunction("Function GearboxFramework.ActionSequence.TriggerBehavior");
	}

	UActionSequence_execTriggerBehavior_Params TriggerBehavior_Params;
	memset(&TriggerBehavior_Params, 0, sizeof(TriggerBehavior_Params));
	memcpy_s(&TriggerBehavior_Params.OutputName, sizeof(TriggerBehavior_Params.OutputName), &OutputName, sizeof(OutputName));

	uFnTriggerBehavior->iNative = 0;
	uFnTriggerBehavior->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnTriggerBehavior, &TriggerBehavior_Params, nullptr);
	uFnTriggerBehavior->FunctionFlags |= 0x400;
	uFnTriggerBehavior->iNative = 36571;
};

// Function GearboxFramework.ActionSequence.CanRun
// [0x00020C00] (FUNC_Native | FUNC_Event | FUNC_Public | FUNC_AllFlags) (iNative[14806])
// Parameter Info:
// struct FName                   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FName UActionSequence::eventCanRun()
{
	static UFunction* uFnCanRun = nullptr;

	if (!uFnCanRun)
	{
		uFnCanRun = UFunction::FindFunction("Function GearboxFramework.ActionSequence.CanRun");
	}

	UActionSequence_eventCanRun_Params CanRun_Params;
	memset(&CanRun_Params, 0, sizeof(CanRun_Params));

	uFnCanRun->iNative = 0;
	uFnCanRun->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCanRun, &CanRun_Params, nullptr);
	uFnCanRun->FunctionFlags |= 0x400;
	uFnCanRun->iNative = 14806;

	return CanRun_Params.ReturnValue;
};

// Function GearboxFramework.ActionSequence.ActivateEvent
// [0x00020C02] (FUNC_Defined | FUNC_Native | FUNC_Event | FUNC_Public | FUNC_AllFlags) (iNative[2481])
// Parameter Info:
// const struct FName&            EventName                      (CPF_Parm)

void UActionSequence::eventActivateEvent(const struct FName& EventName)
{
	static UFunction* uFnActivateEvent = nullptr;

	if (!uFnActivateEvent)
	{
		uFnActivateEvent = UFunction::FindFunction("Function GearboxFramework.ActionSequence.ActivateEvent");
	}

	UActionSequence_eventActivateEvent_Params ActivateEvent_Params;
	memset(&ActivateEvent_Params, 0, sizeof(ActivateEvent_Params));
	memcpy_s(&ActivateEvent_Params.EventName, sizeof(ActivateEvent_Params.EventName), &EventName, sizeof(EventName));

	uFnActivateEvent->iNative = 0;
	uFnActivateEvent->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnActivateEvent, &ActivateEvent_Params, nullptr);
	uFnActivateEvent->FunctionFlags |= 0x400;
	uFnActivateEvent->iNative = 2481;
};

// Function GearboxFramework.ActionSequence.Update
// [0x00020C02] (FUNC_Defined | FUNC_Native | FUNC_Event | FUNC_Public | FUNC_AllFlags) (iNative[2482])
// Parameter Info:

void UActionSequence::eventUpdate()
{
	static UFunction* uFnUpdate = nullptr;

	if (!uFnUpdate)
	{
		uFnUpdate = UFunction::FindFunction("Function GearboxFramework.ActionSequence.Update");
	}

	UActionSequence_eventUpdate_Params Update_Params;
	memset(&Update_Params, 0, sizeof(Update_Params));

	uFnUpdate->iNative = 0;
	uFnUpdate->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnUpdate, &Update_Params, nullptr);
	uFnUpdate->FunctionFlags |= 0x400;
	uFnUpdate->iNative = 2482;
};

// Function GearboxFramework.ActionSequence.Init
// [0x00020C00] (FUNC_Native | FUNC_Event | FUNC_Public | FUNC_AllFlags) (iNative[762])
// Parameter Info:

void UActionSequence::eventInit()
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function GearboxFramework.ActionSequence.Init");
	}

	UActionSequence_eventInit_Params Init_Params;
	memset(&Init_Params, 0, sizeof(Init_Params));

	uFnInit->iNative = 0;
	uFnInit->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInit, &Init_Params, nullptr);
	uFnInit->FunctionFlags |= 0x400;
	uFnInit->iNative = 762;
};

// Function GearboxFramework.ActionSequence.Stop
// [0x00020C00] (FUNC_Native | FUNC_Event | FUNC_Public | FUNC_AllFlags) (iNative[623])
// Parameter Info:

void UActionSequence::eventStop()
{
	static UFunction* uFnStop = nullptr;

	if (!uFnStop)
	{
		uFnStop = UFunction::FindFunction("Function GearboxFramework.ActionSequence.Stop");
	}

	UActionSequence_eventStop_Params Stop_Params;
	memset(&Stop_Params, 0, sizeof(Stop_Params));

	uFnStop->iNative = 0;
	uFnStop->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnStop, &Stop_Params, nullptr);
	uFnStop->FunctionFlags |= 0x400;
	uFnStop->iNative = 623;
};

// Function GearboxFramework.ActionSequence.Start
// [0x00020C00] (FUNC_Native | FUNC_Event | FUNC_Public | FUNC_AllFlags) (iNative[14797])
// Parameter Info:

void UActionSequence::eventStart()
{
	static UFunction* uFnStart = nullptr;

	if (!uFnStart)
	{
		uFnStart = UFunction::FindFunction("Function GearboxFramework.ActionSequence.Start");
	}

	UActionSequence_eventStart_Params Start_Params;
	memset(&Start_Params, 0, sizeof(Start_Params));

	uFnStart->iNative = 0;
	uFnStart->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnStart, &Start_Params, nullptr);
	uFnStart->FunctionFlags |= 0x400;
	uFnStart->iNative = 14797;
};

// Function GearboxFramework.ActionSequence.Sleep
// [0x00020409] (FUNC_Final | FUNC_Latent | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[29170])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// float                          Seconds                        (CPF_Parm)

bool UActionSequence::Sleep(float Seconds)
{
	static UFunction* uFnSleep = nullptr;

	if (!uFnSleep)
	{
		uFnSleep = UFunction::FindFunction("Function GearboxFramework.ActionSequence.Sleep");
	}

	UActionSequence_execSleep_Params Sleep_Params;
	memset(&Sleep_Params, 0, sizeof(Sleep_Params));
	memcpy_s(&Sleep_Params.Seconds, sizeof(Sleep_Params.Seconds), &Seconds, sizeof(Seconds));

	uFnSleep->iNative = 0;
	uFnSleep->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSleep, &Sleep_Params, nullptr);
	uFnSleep->FunctionFlags |= 0x400;
	uFnSleep->iNative = 29170;

	return Sleep_Params.ReturnValue;
};

// Function GearboxFramework.ActionSequence.InterruptLatentAction
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34622])
// Parameter Info:

void UActionSequence::InterruptLatentAction()
{
	static UFunction* uFnInterruptLatentAction = nullptr;

	if (!uFnInterruptLatentAction)
	{
		uFnInterruptLatentAction = UFunction::FindFunction("Function GearboxFramework.ActionSequence.InterruptLatentAction");
	}

	UActionSequence_execInterruptLatentAction_Params InterruptLatentAction_Params;
	memset(&InterruptLatentAction_Params, 0, sizeof(InterruptLatentAction_Params));

	uFnInterruptLatentAction->iNative = 0;
	uFnInterruptLatentAction->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInterruptLatentAction, &InterruptLatentAction_Params, nullptr);
	uFnInterruptLatentAction->FunctionFlags |= 0x400;
	uFnInterruptLatentAction->iNative = 34622;
};

// Function GearboxFramework.ActionSequence.IsAtomic
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34647])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UActionSequence::IsAtomic()
{
	static UFunction* uFnIsAtomic = nullptr;

	if (!uFnIsAtomic)
	{
		uFnIsAtomic = UFunction::FindFunction("Function GearboxFramework.ActionSequence.IsAtomic");
	}

	UActionSequence_execIsAtomic_Params IsAtomic_Params;
	memset(&IsAtomic_Params, 0, sizeof(IsAtomic_Params));

	uFnIsAtomic->iNative = 0;
	uFnIsAtomic->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsAtomic, &IsAtomic_Params, nullptr);
	uFnIsAtomic->FunctionFlags |= 0x400;
	uFnIsAtomic->iNative = 34647;

	return IsAtomic_Params.ReturnValue;
};

// Function GearboxFramework.ActionSequence.StopAtomic
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36300])
// Parameter Info:

void UActionSequence::StopAtomic()
{
	static UFunction* uFnStopAtomic = nullptr;

	if (!uFnStopAtomic)
	{
		uFnStopAtomic = UFunction::FindFunction("Function GearboxFramework.ActionSequence.StopAtomic");
	}

	UActionSequence_execStopAtomic_Params StopAtomic_Params;
	memset(&StopAtomic_Params, 0, sizeof(StopAtomic_Params));

	uFnStopAtomic->iNative = 0;
	uFnStopAtomic->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnStopAtomic, &StopAtomic_Params, nullptr);
	uFnStopAtomic->FunctionFlags |= 0x400;
	uFnStopAtomic->iNative = 36300;
};

// Function GearboxFramework.ActionSequence.StartAtomic
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36249])
// Parameter Info:

void UActionSequence::StartAtomic()
{
	static UFunction* uFnStartAtomic = nullptr;

	if (!uFnStartAtomic)
	{
		uFnStartAtomic = UFunction::FindFunction("Function GearboxFramework.ActionSequence.StartAtomic");
	}

	UActionSequence_execStartAtomic_Params StartAtomic_Params;
	memset(&StartAtomic_Params, 0, sizeof(StartAtomic_Params));

	uFnStartAtomic->iNative = 0;
	uFnStartAtomic->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnStartAtomic, &StartAtomic_Params, nullptr);
	uFnStartAtomic->FunctionFlags |= 0x400;
	uFnStartAtomic->iNative = 36249;
};

// Function GearboxFramework.ActionSequencePawn.IsValidTeleportLocation
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34701])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FVector&          TestLoc                        (CPF_Parm)
// bool                           bCheckStaticCollision          (CPF_Parm)

bool UActionSequencePawn::IsValidTeleportLocation(const struct FVector& TestLoc, bool bCheckStaticCollision)
{
	static UFunction* uFnIsValidTeleportLocation = nullptr;

	if (!uFnIsValidTeleportLocation)
	{
		uFnIsValidTeleportLocation = UFunction::FindFunction("Function GearboxFramework.ActionSequencePawn.IsValidTeleportLocation");
	}

	UActionSequencePawn_execIsValidTeleportLocation_Params IsValidTeleportLocation_Params;
	memset(&IsValidTeleportLocation_Params, 0, sizeof(IsValidTeleportLocation_Params));
	memcpy_s(&IsValidTeleportLocation_Params.TestLoc, sizeof(IsValidTeleportLocation_Params.TestLoc), &TestLoc, sizeof(TestLoc));
	IsValidTeleportLocation_Params.bCheckStaticCollision = bCheckStaticCollision;

	uFnIsValidTeleportLocation->iNative = 0;
	uFnIsValidTeleportLocation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsValidTeleportLocation, &IsValidTeleportLocation_Params, nullptr);
	uFnIsValidTeleportLocation->FunctionFlags |= 0x400;
	uFnIsValidTeleportLocation->iNative = 34701;

	return IsValidTeleportLocation_Params.ReturnValue;
};

// Function GearboxFramework.ActionSequencePawn.Teleport
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[1365])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FVector&          TeleportLoc                    (CPF_Parm)
// bool                           bCheckWorldCollision           (CPF_Parm)

bool UActionSequencePawn::Teleport(const struct FVector& TeleportLoc, bool bCheckWorldCollision)
{
	static UFunction* uFnTeleport = nullptr;

	if (!uFnTeleport)
	{
		uFnTeleport = UFunction::FindFunction("Function GearboxFramework.ActionSequencePawn.Teleport");
	}

	UActionSequencePawn_execTeleport_Params Teleport_Params;
	memset(&Teleport_Params, 0, sizeof(Teleport_Params));
	memcpy_s(&Teleport_Params.TeleportLoc, sizeof(Teleport_Params.TeleportLoc), &TeleportLoc, sizeof(TeleportLoc));
	Teleport_Params.bCheckWorldCollision = bCheckWorldCollision;

	uFnTeleport->iNative = 0;
	uFnTeleport->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnTeleport, &Teleport_Params, nullptr);
	uFnTeleport->FunctionFlags |= 0x400;
	uFnTeleport->iNative = 1365;

	return Teleport_Params.ReturnValue;
};

// Function GearboxFramework.ActionSequencePawn.SetPawnMovementSpeed
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35917])
// Parameter Info:
// EDefaultStance                 NewPawnMovementSpeed           (CPF_Parm)

void UActionSequencePawn::SetPawnMovementSpeed(EDefaultStance NewPawnMovementSpeed)
{
	static UFunction* uFnSetPawnMovementSpeed = nullptr;

	if (!uFnSetPawnMovementSpeed)
	{
		uFnSetPawnMovementSpeed = UFunction::FindFunction("Function GearboxFramework.ActionSequencePawn.SetPawnMovementSpeed");
	}

	UActionSequencePawn_execSetPawnMovementSpeed_Params SetPawnMovementSpeed_Params;
	memset(&SetPawnMovementSpeed_Params, 0, sizeof(SetPawnMovementSpeed_Params));
	memcpy_s(&SetPawnMovementSpeed_Params.NewPawnMovementSpeed, sizeof(SetPawnMovementSpeed_Params.NewPawnMovementSpeed), &NewPawnMovementSpeed, sizeof(NewPawnMovementSpeed));

	uFnSetPawnMovementSpeed->iNative = 0;
	uFnSetPawnMovementSpeed->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetPawnMovementSpeed, &SetPawnMovementSpeed_Params, nullptr);
	uFnSetPawnMovementSpeed->FunctionFlags |= 0x400;
	uFnSetPawnMovementSpeed->iNative = 35917;
};

// Function GearboxFramework.ActionSequencePawn.SetDefaultStanceName
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35894])
// Parameter Info:
// const struct FName&            InDefaultStanceName            (CPF_Parm)

void UActionSequencePawn::SetDefaultStanceName(const struct FName& InDefaultStanceName)
{
	static UFunction* uFnSetDefaultStanceName = nullptr;

	if (!uFnSetDefaultStanceName)
	{
		uFnSetDefaultStanceName = UFunction::FindFunction("Function GearboxFramework.ActionSequencePawn.SetDefaultStanceName");
	}

	UActionSequencePawn_execSetDefaultStanceName_Params SetDefaultStanceName_Params;
	memset(&SetDefaultStanceName_Params, 0, sizeof(SetDefaultStanceName_Params));
	memcpy_s(&SetDefaultStanceName_Params.InDefaultStanceName, sizeof(SetDefaultStanceName_Params.InDefaultStanceName), &InDefaultStanceName, sizeof(InDefaultStanceName));

	uFnSetDefaultStanceName->iNative = 0;
	uFnSetDefaultStanceName->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetDefaultStanceName, &SetDefaultStanceName_Params, nullptr);
	uFnSetDefaultStanceName->FunctionFlags |= 0x400;
	uFnSetDefaultStanceName->iNative = 35894;
};

// Function GearboxFramework.ActionSequencePawn.GetMoveStyle
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34134])
// Parameter Info:
// EMoveStyle                     ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

EMoveStyle UActionSequencePawn::GetMoveStyle()
{
	static UFunction* uFnGetMoveStyle = nullptr;

	if (!uFnGetMoveStyle)
	{
		uFnGetMoveStyle = UFunction::FindFunction("Function GearboxFramework.ActionSequencePawn.GetMoveStyle");
	}

	UActionSequencePawn_execGetMoveStyle_Params GetMoveStyle_Params;
	memset(&GetMoveStyle_Params, 0, sizeof(GetMoveStyle_Params));

	uFnGetMoveStyle->iNative = 0;
	uFnGetMoveStyle->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetMoveStyle, &GetMoveStyle_Params, nullptr);
	uFnGetMoveStyle->FunctionFlags |= 0x400;
	uFnGetMoveStyle->iNative = 34134;

	return GetMoveStyle_Params.ReturnValue;
};

// Function GearboxFramework.ActionSequencePawn.SetCloakOverride
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[35890])
// Parameter Info:
// ECloakOverride                 InOverride                     (CPF_Parm)
// bool                           bImmediate                     (CPF_OptionalParm | CPF_Parm)

void UActionSequencePawn::SetCloakOverride(ECloakOverride InOverride, bool bImmediate)
{
	static UFunction* uFnSetCloakOverride = nullptr;

	if (!uFnSetCloakOverride)
	{
		uFnSetCloakOverride = UFunction::FindFunction("Function GearboxFramework.ActionSequencePawn.SetCloakOverride");
	}

	UActionSequencePawn_execSetCloakOverride_Params SetCloakOverride_Params;
	memset(&SetCloakOverride_Params, 0, sizeof(SetCloakOverride_Params));
	memcpy_s(&SetCloakOverride_Params.InOverride, sizeof(SetCloakOverride_Params.InOverride), &InOverride, sizeof(InOverride));
	SetCloakOverride_Params.bImmediate = bImmediate;

	uFnSetCloakOverride->iNative = 0;
	uFnSetCloakOverride->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetCloakOverride, &SetCloakOverride_Params, nullptr);
	uFnSetCloakOverride->FunctionFlags |= 0x400;
	uFnSetCloakOverride->iNative = 35890;
};

// Function GearboxFramework.ActionSequencePawn.CheckCloaked
// [0x00024408] (FUNC_Latent | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[32725])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FName&            CloakState                     (CPF_Parm)
// bool                           bOnlyWaitForAnims              (CPF_OptionalParm | CPF_Parm)

bool UActionSequencePawn::CheckCloaked(const struct FName& CloakState, bool bOnlyWaitForAnims)
{
	static UFunction* uFnCheckCloaked = nullptr;

	if (!uFnCheckCloaked)
	{
		uFnCheckCloaked = UFunction::FindFunction("Function GearboxFramework.ActionSequencePawn.CheckCloaked");
	}

	UActionSequencePawn_execCheckCloaked_Params CheckCloaked_Params;
	memset(&CheckCloaked_Params, 0, sizeof(CheckCloaked_Params));
	memcpy_s(&CheckCloaked_Params.CloakState, sizeof(CheckCloaked_Params.CloakState), &CloakState, sizeof(CloakState));
	CheckCloaked_Params.bOnlyWaitForAnims = bOnlyWaitForAnims;

	uFnCheckCloaked->iNative = 0;
	uFnCheckCloaked->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCheckCloaked, &CheckCloaked_Params, nullptr);
	uFnCheckCloaked->FunctionFlags |= 0x400;
	uFnCheckCloaked->iNative = 32725;

	return CheckCloaked_Params.ReturnValue;
};

// Function GearboxFramework.ActionSequencePawn.PlaySpecialMove
// [0x00024408] (FUNC_Latent | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[35481])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpecialMoveDefinition*  SpecialMove                    (CPF_Parm)
// float                          PlayRateScale                  (CPF_OptionalParm | CPF_Parm)
// float                          Duration                       (CPF_OptionalParm | CPF_Parm)
// const struct FName&            CallbackName                   (CPF_OptionalParm | CPF_Parm)
// class UObject*                 CallbackObject                 (CPF_OptionalParm | CPF_Parm)
// class UObject*                 Data                           (CPF_OptionalParm | CPF_Parm)

bool UActionSequencePawn::PlaySpecialMove(class USpecialMoveDefinition* SpecialMove, float PlayRateScale, float Duration, const struct FName& CallbackName, class UObject* CallbackObject, class UObject* Data)
{
	static UFunction* uFnPlaySpecialMove = nullptr;

	if (!uFnPlaySpecialMove)
	{
		uFnPlaySpecialMove = UFunction::FindFunction("Function GearboxFramework.ActionSequencePawn.PlaySpecialMove");
	}

	UActionSequencePawn_execPlaySpecialMove_Params PlaySpecialMove_Params;
	memset(&PlaySpecialMove_Params, 0, sizeof(PlaySpecialMove_Params));
	memcpy_s(&PlaySpecialMove_Params.SpecialMove, sizeof(PlaySpecialMove_Params.SpecialMove), &SpecialMove, sizeof(SpecialMove));
	memcpy_s(&PlaySpecialMove_Params.PlayRateScale, sizeof(PlaySpecialMove_Params.PlayRateScale), &PlayRateScale, sizeof(PlayRateScale));
	memcpy_s(&PlaySpecialMove_Params.Duration, sizeof(PlaySpecialMove_Params.Duration), &Duration, sizeof(Duration));
	memcpy_s(&PlaySpecialMove_Params.CallbackName, sizeof(PlaySpecialMove_Params.CallbackName), &CallbackName, sizeof(CallbackName));
	memcpy_s(&PlaySpecialMove_Params.CallbackObject, sizeof(PlaySpecialMove_Params.CallbackObject), &CallbackObject, sizeof(CallbackObject));
	memcpy_s(&PlaySpecialMove_Params.Data, sizeof(PlaySpecialMove_Params.Data), &Data, sizeof(Data));

	uFnPlaySpecialMove->iNative = 0;
	uFnPlaySpecialMove->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPlaySpecialMove, &PlaySpecialMove_Params, nullptr);
	uFnPlaySpecialMove->FunctionFlags |= 0x400;
	uFnPlaySpecialMove->iNative = 35481;

	return PlaySpecialMove_Params.ReturnValue;
};

// Function GearboxFramework.ActionSequencePawn.WaitForPawnToStop
// [0x00020409] (FUNC_Final | FUNC_Latent | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36725])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UActionSequencePawn::WaitForPawnToStop()
{
	static UFunction* uFnWaitForPawnToStop = nullptr;

	if (!uFnWaitForPawnToStop)
	{
		uFnWaitForPawnToStop = UFunction::FindFunction("Function GearboxFramework.ActionSequencePawn.WaitForPawnToStop");
	}

	UActionSequencePawn_execWaitForPawnToStop_Params WaitForPawnToStop_Params;
	memset(&WaitForPawnToStop_Params, 0, sizeof(WaitForPawnToStop_Params));

	uFnWaitForPawnToStop->iNative = 0;
	uFnWaitForPawnToStop->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnWaitForPawnToStop, &WaitForPawnToStop_Params, nullptr);
	uFnWaitForPawnToStop->FunctionFlags |= 0x400;
	uFnWaitForPawnToStop->iNative = 36725;

	return WaitForPawnToStop_Params.ReturnValue;
};

// Function GearboxFramework.ActionSequencePawn.StopMovement
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36306])
// Parameter Info:

void UActionSequencePawn::StopMovement()
{
	static UFunction* uFnStopMovement = nullptr;

	if (!uFnStopMovement)
	{
		uFnStopMovement = UFunction::FindFunction("Function GearboxFramework.ActionSequencePawn.StopMovement");
	}

	UActionSequencePawn_execStopMovement_Params StopMovement_Params;
	memset(&StopMovement_Params, 0, sizeof(StopMovement_Params));

	uFnStopMovement->iNative = 0;
	uFnStopMovement->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnStopMovement, &StopMovement_Params, nullptr);
	uFnStopMovement->FunctionFlags |= 0x400;
	uFnStopMovement->iNative = 36306;
};

// Function GearboxFramework.ActionSequencePawn.FinishedPathFollowing
// [0x00020C02] (FUNC_Defined | FUNC_Native | FUNC_Event | FUNC_Public | FUNC_AllFlags) (iNative[2483])
// Parameter Info:

void UActionSequencePawn::eventFinishedPathFollowing()
{
	static UFunction* uFnFinishedPathFollowing = nullptr;

	if (!uFnFinishedPathFollowing)
	{
		uFnFinishedPathFollowing = UFunction::FindFunction("Function GearboxFramework.ActionSequencePawn.FinishedPathFollowing");
	}

	UActionSequencePawn_eventFinishedPathFollowing_Params FinishedPathFollowing_Params;
	memset(&FinishedPathFollowing_Params, 0, sizeof(FinishedPathFollowing_Params));

	uFnFinishedPathFollowing->iNative = 0;
	uFnFinishedPathFollowing->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnFinishedPathFollowing, &FinishedPathFollowing_Params, nullptr);
	uFnFinishedPathFollowing->FunctionFlags |= 0x400;
	uFnFinishedPathFollowing->iNative = 2483;
};

// Function GearboxFramework.ActionSequencePawn.FinishedPathFinding
// [0x00020C02] (FUNC_Defined | FUNC_Native | FUNC_Event | FUNC_Public | FUNC_AllFlags) (iNative[2484])
// Parameter Info:

void UActionSequencePawn::eventFinishedPathFinding()
{
	static UFunction* uFnFinishedPathFinding = nullptr;

	if (!uFnFinishedPathFinding)
	{
		uFnFinishedPathFinding = UFunction::FindFunction("Function GearboxFramework.ActionSequencePawn.FinishedPathFinding");
	}

	UActionSequencePawn_eventFinishedPathFinding_Params FinishedPathFinding_Params;
	memset(&FinishedPathFinding_Params, 0, sizeof(FinishedPathFinding_Params));

	uFnFinishedPathFinding->iNative = 0;
	uFnFinishedPathFinding->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnFinishedPathFinding, &FinishedPathFinding_Params, nullptr);
	uFnFinishedPathFinding->FunctionFlags |= 0x400;
	uFnFinishedPathFinding->iNative = 2484;
};

// Function GearboxFramework.ActionSequencePawn.CreateCustomPath
// [0x00420C02] (FUNC_Defined | FUNC_Native | FUNC_Event | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[2485])
// Parameter Info:
// ECustomPathResult              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FPathRequestData        Request                        (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

ECustomPathResult UActionSequencePawn::eventCreateCustomPath(struct FPathRequestData& Request)
{
	static UFunction* uFnCreateCustomPath = nullptr;

	if (!uFnCreateCustomPath)
	{
		uFnCreateCustomPath = UFunction::FindFunction("Function GearboxFramework.ActionSequencePawn.CreateCustomPath");
	}

	UActionSequencePawn_eventCreateCustomPath_Params CreateCustomPath_Params;
	memset(&CreateCustomPath_Params, 0, sizeof(CreateCustomPath_Params));
	memcpy_s(&CreateCustomPath_Params.Request, sizeof(CreateCustomPath_Params.Request), &Request, sizeof(Request));

	uFnCreateCustomPath->iNative = 0;
	uFnCreateCustomPath->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCreateCustomPath, &CreateCustomPath_Params, nullptr);
	uFnCreateCustomPath->FunctionFlags |= 0x400;
	uFnCreateCustomPath->iNative = 2485;

	memcpy_s(&Request, sizeof(Request), &CreateCustomPath_Params.Request, sizeof(CreateCustomPath_Params.Request));

	return CreateCustomPath_Params.ReturnValue;
};

// Function GearboxFramework.ActionSequencePawn.PathRequestCustom
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35378])
// Parameter Info:

void UActionSequencePawn::PathRequestCustom()
{
	static UFunction* uFnPathRequestCustom = nullptr;

	if (!uFnPathRequestCustom)
	{
		uFnPathRequestCustom = UFunction::FindFunction("Function GearboxFramework.ActionSequencePawn.PathRequestCustom");
	}

	UActionSequencePawn_execPathRequestCustom_Params PathRequestCustom_Params;
	memset(&PathRequestCustom_Params, 0, sizeof(PathRequestCustom_Params));

	uFnPathRequestCustom->iNative = 0;
	uFnPathRequestCustom->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPathRequestCustom, &PathRequestCustom_Params, nullptr);
	uFnPathRequestCustom->FunctionFlags |= 0x400;
	uFnPathRequestCustom->iNative = 35378;
};

// Function GearboxFramework.ActionSequencePawn.PathToCustom
// [0x00020408] (FUNC_Latent | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35383])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UActionSequencePawn::PathToCustom()
{
	static UFunction* uFnPathToCustom = nullptr;

	if (!uFnPathToCustom)
	{
		uFnPathToCustom = UFunction::FindFunction("Function GearboxFramework.ActionSequencePawn.PathToCustom");
	}

	UActionSequencePawn_execPathToCustom_Params PathToCustom_Params;
	memset(&PathToCustom_Params, 0, sizeof(PathToCustom_Params));

	uFnPathToCustom->iNative = 0;
	uFnPathToCustom->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPathToCustom, &PathToCustom_Params, nullptr);
	uFnPathToCustom->FunctionFlags |= 0x400;
	uFnPathToCustom->iNative = 35383;

	return PathToCustom_Params.ReturnValue;
};

// Function GearboxFramework.ActionSequencePawn.BuildPathCostModifiers
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32552])
// Parameter Info:

void UActionSequencePawn::BuildPathCostModifiers()
{
	static UFunction* uFnBuildPathCostModifiers = nullptr;

	if (!uFnBuildPathCostModifiers)
	{
		uFnBuildPathCostModifiers = UFunction::FindFunction("Function GearboxFramework.ActionSequencePawn.BuildPathCostModifiers");
	}

	UActionSequencePawn_execBuildPathCostModifiers_Params BuildPathCostModifiers_Params;
	memset(&BuildPathCostModifiers_Params, 0, sizeof(BuildPathCostModifiers_Params));

	uFnBuildPathCostModifiers->iNative = 0;
	uFnBuildPathCostModifiers->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnBuildPathCostModifiers, &BuildPathCostModifiers_Params, nullptr);
	uFnBuildPathCostModifiers->FunctionFlags |= 0x400;
	uFnBuildPathCostModifiers->iNative = 32552;
};

// Function GearboxFramework.ActionSequencePawn.PathRequestConstrained
// [0x00424401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35377])
// Parameter Info:
// bool                           bSearch                        (CPF_Parm)
// class AActor*                  GoalActor                      (CPF_OptionalParm | CPF_Parm)
// const struct FVector&          GoalLoc                        (CPF_OptionalParm | CPF_Parm)
// class TArray<class UGBXPathConstraint*> Constraints                    (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UActionSequencePawn::PathRequestConstrained(bool bSearch, class AActor* GoalActor, const struct FVector& GoalLoc, class TArray<class UGBXPathConstraint*>& Constraints)
{
	static UFunction* uFnPathRequestConstrained = nullptr;

	if (!uFnPathRequestConstrained)
	{
		uFnPathRequestConstrained = UFunction::FindFunction("Function GearboxFramework.ActionSequencePawn.PathRequestConstrained");
	}

	UActionSequencePawn_execPathRequestConstrained_Params PathRequestConstrained_Params;
	memset(&PathRequestConstrained_Params, 0, sizeof(PathRequestConstrained_Params));
	PathRequestConstrained_Params.bSearch = bSearch;
	memcpy_s(&PathRequestConstrained_Params.GoalActor, sizeof(PathRequestConstrained_Params.GoalActor), &GoalActor, sizeof(GoalActor));
	memcpy_s(&PathRequestConstrained_Params.GoalLoc, sizeof(PathRequestConstrained_Params.GoalLoc), &GoalLoc, sizeof(GoalLoc));
	memcpy_s(&PathRequestConstrained_Params.Constraints, sizeof(PathRequestConstrained_Params.Constraints), &Constraints, sizeof(Constraints));

	uFnPathRequestConstrained->iNative = 0;
	uFnPathRequestConstrained->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPathRequestConstrained, &PathRequestConstrained_Params, nullptr);
	uFnPathRequestConstrained->FunctionFlags |= 0x400;
	uFnPathRequestConstrained->iNative = 35377;

	memcpy_s(&Constraints, sizeof(Constraints), &PathRequestConstrained_Params.Constraints, sizeof(PathRequestConstrained_Params.Constraints));
};

// Function GearboxFramework.ActionSequencePawn.PathToConstrained
// [0x00424408] (FUNC_Latent | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35382])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// bool                           bSearch                        (CPF_Parm)
// class AActor*                  GoalActor                      (CPF_OptionalParm | CPF_Parm)
// const struct FVector&          GoalLoc                        (CPF_OptionalParm | CPF_Parm)
// class TArray<class UGBXPathConstraint*> Constraints                    (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UActionSequencePawn::PathToConstrained(bool bSearch, class AActor* GoalActor, const struct FVector& GoalLoc, class TArray<class UGBXPathConstraint*>& Constraints)
{
	static UFunction* uFnPathToConstrained = nullptr;

	if (!uFnPathToConstrained)
	{
		uFnPathToConstrained = UFunction::FindFunction("Function GearboxFramework.ActionSequencePawn.PathToConstrained");
	}

	UActionSequencePawn_execPathToConstrained_Params PathToConstrained_Params;
	memset(&PathToConstrained_Params, 0, sizeof(PathToConstrained_Params));
	PathToConstrained_Params.bSearch = bSearch;
	memcpy_s(&PathToConstrained_Params.GoalActor, sizeof(PathToConstrained_Params.GoalActor), &GoalActor, sizeof(GoalActor));
	memcpy_s(&PathToConstrained_Params.GoalLoc, sizeof(PathToConstrained_Params.GoalLoc), &GoalLoc, sizeof(GoalLoc));
	memcpy_s(&PathToConstrained_Params.Constraints, sizeof(PathToConstrained_Params.Constraints), &Constraints, sizeof(Constraints));

	uFnPathToConstrained->iNative = 0;
	uFnPathToConstrained->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPathToConstrained, &PathToConstrained_Params, nullptr);
	uFnPathToConstrained->FunctionFlags |= 0x400;
	uFnPathToConstrained->iNative = 35382;

	memcpy_s(&Constraints, sizeof(Constraints), &PathToConstrained_Params.Constraints, sizeof(PathToConstrained_Params.Constraints));

	return PathToConstrained_Params.ReturnValue;
};

// Function GearboxFramework.ActionSequencePawn.PathRequestLocation
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[35380])
// Parameter Info:
// const struct FVector&          GoalLoc                        (CPF_Parm)
// float                          ReachTolerance                 (CPF_OptionalParm | CPF_Parm)

void UActionSequencePawn::PathRequestLocation(const struct FVector& GoalLoc, float ReachTolerance)
{
	static UFunction* uFnPathRequestLocation = nullptr;

	if (!uFnPathRequestLocation)
	{
		uFnPathRequestLocation = UFunction::FindFunction("Function GearboxFramework.ActionSequencePawn.PathRequestLocation");
	}

	UActionSequencePawn_execPathRequestLocation_Params PathRequestLocation_Params;
	memset(&PathRequestLocation_Params, 0, sizeof(PathRequestLocation_Params));
	memcpy_s(&PathRequestLocation_Params.GoalLoc, sizeof(PathRequestLocation_Params.GoalLoc), &GoalLoc, sizeof(GoalLoc));
	memcpy_s(&PathRequestLocation_Params.ReachTolerance, sizeof(PathRequestLocation_Params.ReachTolerance), &ReachTolerance, sizeof(ReachTolerance));

	uFnPathRequestLocation->iNative = 0;
	uFnPathRequestLocation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPathRequestLocation, &PathRequestLocation_Params, nullptr);
	uFnPathRequestLocation->FunctionFlags |= 0x400;
	uFnPathRequestLocation->iNative = 35380;
};

// Function GearboxFramework.ActionSequencePawn.PathToLocation
// [0x00024408] (FUNC_Latent | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[35384])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FVector&          GoalLoc                        (CPF_Parm)
// float                          ReachTolerance                 (CPF_OptionalParm | CPF_Parm)

bool UActionSequencePawn::PathToLocation(const struct FVector& GoalLoc, float ReachTolerance)
{
	static UFunction* uFnPathToLocation = nullptr;

	if (!uFnPathToLocation)
	{
		uFnPathToLocation = UFunction::FindFunction("Function GearboxFramework.ActionSequencePawn.PathToLocation");
	}

	UActionSequencePawn_execPathToLocation_Params PathToLocation_Params;
	memset(&PathToLocation_Params, 0, sizeof(PathToLocation_Params));
	memcpy_s(&PathToLocation_Params.GoalLoc, sizeof(PathToLocation_Params.GoalLoc), &GoalLoc, sizeof(GoalLoc));
	memcpy_s(&PathToLocation_Params.ReachTolerance, sizeof(PathToLocation_Params.ReachTolerance), &ReachTolerance, sizeof(ReachTolerance));

	uFnPathToLocation->iNative = 0;
	uFnPathToLocation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPathToLocation, &PathToLocation_Params, nullptr);
	uFnPathToLocation->FunctionFlags |= 0x400;
	uFnPathToLocation->iNative = 35384;

	return PathToLocation_Params.ReturnValue;
};

// Function GearboxFramework.ActionSequencePawn.PathRequestActor
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[35375])
// Parameter Info:
// class AActor*                  GoalActor                      (CPF_Parm)
// float                          ReachTolerance                 (CPF_OptionalParm | CPF_Parm)

void UActionSequencePawn::PathRequestActor(class AActor* GoalActor, float ReachTolerance)
{
	static UFunction* uFnPathRequestActor = nullptr;

	if (!uFnPathRequestActor)
	{
		uFnPathRequestActor = UFunction::FindFunction("Function GearboxFramework.ActionSequencePawn.PathRequestActor");
	}

	UActionSequencePawn_execPathRequestActor_Params PathRequestActor_Params;
	memset(&PathRequestActor_Params, 0, sizeof(PathRequestActor_Params));
	memcpy_s(&PathRequestActor_Params.GoalActor, sizeof(PathRequestActor_Params.GoalActor), &GoalActor, sizeof(GoalActor));
	memcpy_s(&PathRequestActor_Params.ReachTolerance, sizeof(PathRequestActor_Params.ReachTolerance), &ReachTolerance, sizeof(ReachTolerance));

	uFnPathRequestActor->iNative = 0;
	uFnPathRequestActor->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPathRequestActor, &PathRequestActor_Params, nullptr);
	uFnPathRequestActor->FunctionFlags |= 0x400;
	uFnPathRequestActor->iNative = 35375;
};

// Function GearboxFramework.ActionSequencePawn.PathToActor
// [0x00024408] (FUNC_Latent | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[35381])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AActor*                  GoalActor                      (CPF_Parm)
// float                          ReachTolerance                 (CPF_OptionalParm | CPF_Parm)

bool UActionSequencePawn::PathToActor(class AActor* GoalActor, float ReachTolerance)
{
	static UFunction* uFnPathToActor = nullptr;

	if (!uFnPathToActor)
	{
		uFnPathToActor = UFunction::FindFunction("Function GearboxFramework.ActionSequencePawn.PathToActor");
	}

	UActionSequencePawn_execPathToActor_Params PathToActor_Params;
	memset(&PathToActor_Params, 0, sizeof(PathToActor_Params));
	memcpy_s(&PathToActor_Params.GoalActor, sizeof(PathToActor_Params.GoalActor), &GoalActor, sizeof(GoalActor));
	memcpy_s(&PathToActor_Params.ReachTolerance, sizeof(PathToActor_Params.ReachTolerance), &ReachTolerance, sizeof(ReachTolerance));

	uFnPathToActor->iNative = 0;
	uFnPathToActor->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPathToActor, &PathToActor_Params, nullptr);
	uFnPathToActor->FunctionFlags |= 0x400;
	uFnPathToActor->iNative = 35381;

	return PathToActor_Params.ReturnValue;
};

// Function GearboxFramework.ActionSequencePawn.SetPathing
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35915])
// Parameter Info:
// bool                           bIsPathing                     (CPF_Parm)

void UActionSequencePawn::SetPathing(bool bIsPathing)
{
	static UFunction* uFnSetPathing = nullptr;

	if (!uFnSetPathing)
	{
		uFnSetPathing = UFunction::FindFunction("Function GearboxFramework.ActionSequencePawn.SetPathing");
	}

	UActionSequencePawn_execSetPathing_Params SetPathing_Params;
	memset(&SetPathing_Params, 0, sizeof(SetPathing_Params));
	SetPathing_Params.bIsPathing = bIsPathing;

	uFnSetPathing->iNative = 0;
	uFnSetPathing->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetPathing, &SetPathing_Params, nullptr);
	uFnSetPathing->FunctionFlags |= 0x400;
	uFnSetPathing->iNative = 35915;
};

// Function GearboxFramework.ActionSequencePawn.PathRequestClear
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35376])
// Parameter Info:

void UActionSequencePawn::PathRequestClear()
{
	static UFunction* uFnPathRequestClear = nullptr;

	if (!uFnPathRequestClear)
	{
		uFnPathRequestClear = UFunction::FindFunction("Function GearboxFramework.ActionSequencePawn.PathRequestClear");
	}

	UActionSequencePawn_execPathRequestClear_Params PathRequestClear_Params;
	memset(&PathRequestClear_Params, 0, sizeof(PathRequestClear_Params));

	uFnPathRequestClear->iNative = 0;
	uFnPathRequestClear->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPathRequestClear, &PathRequestClear_Params, nullptr);
	uFnPathRequestClear->FunctionFlags |= 0x400;
	uFnPathRequestClear->iNative = 35376;
};

// Function GearboxFramework.ActionSequencePawn.IsPathing
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34678])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UActionSequencePawn::IsPathing()
{
	static UFunction* uFnIsPathing = nullptr;

	if (!uFnIsPathing)
	{
		uFnIsPathing = UFunction::FindFunction("Function GearboxFramework.ActionSequencePawn.IsPathing");
	}

	UActionSequencePawn_execIsPathing_Params IsPathing_Params;
	memset(&IsPathing_Params, 0, sizeof(IsPathing_Params));

	uFnIsPathing->iNative = 0;
	uFnIsPathing->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsPathing, &IsPathing_Params, nullptr);
	uFnIsPathing->FunctionFlags |= 0x400;
	uFnIsPathing->iNative = 34678;

	return IsPathing_Params.ReturnValue;
};

// Function GearboxFramework.ActionSequencePawn.Path
// [0x00020408] (FUNC_Latent | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[27184])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UActionSequencePawn::Path()
{
	static UFunction* uFnPath = nullptr;

	if (!uFnPath)
	{
		uFnPath = UFunction::FindFunction("Function GearboxFramework.ActionSequencePawn.Path");
	}

	UActionSequencePawn_execPath_Params Path_Params;
	memset(&Path_Params, 0, sizeof(Path_Params));

	uFnPath->iNative = 0;
	uFnPath->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPath, &Path_Params, nullptr);
	uFnPath->FunctionFlags |= 0x400;
	uFnPath->iNative = 27184;

	return Path_Params.ReturnValue;
};

// Function GearboxFramework.ActionSequencePawn.LocationReachedPathRequest
// [0x00024400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[34858])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FVector&          TestLoc                        (CPF_Parm)
// const struct FInfluencePointRef& InfPoint                       (CPF_OptionalParm | CPF_Parm)

bool UActionSequencePawn::LocationReachedPathRequest(const struct FVector& TestLoc, const struct FInfluencePointRef& InfPoint)
{
	static UFunction* uFnLocationReachedPathRequest = nullptr;

	if (!uFnLocationReachedPathRequest)
	{
		uFnLocationReachedPathRequest = UFunction::FindFunction("Function GearboxFramework.ActionSequencePawn.LocationReachedPathRequest");
	}

	UActionSequencePawn_execLocationReachedPathRequest_Params LocationReachedPathRequest_Params;
	memset(&LocationReachedPathRequest_Params, 0, sizeof(LocationReachedPathRequest_Params));
	memcpy_s(&LocationReachedPathRequest_Params.TestLoc, sizeof(LocationReachedPathRequest_Params.TestLoc), &TestLoc, sizeof(TestLoc));
	memcpy_s(&LocationReachedPathRequest_Params.InfPoint, sizeof(LocationReachedPathRequest_Params.InfPoint), &InfPoint, sizeof(InfPoint));

	uFnLocationReachedPathRequest->iNative = 0;
	uFnLocationReachedPathRequest->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnLocationReachedPathRequest, &LocationReachedPathRequest_Params, nullptr);
	uFnLocationReachedPathRequest->FunctionFlags |= 0x400;
	uFnLocationReachedPathRequest->iNative = 34858;

	return LocationReachedPathRequest_Params.ReturnValue;
};

// Function GearboxFramework.ActionSequencePawn.ReachedPathRequest
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35606])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UActionSequencePawn::ReachedPathRequest()
{
	static UFunction* uFnReachedPathRequest = nullptr;

	if (!uFnReachedPathRequest)
	{
		uFnReachedPathRequest = UFunction::FindFunction("Function GearboxFramework.ActionSequencePawn.ReachedPathRequest");
	}

	UActionSequencePawn_execReachedPathRequest_Params ReachedPathRequest_Params;
	memset(&ReachedPathRequest_Params, 0, sizeof(ReachedPathRequest_Params));

	uFnReachedPathRequest->iNative = 0;
	uFnReachedPathRequest->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnReachedPathRequest, &ReachedPathRequest_Params, nullptr);
	uFnReachedPathRequest->FunctionFlags |= 0x400;
	uFnReachedPathRequest->iNative = 35606;

	return ReachedPathRequest_Params.ReturnValue;
};

// Function GearboxFramework.ActionSequencePawn.PathIsValid
// [0x00424400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35368])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FPathRequestData        Request                        (CPF_OptionalParm | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UActionSequencePawn::PathIsValid(struct FPathRequestData& Request)
{
	static UFunction* uFnPathIsValid = nullptr;

	if (!uFnPathIsValid)
	{
		uFnPathIsValid = UFunction::FindFunction("Function GearboxFramework.ActionSequencePawn.PathIsValid");
	}

	UActionSequencePawn_execPathIsValid_Params PathIsValid_Params;
	memset(&PathIsValid_Params, 0, sizeof(PathIsValid_Params));
	memcpy_s(&PathIsValid_Params.Request, sizeof(PathIsValid_Params.Request), &Request, sizeof(Request));

	uFnPathIsValid->iNative = 0;
	uFnPathIsValid->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPathIsValid, &PathIsValid_Params, nullptr);
	uFnPathIsValid->FunctionFlags |= 0x400;
	uFnPathIsValid->iNative = 35368;

	memcpy_s(&Request, sizeof(Request), &PathIsValid_Params.Request, sizeof(PathIsValid_Params.Request));

	return PathIsValid_Params.ReturnValue;
};

// Function GearboxFramework.ActionSequencePawn.SetPathRequestGoal
// [0x00424401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35916])
// Parameter Info:
// class AActor*                  GoalActor                      (CPF_OptionalParm | CPF_Parm)
// const struct FVector&          GoalLocation                   (CPF_OptionalParm | CPF_Parm)
// struct FPathRequestData        Request                        (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UActionSequencePawn::SetPathRequestGoal(class AActor* GoalActor, const struct FVector& GoalLocation, struct FPathRequestData& Request)
{
	static UFunction* uFnSetPathRequestGoal = nullptr;

	if (!uFnSetPathRequestGoal)
	{
		uFnSetPathRequestGoal = UFunction::FindFunction("Function GearboxFramework.ActionSequencePawn.SetPathRequestGoal");
	}

	UActionSequencePawn_execSetPathRequestGoal_Params SetPathRequestGoal_Params;
	memset(&SetPathRequestGoal_Params, 0, sizeof(SetPathRequestGoal_Params));
	memcpy_s(&SetPathRequestGoal_Params.GoalActor, sizeof(SetPathRequestGoal_Params.GoalActor), &GoalActor, sizeof(GoalActor));
	memcpy_s(&SetPathRequestGoal_Params.GoalLocation, sizeof(SetPathRequestGoal_Params.GoalLocation), &GoalLocation, sizeof(GoalLocation));
	memcpy_s(&SetPathRequestGoal_Params.Request, sizeof(SetPathRequestGoal_Params.Request), &Request, sizeof(Request));

	uFnSetPathRequestGoal->iNative = 0;
	uFnSetPathRequestGoal->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetPathRequestGoal, &SetPathRequestGoal_Params, nullptr);
	uFnSetPathRequestGoal->FunctionFlags |= 0x400;
	uFnSetPathRequestGoal->iNative = 35916;

	memcpy_s(&Request, sizeof(Request), &SetPathRequestGoal_Params.Request, sizeof(SetPathRequestGoal_Params.Request));
};

// Function GearboxFramework.ActionSequencePawn.GetPathDestination
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34168])
// Parameter Info:
// struct FVector                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FVector UActionSequencePawn::GetPathDestination()
{
	static UFunction* uFnGetPathDestination = nullptr;

	if (!uFnGetPathDestination)
	{
		uFnGetPathDestination = UFunction::FindFunction("Function GearboxFramework.ActionSequencePawn.GetPathDestination");
	}

	UActionSequencePawn_execGetPathDestination_Params GetPathDestination_Params;
	memset(&GetPathDestination_Params, 0, sizeof(GetPathDestination_Params));

	uFnGetPathDestination->iNative = 0;
	uFnGetPathDestination->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetPathDestination, &GetPathDestination_Params, nullptr);
	uFnGetPathDestination->FunctionFlags |= 0x400;
	uFnGetPathDestination->iNative = 34168;

	return GetPathDestination_Params.ReturnValue;
};

// Function GearboxFramework.ActionSequencePawn.GetPathRequestGoal
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34169])
// Parameter Info:
// struct FVector                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FVector UActionSequencePawn::GetPathRequestGoal()
{
	static UFunction* uFnGetPathRequestGoal = nullptr;

	if (!uFnGetPathRequestGoal)
	{
		uFnGetPathRequestGoal = UFunction::FindFunction("Function GearboxFramework.ActionSequencePawn.GetPathRequestGoal");
	}

	UActionSequencePawn_execGetPathRequestGoal_Params GetPathRequestGoal_Params;
	memset(&GetPathRequestGoal_Params, 0, sizeof(GetPathRequestGoal_Params));

	uFnGetPathRequestGoal->iNative = 0;
	uFnGetPathRequestGoal->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetPathRequestGoal, &GetPathRequestGoal_Params, nullptr);
	uFnGetPathRequestGoal->FunctionFlags |= 0x400;
	uFnGetPathRequestGoal->iNative = 34169;

	return GetPathRequestGoal_Params.ReturnValue;
};

// Function GearboxFramework.ActionSequencePawn.Stop
// [0x00020C00] (FUNC_Native | FUNC_Event | FUNC_Public | FUNC_AllFlags) (iNative[623])
// Parameter Info:

void UActionSequencePawn::eventStop()
{
	static UFunction* uFnStop = nullptr;

	if (!uFnStop)
	{
		uFnStop = UFunction::FindFunction("Function GearboxFramework.ActionSequencePawn.Stop");
	}

	UActionSequencePawn_eventStop_Params Stop_Params;
	memset(&Stop_Params, 0, sizeof(Stop_Params));

	uFnStop->iNative = 0;
	uFnStop->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnStop, &Stop_Params, nullptr);
	uFnStop->FunctionFlags |= 0x400;
	uFnStop->iNative = 623;
};

// Function GearboxFramework.ActionSequencePawn.Start
// [0x00020C00] (FUNC_Native | FUNC_Event | FUNC_Public | FUNC_AllFlags) (iNative[14797])
// Parameter Info:

void UActionSequencePawn::eventStart()
{
	static UFunction* uFnStart = nullptr;

	if (!uFnStart)
	{
		uFnStart = UFunction::FindFunction("Function GearboxFramework.ActionSequencePawn.Start");
	}

	UActionSequencePawn_eventStart_Params Start_Params;
	memset(&Start_Params, 0, sizeof(Start_Params));

	uFnStart->iNative = 0;
	uFnStart->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnStart, &Start_Params, nullptr);
	uFnStart->FunctionFlags |= 0x400;
	uFnStart->iNative = 14797;
};

// Function GearboxFramework.ActionSequencePawn.Init
// [0x00020C00] (FUNC_Native | FUNC_Event | FUNC_Public | FUNC_AllFlags) (iNative[762])
// Parameter Info:

void UActionSequencePawn::eventInit()
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function GearboxFramework.ActionSequencePawn.Init");
	}

	UActionSequencePawn_eventInit_Params Init_Params;
	memset(&Init_Params, 0, sizeof(Init_Params));

	uFnInit->iNative = 0;
	uFnInit->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInit, &Init_Params, nullptr);
	uFnInit->FunctionFlags |= 0x400;
	uFnInit->iNative = 762;
};

// Function GearboxFramework.Action_Companion.GoToTeleportState
// [0x00020402] (FUNC_Defined | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2452])
// Parameter Info:

void UAction_Companion::GoToTeleportState()
{
	static UFunction* uFnGoToTeleportState = nullptr;

	if (!uFnGoToTeleportState)
	{
		uFnGoToTeleportState = UFunction::FindFunction("Function GearboxFramework.Action_Companion.GoToTeleportState");
	}

	UAction_Companion_execGoToTeleportState_Params GoToTeleportState_Params;
	memset(&GoToTeleportState_Params, 0, sizeof(GoToTeleportState_Params));

	uFnGoToTeleportState->iNative = 0;
	uFnGoToTeleportState->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGoToTeleportState, &GoToTeleportState_Params, nullptr);
	uFnGoToTeleportState->FunctionFlags |= 0x400;
	uFnGoToTeleportState->iNative = 2452;
};

// Function GearboxFramework.Action_Companion.CheckState
// [0x00020402] (FUNC_Defined | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2453])
// Parameter Info:

void UAction_Companion::CheckState()
{
	static UFunction* uFnCheckState = nullptr;

	if (!uFnCheckState)
	{
		uFnCheckState = UFunction::FindFunction("Function GearboxFramework.Action_Companion.CheckState");
	}

	UAction_Companion_execCheckState_Params CheckState_Params;
	memset(&CheckState_Params, 0, sizeof(CheckState_Params));

	uFnCheckState->iNative = 0;
	uFnCheckState->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCheckState, &CheckState_Params, nullptr);
	uFnCheckState->FunctionFlags |= 0x400;
	uFnCheckState->iNative = 2453;
};

// Function GearboxFramework.Action_Dodge.IsDodging
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34657])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UAction_Dodge::IsDodging()
{
	static UFunction* uFnIsDodging = nullptr;

	if (!uFnIsDodging)
	{
		uFnIsDodging = UFunction::FindFunction("Function GearboxFramework.Action_Dodge.IsDodging");
	}

	UAction_Dodge_execIsDodging_Params IsDodging_Params;
	memset(&IsDodging_Params, 0, sizeof(IsDodging_Params));

	uFnIsDodging->iNative = 0;
	uFnIsDodging->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsDodging, &IsDodging_Params, nullptr);
	uFnIsDodging->FunctionFlags |= 0x400;
	uFnIsDodging->iNative = 34657;

	return IsDodging_Params.ReturnValue;
};

// Function GearboxFramework.Action_Dodge.Start
// [0x00020C00] (FUNC_Native | FUNC_Event | FUNC_Public | FUNC_AllFlags) (iNative[14797])
// Parameter Info:

void UAction_Dodge::eventStart()
{
	static UFunction* uFnStart = nullptr;

	if (!uFnStart)
	{
		uFnStart = UFunction::FindFunction("Function GearboxFramework.Action_Dodge.Start");
	}

	UAction_Dodge_eventStart_Params Start_Params;
	memset(&Start_Params, 0, sizeof(Start_Params));

	uFnStart->iNative = 0;
	uFnStart->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnStart, &Start_Params, nullptr);
	uFnStart->FunctionFlags |= 0x400;
	uFnStart->iNative = 14797;
};

// Function GearboxFramework.Action_Dodge.CanRun
// [0x00020C00] (FUNC_Native | FUNC_Event | FUNC_Public | FUNC_AllFlags) (iNative[14806])
// Parameter Info:
// struct FName                   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FName UAction_Dodge::eventCanRun()
{
	static UFunction* uFnCanRun = nullptr;

	if (!uFnCanRun)
	{
		uFnCanRun = UFunction::FindFunction("Function GearboxFramework.Action_Dodge.CanRun");
	}

	UAction_Dodge_eventCanRun_Params CanRun_Params;
	memset(&CanRun_Params, 0, sizeof(CanRun_Params));

	uFnCanRun->iNative = 0;
	uFnCanRun->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCanRun, &CanRun_Params, nullptr);
	uFnCanRun->FunctionFlags |= 0x400;
	uFnCanRun->iNative = 14806;

	return CanRun_Params.ReturnValue;
};

// Function GearboxFramework.Action_Dodge.Init
// [0x00020C00] (FUNC_Native | FUNC_Event | FUNC_Public | FUNC_AllFlags) (iNative[762])
// Parameter Info:

void UAction_Dodge::eventInit()
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function GearboxFramework.Action_Dodge.Init");
	}

	UAction_Dodge_eventInit_Params Init_Params;
	memset(&Init_Params, 0, sizeof(Init_Params));

	uFnInit->iNative = 0;
	uFnInit->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInit, &Init_Params, nullptr);
	uFnInit->FunctionFlags |= 0x400;
	uFnInit->iNative = 762;
};

// Function GearboxFramework.Action_FollowMoveNodes.InterruptMoveNode
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UAction_FollowMoveNodes::InterruptMoveNode()
{
	static UFunction* uFnInterruptMoveNode = nullptr;

	if (!uFnInterruptMoveNode)
	{
		uFnInterruptMoveNode = UFunction::FindFunction("Function GearboxFramework.Action_FollowMoveNodes.InterruptMoveNode");
	}

	UAction_FollowMoveNodes_execInterruptMoveNode_Params InterruptMoveNode_Params;
	memset(&InterruptMoveNode_Params, 0, sizeof(InterruptMoveNode_Params));

	this->ProcessEvent(uFnInterruptMoveNode, &InterruptMoveNode_Params, nullptr);
};

// Function GearboxFramework.Action_FollowMoveNodes.InterruptPath
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UAction_FollowMoveNodes::InterruptPath()
{
	static UFunction* uFnInterruptPath = nullptr;

	if (!uFnInterruptPath)
	{
		uFnInterruptPath = UFunction::FindFunction("Function GearboxFramework.Action_FollowMoveNodes.InterruptPath");
	}

	UAction_FollowMoveNodes_execInterruptPath_Params InterruptPath_Params;
	memset(&InterruptPath_Params, 0, sizeof(InterruptPath_Params));

	this->ProcessEvent(uFnInterruptPath, &InterruptPath_Params, nullptr);
};

// Function GearboxFramework.Action_FollowMoveNodes.ShouldFaceNodeDirection
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AGearboxAIMoveNode*      TestNode                       (CPF_Parm)

bool UAction_FollowMoveNodes::ShouldFaceNodeDirection(class AGearboxAIMoveNode* TestNode)
{
	static UFunction* uFnShouldFaceNodeDirection = nullptr;

	if (!uFnShouldFaceNodeDirection)
	{
		uFnShouldFaceNodeDirection = UFunction::FindFunction("Function GearboxFramework.Action_FollowMoveNodes.ShouldFaceNodeDirection");
	}

	UAction_FollowMoveNodes_execShouldFaceNodeDirection_Params ShouldFaceNodeDirection_Params;
	memset(&ShouldFaceNodeDirection_Params, 0, sizeof(ShouldFaceNodeDirection_Params));
	memcpy_s(&ShouldFaceNodeDirection_Params.TestNode, sizeof(ShouldFaceNodeDirection_Params.TestNode), &TestNode, sizeof(TestNode));

	this->ProcessEvent(uFnShouldFaceNodeDirection, &ShouldFaceNodeDirection_Params, nullptr);

	return ShouldFaceNodeDirection_Params.ReturnValue;
};

// Function GearboxFramework.Action_FollowMoveNodes.SetMoveNode
// [0x12020002] (FUNC_Defined | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AGearboxAIMoveNode*      NewMoveNode                    (CPF_Parm)

void UAction_FollowMoveNodes::SetMoveNode(class AGearboxAIMoveNode* NewMoveNode)
{
	static UFunction* uFnSetMoveNode = nullptr;

	if (!uFnSetMoveNode)
	{
		uFnSetMoveNode = UFunction::FindFunction("Function GearboxFramework.Action_FollowMoveNodes.SetMoveNode");
	}

	UAction_FollowMoveNodes_execSetMoveNode_Params SetMoveNode_Params;
	memset(&SetMoveNode_Params, 0, sizeof(SetMoveNode_Params));
	memcpy_s(&SetMoveNode_Params.NewMoveNode, sizeof(SetMoveNode_Params.NewMoveNode), &NewMoveNode, sizeof(NewMoveNode));

	this->ProcessEvent(uFnSetMoveNode, &SetMoveNode_Params, nullptr);
};

// Function GearboxFramework.Action_FollowMoveNodes.GetFollowNodesCloakName
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// struct FName                   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FName UAction_FollowMoveNodes::GetFollowNodesCloakName()
{
	static UFunction* uFnGetFollowNodesCloakName = nullptr;

	if (!uFnGetFollowNodesCloakName)
	{
		uFnGetFollowNodesCloakName = UFunction::FindFunction("Function GearboxFramework.Action_FollowMoveNodes.GetFollowNodesCloakName");
	}

	UAction_FollowMoveNodes_execGetFollowNodesCloakName_Params GetFollowNodesCloakName_Params;
	memset(&GetFollowNodesCloakName_Params, 0, sizeof(GetFollowNodesCloakName_Params));

	this->ProcessEvent(uFnGetFollowNodesCloakName, &GetFollowNodesCloakName_Params, nullptr);

	return GetFollowNodesCloakName_Params.ReturnValue;
};

// Function GearboxFramework.Action_FollowMoveNodes.GetMoveNode
// [0x12020002] (FUNC_Defined | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AGearboxAIMoveNode*      ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class AGearboxAIMoveNode* UAction_FollowMoveNodes::GetMoveNode()
{
	static UFunction* uFnGetMoveNode = nullptr;

	if (!uFnGetMoveNode)
	{
		uFnGetMoveNode = UFunction::FindFunction("Function GearboxFramework.Action_FollowMoveNodes.GetMoveNode");
	}

	UAction_FollowMoveNodes_execGetMoveNode_Params GetMoveNode_Params;
	memset(&GetMoveNode_Params, 0, sizeof(GetMoveNode_Params));

	this->ProcessEvent(uFnGetMoveNode, &GetMoveNode_Params, nullptr);

	return GetMoveNode_Params.ReturnValue;
};

// Function GearboxFramework.Action_FollowMoveNodes.CheckStateTransition
// [0x12020002] (FUNC_Defined | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UAction_FollowMoveNodes::CheckStateTransition()
{
	static UFunction* uFnCheckStateTransition = nullptr;

	if (!uFnCheckStateTransition)
	{
		uFnCheckStateTransition = UFunction::FindFunction("Function GearboxFramework.Action_FollowMoveNodes.CheckStateTransition");
	}

	UAction_FollowMoveNodes_execCheckStateTransition_Params CheckStateTransition_Params;
	memset(&CheckStateTransition_Params, 0, sizeof(CheckStateTransition_Params));

	this->ProcessEvent(uFnCheckStateTransition, &CheckStateTransition_Params, nullptr);
};

// Function GearboxFramework.Action_FollowMoveNodes.SetMoveFacingPolicy
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UAction_FollowMoveNodes::SetMoveFacingPolicy()
{
	static UFunction* uFnSetMoveFacingPolicy = nullptr;

	if (!uFnSetMoveFacingPolicy)
	{
		uFnSetMoveFacingPolicy = UFunction::FindFunction("Function GearboxFramework.Action_FollowMoveNodes.SetMoveFacingPolicy");
	}

	UAction_FollowMoveNodes_execSetMoveFacingPolicy_Params SetMoveFacingPolicy_Params;
	memset(&SetMoveFacingPolicy_Params, 0, sizeof(SetMoveFacingPolicy_Params));

	this->ProcessEvent(uFnSetMoveFacingPolicy, &SetMoveFacingPolicy_Params, nullptr);
};

// Function GearboxFramework.Action_FollowMoveNodes.SetMoveNodeSpeed
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UAction_FollowMoveNodes::SetMoveNodeSpeed()
{
	static UFunction* uFnSetMoveNodeSpeed = nullptr;

	if (!uFnSetMoveNodeSpeed)
	{
		uFnSetMoveNodeSpeed = UFunction::FindFunction("Function GearboxFramework.Action_FollowMoveNodes.SetMoveNodeSpeed");
	}

	UAction_FollowMoveNodes_execSetMoveNodeSpeed_Params SetMoveNodeSpeed_Params;
	memset(&SetMoveNodeSpeed_Params, 0, sizeof(SetMoveNodeSpeed_Params));

	this->ProcessEvent(uFnSetMoveNodeSpeed, &SetMoveNodeSpeed_Params, nullptr);
};

// Function GearboxFramework.Action_Patrol.FindMyPerch
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UAction_Patrol::FindMyPerch()
{
	static UFunction* uFnFindMyPerch = nullptr;

	if (!uFnFindMyPerch)
	{
		uFnFindMyPerch = UFunction::FindFunction("Function GearboxFramework.Action_Patrol.FindMyPerch");
	}

	UAction_Patrol_execFindMyPerch_Params FindMyPerch_Params;
	memset(&FindMyPerch_Params, 0, sizeof(FindMyPerch_Params));

	this->ProcessEvent(uFnFindMyPerch, &FindMyPerch_Params, nullptr);
};

// Function GearboxFramework.Action_Patrol.GetPatrolWaitTime
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float UAction_Patrol::GetPatrolWaitTime()
{
	static UFunction* uFnGetPatrolWaitTime = nullptr;

	if (!uFnGetPatrolWaitTime)
	{
		uFnGetPatrolWaitTime = UFunction::FindFunction("Function GearboxFramework.Action_Patrol.GetPatrolWaitTime");
	}

	UAction_Patrol_execGetPatrolWaitTime_Params GetPatrolWaitTime_Params;
	memset(&GetPatrolWaitTime_Params, 0, sizeof(GetPatrolWaitTime_Params));

	this->ProcessEvent(uFnGetPatrolWaitTime, &GetPatrolWaitTime_Params, nullptr);

	return GetPatrolWaitTime_Params.ReturnValue;
};

// Function GearboxFramework.Action_Patrol.GetFollowNodesCloakName
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// struct FName                   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FName UAction_Patrol::GetFollowNodesCloakName()
{
	static UFunction* uFnGetFollowNodesCloakName = nullptr;

	if (!uFnGetFollowNodesCloakName)
	{
		uFnGetFollowNodesCloakName = UFunction::FindFunction("Function GearboxFramework.Action_Patrol.GetFollowNodesCloakName");
	}

	UAction_Patrol_execGetFollowNodesCloakName_Params GetFollowNodesCloakName_Params;
	memset(&GetFollowNodesCloakName_Params, 0, sizeof(GetFollowNodesCloakName_Params));

	this->ProcessEvent(uFnGetFollowNodesCloakName, &GetFollowNodesCloakName_Params, nullptr);

	return GetFollowNodesCloakName_Params.ReturnValue;
};

// Function GearboxFramework.Action_Patrol.SetMoveNode
// [0x16020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Call | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AGearboxAIMoveNode*      NewNode                        (CPF_Parm)

void UAction_Patrol::SetMoveNode(class AGearboxAIMoveNode* NewNode)
{
	static UFunction* uFnSetMoveNode = nullptr;

	if (!uFnSetMoveNode)
	{
		uFnSetMoveNode = UFunction::FindFunction("Function GearboxFramework.Action_Patrol.SetMoveNode");
	}

	UAction_Patrol_execSetMoveNode_Params SetMoveNode_Params;
	memset(&SetMoveNode_Params, 0, sizeof(SetMoveNode_Params));
	memcpy_s(&SetMoveNode_Params.NewNode, sizeof(SetMoveNode_Params.NewNode), &NewNode, sizeof(NewNode));

	this->ProcessEvent(uFnSetMoveNode, &SetMoveNode_Params, nullptr);
};

// Function GearboxFramework.Action_Patrol.GetMoveNode
// [0x16020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Call | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AGearboxAIMoveNode*      ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class AGearboxAIMoveNode* UAction_Patrol::GetMoveNode()
{
	static UFunction* uFnGetMoveNode = nullptr;

	if (!uFnGetMoveNode)
	{
		uFnGetMoveNode = UFunction::FindFunction("Function GearboxFramework.Action_Patrol.GetMoveNode");
	}

	UAction_Patrol_execGetMoveNode_Params GetMoveNode_Params;
	memset(&GetMoveNode_Params, 0, sizeof(GetMoveNode_Params));

	this->ProcessEvent(uFnGetMoveNode, &GetMoveNode_Params, nullptr);

	return GetMoveNode_Params.ReturnValue;
};

// Function GearboxFramework.Action_Patrol.SetMoveNodeSpeed
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UAction_Patrol::SetMoveNodeSpeed()
{
	static UFunction* uFnSetMoveNodeSpeed = nullptr;

	if (!uFnSetMoveNodeSpeed)
	{
		uFnSetMoveNodeSpeed = UFunction::FindFunction("Function GearboxFramework.Action_Patrol.SetMoveNodeSpeed");
	}

	UAction_Patrol_execSetMoveNodeSpeed_Params SetMoveNodeSpeed_Params;
	memset(&SetMoveNodeSpeed_Params, 0, sizeof(SetMoveNodeSpeed_Params));

	this->ProcessEvent(uFnSetMoveNodeSpeed, &SetMoveNodeSpeed_Params, nullptr);
};

// Function GearboxFramework.Action_Patrol.SetMoveFacingPolicy
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UAction_Patrol::SetMoveFacingPolicy()
{
	static UFunction* uFnSetMoveFacingPolicy = nullptr;

	if (!uFnSetMoveFacingPolicy)
	{
		uFnSetMoveFacingPolicy = UFunction::FindFunction("Function GearboxFramework.Action_Patrol.SetMoveFacingPolicy");
	}

	UAction_Patrol_execSetMoveFacingPolicy_Params SetMoveFacingPolicy_Params;
	memset(&SetMoveFacingPolicy_Params, 0, sizeof(SetMoveFacingPolicy_Params));

	this->ProcessEvent(uFnSetMoveFacingPolicy, &SetMoveFacingPolicy_Params, nullptr);
};

// Function GearboxFramework.Action_Perch.ShouldFaceNodeDirection
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AGearboxAIMoveNode*      TestNode                       (CPF_Parm)

bool UAction_Perch::ShouldFaceNodeDirection(class AGearboxAIMoveNode* TestNode)
{
	static UFunction* uFnShouldFaceNodeDirection = nullptr;

	if (!uFnShouldFaceNodeDirection)
	{
		uFnShouldFaceNodeDirection = UFunction::FindFunction("Function GearboxFramework.Action_Perch.ShouldFaceNodeDirection");
	}

	UAction_Perch_execShouldFaceNodeDirection_Params ShouldFaceNodeDirection_Params;
	memset(&ShouldFaceNodeDirection_Params, 0, sizeof(ShouldFaceNodeDirection_Params));
	memcpy_s(&ShouldFaceNodeDirection_Params.TestNode, sizeof(ShouldFaceNodeDirection_Params.TestNode), &TestNode, sizeof(TestNode));

	this->ProcessEvent(uFnShouldFaceNodeDirection, &ShouldFaceNodeDirection_Params, nullptr);

	return ShouldFaceNodeDirection_Params.ReturnValue;
};

// Function GearboxFramework.Action_Perch.SetMoveFacingPolicy
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UAction_Perch::SetMoveFacingPolicy()
{
	static UFunction* uFnSetMoveFacingPolicy = nullptr;

	if (!uFnSetMoveFacingPolicy)
	{
		uFnSetMoveFacingPolicy = UFunction::FindFunction("Function GearboxFramework.Action_Perch.SetMoveFacingPolicy");
	}

	UAction_Perch_execSetMoveFacingPolicy_Params SetMoveFacingPolicy_Params;
	memset(&SetMoveFacingPolicy_Params, 0, sizeof(SetMoveFacingPolicy_Params));

	this->ProcessEvent(uFnSetMoveFacingPolicy, &SetMoveFacingPolicy_Params, nullptr);
};

// Function GearboxFramework.Action_Perch.Start
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UAction_Perch::eventStart()
{
	static UFunction* uFnStart = nullptr;

	if (!uFnStart)
	{
		uFnStart = UFunction::FindFunction("Function GearboxFramework.Action_Perch.Start");
	}

	UAction_Perch_eventStart_Params Start_Params;
	memset(&Start_Params, 0, sizeof(Start_Params));

	this->ProcessEvent(uFnStart, &Start_Params, nullptr);
};

// Function GearboxFramework.Action_Perch.CanRun
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// struct FName                   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FName UAction_Perch::eventCanRun()
{
	static UFunction* uFnCanRun = nullptr;

	if (!uFnCanRun)
	{
		uFnCanRun = UFunction::FindFunction("Function GearboxFramework.Action_Perch.CanRun");
	}

	UAction_Perch_eventCanRun_Params CanRun_Params;
	memset(&CanRun_Params, 0, sizeof(CanRun_Params));

	this->ProcessEvent(uFnCanRun, &CanRun_Params, nullptr);

	return CanRun_Params.ReturnValue;
};

// Function GearboxFramework.Action_Scripted.SetMoveNode
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AGearboxAIMoveNode*      NewNode                        (CPF_Parm)

void UAction_Scripted::SetMoveNode(class AGearboxAIMoveNode* NewNode)
{
	static UFunction* uFnSetMoveNode = nullptr;

	if (!uFnSetMoveNode)
	{
		uFnSetMoveNode = UFunction::FindFunction("Function GearboxFramework.Action_Scripted.SetMoveNode");
	}

	UAction_Scripted_execSetMoveNode_Params SetMoveNode_Params;
	memset(&SetMoveNode_Params, 0, sizeof(SetMoveNode_Params));
	memcpy_s(&SetMoveNode_Params.NewNode, sizeof(SetMoveNode_Params.NewNode), &NewNode, sizeof(NewNode));

	this->ProcessEvent(uFnSetMoveNode, &SetMoveNode_Params, nullptr);
};

// Function GearboxFramework.Action_Scripted.GetMoveNode
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AGearboxAIMoveNode*      ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class AGearboxAIMoveNode* UAction_Scripted::GetMoveNode()
{
	static UFunction* uFnGetMoveNode = nullptr;

	if (!uFnGetMoveNode)
	{
		uFnGetMoveNode = UFunction::FindFunction("Function GearboxFramework.Action_Scripted.GetMoveNode");
	}

	UAction_Scripted_execGetMoveNode_Params GetMoveNode_Params;
	memset(&GetMoveNode_Params, 0, sizeof(GetMoveNode_Params));

	this->ProcessEvent(uFnGetMoveNode, &GetMoveNode_Params, nullptr);

	return GetMoveNode_Params.ReturnValue;
};

// Function GearboxFramework.Action_Scripted.SetMoveNodeSpeed
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UAction_Scripted::SetMoveNodeSpeed()
{
	static UFunction* uFnSetMoveNodeSpeed = nullptr;

	if (!uFnSetMoveNodeSpeed)
	{
		uFnSetMoveNodeSpeed = UFunction::FindFunction("Function GearboxFramework.Action_Scripted.SetMoveNodeSpeed");
	}

	UAction_Scripted_execSetMoveNodeSpeed_Params SetMoveNodeSpeed_Params;
	memset(&SetMoveNodeSpeed_Params, 0, sizeof(SetMoveNodeSpeed_Params));

	this->ProcessEvent(uFnSetMoveNodeSpeed, &SetMoveNodeSpeed_Params, nullptr);
};

// Function GearboxFramework.Action_Scripted.SetMoveFacingPolicy
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UAction_Scripted::SetMoveFacingPolicy()
{
	static UFunction* uFnSetMoveFacingPolicy = nullptr;

	if (!uFnSetMoveFacingPolicy)
	{
		uFnSetMoveFacingPolicy = UFunction::FindFunction("Function GearboxFramework.Action_Scripted.SetMoveFacingPolicy");
	}

	UAction_Scripted_execSetMoveFacingPolicy_Params SetMoveFacingPolicy_Params;
	memset(&SetMoveFacingPolicy_Params, 0, sizeof(SetMoveFacingPolicy_Params));

	this->ProcessEvent(uFnSetMoveFacingPolicy, &SetMoveFacingPolicy_Params, nullptr);
};

// Function GearboxFramework.Action_Scripted.ScriptedAnimFinished
// [0x12020002] (FUNC_Defined | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           bInterrupted                   (CPF_Parm)

void UAction_Scripted::ScriptedAnimFinished(bool bInterrupted)
{
	static UFunction* uFnScriptedAnimFinished = nullptr;

	if (!uFnScriptedAnimFinished)
	{
		uFnScriptedAnimFinished = UFunction::FindFunction("Function GearboxFramework.Action_Scripted.ScriptedAnimFinished");
	}

	UAction_Scripted_execScriptedAnimFinished_Params ScriptedAnimFinished_Params;
	memset(&ScriptedAnimFinished_Params, 0, sizeof(ScriptedAnimFinished_Params));
	ScriptedAnimFinished_Params.bInterrupted = bInterrupted;

	this->ProcessEvent(uFnScriptedAnimFinished, &ScriptedAnimFinished_Params, nullptr);
};

// Function GearboxFramework.Action_Scripted.ScriptedActionEnded
// [0x16020002] (FUNC_Defined | FUNC_Public | FUNC_DLLImport | FUNC_K2Call | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UAction_Scripted::ScriptedActionEnded()
{
	static UFunction* uFnScriptedActionEnded = nullptr;

	if (!uFnScriptedActionEnded)
	{
		uFnScriptedActionEnded = UFunction::FindFunction("Function GearboxFramework.Action_Scripted.ScriptedActionEnded");
	}

	UAction_Scripted_execScriptedActionEnded_Params ScriptedActionEnded_Params;
	memset(&ScriptedActionEnded_Params, 0, sizeof(ScriptedActionEnded_Params));

	this->ProcessEvent(uFnScriptedActionEnded, &ScriptedActionEnded_Params, nullptr);
};

// Function GearboxFramework.Action_Scripted.ScriptedActionStarted
// [0x16020002] (FUNC_Defined | FUNC_Public | FUNC_DLLImport | FUNC_K2Call | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UAction_Scripted::ScriptedActionStarted()
{
	static UFunction* uFnScriptedActionStarted = nullptr;

	if (!uFnScriptedActionStarted)
	{
		uFnScriptedActionStarted = UFunction::FindFunction("Function GearboxFramework.Action_Scripted.ScriptedActionStarted");
	}

	UAction_Scripted_execScriptedActionStarted_Params ScriptedActionStarted_Params;
	memset(&ScriptedActionStarted_Params, 0, sizeof(ScriptedActionStarted_Params));

	this->ProcessEvent(uFnScriptedActionStarted, &ScriptedActionStarted_Params, nullptr);
};

// Function GearboxFramework.Action_Scripted.CheckStateTransition
// [0x12020002] (FUNC_Defined | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UAction_Scripted::CheckStateTransition()
{
	static UFunction* uFnCheckStateTransition = nullptr;

	if (!uFnCheckStateTransition)
	{
		uFnCheckStateTransition = UFunction::FindFunction("Function GearboxFramework.Action_Scripted.CheckStateTransition");
	}

	UAction_Scripted_execCheckStateTransition_Params CheckStateTransition_Params;
	memset(&CheckStateTransition_Params, 0, sizeof(CheckStateTransition_Params));

	this->ProcessEvent(uFnCheckStateTransition, &CheckStateTransition_Params, nullptr);
};

// Function GearboxFramework.Action_Scripted.GetDesiredStateName
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// struct FName                   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FName UAction_Scripted::GetDesiredStateName()
{
	static UFunction* uFnGetDesiredStateName = nullptr;

	if (!uFnGetDesiredStateName)
	{
		uFnGetDesiredStateName = UFunction::FindFunction("Function GearboxFramework.Action_Scripted.GetDesiredStateName");
	}

	UAction_Scripted_execGetDesiredStateName_Params GetDesiredStateName_Params;
	memset(&GetDesiredStateName_Params, 0, sizeof(GetDesiredStateName_Params));

	this->ProcessEvent(uFnGetDesiredStateName, &GetDesiredStateName_Params, nullptr);

	return GetDesiredStateName_Params.ReturnValue;
};

// Function GearboxFramework.Action_Scripted.Start
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UAction_Scripted::eventStart()
{
	static UFunction* uFnStart = nullptr;

	if (!uFnStart)
	{
		uFnStart = UFunction::FindFunction("Function GearboxFramework.Action_Scripted.Start");
	}

	UAction_Scripted_eventStart_Params Start_Params;
	memset(&Start_Params, 0, sizeof(Start_Params));

	this->ProcessEvent(uFnStart, &Start_Params, nullptr);
};

// Function GearboxFramework.Action_Scripted.CanRun
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// struct FName                   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FName UAction_Scripted::eventCanRun()
{
	static UFunction* uFnCanRun = nullptr;

	if (!uFnCanRun)
	{
		uFnCanRun = UFunction::FindFunction("Function GearboxFramework.Action_Scripted.CanRun");
	}

	UAction_Scripted_eventCanRun_Params CanRun_Params;
	memset(&CanRun_Params, 0, sizeof(CanRun_Params));

	this->ProcessEvent(uFnCanRun, &CanRun_Params, nullptr);

	return CanRun_Params.ReturnValue;
};

// Function GearboxFramework.Action_MoveTo.GetMoveLocation
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// struct FVector                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FVector UAction_MoveTo::GetMoveLocation()
{
	static UFunction* uFnGetMoveLocation = nullptr;

	if (!uFnGetMoveLocation)
	{
		uFnGetMoveLocation = UFunction::FindFunction("Function GearboxFramework.Action_MoveTo.GetMoveLocation");
	}

	UAction_MoveTo_execGetMoveLocation_Params GetMoveLocation_Params;
	memset(&GetMoveLocation_Params, 0, sizeof(GetMoveLocation_Params));

	this->ProcessEvent(uFnGetMoveLocation, &GetMoveLocation_Params, nullptr);

	return GetMoveLocation_Params.ReturnValue;
};

// Function GearboxFramework.Action_MoveTo.Start
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UAction_MoveTo::eventStart()
{
	static UFunction* uFnStart = nullptr;

	if (!uFnStart)
	{
		uFnStart = UFunction::FindFunction("Function GearboxFramework.Action_MoveTo.Start");
	}

	UAction_MoveTo_eventStart_Params Start_Params;
	memset(&Start_Params, 0, sizeof(Start_Params));

	this->ProcessEvent(uFnStart, &Start_Params, nullptr);
};

// Function GearboxFramework.Action_Search.SetSearchLocation
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UAction_Search::SetSearchLocation()
{
	static UFunction* uFnSetSearchLocation = nullptr;

	if (!uFnSetSearchLocation)
	{
		uFnSetSearchLocation = UFunction::FindFunction("Function GearboxFramework.Action_Search.SetSearchLocation");
	}

	UAction_Search_execSetSearchLocation_Params SetSearchLocation_Params;
	memset(&SetSearchLocation_Params, 0, sizeof(SetSearchLocation_Params));

	this->ProcessEvent(uFnSetSearchLocation, &SetSearchLocation_Params, nullptr);

	return SetSearchLocation_Params.ReturnValue;
};

// Function GearboxFramework.Action_Search.FinishedLooking
// [0x12020002] (FUNC_Defined | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UAction_Search::FinishedLooking()
{
	static UFunction* uFnFinishedLooking = nullptr;

	if (!uFnFinishedLooking)
	{
		uFnFinishedLooking = UFunction::FindFunction("Function GearboxFramework.Action_Search.FinishedLooking");
	}

	UAction_Search_execFinishedLooking_Params FinishedLooking_Params;
	memset(&FinishedLooking_Params, 0, sizeof(FinishedLooking_Params));

	this->ProcessEvent(uFnFinishedLooking, &FinishedLooking_Params, nullptr);
};

// Function GearboxFramework.Action_Search.FinishedSearching
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UAction_Search::FinishedSearching()
{
	static UFunction* uFnFinishedSearching = nullptr;

	if (!uFnFinishedSearching)
	{
		uFnFinishedSearching = UFunction::FindFunction("Function GearboxFramework.Action_Search.FinishedSearching");
	}

	UAction_Search_execFinishedSearching_Params FinishedSearching_Params;
	memset(&FinishedSearching_Params, 0, sizeof(FinishedSearching_Params));

	this->ProcessEvent(uFnFinishedSearching, &FinishedSearching_Params, nullptr);
};

// Function GearboxFramework.Action_Search.CheckStateTransition
// [0x12020002] (FUNC_Defined | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UAction_Search::CheckStateTransition()
{
	static UFunction* uFnCheckStateTransition = nullptr;

	if (!uFnCheckStateTransition)
	{
		uFnCheckStateTransition = UFunction::FindFunction("Function GearboxFramework.Action_Search.CheckStateTransition");
	}

	UAction_Search_execCheckStateTransition_Params CheckStateTransition_Params;
	memset(&CheckStateTransition_Params, 0, sizeof(CheckStateTransition_Params));

	this->ProcessEvent(uFnCheckStateTransition, &CheckStateTransition_Params, nullptr);
};

// Function GearboxFramework.Action_Search.UpdateSearchInfo
// [0x12020002] (FUNC_Defined | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UAction_Search::UpdateSearchInfo()
{
	static UFunction* uFnUpdateSearchInfo = nullptr;

	if (!uFnUpdateSearchInfo)
	{
		uFnUpdateSearchInfo = UFunction::FindFunction("Function GearboxFramework.Action_Search.UpdateSearchInfo");
	}

	UAction_Search_execUpdateSearchInfo_Params UpdateSearchInfo_Params;
	memset(&UpdateSearchInfo_Params, 0, sizeof(UpdateSearchInfo_Params));

	this->ProcessEvent(uFnUpdateSearchInfo, &UpdateSearchInfo_Params, nullptr);
};

// Function GearboxFramework.Action_Search.Stop
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UAction_Search::eventStop()
{
	static UFunction* uFnStop = nullptr;

	if (!uFnStop)
	{
		uFnStop = UFunction::FindFunction("Function GearboxFramework.Action_Search.Stop");
	}

	UAction_Search_eventStop_Params Stop_Params;
	memset(&Stop_Params, 0, sizeof(Stop_Params));

	this->ProcessEvent(uFnStop, &Stop_Params, nullptr);
};

// Function GearboxFramework.Action_Search.Start
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UAction_Search::eventStart()
{
	static UFunction* uFnStart = nullptr;

	if (!uFnStart)
	{
		uFnStart = UFunction::FindFunction("Function GearboxFramework.Action_Search.Start");
	}

	UAction_Search_eventStart_Params Start_Params;
	memset(&Start_Params, 0, sizeof(Start_Params));

	this->ProcessEvent(uFnStart, &Start_Params, nullptr);
};

// Function GearboxFramework.Action_Search.ActivateEvent
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FName&            EventName                      (CPF_Parm)

void UAction_Search::eventActivateEvent(const struct FName& EventName)
{
	static UFunction* uFnActivateEvent = nullptr;

	if (!uFnActivateEvent)
	{
		uFnActivateEvent = UFunction::FindFunction("Function GearboxFramework.Action_Search.ActivateEvent");
	}

	UAction_Search_eventActivateEvent_Params ActivateEvent_Params;
	memset(&ActivateEvent_Params, 0, sizeof(ActivateEvent_Params));
	memcpy_s(&ActivateEvent_Params.EventName, sizeof(ActivateEvent_Params.EventName), &EventName, sizeof(EventName));

	this->ProcessEvent(uFnActivateEvent, &ActivateEvent_Params, nullptr);
};

// Function GearboxFramework.Action_Search.CanRun
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// struct FName                   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FName UAction_Search::eventCanRun()
{
	static UFunction* uFnCanRun = nullptr;

	if (!uFnCanRun)
	{
		uFnCanRun = UFunction::FindFunction("Function GearboxFramework.Action_Search.CanRun");
	}

	UAction_Search_eventCanRun_Params CanRun_Params;
	memset(&CanRun_Params, 0, sizeof(CanRun_Params));

	this->ProcessEvent(uFnCanRun, &CanRun_Params, nullptr);

	return CanRun_Params.ReturnValue;
};

// Function GearboxFramework.ActorAttributeContextResolver.GetAttributeContext
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UAttributeDefinitionBase* Attribute                      (CPF_Parm)
// class UObject*                 AttributeContextSource         (CPF_Parm)

class UObject* UActorAttributeContextResolver::GetAttributeContext(class UAttributeDefinitionBase* Attribute, class UObject* AttributeContextSource)
{
	static UFunction* uFnGetAttributeContext = nullptr;

	if (!uFnGetAttributeContext)
	{
		uFnGetAttributeContext = UFunction::FindFunction("Function GearboxFramework.ActorAttributeContextResolver.GetAttributeContext");
	}

	UActorAttributeContextResolver_execGetAttributeContext_Params GetAttributeContext_Params;
	memset(&GetAttributeContext_Params, 0, sizeof(GetAttributeContext_Params));
	memcpy_s(&GetAttributeContext_Params.Attribute, sizeof(GetAttributeContext_Params.Attribute), &Attribute, sizeof(Attribute));
	memcpy_s(&GetAttributeContext_Params.AttributeContextSource, sizeof(GetAttributeContext_Params.AttributeContextSource), &AttributeContextSource, sizeof(AttributeContextSource));

	this->ProcessEvent(uFnGetAttributeContext, &GetAttributeContext_Params, nullptr);

	return GetAttributeContext_Params.ReturnValue;
};

// Function GearboxFramework.AIComponent.GetAIRangeTime
// [0x00022400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[34039])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FAIRange&         InRange                        (CPF_Parm)

float UAIComponent::GetAIRangeTime(const struct FAIRange& InRange)
{
	static UFunction* uFnGetAIRangeTime = nullptr;

	if (!uFnGetAIRangeTime)
	{
		uFnGetAIRangeTime = UFunction::FindFunction("Function GearboxFramework.AIComponent.GetAIRangeTime");
	}

	UAIComponent_execGetAIRangeTime_Params GetAIRangeTime_Params;
	memset(&GetAIRangeTime_Params, 0, sizeof(GetAIRangeTime_Params));
	memcpy_s(&GetAIRangeTime_Params.InRange, sizeof(GetAIRangeTime_Params.InRange), &InRange, sizeof(InRange));

	uFnGetAIRangeTime->iNative = 0;
	uFnGetAIRangeTime->FunctionFlags &= ~0x400;
	UAIComponent::StaticClass()->ProcessEvent(uFnGetAIRangeTime, &GetAIRangeTime_Params, nullptr);
	uFnGetAIRangeTime->FunctionFlags |= 0x400;
	uFnGetAIRangeTime->iNative = 34039;

	return GetAIRangeTime_Params.ReturnValue;
};

// Function GearboxFramework.AIComponent.DecrementConstraintDebugIndex
// [0x00022400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[33096])
// Parameter Info:

void UAIComponent::DecrementConstraintDebugIndex()
{
	static UFunction* uFnDecrementConstraintDebugIndex = nullptr;

	if (!uFnDecrementConstraintDebugIndex)
	{
		uFnDecrementConstraintDebugIndex = UFunction::FindFunction("Function GearboxFramework.AIComponent.DecrementConstraintDebugIndex");
	}

	UAIComponent_execDecrementConstraintDebugIndex_Params DecrementConstraintDebugIndex_Params;
	memset(&DecrementConstraintDebugIndex_Params, 0, sizeof(DecrementConstraintDebugIndex_Params));

	uFnDecrementConstraintDebugIndex->iNative = 0;
	uFnDecrementConstraintDebugIndex->FunctionFlags &= ~0x400;
	UAIComponent::StaticClass()->ProcessEvent(uFnDecrementConstraintDebugIndex, &DecrementConstraintDebugIndex_Params, nullptr);
	uFnDecrementConstraintDebugIndex->FunctionFlags |= 0x400;
	uFnDecrementConstraintDebugIndex->iNative = 33096;
};

// Function GearboxFramework.AIComponent.IncrementConstraintDebugIndex
// [0x00022400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[34517])
// Parameter Info:

void UAIComponent::IncrementConstraintDebugIndex()
{
	static UFunction* uFnIncrementConstraintDebugIndex = nullptr;

	if (!uFnIncrementConstraintDebugIndex)
	{
		uFnIncrementConstraintDebugIndex = UFunction::FindFunction("Function GearboxFramework.AIComponent.IncrementConstraintDebugIndex");
	}

	UAIComponent_execIncrementConstraintDebugIndex_Params IncrementConstraintDebugIndex_Params;
	memset(&IncrementConstraintDebugIndex_Params, 0, sizeof(IncrementConstraintDebugIndex_Params));

	uFnIncrementConstraintDebugIndex->iNative = 0;
	uFnIncrementConstraintDebugIndex->FunctionFlags &= ~0x400;
	UAIComponent::StaticClass()->ProcessEvent(uFnIncrementConstraintDebugIndex, &IncrementConstraintDebugIndex_Params, nullptr);
	uFnIncrementConstraintDebugIndex->FunctionFlags |= 0x400;
	uFnIncrementConstraintDebugIndex->iNative = 34517;
};

// Function GearboxFramework.AIComponent.GetPointScore
// [0x00424401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34182])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// bool                           bRanged                        (CPF_Parm)
// const struct FInfluencePointRef& InfPoint                       (CPF_Parm)
// class AActor*                  Target                         (CPF_OptionalParm | CPF_Parm)
// bool                           bInitialize                    (CPF_OptionalParm | CPF_Parm)
// struct FPathRequestData        Request                        (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// struct FVector                 TestLoc                        (CPF_Const | CPF_Parm | CPF_OutParm)

float UAIComponent::GetPointScore(bool bRanged, const struct FInfluencePointRef& InfPoint, class AActor* Target, bool bInitialize, struct FPathRequestData& Request, struct FVector& TestLoc)
{
	static UFunction* uFnGetPointScore = nullptr;

	if (!uFnGetPointScore)
	{
		uFnGetPointScore = UFunction::FindFunction("Function GearboxFramework.AIComponent.GetPointScore");
	}

	UAIComponent_execGetPointScore_Params GetPointScore_Params;
	memset(&GetPointScore_Params, 0, sizeof(GetPointScore_Params));
	GetPointScore_Params.bRanged = bRanged;
	memcpy_s(&GetPointScore_Params.InfPoint, sizeof(GetPointScore_Params.InfPoint), &InfPoint, sizeof(InfPoint));
	memcpy_s(&GetPointScore_Params.Target, sizeof(GetPointScore_Params.Target), &Target, sizeof(Target));
	GetPointScore_Params.bInitialize = bInitialize;
	memcpy_s(&GetPointScore_Params.Request, sizeof(GetPointScore_Params.Request), &Request, sizeof(Request));
	memcpy_s(&GetPointScore_Params.TestLoc, sizeof(GetPointScore_Params.TestLoc), &TestLoc, sizeof(TestLoc));

	uFnGetPointScore->iNative = 0;
	uFnGetPointScore->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetPointScore, &GetPointScore_Params, nullptr);
	uFnGetPointScore->FunctionFlags |= 0x400;
	uFnGetPointScore->iNative = 34182;

	memcpy_s(&Request, sizeof(Request), &GetPointScore_Params.Request, sizeof(GetPointScore_Params.Request));
	memcpy_s(&TestLoc, sizeof(TestLoc), &GetPointScore_Params.TestLoc, sizeof(GetPointScore_Params.TestLoc));

	return GetPointScore_Params.ReturnValue;
};

// Function GearboxFramework.AIComponent.GetLocationScore
// [0x00424401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34129])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// bool                           bRanged                        (CPF_Parm)
// class AActor*                  Target                         (CPF_OptionalParm | CPF_Parm)
// bool                           bInitialize                    (CPF_OptionalParm | CPF_Parm)
// struct FPathRequestData        Request                        (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// struct FVector                 TestLoc                        (CPF_Const | CPF_Parm | CPF_OutParm)

float UAIComponent::GetLocationScore(bool bRanged, class AActor* Target, bool bInitialize, struct FPathRequestData& Request, struct FVector& TestLoc)
{
	static UFunction* uFnGetLocationScore = nullptr;

	if (!uFnGetLocationScore)
	{
		uFnGetLocationScore = UFunction::FindFunction("Function GearboxFramework.AIComponent.GetLocationScore");
	}

	UAIComponent_execGetLocationScore_Params GetLocationScore_Params;
	memset(&GetLocationScore_Params, 0, sizeof(GetLocationScore_Params));
	GetLocationScore_Params.bRanged = bRanged;
	memcpy_s(&GetLocationScore_Params.Target, sizeof(GetLocationScore_Params.Target), &Target, sizeof(Target));
	GetLocationScore_Params.bInitialize = bInitialize;
	memcpy_s(&GetLocationScore_Params.Request, sizeof(GetLocationScore_Params.Request), &Request, sizeof(Request));
	memcpy_s(&GetLocationScore_Params.TestLoc, sizeof(GetLocationScore_Params.TestLoc), &TestLoc, sizeof(TestLoc));

	uFnGetLocationScore->iNative = 0;
	uFnGetLocationScore->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetLocationScore, &GetLocationScore_Params, nullptr);
	uFnGetLocationScore->FunctionFlags |= 0x400;
	uFnGetLocationScore->iNative = 34129;

	memcpy_s(&Request, sizeof(Request), &GetLocationScore_Params.Request, sizeof(GetLocationScore_Params.Request));
	memcpy_s(&TestLoc, sizeof(TestLoc), &GetLocationScore_Params.TestLoc, sizeof(GetLocationScore_Params.TestLoc));

	return GetLocationScore_Params.ReturnValue;
};

// Function GearboxFramework.AIComponent.WithinValidSpace
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[36751])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FInfluencePointRef& InfPoint                       (CPF_Parm)
// bool                           bRanged                        (CPF_Parm)
// struct FVector                 TestLoc                        (CPF_Const | CPF_Parm | CPF_OutParm)

bool UAIComponent::WithinValidSpace(const struct FInfluencePointRef& InfPoint, bool bRanged, struct FVector& TestLoc)
{
	static UFunction* uFnWithinValidSpace = nullptr;

	if (!uFnWithinValidSpace)
	{
		uFnWithinValidSpace = UFunction::FindFunction("Function GearboxFramework.AIComponent.WithinValidSpace");
	}

	UAIComponent_execWithinValidSpace_Params WithinValidSpace_Params;
	memset(&WithinValidSpace_Params, 0, sizeof(WithinValidSpace_Params));
	memcpy_s(&WithinValidSpace_Params.InfPoint, sizeof(WithinValidSpace_Params.InfPoint), &InfPoint, sizeof(InfPoint));
	WithinValidSpace_Params.bRanged = bRanged;
	memcpy_s(&WithinValidSpace_Params.TestLoc, sizeof(WithinValidSpace_Params.TestLoc), &TestLoc, sizeof(TestLoc));

	uFnWithinValidSpace->iNative = 0;
	uFnWithinValidSpace->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnWithinValidSpace, &WithinValidSpace_Params, nullptr);
	uFnWithinValidSpace->FunctionFlags |= 0x400;
	uFnWithinValidSpace->iNative = 36751;

	memcpy_s(&TestLoc, sizeof(TestLoc), &WithinValidSpace_Params.TestLoc, sizeof(WithinValidSpace_Params.TestLoc));

	return WithinValidSpace_Params.ReturnValue;
};

// Function GearboxFramework.AIComponent.SetMaxInfluencePointTime
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35904])
// Parameter Info:
// float                          MaxTime                        (CPF_Parm)

void UAIComponent::SetMaxInfluencePointTime(float MaxTime)
{
	static UFunction* uFnSetMaxInfluencePointTime = nullptr;

	if (!uFnSetMaxInfluencePointTime)
	{
		uFnSetMaxInfluencePointTime = UFunction::FindFunction("Function GearboxFramework.AIComponent.SetMaxInfluencePointTime");
	}

	UAIComponent_execSetMaxInfluencePointTime_Params SetMaxInfluencePointTime_Params;
	memset(&SetMaxInfluencePointTime_Params, 0, sizeof(SetMaxInfluencePointTime_Params));
	memcpy_s(&SetMaxInfluencePointTime_Params.MaxTime, sizeof(SetMaxInfluencePointTime_Params.MaxTime), &MaxTime, sizeof(MaxTime));

	uFnSetMaxInfluencePointTime->iNative = 0;
	uFnSetMaxInfluencePointTime->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetMaxInfluencePointTime, &SetMaxInfluencePointTime_Params, nullptr);
	uFnSetMaxInfluencePointTime->FunctionFlags |= 0x400;
	uFnSetMaxInfluencePointTime->iNative = 35904;
};

// Function GearboxFramework.AIComponent.GetInfluenceMap
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34112])
// Parameter Info:
// class AGBXInfluenceMap*        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class AGBXInfluenceMap* UAIComponent::GetInfluenceMap()
{
	static UFunction* uFnGetInfluenceMap = nullptr;

	if (!uFnGetInfluenceMap)
	{
		uFnGetInfluenceMap = UFunction::FindFunction("Function GearboxFramework.AIComponent.GetInfluenceMap");
	}

	UAIComponent_execGetInfluenceMap_Params GetInfluenceMap_Params;
	memset(&GetInfluenceMap_Params, 0, sizeof(GetInfluenceMap_Params));

	uFnGetInfluenceMap->iNative = 0;
	uFnGetInfluenceMap->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetInfluenceMap, &GetInfluenceMap_Params, nullptr);
	uFnGetInfluenceMap->FunctionFlags |= 0x400;
	uFnGetInfluenceMap->iNative = 34112;

	return GetInfluenceMap_Params.ReturnValue;
};

// Function GearboxFramework.AIComponent.UpdateInfluencePoint
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36616])
// Parameter Info:
// float                          DeltaTime                      (CPF_Parm)

void UAIComponent::UpdateInfluencePoint(float DeltaTime)
{
	static UFunction* uFnUpdateInfluencePoint = nullptr;

	if (!uFnUpdateInfluencePoint)
	{
		uFnUpdateInfluencePoint = UFunction::FindFunction("Function GearboxFramework.AIComponent.UpdateInfluencePoint");
	}

	UAIComponent_execUpdateInfluencePoint_Params UpdateInfluencePoint_Params;
	memset(&UpdateInfluencePoint_Params, 0, sizeof(UpdateInfluencePoint_Params));
	memcpy_s(&UpdateInfluencePoint_Params.DeltaTime, sizeof(UpdateInfluencePoint_Params.DeltaTime), &DeltaTime, sizeof(DeltaTime));

	uFnUpdateInfluencePoint->iNative = 0;
	uFnUpdateInfluencePoint->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnUpdateInfluencePoint, &UpdateInfluencePoint_Params, nullptr);
	uFnUpdateInfluencePoint->FunctionFlags |= 0x400;
	uFnUpdateInfluencePoint->iNative = 36616;
};

// Function GearboxFramework.AIComponent.InvalidateInfluencePoint
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[34635])
// Parameter Info:
// float                          InvalidTime                    (CPF_OptionalParm | CPF_Parm)

void UAIComponent::InvalidateInfluencePoint(float InvalidTime)
{
	static UFunction* uFnInvalidateInfluencePoint = nullptr;

	if (!uFnInvalidateInfluencePoint)
	{
		uFnInvalidateInfluencePoint = UFunction::FindFunction("Function GearboxFramework.AIComponent.InvalidateInfluencePoint");
	}

	UAIComponent_execInvalidateInfluencePoint_Params InvalidateInfluencePoint_Params;
	memset(&InvalidateInfluencePoint_Params, 0, sizeof(InvalidateInfluencePoint_Params));
	memcpy_s(&InvalidateInfluencePoint_Params.InvalidTime, sizeof(InvalidateInfluencePoint_Params.InvalidTime), &InvalidTime, sizeof(InvalidTime));

	uFnInvalidateInfluencePoint->iNative = 0;
	uFnInvalidateInfluencePoint->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInvalidateInfluencePoint, &InvalidateInfluencePoint_Params, nullptr);
	uFnInvalidateInfluencePoint->FunctionFlags |= 0x400;
	uFnInvalidateInfluencePoint->iNative = 34635;
};

// Function GearboxFramework.AIComponent.MarkCurrentInfluencePoint
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34882])
// Parameter Info:

void UAIComponent::MarkCurrentInfluencePoint()
{
	static UFunction* uFnMarkCurrentInfluencePoint = nullptr;

	if (!uFnMarkCurrentInfluencePoint)
	{
		uFnMarkCurrentInfluencePoint = UFunction::FindFunction("Function GearboxFramework.AIComponent.MarkCurrentInfluencePoint");
	}

	UAIComponent_execMarkCurrentInfluencePoint_Params MarkCurrentInfluencePoint_Params;
	memset(&MarkCurrentInfluencePoint_Params, 0, sizeof(MarkCurrentInfluencePoint_Params));

	uFnMarkCurrentInfluencePoint->iNative = 0;
	uFnMarkCurrentInfluencePoint->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnMarkCurrentInfluencePoint, &MarkCurrentInfluencePoint_Params, nullptr);
	uFnMarkCurrentInfluencePoint->FunctionFlags |= 0x400;
	uFnMarkCurrentInfluencePoint->iNative = 34882;
};

// Function GearboxFramework.AIComponent.CalcBestTrajectoryParams
// [0x00422400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[32645])
// Parameter Info:
// float                          LeapGravity                    (CPF_Const | CPF_Parm)
// struct FVector                 StartLoc                       (CPF_Const | CPF_Parm | CPF_OutParm)
// struct FVector                 EndLoc                         (CPF_Const | CPF_Parm | CPF_OutParm)
// float                          OutSpeed                       (CPF_Parm | CPF_OutParm)
// float                          OutAngle                       (CPF_Parm | CPF_OutParm)

void UAIComponent::CalcBestTrajectoryParams(float LeapGravity, struct FVector& StartLoc, struct FVector& EndLoc, float& OutSpeed, float& OutAngle)
{
	static UFunction* uFnCalcBestTrajectoryParams = nullptr;

	if (!uFnCalcBestTrajectoryParams)
	{
		uFnCalcBestTrajectoryParams = UFunction::FindFunction("Function GearboxFramework.AIComponent.CalcBestTrajectoryParams");
	}

	UAIComponent_execCalcBestTrajectoryParams_Params CalcBestTrajectoryParams_Params;
	memset(&CalcBestTrajectoryParams_Params, 0, sizeof(CalcBestTrajectoryParams_Params));
	memcpy_s(&CalcBestTrajectoryParams_Params.LeapGravity, sizeof(CalcBestTrajectoryParams_Params.LeapGravity), &LeapGravity, sizeof(LeapGravity));
	memcpy_s(&CalcBestTrajectoryParams_Params.StartLoc, sizeof(CalcBestTrajectoryParams_Params.StartLoc), &StartLoc, sizeof(StartLoc));
	memcpy_s(&CalcBestTrajectoryParams_Params.EndLoc, sizeof(CalcBestTrajectoryParams_Params.EndLoc), &EndLoc, sizeof(EndLoc));
	memcpy_s(&CalcBestTrajectoryParams_Params.OutSpeed, sizeof(CalcBestTrajectoryParams_Params.OutSpeed), &OutSpeed, sizeof(OutSpeed));
	memcpy_s(&CalcBestTrajectoryParams_Params.OutAngle, sizeof(CalcBestTrajectoryParams_Params.OutAngle), &OutAngle, sizeof(OutAngle));

	uFnCalcBestTrajectoryParams->iNative = 0;
	uFnCalcBestTrajectoryParams->FunctionFlags &= ~0x400;
	UAIComponent::StaticClass()->ProcessEvent(uFnCalcBestTrajectoryParams, &CalcBestTrajectoryParams_Params, nullptr);
	uFnCalcBestTrajectoryParams->FunctionFlags |= 0x400;
	uFnCalcBestTrajectoryParams->iNative = 32645;

	memcpy_s(&StartLoc, sizeof(StartLoc), &CalcBestTrajectoryParams_Params.StartLoc, sizeof(CalcBestTrajectoryParams_Params.StartLoc));
	memcpy_s(&EndLoc, sizeof(EndLoc), &CalcBestTrajectoryParams_Params.EndLoc, sizeof(CalcBestTrajectoryParams_Params.EndLoc));
	memcpy_s(&OutSpeed, sizeof(OutSpeed), &CalcBestTrajectoryParams_Params.OutSpeed, sizeof(CalcBestTrajectoryParams_Params.OutSpeed));
	memcpy_s(&OutAngle, sizeof(OutAngle), &CalcBestTrajectoryParams_Params.OutAngle, sizeof(CalcBestTrajectoryParams_Params.OutAngle));
};

// Function GearboxFramework.AIComponent.CalcTrajectoryByTime
// [0x00422400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[32649])
// Parameter Info:
// float                          LeapTime                       (CPF_Parm)
// float                          LeapGravity                    (CPF_Parm)
// struct FVector                 StartLoc                       (CPF_Const | CPF_Parm | CPF_OutParm)
// struct FVector                 EndLoc                         (CPF_Const | CPF_Parm | CPF_OutParm)
// struct FVector                 OutVelocity                    (CPF_Parm | CPF_OutParm)

void UAIComponent::CalcTrajectoryByTime(float LeapTime, float LeapGravity, struct FVector& StartLoc, struct FVector& EndLoc, struct FVector& OutVelocity)
{
	static UFunction* uFnCalcTrajectoryByTime = nullptr;

	if (!uFnCalcTrajectoryByTime)
	{
		uFnCalcTrajectoryByTime = UFunction::FindFunction("Function GearboxFramework.AIComponent.CalcTrajectoryByTime");
	}

	UAIComponent_execCalcTrajectoryByTime_Params CalcTrajectoryByTime_Params;
	memset(&CalcTrajectoryByTime_Params, 0, sizeof(CalcTrajectoryByTime_Params));
	memcpy_s(&CalcTrajectoryByTime_Params.LeapTime, sizeof(CalcTrajectoryByTime_Params.LeapTime), &LeapTime, sizeof(LeapTime));
	memcpy_s(&CalcTrajectoryByTime_Params.LeapGravity, sizeof(CalcTrajectoryByTime_Params.LeapGravity), &LeapGravity, sizeof(LeapGravity));
	memcpy_s(&CalcTrajectoryByTime_Params.StartLoc, sizeof(CalcTrajectoryByTime_Params.StartLoc), &StartLoc, sizeof(StartLoc));
	memcpy_s(&CalcTrajectoryByTime_Params.EndLoc, sizeof(CalcTrajectoryByTime_Params.EndLoc), &EndLoc, sizeof(EndLoc));
	memcpy_s(&CalcTrajectoryByTime_Params.OutVelocity, sizeof(CalcTrajectoryByTime_Params.OutVelocity), &OutVelocity, sizeof(OutVelocity));

	uFnCalcTrajectoryByTime->iNative = 0;
	uFnCalcTrajectoryByTime->FunctionFlags &= ~0x400;
	UAIComponent::StaticClass()->ProcessEvent(uFnCalcTrajectoryByTime, &CalcTrajectoryByTime_Params, nullptr);
	uFnCalcTrajectoryByTime->FunctionFlags |= 0x400;
	uFnCalcTrajectoryByTime->iNative = 32649;

	memcpy_s(&StartLoc, sizeof(StartLoc), &CalcTrajectoryByTime_Params.StartLoc, sizeof(CalcTrajectoryByTime_Params.StartLoc));
	memcpy_s(&EndLoc, sizeof(EndLoc), &CalcTrajectoryByTime_Params.EndLoc, sizeof(CalcTrajectoryByTime_Params.EndLoc));
	memcpy_s(&OutVelocity, sizeof(OutVelocity), &CalcTrajectoryByTime_Params.OutVelocity, sizeof(CalcTrajectoryByTime_Params.OutVelocity));
};

// Function GearboxFramework.AIComponent.CalcTrajectoryAtActor
// [0x00422400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[32648])
// Parameter Info:
// class AActor*                  Source                         (CPF_Parm)
// class AActor*                  Target                         (CPF_Parm)
// struct FTrajectoryData         Data                           (CPF_Const | CPF_Parm | CPF_OutParm)
// float                          OutTime                        (CPF_Parm | CPF_OutParm)
// float                          OutGravity                     (CPF_Parm | CPF_OutParm)
// struct FVector                 OutVelocity                    (CPF_Parm | CPF_OutParm)

void UAIComponent::CalcTrajectoryAtActor(class AActor* Source, class AActor* Target, struct FTrajectoryData& Data, float& OutTime, float& OutGravity, struct FVector& OutVelocity)
{
	static UFunction* uFnCalcTrajectoryAtActor = nullptr;

	if (!uFnCalcTrajectoryAtActor)
	{
		uFnCalcTrajectoryAtActor = UFunction::FindFunction("Function GearboxFramework.AIComponent.CalcTrajectoryAtActor");
	}

	UAIComponent_execCalcTrajectoryAtActor_Params CalcTrajectoryAtActor_Params;
	memset(&CalcTrajectoryAtActor_Params, 0, sizeof(CalcTrajectoryAtActor_Params));
	memcpy_s(&CalcTrajectoryAtActor_Params.Source, sizeof(CalcTrajectoryAtActor_Params.Source), &Source, sizeof(Source));
	memcpy_s(&CalcTrajectoryAtActor_Params.Target, sizeof(CalcTrajectoryAtActor_Params.Target), &Target, sizeof(Target));
	memcpy_s(&CalcTrajectoryAtActor_Params.Data, sizeof(CalcTrajectoryAtActor_Params.Data), &Data, sizeof(Data));
	memcpy_s(&CalcTrajectoryAtActor_Params.OutTime, sizeof(CalcTrajectoryAtActor_Params.OutTime), &OutTime, sizeof(OutTime));
	memcpy_s(&CalcTrajectoryAtActor_Params.OutGravity, sizeof(CalcTrajectoryAtActor_Params.OutGravity), &OutGravity, sizeof(OutGravity));
	memcpy_s(&CalcTrajectoryAtActor_Params.OutVelocity, sizeof(CalcTrajectoryAtActor_Params.OutVelocity), &OutVelocity, sizeof(OutVelocity));

	uFnCalcTrajectoryAtActor->iNative = 0;
	uFnCalcTrajectoryAtActor->FunctionFlags &= ~0x400;
	UAIComponent::StaticClass()->ProcessEvent(uFnCalcTrajectoryAtActor, &CalcTrajectoryAtActor_Params, nullptr);
	uFnCalcTrajectoryAtActor->FunctionFlags |= 0x400;
	uFnCalcTrajectoryAtActor->iNative = 32648;

	memcpy_s(&Data, sizeof(Data), &CalcTrajectoryAtActor_Params.Data, sizeof(CalcTrajectoryAtActor_Params.Data));
	memcpy_s(&OutTime, sizeof(OutTime), &CalcTrajectoryAtActor_Params.OutTime, sizeof(CalcTrajectoryAtActor_Params.OutTime));
	memcpy_s(&OutGravity, sizeof(OutGravity), &CalcTrajectoryAtActor_Params.OutGravity, sizeof(CalcTrajectoryAtActor_Params.OutGravity));
	memcpy_s(&OutVelocity, sizeof(OutVelocity), &CalcTrajectoryAtActor_Params.OutVelocity, sizeof(CalcTrajectoryAtActor_Params.OutVelocity));
};

// Function GearboxFramework.AIComponent.CalcTrajectory
// [0x00422400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[32647])
// Parameter Info:
// float                          LeapSpeed                      (CPF_Parm)
// float                          LeapAngle                      (CPF_Parm)
// struct FVector                 StartLoc                       (CPF_Const | CPF_Parm | CPF_OutParm)
// struct FVector                 EndLoc                         (CPF_Const | CPF_Parm | CPF_OutParm)
// float                          OutTime                        (CPF_Parm | CPF_OutParm)
// float                          OutGravity                     (CPF_Parm | CPF_OutParm)
// struct FVector                 OutVelocity                    (CPF_Parm | CPF_OutParm)

void UAIComponent::CalcTrajectory(float LeapSpeed, float LeapAngle, struct FVector& StartLoc, struct FVector& EndLoc, float& OutTime, float& OutGravity, struct FVector& OutVelocity)
{
	static UFunction* uFnCalcTrajectory = nullptr;

	if (!uFnCalcTrajectory)
	{
		uFnCalcTrajectory = UFunction::FindFunction("Function GearboxFramework.AIComponent.CalcTrajectory");
	}

	UAIComponent_execCalcTrajectory_Params CalcTrajectory_Params;
	memset(&CalcTrajectory_Params, 0, sizeof(CalcTrajectory_Params));
	memcpy_s(&CalcTrajectory_Params.LeapSpeed, sizeof(CalcTrajectory_Params.LeapSpeed), &LeapSpeed, sizeof(LeapSpeed));
	memcpy_s(&CalcTrajectory_Params.LeapAngle, sizeof(CalcTrajectory_Params.LeapAngle), &LeapAngle, sizeof(LeapAngle));
	memcpy_s(&CalcTrajectory_Params.StartLoc, sizeof(CalcTrajectory_Params.StartLoc), &StartLoc, sizeof(StartLoc));
	memcpy_s(&CalcTrajectory_Params.EndLoc, sizeof(CalcTrajectory_Params.EndLoc), &EndLoc, sizeof(EndLoc));
	memcpy_s(&CalcTrajectory_Params.OutTime, sizeof(CalcTrajectory_Params.OutTime), &OutTime, sizeof(OutTime));
	memcpy_s(&CalcTrajectory_Params.OutGravity, sizeof(CalcTrajectory_Params.OutGravity), &OutGravity, sizeof(OutGravity));
	memcpy_s(&CalcTrajectory_Params.OutVelocity, sizeof(CalcTrajectory_Params.OutVelocity), &OutVelocity, sizeof(OutVelocity));

	uFnCalcTrajectory->iNative = 0;
	uFnCalcTrajectory->FunctionFlags &= ~0x400;
	UAIComponent::StaticClass()->ProcessEvent(uFnCalcTrajectory, &CalcTrajectory_Params, nullptr);
	uFnCalcTrajectory->FunctionFlags |= 0x400;
	uFnCalcTrajectory->iNative = 32647;

	memcpy_s(&StartLoc, sizeof(StartLoc), &CalcTrajectory_Params.StartLoc, sizeof(CalcTrajectory_Params.StartLoc));
	memcpy_s(&EndLoc, sizeof(EndLoc), &CalcTrajectory_Params.EndLoc, sizeof(CalcTrajectory_Params.EndLoc));
	memcpy_s(&OutTime, sizeof(OutTime), &CalcTrajectory_Params.OutTime, sizeof(CalcTrajectory_Params.OutTime));
	memcpy_s(&OutGravity, sizeof(OutGravity), &CalcTrajectory_Params.OutGravity, sizeof(CalcTrajectory_Params.OutGravity));
	memcpy_s(&OutVelocity, sizeof(OutVelocity), &CalcTrajectory_Params.OutVelocity, sizeof(CalcTrajectory_Params.OutVelocity));
};

// Function GearboxFramework.AIComponent.GetTrajectoryOffset
// [0x00022400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[34249])
// Parameter Info:
// struct FVector                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// float                          OffsetTime                     (CPF_Parm)
// float                          TotalTime                      (CPF_Parm)
// float                          Gravity                        (CPF_Parm)
// const struct FVector&          StartVelocity                  (CPF_Parm)

struct FVector UAIComponent::GetTrajectoryOffset(float OffsetTime, float TotalTime, float Gravity, const struct FVector& StartVelocity)
{
	static UFunction* uFnGetTrajectoryOffset = nullptr;

	if (!uFnGetTrajectoryOffset)
	{
		uFnGetTrajectoryOffset = UFunction::FindFunction("Function GearboxFramework.AIComponent.GetTrajectoryOffset");
	}

	UAIComponent_execGetTrajectoryOffset_Params GetTrajectoryOffset_Params;
	memset(&GetTrajectoryOffset_Params, 0, sizeof(GetTrajectoryOffset_Params));
	memcpy_s(&GetTrajectoryOffset_Params.OffsetTime, sizeof(GetTrajectoryOffset_Params.OffsetTime), &OffsetTime, sizeof(OffsetTime));
	memcpy_s(&GetTrajectoryOffset_Params.TotalTime, sizeof(GetTrajectoryOffset_Params.TotalTime), &TotalTime, sizeof(TotalTime));
	memcpy_s(&GetTrajectoryOffset_Params.Gravity, sizeof(GetTrajectoryOffset_Params.Gravity), &Gravity, sizeof(Gravity));
	memcpy_s(&GetTrajectoryOffset_Params.StartVelocity, sizeof(GetTrajectoryOffset_Params.StartVelocity), &StartVelocity, sizeof(StartVelocity));

	uFnGetTrajectoryOffset->iNative = 0;
	uFnGetTrajectoryOffset->FunctionFlags &= ~0x400;
	UAIComponent::StaticClass()->ProcessEvent(uFnGetTrajectoryOffset, &GetTrajectoryOffset_Params, nullptr);
	uFnGetTrajectoryOffset->FunctionFlags |= 0x400;
	uFnGetTrajectoryOffset->iNative = 34249;

	return GetTrajectoryOffset_Params.ReturnValue;
};

// Function GearboxFramework.AIComponent.LogDemigodHolds
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UAIComponent::LogDemigodHolds()
{
	static UFunction* uFnLogDemigodHolds = nullptr;

	if (!uFnLogDemigodHolds)
	{
		uFnLogDemigodHolds = UFunction::FindFunction("Function GearboxFramework.AIComponent.LogDemigodHolds");
	}

	UAIComponent_execLogDemigodHolds_Params LogDemigodHolds_Params;
	memset(&LogDemigodHolds_Params, 0, sizeof(LogDemigodHolds_Params));

	this->ProcessEvent(uFnLogDemigodHolds, &LogDemigodHolds_Params, nullptr);
};

// Function GearboxFramework.AIComponent.ReleaseDialog
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35648])
// Parameter Info:
// const struct FName&            HoldName                       (CPF_Parm)
// class UObject*                 Tag                            (CPF_Parm)

void UAIComponent::ReleaseDialog(const struct FName& HoldName, class UObject* Tag)
{
	static UFunction* uFnReleaseDialog = nullptr;

	if (!uFnReleaseDialog)
	{
		uFnReleaseDialog = UFunction::FindFunction("Function GearboxFramework.AIComponent.ReleaseDialog");
	}

	UAIComponent_execReleaseDialog_Params ReleaseDialog_Params;
	memset(&ReleaseDialog_Params, 0, sizeof(ReleaseDialog_Params));
	memcpy_s(&ReleaseDialog_Params.HoldName, sizeof(ReleaseDialog_Params.HoldName), &HoldName, sizeof(HoldName));
	memcpy_s(&ReleaseDialog_Params.Tag, sizeof(ReleaseDialog_Params.Tag), &Tag, sizeof(Tag));

	uFnReleaseDialog->iNative = 0;
	uFnReleaseDialog->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnReleaseDialog, &ReleaseDialog_Params, nullptr);
	uFnReleaseDialog->FunctionFlags |= 0x400;
	uFnReleaseDialog->iNative = 35648;
};

// Function GearboxFramework.AIComponent.HoldDialog
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34458])
// Parameter Info:
// const struct FName&            HoldName                       (CPF_Parm)
// class UObject*                 Tag                            (CPF_Parm)

void UAIComponent::HoldDialog(const struct FName& HoldName, class UObject* Tag)
{
	static UFunction* uFnHoldDialog = nullptr;

	if (!uFnHoldDialog)
	{
		uFnHoldDialog = UFunction::FindFunction("Function GearboxFramework.AIComponent.HoldDialog");
	}

	UAIComponent_execHoldDialog_Params HoldDialog_Params;
	memset(&HoldDialog_Params, 0, sizeof(HoldDialog_Params));
	memcpy_s(&HoldDialog_Params.HoldName, sizeof(HoldDialog_Params.HoldName), &HoldName, sizeof(HoldName));
	memcpy_s(&HoldDialog_Params.Tag, sizeof(HoldDialog_Params.Tag), &Tag, sizeof(Tag));

	uFnHoldDialog->iNative = 0;
	uFnHoldDialog->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnHoldDialog, &HoldDialog_Params, nullptr);
	uFnHoldDialog->FunctionFlags |= 0x400;
	uFnHoldDialog->iNative = 34458;
};

// Function GearboxFramework.AIComponent.DialogOnHold
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[33219])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UAIComponent::DialogOnHold()
{
	static UFunction* uFnDialogOnHold = nullptr;

	if (!uFnDialogOnHold)
	{
		uFnDialogOnHold = UFunction::FindFunction("Function GearboxFramework.AIComponent.DialogOnHold");
	}

	UAIComponent_execDialogOnHold_Params DialogOnHold_Params;
	memset(&DialogOnHold_Params, 0, sizeof(DialogOnHold_Params));

	uFnDialogOnHold->iNative = 0;
	uFnDialogOnHold->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnDialogOnHold, &DialogOnHold_Params, nullptr);
	uFnDialogOnHold->FunctionFlags |= 0x400;
	uFnDialogOnHold->iNative = 33219;

	return DialogOnHold_Params.ReturnValue;
};

// Function GearboxFramework.AIComponent.ReleaseGod
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35649])
// Parameter Info:
// const struct FName&            HoldName                       (CPF_Parm)
// class UObject*                 Tag                            (CPF_Parm)

void UAIComponent::ReleaseGod(const struct FName& HoldName, class UObject* Tag)
{
	static UFunction* uFnReleaseGod = nullptr;

	if (!uFnReleaseGod)
	{
		uFnReleaseGod = UFunction::FindFunction("Function GearboxFramework.AIComponent.ReleaseGod");
	}

	UAIComponent_execReleaseGod_Params ReleaseGod_Params;
	memset(&ReleaseGod_Params, 0, sizeof(ReleaseGod_Params));
	memcpy_s(&ReleaseGod_Params.HoldName, sizeof(ReleaseGod_Params.HoldName), &HoldName, sizeof(HoldName));
	memcpy_s(&ReleaseGod_Params.Tag, sizeof(ReleaseGod_Params.Tag), &Tag, sizeof(Tag));

	uFnReleaseGod->iNative = 0;
	uFnReleaseGod->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnReleaseGod, &ReleaseGod_Params, nullptr);
	uFnReleaseGod->FunctionFlags |= 0x400;
	uFnReleaseGod->iNative = 35649;
};

// Function GearboxFramework.AIComponent.HoldGod
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34460])
// Parameter Info:
// const struct FName&            HoldName                       (CPF_Parm)
// class UObject*                 Tag                            (CPF_Parm)

void UAIComponent::HoldGod(const struct FName& HoldName, class UObject* Tag)
{
	static UFunction* uFnHoldGod = nullptr;

	if (!uFnHoldGod)
	{
		uFnHoldGod = UFunction::FindFunction("Function GearboxFramework.AIComponent.HoldGod");
	}

	UAIComponent_execHoldGod_Params HoldGod_Params;
	memset(&HoldGod_Params, 0, sizeof(HoldGod_Params));
	memcpy_s(&HoldGod_Params.HoldName, sizeof(HoldGod_Params.HoldName), &HoldName, sizeof(HoldName));
	memcpy_s(&HoldGod_Params.Tag, sizeof(HoldGod_Params.Tag), &Tag, sizeof(Tag));

	uFnHoldGod->iNative = 0;
	uFnHoldGod->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnHoldGod, &HoldGod_Params, nullptr);
	uFnHoldGod->FunctionFlags |= 0x400;
	uFnHoldGod->iNative = 34460;
};

// Function GearboxFramework.AIComponent.GodOnHold
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34274])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UAIComponent::GodOnHold()
{
	static UFunction* uFnGodOnHold = nullptr;

	if (!uFnGodOnHold)
	{
		uFnGodOnHold = UFunction::FindFunction("Function GearboxFramework.AIComponent.GodOnHold");
	}

	UAIComponent_execGodOnHold_Params GodOnHold_Params;
	memset(&GodOnHold_Params, 0, sizeof(GodOnHold_Params));

	uFnGodOnHold->iNative = 0;
	uFnGodOnHold->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGodOnHold, &GodOnHold_Params, nullptr);
	uFnGodOnHold->FunctionFlags |= 0x400;
	uFnGodOnHold->iNative = 34274;

	return GodOnHold_Params.ReturnValue;
};

// Function GearboxFramework.AIComponent.ReleaseDemigod
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35647])
// Parameter Info:
// const struct FName&            HoldName                       (CPF_Parm)
// class UObject*                 Tag                            (CPF_Parm)

void UAIComponent::ReleaseDemigod(const struct FName& HoldName, class UObject* Tag)
{
	static UFunction* uFnReleaseDemigod = nullptr;

	if (!uFnReleaseDemigod)
	{
		uFnReleaseDemigod = UFunction::FindFunction("Function GearboxFramework.AIComponent.ReleaseDemigod");
	}

	UAIComponent_execReleaseDemigod_Params ReleaseDemigod_Params;
	memset(&ReleaseDemigod_Params, 0, sizeof(ReleaseDemigod_Params));
	memcpy_s(&ReleaseDemigod_Params.HoldName, sizeof(ReleaseDemigod_Params.HoldName), &HoldName, sizeof(HoldName));
	memcpy_s(&ReleaseDemigod_Params.Tag, sizeof(ReleaseDemigod_Params.Tag), &Tag, sizeof(Tag));

	uFnReleaseDemigod->iNative = 0;
	uFnReleaseDemigod->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnReleaseDemigod, &ReleaseDemigod_Params, nullptr);
	uFnReleaseDemigod->FunctionFlags |= 0x400;
	uFnReleaseDemigod->iNative = 35647;
};

// Function GearboxFramework.AIComponent.HoldDemigod
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34457])
// Parameter Info:
// const struct FName&            HoldName                       (CPF_Parm)
// class UObject*                 Tag                            (CPF_Parm)

void UAIComponent::HoldDemigod(const struct FName& HoldName, class UObject* Tag)
{
	static UFunction* uFnHoldDemigod = nullptr;

	if (!uFnHoldDemigod)
	{
		uFnHoldDemigod = UFunction::FindFunction("Function GearboxFramework.AIComponent.HoldDemigod");
	}

	UAIComponent_execHoldDemigod_Params HoldDemigod_Params;
	memset(&HoldDemigod_Params, 0, sizeof(HoldDemigod_Params));
	memcpy_s(&HoldDemigod_Params.HoldName, sizeof(HoldDemigod_Params.HoldName), &HoldName, sizeof(HoldName));
	memcpy_s(&HoldDemigod_Params.Tag, sizeof(HoldDemigod_Params.Tag), &Tag, sizeof(Tag));

	uFnHoldDemigod->iNative = 0;
	uFnHoldDemigod->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnHoldDemigod, &HoldDemigod_Params, nullptr);
	uFnHoldDemigod->FunctionFlags |= 0x400;
	uFnHoldDemigod->iNative = 34457;
};

// Function GearboxFramework.AIComponent.DemigodOnHold
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[33175])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UAIComponent::DemigodOnHold()
{
	static UFunction* uFnDemigodOnHold = nullptr;

	if (!uFnDemigodOnHold)
	{
		uFnDemigodOnHold = UFunction::FindFunction("Function GearboxFramework.AIComponent.DemigodOnHold");
	}

	UAIComponent_execDemigodOnHold_Params DemigodOnHold_Params;
	memset(&DemigodOnHold_Params, 0, sizeof(DemigodOnHold_Params));

	uFnDemigodOnHold->iNative = 0;
	uFnDemigodOnHold->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnDemigodOnHold, &DemigodOnHold_Params, nullptr);
	uFnDemigodOnHold->FunctionFlags |= 0x400;
	uFnDemigodOnHold->iNative = 33175;

	return DemigodOnHold_Params.ReturnValue;
};

// Function GearboxFramework.AIComponent.ReleaseMovement
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35650])
// Parameter Info:
// const struct FName&            HoldName                       (CPF_Parm)
// class UObject*                 Tag                            (CPF_Parm)

void UAIComponent::ReleaseMovement(const struct FName& HoldName, class UObject* Tag)
{
	static UFunction* uFnReleaseMovement = nullptr;

	if (!uFnReleaseMovement)
	{
		uFnReleaseMovement = UFunction::FindFunction("Function GearboxFramework.AIComponent.ReleaseMovement");
	}

	UAIComponent_execReleaseMovement_Params ReleaseMovement_Params;
	memset(&ReleaseMovement_Params, 0, sizeof(ReleaseMovement_Params));
	memcpy_s(&ReleaseMovement_Params.HoldName, sizeof(ReleaseMovement_Params.HoldName), &HoldName, sizeof(HoldName));
	memcpy_s(&ReleaseMovement_Params.Tag, sizeof(ReleaseMovement_Params.Tag), &Tag, sizeof(Tag));

	uFnReleaseMovement->iNative = 0;
	uFnReleaseMovement->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnReleaseMovement, &ReleaseMovement_Params, nullptr);
	uFnReleaseMovement->FunctionFlags |= 0x400;
	uFnReleaseMovement->iNative = 35650;
};

// Function GearboxFramework.AIComponent.HoldMovement
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34461])
// Parameter Info:
// const struct FName&            HoldName                       (CPF_Parm)
// class UObject*                 Tag                            (CPF_Parm)

void UAIComponent::HoldMovement(const struct FName& HoldName, class UObject* Tag)
{
	static UFunction* uFnHoldMovement = nullptr;

	if (!uFnHoldMovement)
	{
		uFnHoldMovement = UFunction::FindFunction("Function GearboxFramework.AIComponent.HoldMovement");
	}

	UAIComponent_execHoldMovement_Params HoldMovement_Params;
	memset(&HoldMovement_Params, 0, sizeof(HoldMovement_Params));
	memcpy_s(&HoldMovement_Params.HoldName, sizeof(HoldMovement_Params.HoldName), &HoldName, sizeof(HoldName));
	memcpy_s(&HoldMovement_Params.Tag, sizeof(HoldMovement_Params.Tag), &Tag, sizeof(Tag));

	uFnHoldMovement->iNative = 0;
	uFnHoldMovement->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnHoldMovement, &HoldMovement_Params, nullptr);
	uFnHoldMovement->FunctionFlags |= 0x400;
	uFnHoldMovement->iNative = 34461;
};

// Function GearboxFramework.AIComponent.MovementOnHold
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35000])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UAIComponent::MovementOnHold()
{
	static UFunction* uFnMovementOnHold = nullptr;

	if (!uFnMovementOnHold)
	{
		uFnMovementOnHold = UFunction::FindFunction("Function GearboxFramework.AIComponent.MovementOnHold");
	}

	UAIComponent_execMovementOnHold_Params MovementOnHold_Params;
	memset(&MovementOnHold_Params, 0, sizeof(MovementOnHold_Params));

	uFnMovementOnHold->iNative = 0;
	uFnMovementOnHold->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnMovementOnHold, &MovementOnHold_Params, nullptr);
	uFnMovementOnHold->FunctionFlags |= 0x400;
	uFnMovementOnHold->iNative = 35000;

	return MovementOnHold_Params.ReturnValue;
};

// Function GearboxFramework.AIComponent.ReleaseTarget
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35651])
// Parameter Info:
// const struct FName&            HoldName                       (CPF_Parm)
// class UObject*                 Tag                            (CPF_Parm)

void UAIComponent::ReleaseTarget(const struct FName& HoldName, class UObject* Tag)
{
	static UFunction* uFnReleaseTarget = nullptr;

	if (!uFnReleaseTarget)
	{
		uFnReleaseTarget = UFunction::FindFunction("Function GearboxFramework.AIComponent.ReleaseTarget");
	}

	UAIComponent_execReleaseTarget_Params ReleaseTarget_Params;
	memset(&ReleaseTarget_Params, 0, sizeof(ReleaseTarget_Params));
	memcpy_s(&ReleaseTarget_Params.HoldName, sizeof(ReleaseTarget_Params.HoldName), &HoldName, sizeof(HoldName));
	memcpy_s(&ReleaseTarget_Params.Tag, sizeof(ReleaseTarget_Params.Tag), &Tag, sizeof(Tag));

	uFnReleaseTarget->iNative = 0;
	uFnReleaseTarget->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnReleaseTarget, &ReleaseTarget_Params, nullptr);
	uFnReleaseTarget->FunctionFlags |= 0x400;
	uFnReleaseTarget->iNative = 35651;
};

// Function GearboxFramework.AIComponent.HoldTarget
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34466])
// Parameter Info:
// const struct FName&            HoldName                       (CPF_Parm)
// class UObject*                 Tag                            (CPF_Parm)

void UAIComponent::HoldTarget(const struct FName& HoldName, class UObject* Tag)
{
	static UFunction* uFnHoldTarget = nullptr;

	if (!uFnHoldTarget)
	{
		uFnHoldTarget = UFunction::FindFunction("Function GearboxFramework.AIComponent.HoldTarget");
	}

	UAIComponent_execHoldTarget_Params HoldTarget_Params;
	memset(&HoldTarget_Params, 0, sizeof(HoldTarget_Params));
	memcpy_s(&HoldTarget_Params.HoldName, sizeof(HoldTarget_Params.HoldName), &HoldName, sizeof(HoldName));
	memcpy_s(&HoldTarget_Params.Tag, sizeof(HoldTarget_Params.Tag), &Tag, sizeof(Tag));

	uFnHoldTarget->iNative = 0;
	uFnHoldTarget->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnHoldTarget, &HoldTarget_Params, nullptr);
	uFnHoldTarget->FunctionFlags |= 0x400;
	uFnHoldTarget->iNative = 34466;
};

// Function GearboxFramework.AIComponent.TargetOnHold
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36396])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UAIComponent::TargetOnHold()
{
	static UFunction* uFnTargetOnHold = nullptr;

	if (!uFnTargetOnHold)
	{
		uFnTargetOnHold = UFunction::FindFunction("Function GearboxFramework.AIComponent.TargetOnHold");
	}

	UAIComponent_execTargetOnHold_Params TargetOnHold_Params;
	memset(&TargetOnHold_Params, 0, sizeof(TargetOnHold_Params));

	uFnTargetOnHold->iNative = 0;
	uFnTargetOnHold->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnTargetOnHold, &TargetOnHold_Params, nullptr);
	uFnTargetOnHold->FunctionFlags |= 0x400;
	uFnTargetOnHold->iNative = 36396;

	return TargetOnHold_Params.ReturnValue;
};

// Function GearboxFramework.AIComponent.ReleaseType
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35652])
// Parameter Info:
// EAIHoldType                    HoldType                       (CPF_Parm)
// const struct FName&            HoldName                       (CPF_Parm)
// class UObject*                 Tag                            (CPF_Parm)

void UAIComponent::ReleaseType(EAIHoldType HoldType, const struct FName& HoldName, class UObject* Tag)
{
	static UFunction* uFnReleaseType = nullptr;

	if (!uFnReleaseType)
	{
		uFnReleaseType = UFunction::FindFunction("Function GearboxFramework.AIComponent.ReleaseType");
	}

	UAIComponent_execReleaseType_Params ReleaseType_Params;
	memset(&ReleaseType_Params, 0, sizeof(ReleaseType_Params));
	memcpy_s(&ReleaseType_Params.HoldType, sizeof(ReleaseType_Params.HoldType), &HoldType, sizeof(HoldType));
	memcpy_s(&ReleaseType_Params.HoldName, sizeof(ReleaseType_Params.HoldName), &HoldName, sizeof(HoldName));
	memcpy_s(&ReleaseType_Params.Tag, sizeof(ReleaseType_Params.Tag), &Tag, sizeof(Tag));

	uFnReleaseType->iNative = 0;
	uFnReleaseType->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnReleaseType, &ReleaseType_Params, nullptr);
	uFnReleaseType->FunctionFlags |= 0x400;
	uFnReleaseType->iNative = 35652;
};

// Function GearboxFramework.AIComponent.HoldType
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34468])
// Parameter Info:
// EAIHoldType                    HoldType                       (CPF_Parm)
// const struct FName&            HoldName                       (CPF_Parm)
// class UObject*                 Tag                            (CPF_Parm)

void UAIComponent::HoldType(EAIHoldType HoldType, const struct FName& HoldName, class UObject* Tag)
{
	static UFunction* uFnHoldType = nullptr;

	if (!uFnHoldType)
	{
		uFnHoldType = UFunction::FindFunction("Function GearboxFramework.AIComponent.HoldType");
	}

	UAIComponent_execHoldType_Params HoldType_Params;
	memset(&HoldType_Params, 0, sizeof(HoldType_Params));
	memcpy_s(&HoldType_Params.HoldType, sizeof(HoldType_Params.HoldType), &HoldType, sizeof(HoldType));
	memcpy_s(&HoldType_Params.HoldName, sizeof(HoldType_Params.HoldName), &HoldName, sizeof(HoldName));
	memcpy_s(&HoldType_Params.Tag, sizeof(HoldType_Params.Tag), &Tag, sizeof(Tag));

	uFnHoldType->iNative = 0;
	uFnHoldType->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnHoldType, &HoldType_Params, nullptr);
	uFnHoldType->FunctionFlags |= 0x400;
	uFnHoldType->iNative = 34468;
};

// Function GearboxFramework.AIComponent.Release
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35646])
// Parameter Info:
// const struct FName&            HoldName                       (CPF_Parm)
// class UObject*                 Tag                            (CPF_Parm)

void UAIComponent::Release(const struct FName& HoldName, class UObject* Tag)
{
	static UFunction* uFnRelease = nullptr;

	if (!uFnRelease)
	{
		uFnRelease = UFunction::FindFunction("Function GearboxFramework.AIComponent.Release");
	}

	UAIComponent_execRelease_Params Release_Params;
	memset(&Release_Params, 0, sizeof(Release_Params));
	memcpy_s(&Release_Params.HoldName, sizeof(Release_Params.HoldName), &HoldName, sizeof(HoldName));
	memcpy_s(&Release_Params.Tag, sizeof(Release_Params.Tag), &Tag, sizeof(Tag));

	uFnRelease->iNative = 0;
	uFnRelease->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRelease, &Release_Params, nullptr);
	uFnRelease->FunctionFlags |= 0x400;
	uFnRelease->iNative = 35646;
};

// Function GearboxFramework.AIComponent.Hold
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34456])
// Parameter Info:
// const struct FName&            HoldName                       (CPF_Parm)
// class UObject*                 Tag                            (CPF_Parm)

void UAIComponent::Hold(const struct FName& HoldName, class UObject* Tag)
{
	static UFunction* uFnHold = nullptr;

	if (!uFnHold)
	{
		uFnHold = UFunction::FindFunction("Function GearboxFramework.AIComponent.Hold");
	}

	UAIComponent_execHold_Params Hold_Params;
	memset(&Hold_Params, 0, sizeof(Hold_Params));
	memcpy_s(&Hold_Params.HoldName, sizeof(Hold_Params.HoldName), &HoldName, sizeof(HoldName));
	memcpy_s(&Hold_Params.Tag, sizeof(Hold_Params.Tag), &Tag, sizeof(Tag));

	uFnHold->iNative = 0;
	uFnHold->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnHold, &Hold_Params, nullptr);
	uFnHold->FunctionFlags |= 0x400;
	uFnHold->iNative = 34456;
};

// Function GearboxFramework.AIComponent.OnHold
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35277])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UAIComponent::OnHold()
{
	static UFunction* uFnOnHold = nullptr;

	if (!uFnOnHold)
	{
		uFnOnHold = UFunction::FindFunction("Function GearboxFramework.AIComponent.OnHold");
	}

	UAIComponent_execOnHold_Params OnHold_Params;
	memset(&OnHold_Params, 0, sizeof(OnHold_Params));

	uFnOnHold->iNative = 0;
	uFnOnHold->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnHold, &OnHold_Params, nullptr);
	uFnOnHold->FunctionFlags |= 0x400;
	uFnOnHold->iNative = 35277;

	return OnHold_Params.ReturnValue;
};

// Function GearboxFramework.AIComponent.GetSoundSenseModifier
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34213])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float UAIComponent::GetSoundSenseModifier()
{
	static UFunction* uFnGetSoundSenseModifier = nullptr;

	if (!uFnGetSoundSenseModifier)
	{
		uFnGetSoundSenseModifier = UFunction::FindFunction("Function GearboxFramework.AIComponent.GetSoundSenseModifier");
	}

	UAIComponent_execGetSoundSenseModifier_Params GetSoundSenseModifier_Params;
	memset(&GetSoundSenseModifier_Params, 0, sizeof(GetSoundSenseModifier_Params));

	uFnGetSoundSenseModifier->iNative = 0;
	uFnGetSoundSenseModifier->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetSoundSenseModifier, &GetSoundSenseModifier_Params, nullptr);
	uFnGetSoundSenseModifier->FunctionFlags |= 0x400;
	uFnGetSoundSenseModifier->iNative = 34213;

	return GetSoundSenseModifier_Params.ReturnValue;
};

// Function GearboxFramework.AIComponent.GetSightSenseModifier
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34207])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float UAIComponent::GetSightSenseModifier()
{
	static UFunction* uFnGetSightSenseModifier = nullptr;

	if (!uFnGetSightSenseModifier)
	{
		uFnGetSightSenseModifier = UFunction::FindFunction("Function GearboxFramework.AIComponent.GetSightSenseModifier");
	}

	UAIComponent_execGetSightSenseModifier_Params GetSightSenseModifier_Params;
	memset(&GetSightSenseModifier_Params, 0, sizeof(GetSightSenseModifier_Params));

	uFnGetSightSenseModifier->iNative = 0;
	uFnGetSightSenseModifier->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetSightSenseModifier, &GetSightSenseModifier_Params, nullptr);
	uFnGetSightSenseModifier->FunctionFlags |= 0x400;
	uFnGetSightSenseModifier->iNative = 34207;

	return GetSightSenseModifier_Params.ReturnValue;
};

// Function GearboxFramework.AIComponent.GetAwarenessMeter
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34048])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float UAIComponent::GetAwarenessMeter()
{
	static UFunction* uFnGetAwarenessMeter = nullptr;

	if (!uFnGetAwarenessMeter)
	{
		uFnGetAwarenessMeter = UFunction::FindFunction("Function GearboxFramework.AIComponent.GetAwarenessMeter");
	}

	UAIComponent_execGetAwarenessMeter_Params GetAwarenessMeter_Params;
	memset(&GetAwarenessMeter_Params, 0, sizeof(GetAwarenessMeter_Params));

	uFnGetAwarenessMeter->iNative = 0;
	uFnGetAwarenessMeter->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAwarenessMeter, &GetAwarenessMeter_Params, nullptr);
	uFnGetAwarenessMeter->FunctionFlags |= 0x400;
	uFnGetAwarenessMeter->iNative = 34048;

	return GetAwarenessMeter_Params.ReturnValue;
};

// Function GearboxFramework.AIComponent.GetAwareness
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34047])
// Parameter Info:
// EAwareness                     ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

EAwareness UAIComponent::GetAwareness()
{
	static UFunction* uFnGetAwareness = nullptr;

	if (!uFnGetAwareness)
	{
		uFnGetAwareness = UFunction::FindFunction("Function GearboxFramework.AIComponent.GetAwareness");
	}

	UAIComponent_execGetAwareness_Params GetAwareness_Params;
	memset(&GetAwareness_Params, 0, sizeof(GetAwareness_Params));

	uFnGetAwareness->iNative = 0;
	uFnGetAwareness->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAwareness, &GetAwareness_Params, nullptr);
	uFnGetAwareness->FunctionFlags |= 0x400;
	uFnGetAwareness->iNative = 34047;

	return GetAwareness_Params.ReturnValue;
};

// Function GearboxFramework.AIComponent.UpdateAwareness
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36609])
// Parameter Info:

void UAIComponent::UpdateAwareness()
{
	static UFunction* uFnUpdateAwareness = nullptr;

	if (!uFnUpdateAwareness)
	{
		uFnUpdateAwareness = UFunction::FindFunction("Function GearboxFramework.AIComponent.UpdateAwareness");
	}

	UAIComponent_execUpdateAwareness_Params UpdateAwareness_Params;
	memset(&UpdateAwareness_Params, 0, sizeof(UpdateAwareness_Params));

	uFnUpdateAwareness->iNative = 0;
	uFnUpdateAwareness->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnUpdateAwareness, &UpdateAwareness_Params, nullptr);
	uFnUpdateAwareness->FunctionFlags |= 0x400;
	uFnUpdateAwareness->iNative = 36609;
};

// Function GearboxFramework.AIComponent.GetNumValidHumanTargets
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34156])
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

int32_t UAIComponent::GetNumValidHumanTargets()
{
	static UFunction* uFnGetNumValidHumanTargets = nullptr;

	if (!uFnGetNumValidHumanTargets)
	{
		uFnGetNumValidHumanTargets = UFunction::FindFunction("Function GearboxFramework.AIComponent.GetNumValidHumanTargets");
	}

	UAIComponent_execGetNumValidHumanTargets_Params GetNumValidHumanTargets_Params;
	memset(&GetNumValidHumanTargets_Params, 0, sizeof(GetNumValidHumanTargets_Params));

	uFnGetNumValidHumanTargets->iNative = 0;
	uFnGetNumValidHumanTargets->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetNumValidHumanTargets, &GetNumValidHumanTargets_Params, nullptr);
	uFnGetNumValidHumanTargets->FunctionFlags |= 0x400;
	uFnGetNumValidHumanTargets->iNative = 34156;

	return GetNumValidHumanTargets_Params.ReturnValue;
};

// Function GearboxFramework.AIComponent.GetTargetRecordFor
// [0x00024400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[34239])
// Parameter Info:
// class UMindTargetInfo*         ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AActor*                  Target                         (CPF_Parm)
// bool                           bTryParent                     (CPF_OptionalParm | CPF_Parm)

class UMindTargetInfo* UAIComponent::GetTargetRecordFor(class AActor* Target, bool bTryParent)
{
	static UFunction* uFnGetTargetRecordFor = nullptr;

	if (!uFnGetTargetRecordFor)
	{
		uFnGetTargetRecordFor = UFunction::FindFunction("Function GearboxFramework.AIComponent.GetTargetRecordFor");
	}

	UAIComponent_execGetTargetRecordFor_Params GetTargetRecordFor_Params;
	memset(&GetTargetRecordFor_Params, 0, sizeof(GetTargetRecordFor_Params));
	memcpy_s(&GetTargetRecordFor_Params.Target, sizeof(GetTargetRecordFor_Params.Target), &Target, sizeof(Target));
	GetTargetRecordFor_Params.bTryParent = bTryParent;

	uFnGetTargetRecordFor->iNative = 0;
	uFnGetTargetRecordFor->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetTargetRecordFor, &GetTargetRecordFor_Params, nullptr);
	uFnGetTargetRecordFor->FunctionFlags |= 0x400;
	uFnGetTargetRecordFor->iNative = 34239;

	return GetTargetRecordFor_Params.ReturnValue;
};

// Function GearboxFramework.AIComponent.GetTargetRecord
// [0x00024400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[34238])
// Parameter Info:
// class UMindTargetInfo*         ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// bool                           bTryParent                     (CPF_OptionalParm | CPF_Parm)

class UMindTargetInfo* UAIComponent::GetTargetRecord(bool bTryParent)
{
	static UFunction* uFnGetTargetRecord = nullptr;

	if (!uFnGetTargetRecord)
	{
		uFnGetTargetRecord = UFunction::FindFunction("Function GearboxFramework.AIComponent.GetTargetRecord");
	}

	UAIComponent_execGetTargetRecord_Params GetTargetRecord_Params;
	memset(&GetTargetRecord_Params, 0, sizeof(GetTargetRecord_Params));
	GetTargetRecord_Params.bTryParent = bTryParent;

	uFnGetTargetRecord->iNative = 0;
	uFnGetTargetRecord->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetTargetRecord, &GetTargetRecord_Params, nullptr);
	uFnGetTargetRecord->FunctionFlags |= 0x400;
	uFnGetTargetRecord->iNative = 34238;

	return GetTargetRecord_Params.ReturnValue;
};

// Function GearboxFramework.AIComponent.IsTarget
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34697])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AActor*                  TestTarget                     (CPF_Parm)

bool UAIComponent::IsTarget(class AActor* TestTarget)
{
	static UFunction* uFnIsTarget = nullptr;

	if (!uFnIsTarget)
	{
		uFnIsTarget = UFunction::FindFunction("Function GearboxFramework.AIComponent.IsTarget");
	}

	UAIComponent_execIsTarget_Params IsTarget_Params;
	memset(&IsTarget_Params, 0, sizeof(IsTarget_Params));
	memcpy_s(&IsTarget_Params.TestTarget, sizeof(IsTarget_Params.TestTarget), &TestTarget, sizeof(TestTarget));

	uFnIsTarget->iNative = 0;
	uFnIsTarget->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsTarget, &IsTarget_Params, nullptr);
	uFnIsTarget->FunctionFlags |= 0x400;
	uFnIsTarget->iNative = 34697;

	return IsTarget_Params.ReturnValue;
};

// Function GearboxFramework.AIComponent.GetNumValidTargets
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34157])
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

int32_t UAIComponent::GetNumValidTargets()
{
	static UFunction* uFnGetNumValidTargets = nullptr;

	if (!uFnGetNumValidTargets)
	{
		uFnGetNumValidTargets = UFunction::FindFunction("Function GearboxFramework.AIComponent.GetNumValidTargets");
	}

	UAIComponent_execGetNumValidTargets_Params GetNumValidTargets_Params;
	memset(&GetNumValidTargets_Params, 0, sizeof(GetNumValidTargets_Params));

	uFnGetNumValidTargets->iNative = 0;
	uFnGetNumValidTargets->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetNumValidTargets, &GetNumValidTargets_Params, nullptr);
	uFnGetNumValidTargets->FunctionFlags |= 0x400;
	uFnGetNumValidTargets->iNative = 34157;

	return GetNumValidTargets_Params.ReturnValue;
};

// Function GearboxFramework.AIComponent.GetTarget
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34236])
// Parameter Info:
// class AActor*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class AActor* UAIComponent::GetTarget()
{
	static UFunction* uFnGetTarget = nullptr;

	if (!uFnGetTarget)
	{
		uFnGetTarget = UFunction::FindFunction("Function GearboxFramework.AIComponent.GetTarget");
	}

	UAIComponent_execGetTarget_Params GetTarget_Params;
	memset(&GetTarget_Params, 0, sizeof(GetTarget_Params));

	uFnGetTarget->iNative = 0;
	uFnGetTarget->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetTarget, &GetTarget_Params, nullptr);
	uFnGetTarget->FunctionFlags |= 0x400;
	uFnGetTarget->iNative = 34236;

	return GetTarget_Params.ReturnValue;
};

// Function GearboxFramework.AIComponent.HasTarget
// [0x00020402] (FUNC_Defined | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2486])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UAIComponent::HasTarget()
{
	static UFunction* uFnHasTarget = nullptr;

	if (!uFnHasTarget)
	{
		uFnHasTarget = UFunction::FindFunction("Function GearboxFramework.AIComponent.HasTarget");
	}

	UAIComponent_execHasTarget_Params HasTarget_Params;
	memset(&HasTarget_Params, 0, sizeof(HasTarget_Params));

	uFnHasTarget->iNative = 0;
	uFnHasTarget->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnHasTarget, &HasTarget_Params, nullptr);
	uFnHasTarget->FunctionFlags |= 0x400;
	uFnHasTarget->iNative = 2486;

	return HasTarget_Params.ReturnValue;
};

// Function GearboxFramework.AIComponent.NotifyAttackedBy
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35182])
// Parameter Info:
// class AActor*                  Attacker                       (CPF_Parm)

void UAIComponent::NotifyAttackedBy(class AActor* Attacker)
{
	static UFunction* uFnNotifyAttackedBy = nullptr;

	if (!uFnNotifyAttackedBy)
	{
		uFnNotifyAttackedBy = UFunction::FindFunction("Function GearboxFramework.AIComponent.NotifyAttackedBy");
	}

	UAIComponent_execNotifyAttackedBy_Params NotifyAttackedBy_Params;
	memset(&NotifyAttackedBy_Params, 0, sizeof(NotifyAttackedBy_Params));
	memcpy_s(&NotifyAttackedBy_Params.Attacker, sizeof(NotifyAttackedBy_Params.Attacker), &Attacker, sizeof(Attacker));

	uFnNotifyAttackedBy->iNative = 0;
	uFnNotifyAttackedBy->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnNotifyAttackedBy, &NotifyAttackedBy_Params, nullptr);
	uFnNotifyAttackedBy->FunctionFlags |= 0x400;
	uFnNotifyAttackedBy->iNative = 35182;
};

// Function GearboxFramework.AIComponent.SetScriptedNode
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35930])
// Parameter Info:
// class AGearboxAIMoveNode*      InScriptedNode                 (CPF_Parm)

void UAIComponent::SetScriptedNode(class AGearboxAIMoveNode* InScriptedNode)
{
	static UFunction* uFnSetScriptedNode = nullptr;

	if (!uFnSetScriptedNode)
	{
		uFnSetScriptedNode = UFunction::FindFunction("Function GearboxFramework.AIComponent.SetScriptedNode");
	}

	UAIComponent_execSetScriptedNode_Params SetScriptedNode_Params;
	memset(&SetScriptedNode_Params, 0, sizeof(SetScriptedNode_Params));
	memcpy_s(&SetScriptedNode_Params.InScriptedNode, sizeof(SetScriptedNode_Params.InScriptedNode), &InScriptedNode, sizeof(InScriptedNode));

	uFnSetScriptedNode->iNative = 0;
	uFnSetScriptedNode->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetScriptedNode, &SetScriptedNode_Params, nullptr);
	uFnSetScriptedNode->FunctionFlags |= 0x400;
	uFnSetScriptedNode->iNative = 35930;
};

// Function GearboxFramework.AIComponent.GetScriptedNode
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34202])
// Parameter Info:
// class AGearboxAIMoveNode*      ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class AGearboxAIMoveNode* UAIComponent::GetScriptedNode()
{
	static UFunction* uFnGetScriptedNode = nullptr;

	if (!uFnGetScriptedNode)
	{
		uFnGetScriptedNode = UFunction::FindFunction("Function GearboxFramework.AIComponent.GetScriptedNode");
	}

	UAIComponent_execGetScriptedNode_Params GetScriptedNode_Params;
	memset(&GetScriptedNode_Params, 0, sizeof(GetScriptedNode_Params));

	uFnGetScriptedNode->iNative = 0;
	uFnGetScriptedNode->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetScriptedNode, &GetScriptedNode_Params, nullptr);
	uFnGetScriptedNode->FunctionFlags |= 0x400;
	uFnGetScriptedNode->iNative = 34202;

	return GetScriptedNode_Params.ReturnValue;
};

// Function GearboxFramework.AIComponent.HasScriptedNode
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34324])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UAIComponent::HasScriptedNode()
{
	static UFunction* uFnHasScriptedNode = nullptr;

	if (!uFnHasScriptedNode)
	{
		uFnHasScriptedNode = UFunction::FindFunction("Function GearboxFramework.AIComponent.HasScriptedNode");
	}

	UAIComponent_execHasScriptedNode_Params HasScriptedNode_Params;
	memset(&HasScriptedNode_Params, 0, sizeof(HasScriptedNode_Params));

	uFnHasScriptedNode->iNative = 0;
	uFnHasScriptedNode->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnHasScriptedNode, &HasScriptedNode_Params, nullptr);
	uFnHasScriptedNode->FunctionFlags |= 0x400;
	uFnHasScriptedNode->iNative = 34324;

	return HasScriptedNode_Params.ReturnValue;
};

// Function GearboxFramework.AIComponent.SetScriptedAction
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35929])
// Parameter Info:
// class USeqAct_AIScripted*      InScriptedAction               (CPF_Parm)

void UAIComponent::SetScriptedAction(class USeqAct_AIScripted* InScriptedAction)
{
	static UFunction* uFnSetScriptedAction = nullptr;

	if (!uFnSetScriptedAction)
	{
		uFnSetScriptedAction = UFunction::FindFunction("Function GearboxFramework.AIComponent.SetScriptedAction");
	}

	UAIComponent_execSetScriptedAction_Params SetScriptedAction_Params;
	memset(&SetScriptedAction_Params, 0, sizeof(SetScriptedAction_Params));
	memcpy_s(&SetScriptedAction_Params.InScriptedAction, sizeof(SetScriptedAction_Params.InScriptedAction), &InScriptedAction, sizeof(InScriptedAction));

	uFnSetScriptedAction->iNative = 0;
	uFnSetScriptedAction->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetScriptedAction, &SetScriptedAction_Params, nullptr);
	uFnSetScriptedAction->FunctionFlags |= 0x400;
	uFnSetScriptedAction->iNative = 35929;
};

// Function GearboxFramework.AIComponent.ClearScriptedAction
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[32758])
// Parameter Info:
// bool                           bInterrupted                   (CPF_OptionalParm | CPF_Parm)

void UAIComponent::ClearScriptedAction(bool bInterrupted)
{
	static UFunction* uFnClearScriptedAction = nullptr;

	if (!uFnClearScriptedAction)
	{
		uFnClearScriptedAction = UFunction::FindFunction("Function GearboxFramework.AIComponent.ClearScriptedAction");
	}

	UAIComponent_execClearScriptedAction_Params ClearScriptedAction_Params;
	memset(&ClearScriptedAction_Params, 0, sizeof(ClearScriptedAction_Params));
	ClearScriptedAction_Params.bInterrupted = bInterrupted;

	uFnClearScriptedAction->iNative = 0;
	uFnClearScriptedAction->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnClearScriptedAction, &ClearScriptedAction_Params, nullptr);
	uFnClearScriptedAction->FunctionFlags |= 0x400;
	uFnClearScriptedAction->iNative = 32758;
};

// Function GearboxFramework.AIComponent.GetScriptedAction
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34201])
// Parameter Info:
// class USeqAct_AIScripted*      ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class USeqAct_AIScripted* UAIComponent::GetScriptedAction()
{
	static UFunction* uFnGetScriptedAction = nullptr;

	if (!uFnGetScriptedAction)
	{
		uFnGetScriptedAction = UFunction::FindFunction("Function GearboxFramework.AIComponent.GetScriptedAction");
	}

	UAIComponent_execGetScriptedAction_Params GetScriptedAction_Params;
	memset(&GetScriptedAction_Params, 0, sizeof(GetScriptedAction_Params));

	uFnGetScriptedAction->iNative = 0;
	uFnGetScriptedAction->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetScriptedAction, &GetScriptedAction_Params, nullptr);
	uFnGetScriptedAction->FunctionFlags |= 0x400;
	uFnGetScriptedAction->iNative = 34201;

	return GetScriptedAction_Params.ReturnValue;
};

// Function GearboxFramework.AIComponent.HasScriptedAction
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34323])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UAIComponent::HasScriptedAction()
{
	static UFunction* uFnHasScriptedAction = nullptr;

	if (!uFnHasScriptedAction)
	{
		uFnHasScriptedAction = UFunction::FindFunction("Function GearboxFramework.AIComponent.HasScriptedAction");
	}

	UAIComponent_execHasScriptedAction_Params HasScriptedAction_Params;
	memset(&HasScriptedAction_Params, 0, sizeof(HasScriptedAction_Params));

	uFnHasScriptedAction->iNative = 0;
	uFnHasScriptedAction->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnHasScriptedAction, &HasScriptedAction_Params, nullptr);
	uFnHasScriptedAction->FunctionFlags |= 0x400;
	uFnHasScriptedAction->iNative = 34323;

	return HasScriptedAction_Params.ReturnValue;
};

// Function GearboxFramework.AIComponent.GetParentComponent
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34166])
// Parameter Info:
// class UAIComponent*            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline)

class UAIComponent* UAIComponent::GetParentComponent()
{
	static UFunction* uFnGetParentComponent = nullptr;

	if (!uFnGetParentComponent)
	{
		uFnGetParentComponent = UFunction::FindFunction("Function GearboxFramework.AIComponent.GetParentComponent");
	}

	UAIComponent_execGetParentComponent_Params GetParentComponent_Params;
	memset(&GetParentComponent_Params, 0, sizeof(GetParentComponent_Params));

	uFnGetParentComponent->iNative = 0;
	uFnGetParentComponent->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetParentComponent, &GetParentComponent_Params, nullptr);
	uFnGetParentComponent->FunctionFlags |= 0x400;
	uFnGetParentComponent->iNative = 34166;

	return GetParentComponent_Params.ReturnValue;
};

// Function GearboxFramework.AIComponent.GetAllegiance
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34040])
// Parameter Info:
// class UPawnAllegiance*         ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UPawnAllegiance* UAIComponent::GetAllegiance()
{
	static UFunction* uFnGetAllegiance = nullptr;

	if (!uFnGetAllegiance)
	{
		uFnGetAllegiance = UFunction::FindFunction("Function GearboxFramework.AIComponent.GetAllegiance");
	}

	UAIComponent_execGetAllegiance_Params GetAllegiance_Params;
	memset(&GetAllegiance_Params, 0, sizeof(GetAllegiance_Params));

	uFnGetAllegiance->iNative = 0;
	uFnGetAllegiance->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAllegiance, &GetAllegiance_Params, nullptr);
	uFnGetAllegiance->FunctionFlags |= 0x400;
	uFnGetAllegiance->iNative = 34040;

	return GetAllegiance_Params.ReturnValue;
};

// Function GearboxFramework.AIComponentAttributeContextResolver.GetAttributeContext
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UAttributeDefinitionBase* Attribute                      (CPF_Parm)
// class UObject*                 AttributeContextSource         (CPF_Parm)

class UObject* UAIComponentAttributeContextResolver::GetAttributeContext(class UAttributeDefinitionBase* Attribute, class UObject* AttributeContextSource)
{
	static UFunction* uFnGetAttributeContext = nullptr;

	if (!uFnGetAttributeContext)
	{
		uFnGetAttributeContext = UFunction::FindFunction("Function GearboxFramework.AIComponentAttributeContextResolver.GetAttributeContext");
	}

	UAIComponentAttributeContextResolver_execGetAttributeContext_Params GetAttributeContext_Params;
	memset(&GetAttributeContext_Params, 0, sizeof(GetAttributeContext_Params));
	memcpy_s(&GetAttributeContext_Params.Attribute, sizeof(GetAttributeContext_Params.Attribute), &Attribute, sizeof(Attribute));
	memcpy_s(&GetAttributeContext_Params.AttributeContextSource, sizeof(GetAttributeContext_Params.AttributeContextSource), &AttributeContextSource, sizeof(AttributeContextSource));

	this->ProcessEvent(uFnGetAttributeContext, &GetAttributeContext_Params, nullptr);

	return GetAttributeContext_Params.ReturnValue;
};

// Function GearboxFramework.AICostExpressionEvaluator.Evaluate
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[22809])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 ContextSource                  (CPF_Parm)

bool UAICostExpressionEvaluator::Evaluate(class UObject* ContextSource)
{
	static UFunction* uFnEvaluate = nullptr;

	if (!uFnEvaluate)
	{
		uFnEvaluate = UFunction::FindFunction("Function GearboxFramework.AICostExpressionEvaluator.Evaluate");
	}

	UAICostExpressionEvaluator_execEvaluate_Params Evaluate_Params;
	memset(&Evaluate_Params, 0, sizeof(Evaluate_Params));
	memcpy_s(&Evaluate_Params.ContextSource, sizeof(Evaluate_Params.ContextSource), &ContextSource, sizeof(ContextSource));

	uFnEvaluate->iNative = 0;
	uFnEvaluate->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnEvaluate, &Evaluate_Params, nullptr);
	uFnEvaluate->FunctionFlags |= 0x400;
	uFnEvaluate->iNative = 22809;

	return Evaluate_Params.ReturnValue;
};

// Function GearboxFramework.AIDebugCamera.GetDebugMind
// [0x00022400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[34076])
// Parameter Info:
// class AGearboxMind*            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class AGearboxMind* UAIDebugCamera::GetDebugMind()
{
	static UFunction* uFnGetDebugMind = nullptr;

	if (!uFnGetDebugMind)
	{
		uFnGetDebugMind = UFunction::FindFunction("Function GearboxFramework.AIDebugCamera.GetDebugMind");
	}

	UAIDebugCamera_execGetDebugMind_Params GetDebugMind_Params;
	memset(&GetDebugMind_Params, 0, sizeof(GetDebugMind_Params));

	uFnGetDebugMind->iNative = 0;
	uFnGetDebugMind->FunctionFlags &= ~0x400;
	UAIDebugCamera::StaticClass()->ProcessEvent(uFnGetDebugMind, &GetDebugMind_Params, nullptr);
	uFnGetDebugMind->FunctionFlags |= 0x400;
	uFnGetDebugMind->iNative = 34076;

	return GetDebugMind_Params.ReturnValue;
};

// Function GearboxFramework.AIDebugCamera.ToggleAITree
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UAIDebugCamera::ToggleAITree()
{
	static UFunction* uFnToggleAITree = nullptr;

	if (!uFnToggleAITree)
	{
		uFnToggleAITree = UFunction::FindFunction("Function GearboxFramework.AIDebugCamera.ToggleAITree");
	}

	UAIDebugCamera_execToggleAITree_Params ToggleAITree_Params;
	memset(&ToggleAITree_Params, 0, sizeof(ToggleAITree_Params));

	this->ProcessEvent(uFnToggleAITree, &ToggleAITree_Params, nullptr);
};

// Function GearboxFramework.AIDebugCamera.ToggleAwareness
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UAIDebugCamera::ToggleAwareness()
{
	static UFunction* uFnToggleAwareness = nullptr;

	if (!uFnToggleAwareness)
	{
		uFnToggleAwareness = UFunction::FindFunction("Function GearboxFramework.AIDebugCamera.ToggleAwareness");
	}

	UAIDebugCamera_execToggleAwareness_Params ToggleAwareness_Params;
	memset(&ToggleAwareness_Params, 0, sizeof(ToggleAwareness_Params));

	this->ProcessEvent(uFnToggleAwareness, &ToggleAwareness_Params, nullptr);
};

// Function GearboxFramework.AIDebugCamera.TogglePaths
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UAIDebugCamera::TogglePaths()
{
	static UFunction* uFnTogglePaths = nullptr;

	if (!uFnTogglePaths)
	{
		uFnTogglePaths = UFunction::FindFunction("Function GearboxFramework.AIDebugCamera.TogglePaths");
	}

	UAIDebugCamera_execTogglePaths_Params TogglePaths_Params;
	memset(&TogglePaths_Params, 0, sizeof(TogglePaths_Params));

	this->ProcessEvent(uFnTogglePaths, &TogglePaths_Params, nullptr);
};

// Function GearboxFramework.AIDebugCamera.ToggleTargetViewCones
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UAIDebugCamera::ToggleTargetViewCones()
{
	static UFunction* uFnToggleTargetViewCones = nullptr;

	if (!uFnToggleTargetViewCones)
	{
		uFnToggleTargetViewCones = UFunction::FindFunction("Function GearboxFramework.AIDebugCamera.ToggleTargetViewCones");
	}

	UAIDebugCamera_execToggleTargetViewCones_Params ToggleTargetViewCones_Params;
	memset(&ToggleTargetViewCones_Params, 0, sizeof(ToggleTargetViewCones_Params));

	this->ProcessEvent(uFnToggleTargetViewCones, &ToggleTargetViewCones_Params, nullptr);
};

// Function GearboxFramework.AIDebugCamera.ToggleCombat
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UAIDebugCamera::ToggleCombat()
{
	static UFunction* uFnToggleCombat = nullptr;

	if (!uFnToggleCombat)
	{
		uFnToggleCombat = UFunction::FindFunction("Function GearboxFramework.AIDebugCamera.ToggleCombat");
	}

	UAIDebugCamera_execToggleCombat_Params ToggleCombat_Params;
	memset(&ToggleCombat_Params, 0, sizeof(ToggleCombat_Params));

	this->ProcessEvent(uFnToggleCombat, &ToggleCombat_Params, nullptr);
};

// Function GearboxFramework.AIDebugCamera.ToggleShowTimers
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UAIDebugCamera::ToggleShowTimers()
{
	static UFunction* uFnToggleShowTimers = nullptr;

	if (!uFnToggleShowTimers)
	{
		uFnToggleShowTimers = UFunction::FindFunction("Function GearboxFramework.AIDebugCamera.ToggleShowTimers");
	}

	UAIDebugCamera_execToggleShowTimers_Params ToggleShowTimers_Params;
	memset(&ToggleShowTimers_Params, 0, sizeof(ToggleShowTimers_Params));

	this->ProcessEvent(uFnToggleShowTimers, &ToggleShowTimers_Params, nullptr);
};

// Function GearboxFramework.AIDebugCamera.ToggleFlags
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UAIDebugCamera::ToggleFlags()
{
	static UFunction* uFnToggleFlags = nullptr;

	if (!uFnToggleFlags)
	{
		uFnToggleFlags = UFunction::FindFunction("Function GearboxFramework.AIDebugCamera.ToggleFlags");
	}

	UAIDebugCamera_execToggleFlags_Params ToggleFlags_Params;
	memset(&ToggleFlags_Params, 0, sizeof(ToggleFlags_Params));

	this->ProcessEvent(uFnToggleFlags, &ToggleFlags_Params, nullptr);
};

// Function GearboxFramework.AIDebugCamera.GetTracker
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34248])
// Parameter Info:
// class UAITracker*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UAITracker* UAIDebugCamera::GetTracker()
{
	static UFunction* uFnGetTracker = nullptr;

	if (!uFnGetTracker)
	{
		uFnGetTracker = UFunction::FindFunction("Function GearboxFramework.AIDebugCamera.GetTracker");
	}

	UAIDebugCamera_execGetTracker_Params GetTracker_Params;
	memset(&GetTracker_Params, 0, sizeof(GetTracker_Params));

	uFnGetTracker->iNative = 0;
	uFnGetTracker->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetTracker, &GetTracker_Params, nullptr);
	uFnGetTracker->FunctionFlags |= 0x400;
	uFnGetTracker->iNative = 34248;

	return GetTracker_Params.ReturnValue;
};

// Function GearboxFramework.AIDebugCamera.SetMind
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35906])
// Parameter Info:
// class AGearboxMind*            NewMind                        (CPF_Parm)

void UAIDebugCamera::SetMind(class AGearboxMind* NewMind)
{
	static UFunction* uFnSetMind = nullptr;

	if (!uFnSetMind)
	{
		uFnSetMind = UFunction::FindFunction("Function GearboxFramework.AIDebugCamera.SetMind");
	}

	UAIDebugCamera_execSetMind_Params SetMind_Params;
	memset(&SetMind_Params, 0, sizeof(SetMind_Params));
	memcpy_s(&SetMind_Params.NewMind, sizeof(SetMind_Params.NewMind), &NewMind, sizeof(NewMind));

	uFnSetMind->iNative = 0;
	uFnSetMind->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetMind, &SetMind_Params, nullptr);
	uFnSetMind->FunctionFlags |= 0x400;
	uFnSetMind->iNative = 35906;
};

// Function GearboxFramework.AIDebugCamera.InitDummies
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34532])
// Parameter Info:
// int32_t                        NewNumDummies                  (CPF_Parm)

void UAIDebugCamera::InitDummies(int32_t NewNumDummies)
{
	static UFunction* uFnInitDummies = nullptr;

	if (!uFnInitDummies)
	{
		uFnInitDummies = UFunction::FindFunction("Function GearboxFramework.AIDebugCamera.InitDummies");
	}

	UAIDebugCamera_execInitDummies_Params InitDummies_Params;
	memset(&InitDummies_Params, 0, sizeof(InitDummies_Params));
	memcpy_s(&InitDummies_Params.NewNumDummies, sizeof(InitDummies_Params.NewNumDummies), &NewNumDummies, sizeof(NewNumDummies));

	uFnInitDummies->iNative = 0;
	uFnInitDummies->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInitDummies, &InitDummies_Params, nullptr);
	uFnInitDummies->FunctionFlags |= 0x400;
	uFnInitDummies->iNative = 34532;
};

// Function GearboxFramework.AIDebugCamera.WantsToDoCameraInspection
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36731])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UAIDebugCamera::WantsToDoCameraInspection()
{
	static UFunction* uFnWantsToDoCameraInspection = nullptr;

	if (!uFnWantsToDoCameraInspection)
	{
		uFnWantsToDoCameraInspection = UFunction::FindFunction("Function GearboxFramework.AIDebugCamera.WantsToDoCameraInspection");
	}

	UAIDebugCamera_execWantsToDoCameraInspection_Params WantsToDoCameraInspection_Params;
	memset(&WantsToDoCameraInspection_Params, 0, sizeof(WantsToDoCameraInspection_Params));

	uFnWantsToDoCameraInspection->iNative = 0;
	uFnWantsToDoCameraInspection->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnWantsToDoCameraInspection, &WantsToDoCameraInspection_Params, nullptr);
	uFnWantsToDoCameraInspection->FunctionFlags |= 0x400;
	uFnWantsToDoCameraInspection->iNative = 36731;

	return WantsToDoCameraInspection_Params.ReturnValue;
};

// Function GearboxFramework.AIDebugCamera.SetCurrentInspectedTarget
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35891])
// Parameter Info:
// class AActor*                  TargetActor                    (CPF_Parm)

void UAIDebugCamera::SetCurrentInspectedTarget(class AActor* TargetActor)
{
	static UFunction* uFnSetCurrentInspectedTarget = nullptr;

	if (!uFnSetCurrentInspectedTarget)
	{
		uFnSetCurrentInspectedTarget = UFunction::FindFunction("Function GearboxFramework.AIDebugCamera.SetCurrentInspectedTarget");
	}

	UAIDebugCamera_execSetCurrentInspectedTarget_Params SetCurrentInspectedTarget_Params;
	memset(&SetCurrentInspectedTarget_Params, 0, sizeof(SetCurrentInspectedTarget_Params));
	memcpy_s(&SetCurrentInspectedTarget_Params.TargetActor, sizeof(SetCurrentInspectedTarget_Params.TargetActor), &TargetActor, sizeof(TargetActor));

	uFnSetCurrentInspectedTarget->iNative = 0;
	uFnSetCurrentInspectedTarget->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetCurrentInspectedTarget, &SetCurrentInspectedTarget_Params, nullptr);
	uFnSetCurrentInspectedTarget->FunctionFlags |= 0x400;
	uFnSetCurrentInspectedTarget->iNative = 35891;
};

// Function GearboxFramework.AIDebugCamera.SetPrevSnapshot
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35922])
// Parameter Info:

void UAIDebugCamera::SetPrevSnapshot()
{
	static UFunction* uFnSetPrevSnapshot = nullptr;

	if (!uFnSetPrevSnapshot)
	{
		uFnSetPrevSnapshot = UFunction::FindFunction("Function GearboxFramework.AIDebugCamera.SetPrevSnapshot");
	}

	UAIDebugCamera_execSetPrevSnapshot_Params SetPrevSnapshot_Params;
	memset(&SetPrevSnapshot_Params, 0, sizeof(SetPrevSnapshot_Params));

	uFnSetPrevSnapshot->iNative = 0;
	uFnSetPrevSnapshot->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetPrevSnapshot, &SetPrevSnapshot_Params, nullptr);
	uFnSetPrevSnapshot->FunctionFlags |= 0x400;
	uFnSetPrevSnapshot->iNative = 35922;
};

// Function GearboxFramework.AIDebugCamera.SetNextSnapshot
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35910])
// Parameter Info:

void UAIDebugCamera::SetNextSnapshot()
{
	static UFunction* uFnSetNextSnapshot = nullptr;

	if (!uFnSetNextSnapshot)
	{
		uFnSetNextSnapshot = UFunction::FindFunction("Function GearboxFramework.AIDebugCamera.SetNextSnapshot");
	}

	UAIDebugCamera_execSetNextSnapshot_Params SetNextSnapshot_Params;
	memset(&SetNextSnapshot_Params, 0, sizeof(SetNextSnapshot_Params));

	uFnSetNextSnapshot->iNative = 0;
	uFnSetNextSnapshot->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetNextSnapshot, &SetNextSnapshot_Params, nullptr);
	uFnSetNextSnapshot->FunctionFlags |= 0x400;
	uFnSetNextSnapshot->iNative = 35910;
};

// Function GearboxFramework.AIDebugCamera.NotifyGameUnPaused
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[26537])
// Parameter Info:

void UAIDebugCamera::NotifyGameUnPaused()
{
	static UFunction* uFnNotifyGameUnPaused = nullptr;

	if (!uFnNotifyGameUnPaused)
	{
		uFnNotifyGameUnPaused = UFunction::FindFunction("Function GearboxFramework.AIDebugCamera.NotifyGameUnPaused");
	}

	UAIDebugCamera_execNotifyGameUnPaused_Params NotifyGameUnPaused_Params;
	memset(&NotifyGameUnPaused_Params, 0, sizeof(NotifyGameUnPaused_Params));

	uFnNotifyGameUnPaused->iNative = 0;
	uFnNotifyGameUnPaused->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnNotifyGameUnPaused, &NotifyGameUnPaused_Params, nullptr);
	uFnNotifyGameUnPaused->FunctionFlags |= 0x400;
	uFnNotifyGameUnPaused->iNative = 26537;
};

// Function GearboxFramework.AIDebugCamera.NotifyGamePaused
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[26536])
// Parameter Info:

void UAIDebugCamera::NotifyGamePaused()
{
	static UFunction* uFnNotifyGamePaused = nullptr;

	if (!uFnNotifyGamePaused)
	{
		uFnNotifyGamePaused = UFunction::FindFunction("Function GearboxFramework.AIDebugCamera.NotifyGamePaused");
	}

	UAIDebugCamera_execNotifyGamePaused_Params NotifyGamePaused_Params;
	memset(&NotifyGamePaused_Params, 0, sizeof(NotifyGamePaused_Params));

	uFnNotifyGamePaused->iNative = 0;
	uFnNotifyGamePaused->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnNotifyGamePaused, &NotifyGamePaused_Params, nullptr);
	uFnNotifyGamePaused->FunctionFlags |= 0x400;
	uFnNotifyGamePaused->iNative = 26536;
};

// Function GearboxFramework.AIDebugCamera.Display
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[7436])
// Parameter Info:
// class AHUD*                    HUD                            (CPF_Parm)

void UAIDebugCamera::Display(class AHUD* HUD)
{
	static UFunction* uFnDisplay = nullptr;

	if (!uFnDisplay)
	{
		uFnDisplay = UFunction::FindFunction("Function GearboxFramework.AIDebugCamera.Display");
	}

	UAIDebugCamera_execDisplay_Params Display_Params;
	memset(&Display_Params, 0, sizeof(Display_Params));
	memcpy_s(&Display_Params.HUD, sizeof(Display_Params.HUD), &HUD, sizeof(HUD));

	uFnDisplay->iNative = 0;
	uFnDisplay->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnDisplay, &Display_Params, nullptr);
	uFnDisplay->FunctionFlags |= 0x400;
	uFnDisplay->iNative = 7436;
};

// Function GearboxFramework.AIResourceExpressionEvaluator.Evaluate
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[22809])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 ContextSource                  (CPF_Parm)

bool UAIResourceExpressionEvaluator::Evaluate(class UObject* ContextSource)
{
	static UFunction* uFnEvaluate = nullptr;

	if (!uFnEvaluate)
	{
		uFnEvaluate = UFunction::FindFunction("Function GearboxFramework.AIResourceExpressionEvaluator.Evaluate");
	}

	UAIResourceExpressionEvaluator_execEvaluate_Params Evaluate_Params;
	memset(&Evaluate_Params, 0, sizeof(Evaluate_Params));
	memcpy_s(&Evaluate_Params.ContextSource, sizeof(Evaluate_Params.ContextSource), &ContextSource, sizeof(ContextSource));

	uFnEvaluate->iNative = 0;
	uFnEvaluate->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnEvaluate, &Evaluate_Params, nullptr);
	uFnEvaluate->FunctionFlags |= 0x400;
	uFnEvaluate->iNative = 22809;

	return Evaluate_Params.ReturnValue;
};

// Function GearboxFramework.AISoundDefinition.Play
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[765])
// Parameter Info:
// class UITargetable*            SourceTargetable               (CPF_Const | CPF_Parm)
// bool                           bCommunicate                   (CPF_Const | CPF_OptionalParm | CPF_Parm)

void UAISoundDefinition::Play(class UITargetable* SourceTargetable, bool bCommunicate)
{
	static UFunction* uFnPlay = nullptr;

	if (!uFnPlay)
	{
		uFnPlay = UFunction::FindFunction("Function GearboxFramework.AISoundDefinition.Play");
	}

	UAISoundDefinition_execPlay_Params Play_Params;
	memset(&Play_Params, 0, sizeof(Play_Params));
	memcpy_s(&Play_Params.SourceTargetable, sizeof(Play_Params.SourceTargetable), &SourceTargetable, sizeof(SourceTargetable));
	Play_Params.bCommunicate = bCommunicate;

	uFnPlay->iNative = 0;
	uFnPlay->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPlay, &Play_Params, nullptr);
	uFnPlay->FunctionFlags |= 0x400;
	uFnPlay->iNative = 765;
};

// Function GearboxFramework.AISoundDefinition.GetLoudness
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34130])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float UAISoundDefinition::GetLoudness()
{
	static UFunction* uFnGetLoudness = nullptr;

	if (!uFnGetLoudness)
	{
		uFnGetLoudness = UFunction::FindFunction("Function GearboxFramework.AISoundDefinition.GetLoudness");
	}

	UAISoundDefinition_execGetLoudness_Params GetLoudness_Params;
	memset(&GetLoudness_Params, 0, sizeof(GetLoudness_Params));

	uFnGetLoudness->iNative = 0;
	uFnGetLoudness->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetLoudness, &GetLoudness_Params, nullptr);
	uFnGetLoudness->FunctionFlags |= 0x400;
	uFnGetLoudness->iNative = 34130;

	return GetLoudness_Params.ReturnValue;
};

// Function GearboxFramework.AISoundDefinition.GetRadius
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[14451])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float UAISoundDefinition::GetRadius()
{
	static UFunction* uFnGetRadius = nullptr;

	if (!uFnGetRadius)
	{
		uFnGetRadius = UFunction::FindFunction("Function GearboxFramework.AISoundDefinition.GetRadius");
	}

	UAISoundDefinition_execGetRadius_Params GetRadius_Params;
	memset(&GetRadius_Params, 0, sizeof(GetRadius_Params));

	uFnGetRadius->iNative = 0;
	uFnGetRadius->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetRadius, &GetRadius_Params, nullptr);
	uFnGetRadius->FunctionFlags |= 0x400;
	uFnGetRadius->iNative = 14451;

	return GetRadius_Params.ReturnValue;
};

// Function GearboxFramework.AllegianceExpressionEvaluator.Evaluate
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[22809])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 ContextSource                  (CPF_Parm)

bool UAllegianceExpressionEvaluator::Evaluate(class UObject* ContextSource)
{
	static UFunction* uFnEvaluate = nullptr;

	if (!uFnEvaluate)
	{
		uFnEvaluate = UFunction::FindFunction("Function GearboxFramework.AllegianceExpressionEvaluator.Evaluate");
	}

	UAllegianceExpressionEvaluator_execEvaluate_Params Evaluate_Params;
	memset(&Evaluate_Params, 0, sizeof(Evaluate_Params));
	memcpy_s(&Evaluate_Params.ContextSource, sizeof(Evaluate_Params.ContextSource), &ContextSource, sizeof(ContextSource));

	uFnEvaluate->iNative = 0;
	uFnEvaluate->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnEvaluate, &Evaluate_Params, nullptr);
	uFnEvaluate->FunctionFlags |= 0x400;
	uFnEvaluate->iNative = 22809;

	return Evaluate_Params.ReturnValue;
};

// Function GearboxFramework.AnimNode_StanceTransition.IsTransitionPending
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34699])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        Transition                     (CPF_Parm)

bool UAnimNode_StanceTransition::IsTransitionPending(int32_t Transition)
{
	static UFunction* uFnIsTransitionPending = nullptr;

	if (!uFnIsTransitionPending)
	{
		uFnIsTransitionPending = UFunction::FindFunction("Function GearboxFramework.AnimNode_StanceTransition.IsTransitionPending");
	}

	UAnimNode_StanceTransition_execIsTransitionPending_Params IsTransitionPending_Params;
	memset(&IsTransitionPending_Params, 0, sizeof(IsTransitionPending_Params));
	memcpy_s(&IsTransitionPending_Params.Transition, sizeof(IsTransitionPending_Params.Transition), &Transition, sizeof(Transition));

	uFnIsTransitionPending->iNative = 0;
	uFnIsTransitionPending->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsTransitionPending, &IsTransitionPending_Params, nullptr);
	uFnIsTransitionPending->FunctionFlags |= 0x400;
	uFnIsTransitionPending->iNative = 34699;

	return IsTransitionPending_Params.ReturnValue;
};

// Function GearboxFramework.AnimNode_StanceTransition.CheckQueuedTransitions
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32730])
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

int32_t UAnimNode_StanceTransition::CheckQueuedTransitions()
{
	static UFunction* uFnCheckQueuedTransitions = nullptr;

	if (!uFnCheckQueuedTransitions)
	{
		uFnCheckQueuedTransitions = UFunction::FindFunction("Function GearboxFramework.AnimNode_StanceTransition.CheckQueuedTransitions");
	}

	UAnimNode_StanceTransition_execCheckQueuedTransitions_Params CheckQueuedTransitions_Params;
	memset(&CheckQueuedTransitions_Params, 0, sizeof(CheckQueuedTransitions_Params));

	uFnCheckQueuedTransitions->iNative = 0;
	uFnCheckQueuedTransitions->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCheckQueuedTransitions, &CheckQueuedTransitions_Params, nullptr);
	uFnCheckQueuedTransitions->FunctionFlags |= 0x400;
	uFnCheckQueuedTransitions->iNative = 32730;

	return CheckQueuedTransitions_Params.ReturnValue;
};

// Function GearboxFramework.AnimNodeSpecialMoveBlend.StopDynamicPlayRate
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36302])
// Parameter Info:

void UAnimNodeSpecialMoveBlend::StopDynamicPlayRate()
{
	static UFunction* uFnStopDynamicPlayRate = nullptr;

	if (!uFnStopDynamicPlayRate)
	{
		uFnStopDynamicPlayRate = UFunction::FindFunction("Function GearboxFramework.AnimNodeSpecialMoveBlend.StopDynamicPlayRate");
	}

	UAnimNodeSpecialMoveBlend_execStopDynamicPlayRate_Params StopDynamicPlayRate_Params;
	memset(&StopDynamicPlayRate_Params, 0, sizeof(StopDynamicPlayRate_Params));

	uFnStopDynamicPlayRate->iNative = 0;
	uFnStopDynamicPlayRate->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnStopDynamicPlayRate, &StopDynamicPlayRate_Params, nullptr);
	uFnStopDynamicPlayRate->FunctionFlags |= 0x400;
	uFnStopDynamicPlayRate->iNative = 36302;
};

// Function GearboxFramework.AnimNodeSpecialMoveBlend.StartDynamicPlayRate
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36252])
// Parameter Info:
// class UDynamicPlayRateControlDefinition* InDynamicPlayRateDef           (CPF_Parm)

void UAnimNodeSpecialMoveBlend::StartDynamicPlayRate(class UDynamicPlayRateControlDefinition* InDynamicPlayRateDef)
{
	static UFunction* uFnStartDynamicPlayRate = nullptr;

	if (!uFnStartDynamicPlayRate)
	{
		uFnStartDynamicPlayRate = UFunction::FindFunction("Function GearboxFramework.AnimNodeSpecialMoveBlend.StartDynamicPlayRate");
	}

	UAnimNodeSpecialMoveBlend_execStartDynamicPlayRate_Params StartDynamicPlayRate_Params;
	memset(&StartDynamicPlayRate_Params, 0, sizeof(StartDynamicPlayRate_Params));
	memcpy_s(&StartDynamicPlayRate_Params.InDynamicPlayRateDef, sizeof(StartDynamicPlayRate_Params.InDynamicPlayRateDef), &InDynamicPlayRateDef, sizeof(InDynamicPlayRateDef));

	uFnStartDynamicPlayRate->iNative = 0;
	uFnStartDynamicPlayRate->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnStartDynamicPlayRate, &StartDynamicPlayRate_Params, nullptr);
	uFnStartDynamicPlayRate->FunctionFlags |= 0x400;
	uFnStartDynamicPlayRate->iNative = 36252;
};

// Function GearboxFramework.AnimNodeSpecialMoveBlend.GetCurrentSMData
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34071])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FSpecialMoveData        SMData                         (CPF_Parm | CPF_OutParm)

bool UAnimNodeSpecialMoveBlend::GetCurrentSMData(struct FSpecialMoveData& SMData)
{
	static UFunction* uFnGetCurrentSMData = nullptr;

	if (!uFnGetCurrentSMData)
	{
		uFnGetCurrentSMData = UFunction::FindFunction("Function GearboxFramework.AnimNodeSpecialMoveBlend.GetCurrentSMData");
	}

	UAnimNodeSpecialMoveBlend_execGetCurrentSMData_Params GetCurrentSMData_Params;
	memset(&GetCurrentSMData_Params, 0, sizeof(GetCurrentSMData_Params));
	memcpy_s(&GetCurrentSMData_Params.SMData, sizeof(GetCurrentSMData_Params.SMData), &SMData, sizeof(SMData));

	uFnGetCurrentSMData->iNative = 0;
	uFnGetCurrentSMData->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetCurrentSMData, &GetCurrentSMData_Params, nullptr);
	uFnGetCurrentSMData->FunctionFlags |= 0x400;
	uFnGetCurrentSMData->iNative = 34071;

	memcpy_s(&SMData, sizeof(SMData), &GetCurrentSMData_Params.SMData, sizeof(GetCurrentSMData_Params.SMData));

	return GetCurrentSMData_Params.ReturnValue;
};

// Function GearboxFramework.AnimNodeSpecialMoveBlend.IsPlaying
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34682])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UGearboxAnimDefinition*  AnimSMD                        (CPF_Parm)

bool UAnimNodeSpecialMoveBlend::IsPlaying(class UGearboxAnimDefinition* AnimSMD)
{
	static UFunction* uFnIsPlaying = nullptr;

	if (!uFnIsPlaying)
	{
		uFnIsPlaying = UFunction::FindFunction("Function GearboxFramework.AnimNodeSpecialMoveBlend.IsPlaying");
	}

	UAnimNodeSpecialMoveBlend_execIsPlaying_Params IsPlaying_Params;
	memset(&IsPlaying_Params, 0, sizeof(IsPlaying_Params));
	memcpy_s(&IsPlaying_Params.AnimSMD, sizeof(IsPlaying_Params.AnimSMD), &AnimSMD, sizeof(AnimSMD));

	uFnIsPlaying->iNative = 0;
	uFnIsPlaying->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsPlaying, &IsPlaying_Params, nullptr);
	uFnIsPlaying->FunctionFlags |= 0x400;
	uFnIsPlaying->iNative = 34682;

	return IsPlaying_Params.ReturnValue;
};

// Function GearboxFramework.AnimNodeSpecialMoveBlend.SetRootMotion
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35928])
// Parameter Info:
// class URootMotionDefinition*   RMDef                          (CPF_Parm)

void UAnimNodeSpecialMoveBlend::SetRootMotion(class URootMotionDefinition* RMDef)
{
	static UFunction* uFnSetRootMotion = nullptr;

	if (!uFnSetRootMotion)
	{
		uFnSetRootMotion = UFunction::FindFunction("Function GearboxFramework.AnimNodeSpecialMoveBlend.SetRootMotion");
	}

	UAnimNodeSpecialMoveBlend_execSetRootMotion_Params SetRootMotion_Params;
	memset(&SetRootMotion_Params, 0, sizeof(SetRootMotion_Params));
	memcpy_s(&SetRootMotion_Params.RMDef, sizeof(SetRootMotion_Params.RMDef), &RMDef, sizeof(RMDef));

	uFnSetRootMotion->iNative = 0;
	uFnSetRootMotion->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetRootMotion, &SetRootMotion_Params, nullptr);
	uFnSetRootMotion->FunctionFlags |= 0x400;
	uFnSetRootMotion->iNative = 35928;
};

// Function GearboxFramework.AnimNodeSpecialMoveBlend.GetCurrentAnimDef
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34065])
// Parameter Info:
// class UGearboxAnimDefinition*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UGearboxAnimDefinition* UAnimNodeSpecialMoveBlend::GetCurrentAnimDef()
{
	static UFunction* uFnGetCurrentAnimDef = nullptr;

	if (!uFnGetCurrentAnimDef)
	{
		uFnGetCurrentAnimDef = UFunction::FindFunction("Function GearboxFramework.AnimNodeSpecialMoveBlend.GetCurrentAnimDef");
	}

	UAnimNodeSpecialMoveBlend_execGetCurrentAnimDef_Params GetCurrentAnimDef_Params;
	memset(&GetCurrentAnimDef_Params, 0, sizeof(GetCurrentAnimDef_Params));

	uFnGetCurrentAnimDef->iNative = 0;
	uFnGetCurrentAnimDef->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetCurrentAnimDef, &GetCurrentAnimDef_Params, nullptr);
	uFnGetCurrentAnimDef->FunctionFlags |= 0x400;
	uFnGetCurrentAnimDef->iNative = 34065;

	return GetCurrentAnimDef_Params.ReturnValue;
};

// Function GearboxFramework.AnimNodeSpecialMoveBlend.GetCurrentAnimName
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34066])
// Parameter Info:
// struct FName                   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FName UAnimNodeSpecialMoveBlend::GetCurrentAnimName()
{
	static UFunction* uFnGetCurrentAnimName = nullptr;

	if (!uFnGetCurrentAnimName)
	{
		uFnGetCurrentAnimName = UFunction::FindFunction("Function GearboxFramework.AnimNodeSpecialMoveBlend.GetCurrentAnimName");
	}

	UAnimNodeSpecialMoveBlend_execGetCurrentAnimName_Params GetCurrentAnimName_Params;
	memset(&GetCurrentAnimName_Params, 0, sizeof(GetCurrentAnimName_Params));

	uFnGetCurrentAnimName->iNative = 0;
	uFnGetCurrentAnimName->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetCurrentAnimName, &GetCurrentAnimName_Params, nullptr);
	uFnGetCurrentAnimName->FunctionFlags |= 0x400;
	uFnGetCurrentAnimName->iNative = 34066;

	return GetCurrentAnimName_Params.ReturnValue;
};

// Function GearboxFramework.AnimNodeSpecialMoveBlend.Finish
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[33819])
// Parameter Info:
// bool                           bInterrupted                   (CPF_Parm)

void UAnimNodeSpecialMoveBlend::Finish(bool bInterrupted)
{
	static UFunction* uFnFinish = nullptr;

	if (!uFnFinish)
	{
		uFnFinish = UFunction::FindFunction("Function GearboxFramework.AnimNodeSpecialMoveBlend.Finish");
	}

	UAnimNodeSpecialMoveBlend_execFinish_Params Finish_Params;
	memset(&Finish_Params, 0, sizeof(Finish_Params));
	Finish_Params.bInterrupted = bInterrupted;

	uFnFinish->iNative = 0;
	uFnFinish->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnFinish, &Finish_Params, nullptr);
	uFnFinish->FunctionFlags |= 0x400;
	uFnFinish->iNative = 33819;
};

// Function GearboxFramework.AnimNodeSpecialMoveBlend.Stop
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[623])
// Parameter Info:
// class UGearboxAnimDefinition*  AnimSMD                        (CPF_Parm)
// bool                           bInterrupted                   (CPF_Parm)

void UAnimNodeSpecialMoveBlend::Stop(class UGearboxAnimDefinition* AnimSMD, bool bInterrupted)
{
	static UFunction* uFnStop = nullptr;

	if (!uFnStop)
	{
		uFnStop = UFunction::FindFunction("Function GearboxFramework.AnimNodeSpecialMoveBlend.Stop");
	}

	UAnimNodeSpecialMoveBlend_execStop_Params Stop_Params;
	memset(&Stop_Params, 0, sizeof(Stop_Params));
	memcpy_s(&Stop_Params.AnimSMD, sizeof(Stop_Params.AnimSMD), &AnimSMD, sizeof(AnimSMD));
	Stop_Params.bInterrupted = bInterrupted;

	uFnStop->iNative = 0;
	uFnStop->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnStop, &Stop_Params, nullptr);
	uFnStop->FunctionFlags |= 0x400;
	uFnStop->iNative = 623;
};

// Function GearboxFramework.AnimNodeSpecialMoveBlend.PlayData
// [0x00424400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35451])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FName&            AnimNameOverride               (CPF_OptionalParm | CPF_Parm)
// float                          PlayRateScale                  (CPF_OptionalParm | CPF_Parm)
// float                          BlendInOverride                (CPF_OptionalParm | CPF_Parm)
// float                          BlendOutOverride               (CPF_OptionalParm | CPF_Parm)
// bool                           bDisableNotifies               (CPF_OptionalParm | CPF_Parm)
// float                          StartTimeOverride              (CPF_OptionalParm | CPF_Parm)
// struct FSpecialMoveData        SMData                         (CPF_Parm | CPF_OutParm)

float UAnimNodeSpecialMoveBlend::PlayData(const struct FName& AnimNameOverride, float PlayRateScale, float BlendInOverride, float BlendOutOverride, bool bDisableNotifies, float StartTimeOverride, struct FSpecialMoveData& SMData)
{
	static UFunction* uFnPlayData = nullptr;

	if (!uFnPlayData)
	{
		uFnPlayData = UFunction::FindFunction("Function GearboxFramework.AnimNodeSpecialMoveBlend.PlayData");
	}

	UAnimNodeSpecialMoveBlend_execPlayData_Params PlayData_Params;
	memset(&PlayData_Params, 0, sizeof(PlayData_Params));
	memcpy_s(&PlayData_Params.AnimNameOverride, sizeof(PlayData_Params.AnimNameOverride), &AnimNameOverride, sizeof(AnimNameOverride));
	memcpy_s(&PlayData_Params.PlayRateScale, sizeof(PlayData_Params.PlayRateScale), &PlayRateScale, sizeof(PlayRateScale));
	memcpy_s(&PlayData_Params.BlendInOverride, sizeof(PlayData_Params.BlendInOverride), &BlendInOverride, sizeof(BlendInOverride));
	memcpy_s(&PlayData_Params.BlendOutOverride, sizeof(PlayData_Params.BlendOutOverride), &BlendOutOverride, sizeof(BlendOutOverride));
	PlayData_Params.bDisableNotifies = bDisableNotifies;
	memcpy_s(&PlayData_Params.StartTimeOverride, sizeof(PlayData_Params.StartTimeOverride), &StartTimeOverride, sizeof(StartTimeOverride));
	memcpy_s(&PlayData_Params.SMData, sizeof(PlayData_Params.SMData), &SMData, sizeof(SMData));

	uFnPlayData->iNative = 0;
	uFnPlayData->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPlayData, &PlayData_Params, nullptr);
	uFnPlayData->FunctionFlags |= 0x400;
	uFnPlayData->iNative = 35451;

	memcpy_s(&SMData, sizeof(SMData), &PlayData_Params.SMData, sizeof(PlayData_Params.SMData));

	return PlayData_Params.ReturnValue;
};

// Function GearboxFramework.AnimNodeSpecialMoveBlend.Play
// [0x00024400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[765])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UGearboxAnimDefinition*  CustomAnimSMD                  (CPF_Parm)
// const struct FName&            AnimNameOverride               (CPF_OptionalParm | CPF_Parm)
// float                          PlayRateScale                  (CPF_OptionalParm | CPF_Parm)
// float                          BlendInOverride                (CPF_OptionalParm | CPF_Parm)
// float                          BlendOutOverride               (CPF_OptionalParm | CPF_Parm)
// bool                           bDisableNotifies               (CPF_OptionalParm | CPF_Parm)
// float                          StartTimeOverride              (CPF_OptionalParm | CPF_Parm)

float UAnimNodeSpecialMoveBlend::Play(class UGearboxAnimDefinition* CustomAnimSMD, const struct FName& AnimNameOverride, float PlayRateScale, float BlendInOverride, float BlendOutOverride, bool bDisableNotifies, float StartTimeOverride)
{
	static UFunction* uFnPlay = nullptr;

	if (!uFnPlay)
	{
		uFnPlay = UFunction::FindFunction("Function GearboxFramework.AnimNodeSpecialMoveBlend.Play");
	}

	UAnimNodeSpecialMoveBlend_execPlay_Params Play_Params;
	memset(&Play_Params, 0, sizeof(Play_Params));
	memcpy_s(&Play_Params.CustomAnimSMD, sizeof(Play_Params.CustomAnimSMD), &CustomAnimSMD, sizeof(CustomAnimSMD));
	memcpy_s(&Play_Params.AnimNameOverride, sizeof(Play_Params.AnimNameOverride), &AnimNameOverride, sizeof(AnimNameOverride));
	memcpy_s(&Play_Params.PlayRateScale, sizeof(Play_Params.PlayRateScale), &PlayRateScale, sizeof(PlayRateScale));
	memcpy_s(&Play_Params.BlendInOverride, sizeof(Play_Params.BlendInOverride), &BlendInOverride, sizeof(BlendInOverride));
	memcpy_s(&Play_Params.BlendOutOverride, sizeof(Play_Params.BlendOutOverride), &BlendOutOverride, sizeof(BlendOutOverride));
	Play_Params.bDisableNotifies = bDisableNotifies;
	memcpy_s(&Play_Params.StartTimeOverride, sizeof(Play_Params.StartTimeOverride), &StartTimeOverride, sizeof(StartTimeOverride));

	uFnPlay->iNative = 0;
	uFnPlay->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPlay, &Play_Params, nullptr);
	uFnPlay->FunctionFlags |= 0x400;
	uFnPlay->iNative = 765;

	return Play_Params.ReturnValue;
};

// Function GearboxFramework.AnimPreviewComponent.ListObjValidateSpecialMove
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34841])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 Other                          (CPF_Parm)

bool UAnimPreviewComponent::ListObjValidateSpecialMove(class UObject* Other)
{
	static UFunction* uFnListObjValidateSpecialMove = nullptr;

	if (!uFnListObjValidateSpecialMove)
	{
		uFnListObjValidateSpecialMove = UFunction::FindFunction("Function GearboxFramework.AnimPreviewComponent.ListObjValidateSpecialMove");
	}

	UAnimPreviewComponent_execListObjValidateSpecialMove_Params ListObjValidateSpecialMove_Params;
	memset(&ListObjValidateSpecialMove_Params, 0, sizeof(ListObjValidateSpecialMove_Params));
	memcpy_s(&ListObjValidateSpecialMove_Params.Other, sizeof(ListObjValidateSpecialMove_Params.Other), &Other, sizeof(Other));

	uFnListObjValidateSpecialMove->iNative = 0;
	uFnListObjValidateSpecialMove->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnListObjValidateSpecialMove, &ListObjValidateSpecialMove_Params, nullptr);
	uFnListObjValidateSpecialMove->FunctionFlags |= 0x400;
	uFnListObjValidateSpecialMove->iNative = 34841;

	return ListObjValidateSpecialMove_Params.ReturnValue;
};

// Function GearboxFramework.AttributeExpressionEvaluator.Evaluate
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[22809])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 ContextSource                  (CPF_Parm)

bool UAttributeExpressionEvaluator::Evaluate(class UObject* ContextSource)
{
	static UFunction* uFnEvaluate = nullptr;

	if (!uFnEvaluate)
	{
		uFnEvaluate = UFunction::FindFunction("Function GearboxFramework.AttributeExpressionEvaluator.Evaluate");
	}

	UAttributeExpressionEvaluator_execEvaluate_Params Evaluate_Params;
	memset(&Evaluate_Params, 0, sizeof(Evaluate_Params));
	memcpy_s(&Evaluate_Params.ContextSource, sizeof(Evaluate_Params.ContextSource), &ContextSource, sizeof(ContextSource));

	uFnEvaluate->iNative = 0;
	uFnEvaluate->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnEvaluate, &Evaluate_Params, nullptr);
	uFnEvaluate->FunctionFlags |= 0x400;
	uFnEvaluate->iNative = 22809;

	return Evaluate_Params.ReturnValue;
};

// Function GearboxFramework.AwarenessDefinition.CanCommunicate
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[20407])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// float                          LastSenseTime                  (CPF_Const | CPF_Parm)

float UAwarenessDefinition::CanCommunicate(float LastSenseTime)
{
	static UFunction* uFnCanCommunicate = nullptr;

	if (!uFnCanCommunicate)
	{
		uFnCanCommunicate = UFunction::FindFunction("Function GearboxFramework.AwarenessDefinition.CanCommunicate");
	}

	UAwarenessDefinition_execCanCommunicate_Params CanCommunicate_Params;
	memset(&CanCommunicate_Params, 0, sizeof(CanCommunicate_Params));
	memcpy_s(&CanCommunicate_Params.LastSenseTime, sizeof(CanCommunicate_Params.LastSenseTime), &LastSenseTime, sizeof(LastSenseTime));

	uFnCanCommunicate->iNative = 0;
	uFnCanCommunicate->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCanCommunicate, &CanCommunicate_Params, nullptr);
	uFnCanCommunicate->FunctionFlags |= 0x400;
	uFnCanCommunicate->iNative = 20407;

	return CanCommunicate_Params.ReturnValue;
};

// Function GearboxFramework.AwarenessDefinition.GetDecayRate
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34078])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// float                          LastSenseTime                  (CPF_Const | CPF_Parm)

float UAwarenessDefinition::GetDecayRate(float LastSenseTime)
{
	static UFunction* uFnGetDecayRate = nullptr;

	if (!uFnGetDecayRate)
	{
		uFnGetDecayRate = UFunction::FindFunction("Function GearboxFramework.AwarenessDefinition.GetDecayRate");
	}

	UAwarenessDefinition_execGetDecayRate_Params GetDecayRate_Params;
	memset(&GetDecayRate_Params, 0, sizeof(GetDecayRate_Params));
	memcpy_s(&GetDecayRate_Params.LastSenseTime, sizeof(GetDecayRate_Params.LastSenseTime), &LastSenseTime, sizeof(LastSenseTime));

	uFnGetDecayRate->iNative = 0;
	uFnGetDecayRate->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetDecayRate, &GetDecayRate_Params, nullptr);
	uFnGetDecayRate->FunctionFlags |= 0x400;
	uFnGetDecayRate->iNative = 34078;

	return GetDecayRate_Params.ReturnValue;
};

// Function GearboxFramework.AwarenessDefinition.GetAwareness
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34047])
// Parameter Info:
// EAwareness                     ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// float                          Meter                          (CPF_Const | CPF_Parm)
// float                          LastUpdateTime                 (CPF_Const | CPF_Parm)

EAwareness UAwarenessDefinition::GetAwareness(float Meter, float LastUpdateTime)
{
	static UFunction* uFnGetAwareness = nullptr;

	if (!uFnGetAwareness)
	{
		uFnGetAwareness = UFunction::FindFunction("Function GearboxFramework.AwarenessDefinition.GetAwareness");
	}

	UAwarenessDefinition_execGetAwareness_Params GetAwareness_Params;
	memset(&GetAwareness_Params, 0, sizeof(GetAwareness_Params));
	memcpy_s(&GetAwareness_Params.Meter, sizeof(GetAwareness_Params.Meter), &Meter, sizeof(Meter));
	memcpy_s(&GetAwareness_Params.LastUpdateTime, sizeof(GetAwareness_Params.LastUpdateTime), &LastUpdateTime, sizeof(LastUpdateTime));

	uFnGetAwareness->iNative = 0;
	uFnGetAwareness->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAwareness, &GetAwareness_Params, nullptr);
	uFnGetAwareness->FunctionFlags |= 0x400;
	uFnGetAwareness->iNative = 34047;

	return GetAwareness_Params.ReturnValue;
};

// Function GearboxFramework.AwarenessDefinition.GetSoundSenseModifier
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34213])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float UAwarenessDefinition::GetSoundSenseModifier()
{
	static UFunction* uFnGetSoundSenseModifier = nullptr;

	if (!uFnGetSoundSenseModifier)
	{
		uFnGetSoundSenseModifier = UFunction::FindFunction("Function GearboxFramework.AwarenessDefinition.GetSoundSenseModifier");
	}

	UAwarenessDefinition_execGetSoundSenseModifier_Params GetSoundSenseModifier_Params;
	memset(&GetSoundSenseModifier_Params, 0, sizeof(GetSoundSenseModifier_Params));

	uFnGetSoundSenseModifier->iNative = 0;
	uFnGetSoundSenseModifier->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetSoundSenseModifier, &GetSoundSenseModifier_Params, nullptr);
	uFnGetSoundSenseModifier->FunctionFlags |= 0x400;
	uFnGetSoundSenseModifier->iNative = 34213;

	return GetSoundSenseModifier_Params.ReturnValue;
};

// Function GearboxFramework.AwarenessDefinition.GetSightSenseModifier
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34207])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float UAwarenessDefinition::GetSightSenseModifier()
{
	static UFunction* uFnGetSightSenseModifier = nullptr;

	if (!uFnGetSightSenseModifier)
	{
		uFnGetSightSenseModifier = UFunction::FindFunction("Function GearboxFramework.AwarenessDefinition.GetSightSenseModifier");
	}

	UAwarenessDefinition_execGetSightSenseModifier_Params GetSightSenseModifier_Params;
	memset(&GetSightSenseModifier_Params, 0, sizeof(GetSightSenseModifier_Params));

	uFnGetSightSenseModifier->iNative = 0;
	uFnGetSightSenseModifier->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetSightSenseModifier, &GetSightSenseModifier_Params, nullptr);
	uFnGetSightSenseModifier->FunctionFlags |= 0x400;
	uFnGetSightSenseModifier->iNative = 34207;

	return GetSightSenseModifier_Params.ReturnValue;
};

// Function GearboxFramework.Behavior_AICloak.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_AICloak::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_AICloak.ApplyBehaviorToContext");
	}

	UBehavior_AICloak_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_AIGetTarget.PublishBehaviorOutput
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AActor*                  Target                         (CPF_Parm)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_AIGetTarget::PublishBehaviorOutput(class AActor* Target, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnPublishBehaviorOutput = nullptr;

	if (!uFnPublishBehaviorOutput)
	{
		uFnPublishBehaviorOutput = UFunction::FindFunction("Function GearboxFramework.Behavior_AIGetTarget.PublishBehaviorOutput");
	}

	UBehavior_AIGetTarget_execPublishBehaviorOutput_Params PublishBehaviorOutput_Params;
	memset(&PublishBehaviorOutput_Params, 0, sizeof(PublishBehaviorOutput_Params));
	memcpy_s(&PublishBehaviorOutput_Params.Target, sizeof(PublishBehaviorOutput_Params.Target), &Target, sizeof(Target));
	memcpy_s(&PublishBehaviorOutput_Params.KernelInfo, sizeof(PublishBehaviorOutput_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnPublishBehaviorOutput, &PublishBehaviorOutput_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &PublishBehaviorOutput_Params.KernelInfo, sizeof(PublishBehaviorOutput_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_AIGetTarget.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_AIGetTarget::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_AIGetTarget.ApplyBehaviorToContext");
	}

	UBehavior_AIGetTarget_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_AIHold.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_AIHold::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_AIHold.ApplyBehaviorToContext");
	}

	UBehavior_AIHold_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_AIPriority.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_AIPriority::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_AIPriority.ApplyBehaviorToContext");
	}

	UBehavior_AIPriority_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_AIScriptTarget.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_AIScriptTarget::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_AIScriptTarget.ApplyBehaviorToContext");
	}

	UBehavior_AIScriptTarget_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_CallFunction.CallFunction
// [0x00020500] (FUNC_Simulated | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32654])
// Parameter Info:
// class AActor*                  inActor                        (CPF_Parm)
// const struct FName&            InFunctionName                 (CPF_Parm)

void UBehavior_CallFunction::CallFunction(class AActor* inActor, const struct FName& InFunctionName)
{
	static UFunction* uFnCallFunction = nullptr;

	if (!uFnCallFunction)
	{
		uFnCallFunction = UFunction::FindFunction("Function GearboxFramework.Behavior_CallFunction.CallFunction");
	}

	UBehavior_CallFunction_execCallFunction_Params CallFunction_Params;
	memset(&CallFunction_Params, 0, sizeof(CallFunction_Params));
	memcpy_s(&CallFunction_Params.inActor, sizeof(CallFunction_Params.inActor), &inActor, sizeof(inActor));
	memcpy_s(&CallFunction_Params.InFunctionName, sizeof(CallFunction_Params.InFunctionName), &InFunctionName, sizeof(InFunctionName));

	uFnCallFunction->iNative = 0;
	uFnCallFunction->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCallFunction, &CallFunction_Params, nullptr);
	uFnCallFunction->FunctionFlags |= 0x400;
	uFnCallFunction->iNative = 32654;
};

// Function GearboxFramework.Behavior_CallFunction.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_CallFunction::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_CallFunction.ApplyBehaviorToContext");
	}

	UBehavior_CallFunction_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_ChangeAnyBehaviorSequenceState.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_ChangeAnyBehaviorSequenceState::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_ChangeAnyBehaviorSequenceState.ApplyBehaviorToContext");
	}

	UBehavior_ChangeAnyBehaviorSequenceState_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_ChangeFeatureSwitch.ApplyBehaviorToContext
// [0x00480400] (FUNC_Native | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags) (iNative[14282])
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_ChangeFeatureSwitch::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_ChangeFeatureSwitch.ApplyBehaviorToContext");
	}

	UBehavior_ChangeFeatureSwitch_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	uFnApplyBehaviorToContext->iNative = 0;
	uFnApplyBehaviorToContext->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);
	uFnApplyBehaviorToContext->FunctionFlags |= 0x400;
	uFnApplyBehaviorToContext->iNative = 14282;

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_ChangeLocalBehaviorSequenceState.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_ChangeLocalBehaviorSequenceState::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_ChangeLocalBehaviorSequenceState.ApplyBehaviorToContext");
	}

	UBehavior_ChangeLocalBehaviorSequenceState_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_ChangeRemoteBehaviorSequenceState.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_ChangeRemoteBehaviorSequenceState::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_ChangeRemoteBehaviorSequenceState.ApplyBehaviorToContext");
	}

	UBehavior_ChangeRemoteBehaviorSequenceState_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_ChangeTimer.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_ChangeTimer::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_ChangeTimer.ApplyBehaviorToContext");
	}

	UBehavior_ChangeTimer_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_ClearObjectList.PublishBehaviorOutput
// [0x00480401] (FUNC_Final | FUNC_Native | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags) (iNative[14855])
// Parameter Info:
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)
// class TArray<class UObject*>   List                           (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UBehavior_ClearObjectList::PublishBehaviorOutput(struct FBehaviorKernelInfo& KernelInfo, class TArray<class UObject*>& List)
{
	static UFunction* uFnPublishBehaviorOutput = nullptr;

	if (!uFnPublishBehaviorOutput)
	{
		uFnPublishBehaviorOutput = UFunction::FindFunction("Function GearboxFramework.Behavior_ClearObjectList.PublishBehaviorOutput");
	}

	UBehavior_ClearObjectList_execPublishBehaviorOutput_Params PublishBehaviorOutput_Params;
	memset(&PublishBehaviorOutput_Params, 0, sizeof(PublishBehaviorOutput_Params));
	memcpy_s(&PublishBehaviorOutput_Params.KernelInfo, sizeof(PublishBehaviorOutput_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));
	memcpy_s(&PublishBehaviorOutput_Params.List, sizeof(PublishBehaviorOutput_Params.List), &List, sizeof(List));

	uFnPublishBehaviorOutput->iNative = 0;
	uFnPublishBehaviorOutput->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPublishBehaviorOutput, &PublishBehaviorOutput_Params, nullptr);
	uFnPublishBehaviorOutput->FunctionFlags |= 0x400;
	uFnPublishBehaviorOutput->iNative = 14855;

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &PublishBehaviorOutput_Params.KernelInfo, sizeof(PublishBehaviorOutput_Params.KernelInfo));
	memcpy_s(&List, sizeof(List), &PublishBehaviorOutput_Params.List, sizeof(PublishBehaviorOutput_Params.List));
};

// Function GearboxFramework.Behavior_ClearObjectList.ApplyBehaviorToContext
// [0x00480400] (FUNC_Native | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags) (iNative[14282])
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_ClearObjectList::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_ClearObjectList.ApplyBehaviorToContext");
	}

	UBehavior_ClearObjectList_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	uFnApplyBehaviorToContext->iNative = 0;
	uFnApplyBehaviorToContext->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);
	uFnApplyBehaviorToContext->FunctionFlags |= 0x400;
	uFnApplyBehaviorToContext->iNative = 14282;

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_CompareBool.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_CompareBool::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_CompareBool.ApplyBehaviorToContext");
	}

	UBehavior_CompareBool_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_CompareValues.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_CompareValues::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_CompareValues.ApplyBehaviorToContext");
	}

	UBehavior_CompareValues_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_CustomEvent.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_CustomEvent::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_CustomEvent.ApplyBehaviorToContext");
	}

	UBehavior_CustomEvent_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_Delay.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_Delay::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_Delay.ApplyBehaviorToContext");
	}

	UBehavior_Delay_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_Gate.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_Gate::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_Gate.ApplyBehaviorToContext");
	}

	UBehavior_Gate_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_GetFloatParam.PublishBehaviorOutput
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// float                          Value                          (CPF_Parm)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_GetFloatParam::PublishBehaviorOutput(float Value, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnPublishBehaviorOutput = nullptr;

	if (!uFnPublishBehaviorOutput)
	{
		uFnPublishBehaviorOutput = UFunction::FindFunction("Function GearboxFramework.Behavior_GetFloatParam.PublishBehaviorOutput");
	}

	UBehavior_GetFloatParam_execPublishBehaviorOutput_Params PublishBehaviorOutput_Params;
	memset(&PublishBehaviorOutput_Params, 0, sizeof(PublishBehaviorOutput_Params));
	memcpy_s(&PublishBehaviorOutput_Params.Value, sizeof(PublishBehaviorOutput_Params.Value), &Value, sizeof(Value));
	memcpy_s(&PublishBehaviorOutput_Params.KernelInfo, sizeof(PublishBehaviorOutput_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnPublishBehaviorOutput, &PublishBehaviorOutput_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &PublishBehaviorOutput_Params.KernelInfo, sizeof(PublishBehaviorOutput_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_GetFloatParam.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_GetFloatParam::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_GetFloatParam.ApplyBehaviorToContext");
	}

	UBehavior_GetFloatParam_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_GetObjectParam.PublishBehaviorOutput
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 Value                          (CPF_Parm)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_GetObjectParam::PublishBehaviorOutput(class UObject* Value, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnPublishBehaviorOutput = nullptr;

	if (!uFnPublishBehaviorOutput)
	{
		uFnPublishBehaviorOutput = UFunction::FindFunction("Function GearboxFramework.Behavior_GetObjectParam.PublishBehaviorOutput");
	}

	UBehavior_GetObjectParam_execPublishBehaviorOutput_Params PublishBehaviorOutput_Params;
	memset(&PublishBehaviorOutput_Params, 0, sizeof(PublishBehaviorOutput_Params));
	memcpy_s(&PublishBehaviorOutput_Params.Value, sizeof(PublishBehaviorOutput_Params.Value), &Value, sizeof(Value));
	memcpy_s(&PublishBehaviorOutput_Params.KernelInfo, sizeof(PublishBehaviorOutput_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnPublishBehaviorOutput, &PublishBehaviorOutput_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &PublishBehaviorOutput_Params.KernelInfo, sizeof(PublishBehaviorOutput_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_GetObjectParam.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_GetObjectParam::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_GetObjectParam.ApplyBehaviorToContext");
	}

	UBehavior_GetObjectParam_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_GetVectorParam.PublishBehaviorOutput
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// float                          R                              (CPF_Parm)
// float                          G                              (CPF_Parm)
// float                          B                              (CPF_Parm)
// float                          A                              (CPF_Parm)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_GetVectorParam::PublishBehaviorOutput(float R, float G, float B, float A, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnPublishBehaviorOutput = nullptr;

	if (!uFnPublishBehaviorOutput)
	{
		uFnPublishBehaviorOutput = UFunction::FindFunction("Function GearboxFramework.Behavior_GetVectorParam.PublishBehaviorOutput");
	}

	UBehavior_GetVectorParam_execPublishBehaviorOutput_Params PublishBehaviorOutput_Params;
	memset(&PublishBehaviorOutput_Params, 0, sizeof(PublishBehaviorOutput_Params));
	memcpy_s(&PublishBehaviorOutput_Params.R, sizeof(PublishBehaviorOutput_Params.R), &R, sizeof(R));
	memcpy_s(&PublishBehaviorOutput_Params.G, sizeof(PublishBehaviorOutput_Params.G), &G, sizeof(G));
	memcpy_s(&PublishBehaviorOutput_Params.B, sizeof(PublishBehaviorOutput_Params.B), &B, sizeof(B));
	memcpy_s(&PublishBehaviorOutput_Params.A, sizeof(PublishBehaviorOutput_Params.A), &A, sizeof(A));
	memcpy_s(&PublishBehaviorOutput_Params.KernelInfo, sizeof(PublishBehaviorOutput_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnPublishBehaviorOutput, &PublishBehaviorOutput_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &PublishBehaviorOutput_Params.KernelInfo, sizeof(PublishBehaviorOutput_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_GetVectorParam.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_GetVectorParam::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_GetVectorParam.ApplyBehaviorToContext");
	}

	UBehavior_GetVectorParam_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_GFxUIAction.AssembleOptionalParameters
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class TArray<struct FGFxUIActionParam> OptParams                      (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UBehavior_GFxUIAction::AssembleOptionalParameters(class TArray<struct FGFxUIActionParam>& OptParams)
{
	static UFunction* uFnAssembleOptionalParameters = nullptr;

	if (!uFnAssembleOptionalParameters)
	{
		uFnAssembleOptionalParameters = UFunction::FindFunction("Function GearboxFramework.Behavior_GFxUIAction.AssembleOptionalParameters");
	}

	UBehavior_GFxUIAction_execAssembleOptionalParameters_Params AssembleOptionalParameters_Params;
	memset(&AssembleOptionalParameters_Params, 0, sizeof(AssembleOptionalParameters_Params));
	memcpy_s(&AssembleOptionalParameters_Params.OptParams, sizeof(AssembleOptionalParameters_Params.OptParams), &OptParams, sizeof(OptParams));

	this->ProcessEvent(uFnAssembleOptionalParameters, &AssembleOptionalParameters_Params, nullptr);

	memcpy_s(&OptParams, sizeof(OptParams), &AssembleOptionalParameters_Params.OptParams, sizeof(AssembleOptionalParameters_Params.OptParams));
};

// Function GearboxFramework.Behavior_GFxUIAction.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_GFxUIAction::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_GFxUIAction.ApplyBehaviorToContext");
	}

	UBehavior_GFxUIAction_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_AttachGFxMovieClip.PublishBehaviorOutput
// [0x12480800] (FUNC_Event | FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 Result                         (CPF_Parm)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_AttachGFxMovieClip::eventPublishBehaviorOutput(class UObject* Result, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnPublishBehaviorOutput = nullptr;

	if (!uFnPublishBehaviorOutput)
	{
		uFnPublishBehaviorOutput = UFunction::FindFunction("Function GearboxFramework.Behavior_AttachGFxMovieClip.PublishBehaviorOutput");
	}

	UBehavior_AttachGFxMovieClip_eventPublishBehaviorOutput_Params PublishBehaviorOutput_Params;
	memset(&PublishBehaviorOutput_Params, 0, sizeof(PublishBehaviorOutput_Params));
	memcpy_s(&PublishBehaviorOutput_Params.Result, sizeof(PublishBehaviorOutput_Params.Result), &Result, sizeof(Result));
	memcpy_s(&PublishBehaviorOutput_Params.KernelInfo, sizeof(PublishBehaviorOutput_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnPublishBehaviorOutput, &PublishBehaviorOutput_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &PublishBehaviorOutput_Params.KernelInfo, sizeof(PublishBehaviorOutput_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_AttachGFxMovieClip.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_AttachGFxMovieClip::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_AttachGFxMovieClip.ApplyBehaviorToContext");
	}

	UBehavior_AttachGFxMovieClip_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_InterpActor.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_InterpActor::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_InterpActor.ApplyBehaviorToContext");
	}

	UBehavior_InterpActor_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_InterpolateFloatOverTime.PublishBehaviorOutput
// [0x12420000] (FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// float                          Result                         (CPF_Parm)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_InterpolateFloatOverTime::PublishBehaviorOutput(float Result, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnPublishBehaviorOutput = nullptr;

	if (!uFnPublishBehaviorOutput)
	{
		uFnPublishBehaviorOutput = UFunction::FindFunction("Function GearboxFramework.Behavior_InterpolateFloatOverTime.PublishBehaviorOutput");
	}

	UBehavior_InterpolateFloatOverTime_execPublishBehaviorOutput_Params PublishBehaviorOutput_Params;
	memset(&PublishBehaviorOutput_Params, 0, sizeof(PublishBehaviorOutput_Params));
	memcpy_s(&PublishBehaviorOutput_Params.Result, sizeof(PublishBehaviorOutput_Params.Result), &Result, sizeof(Result));
	memcpy_s(&PublishBehaviorOutput_Params.KernelInfo, sizeof(PublishBehaviorOutput_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnPublishBehaviorOutput, &PublishBehaviorOutput_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &PublishBehaviorOutput_Params.KernelInfo, sizeof(PublishBehaviorOutput_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_InterpolateFloatOverTime.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_InterpolateFloatOverTime::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_InterpolateFloatOverTime.ApplyBehaviorToContext");
	}

	UBehavior_InterpolateFloatOverTime_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_IsSequenceEnabled.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_IsSequenceEnabled::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_IsSequenceEnabled.ApplyBehaviorToContext");
	}

	UBehavior_IsSequenceEnabled_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_LeaderCommand.ApplyBehaviorToContext
// [0x00480400] (FUNC_Native | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags) (iNative[14282])
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_LeaderCommand::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_LeaderCommand.ApplyBehaviorToContext");
	}

	UBehavior_LeaderCommand_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	uFnApplyBehaviorToContext->iNative = 0;
	uFnApplyBehaviorToContext->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);
	uFnApplyBehaviorToContext->FunctionFlags |= 0x400;
	uFnApplyBehaviorToContext->iNative = 14282;

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_Metronome.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_Metronome::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_Metronome.ApplyBehaviorToContext");
	}

	UBehavior_Metronome_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_ModifyTimer.PublishBehaviorOutput
// [0x12420000] (FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// float                          TimeRemaining                  (CPF_Parm)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_ModifyTimer::PublishBehaviorOutput(float TimeRemaining, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnPublishBehaviorOutput = nullptr;

	if (!uFnPublishBehaviorOutput)
	{
		uFnPublishBehaviorOutput = UFunction::FindFunction("Function GearboxFramework.Behavior_ModifyTimer.PublishBehaviorOutput");
	}

	UBehavior_ModifyTimer_execPublishBehaviorOutput_Params PublishBehaviorOutput_Params;
	memset(&PublishBehaviorOutput_Params, 0, sizeof(PublishBehaviorOutput_Params));
	memcpy_s(&PublishBehaviorOutput_Params.TimeRemaining, sizeof(PublishBehaviorOutput_Params.TimeRemaining), &TimeRemaining, sizeof(TimeRemaining));
	memcpy_s(&PublishBehaviorOutput_Params.KernelInfo, sizeof(PublishBehaviorOutput_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnPublishBehaviorOutput, &PublishBehaviorOutput_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &PublishBehaviorOutput_Params.KernelInfo, sizeof(PublishBehaviorOutput_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_ModifyTimer.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_ModifyTimer::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_ModifyTimer.ApplyBehaviorToContext");
	}

	UBehavior_ModifyTimer_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_MultiTargetSearch.PublishBehaviorOutput
// [0x12480800] (FUNC_Event | FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// int32_t                        TargetCount                    (CPF_Parm)
// class AActor*                  Target                         (CPF_Parm)
// const struct FVector&          TargetLocation                 (CPF_Parm)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_MultiTargetSearch::eventPublishBehaviorOutput(int32_t TargetCount, class AActor* Target, const struct FVector& TargetLocation, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnPublishBehaviorOutput = nullptr;

	if (!uFnPublishBehaviorOutput)
	{
		uFnPublishBehaviorOutput = UFunction::FindFunction("Function GearboxFramework.Behavior_MultiTargetSearch.PublishBehaviorOutput");
	}

	UBehavior_MultiTargetSearch_eventPublishBehaviorOutput_Params PublishBehaviorOutput_Params;
	memset(&PublishBehaviorOutput_Params, 0, sizeof(PublishBehaviorOutput_Params));
	memcpy_s(&PublishBehaviorOutput_Params.TargetCount, sizeof(PublishBehaviorOutput_Params.TargetCount), &TargetCount, sizeof(TargetCount));
	memcpy_s(&PublishBehaviorOutput_Params.Target, sizeof(PublishBehaviorOutput_Params.Target), &Target, sizeof(Target));
	memcpy_s(&PublishBehaviorOutput_Params.TargetLocation, sizeof(PublishBehaviorOutput_Params.TargetLocation), &TargetLocation, sizeof(TargetLocation));
	memcpy_s(&PublishBehaviorOutput_Params.KernelInfo, sizeof(PublishBehaviorOutput_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnPublishBehaviorOutput, &PublishBehaviorOutput_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &PublishBehaviorOutput_Params.KernelInfo, sizeof(PublishBehaviorOutput_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_MultiTargetSearch.ApplyBehaviorToContext
// [0x00480400] (FUNC_Native | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags) (iNative[14282])
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_MultiTargetSearch::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_MultiTargetSearch.ApplyBehaviorToContext");
	}

	UBehavior_MultiTargetSearch_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	uFnApplyBehaviorToContext->iNative = 0;
	uFnApplyBehaviorToContext->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);
	uFnApplyBehaviorToContext->FunctionFlags |= 0x400;
	uFnApplyBehaviorToContext->iNative = 14282;

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_PlayFoleySound.ApplyBehaviorToContext
// [0x00480400] (FUNC_Native | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags) (iNative[14282])
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_PlayFoleySound::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_PlayFoleySound.ApplyBehaviorToContext");
	}

	UBehavior_PlayFoleySound_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	uFnApplyBehaviorToContext->iNative = 0;
	uFnApplyBehaviorToContext->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);
	uFnApplyBehaviorToContext->FunctionFlags |= 0x400;
	uFnApplyBehaviorToContext->iNative = 14282;

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_PostAkEvent.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_PostAkEvent::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_PostAkEvent.ApplyBehaviorToContext");
	}

	UBehavior_PostAkEvent_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_RandomGate.ApplyBehaviorToContext
// [0x00480C00] (FUNC_Native | FUNC_Event | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags) (iNative[14282])
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_RandomGate::eventApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_RandomGate.ApplyBehaviorToContext");
	}

	UBehavior_RandomGate_eventApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	uFnApplyBehaviorToContext->iNative = 0;
	uFnApplyBehaviorToContext->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);
	uFnApplyBehaviorToContext->FunctionFlags |= 0x400;
	uFnApplyBehaviorToContext->iNative = 14282;

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_SetFlag.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_SetFlag::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_SetFlag.ApplyBehaviorToContext");
	}

	UBehavior_SetFlag_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_SetFloatParam.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_SetFloatParam::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_SetFloatParam.ApplyBehaviorToContext");
	}

	UBehavior_SetFloatParam_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_SetFoleyParams.ApplyBehaviorToContext
// [0x00480400] (FUNC_Native | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags) (iNative[14282])
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_SetFoleyParams::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_SetFoleyParams.ApplyBehaviorToContext");
	}

	UBehavior_SetFoleyParams_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	uFnApplyBehaviorToContext->iNative = 0;
	uFnApplyBehaviorToContext->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);
	uFnApplyBehaviorToContext->FunctionFlags |= 0x400;
	uFnApplyBehaviorToContext->iNative = 14282;

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_SetObjectList.PublishBehaviorOutput
// [0x00480401] (FUNC_Final | FUNC_Native | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags) (iNative[14855])
// Parameter Info:
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)
// class TArray<class UObject*>   List                           (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UBehavior_SetObjectList::PublishBehaviorOutput(struct FBehaviorKernelInfo& KernelInfo, class TArray<class UObject*>& List)
{
	static UFunction* uFnPublishBehaviorOutput = nullptr;

	if (!uFnPublishBehaviorOutput)
	{
		uFnPublishBehaviorOutput = UFunction::FindFunction("Function GearboxFramework.Behavior_SetObjectList.PublishBehaviorOutput");
	}

	UBehavior_SetObjectList_execPublishBehaviorOutput_Params PublishBehaviorOutput_Params;
	memset(&PublishBehaviorOutput_Params, 0, sizeof(PublishBehaviorOutput_Params));
	memcpy_s(&PublishBehaviorOutput_Params.KernelInfo, sizeof(PublishBehaviorOutput_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));
	memcpy_s(&PublishBehaviorOutput_Params.List, sizeof(PublishBehaviorOutput_Params.List), &List, sizeof(List));

	uFnPublishBehaviorOutput->iNative = 0;
	uFnPublishBehaviorOutput->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPublishBehaviorOutput, &PublishBehaviorOutput_Params, nullptr);
	uFnPublishBehaviorOutput->FunctionFlags |= 0x400;
	uFnPublishBehaviorOutput->iNative = 14855;

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &PublishBehaviorOutput_Params.KernelInfo, sizeof(PublishBehaviorOutput_Params.KernelInfo));
	memcpy_s(&List, sizeof(List), &PublishBehaviorOutput_Params.List, sizeof(PublishBehaviorOutput_Params.List));
};

// Function GearboxFramework.Behavior_SetObjectList.ApplyBehaviorToContext
// [0x00480400] (FUNC_Native | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags) (iNative[14282])
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_SetObjectList::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_SetObjectList.ApplyBehaviorToContext");
	}

	UBehavior_SetObjectList_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	uFnApplyBehaviorToContext->iNative = 0;
	uFnApplyBehaviorToContext->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);
	uFnApplyBehaviorToContext->FunctionFlags |= 0x400;
	uFnApplyBehaviorToContext->iNative = 14282;

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_SetObjectParam.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_SetObjectParam::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_SetObjectParam.ApplyBehaviorToContext");
	}

	UBehavior_SetObjectParam_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_SetStance.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_SetStance::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_SetStance.ApplyBehaviorToContext");
	}

	UBehavior_SetStance_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_SetVectorParam.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_SetVectorParam::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_SetVectorParam.ApplyBehaviorToContext");
	}

	UBehavior_SetVectorParam_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_SpawnDecalActor.PublishBehaviorOutput
// [0x00480400] (FUNC_Native | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags) (iNative[14855])
// Parameter Info:
// class ADecalActorBase*         Decal                          (CPF_Parm)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_SpawnDecalActor::PublishBehaviorOutput(class ADecalActorBase* Decal, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnPublishBehaviorOutput = nullptr;

	if (!uFnPublishBehaviorOutput)
	{
		uFnPublishBehaviorOutput = UFunction::FindFunction("Function GearboxFramework.Behavior_SpawnDecalActor.PublishBehaviorOutput");
	}

	UBehavior_SpawnDecalActor_execPublishBehaviorOutput_Params PublishBehaviorOutput_Params;
	memset(&PublishBehaviorOutput_Params, 0, sizeof(PublishBehaviorOutput_Params));
	memcpy_s(&PublishBehaviorOutput_Params.Decal, sizeof(PublishBehaviorOutput_Params.Decal), &Decal, sizeof(Decal));
	memcpy_s(&PublishBehaviorOutput_Params.KernelInfo, sizeof(PublishBehaviorOutput_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	uFnPublishBehaviorOutput->iNative = 0;
	uFnPublishBehaviorOutput->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPublishBehaviorOutput, &PublishBehaviorOutput_Params, nullptr);
	uFnPublishBehaviorOutput->FunctionFlags |= 0x400;
	uFnPublishBehaviorOutput->iNative = 14855;

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &PublishBehaviorOutput_Params.KernelInfo, sizeof(PublishBehaviorOutput_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_SpawnDecalActor.ApplyBehaviorToContext
// [0x00480400] (FUNC_Native | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags) (iNative[14282])
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_SpawnDecalActor::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_SpawnDecalActor.ApplyBehaviorToContext");
	}

	UBehavior_SpawnDecalActor_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	uFnApplyBehaviorToContext->iNative = 0;
	uFnApplyBehaviorToContext->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);
	uFnApplyBehaviorToContext->FunctionFlags |= 0x400;
	uFnApplyBehaviorToContext->iNative = 14282;

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_Speak.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_Speak::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_Speak.ApplyBehaviorToContext");
	}

	UBehavior_Speak_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_SpecialMove.PlaySpecialMove
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class USpecialMoveComponent*   SMC                            (CPF_Parm | CPF_EditInline)
// class USpecialMoveDefinition*  SMD                            (CPF_Parm)

void UBehavior_SpecialMove::PlaySpecialMove(class USpecialMoveComponent* SMC, class USpecialMoveDefinition* SMD)
{
	static UFunction* uFnPlaySpecialMove = nullptr;

	if (!uFnPlaySpecialMove)
	{
		uFnPlaySpecialMove = UFunction::FindFunction("Function GearboxFramework.Behavior_SpecialMove.PlaySpecialMove");
	}

	UBehavior_SpecialMove_execPlaySpecialMove_Params PlaySpecialMove_Params;
	memset(&PlaySpecialMove_Params, 0, sizeof(PlaySpecialMove_Params));
	memcpy_s(&PlaySpecialMove_Params.SMC, sizeof(PlaySpecialMove_Params.SMC), &SMC, sizeof(SMC));
	memcpy_s(&PlaySpecialMove_Params.SMD, sizeof(PlaySpecialMove_Params.SMD), &SMD, sizeof(SMD));

	this->ProcessEvent(uFnPlaySpecialMove, &PlaySpecialMove_Params, nullptr);
};

// Function GearboxFramework.Behavior_SpecialMove.TriggerOutput
// [0x12420000] (FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_SpecialMove::TriggerOutput(struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnTriggerOutput = nullptr;

	if (!uFnTriggerOutput)
	{
		uFnTriggerOutput = UFunction::FindFunction("Function GearboxFramework.Behavior_SpecialMove.TriggerOutput");
	}

	UBehavior_SpecialMove_execTriggerOutput_Params TriggerOutput_Params;
	memset(&TriggerOutput_Params, 0, sizeof(TriggerOutput_Params));
	memcpy_s(&TriggerOutput_Params.KernelInfo, sizeof(TriggerOutput_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnTriggerOutput, &TriggerOutput_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &TriggerOutput_Params.KernelInfo, sizeof(TriggerOutput_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_SpecialMove.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_SpecialMove::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_SpecialMove.ApplyBehaviorToContext");
	}

	UBehavior_SpecialMove_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_SpecialMoveStop.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_SpecialMoveStop::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_SpecialMoveStop.ApplyBehaviorToContext");
	}

	UBehavior_SpecialMoveStop_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_StanceTransition.GetTransitionNode
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UAnimNode_StanceTransition* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 ContextObject                  (CPF_Parm)

class UAnimNode_StanceTransition* UBehavior_StanceTransition::GetTransitionNode(class UObject* ContextObject)
{
	static UFunction* uFnGetTransitionNode = nullptr;

	if (!uFnGetTransitionNode)
	{
		uFnGetTransitionNode = UFunction::FindFunction("Function GearboxFramework.Behavior_StanceTransition.GetTransitionNode");
	}

	UBehavior_StanceTransition_execGetTransitionNode_Params GetTransitionNode_Params;
	memset(&GetTransitionNode_Params, 0, sizeof(GetTransitionNode_Params));
	memcpy_s(&GetTransitionNode_Params.ContextObject, sizeof(GetTransitionNode_Params.ContextObject), &ContextObject, sizeof(ContextObject));

	this->ProcessEvent(uFnGetTransitionNode, &GetTransitionNode_Params, nullptr);

	return GetTransitionNode_Params.ReturnValue;
};

// Function GearboxFramework.Behavior_StanceTransition.StartTransition
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UAnimNode_StanceTransition* TransitionNode                 (CPF_Parm)

void UBehavior_StanceTransition::StartTransition(class UObject* ContextObject, class UAnimNode_StanceTransition* TransitionNode)
{
	static UFunction* uFnStartTransition = nullptr;

	if (!uFnStartTransition)
	{
		uFnStartTransition = UFunction::FindFunction("Function GearboxFramework.Behavior_StanceTransition.StartTransition");
	}

	UBehavior_StanceTransition_execStartTransition_Params StartTransition_Params;
	memset(&StartTransition_Params, 0, sizeof(StartTransition_Params));
	memcpy_s(&StartTransition_Params.ContextObject, sizeof(StartTransition_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&StartTransition_Params.TransitionNode, sizeof(StartTransition_Params.TransitionNode), &TransitionNode, sizeof(TransitionNode));

	this->ProcessEvent(uFnStartTransition, &StartTransition_Params, nullptr);
};

// Function GearboxFramework.Behavior_StanceTransition.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_StanceTransition::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_StanceTransition.ApplyBehaviorToContext");
	}

	UBehavior_StanceTransition_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_StartAkAmbientSound.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_StartAkAmbientSound::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_StartAkAmbientSound.ApplyBehaviorToContext");
	}

	UBehavior_StartAkAmbientSound_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_StopAkAmbientSound.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_StopAkAmbientSound::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_StopAkAmbientSound.ApplyBehaviorToContext");
	}

	UBehavior_StopAkAmbientSound_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_StopSpeaking.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_StopSpeaking::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_StopSpeaking.ApplyBehaviorToContext");
	}

	UBehavior_StopSpeaking_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_TargetSearch.PublishBehaviorOutput
// [0x12480800] (FUNC_Event | FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AActor*                  TargetActor                    (CPF_Parm)
// const struct FVector&          TargetLocation                 (CPF_Parm)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_TargetSearch::eventPublishBehaviorOutput(class AActor* TargetActor, const struct FVector& TargetLocation, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnPublishBehaviorOutput = nullptr;

	if (!uFnPublishBehaviorOutput)
	{
		uFnPublishBehaviorOutput = UFunction::FindFunction("Function GearboxFramework.Behavior_TargetSearch.PublishBehaviorOutput");
	}

	UBehavior_TargetSearch_eventPublishBehaviorOutput_Params PublishBehaviorOutput_Params;
	memset(&PublishBehaviorOutput_Params, 0, sizeof(PublishBehaviorOutput_Params));
	memcpy_s(&PublishBehaviorOutput_Params.TargetActor, sizeof(PublishBehaviorOutput_Params.TargetActor), &TargetActor, sizeof(TargetActor));
	memcpy_s(&PublishBehaviorOutput_Params.TargetLocation, sizeof(PublishBehaviorOutput_Params.TargetLocation), &TargetLocation, sizeof(TargetLocation));
	memcpy_s(&PublishBehaviorOutput_Params.KernelInfo, sizeof(PublishBehaviorOutput_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnPublishBehaviorOutput, &PublishBehaviorOutput_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &PublishBehaviorOutput_Params.KernelInfo, sizeof(PublishBehaviorOutput_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_TargetSearch.ApplyBehaviorToContext
// [0x00480400] (FUNC_Native | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags) (iNative[14282])
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_TargetSearch::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_TargetSearch.ApplyBehaviorToContext");
	}

	UBehavior_TargetSearch_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	uFnApplyBehaviorToContext->iNative = 0;
	uFnApplyBehaviorToContext->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);
	uFnApplyBehaviorToContext->FunctionFlags |= 0x400;
	uFnApplyBehaviorToContext->iNative = 14282;

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_TimedGate.ApplyBehaviorToContext
// [0x00480400] (FUNC_Native | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags) (iNative[14282])
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_TimedGate::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_TimedGate.ApplyBehaviorToContext");
	}

	UBehavior_TimedGate_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	uFnApplyBehaviorToContext->iNative = 0;
	uFnApplyBehaviorToContext->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);
	uFnApplyBehaviorToContext->FunctionFlags |= 0x400;
	uFnApplyBehaviorToContext->iNative = 14282;

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_ToggleDanger.ApplyToDanger
// [0x12080000] (FUNC_Protected | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UGBXDangerComponent*     Danger                         (CPF_Parm | CPF_EditInline)

void UBehavior_ToggleDanger::ApplyToDanger(class UGBXDangerComponent* Danger)
{
	static UFunction* uFnApplyToDanger = nullptr;

	if (!uFnApplyToDanger)
	{
		uFnApplyToDanger = UFunction::FindFunction("Function GearboxFramework.Behavior_ToggleDanger.ApplyToDanger");
	}

	UBehavior_ToggleDanger_execApplyToDanger_Params ApplyToDanger_Params;
	memset(&ApplyToDanger_Params, 0, sizeof(ApplyToDanger_Params));
	memcpy_s(&ApplyToDanger_Params.Danger, sizeof(ApplyToDanger_Params.Danger), &Danger, sizeof(Danger));

	this->ProcessEvent(uFnApplyToDanger, &ApplyToDanger_Params, nullptr);
};

// Function GearboxFramework.Behavior_ToggleDanger.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_ToggleDanger::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_ToggleDanger.ApplyBehaviorToContext");
	}

	UBehavior_ToggleDanger_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_UIBase.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_UIBase::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_UIBase.ApplyBehaviorToContext");
	}

	UBehavior_UIBase_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_UIBase.GetTargetObject
// [0x00020500] (FUNC_Simulated | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34237])
// Parameter Info:
// class UGFxObject*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 ContextObject                  (CPF_Parm)

class UGFxObject* UBehavior_UIBase::GetTargetObject(class UObject* ContextObject)
{
	static UFunction* uFnGetTargetObject = nullptr;

	if (!uFnGetTargetObject)
	{
		uFnGetTargetObject = UFunction::FindFunction("Function GearboxFramework.Behavior_UIBase.GetTargetObject");
	}

	UBehavior_UIBase_execGetTargetObject_Params GetTargetObject_Params;
	memset(&GetTargetObject_Params, 0, sizeof(GetTargetObject_Params));
	memcpy_s(&GetTargetObject_Params.ContextObject, sizeof(GetTargetObject_Params.ContextObject), &ContextObject, sizeof(ContextObject));

	uFnGetTargetObject->iNative = 0;
	uFnGetTargetObject->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetTargetObject, &GetTargetObject_Params, nullptr);
	uFnGetTargetObject->FunctionFlags |= 0x400;
	uFnGetTargetObject->iNative = 34237;

	return GetTargetObject_Params.ReturnValue;
};

// Function GearboxFramework.Behavior_UIBase.ResolveTargetObject
// [0x00020500] (FUNC_Simulated | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35737])
// Parameter Info:
// class UGFxObject*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UGFxMoviePlayer*         Movie                          (CPF_Parm)
// const class TArray<struct FName>& TargetChain                    (CPF_Parm | CPF_NeedCtorLink)

class UGFxObject* UBehavior_UIBase::ResolveTargetObject(class UGFxMoviePlayer* Movie, const class TArray<struct FName>& TargetChain)
{
	static UFunction* uFnResolveTargetObject = nullptr;

	if (!uFnResolveTargetObject)
	{
		uFnResolveTargetObject = UFunction::FindFunction("Function GearboxFramework.Behavior_UIBase.ResolveTargetObject");
	}

	UBehavior_UIBase_execResolveTargetObject_Params ResolveTargetObject_Params;
	memset(&ResolveTargetObject_Params, 0, sizeof(ResolveTargetObject_Params));
	memcpy_s(&ResolveTargetObject_Params.Movie, sizeof(ResolveTargetObject_Params.Movie), &Movie, sizeof(Movie));
	memcpy_s(&ResolveTargetObject_Params.TargetChain, sizeof(ResolveTargetObject_Params.TargetChain), &TargetChain, sizeof(TargetChain));

	uFnResolveTargetObject->iNative = 0;
	uFnResolveTargetObject->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnResolveTargetObject, &ResolveTargetObject_Params, nullptr);
	uFnResolveTargetObject->FunctionFlags |= 0x400;
	uFnResolveTargetObject->iNative = 35737;

	return ResolveTargetObject_Params.ReturnValue;
};

// Function GearboxFramework.Behavior_UIBase.ResolveTargetMovie
// [0x00020500] (FUNC_Simulated | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35735])
// Parameter Info:
// class UGFxMoviePlayer*         ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 ContextObject                  (CPF_Parm)
// class USwfMovie*               Movie                          (CPF_Parm)

class UGFxMoviePlayer* UBehavior_UIBase::ResolveTargetMovie(class UObject* ContextObject, class USwfMovie* Movie)
{
	static UFunction* uFnResolveTargetMovie = nullptr;

	if (!uFnResolveTargetMovie)
	{
		uFnResolveTargetMovie = UFunction::FindFunction("Function GearboxFramework.Behavior_UIBase.ResolveTargetMovie");
	}

	UBehavior_UIBase_execResolveTargetMovie_Params ResolveTargetMovie_Params;
	memset(&ResolveTargetMovie_Params, 0, sizeof(ResolveTargetMovie_Params));
	memcpy_s(&ResolveTargetMovie_Params.ContextObject, sizeof(ResolveTargetMovie_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ResolveTargetMovie_Params.Movie, sizeof(ResolveTargetMovie_Params.Movie), &Movie, sizeof(Movie));

	uFnResolveTargetMovie->iNative = 0;
	uFnResolveTargetMovie->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnResolveTargetMovie, &ResolveTargetMovie_Params, nullptr);
	uFnResolveTargetMovie->FunctionFlags |= 0x400;
	uFnResolveTargetMovie->iNative = 35735;

	return ResolveTargetMovie_Params.ReturnValue;
};

// Function GearboxFramework.Behavior_ShowHUDWidget.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_ShowHUDWidget::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_ShowHUDWidget.ApplyBehaviorToContext");
	}

	UBehavior_ShowHUDWidget_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_UnitTest.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_UnitTest::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_UnitTest.ApplyBehaviorToContext");
	}

	UBehavior_UnitTest_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_UnitTestEndFail.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_UnitTestEndFail::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_UnitTestEndFail.ApplyBehaviorToContext");
	}

	UBehavior_UnitTestEndFail_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_UnitTestEndPass.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_UnitTestEndPass::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_UnitTestEndPass.ApplyBehaviorToContext");
	}

	UBehavior_UnitTestEndPass_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_UnitTestHelper_ChangeMapTransitionURL.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_UnitTestHelper_ChangeMapTransitionURL::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_UnitTestHelper_ChangeMapTransitionURL.ApplyBehaviorToContext");
	}

	UBehavior_UnitTestHelper_ChangeMapTransitionURL_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_UnitTestHelper_LookAtTarget.ApplyBehaviorToContext
// [0x00480400] (FUNC_Native | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags) (iNative[14282])
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_UnitTestHelper_LookAtTarget::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_UnitTestHelper_LookAtTarget.ApplyBehaviorToContext");
	}

	UBehavior_UnitTestHelper_LookAtTarget_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	uFnApplyBehaviorToContext->iNative = 0;
	uFnApplyBehaviorToContext->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);
	uFnApplyBehaviorToContext->FunctionFlags |= 0x400;
	uFnApplyBehaviorToContext->iNative = 14282;

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_UnitTestHelper_RunGameModeGTD.ApplyBehaviorToContext
// [0x12480000] (FUNC_Protected | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_UnitTestHelper_RunGameModeGTD::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_UnitTestHelper_RunGameModeGTD.ApplyBehaviorToContext");
	}

	UBehavior_UnitTestHelper_RunGameModeGTD_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_UnitTestHelper_RunGameTest.GetBehaviorConsumerHandle
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34051])
// Parameter Info:
// struct FBehaviorConsumerHandle ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FBehaviorConsumerHandle UBehavior_UnitTestHelper_RunGameTest::GetBehaviorConsumerHandle()
{
	static UFunction* uFnGetBehaviorConsumerHandle = nullptr;

	if (!uFnGetBehaviorConsumerHandle)
	{
		uFnGetBehaviorConsumerHandle = UFunction::FindFunction("Function GearboxFramework.Behavior_UnitTestHelper_RunGameTest.GetBehaviorConsumerHandle");
	}

	UBehavior_UnitTestHelper_RunGameTest_execGetBehaviorConsumerHandle_Params GetBehaviorConsumerHandle_Params;
	memset(&GetBehaviorConsumerHandle_Params, 0, sizeof(GetBehaviorConsumerHandle_Params));

	uFnGetBehaviorConsumerHandle->iNative = 0;
	uFnGetBehaviorConsumerHandle->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetBehaviorConsumerHandle, &GetBehaviorConsumerHandle_Params, nullptr);
	uFnGetBehaviorConsumerHandle->FunctionFlags |= 0x400;
	uFnGetBehaviorConsumerHandle->iNative = 34051;

	return GetBehaviorConsumerHandle_Params.ReturnValue;
};

// Function GearboxFramework.Behavior_UnitTestHelper_RunGameTest.ApplyBehaviorToContext
// [0x00480400] (FUNC_Native | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags) (iNative[14282])
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_UnitTestHelper_RunGameTest::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_UnitTestHelper_RunGameTest.ApplyBehaviorToContext");
	}

	UBehavior_UnitTestHelper_RunGameTest_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	uFnApplyBehaviorToContext->iNative = 0;
	uFnApplyBehaviorToContext->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);
	uFnApplyBehaviorToContext->FunctionFlags |= 0x400;
	uFnApplyBehaviorToContext->iNative = 14282;

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.Behavior_UnitTestHelper_WaitForGameTestEvent.ApplyBehaviorToContext
// [0x00480400] (FUNC_Native | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags) (iNative[14282])
// Parameter Info:
// class UObject*                 ContextObject                  (CPF_Parm)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_Parm | CPF_NeedCtorLink)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

void UBehavior_UnitTestHelper_WaitForGameTestEvent::ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnApplyBehaviorToContext = nullptr;

	if (!uFnApplyBehaviorToContext)
	{
		uFnApplyBehaviorToContext = UFunction::FindFunction("Function GearboxFramework.Behavior_UnitTestHelper_WaitForGameTestEvent.ApplyBehaviorToContext");
	}

	UBehavior_UnitTestHelper_WaitForGameTestEvent_execApplyBehaviorToContext_Params ApplyBehaviorToContext_Params;
	memset(&ApplyBehaviorToContext_Params, 0, sizeof(ApplyBehaviorToContext_Params));
	memcpy_s(&ApplyBehaviorToContext_Params.ContextObject, sizeof(ApplyBehaviorToContext_Params.ContextObject), &ContextObject, sizeof(ContextObject));
	memcpy_s(&ApplyBehaviorToContext_Params.SelfObject, sizeof(ApplyBehaviorToContext_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&ApplyBehaviorToContext_Params.MyInstigatorObject, sizeof(ApplyBehaviorToContext_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&ApplyBehaviorToContext_Params.OtherEventParticipantObject, sizeof(ApplyBehaviorToContext_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&ApplyBehaviorToContext_Params.EventData, sizeof(ApplyBehaviorToContext_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	uFnApplyBehaviorToContext->iNative = 0;
	uFnApplyBehaviorToContext->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnApplyBehaviorToContext, &ApplyBehaviorToContext_Params, nullptr);
	uFnApplyBehaviorToContext->FunctionFlags |= 0x400;
	uFnApplyBehaviorToContext->iNative = 14282;

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ApplyBehaviorToContext_Params.KernelInfo, sizeof(ApplyBehaviorToContext_Params.KernelInfo));
};

// Function GearboxFramework.BehaviorHelpers.RunAllBehaviorsForEvent
// [0x00026501] (FUNC_Final | FUNC_Simulated | FUNC_Native | FUNC_Static | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[35794])
// Parameter Info:
// const struct FName&            EventName                      (CPF_Parm)
// const struct FScriptDelegate&  SetStrategy                    (CPF_Parm | CPF_NeedCtorLink)
// const struct FScriptDelegate&  Strategy                       (CPF_Parm | CPF_NeedCtorLink)
// class UObject*                 SelfObject                     (CPF_Parm)
// class UObject*                 MyInstigatorObject             (CPF_OptionalParm | CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_OptionalParm | CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)
// uint8_t                        EnumValue                      (CPF_OptionalParm | CPF_Parm)

void UBehaviorHelpers::RunAllBehaviorsForEvent(const struct FName& EventName, const struct FScriptDelegate& SetStrategy, const struct FScriptDelegate& Strategy, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, uint8_t EnumValue)
{
	static UFunction* uFnRunAllBehaviorsForEvent = nullptr;

	if (!uFnRunAllBehaviorsForEvent)
	{
		uFnRunAllBehaviorsForEvent = UFunction::FindFunction("Function GearboxFramework.BehaviorHelpers.RunAllBehaviorsForEvent");
	}

	UBehaviorHelpers_execRunAllBehaviorsForEvent_Params RunAllBehaviorsForEvent_Params;
	memset(&RunAllBehaviorsForEvent_Params, 0, sizeof(RunAllBehaviorsForEvent_Params));
	memcpy_s(&RunAllBehaviorsForEvent_Params.EventName, sizeof(RunAllBehaviorsForEvent_Params.EventName), &EventName, sizeof(EventName));
	memcpy_s(&RunAllBehaviorsForEvent_Params.SetStrategy, sizeof(RunAllBehaviorsForEvent_Params.SetStrategy), &SetStrategy, sizeof(SetStrategy));
	memcpy_s(&RunAllBehaviorsForEvent_Params.Strategy, sizeof(RunAllBehaviorsForEvent_Params.Strategy), &Strategy, sizeof(Strategy));
	memcpy_s(&RunAllBehaviorsForEvent_Params.SelfObject, sizeof(RunAllBehaviorsForEvent_Params.SelfObject), &SelfObject, sizeof(SelfObject));
	memcpy_s(&RunAllBehaviorsForEvent_Params.MyInstigatorObject, sizeof(RunAllBehaviorsForEvent_Params.MyInstigatorObject), &MyInstigatorObject, sizeof(MyInstigatorObject));
	memcpy_s(&RunAllBehaviorsForEvent_Params.OtherEventParticipantObject, sizeof(RunAllBehaviorsForEvent_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&RunAllBehaviorsForEvent_Params.EventData, sizeof(RunAllBehaviorsForEvent_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&RunAllBehaviorsForEvent_Params.EnumValue, sizeof(RunAllBehaviorsForEvent_Params.EnumValue), &EnumValue, sizeof(EnumValue));

	uFnRunAllBehaviorsForEvent->iNative = 0;
	uFnRunAllBehaviorsForEvent->FunctionFlags &= ~0x400;
	UBehaviorHelpers::StaticClass()->ProcessEvent(uFnRunAllBehaviorsForEvent, &RunAllBehaviorsForEvent_Params, nullptr);
	uFnRunAllBehaviorsForEvent->FunctionFlags |= 0x400;
	uFnRunAllBehaviorsForEvent->iNative = 35794;
};

// Function GearboxFramework.BehaviorHelpers.BehaviorStrategy
// [0x00524000] (FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_Delegate | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter Info:
// const struct FPointer&         BehaviorSet                    (CPF_Parm)
// const struct FName&            EventName                      (CPF_Parm)
// uint8_t                        EnumValue                      (CPF_OptionalParm | CPF_Parm)
// class TArray<class UBehaviorBase*> BehaviorList                   (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UBehaviorHelpers::BehaviorStrategy(const struct FPointer& BehaviorSet, const struct FName& EventName, uint8_t EnumValue, class TArray<class UBehaviorBase*>& BehaviorList)
{
	static UFunction* uFnBehaviorStrategy = nullptr;

	if (!uFnBehaviorStrategy)
	{
		uFnBehaviorStrategy = UFunction::FindFunction("Function GearboxFramework.BehaviorHelpers.BehaviorStrategy");
	}

	UBehaviorHelpers_execBehaviorStrategy_Params BehaviorStrategy_Params;
	memset(&BehaviorStrategy_Params, 0, sizeof(BehaviorStrategy_Params));
	memcpy_s(&BehaviorStrategy_Params.BehaviorSet, sizeof(BehaviorStrategy_Params.BehaviorSet), &BehaviorSet, sizeof(BehaviorSet));
	memcpy_s(&BehaviorStrategy_Params.EventName, sizeof(BehaviorStrategy_Params.EventName), &EventName, sizeof(EventName));
	memcpy_s(&BehaviorStrategy_Params.EnumValue, sizeof(BehaviorStrategy_Params.EnumValue), &EnumValue, sizeof(EnumValue));
	memcpy_s(&BehaviorStrategy_Params.BehaviorList, sizeof(BehaviorStrategy_Params.BehaviorList), &BehaviorList, sizeof(BehaviorList));

	this->ProcessEvent(uFnBehaviorStrategy, &BehaviorStrategy_Params, nullptr);

	memcpy_s(&BehaviorList, sizeof(BehaviorList), &BehaviorStrategy_Params.BehaviorList, sizeof(BehaviorStrategy_Params.BehaviorList));
};

// Function GearboxFramework.BehaviorHelpers.BehaviorSetStrategy
// [0x00520000] (FUNC_Public | FUNC_Delegate | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter Info:
// class TArray<struct FPointer>  BehaviorSetList                (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UBehaviorHelpers::BehaviorSetStrategy(class TArray<struct FPointer>& BehaviorSetList)
{
	static UFunction* uFnBehaviorSetStrategy = nullptr;

	if (!uFnBehaviorSetStrategy)
	{
		uFnBehaviorSetStrategy = UFunction::FindFunction("Function GearboxFramework.BehaviorHelpers.BehaviorSetStrategy");
	}

	UBehaviorHelpers_execBehaviorSetStrategy_Params BehaviorSetStrategy_Params;
	memset(&BehaviorSetStrategy_Params, 0, sizeof(BehaviorSetStrategy_Params));
	memcpy_s(&BehaviorSetStrategy_Params.BehaviorSetList, sizeof(BehaviorSetStrategy_Params.BehaviorSetList), &BehaviorSetList, sizeof(BehaviorSetList));

	this->ProcessEvent(uFnBehaviorSetStrategy, &BehaviorSetStrategy_Params, nullptr);

	memcpy_s(&BehaviorSetList, sizeof(BehaviorSetList), &BehaviorSetStrategy_Params.BehaviorSetList, sizeof(BehaviorSetStrategy_Params.BehaviorSetList));
};

// Function GearboxFramework.BehaviorHelpers.ResolveBehaviorProviderDefinitionReference
// [0x00422400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35734])
// Parameter Info:
// class UBehaviorProviderDefinition* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UBehaviorBase*           SourceBehavior                 (CPF_Const | CPF_Parm)
// class UObject*                 ProviderReference              (CPF_Const | CPF_Parm)
// struct FNameBasedObjectPath    PathName                       (CPF_Const | CPF_Parm | CPF_OutParm)

class UBehaviorProviderDefinition* UBehaviorHelpers::ResolveBehaviorProviderDefinitionReference(class UBehaviorBase* SourceBehavior, class UObject* ProviderReference, struct FNameBasedObjectPath& PathName)
{
	static UFunction* uFnResolveBehaviorProviderDefinitionReference = nullptr;

	if (!uFnResolveBehaviorProviderDefinitionReference)
	{
		uFnResolveBehaviorProviderDefinitionReference = UFunction::FindFunction("Function GearboxFramework.BehaviorHelpers.ResolveBehaviorProviderDefinitionReference");
	}

	UBehaviorHelpers_execResolveBehaviorProviderDefinitionReference_Params ResolveBehaviorProviderDefinitionReference_Params;
	memset(&ResolveBehaviorProviderDefinitionReference_Params, 0, sizeof(ResolveBehaviorProviderDefinitionReference_Params));
	memcpy_s(&ResolveBehaviorProviderDefinitionReference_Params.SourceBehavior, sizeof(ResolveBehaviorProviderDefinitionReference_Params.SourceBehavior), &SourceBehavior, sizeof(SourceBehavior));
	memcpy_s(&ResolveBehaviorProviderDefinitionReference_Params.ProviderReference, sizeof(ResolveBehaviorProviderDefinitionReference_Params.ProviderReference), &ProviderReference, sizeof(ProviderReference));
	memcpy_s(&ResolveBehaviorProviderDefinitionReference_Params.PathName, sizeof(ResolveBehaviorProviderDefinitionReference_Params.PathName), &PathName, sizeof(PathName));

	uFnResolveBehaviorProviderDefinitionReference->iNative = 0;
	uFnResolveBehaviorProviderDefinitionReference->FunctionFlags &= ~0x400;
	UBehaviorHelpers::StaticClass()->ProcessEvent(uFnResolveBehaviorProviderDefinitionReference, &ResolveBehaviorProviderDefinitionReference_Params, nullptr);
	uFnResolveBehaviorProviderDefinitionReference->FunctionFlags |= 0x400;
	uFnResolveBehaviorProviderDefinitionReference->iNative = 35734;

	memcpy_s(&PathName, sizeof(PathName), &ResolveBehaviorProviderDefinitionReference_Params.PathName, sizeof(ResolveBehaviorProviderDefinitionReference_Params.PathName));

	return ResolveBehaviorProviderDefinitionReference_Params.ReturnValue;
};

// Function GearboxFramework.BehaviorHelpers.IsBehaviorsV2
// [0x00422400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34649])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)

bool UBehaviorHelpers::IsBehaviorsV2(struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnIsBehaviorsV2 = nullptr;

	if (!uFnIsBehaviorsV2)
	{
		uFnIsBehaviorsV2 = UFunction::FindFunction("Function GearboxFramework.BehaviorHelpers.IsBehaviorsV2");
	}

	UBehaviorHelpers_execIsBehaviorsV2_Params IsBehaviorsV2_Params;
	memset(&IsBehaviorsV2_Params, 0, sizeof(IsBehaviorsV2_Params));
	memcpy_s(&IsBehaviorsV2_Params.KernelInfo, sizeof(IsBehaviorsV2_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	uFnIsBehaviorsV2->iNative = 0;
	uFnIsBehaviorsV2->FunctionFlags &= ~0x400;
	UBehaviorHelpers::StaticClass()->ProcessEvent(uFnIsBehaviorsV2, &IsBehaviorsV2_Params, nullptr);
	uFnIsBehaviorsV2->FunctionFlags |= 0x400;
	uFnIsBehaviorsV2->iNative = 34649;

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &IsBehaviorsV2_Params.KernelInfo, sizeof(IsBehaviorsV2_Params.KernelInfo));

	return IsBehaviorsV2_Params.ReturnValue;
};

// Function GearboxFramework.BehaviorHelpers.ShouldContinueExecution
// [0x12422000] (FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// float                          TimeBetweenSteps               (CPF_Parm)
// int32_t                        MaxSteps                       (CPF_Parm)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Parm | CPF_OutParm)
// int32_t                        NumSteps                       (CPF_Parm | CPF_OutParm)

bool UBehaviorHelpers::ShouldContinueExecution(float TimeBetweenSteps, int32_t MaxSteps, struct FBehaviorKernelInfo& KernelInfo, int32_t& NumSteps)
{
	static UFunction* uFnShouldContinueExecution = nullptr;

	if (!uFnShouldContinueExecution)
	{
		uFnShouldContinueExecution = UFunction::FindFunction("Function GearboxFramework.BehaviorHelpers.ShouldContinueExecution");
	}

	UBehaviorHelpers_execShouldContinueExecution_Params ShouldContinueExecution_Params;
	memset(&ShouldContinueExecution_Params, 0, sizeof(ShouldContinueExecution_Params));
	memcpy_s(&ShouldContinueExecution_Params.TimeBetweenSteps, sizeof(ShouldContinueExecution_Params.TimeBetweenSteps), &TimeBetweenSteps, sizeof(TimeBetweenSteps));
	memcpy_s(&ShouldContinueExecution_Params.MaxSteps, sizeof(ShouldContinueExecution_Params.MaxSteps), &MaxSteps, sizeof(MaxSteps));
	memcpy_s(&ShouldContinueExecution_Params.KernelInfo, sizeof(ShouldContinueExecution_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));
	memcpy_s(&ShouldContinueExecution_Params.NumSteps, sizeof(ShouldContinueExecution_Params.NumSteps), &NumSteps, sizeof(NumSteps));

	UBehaviorHelpers::StaticClass()->ProcessEvent(uFnShouldContinueExecution, &ShouldContinueExecution_Params, nullptr);

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ShouldContinueExecution_Params.KernelInfo, sizeof(ShouldContinueExecution_Params.KernelInfo));
	memcpy_s(&NumSteps, sizeof(NumSteps), &ShouldContinueExecution_Params.NumSteps, sizeof(ShouldContinueExecution_Params.NumSteps));

	return ShouldContinueExecution_Params.ReturnValue;
};

// Function GearboxFramework.BehaviorHelpers.GetNextFireLocationSocket
// [0x12422000] (FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// struct FName                   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// EFireSocketSelectionMethod     FireSocketSelection            (CPF_Parm)
// const class TArray<struct FName>& FireLocationSocketNames        (CPF_Parm | CPF_NeedCtorLink)
// class TArray<struct FName>     FireLocationSocketsRemaining   (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

struct FName UBehaviorHelpers::GetNextFireLocationSocket(EFireSocketSelectionMethod FireSocketSelection, const class TArray<struct FName>& FireLocationSocketNames, class TArray<struct FName>& FireLocationSocketsRemaining)
{
	static UFunction* uFnGetNextFireLocationSocket = nullptr;

	if (!uFnGetNextFireLocationSocket)
	{
		uFnGetNextFireLocationSocket = UFunction::FindFunction("Function GearboxFramework.BehaviorHelpers.GetNextFireLocationSocket");
	}

	UBehaviorHelpers_execGetNextFireLocationSocket_Params GetNextFireLocationSocket_Params;
	memset(&GetNextFireLocationSocket_Params, 0, sizeof(GetNextFireLocationSocket_Params));
	memcpy_s(&GetNextFireLocationSocket_Params.FireSocketSelection, sizeof(GetNextFireLocationSocket_Params.FireSocketSelection), &FireSocketSelection, sizeof(FireSocketSelection));
	memcpy_s(&GetNextFireLocationSocket_Params.FireLocationSocketNames, sizeof(GetNextFireLocationSocket_Params.FireLocationSocketNames), &FireLocationSocketNames, sizeof(FireLocationSocketNames));
	memcpy_s(&GetNextFireLocationSocket_Params.FireLocationSocketsRemaining, sizeof(GetNextFireLocationSocket_Params.FireLocationSocketsRemaining), &FireLocationSocketsRemaining, sizeof(FireLocationSocketsRemaining));

	UBehaviorHelpers::StaticClass()->ProcessEvent(uFnGetNextFireLocationSocket, &GetNextFireLocationSocket_Params, nullptr);

	memcpy_s(&FireLocationSocketsRemaining, sizeof(FireLocationSocketsRemaining), &GetNextFireLocationSocket_Params.FireLocationSocketsRemaining, sizeof(GetNextFireLocationSocket_Params.FireLocationSocketsRemaining));

	return GetNextFireLocationSocket_Params.ReturnValue;
};

// Function GearboxFramework.BehaviorHelpers.GetRotationFromAttachmentLocationData
// [0x00422400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34196])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FAttachmentLocationData& AttachmentLocation             (CPF_Const | CPF_Parm)
// struct FRotator                AttachmentLocationRotation     (CPF_Parm | CPF_OutParm)

bool UBehaviorHelpers::GetRotationFromAttachmentLocationData(const struct FAttachmentLocationData& AttachmentLocation, struct FRotator& AttachmentLocationRotation)
{
	static UFunction* uFnGetRotationFromAttachmentLocationData = nullptr;

	if (!uFnGetRotationFromAttachmentLocationData)
	{
		uFnGetRotationFromAttachmentLocationData = UFunction::FindFunction("Function GearboxFramework.BehaviorHelpers.GetRotationFromAttachmentLocationData");
	}

	UBehaviorHelpers_execGetRotationFromAttachmentLocationData_Params GetRotationFromAttachmentLocationData_Params;
	memset(&GetRotationFromAttachmentLocationData_Params, 0, sizeof(GetRotationFromAttachmentLocationData_Params));
	memcpy_s(&GetRotationFromAttachmentLocationData_Params.AttachmentLocation, sizeof(GetRotationFromAttachmentLocationData_Params.AttachmentLocation), &AttachmentLocation, sizeof(AttachmentLocation));
	memcpy_s(&GetRotationFromAttachmentLocationData_Params.AttachmentLocationRotation, sizeof(GetRotationFromAttachmentLocationData_Params.AttachmentLocationRotation), &AttachmentLocationRotation, sizeof(AttachmentLocationRotation));

	uFnGetRotationFromAttachmentLocationData->iNative = 0;
	uFnGetRotationFromAttachmentLocationData->FunctionFlags &= ~0x400;
	UBehaviorHelpers::StaticClass()->ProcessEvent(uFnGetRotationFromAttachmentLocationData, &GetRotationFromAttachmentLocationData_Params, nullptr);
	uFnGetRotationFromAttachmentLocationData->FunctionFlags |= 0x400;
	uFnGetRotationFromAttachmentLocationData->iNative = 34196;

	memcpy_s(&AttachmentLocationRotation, sizeof(AttachmentLocationRotation), &GetRotationFromAttachmentLocationData_Params.AttachmentLocationRotation, sizeof(GetRotationFromAttachmentLocationData_Params.AttachmentLocationRotation));

	return GetRotationFromAttachmentLocationData_Params.ReturnValue;
};

// Function GearboxFramework.BehaviorHelpers.GetRelativeDirection
// [0x00026400] (FUNC_Native | FUNC_Static | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[34192])
// Parameter Info:
// struct FVector                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FRelativeDirectionData& DesiredDirection               (CPF_Parm)
// class UIWorldBody*             Source                         (CPF_Parm)
// const struct FVector&          DefaultDirection               (CPF_Parm)
// const struct FName&            SpawnSocketName                (CPF_OptionalParm | CPF_Parm)

struct FVector UBehaviorHelpers::GetRelativeDirection(const struct FRelativeDirectionData& DesiredDirection, class UIWorldBody* Source, const struct FVector& DefaultDirection, const struct FName& SpawnSocketName)
{
	static UFunction* uFnGetRelativeDirection = nullptr;

	if (!uFnGetRelativeDirection)
	{
		uFnGetRelativeDirection = UFunction::FindFunction("Function GearboxFramework.BehaviorHelpers.GetRelativeDirection");
	}

	UBehaviorHelpers_execGetRelativeDirection_Params GetRelativeDirection_Params;
	memset(&GetRelativeDirection_Params, 0, sizeof(GetRelativeDirection_Params));
	memcpy_s(&GetRelativeDirection_Params.DesiredDirection, sizeof(GetRelativeDirection_Params.DesiredDirection), &DesiredDirection, sizeof(DesiredDirection));
	memcpy_s(&GetRelativeDirection_Params.Source, sizeof(GetRelativeDirection_Params.Source), &Source, sizeof(Source));
	memcpy_s(&GetRelativeDirection_Params.DefaultDirection, sizeof(GetRelativeDirection_Params.DefaultDirection), &DefaultDirection, sizeof(DefaultDirection));
	memcpy_s(&GetRelativeDirection_Params.SpawnSocketName, sizeof(GetRelativeDirection_Params.SpawnSocketName), &SpawnSocketName, sizeof(SpawnSocketName));

	uFnGetRelativeDirection->iNative = 0;
	uFnGetRelativeDirection->FunctionFlags &= ~0x400;
	UBehaviorHelpers::StaticClass()->ProcessEvent(uFnGetRelativeDirection, &GetRelativeDirection_Params, nullptr);
	uFnGetRelativeDirection->FunctionFlags |= 0x400;
	uFnGetRelativeDirection->iNative = 34192;

	return GetRelativeDirection_Params.ReturnValue;
};

// Function GearboxFramework.BehaviorKernel.PrevDebugPage
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35523])
// Parameter Info:

void UBehaviorKernel::PrevDebugPage()
{
	static UFunction* uFnPrevDebugPage = nullptr;

	if (!uFnPrevDebugPage)
	{
		uFnPrevDebugPage = UFunction::FindFunction("Function GearboxFramework.BehaviorKernel.PrevDebugPage");
	}

	UBehaviorKernel_execPrevDebugPage_Params PrevDebugPage_Params;
	memset(&PrevDebugPage_Params, 0, sizeof(PrevDebugPage_Params));

	uFnPrevDebugPage->iNative = 0;
	uFnPrevDebugPage->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPrevDebugPage, &PrevDebugPage_Params, nullptr);
	uFnPrevDebugPage->FunctionFlags |= 0x400;
	uFnPrevDebugPage->iNative = 35523;
};

// Function GearboxFramework.BehaviorKernel.NextDebugPage
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35144])
// Parameter Info:

void UBehaviorKernel::NextDebugPage()
{
	static UFunction* uFnNextDebugPage = nullptr;

	if (!uFnNextDebugPage)
	{
		uFnNextDebugPage = UFunction::FindFunction("Function GearboxFramework.BehaviorKernel.NextDebugPage");
	}

	UBehaviorKernel_execNextDebugPage_Params NextDebugPage_Params;
	memset(&NextDebugPage_Params, 0, sizeof(NextDebugPage_Params));

	uFnNextDebugPage->iNative = 0;
	uFnNextDebugPage->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnNextDebugPage, &NextDebugPage_Params, nullptr);
	uFnNextDebugPage->FunctionFlags |= 0x400;
	uFnNextDebugPage->iNative = 35144;
};

// Function GearboxFramework.BehaviorKernel.DisplayDebug
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[21839])
// Parameter Info:
// class AHUD*                    HUD                            (CPF_Parm)

void UBehaviorKernel::DisplayDebug(class AHUD* HUD)
{
	static UFunction* uFnDisplayDebug = nullptr;

	if (!uFnDisplayDebug)
	{
		uFnDisplayDebug = UFunction::FindFunction("Function GearboxFramework.BehaviorKernel.DisplayDebug");
	}

	UBehaviorKernel_execDisplayDebug_Params DisplayDebug_Params;
	memset(&DisplayDebug_Params, 0, sizeof(DisplayDebug_Params));
	memcpy_s(&DisplayDebug_Params.HUD, sizeof(DisplayDebug_Params.HUD), &HUD, sizeof(HUD));

	uFnDisplayDebug->iNative = 0;
	uFnDisplayDebug->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnDisplayDebug, &DisplayDebug_Params, nullptr);
	uFnDisplayDebug->FunctionFlags |= 0x400;
	uFnDisplayDebug->iNative = 21839;
};

// Function GearboxFramework.BehaviorKernel.IsBehaviorSequenceEnabled
// [0x00422401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34648])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UBehaviorProviderDefinition* ProviderDefinition             (CPF_Parm)
// const struct FName&            BehaviorSequenceName           (CPF_Parm)
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

bool UBehaviorKernel::IsBehaviorSequenceEnabled(class UBehaviorProviderDefinition* ProviderDefinition, const struct FName& BehaviorSequenceName, struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnIsBehaviorSequenceEnabled = nullptr;

	if (!uFnIsBehaviorSequenceEnabled)
	{
		uFnIsBehaviorSequenceEnabled = UFunction::FindFunction("Function GearboxFramework.BehaviorKernel.IsBehaviorSequenceEnabled");
	}

	UBehaviorKernel_execIsBehaviorSequenceEnabled_Params IsBehaviorSequenceEnabled_Params;
	memset(&IsBehaviorSequenceEnabled_Params, 0, sizeof(IsBehaviorSequenceEnabled_Params));
	memcpy_s(&IsBehaviorSequenceEnabled_Params.ProviderDefinition, sizeof(IsBehaviorSequenceEnabled_Params.ProviderDefinition), &ProviderDefinition, sizeof(ProviderDefinition));
	memcpy_s(&IsBehaviorSequenceEnabled_Params.BehaviorSequenceName, sizeof(IsBehaviorSequenceEnabled_Params.BehaviorSequenceName), &BehaviorSequenceName, sizeof(BehaviorSequenceName));
	memcpy_s(&IsBehaviorSequenceEnabled_Params.ConsumerHandle, sizeof(IsBehaviorSequenceEnabled_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnIsBehaviorSequenceEnabled->iNative = 0;
	uFnIsBehaviorSequenceEnabled->FunctionFlags &= ~0x400;
	UBehaviorKernel::StaticClass()->ProcessEvent(uFnIsBehaviorSequenceEnabled, &IsBehaviorSequenceEnabled_Params, nullptr);
	uFnIsBehaviorSequenceEnabled->FunctionFlags |= 0x400;
	uFnIsBehaviorSequenceEnabled->iNative = 34648;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &IsBehaviorSequenceEnabled_Params.ConsumerHandle, sizeof(IsBehaviorSequenceEnabled_Params.ConsumerHandle));

	return IsBehaviorSequenceEnabled_Params.ReturnValue;
};

// Function GearboxFramework.BehaviorKernel.ActivateBehaviorOutputLink
// [0x00422401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[31631])
// Parameter Info:
// int32_t                        OutputLinkId                   (CPF_Parm)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Const | CPF_Parm | CPF_OutParm)

void UBehaviorKernel::ActivateBehaviorOutputLink(int32_t OutputLinkId, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnActivateBehaviorOutputLink = nullptr;

	if (!uFnActivateBehaviorOutputLink)
	{
		uFnActivateBehaviorOutputLink = UFunction::FindFunction("Function GearboxFramework.BehaviorKernel.ActivateBehaviorOutputLink");
	}

	UBehaviorKernel_execActivateBehaviorOutputLink_Params ActivateBehaviorOutputLink_Params;
	memset(&ActivateBehaviorOutputLink_Params, 0, sizeof(ActivateBehaviorOutputLink_Params));
	memcpy_s(&ActivateBehaviorOutputLink_Params.OutputLinkId, sizeof(ActivateBehaviorOutputLink_Params.OutputLinkId), &OutputLinkId, sizeof(OutputLinkId));
	memcpy_s(&ActivateBehaviorOutputLink_Params.KernelInfo, sizeof(ActivateBehaviorOutputLink_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	uFnActivateBehaviorOutputLink->iNative = 0;
	uFnActivateBehaviorOutputLink->FunctionFlags &= ~0x400;
	UBehaviorKernel::StaticClass()->ProcessEvent(uFnActivateBehaviorOutputLink, &ActivateBehaviorOutputLink_Params, nullptr);
	uFnActivateBehaviorOutputLink->FunctionFlags |= 0x400;
	uFnActivateBehaviorOutputLink->iNative = 31631;

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &ActivateBehaviorOutputLink_Params.KernelInfo, sizeof(ActivateBehaviorOutputLink_Params.KernelInfo));
};

// Function GearboxFramework.BehaviorKernel.PublishBoolOutputVariable
// [0x00422401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35575])
// Parameter Info:
// bool                           Output                         (CPF_Parm)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Const | CPF_Parm | CPF_OutParm)

void UBehaviorKernel::PublishBoolOutputVariable(bool Output, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnPublishBoolOutputVariable = nullptr;

	if (!uFnPublishBoolOutputVariable)
	{
		uFnPublishBoolOutputVariable = UFunction::FindFunction("Function GearboxFramework.BehaviorKernel.PublishBoolOutputVariable");
	}

	UBehaviorKernel_execPublishBoolOutputVariable_Params PublishBoolOutputVariable_Params;
	memset(&PublishBoolOutputVariable_Params, 0, sizeof(PublishBoolOutputVariable_Params));
	PublishBoolOutputVariable_Params.Output = Output;
	memcpy_s(&PublishBoolOutputVariable_Params.KernelInfo, sizeof(PublishBoolOutputVariable_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	uFnPublishBoolOutputVariable->iNative = 0;
	uFnPublishBoolOutputVariable->FunctionFlags &= ~0x400;
	UBehaviorKernel::StaticClass()->ProcessEvent(uFnPublishBoolOutputVariable, &PublishBoolOutputVariable_Params, nullptr);
	uFnPublishBoolOutputVariable->FunctionFlags |= 0x400;
	uFnPublishBoolOutputVariable->iNative = 35575;

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &PublishBoolOutputVariable_Params.KernelInfo, sizeof(PublishBoolOutputVariable_Params.KernelInfo));
};

// Function GearboxFramework.BehaviorKernel.PublishObjectOutputVariable
// [0x00422401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35578])
// Parameter Info:
// class UObject*                 Output                         (CPF_Parm)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Const | CPF_Parm | CPF_OutParm)

void UBehaviorKernel::PublishObjectOutputVariable(class UObject* Output, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnPublishObjectOutputVariable = nullptr;

	if (!uFnPublishObjectOutputVariable)
	{
		uFnPublishObjectOutputVariable = UFunction::FindFunction("Function GearboxFramework.BehaviorKernel.PublishObjectOutputVariable");
	}

	UBehaviorKernel_execPublishObjectOutputVariable_Params PublishObjectOutputVariable_Params;
	memset(&PublishObjectOutputVariable_Params, 0, sizeof(PublishObjectOutputVariable_Params));
	memcpy_s(&PublishObjectOutputVariable_Params.Output, sizeof(PublishObjectOutputVariable_Params.Output), &Output, sizeof(Output));
	memcpy_s(&PublishObjectOutputVariable_Params.KernelInfo, sizeof(PublishObjectOutputVariable_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	uFnPublishObjectOutputVariable->iNative = 0;
	uFnPublishObjectOutputVariable->FunctionFlags &= ~0x400;
	UBehaviorKernel::StaticClass()->ProcessEvent(uFnPublishObjectOutputVariable, &PublishObjectOutputVariable_Params, nullptr);
	uFnPublishObjectOutputVariable->FunctionFlags |= 0x400;
	uFnPublishObjectOutputVariable->iNative = 35578;

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &PublishObjectOutputVariable_Params.KernelInfo, sizeof(PublishObjectOutputVariable_Params.KernelInfo));
};

// Function GearboxFramework.BehaviorKernel.PublishVectorOutputVariable
// [0x00422401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35579])
// Parameter Info:
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Const | CPF_Parm | CPF_OutParm)
// struct FVector                 Output                         (CPF_Const | CPF_Parm | CPF_OutParm)

void UBehaviorKernel::PublishVectorOutputVariable(struct FBehaviorKernelInfo& KernelInfo, struct FVector& Output)
{
	static UFunction* uFnPublishVectorOutputVariable = nullptr;

	if (!uFnPublishVectorOutputVariable)
	{
		uFnPublishVectorOutputVariable = UFunction::FindFunction("Function GearboxFramework.BehaviorKernel.PublishVectorOutputVariable");
	}

	UBehaviorKernel_execPublishVectorOutputVariable_Params PublishVectorOutputVariable_Params;
	memset(&PublishVectorOutputVariable_Params, 0, sizeof(PublishVectorOutputVariable_Params));
	memcpy_s(&PublishVectorOutputVariable_Params.KernelInfo, sizeof(PublishVectorOutputVariable_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));
	memcpy_s(&PublishVectorOutputVariable_Params.Output, sizeof(PublishVectorOutputVariable_Params.Output), &Output, sizeof(Output));

	uFnPublishVectorOutputVariable->iNative = 0;
	uFnPublishVectorOutputVariable->FunctionFlags &= ~0x400;
	UBehaviorKernel::StaticClass()->ProcessEvent(uFnPublishVectorOutputVariable, &PublishVectorOutputVariable_Params, nullptr);
	uFnPublishVectorOutputVariable->FunctionFlags |= 0x400;
	uFnPublishVectorOutputVariable->iNative = 35579;

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &PublishVectorOutputVariable_Params.KernelInfo, sizeof(PublishVectorOutputVariable_Params.KernelInfo));
	memcpy_s(&Output, sizeof(Output), &PublishVectorOutputVariable_Params.Output, sizeof(PublishVectorOutputVariable_Params.Output));
};

// Function GearboxFramework.BehaviorKernel.PublishFloatOutputVariable
// [0x00422401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35576])
// Parameter Info:
// float                          Output                         (CPF_Parm)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Const | CPF_Parm | CPF_OutParm)

void UBehaviorKernel::PublishFloatOutputVariable(float Output, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnPublishFloatOutputVariable = nullptr;

	if (!uFnPublishFloatOutputVariable)
	{
		uFnPublishFloatOutputVariable = UFunction::FindFunction("Function GearboxFramework.BehaviorKernel.PublishFloatOutputVariable");
	}

	UBehaviorKernel_execPublishFloatOutputVariable_Params PublishFloatOutputVariable_Params;
	memset(&PublishFloatOutputVariable_Params, 0, sizeof(PublishFloatOutputVariable_Params));
	memcpy_s(&PublishFloatOutputVariable_Params.Output, sizeof(PublishFloatOutputVariable_Params.Output), &Output, sizeof(Output));
	memcpy_s(&PublishFloatOutputVariable_Params.KernelInfo, sizeof(PublishFloatOutputVariable_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	uFnPublishFloatOutputVariable->iNative = 0;
	uFnPublishFloatOutputVariable->FunctionFlags &= ~0x400;
	UBehaviorKernel::StaticClass()->ProcessEvent(uFnPublishFloatOutputVariable, &PublishFloatOutputVariable_Params, nullptr);
	uFnPublishFloatOutputVariable->FunctionFlags |= 0x400;
	uFnPublishFloatOutputVariable->iNative = 35576;

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &PublishFloatOutputVariable_Params.KernelInfo, sizeof(PublishFloatOutputVariable_Params.KernelInfo));
};

// Function GearboxFramework.BehaviorKernel.PublishIntOutputVariable
// [0x00422401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35577])
// Parameter Info:
// int32_t                        Output                         (CPF_Parm)
// struct FBehaviorKernelInfo     KernelInfo                     (CPF_Const | CPF_Parm | CPF_OutParm)

void UBehaviorKernel::PublishIntOutputVariable(int32_t Output, struct FBehaviorKernelInfo& KernelInfo)
{
	static UFunction* uFnPublishIntOutputVariable = nullptr;

	if (!uFnPublishIntOutputVariable)
	{
		uFnPublishIntOutputVariable = UFunction::FindFunction("Function GearboxFramework.BehaviorKernel.PublishIntOutputVariable");
	}

	UBehaviorKernel_execPublishIntOutputVariable_Params PublishIntOutputVariable_Params;
	memset(&PublishIntOutputVariable_Params, 0, sizeof(PublishIntOutputVariable_Params));
	memcpy_s(&PublishIntOutputVariable_Params.Output, sizeof(PublishIntOutputVariable_Params.Output), &Output, sizeof(Output));
	memcpy_s(&PublishIntOutputVariable_Params.KernelInfo, sizeof(PublishIntOutputVariable_Params.KernelInfo), &KernelInfo, sizeof(KernelInfo));

	uFnPublishIntOutputVariable->iNative = 0;
	uFnPublishIntOutputVariable->FunctionFlags &= ~0x400;
	UBehaviorKernel::StaticClass()->ProcessEvent(uFnPublishIntOutputVariable, &PublishIntOutputVariable_Params, nullptr);
	uFnPublishIntOutputVariable->FunctionFlags |= 0x400;
	uFnPublishIntOutputVariable->iNative = 35577;

	memcpy_s(&KernelInfo, sizeof(KernelInfo), &PublishIntOutputVariable_Params.KernelInfo, sizeof(PublishIntOutputVariable_Params.KernelInfo));
};

// Function GearboxFramework.BehaviorKernel.BeginNondeterministicProviderRegistration
// [0x00422401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[32138])
// Parameter Info:
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UBehaviorKernel::BeginNondeterministicProviderRegistration(struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnBeginNondeterministicProviderRegistration = nullptr;

	if (!uFnBeginNondeterministicProviderRegistration)
	{
		uFnBeginNondeterministicProviderRegistration = UFunction::FindFunction("Function GearboxFramework.BehaviorKernel.BeginNondeterministicProviderRegistration");
	}

	UBehaviorKernel_execBeginNondeterministicProviderRegistration_Params BeginNondeterministicProviderRegistration_Params;
	memset(&BeginNondeterministicProviderRegistration_Params, 0, sizeof(BeginNondeterministicProviderRegistration_Params));
	memcpy_s(&BeginNondeterministicProviderRegistration_Params.ConsumerHandle, sizeof(BeginNondeterministicProviderRegistration_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnBeginNondeterministicProviderRegistration->iNative = 0;
	uFnBeginNondeterministicProviderRegistration->FunctionFlags &= ~0x400;
	UBehaviorKernel::StaticClass()->ProcessEvent(uFnBeginNondeterministicProviderRegistration, &BeginNondeterministicProviderRegistration_Params, nullptr);
	uFnBeginNondeterministicProviderRegistration->FunctionFlags |= 0x400;
	uFnBeginNondeterministicProviderRegistration->iNative = 32138;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &BeginNondeterministicProviderRegistration_Params.ConsumerHandle, sizeof(BeginNondeterministicProviderRegistration_Params.ConsumerHandle));
};

// Function GearboxFramework.BehaviorKernel.ProcessReplicatedBehaviorEvent
// [0x00422401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35554])
// Parameter Info:
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)
// struct FReplicatedBehaviorEvent EventData                      (CPF_Const | CPF_Parm | CPF_OutParm)

void UBehaviorKernel::ProcessReplicatedBehaviorEvent(struct FBehaviorConsumerHandle& ConsumerHandle, struct FReplicatedBehaviorEvent& EventData)
{
	static UFunction* uFnProcessReplicatedBehaviorEvent = nullptr;

	if (!uFnProcessReplicatedBehaviorEvent)
	{
		uFnProcessReplicatedBehaviorEvent = UFunction::FindFunction("Function GearboxFramework.BehaviorKernel.ProcessReplicatedBehaviorEvent");
	}

	UBehaviorKernel_execProcessReplicatedBehaviorEvent_Params ProcessReplicatedBehaviorEvent_Params;
	memset(&ProcessReplicatedBehaviorEvent_Params, 0, sizeof(ProcessReplicatedBehaviorEvent_Params));
	memcpy_s(&ProcessReplicatedBehaviorEvent_Params.ConsumerHandle, sizeof(ProcessReplicatedBehaviorEvent_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));
	memcpy_s(&ProcessReplicatedBehaviorEvent_Params.EventData, sizeof(ProcessReplicatedBehaviorEvent_Params.EventData), &EventData, sizeof(EventData));

	uFnProcessReplicatedBehaviorEvent->iNative = 0;
	uFnProcessReplicatedBehaviorEvent->FunctionFlags &= ~0x400;
	UBehaviorKernel::StaticClass()->ProcessEvent(uFnProcessReplicatedBehaviorEvent, &ProcessReplicatedBehaviorEvent_Params, nullptr);
	uFnProcessReplicatedBehaviorEvent->FunctionFlags |= 0x400;
	uFnProcessReplicatedBehaviorEvent->iNative = 35554;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &ProcessReplicatedBehaviorEvent_Params.ConsumerHandle, sizeof(ProcessReplicatedBehaviorEvent_Params.ConsumerHandle));
	memcpy_s(&EventData, sizeof(EventData), &ProcessReplicatedBehaviorEvent_Params.EventData, sizeof(ProcessReplicatedBehaviorEvent_Params.EventData));
};

// Function GearboxFramework.BehaviorKernel.ProcessReplicatedBehaviorConsumerState
// [0x00422401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35553])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)
// struct FReplicatedBehaviorConsumerState ReplicatedConsumerState        (CPF_Const | CPF_Parm | CPF_OutParm)

bool UBehaviorKernel::ProcessReplicatedBehaviorConsumerState(struct FBehaviorConsumerHandle& ConsumerHandle, struct FReplicatedBehaviorConsumerState& ReplicatedConsumerState)
{
	static UFunction* uFnProcessReplicatedBehaviorConsumerState = nullptr;

	if (!uFnProcessReplicatedBehaviorConsumerState)
	{
		uFnProcessReplicatedBehaviorConsumerState = UFunction::FindFunction("Function GearboxFramework.BehaviorKernel.ProcessReplicatedBehaviorConsumerState");
	}

	UBehaviorKernel_execProcessReplicatedBehaviorConsumerState_Params ProcessReplicatedBehaviorConsumerState_Params;
	memset(&ProcessReplicatedBehaviorConsumerState_Params, 0, sizeof(ProcessReplicatedBehaviorConsumerState_Params));
	memcpy_s(&ProcessReplicatedBehaviorConsumerState_Params.ConsumerHandle, sizeof(ProcessReplicatedBehaviorConsumerState_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));
	memcpy_s(&ProcessReplicatedBehaviorConsumerState_Params.ReplicatedConsumerState, sizeof(ProcessReplicatedBehaviorConsumerState_Params.ReplicatedConsumerState), &ReplicatedConsumerState, sizeof(ReplicatedConsumerState));

	uFnProcessReplicatedBehaviorConsumerState->iNative = 0;
	uFnProcessReplicatedBehaviorConsumerState->FunctionFlags &= ~0x400;
	UBehaviorKernel::StaticClass()->ProcessEvent(uFnProcessReplicatedBehaviorConsumerState, &ProcessReplicatedBehaviorConsumerState_Params, nullptr);
	uFnProcessReplicatedBehaviorConsumerState->FunctionFlags |= 0x400;
	uFnProcessReplicatedBehaviorConsumerState->iNative = 35553;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &ProcessReplicatedBehaviorConsumerState_Params.ConsumerHandle, sizeof(ProcessReplicatedBehaviorConsumerState_Params.ConsumerHandle));
	memcpy_s(&ReplicatedConsumerState, sizeof(ReplicatedConsumerState), &ProcessReplicatedBehaviorConsumerState_Params.ReplicatedConsumerState, sizeof(ProcessReplicatedBehaviorConsumerState_Params.ReplicatedConsumerState));

	return ProcessReplicatedBehaviorConsumerState_Params.ReturnValue;
};

// Function GearboxFramework.BehaviorKernel.ChangeBehaviorSequenceActivationStatus
// [0x00422401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[32714])
// Parameter Info:
// class UBehaviorProviderDefinition* ProviderDefinition             (CPF_Parm)
// const struct FName&            SequenceName                   (CPF_Parm)
// EChangeStatus                  ActivationStatusChanage        (CPF_Parm)
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UBehaviorKernel::ChangeBehaviorSequenceActivationStatus(class UBehaviorProviderDefinition* ProviderDefinition, const struct FName& SequenceName, EChangeStatus ActivationStatusChanage, struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnChangeBehaviorSequenceActivationStatus = nullptr;

	if (!uFnChangeBehaviorSequenceActivationStatus)
	{
		uFnChangeBehaviorSequenceActivationStatus = UFunction::FindFunction("Function GearboxFramework.BehaviorKernel.ChangeBehaviorSequenceActivationStatus");
	}

	UBehaviorKernel_execChangeBehaviorSequenceActivationStatus_Params ChangeBehaviorSequenceActivationStatus_Params;
	memset(&ChangeBehaviorSequenceActivationStatus_Params, 0, sizeof(ChangeBehaviorSequenceActivationStatus_Params));
	memcpy_s(&ChangeBehaviorSequenceActivationStatus_Params.ProviderDefinition, sizeof(ChangeBehaviorSequenceActivationStatus_Params.ProviderDefinition), &ProviderDefinition, sizeof(ProviderDefinition));
	memcpy_s(&ChangeBehaviorSequenceActivationStatus_Params.SequenceName, sizeof(ChangeBehaviorSequenceActivationStatus_Params.SequenceName), &SequenceName, sizeof(SequenceName));
	memcpy_s(&ChangeBehaviorSequenceActivationStatus_Params.ActivationStatusChanage, sizeof(ChangeBehaviorSequenceActivationStatus_Params.ActivationStatusChanage), &ActivationStatusChanage, sizeof(ActivationStatusChanage));
	memcpy_s(&ChangeBehaviorSequenceActivationStatus_Params.ConsumerHandle, sizeof(ChangeBehaviorSequenceActivationStatus_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnChangeBehaviorSequenceActivationStatus->iNative = 0;
	uFnChangeBehaviorSequenceActivationStatus->FunctionFlags &= ~0x400;
	UBehaviorKernel::StaticClass()->ProcessEvent(uFnChangeBehaviorSequenceActivationStatus, &ChangeBehaviorSequenceActivationStatus_Params, nullptr);
	uFnChangeBehaviorSequenceActivationStatus->FunctionFlags |= 0x400;
	uFnChangeBehaviorSequenceActivationStatus->iNative = 32714;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &ChangeBehaviorSequenceActivationStatus_Params.ConsumerHandle, sizeof(ChangeBehaviorSequenceActivationStatus_Params.ConsumerHandle));
};

// Function GearboxFramework.BehaviorKernel.ChangeBehaviorConsumerSuspensionStatus
// [0x00422401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[32713])
// Parameter Info:
// EChangeStatus                  SuspensionStatusChanage        (CPF_Parm)
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UBehaviorKernel::ChangeBehaviorConsumerSuspensionStatus(EChangeStatus SuspensionStatusChanage, struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnChangeBehaviorConsumerSuspensionStatus = nullptr;

	if (!uFnChangeBehaviorConsumerSuspensionStatus)
	{
		uFnChangeBehaviorConsumerSuspensionStatus = UFunction::FindFunction("Function GearboxFramework.BehaviorKernel.ChangeBehaviorConsumerSuspensionStatus");
	}

	UBehaviorKernel_execChangeBehaviorConsumerSuspensionStatus_Params ChangeBehaviorConsumerSuspensionStatus_Params;
	memset(&ChangeBehaviorConsumerSuspensionStatus_Params, 0, sizeof(ChangeBehaviorConsumerSuspensionStatus_Params));
	memcpy_s(&ChangeBehaviorConsumerSuspensionStatus_Params.SuspensionStatusChanage, sizeof(ChangeBehaviorConsumerSuspensionStatus_Params.SuspensionStatusChanage), &SuspensionStatusChanage, sizeof(SuspensionStatusChanage));
	memcpy_s(&ChangeBehaviorConsumerSuspensionStatus_Params.ConsumerHandle, sizeof(ChangeBehaviorConsumerSuspensionStatus_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnChangeBehaviorConsumerSuspensionStatus->iNative = 0;
	uFnChangeBehaviorConsumerSuspensionStatus->FunctionFlags &= ~0x400;
	UBehaviorKernel::StaticClass()->ProcessEvent(uFnChangeBehaviorConsumerSuspensionStatus, &ChangeBehaviorConsumerSuspensionStatus_Params, nullptr);
	uFnChangeBehaviorConsumerSuspensionStatus->FunctionFlags |= 0x400;
	uFnChangeBehaviorConsumerSuspensionStatus->iNative = 32713;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &ChangeBehaviorConsumerSuspensionStatus_Params.ConsumerHandle, sizeof(ChangeBehaviorConsumerSuspensionStatus_Params.ConsumerHandle));
};

// Function GearboxFramework.BehaviorKernel.BroadcastBehaviorEventFromScript
// [0x00426401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[32461])
// Parameter Info:
// const struct FName&            EventName                      (CPF_Parm)
// int32_t                        EventOutputToActivate          (CPF_OptionalParm | CPF_Parm)
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)
// class TArray<class UBehaviorProviderDefinition*> ProvidersToBroadcast           (CPF_Const | CPF_OptionalParm | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// class TArray<struct FBehaviorVariableValue> Parameters                     (CPF_Const | CPF_OptionalParm | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UBehaviorKernel::BroadcastBehaviorEventFromScript(const struct FName& EventName, int32_t EventOutputToActivate, struct FBehaviorConsumerHandle& ConsumerHandle, class TArray<class UBehaviorProviderDefinition*>& ProvidersToBroadcast, class TArray<struct FBehaviorVariableValue>& Parameters)
{
	static UFunction* uFnBroadcastBehaviorEventFromScript = nullptr;

	if (!uFnBroadcastBehaviorEventFromScript)
	{
		uFnBroadcastBehaviorEventFromScript = UFunction::FindFunction("Function GearboxFramework.BehaviorKernel.BroadcastBehaviorEventFromScript");
	}

	UBehaviorKernel_execBroadcastBehaviorEventFromScript_Params BroadcastBehaviorEventFromScript_Params;
	memset(&BroadcastBehaviorEventFromScript_Params, 0, sizeof(BroadcastBehaviorEventFromScript_Params));
	memcpy_s(&BroadcastBehaviorEventFromScript_Params.EventName, sizeof(BroadcastBehaviorEventFromScript_Params.EventName), &EventName, sizeof(EventName));
	memcpy_s(&BroadcastBehaviorEventFromScript_Params.EventOutputToActivate, sizeof(BroadcastBehaviorEventFromScript_Params.EventOutputToActivate), &EventOutputToActivate, sizeof(EventOutputToActivate));
	memcpy_s(&BroadcastBehaviorEventFromScript_Params.ConsumerHandle, sizeof(BroadcastBehaviorEventFromScript_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));
	memcpy_s(&BroadcastBehaviorEventFromScript_Params.ProvidersToBroadcast, sizeof(BroadcastBehaviorEventFromScript_Params.ProvidersToBroadcast), &ProvidersToBroadcast, sizeof(ProvidersToBroadcast));
	memcpy_s(&BroadcastBehaviorEventFromScript_Params.Parameters, sizeof(BroadcastBehaviorEventFromScript_Params.Parameters), &Parameters, sizeof(Parameters));

	uFnBroadcastBehaviorEventFromScript->iNative = 0;
	uFnBroadcastBehaviorEventFromScript->FunctionFlags &= ~0x400;
	UBehaviorKernel::StaticClass()->ProcessEvent(uFnBroadcastBehaviorEventFromScript, &BroadcastBehaviorEventFromScript_Params, nullptr);
	uFnBroadcastBehaviorEventFromScript->FunctionFlags |= 0x400;
	uFnBroadcastBehaviorEventFromScript->iNative = 32461;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &BroadcastBehaviorEventFromScript_Params.ConsumerHandle, sizeof(BroadcastBehaviorEventFromScript_Params.ConsumerHandle));
	memcpy_s(&ProvidersToBroadcast, sizeof(ProvidersToBroadcast), &BroadcastBehaviorEventFromScript_Params.ProvidersToBroadcast, sizeof(BroadcastBehaviorEventFromScript_Params.ProvidersToBroadcast));
	memcpy_s(&Parameters, sizeof(Parameters), &BroadcastBehaviorEventFromScript_Params.Parameters, sizeof(BroadcastBehaviorEventFromScript_Params.Parameters));
};

// Function GearboxFramework.BehaviorKernel.ActivateBehaviorEventFromScript
// [0x00426401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[31630])
// Parameter Info:
// class UBehaviorProviderDefinition* ProviderDefinition             (CPF_Parm)
// const struct FName&            EventName                      (CPF_Parm)
// int32_t                        EventOutputToActivate          (CPF_OptionalParm | CPF_Parm)
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)
// class TArray<struct FBehaviorVariableValue> Parameters                     (CPF_Const | CPF_OptionalParm | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UBehaviorKernel::ActivateBehaviorEventFromScript(class UBehaviorProviderDefinition* ProviderDefinition, const struct FName& EventName, int32_t EventOutputToActivate, struct FBehaviorConsumerHandle& ConsumerHandle, class TArray<struct FBehaviorVariableValue>& Parameters)
{
	static UFunction* uFnActivateBehaviorEventFromScript = nullptr;

	if (!uFnActivateBehaviorEventFromScript)
	{
		uFnActivateBehaviorEventFromScript = UFunction::FindFunction("Function GearboxFramework.BehaviorKernel.ActivateBehaviorEventFromScript");
	}

	UBehaviorKernel_execActivateBehaviorEventFromScript_Params ActivateBehaviorEventFromScript_Params;
	memset(&ActivateBehaviorEventFromScript_Params, 0, sizeof(ActivateBehaviorEventFromScript_Params));
	memcpy_s(&ActivateBehaviorEventFromScript_Params.ProviderDefinition, sizeof(ActivateBehaviorEventFromScript_Params.ProviderDefinition), &ProviderDefinition, sizeof(ProviderDefinition));
	memcpy_s(&ActivateBehaviorEventFromScript_Params.EventName, sizeof(ActivateBehaviorEventFromScript_Params.EventName), &EventName, sizeof(EventName));
	memcpy_s(&ActivateBehaviorEventFromScript_Params.EventOutputToActivate, sizeof(ActivateBehaviorEventFromScript_Params.EventOutputToActivate), &EventOutputToActivate, sizeof(EventOutputToActivate));
	memcpy_s(&ActivateBehaviorEventFromScript_Params.ConsumerHandle, sizeof(ActivateBehaviorEventFromScript_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));
	memcpy_s(&ActivateBehaviorEventFromScript_Params.Parameters, sizeof(ActivateBehaviorEventFromScript_Params.Parameters), &Parameters, sizeof(Parameters));

	uFnActivateBehaviorEventFromScript->iNative = 0;
	uFnActivateBehaviorEventFromScript->FunctionFlags &= ~0x400;
	UBehaviorKernel::StaticClass()->ProcessEvent(uFnActivateBehaviorEventFromScript, &ActivateBehaviorEventFromScript_Params, nullptr);
	uFnActivateBehaviorEventFromScript->FunctionFlags |= 0x400;
	uFnActivateBehaviorEventFromScript->iNative = 31630;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &ActivateBehaviorEventFromScript_Params.ConsumerHandle, sizeof(ActivateBehaviorEventFromScript_Params.ConsumerHandle));
	memcpy_s(&Parameters, sizeof(Parameters), &ActivateBehaviorEventFromScript_Params.Parameters, sizeof(ActivateBehaviorEventFromScript_Params.Parameters));
};

// Function GearboxFramework.BehaviorKernel.RemoveBehaviorProviderFromConsumer
// [0x00422401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35666])
// Parameter Info:
// class UBehaviorProviderDefinition* ProviderDefinition             (CPF_Parm)
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UBehaviorKernel::RemoveBehaviorProviderFromConsumer(class UBehaviorProviderDefinition* ProviderDefinition, struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnRemoveBehaviorProviderFromConsumer = nullptr;

	if (!uFnRemoveBehaviorProviderFromConsumer)
	{
		uFnRemoveBehaviorProviderFromConsumer = UFunction::FindFunction("Function GearboxFramework.BehaviorKernel.RemoveBehaviorProviderFromConsumer");
	}

	UBehaviorKernel_execRemoveBehaviorProviderFromConsumer_Params RemoveBehaviorProviderFromConsumer_Params;
	memset(&RemoveBehaviorProviderFromConsumer_Params, 0, sizeof(RemoveBehaviorProviderFromConsumer_Params));
	memcpy_s(&RemoveBehaviorProviderFromConsumer_Params.ProviderDefinition, sizeof(RemoveBehaviorProviderFromConsumer_Params.ProviderDefinition), &ProviderDefinition, sizeof(ProviderDefinition));
	memcpy_s(&RemoveBehaviorProviderFromConsumer_Params.ConsumerHandle, sizeof(RemoveBehaviorProviderFromConsumer_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnRemoveBehaviorProviderFromConsumer->iNative = 0;
	uFnRemoveBehaviorProviderFromConsumer->FunctionFlags &= ~0x400;
	UBehaviorKernel::StaticClass()->ProcessEvent(uFnRemoveBehaviorProviderFromConsumer, &RemoveBehaviorProviderFromConsumer_Params, nullptr);
	uFnRemoveBehaviorProviderFromConsumer->FunctionFlags |= 0x400;
	uFnRemoveBehaviorProviderFromConsumer->iNative = 35666;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &RemoveBehaviorProviderFromConsumer_Params.ConsumerHandle, sizeof(RemoveBehaviorProviderFromConsumer_Params.ConsumerHandle));
};

// Function GearboxFramework.BehaviorKernel.InitializeBehaviorProviderForConsumer
// [0x00422401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34545])
// Parameter Info:
// class UBehaviorProviderDefinition* ProviderDefinition             (CPF_Parm)
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UBehaviorKernel::InitializeBehaviorProviderForConsumer(class UBehaviorProviderDefinition* ProviderDefinition, struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnInitializeBehaviorProviderForConsumer = nullptr;

	if (!uFnInitializeBehaviorProviderForConsumer)
	{
		uFnInitializeBehaviorProviderForConsumer = UFunction::FindFunction("Function GearboxFramework.BehaviorKernel.InitializeBehaviorProviderForConsumer");
	}

	UBehaviorKernel_execInitializeBehaviorProviderForConsumer_Params InitializeBehaviorProviderForConsumer_Params;
	memset(&InitializeBehaviorProviderForConsumer_Params, 0, sizeof(InitializeBehaviorProviderForConsumer_Params));
	memcpy_s(&InitializeBehaviorProviderForConsumer_Params.ProviderDefinition, sizeof(InitializeBehaviorProviderForConsumer_Params.ProviderDefinition), &ProviderDefinition, sizeof(ProviderDefinition));
	memcpy_s(&InitializeBehaviorProviderForConsumer_Params.ConsumerHandle, sizeof(InitializeBehaviorProviderForConsumer_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnInitializeBehaviorProviderForConsumer->iNative = 0;
	uFnInitializeBehaviorProviderForConsumer->FunctionFlags &= ~0x400;
	UBehaviorKernel::StaticClass()->ProcessEvent(uFnInitializeBehaviorProviderForConsumer, &InitializeBehaviorProviderForConsumer_Params, nullptr);
	uFnInitializeBehaviorProviderForConsumer->FunctionFlags |= 0x400;
	uFnInitializeBehaviorProviderForConsumer->iNative = 34545;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &InitializeBehaviorProviderForConsumer_Params.ConsumerHandle, sizeof(InitializeBehaviorProviderForConsumer_Params.ConsumerHandle));
};

// Function GearboxFramework.BehaviorKernel.ForceUnregisterBehaviorConsumer
// [0x00422401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[33900])
// Parameter Info:
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Parm | CPF_OutParm)

void UBehaviorKernel::ForceUnregisterBehaviorConsumer(struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnForceUnregisterBehaviorConsumer = nullptr;

	if (!uFnForceUnregisterBehaviorConsumer)
	{
		uFnForceUnregisterBehaviorConsumer = UFunction::FindFunction("Function GearboxFramework.BehaviorKernel.ForceUnregisterBehaviorConsumer");
	}

	UBehaviorKernel_execForceUnregisterBehaviorConsumer_Params ForceUnregisterBehaviorConsumer_Params;
	memset(&ForceUnregisterBehaviorConsumer_Params, 0, sizeof(ForceUnregisterBehaviorConsumer_Params));
	memcpy_s(&ForceUnregisterBehaviorConsumer_Params.ConsumerHandle, sizeof(ForceUnregisterBehaviorConsumer_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnForceUnregisterBehaviorConsumer->iNative = 0;
	uFnForceUnregisterBehaviorConsumer->FunctionFlags &= ~0x400;
	UBehaviorKernel::StaticClass()->ProcessEvent(uFnForceUnregisterBehaviorConsumer, &ForceUnregisterBehaviorConsumer_Params, nullptr);
	uFnForceUnregisterBehaviorConsumer->FunctionFlags |= 0x400;
	uFnForceUnregisterBehaviorConsumer->iNative = 33900;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &ForceUnregisterBehaviorConsumer_Params.ConsumerHandle, sizeof(ForceUnregisterBehaviorConsumer_Params.ConsumerHandle));
};

// Function GearboxFramework.BehaviorKernel.RegisterBehaviorConsumer
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[35631])
// Parameter Info:
// struct FBehaviorConsumerHandle ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 BehaviorConsumer               (CPF_Parm)

struct FBehaviorConsumerHandle UBehaviorKernel::RegisterBehaviorConsumer(class UObject* BehaviorConsumer)
{
	static UFunction* uFnRegisterBehaviorConsumer = nullptr;

	if (!uFnRegisterBehaviorConsumer)
	{
		uFnRegisterBehaviorConsumer = UFunction::FindFunction("Function GearboxFramework.BehaviorKernel.RegisterBehaviorConsumer");
	}

	UBehaviorKernel_execRegisterBehaviorConsumer_Params RegisterBehaviorConsumer_Params;
	memset(&RegisterBehaviorConsumer_Params, 0, sizeof(RegisterBehaviorConsumer_Params));
	memcpy_s(&RegisterBehaviorConsumer_Params.BehaviorConsumer, sizeof(RegisterBehaviorConsumer_Params.BehaviorConsumer), &BehaviorConsumer, sizeof(BehaviorConsumer));

	uFnRegisterBehaviorConsumer->iNative = 0;
	uFnRegisterBehaviorConsumer->FunctionFlags &= ~0x400;
	UBehaviorKernel::StaticClass()->ProcessEvent(uFnRegisterBehaviorConsumer, &RegisterBehaviorConsumer_Params, nullptr);
	uFnRegisterBehaviorConsumer->FunctionFlags |= 0x400;
	uFnRegisterBehaviorConsumer->iNative = 35631;

	return RegisterBehaviorConsumer_Params.ReturnValue;
};

// Function GearboxFramework.BehaviorProviderDefinition.SetObjectBehaviorVariable
// [0x00422401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35912])
// Parameter Info:
// class UObject*                 Value                          (CPF_Parm)
// struct FBehaviorVariableValue  BehaviorVariable               (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UBehaviorProviderDefinition::SetObjectBehaviorVariable(class UObject* Value, struct FBehaviorVariableValue& BehaviorVariable)
{
	static UFunction* uFnSetObjectBehaviorVariable = nullptr;

	if (!uFnSetObjectBehaviorVariable)
	{
		uFnSetObjectBehaviorVariable = UFunction::FindFunction("Function GearboxFramework.BehaviorProviderDefinition.SetObjectBehaviorVariable");
	}

	UBehaviorProviderDefinition_execSetObjectBehaviorVariable_Params SetObjectBehaviorVariable_Params;
	memset(&SetObjectBehaviorVariable_Params, 0, sizeof(SetObjectBehaviorVariable_Params));
	memcpy_s(&SetObjectBehaviorVariable_Params.Value, sizeof(SetObjectBehaviorVariable_Params.Value), &Value, sizeof(Value));
	memcpy_s(&SetObjectBehaviorVariable_Params.BehaviorVariable, sizeof(SetObjectBehaviorVariable_Params.BehaviorVariable), &BehaviorVariable, sizeof(BehaviorVariable));

	uFnSetObjectBehaviorVariable->iNative = 0;
	uFnSetObjectBehaviorVariable->FunctionFlags &= ~0x400;
	UBehaviorProviderDefinition::StaticClass()->ProcessEvent(uFnSetObjectBehaviorVariable, &SetObjectBehaviorVariable_Params, nullptr);
	uFnSetObjectBehaviorVariable->FunctionFlags |= 0x400;
	uFnSetObjectBehaviorVariable->iNative = 35912;

	memcpy_s(&BehaviorVariable, sizeof(BehaviorVariable), &SetObjectBehaviorVariable_Params.BehaviorVariable, sizeof(SetObjectBehaviorVariable_Params.BehaviorVariable));
};

// Function GearboxFramework.BehaviorProviderDefinition.SetVectorBehaviorVariable
// [0x00422401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35942])
// Parameter Info:
// struct FBehaviorVariableValue  BehaviorVariable               (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// struct FVector                 Value                          (CPF_Const | CPF_Parm | CPF_OutParm)

void UBehaviorProviderDefinition::SetVectorBehaviorVariable(struct FBehaviorVariableValue& BehaviorVariable, struct FVector& Value)
{
	static UFunction* uFnSetVectorBehaviorVariable = nullptr;

	if (!uFnSetVectorBehaviorVariable)
	{
		uFnSetVectorBehaviorVariable = UFunction::FindFunction("Function GearboxFramework.BehaviorProviderDefinition.SetVectorBehaviorVariable");
	}

	UBehaviorProviderDefinition_execSetVectorBehaviorVariable_Params SetVectorBehaviorVariable_Params;
	memset(&SetVectorBehaviorVariable_Params, 0, sizeof(SetVectorBehaviorVariable_Params));
	memcpy_s(&SetVectorBehaviorVariable_Params.BehaviorVariable, sizeof(SetVectorBehaviorVariable_Params.BehaviorVariable), &BehaviorVariable, sizeof(BehaviorVariable));
	memcpy_s(&SetVectorBehaviorVariable_Params.Value, sizeof(SetVectorBehaviorVariable_Params.Value), &Value, sizeof(Value));

	uFnSetVectorBehaviorVariable->iNative = 0;
	uFnSetVectorBehaviorVariable->FunctionFlags &= ~0x400;
	UBehaviorProviderDefinition::StaticClass()->ProcessEvent(uFnSetVectorBehaviorVariable, &SetVectorBehaviorVariable_Params, nullptr);
	uFnSetVectorBehaviorVariable->FunctionFlags |= 0x400;
	uFnSetVectorBehaviorVariable->iNative = 35942;

	memcpy_s(&BehaviorVariable, sizeof(BehaviorVariable), &SetVectorBehaviorVariable_Params.BehaviorVariable, sizeof(SetVectorBehaviorVariable_Params.BehaviorVariable));
	memcpy_s(&Value, sizeof(Value), &SetVectorBehaviorVariable_Params.Value, sizeof(SetVectorBehaviorVariable_Params.Value));
};

// Function GearboxFramework.BehaviorProviderDefinition.SetFloatBehaviorVariable
// [0x00422401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35902])
// Parameter Info:
// float                          Value                          (CPF_Parm)
// struct FBehaviorVariableValue  BehaviorVariable               (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UBehaviorProviderDefinition::SetFloatBehaviorVariable(float Value, struct FBehaviorVariableValue& BehaviorVariable)
{
	static UFunction* uFnSetFloatBehaviorVariable = nullptr;

	if (!uFnSetFloatBehaviorVariable)
	{
		uFnSetFloatBehaviorVariable = UFunction::FindFunction("Function GearboxFramework.BehaviorProviderDefinition.SetFloatBehaviorVariable");
	}

	UBehaviorProviderDefinition_execSetFloatBehaviorVariable_Params SetFloatBehaviorVariable_Params;
	memset(&SetFloatBehaviorVariable_Params, 0, sizeof(SetFloatBehaviorVariable_Params));
	memcpy_s(&SetFloatBehaviorVariable_Params.Value, sizeof(SetFloatBehaviorVariable_Params.Value), &Value, sizeof(Value));
	memcpy_s(&SetFloatBehaviorVariable_Params.BehaviorVariable, sizeof(SetFloatBehaviorVariable_Params.BehaviorVariable), &BehaviorVariable, sizeof(BehaviorVariable));

	uFnSetFloatBehaviorVariable->iNative = 0;
	uFnSetFloatBehaviorVariable->FunctionFlags &= ~0x400;
	UBehaviorProviderDefinition::StaticClass()->ProcessEvent(uFnSetFloatBehaviorVariable, &SetFloatBehaviorVariable_Params, nullptr);
	uFnSetFloatBehaviorVariable->FunctionFlags |= 0x400;
	uFnSetFloatBehaviorVariable->iNative = 35902;

	memcpy_s(&BehaviorVariable, sizeof(BehaviorVariable), &SetFloatBehaviorVariable_Params.BehaviorVariable, sizeof(SetFloatBehaviorVariable_Params.BehaviorVariable));
};

// Function GearboxFramework.BehaviorProviderDefinition.SetIntBehaviorVariable
// [0x00422401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35903])
// Parameter Info:
// int32_t                        Value                          (CPF_Parm)
// struct FBehaviorVariableValue  BehaviorVariable               (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UBehaviorProviderDefinition::SetIntBehaviorVariable(int32_t Value, struct FBehaviorVariableValue& BehaviorVariable)
{
	static UFunction* uFnSetIntBehaviorVariable = nullptr;

	if (!uFnSetIntBehaviorVariable)
	{
		uFnSetIntBehaviorVariable = UFunction::FindFunction("Function GearboxFramework.BehaviorProviderDefinition.SetIntBehaviorVariable");
	}

	UBehaviorProviderDefinition_execSetIntBehaviorVariable_Params SetIntBehaviorVariable_Params;
	memset(&SetIntBehaviorVariable_Params, 0, sizeof(SetIntBehaviorVariable_Params));
	memcpy_s(&SetIntBehaviorVariable_Params.Value, sizeof(SetIntBehaviorVariable_Params.Value), &Value, sizeof(Value));
	memcpy_s(&SetIntBehaviorVariable_Params.BehaviorVariable, sizeof(SetIntBehaviorVariable_Params.BehaviorVariable), &BehaviorVariable, sizeof(BehaviorVariable));

	uFnSetIntBehaviorVariable->iNative = 0;
	uFnSetIntBehaviorVariable->FunctionFlags &= ~0x400;
	UBehaviorProviderDefinition::StaticClass()->ProcessEvent(uFnSetIntBehaviorVariable, &SetIntBehaviorVariable_Params, nullptr);
	uFnSetIntBehaviorVariable->FunctionFlags |= 0x400;
	uFnSetIntBehaviorVariable->iNative = 35903;

	memcpy_s(&BehaviorVariable, sizeof(BehaviorVariable), &SetIntBehaviorVariable_Params.BehaviorVariable, sizeof(SetIntBehaviorVariable_Params.BehaviorVariable));
};

// Function GearboxFramework.BehaviorProviderDefinition.SetBoolBehaviorVariable
// [0x00422401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35886])
// Parameter Info:
// bool                           Value                          (CPF_Parm)
// struct FBehaviorVariableValue  BehaviorVariable               (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UBehaviorProviderDefinition::SetBoolBehaviorVariable(bool Value, struct FBehaviorVariableValue& BehaviorVariable)
{
	static UFunction* uFnSetBoolBehaviorVariable = nullptr;

	if (!uFnSetBoolBehaviorVariable)
	{
		uFnSetBoolBehaviorVariable = UFunction::FindFunction("Function GearboxFramework.BehaviorProviderDefinition.SetBoolBehaviorVariable");
	}

	UBehaviorProviderDefinition_execSetBoolBehaviorVariable_Params SetBoolBehaviorVariable_Params;
	memset(&SetBoolBehaviorVariable_Params, 0, sizeof(SetBoolBehaviorVariable_Params));
	SetBoolBehaviorVariable_Params.Value = Value;
	memcpy_s(&SetBoolBehaviorVariable_Params.BehaviorVariable, sizeof(SetBoolBehaviorVariable_Params.BehaviorVariable), &BehaviorVariable, sizeof(BehaviorVariable));

	uFnSetBoolBehaviorVariable->iNative = 0;
	uFnSetBoolBehaviorVariable->FunctionFlags &= ~0x400;
	UBehaviorProviderDefinition::StaticClass()->ProcessEvent(uFnSetBoolBehaviorVariable, &SetBoolBehaviorVariable_Params, nullptr);
	uFnSetBoolBehaviorVariable->FunctionFlags |= 0x400;
	uFnSetBoolBehaviorVariable->iNative = 35886;

	memcpy_s(&BehaviorVariable, sizeof(BehaviorVariable), &SetBoolBehaviorVariable_Params.BehaviorVariable, sizeof(SetBoolBehaviorVariable_Params.BehaviorVariable));
};

// Function GearboxFramework.BehaviorTrigger.UnTouch
// [0x00020C00] (FUNC_Native | FUNC_Event | FUNC_Public | FUNC_AllFlags) (iNative[307])
// Parameter Info:
// class AActor*                  Other                          (CPF_Parm)

void ABehaviorTrigger::eventUnTouch(class AActor* Other)
{
	static UFunction* uFnUnTouch = nullptr;

	if (!uFnUnTouch)
	{
		uFnUnTouch = UFunction::FindFunction("Function GearboxFramework.BehaviorTrigger.UnTouch");
	}

	ABehaviorTrigger_eventUnTouch_Params UnTouch_Params;
	memset(&UnTouch_Params, 0, sizeof(UnTouch_Params));
	memcpy_s(&UnTouch_Params.Other, sizeof(UnTouch_Params.Other), &Other, sizeof(Other));

	uFnUnTouch->iNative = 0;
	uFnUnTouch->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnUnTouch, &UnTouch_Params, nullptr);
	uFnUnTouch->FunctionFlags |= 0x400;
	uFnUnTouch->iNative = 307;
};

// Function GearboxFramework.BehaviorTrigger.Touch
// [0x00020C00] (FUNC_Native | FUNC_Event | FUNC_Public | FUNC_AllFlags) (iNative[306])
// Parameter Info:
// class AActor*                  Other                          (CPF_Parm)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm | CPF_EditInline)
// const struct FVector&          HitLocation                    (CPF_Parm)
// const struct FVector&          HitNormal                      (CPF_Parm)

void ABehaviorTrigger::eventTouch(class AActor* Other, class UPrimitiveComponent* OtherComp, const struct FVector& HitLocation, const struct FVector& HitNormal)
{
	static UFunction* uFnTouch = nullptr;

	if (!uFnTouch)
	{
		uFnTouch = UFunction::FindFunction("Function GearboxFramework.BehaviorTrigger.Touch");
	}

	ABehaviorTrigger_eventTouch_Params Touch_Params;
	memset(&Touch_Params, 0, sizeof(Touch_Params));
	memcpy_s(&Touch_Params.Other, sizeof(Touch_Params.Other), &Other, sizeof(Other));
	memcpy_s(&Touch_Params.OtherComp, sizeof(Touch_Params.OtherComp), &OtherComp, sizeof(OtherComp));
	memcpy_s(&Touch_Params.HitLocation, sizeof(Touch_Params.HitLocation), &HitLocation, sizeof(HitLocation));
	memcpy_s(&Touch_Params.HitNormal, sizeof(Touch_Params.HitNormal), &HitNormal, sizeof(HitNormal));

	uFnTouch->iNative = 0;
	uFnTouch->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnTouch, &Touch_Params, nullptr);
	uFnTouch->FunctionFlags |= 0x400;
	uFnTouch->iNative = 306;
};

// Function GearboxFramework.PerchBodyDefinition.OnFinished
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2501])
// Parameter Info:
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UPerchBodyDefinition::OnFinished(struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnFinished = nullptr;

	if (!uFnOnFinished)
	{
		uFnOnFinished = UFunction::FindFunction("Function GearboxFramework.PerchBodyDefinition.OnFinished");
	}

	UPerchBodyDefinition_execOnFinished_Params OnFinished_Params;
	memset(&OnFinished_Params, 0, sizeof(OnFinished_Params));
	memcpy_s(&OnFinished_Params.ConsumerHandle, sizeof(OnFinished_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnFinished->iNative = 0;
	uFnOnFinished->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnFinished, &OnFinished_Params, nullptr);
	uFnOnFinished->FunctionFlags |= 0x400;
	uFnOnFinished->iNative = 2501;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnFinished_Params.ConsumerHandle, sizeof(OnFinished_Params.ConsumerHandle));
};

// Function GearboxFramework.PerchBodyDefinition.OnEndAnim
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2502])
// Parameter Info:
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UPerchBodyDefinition::OnEndAnim(struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnEndAnim = nullptr;

	if (!uFnOnEndAnim)
	{
		uFnOnEndAnim = UFunction::FindFunction("Function GearboxFramework.PerchBodyDefinition.OnEndAnim");
	}

	UPerchBodyDefinition_execOnEndAnim_Params OnEndAnim_Params;
	memset(&OnEndAnim_Params, 0, sizeof(OnEndAnim_Params));
	memcpy_s(&OnEndAnim_Params.ConsumerHandle, sizeof(OnEndAnim_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnEndAnim->iNative = 0;
	uFnOnEndAnim->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnEndAnim, &OnEndAnim_Params, nullptr);
	uFnOnEndAnim->FunctionFlags |= 0x400;
	uFnOnEndAnim->iNative = 2502;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnEndAnim_Params.ConsumerHandle, sizeof(OnEndAnim_Params.ConsumerHandle));
};

// Function GearboxFramework.PerchBodyDefinition.OnIdleAnim
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2503])
// Parameter Info:
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UPerchBodyDefinition::OnIdleAnim(struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnIdleAnim = nullptr;

	if (!uFnOnIdleAnim)
	{
		uFnOnIdleAnim = UFunction::FindFunction("Function GearboxFramework.PerchBodyDefinition.OnIdleAnim");
	}

	UPerchBodyDefinition_execOnIdleAnim_Params OnIdleAnim_Params;
	memset(&OnIdleAnim_Params, 0, sizeof(OnIdleAnim_Params));
	memcpy_s(&OnIdleAnim_Params.ConsumerHandle, sizeof(OnIdleAnim_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnIdleAnim->iNative = 0;
	uFnOnIdleAnim->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnIdleAnim, &OnIdleAnim_Params, nullptr);
	uFnOnIdleAnim->FunctionFlags |= 0x400;
	uFnOnIdleAnim->iNative = 2503;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnIdleAnim_Params.ConsumerHandle, sizeof(OnIdleAnim_Params.ConsumerHandle));
};

// Function GearboxFramework.PerchBodyDefinition.OnStartAnim
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2504])
// Parameter Info:
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UPerchBodyDefinition::OnStartAnim(struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnStartAnim = nullptr;

	if (!uFnOnStartAnim)
	{
		uFnOnStartAnim = UFunction::FindFunction("Function GearboxFramework.PerchBodyDefinition.OnStartAnim");
	}

	UPerchBodyDefinition_execOnStartAnim_Params OnStartAnim_Params;
	memset(&OnStartAnim_Params, 0, sizeof(OnStartAnim_Params));
	memcpy_s(&OnStartAnim_Params.ConsumerHandle, sizeof(OnStartAnim_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnStartAnim->iNative = 0;
	uFnOnStartAnim->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnStartAnim, &OnStartAnim_Params, nullptr);
	uFnOnStartAnim->FunctionFlags |= 0x400;
	uFnOnStartAnim->iNative = 2504;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnStartAnim_Params.ConsumerHandle, sizeof(OnStartAnim_Params.ConsumerHandle));
};

// Function GearboxFramework.SpawnPointBodyDefinition.OnSpawned
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2506])
// Parameter Info:
// class UObject*                 SpawnedActor                   (CPF_Parm)
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void USpawnPointBodyDefinition::OnSpawned(class UObject* SpawnedActor, struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnSpawned = nullptr;

	if (!uFnOnSpawned)
	{
		uFnOnSpawned = UFunction::FindFunction("Function GearboxFramework.SpawnPointBodyDefinition.OnSpawned");
	}

	USpawnPointBodyDefinition_execOnSpawned_Params OnSpawned_Params;
	memset(&OnSpawned_Params, 0, sizeof(OnSpawned_Params));
	memcpy_s(&OnSpawned_Params.SpawnedActor, sizeof(OnSpawned_Params.SpawnedActor), &SpawnedActor, sizeof(SpawnedActor));
	memcpy_s(&OnSpawned_Params.ConsumerHandle, sizeof(OnSpawned_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnSpawned->iNative = 0;
	uFnOnSpawned->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnSpawned, &OnSpawned_Params, nullptr);
	uFnOnSpawned->FunctionFlags |= 0x400;
	uFnOnSpawned->iNative = 2506;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnSpawned_Params.ConsumerHandle, sizeof(OnSpawned_Params.ConsumerHandle));
};

// Function GearboxFramework.BodyKernel.UpdateBodyComposition
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[36610])
// Parameter Info:
// class UIBodyCompositionInstance* Owner                          (CPF_Parm)

void UBodyKernel::UpdateBodyComposition(class UIBodyCompositionInstance* Owner)
{
	static UFunction* uFnUpdateBodyComposition = nullptr;

	if (!uFnUpdateBodyComposition)
	{
		uFnUpdateBodyComposition = UFunction::FindFunction("Function GearboxFramework.BodyKernel.UpdateBodyComposition");
	}

	UBodyKernel_execUpdateBodyComposition_Params UpdateBodyComposition_Params;
	memset(&UpdateBodyComposition_Params, 0, sizeof(UpdateBodyComposition_Params));
	memcpy_s(&UpdateBodyComposition_Params.Owner, sizeof(UpdateBodyComposition_Params.Owner), &Owner, sizeof(Owner));

	uFnUpdateBodyComposition->iNative = 0;
	uFnUpdateBodyComposition->FunctionFlags &= ~0x400;
	UBodyKernel::StaticClass()->ProcessEvent(uFnUpdateBodyComposition, &UpdateBodyComposition_Params, nullptr);
	uFnUpdateBodyComposition->FunctionFlags |= 0x400;
	uFnUpdateBodyComposition->iNative = 36610;
};

// Function GearboxFramework.CompoundExpressionEvaluator.Evaluate
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[22809])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 ContextSource                  (CPF_Parm)

bool UCompoundExpressionEvaluator::Evaluate(class UObject* ContextSource)
{
	static UFunction* uFnEvaluate = nullptr;

	if (!uFnEvaluate)
	{
		uFnEvaluate = UFunction::FindFunction("Function GearboxFramework.CompoundExpressionEvaluator.Evaluate");
	}

	UCompoundExpressionEvaluator_execEvaluate_Params Evaluate_Params;
	memset(&Evaluate_Params, 0, sizeof(Evaluate_Params));
	memcpy_s(&Evaluate_Params.ContextSource, sizeof(Evaluate_Params.ContextSource), &ContextSource, sizeof(ContextSource));

	uFnEvaluate->iNative = 0;
	uFnEvaluate->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnEvaluate, &Evaluate_Params, nullptr);
	uFnEvaluate->FunctionFlags |= 0x400;
	uFnEvaluate->iNative = 22809;

	return Evaluate_Params.ReturnValue;
};

// Function GearboxFramework.CoverUseComponent.HasMantlePath
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34318])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UCoverUseComponent::HasMantlePath()
{
	static UFunction* uFnHasMantlePath = nullptr;

	if (!uFnHasMantlePath)
	{
		uFnHasMantlePath = UFunction::FindFunction("Function GearboxFramework.CoverUseComponent.HasMantlePath");
	}

	UCoverUseComponent_execHasMantlePath_Params HasMantlePath_Params;
	memset(&HasMantlePath_Params, 0, sizeof(HasMantlePath_Params));

	uFnHasMantlePath->iNative = 0;
	uFnHasMantlePath->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnHasMantlePath, &HasMantlePath_Params, nullptr);
	uFnHasMantlePath->FunctionFlags |= 0x400;
	uFnHasMantlePath->iNative = 34318;

	return HasMantlePath_Params.ReturnValue;
};

// Function GearboxFramework.CoverUseComponent.StopMantle
// [0x00020403] (FUNC_Final | FUNC_Defined | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2490])
// Parameter Info:

void UCoverUseComponent::StopMantle()
{
	static UFunction* uFnStopMantle = nullptr;

	if (!uFnStopMantle)
	{
		uFnStopMantle = UFunction::FindFunction("Function GearboxFramework.CoverUseComponent.StopMantle");
	}

	UCoverUseComponent_execStopMantle_Params StopMantle_Params;
	memset(&StopMantle_Params, 0, sizeof(StopMantle_Params));

	uFnStopMantle->iNative = 0;
	uFnStopMantle->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnStopMantle, &StopMantle_Params, nullptr);
	uFnStopMantle->FunctionFlags |= 0x400;
	uFnStopMantle->iNative = 2490;
};

// Function GearboxFramework.CoverUseComponent.StartMantle
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[36255])
// Parameter Info:
// struct FVector                 MoveStart                      (CPF_Const | CPF_Parm | CPF_OutParm)
// struct FVector                 MoveDest                       (CPF_Const | CPF_Parm | CPF_OutParm)

void UCoverUseComponent::StartMantle(struct FVector& MoveStart, struct FVector& MoveDest)
{
	static UFunction* uFnStartMantle = nullptr;

	if (!uFnStartMantle)
	{
		uFnStartMantle = UFunction::FindFunction("Function GearboxFramework.CoverUseComponent.StartMantle");
	}

	UCoverUseComponent_execStartMantle_Params StartMantle_Params;
	memset(&StartMantle_Params, 0, sizeof(StartMantle_Params));
	memcpy_s(&StartMantle_Params.MoveStart, sizeof(StartMantle_Params.MoveStart), &MoveStart, sizeof(MoveStart));
	memcpy_s(&StartMantle_Params.MoveDest, sizeof(StartMantle_Params.MoveDest), &MoveDest, sizeof(MoveDest));

	uFnStartMantle->iNative = 0;
	uFnStartMantle->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnStartMantle, &StartMantle_Params, nullptr);
	uFnStartMantle->FunctionFlags |= 0x400;
	uFnStartMantle->iNative = 36255;

	memcpy_s(&MoveStart, sizeof(MoveStart), &StartMantle_Params.MoveStart, sizeof(StartMantle_Params.MoveStart));
	memcpy_s(&MoveDest, sizeof(MoveDest), &StartMantle_Params.MoveDest, sizeof(StartMantle_Params.MoveDest));
};

// Function GearboxFramework.CoverUseComponent.FireTimer
// [0x00020403] (FUNC_Final | FUNC_Defined | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2491])
// Parameter Info:

void UCoverUseComponent::FireTimer()
{
	static UFunction* uFnFireTimer = nullptr;

	if (!uFnFireTimer)
	{
		uFnFireTimer = UFunction::FindFunction("Function GearboxFramework.CoverUseComponent.FireTimer");
	}

	UCoverUseComponent_execFireTimer_Params FireTimer_Params;
	memset(&FireTimer_Params, 0, sizeof(FireTimer_Params));

	uFnFireTimer->iNative = 0;
	uFnFireTimer->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnFireTimer, &FireTimer_Params, nullptr);
	uFnFireTimer->FunctionFlags |= 0x400;
	uFnFireTimer->iNative = 2491;
};

// Function GearboxFramework.CoverUseComponent.IdleTimer
// [0x00020403] (FUNC_Final | FUNC_Defined | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2492])
// Parameter Info:

void UCoverUseComponent::IdleTimer()
{
	static UFunction* uFnIdleTimer = nullptr;

	if (!uFnIdleTimer)
	{
		uFnIdleTimer = UFunction::FindFunction("Function GearboxFramework.CoverUseComponent.IdleTimer");
	}

	UCoverUseComponent_execIdleTimer_Params IdleTimer_Params;
	memset(&IdleTimer_Params, 0, sizeof(IdleTimer_Params));

	uFnIdleTimer->iNative = 0;
	uFnIdleTimer->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIdleTimer, &IdleTimer_Params, nullptr);
	uFnIdleTimer->FunctionFlags |= 0x400;
	uFnIdleTimer->iNative = 2492;
};

// Function GearboxFramework.CoverUseComponent.CanFire
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32669])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UCoverUseComponent::CanFire()
{
	static UFunction* uFnCanFire = nullptr;

	if (!uFnCanFire)
	{
		uFnCanFire = UFunction::FindFunction("Function GearboxFramework.CoverUseComponent.CanFire");
	}

	UCoverUseComponent_execCanFire_Params CanFire_Params;
	memset(&CanFire_Params, 0, sizeof(CanFire_Params));

	uFnCanFire->iNative = 0;
	uFnCanFire->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCanFire, &CanFire_Params, nullptr);
	uFnCanFire->FunctionFlags |= 0x400;
	uFnCanFire->iNative = 32669;

	return CanFire_Params.ReturnValue;
};

// Function GearboxFramework.CoverUseComponent.TransitionFinished
// [0x00020403] (FUNC_Final | FUNC_Defined | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2493])
// Parameter Info:

void UCoverUseComponent::TransitionFinished()
{
	static UFunction* uFnTransitionFinished = nullptr;

	if (!uFnTransitionFinished)
	{
		uFnTransitionFinished = UFunction::FindFunction("Function GearboxFramework.CoverUseComponent.TransitionFinished");
	}

	UCoverUseComponent_execTransitionFinished_Params TransitionFinished_Params;
	memset(&TransitionFinished_Params, 0, sizeof(TransitionFinished_Params));

	uFnTransitionFinished->iNative = 0;
	uFnTransitionFinished->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnTransitionFinished, &TransitionFinished_Params, nullptr);
	uFnTransitionFinished->FunctionFlags |= 0x400;
	uFnTransitionFinished->iNative = 2493;
};

// Function GearboxFramework.CoverUseComponent.PlayTransition
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35483])
// Parameter Info:
// class USpecialMoveDefinition*  Transition                     (CPF_Parm)

void UCoverUseComponent::PlayTransition(class USpecialMoveDefinition* Transition)
{
	static UFunction* uFnPlayTransition = nullptr;

	if (!uFnPlayTransition)
	{
		uFnPlayTransition = UFunction::FindFunction("Function GearboxFramework.CoverUseComponent.PlayTransition");
	}

	UCoverUseComponent_execPlayTransition_Params PlayTransition_Params;
	memset(&PlayTransition_Params, 0, sizeof(PlayTransition_Params));
	memcpy_s(&PlayTransition_Params.Transition, sizeof(PlayTransition_Params.Transition), &Transition, sizeof(Transition));

	uFnPlayTransition->iNative = 0;
	uFnPlayTransition->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPlayTransition, &PlayTransition_Params, nullptr);
	uFnPlayTransition->FunctionFlags |= 0x400;
	uFnPlayTransition->iNative = 35483;
};

// Function GearboxFramework.CoverUseComponent.CheckCoverState
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32727])
// Parameter Info:

void UCoverUseComponent::CheckCoverState()
{
	static UFunction* uFnCheckCoverState = nullptr;

	if (!uFnCheckCoverState)
	{
		uFnCheckCoverState = UFunction::FindFunction("Function GearboxFramework.CoverUseComponent.CheckCoverState");
	}

	UCoverUseComponent_execCheckCoverState_Params CheckCoverState_Params;
	memset(&CheckCoverState_Params, 0, sizeof(CheckCoverState_Params));

	uFnCheckCoverState->iNative = 0;
	uFnCheckCoverState->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCheckCoverState, &CheckCoverState_Params, nullptr);
	uFnCheckCoverState->FunctionFlags |= 0x400;
	uFnCheckCoverState->iNative = 32727;
};

// Function GearboxFramework.CoverUseComponent.FinishCoverState
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[33820])
// Parameter Info:

void UCoverUseComponent::FinishCoverState()
{
	static UFunction* uFnFinishCoverState = nullptr;

	if (!uFnFinishCoverState)
	{
		uFnFinishCoverState = UFunction::FindFunction("Function GearboxFramework.CoverUseComponent.FinishCoverState");
	}

	UCoverUseComponent_execFinishCoverState_Params FinishCoverState_Params;
	memset(&FinishCoverState_Params, 0, sizeof(FinishCoverState_Params));

	uFnFinishCoverState->iNative = 0;
	uFnFinishCoverState->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnFinishCoverState, &FinishCoverState_Params, nullptr);
	uFnFinishCoverState->FunctionFlags |= 0x400;
	uFnFinishCoverState->iNative = 33820;
};

// Function GearboxFramework.CoverUseComponent.BeginCoverState
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32136])
// Parameter Info:

void UCoverUseComponent::BeginCoverState()
{
	static UFunction* uFnBeginCoverState = nullptr;

	if (!uFnBeginCoverState)
	{
		uFnBeginCoverState = UFunction::FindFunction("Function GearboxFramework.CoverUseComponent.BeginCoverState");
	}

	UCoverUseComponent_execBeginCoverState_Params BeginCoverState_Params;
	memset(&BeginCoverState_Params, 0, sizeof(BeginCoverState_Params));

	uFnBeginCoverState->iNative = 0;
	uFnBeginCoverState->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnBeginCoverState, &BeginCoverState_Params, nullptr);
	uFnBeginCoverState->FunctionFlags |= 0x400;
	uFnBeginCoverState->iNative = 32136;
};

// Function GearboxFramework.CoverUseComponent.NetUpdate
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35087])
// Parameter Info:
// struct FCoverUseState          InState                        (CPF_Const | CPF_Parm | CPF_OutParm)

void UCoverUseComponent::NetUpdate(struct FCoverUseState& InState)
{
	static UFunction* uFnNetUpdate = nullptr;

	if (!uFnNetUpdate)
	{
		uFnNetUpdate = UFunction::FindFunction("Function GearboxFramework.CoverUseComponent.NetUpdate");
	}

	UCoverUseComponent_execNetUpdate_Params NetUpdate_Params;
	memset(&NetUpdate_Params, 0, sizeof(NetUpdate_Params));
	memcpy_s(&NetUpdate_Params.InState, sizeof(NetUpdate_Params.InState), &InState, sizeof(InState));

	uFnNetUpdate->iNative = 0;
	uFnNetUpdate->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnNetUpdate, &NetUpdate_Params, nullptr);
	uFnNetUpdate->FunctionFlags |= 0x400;
	uFnNetUpdate->iNative = 35087;

	memcpy_s(&InState, sizeof(InState), &NetUpdate_Params.InState, sizeof(NetUpdate_Params.InState));
};

// Function GearboxFramework.CoverUseComponent.GotoCoverState
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34277])
// Parameter Info:
// const struct FName&            NewState                       (CPF_Parm)

void UCoverUseComponent::GotoCoverState(const struct FName& NewState)
{
	static UFunction* uFnGotoCoverState = nullptr;

	if (!uFnGotoCoverState)
	{
		uFnGotoCoverState = UFunction::FindFunction("Function GearboxFramework.CoverUseComponent.GotoCoverState");
	}

	UCoverUseComponent_execGotoCoverState_Params GotoCoverState_Params;
	memset(&GotoCoverState_Params, 0, sizeof(GotoCoverState_Params));
	memcpy_s(&GotoCoverState_Params.NewState, sizeof(GotoCoverState_Params.NewState), &NewState, sizeof(NewState));

	uFnGotoCoverState->iNative = 0;
	uFnGotoCoverState->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGotoCoverState, &GotoCoverState_Params, nullptr);
	uFnGotoCoverState->FunctionFlags |= 0x400;
	uFnGotoCoverState->iNative = 34277;
};

// Function GearboxFramework.CoverUseComponent.SetDesiredCover
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35895])
// Parameter Info:
// class UCoverSlotComponent*     InDesiredCover                 (CPF_Parm | CPF_EditInline)

void UCoverUseComponent::SetDesiredCover(class UCoverSlotComponent* InDesiredCover)
{
	static UFunction* uFnSetDesiredCover = nullptr;

	if (!uFnSetDesiredCover)
	{
		uFnSetDesiredCover = UFunction::FindFunction("Function GearboxFramework.CoverUseComponent.SetDesiredCover");
	}

	UCoverUseComponent_execSetDesiredCover_Params SetDesiredCover_Params;
	memset(&SetDesiredCover_Params, 0, sizeof(SetDesiredCover_Params));
	memcpy_s(&SetDesiredCover_Params.InDesiredCover, sizeof(SetDesiredCover_Params.InDesiredCover), &InDesiredCover, sizeof(InDesiredCover));

	uFnSetDesiredCover->iNative = 0;
	uFnSetDesiredCover->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetDesiredCover, &SetDesiredCover_Params, nullptr);
	uFnSetDesiredCover->FunctionFlags |= 0x400;
	uFnSetDesiredCover->iNative = 35895;
};

// Function GearboxFramework.CoverUseComponent.SetCanUseCover
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35888])
// Parameter Info:
// bool                           bInCanUse                      (CPF_Parm)

void UCoverUseComponent::SetCanUseCover(bool bInCanUse)
{
	static UFunction* uFnSetCanUseCover = nullptr;

	if (!uFnSetCanUseCover)
	{
		uFnSetCanUseCover = UFunction::FindFunction("Function GearboxFramework.CoverUseComponent.SetCanUseCover");
	}

	UCoverUseComponent_execSetCanUseCover_Params SetCanUseCover_Params;
	memset(&SetCanUseCover_Params, 0, sizeof(SetCanUseCover_Params));
	SetCanUseCover_Params.bInCanUse = bInCanUse;

	uFnSetCanUseCover->iNative = 0;
	uFnSetCanUseCover->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetCanUseCover, &SetCanUseCover_Params, nullptr);
	uFnSetCanUseCover->FunctionFlags |= 0x400;
	uFnSetCanUseCover->iNative = 35888;
};

// Function GearboxFramework.CoverUseComponent.CanUseCover
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32688])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UCoverUseComponent::CanUseCover()
{
	static UFunction* uFnCanUseCover = nullptr;

	if (!uFnCanUseCover)
	{
		uFnCanUseCover = UFunction::FindFunction("Function GearboxFramework.CoverUseComponent.CanUseCover");
	}

	UCoverUseComponent_execCanUseCover_Params CanUseCover_Params;
	memset(&CanUseCover_Params, 0, sizeof(CanUseCover_Params));

	uFnCanUseCover->iNative = 0;
	uFnCanUseCover->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCanUseCover, &CanUseCover_Params, nullptr);
	uFnCanUseCover->FunctionFlags |= 0x400;
	uFnCanUseCover->iNative = 32688;

	return CanUseCover_Params.ReturnValue;
};

// Function GearboxFramework.CoverUseComponent.GetCoverRotation
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34063])
// Parameter Info:
// struct FRotator                ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UCoverSlotComponent*     Slot                           (CPF_Parm | CPF_EditInline)

struct FRotator UCoverUseComponent::GetCoverRotation(class UCoverSlotComponent* Slot)
{
	static UFunction* uFnGetCoverRotation = nullptr;

	if (!uFnGetCoverRotation)
	{
		uFnGetCoverRotation = UFunction::FindFunction("Function GearboxFramework.CoverUseComponent.GetCoverRotation");
	}

	UCoverUseComponent_execGetCoverRotation_Params GetCoverRotation_Params;
	memset(&GetCoverRotation_Params, 0, sizeof(GetCoverRotation_Params));
	memcpy_s(&GetCoverRotation_Params.Slot, sizeof(GetCoverRotation_Params.Slot), &Slot, sizeof(Slot));

	uFnGetCoverRotation->iNative = 0;
	uFnGetCoverRotation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetCoverRotation, &GetCoverRotation_Params, nullptr);
	uFnGetCoverRotation->FunctionFlags |= 0x400;
	uFnGetCoverRotation->iNative = 34063;

	return GetCoverRotation_Params.ReturnValue;
};

// Function GearboxFramework.CoverUseComponent.GetCoverLocation
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34062])
// Parameter Info:
// struct FVector                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UCoverSlotComponent*     Slot                           (CPF_Parm | CPF_EditInline)

struct FVector UCoverUseComponent::GetCoverLocation(class UCoverSlotComponent* Slot)
{
	static UFunction* uFnGetCoverLocation = nullptr;

	if (!uFnGetCoverLocation)
	{
		uFnGetCoverLocation = UFunction::FindFunction("Function GearboxFramework.CoverUseComponent.GetCoverLocation");
	}

	UCoverUseComponent_execGetCoverLocation_Params GetCoverLocation_Params;
	memset(&GetCoverLocation_Params, 0, sizeof(GetCoverLocation_Params));
	memcpy_s(&GetCoverLocation_Params.Slot, sizeof(GetCoverLocation_Params.Slot), &Slot, sizeof(Slot));

	uFnGetCoverLocation->iNative = 0;
	uFnGetCoverLocation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetCoverLocation, &GetCoverLocation_Params, nullptr);
	uFnGetCoverLocation->FunctionFlags |= 0x400;
	uFnGetCoverLocation->iNative = 34062;

	return GetCoverLocation_Params.ReturnValue;
};

// Function GearboxFramework.CoverUseComponent.GetDesiredCoverRotation
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34085])
// Parameter Info:
// struct FRotator                ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FRotator UCoverUseComponent::GetDesiredCoverRotation()
{
	static UFunction* uFnGetDesiredCoverRotation = nullptr;

	if (!uFnGetDesiredCoverRotation)
	{
		uFnGetDesiredCoverRotation = UFunction::FindFunction("Function GearboxFramework.CoverUseComponent.GetDesiredCoverRotation");
	}

	UCoverUseComponent_execGetDesiredCoverRotation_Params GetDesiredCoverRotation_Params;
	memset(&GetDesiredCoverRotation_Params, 0, sizeof(GetDesiredCoverRotation_Params));

	uFnGetDesiredCoverRotation->iNative = 0;
	uFnGetDesiredCoverRotation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetDesiredCoverRotation, &GetDesiredCoverRotation_Params, nullptr);
	uFnGetDesiredCoverRotation->FunctionFlags |= 0x400;
	uFnGetDesiredCoverRotation->iNative = 34085;

	return GetDesiredCoverRotation_Params.ReturnValue;
};

// Function GearboxFramework.CoverUseComponent.GetCurrentCoverRotation
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34069])
// Parameter Info:
// struct FRotator                ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FRotator UCoverUseComponent::GetCurrentCoverRotation()
{
	static UFunction* uFnGetCurrentCoverRotation = nullptr;

	if (!uFnGetCurrentCoverRotation)
	{
		uFnGetCurrentCoverRotation = UFunction::FindFunction("Function GearboxFramework.CoverUseComponent.GetCurrentCoverRotation");
	}

	UCoverUseComponent_execGetCurrentCoverRotation_Params GetCurrentCoverRotation_Params;
	memset(&GetCurrentCoverRotation_Params, 0, sizeof(GetCurrentCoverRotation_Params));

	uFnGetCurrentCoverRotation->iNative = 0;
	uFnGetCurrentCoverRotation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetCurrentCoverRotation, &GetCurrentCoverRotation_Params, nullptr);
	uFnGetCurrentCoverRotation->FunctionFlags |= 0x400;
	uFnGetCurrentCoverRotation->iNative = 34069;

	return GetCurrentCoverRotation_Params.ReturnValue;
};

// Function GearboxFramework.CoverUseComponent.GetDesiredCoverLocation
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34084])
// Parameter Info:
// struct FVector                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FVector UCoverUseComponent::GetDesiredCoverLocation()
{
	static UFunction* uFnGetDesiredCoverLocation = nullptr;

	if (!uFnGetDesiredCoverLocation)
	{
		uFnGetDesiredCoverLocation = UFunction::FindFunction("Function GearboxFramework.CoverUseComponent.GetDesiredCoverLocation");
	}

	UCoverUseComponent_execGetDesiredCoverLocation_Params GetDesiredCoverLocation_Params;
	memset(&GetDesiredCoverLocation_Params, 0, sizeof(GetDesiredCoverLocation_Params));

	uFnGetDesiredCoverLocation->iNative = 0;
	uFnGetDesiredCoverLocation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetDesiredCoverLocation, &GetDesiredCoverLocation_Params, nullptr);
	uFnGetDesiredCoverLocation->FunctionFlags |= 0x400;
	uFnGetDesiredCoverLocation->iNative = 34084;

	return GetDesiredCoverLocation_Params.ReturnValue;
};

// Function GearboxFramework.CoverUseComponent.GetCurrentCoverLocation
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34068])
// Parameter Info:
// struct FVector                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FVector UCoverUseComponent::GetCurrentCoverLocation()
{
	static UFunction* uFnGetCurrentCoverLocation = nullptr;

	if (!uFnGetCurrentCoverLocation)
	{
		uFnGetCurrentCoverLocation = UFunction::FindFunction("Function GearboxFramework.CoverUseComponent.GetCurrentCoverLocation");
	}

	UCoverUseComponent_execGetCurrentCoverLocation_Params GetCurrentCoverLocation_Params;
	memset(&GetCurrentCoverLocation_Params, 0, sizeof(GetCurrentCoverLocation_Params));

	uFnGetCurrentCoverLocation->iNative = 0;
	uFnGetCurrentCoverLocation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetCurrentCoverLocation, &GetCurrentCoverLocation_Params, nullptr);
	uFnGetCurrentCoverLocation->FunctionFlags |= 0x400;
	uFnGetCurrentCoverLocation->iNative = 34068;

	return GetCurrentCoverLocation_Params.ReturnValue;
};

// Function GearboxFramework.CoverUseComponent.GetDesiredCover
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34083])
// Parameter Info:
// class UCoverSlotComponent*     ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline)

class UCoverSlotComponent* UCoverUseComponent::GetDesiredCover()
{
	static UFunction* uFnGetDesiredCover = nullptr;

	if (!uFnGetDesiredCover)
	{
		uFnGetDesiredCover = UFunction::FindFunction("Function GearboxFramework.CoverUseComponent.GetDesiredCover");
	}

	UCoverUseComponent_execGetDesiredCover_Params GetDesiredCover_Params;
	memset(&GetDesiredCover_Params, 0, sizeof(GetDesiredCover_Params));

	uFnGetDesiredCover->iNative = 0;
	uFnGetDesiredCover->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetDesiredCover, &GetDesiredCover_Params, nullptr);
	uFnGetDesiredCover->FunctionFlags |= 0x400;
	uFnGetDesiredCover->iNative = 34083;

	return GetDesiredCover_Params.ReturnValue;
};

// Function GearboxFramework.CoverUseComponent.GetCurrentCover
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34067])
// Parameter Info:
// class UCoverSlotComponent*     ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline)

class UCoverSlotComponent* UCoverUseComponent::GetCurrentCover()
{
	static UFunction* uFnGetCurrentCover = nullptr;

	if (!uFnGetCurrentCover)
	{
		uFnGetCurrentCover = UFunction::FindFunction("Function GearboxFramework.CoverUseComponent.GetCurrentCover");
	}

	UCoverUseComponent_execGetCurrentCover_Params GetCurrentCover_Params;
	memset(&GetCurrentCover_Params, 0, sizeof(GetCurrentCover_Params));

	uFnGetCurrentCover->iNative = 0;
	uFnGetCurrentCover->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetCurrentCover, &GetCurrentCover_Params, nullptr);
	uFnGetCurrentCover->FunctionFlags |= 0x400;
	uFnGetCurrentCover->iNative = 34067;

	return GetCurrentCover_Params.ReturnValue;
};

// Function GearboxFramework.CoverUseComponent.HasValidCover
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34325])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UCoverUseComponent::HasValidCover()
{
	static UFunction* uFnHasValidCover = nullptr;

	if (!uFnHasValidCover)
	{
		uFnHasValidCover = UFunction::FindFunction("Function GearboxFramework.CoverUseComponent.HasValidCover");
	}

	UCoverUseComponent_execHasValidCover_Params HasValidCover_Params;
	memset(&HasValidCover_Params, 0, sizeof(HasValidCover_Params));

	uFnHasValidCover->iNative = 0;
	uFnHasValidCover->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnHasValidCover, &HasValidCover_Params, nullptr);
	uFnHasValidCover->FunctionFlags |= 0x400;
	uFnHasValidCover->iNative = 34325;

	return HasValidCover_Params.ReturnValue;
};

// Function GearboxFramework.CoverUseComponent.CanMantle
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32675])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UCoverUseComponent::CanMantle()
{
	static UFunction* uFnCanMantle = nullptr;

	if (!uFnCanMantle)
	{
		uFnCanMantle = UFunction::FindFunction("Function GearboxFramework.CoverUseComponent.CanMantle");
	}

	UCoverUseComponent_execCanMantle_Params CanMantle_Params;
	memset(&CanMantle_Params, 0, sizeof(CanMantle_Params));

	uFnCanMantle->iNative = 0;
	uFnCanMantle->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCanMantle, &CanMantle_Params, nullptr);
	uFnCanMantle->FunctionFlags |= 0x400;
	uFnCanMantle->iNative = 32675;

	return CanMantle_Params.ReturnValue;
};

// Function GearboxFramework.CoverUseComponent.IsInCover
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34666])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UCoverUseComponent::IsInCover()
{
	static UFunction* uFnIsInCover = nullptr;

	if (!uFnIsInCover)
	{
		uFnIsInCover = UFunction::FindFunction("Function GearboxFramework.CoverUseComponent.IsInCover");
	}

	UCoverUseComponent_execIsInCover_Params IsInCover_Params;
	memset(&IsInCover_Params, 0, sizeof(IsInCover_Params));

	uFnIsInCover->iNative = 0;
	uFnIsInCover->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsInCover, &IsInCover_Params, nullptr);
	uFnIsInCover->FunctionFlags |= 0x400;
	uFnIsInCover->iNative = 34666;

	return IsInCover_Params.ReturnValue;
};

// Function GearboxFramework.CoverUseComponent.ClearCover
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[32750])
// Parameter Info:
// bool                           bClearAnim                     (CPF_OptionalParm | CPF_Parm)

void UCoverUseComponent::ClearCover(bool bClearAnim)
{
	static UFunction* uFnClearCover = nullptr;

	if (!uFnClearCover)
	{
		uFnClearCover = UFunction::FindFunction("Function GearboxFramework.CoverUseComponent.ClearCover");
	}

	UCoverUseComponent_execClearCover_Params ClearCover_Params;
	memset(&ClearCover_Params, 0, sizeof(ClearCover_Params));
	ClearCover_Params.bClearAnim = bClearAnim;

	uFnClearCover->iNative = 0;
	uFnClearCover->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnClearCover, &ClearCover_Params, nullptr);
	uFnClearCover->FunctionFlags |= 0x400;
	uFnClearCover->iNative = 32750;
};

// Function GearboxFramework.DialogActor.ReplicatedEvent
// [0x12020900] (FUNC_Simulated | FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FName&            VarName                        (CPF_Parm)

void ADialogActor::eventReplicatedEvent(const struct FName& VarName)
{
	static UFunction* uFnReplicatedEvent = nullptr;

	if (!uFnReplicatedEvent)
	{
		uFnReplicatedEvent = UFunction::FindFunction("Function GearboxFramework.DialogActor.ReplicatedEvent");
	}

	ADialogActor_eventReplicatedEvent_Params ReplicatedEvent_Params;
	memset(&ReplicatedEvent_Params, 0, sizeof(ReplicatedEvent_Params));
	memcpy_s(&ReplicatedEvent_Params.VarName, sizeof(ReplicatedEvent_Params.VarName), &VarName, sizeof(VarName));

	this->ProcessEvent(uFnReplicatedEvent, &ReplicatedEvent_Params, nullptr);
};

// Function GearboxFramework.DialogPureEchoActor.ReplicatedEvent
// [0x12020900] (FUNC_Simulated | FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FName&            VarName                        (CPF_Parm)

void ADialogPureEchoActor::eventReplicatedEvent(const struct FName& VarName)
{
	static UFunction* uFnReplicatedEvent = nullptr;

	if (!uFnReplicatedEvent)
	{
		uFnReplicatedEvent = UFunction::FindFunction("Function GearboxFramework.DialogPureEchoActor.ReplicatedEvent");
	}

	ADialogPureEchoActor_eventReplicatedEvent_Params ReplicatedEvent_Params;
	memset(&ReplicatedEvent_Params, 0, sizeof(ReplicatedEvent_Params));
	memcpy_s(&ReplicatedEvent_Params.VarName, sizeof(ReplicatedEvent_Params.VarName), &VarName, sizeof(VarName));

	this->ProcessEvent(uFnReplicatedEvent, &ReplicatedEvent_Params, nullptr);
};

// Function GearboxFramework.DodgeComponent.TryCombatDodge
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[36577])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AActor*                  Instigator                     (CPF_Parm)
// struct FVector                 SourceLoc                      (CPF_Const | CPF_Parm | CPF_OutParm)

bool UDodgeComponent::TryCombatDodge(class AActor* Instigator, struct FVector& SourceLoc)
{
	static UFunction* uFnTryCombatDodge = nullptr;

	if (!uFnTryCombatDodge)
	{
		uFnTryCombatDodge = UFunction::FindFunction("Function GearboxFramework.DodgeComponent.TryCombatDodge");
	}

	UDodgeComponent_execTryCombatDodge_Params TryCombatDodge_Params;
	memset(&TryCombatDodge_Params, 0, sizeof(TryCombatDodge_Params));
	memcpy_s(&TryCombatDodge_Params.Instigator, sizeof(TryCombatDodge_Params.Instigator), &Instigator, sizeof(Instigator));
	memcpy_s(&TryCombatDodge_Params.SourceLoc, sizeof(TryCombatDodge_Params.SourceLoc), &SourceLoc, sizeof(SourceLoc));

	uFnTryCombatDodge->iNative = 0;
	uFnTryCombatDodge->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnTryCombatDodge, &TryCombatDodge_Params, nullptr);
	uFnTryCombatDodge->FunctionFlags |= 0x400;
	uFnTryCombatDodge->iNative = 36577;

	memcpy_s(&SourceLoc, sizeof(SourceLoc), &TryCombatDodge_Params.SourceLoc, sizeof(TryCombatDodge_Params.SourceLoc));

	return TryCombatDodge_Params.ReturnValue;
};

// Function GearboxFramework.DodgeComponent.DodgeFromLocationTimer
// [0x00020403] (FUNC_Final | FUNC_Defined | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2494])
// Parameter Info:

void UDodgeComponent::DodgeFromLocationTimer()
{
	static UFunction* uFnDodgeFromLocationTimer = nullptr;

	if (!uFnDodgeFromLocationTimer)
	{
		uFnDodgeFromLocationTimer = UFunction::FindFunction("Function GearboxFramework.DodgeComponent.DodgeFromLocationTimer");
	}

	UDodgeComponent_execDodgeFromLocationTimer_Params DodgeFromLocationTimer_Params;
	memset(&DodgeFromLocationTimer_Params, 0, sizeof(DodgeFromLocationTimer_Params));

	uFnDodgeFromLocationTimer->iNative = 0;
	uFnDodgeFromLocationTimer->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnDodgeFromLocationTimer, &DodgeFromLocationTimer_Params, nullptr);
	uFnDodgeFromLocationTimer->FunctionFlags |= 0x400;
	uFnDodgeFromLocationTimer->iNative = 2494;
};

// Function GearboxFramework.DodgeComponent.DodgeAnimFinished
// [0x00020403] (FUNC_Final | FUNC_Defined | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2495])
// Parameter Info:

void UDodgeComponent::DodgeAnimFinished()
{
	static UFunction* uFnDodgeAnimFinished = nullptr;

	if (!uFnDodgeAnimFinished)
	{
		uFnDodgeAnimFinished = UFunction::FindFunction("Function GearboxFramework.DodgeComponent.DodgeAnimFinished");
	}

	UDodgeComponent_execDodgeAnimFinished_Params DodgeAnimFinished_Params;
	memset(&DodgeAnimFinished_Params, 0, sizeof(DodgeAnimFinished_Params));

	uFnDodgeAnimFinished->iNative = 0;
	uFnDodgeAnimFinished->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnDodgeAnimFinished, &DodgeAnimFinished_Params, nullptr);
	uFnDodgeAnimFinished->FunctionFlags |= 0x400;
	uFnDodgeAnimFinished->iNative = 2495;
};

// Function GearboxFramework.DodgeComponent.DoMovementDodge
// [0x00020403] (FUNC_Final | FUNC_Defined | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2496])
// Parameter Info:

void UDodgeComponent::DoMovementDodge()
{
	static UFunction* uFnDoMovementDodge = nullptr;

	if (!uFnDoMovementDodge)
	{
		uFnDoMovementDodge = UFunction::FindFunction("Function GearboxFramework.DodgeComponent.DoMovementDodge");
	}

	UDodgeComponent_execDoMovementDodge_Params DoMovementDodge_Params;
	memset(&DoMovementDodge_Params, 0, sizeof(DoMovementDodge_Params));

	uFnDoMovementDodge->iNative = 0;
	uFnDoMovementDodge->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnDoMovementDodge, &DoMovementDodge_Params, nullptr);
	uFnDoMovementDodge->FunctionFlags |= 0x400;
	uFnDoMovementDodge->iNative = 2496;
};

// Function GearboxFramework.DynamicDecalActor.SetDecalParameters
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[28787])
// Parameter Info:
// class UMaterialInterface*      Material                       (CPF_Parm)
// float                          SizeX                          (CPF_Parm)
// float                          SizeY                          (CPF_Parm)
// float                          OffsetX                        (CPF_Parm)
// float                          OffsetY                        (CPF_Parm)
// float                          PivotOffsetPctX                (CPF_Parm)
// float                          PivotOffsetPctY                (CPF_Parm)
// float                          NearPlane                      (CPF_Parm)
// float                          FarPlane                       (CPF_Parm)
// float                          TwistRotation                  (CPF_Parm)
// float                          Lifetime                       (CPF_Parm)
// bool                           bAffectStaticGeometry          (CPF_Parm)
// bool                           bAffectDynamicGeometry         (CPF_Parm)
// bool                           bAbsoluteOrientation           (CPF_Parm)
// const struct FRotator&         AbsoluteOrientation            (CPF_Parm)
// float                          FadeTime                       (CPF_Parm)
// const struct FName&            FadeMaterialParamName          (CPF_Parm)

void ADynamicDecalActor::SetDecalParameters(class UMaterialInterface* Material, float SizeX, float SizeY, float OffsetX, float OffsetY, float PivotOffsetPctX, float PivotOffsetPctY, float NearPlane, float FarPlane, float TwistRotation, float Lifetime, bool bAffectStaticGeometry, bool bAffectDynamicGeometry, bool bAbsoluteOrientation, const struct FRotator& AbsoluteOrientation, float FadeTime, const struct FName& FadeMaterialParamName)
{
	static UFunction* uFnSetDecalParameters = nullptr;

	if (!uFnSetDecalParameters)
	{
		uFnSetDecalParameters = UFunction::FindFunction("Function GearboxFramework.DynamicDecalActor.SetDecalParameters");
	}

	ADynamicDecalActor_execSetDecalParameters_Params SetDecalParameters_Params;
	memset(&SetDecalParameters_Params, 0, sizeof(SetDecalParameters_Params));
	memcpy_s(&SetDecalParameters_Params.Material, sizeof(SetDecalParameters_Params.Material), &Material, sizeof(Material));
	memcpy_s(&SetDecalParameters_Params.SizeX, sizeof(SetDecalParameters_Params.SizeX), &SizeX, sizeof(SizeX));
	memcpy_s(&SetDecalParameters_Params.SizeY, sizeof(SetDecalParameters_Params.SizeY), &SizeY, sizeof(SizeY));
	memcpy_s(&SetDecalParameters_Params.OffsetX, sizeof(SetDecalParameters_Params.OffsetX), &OffsetX, sizeof(OffsetX));
	memcpy_s(&SetDecalParameters_Params.OffsetY, sizeof(SetDecalParameters_Params.OffsetY), &OffsetY, sizeof(OffsetY));
	memcpy_s(&SetDecalParameters_Params.PivotOffsetPctX, sizeof(SetDecalParameters_Params.PivotOffsetPctX), &PivotOffsetPctX, sizeof(PivotOffsetPctX));
	memcpy_s(&SetDecalParameters_Params.PivotOffsetPctY, sizeof(SetDecalParameters_Params.PivotOffsetPctY), &PivotOffsetPctY, sizeof(PivotOffsetPctY));
	memcpy_s(&SetDecalParameters_Params.NearPlane, sizeof(SetDecalParameters_Params.NearPlane), &NearPlane, sizeof(NearPlane));
	memcpy_s(&SetDecalParameters_Params.FarPlane, sizeof(SetDecalParameters_Params.FarPlane), &FarPlane, sizeof(FarPlane));
	memcpy_s(&SetDecalParameters_Params.TwistRotation, sizeof(SetDecalParameters_Params.TwistRotation), &TwistRotation, sizeof(TwistRotation));
	memcpy_s(&SetDecalParameters_Params.Lifetime, sizeof(SetDecalParameters_Params.Lifetime), &Lifetime, sizeof(Lifetime));
	SetDecalParameters_Params.bAffectStaticGeometry = bAffectStaticGeometry;
	SetDecalParameters_Params.bAffectDynamicGeometry = bAffectDynamicGeometry;
	SetDecalParameters_Params.bAbsoluteOrientation = bAbsoluteOrientation;
	memcpy_s(&SetDecalParameters_Params.AbsoluteOrientation, sizeof(SetDecalParameters_Params.AbsoluteOrientation), &AbsoluteOrientation, sizeof(AbsoluteOrientation));
	memcpy_s(&SetDecalParameters_Params.FadeTime, sizeof(SetDecalParameters_Params.FadeTime), &FadeTime, sizeof(FadeTime));
	memcpy_s(&SetDecalParameters_Params.FadeMaterialParamName, sizeof(SetDecalParameters_Params.FadeMaterialParamName), &FadeMaterialParamName, sizeof(FadeMaterialParamName));

	uFnSetDecalParameters->iNative = 0;
	uFnSetDecalParameters->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetDecalParameters, &SetDecalParameters_Params, nullptr);
	uFnSetDecalParameters->FunctionFlags |= 0x400;
	uFnSetDecalParameters->iNative = 28787;
};

// Function GearboxFramework.DynamicDecalActor.PostBeginPlay
// [0x12020900] (FUNC_Simulated | FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void ADynamicDecalActor::eventPostBeginPlay()
{
	static UFunction* uFnPostBeginPlay = nullptr;

	if (!uFnPostBeginPlay)
	{
		uFnPostBeginPlay = UFunction::FindFunction("Function GearboxFramework.DynamicDecalActor.PostBeginPlay");
	}

	ADynamicDecalActor_eventPostBeginPlay_Params PostBeginPlay_Params;
	memset(&PostBeginPlay_Params, 0, sizeof(PostBeginPlay_Params));

	this->ProcessEvent(uFnPostBeginPlay, &PostBeginPlay_Params, nullptr);
};

// Function GearboxFramework.DynamicReplicatedDecalActor.SetDecalParameters
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[28787])
// Parameter Info:
// class UMaterialInterface*      Material                       (CPF_Parm)
// float                          SizeX                          (CPF_Parm)
// float                          SizeY                          (CPF_Parm)
// float                          OffsetX                        (CPF_Parm)
// float                          OffsetY                        (CPF_Parm)
// float                          PivotOffsetPctX                (CPF_Parm)
// float                          PivotOffsetPctY                (CPF_Parm)
// float                          NearPlane                      (CPF_Parm)
// float                          FarPlane                       (CPF_Parm)
// float                          TwistRotation                  (CPF_Parm)
// float                          Lifetime                       (CPF_Parm)
// bool                           bAffectStaticGeometry          (CPF_Parm)
// bool                           bAffectDynamicGeometry         (CPF_Parm)
// bool                           bAbsoluteOrientation           (CPF_Parm)
// const struct FRotator&         AbsoluteOrientation            (CPF_Parm)
// float                          FadeTime                       (CPF_Parm)
// const struct FName&            FadeMaterialParamName          (CPF_Parm)

void ADynamicReplicatedDecalActor::SetDecalParameters(class UMaterialInterface* Material, float SizeX, float SizeY, float OffsetX, float OffsetY, float PivotOffsetPctX, float PivotOffsetPctY, float NearPlane, float FarPlane, float TwistRotation, float Lifetime, bool bAffectStaticGeometry, bool bAffectDynamicGeometry, bool bAbsoluteOrientation, const struct FRotator& AbsoluteOrientation, float FadeTime, const struct FName& FadeMaterialParamName)
{
	static UFunction* uFnSetDecalParameters = nullptr;

	if (!uFnSetDecalParameters)
	{
		uFnSetDecalParameters = UFunction::FindFunction("Function GearboxFramework.DynamicReplicatedDecalActor.SetDecalParameters");
	}

	ADynamicReplicatedDecalActor_execSetDecalParameters_Params SetDecalParameters_Params;
	memset(&SetDecalParameters_Params, 0, sizeof(SetDecalParameters_Params));
	memcpy_s(&SetDecalParameters_Params.Material, sizeof(SetDecalParameters_Params.Material), &Material, sizeof(Material));
	memcpy_s(&SetDecalParameters_Params.SizeX, sizeof(SetDecalParameters_Params.SizeX), &SizeX, sizeof(SizeX));
	memcpy_s(&SetDecalParameters_Params.SizeY, sizeof(SetDecalParameters_Params.SizeY), &SizeY, sizeof(SizeY));
	memcpy_s(&SetDecalParameters_Params.OffsetX, sizeof(SetDecalParameters_Params.OffsetX), &OffsetX, sizeof(OffsetX));
	memcpy_s(&SetDecalParameters_Params.OffsetY, sizeof(SetDecalParameters_Params.OffsetY), &OffsetY, sizeof(OffsetY));
	memcpy_s(&SetDecalParameters_Params.PivotOffsetPctX, sizeof(SetDecalParameters_Params.PivotOffsetPctX), &PivotOffsetPctX, sizeof(PivotOffsetPctX));
	memcpy_s(&SetDecalParameters_Params.PivotOffsetPctY, sizeof(SetDecalParameters_Params.PivotOffsetPctY), &PivotOffsetPctY, sizeof(PivotOffsetPctY));
	memcpy_s(&SetDecalParameters_Params.NearPlane, sizeof(SetDecalParameters_Params.NearPlane), &NearPlane, sizeof(NearPlane));
	memcpy_s(&SetDecalParameters_Params.FarPlane, sizeof(SetDecalParameters_Params.FarPlane), &FarPlane, sizeof(FarPlane));
	memcpy_s(&SetDecalParameters_Params.TwistRotation, sizeof(SetDecalParameters_Params.TwistRotation), &TwistRotation, sizeof(TwistRotation));
	memcpy_s(&SetDecalParameters_Params.Lifetime, sizeof(SetDecalParameters_Params.Lifetime), &Lifetime, sizeof(Lifetime));
	SetDecalParameters_Params.bAffectStaticGeometry = bAffectStaticGeometry;
	SetDecalParameters_Params.bAffectDynamicGeometry = bAffectDynamicGeometry;
	SetDecalParameters_Params.bAbsoluteOrientation = bAbsoluteOrientation;
	memcpy_s(&SetDecalParameters_Params.AbsoluteOrientation, sizeof(SetDecalParameters_Params.AbsoluteOrientation), &AbsoluteOrientation, sizeof(AbsoluteOrientation));
	memcpy_s(&SetDecalParameters_Params.FadeTime, sizeof(SetDecalParameters_Params.FadeTime), &FadeTime, sizeof(FadeTime));
	memcpy_s(&SetDecalParameters_Params.FadeMaterialParamName, sizeof(SetDecalParameters_Params.FadeMaterialParamName), &FadeMaterialParamName, sizeof(FadeMaterialParamName));

	uFnSetDecalParameters->iNative = 0;
	uFnSetDecalParameters->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetDecalParameters, &SetDecalParameters_Params, nullptr);
	uFnSetDecalParameters->FunctionFlags |= 0x400;
	uFnSetDecalParameters->iNative = 28787;
};

// Function GearboxFramework.DynamicReplicatedDecalActor.ReplicatedEvent
// [0x12020900] (FUNC_Simulated | FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FName&            VarName                        (CPF_Parm)

void ADynamicReplicatedDecalActor::eventReplicatedEvent(const struct FName& VarName)
{
	static UFunction* uFnReplicatedEvent = nullptr;

	if (!uFnReplicatedEvent)
	{
		uFnReplicatedEvent = UFunction::FindFunction("Function GearboxFramework.DynamicReplicatedDecalActor.ReplicatedEvent");
	}

	ADynamicReplicatedDecalActor_eventReplicatedEvent_Params ReplicatedEvent_Params;
	memset(&ReplicatedEvent_Params, 0, sizeof(ReplicatedEvent_Params));
	memcpy_s(&ReplicatedEvent_Params.VarName, sizeof(ReplicatedEvent_Params.VarName), &VarName, sizeof(VarName));

	this->ProcessEvent(uFnReplicatedEvent, &ReplicatedEvent_Params, nullptr);
};

// Function GearboxFramework.DynamicPlayRateControlDefinition.GetPlayRateScale
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34181])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// float                          Time                           (CPF_Parm)

float UDynamicPlayRateControlDefinition::GetPlayRateScale(float Time)
{
	static UFunction* uFnGetPlayRateScale = nullptr;

	if (!uFnGetPlayRateScale)
	{
		uFnGetPlayRateScale = UFunction::FindFunction("Function GearboxFramework.DynamicPlayRateControlDefinition.GetPlayRateScale");
	}

	UDynamicPlayRateControlDefinition_execGetPlayRateScale_Params GetPlayRateScale_Params;
	memset(&GetPlayRateScale_Params, 0, sizeof(GetPlayRateScale_Params));
	memcpy_s(&GetPlayRateScale_Params.Time, sizeof(GetPlayRateScale_Params.Time), &Time, sizeof(Time));

	uFnGetPlayRateScale->iNative = 0;
	uFnGetPlayRateScale->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetPlayRateScale, &GetPlayRateScale_Params, nullptr);
	uFnGetPlayRateScale->FunctionFlags |= 0x400;
	uFnGetPlayRateScale->iNative = 34181;

	return GetPlayRateScale_Params.ReturnValue;
};

// Function GearboxFramework.AIDefinition.TryOnGiveDamage
// [0x00022400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[36578])
// Parameter Info:
// class UObject*                 Instigator                     (CPF_Parm)
// class UObject*                 Receiver                       (CPF_Parm)
// float                          Damage                         (CPF_Parm)
// float                          ShieldDamage                   (CPF_Parm)
// float                          ExcessDamageDone               (CPF_Parm)
// bool                           bWasCrit                       (CPF_Parm)
// int32_t                        DamageTags                     (CPF_Parm)
// class UObject*                 DamageSource                   (CPF_Parm)
// class UObject*                 DamageType                     (CPF_Parm)

void UAIDefinition::TryOnGiveDamage(class UObject* Instigator, class UObject* Receiver, float Damage, float ShieldDamage, float ExcessDamageDone, bool bWasCrit, int32_t DamageTags, class UObject* DamageSource, class UObject* DamageType)
{
	static UFunction* uFnTryOnGiveDamage = nullptr;

	if (!uFnTryOnGiveDamage)
	{
		uFnTryOnGiveDamage = UFunction::FindFunction("Function GearboxFramework.AIDefinition.TryOnGiveDamage");
	}

	UAIDefinition_execTryOnGiveDamage_Params TryOnGiveDamage_Params;
	memset(&TryOnGiveDamage_Params, 0, sizeof(TryOnGiveDamage_Params));
	memcpy_s(&TryOnGiveDamage_Params.Instigator, sizeof(TryOnGiveDamage_Params.Instigator), &Instigator, sizeof(Instigator));
	memcpy_s(&TryOnGiveDamage_Params.Receiver, sizeof(TryOnGiveDamage_Params.Receiver), &Receiver, sizeof(Receiver));
	memcpy_s(&TryOnGiveDamage_Params.Damage, sizeof(TryOnGiveDamage_Params.Damage), &Damage, sizeof(Damage));
	memcpy_s(&TryOnGiveDamage_Params.ShieldDamage, sizeof(TryOnGiveDamage_Params.ShieldDamage), &ShieldDamage, sizeof(ShieldDamage));
	memcpy_s(&TryOnGiveDamage_Params.ExcessDamageDone, sizeof(TryOnGiveDamage_Params.ExcessDamageDone), &ExcessDamageDone, sizeof(ExcessDamageDone));
	TryOnGiveDamage_Params.bWasCrit = bWasCrit;
	memcpy_s(&TryOnGiveDamage_Params.DamageTags, sizeof(TryOnGiveDamage_Params.DamageTags), &DamageTags, sizeof(DamageTags));
	memcpy_s(&TryOnGiveDamage_Params.DamageSource, sizeof(TryOnGiveDamage_Params.DamageSource), &DamageSource, sizeof(DamageSource));
	memcpy_s(&TryOnGiveDamage_Params.DamageType, sizeof(TryOnGiveDamage_Params.DamageType), &DamageType, sizeof(DamageType));

	uFnTryOnGiveDamage->iNative = 0;
	uFnTryOnGiveDamage->FunctionFlags &= ~0x400;
	UAIDefinition::StaticClass()->ProcessEvent(uFnTryOnGiveDamage, &TryOnGiveDamage_Params, nullptr);
	uFnTryOnGiveDamage->FunctionFlags |= 0x400;
	uFnTryOnGiveDamage->iNative = 36578;
};

// Function GearboxFramework.AIDefinition.OnCommunicated
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2514])
// Parameter Info:
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UAIDefinition::OnCommunicated(struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnCommunicated = nullptr;

	if (!uFnOnCommunicated)
	{
		uFnOnCommunicated = UFunction::FindFunction("Function GearboxFramework.AIDefinition.OnCommunicated");
	}

	UAIDefinition_execOnCommunicated_Params OnCommunicated_Params;
	memset(&OnCommunicated_Params, 0, sizeof(OnCommunicated_Params));
	memcpy_s(&OnCommunicated_Params.ConsumerHandle, sizeof(OnCommunicated_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnCommunicated->iNative = 0;
	uFnOnCommunicated->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnCommunicated, &OnCommunicated_Params, nullptr);
	uFnOnCommunicated->FunctionFlags |= 0x400;
	uFnOnCommunicated->iNative = 2514;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnCommunicated_Params.ConsumerHandle, sizeof(OnCommunicated_Params.ConsumerHandle));
};

// Function GearboxFramework.AIDefinition.OnBecomeAware
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2515])
// Parameter Info:
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UAIDefinition::OnBecomeAware(struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnBecomeAware = nullptr;

	if (!uFnOnBecomeAware)
	{
		uFnOnBecomeAware = UFunction::FindFunction("Function GearboxFramework.AIDefinition.OnBecomeAware");
	}

	UAIDefinition_execOnBecomeAware_Params OnBecomeAware_Params;
	memset(&OnBecomeAware_Params, 0, sizeof(OnBecomeAware_Params));
	memcpy_s(&OnBecomeAware_Params.ConsumerHandle, sizeof(OnBecomeAware_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnBecomeAware->iNative = 0;
	uFnOnBecomeAware->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnBecomeAware, &OnBecomeAware_Params, nullptr);
	uFnOnBecomeAware->FunctionFlags |= 0x400;
	uFnOnBecomeAware->iNative = 2515;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnBecomeAware_Params.ConsumerHandle, sizeof(OnBecomeAware_Params.ConsumerHandle));
};

// Function GearboxFramework.AIDefinition.OnBecomeSuspicious
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2516])
// Parameter Info:
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UAIDefinition::OnBecomeSuspicious(struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnBecomeSuspicious = nullptr;

	if (!uFnOnBecomeSuspicious)
	{
		uFnOnBecomeSuspicious = UFunction::FindFunction("Function GearboxFramework.AIDefinition.OnBecomeSuspicious");
	}

	UAIDefinition_execOnBecomeSuspicious_Params OnBecomeSuspicious_Params;
	memset(&OnBecomeSuspicious_Params, 0, sizeof(OnBecomeSuspicious_Params));
	memcpy_s(&OnBecomeSuspicious_Params.ConsumerHandle, sizeof(OnBecomeSuspicious_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnBecomeSuspicious->iNative = 0;
	uFnOnBecomeSuspicious->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnBecomeSuspicious, &OnBecomeSuspicious_Params, nullptr);
	uFnOnBecomeSuspicious->FunctionFlags |= 0x400;
	uFnOnBecomeSuspicious->iNative = 2516;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnBecomeSuspicious_Params.ConsumerHandle, sizeof(OnBecomeSuspicious_Params.ConsumerHandle));
};

// Function GearboxFramework.AIDefinition.OnBecomeCautious
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2517])
// Parameter Info:
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UAIDefinition::OnBecomeCautious(struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnBecomeCautious = nullptr;

	if (!uFnOnBecomeCautious)
	{
		uFnOnBecomeCautious = UFunction::FindFunction("Function GearboxFramework.AIDefinition.OnBecomeCautious");
	}

	UAIDefinition_execOnBecomeCautious_Params OnBecomeCautious_Params;
	memset(&OnBecomeCautious_Params, 0, sizeof(OnBecomeCautious_Params));
	memcpy_s(&OnBecomeCautious_Params.ConsumerHandle, sizeof(OnBecomeCautious_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnBecomeCautious->iNative = 0;
	uFnOnBecomeCautious->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnBecomeCautious, &OnBecomeCautious_Params, nullptr);
	uFnOnBecomeCautious->FunctionFlags |= 0x400;
	uFnOnBecomeCautious->iNative = 2517;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnBecomeCautious_Params.ConsumerHandle, sizeof(OnBecomeCautious_Params.ConsumerHandle));
};

// Function GearboxFramework.AIDefinition.OnBecomeOblivious
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2518])
// Parameter Info:
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UAIDefinition::OnBecomeOblivious(struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnBecomeOblivious = nullptr;

	if (!uFnOnBecomeOblivious)
	{
		uFnOnBecomeOblivious = UFunction::FindFunction("Function GearboxFramework.AIDefinition.OnBecomeOblivious");
	}

	UAIDefinition_execOnBecomeOblivious_Params OnBecomeOblivious_Params;
	memset(&OnBecomeOblivious_Params, 0, sizeof(OnBecomeOblivious_Params));
	memcpy_s(&OnBecomeOblivious_Params.ConsumerHandle, sizeof(OnBecomeOblivious_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnBecomeOblivious->iNative = 0;
	uFnOnBecomeOblivious->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnBecomeOblivious, &OnBecomeOblivious_Params, nullptr);
	uFnOnBecomeOblivious->FunctionFlags |= 0x400;
	uFnOnBecomeOblivious->iNative = 2518;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnBecomeOblivious_Params.ConsumerHandle, sizeof(OnBecomeOblivious_Params.ConsumerHandle));
};

// Function GearboxFramework.AIDefinition.OnReset
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2519])
// Parameter Info:
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UAIDefinition::OnReset(struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnReset = nullptr;

	if (!uFnOnReset)
	{
		uFnOnReset = UFunction::FindFunction("Function GearboxFramework.AIDefinition.OnReset");
	}

	UAIDefinition_execOnReset_Params OnReset_Params;
	memset(&OnReset_Params, 0, sizeof(OnReset_Params));
	memcpy_s(&OnReset_Params.ConsumerHandle, sizeof(OnReset_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnReset->iNative = 0;
	uFnOnReset->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnReset, &OnReset_Params, nullptr);
	uFnOnReset->FunctionFlags |= 0x400;
	uFnOnReset->iNative = 2519;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnReset_Params.ConsumerHandle, sizeof(OnReset_Params.ConsumerHandle));
};

// Function GearboxFramework.AIDefinition.OnHitByVehicle
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2520])
// Parameter Info:
// class AVehicle*                Vehicle                        (CPF_Parm)
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UAIDefinition::OnHitByVehicle(class AVehicle* Vehicle, struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnHitByVehicle = nullptr;

	if (!uFnOnHitByVehicle)
	{
		uFnOnHitByVehicle = UFunction::FindFunction("Function GearboxFramework.AIDefinition.OnHitByVehicle");
	}

	UAIDefinition_execOnHitByVehicle_Params OnHitByVehicle_Params;
	memset(&OnHitByVehicle_Params, 0, sizeof(OnHitByVehicle_Params));
	memcpy_s(&OnHitByVehicle_Params.Vehicle, sizeof(OnHitByVehicle_Params.Vehicle), &Vehicle, sizeof(Vehicle));
	memcpy_s(&OnHitByVehicle_Params.ConsumerHandle, sizeof(OnHitByVehicle_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnHitByVehicle->iNative = 0;
	uFnOnHitByVehicle->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnHitByVehicle, &OnHitByVehicle_Params, nullptr);
	uFnOnHitByVehicle->FunctionFlags |= 0x400;
	uFnOnHitByVehicle->iNative = 2520;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnHitByVehicle_Params.ConsumerHandle, sizeof(OnHitByVehicle_Params.ConsumerHandle));
};

// Function GearboxFramework.AIDefinition.OnRanOver
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2521])
// Parameter Info:
// class AVehicle*                Vehicle                        (CPF_Parm)
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UAIDefinition::OnRanOver(class AVehicle* Vehicle, struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnRanOver = nullptr;

	if (!uFnOnRanOver)
	{
		uFnOnRanOver = UFunction::FindFunction("Function GearboxFramework.AIDefinition.OnRanOver");
	}

	UAIDefinition_execOnRanOver_Params OnRanOver_Params;
	memset(&OnRanOver_Params, 0, sizeof(OnRanOver_Params));
	memcpy_s(&OnRanOver_Params.Vehicle, sizeof(OnRanOver_Params.Vehicle), &Vehicle, sizeof(Vehicle));
	memcpy_s(&OnRanOver_Params.ConsumerHandle, sizeof(OnRanOver_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnRanOver->iNative = 0;
	uFnOnRanOver->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnRanOver, &OnRanOver_Params, nullptr);
	uFnOnRanOver->FunctionFlags |= 0x400;
	uFnOnRanOver->iNative = 2521;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnRanOver_Params.ConsumerHandle, sizeof(OnRanOver_Params.ConsumerHandle));
};

// Function GearboxFramework.AIDefinition.OnTimerEvent
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2522])
// Parameter Info:
// const struct FName&            SpecializedEventName           (CPF_Parm)
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UAIDefinition::OnTimerEvent(const struct FName& SpecializedEventName, struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnTimerEvent = nullptr;

	if (!uFnOnTimerEvent)
	{
		uFnOnTimerEvent = UFunction::FindFunction("Function GearboxFramework.AIDefinition.OnTimerEvent");
	}

	UAIDefinition_execOnTimerEvent_Params OnTimerEvent_Params;
	memset(&OnTimerEvent_Params, 0, sizeof(OnTimerEvent_Params));
	memcpy_s(&OnTimerEvent_Params.SpecializedEventName, sizeof(OnTimerEvent_Params.SpecializedEventName), &SpecializedEventName, sizeof(SpecializedEventName));
	memcpy_s(&OnTimerEvent_Params.ConsumerHandle, sizeof(OnTimerEvent_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnTimerEvent->iNative = 0;
	uFnOnTimerEvent->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnTimerEvent, &OnTimerEvent_Params, nullptr);
	uFnOnTimerEvent->FunctionFlags |= 0x400;
	uFnOnTimerEvent->iNative = 2522;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnTimerEvent_Params.ConsumerHandle, sizeof(OnTimerEvent_Params.ConsumerHandle));
};

// Function GearboxFramework.AIDefinition.OnKilledPawn
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2523])
// Parameter Info:
// class UObject*                 Killed                         (CPF_Parm)
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UAIDefinition::OnKilledPawn(class UObject* Killed, struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnKilledPawn = nullptr;

	if (!uFnOnKilledPawn)
	{
		uFnOnKilledPawn = UFunction::FindFunction("Function GearboxFramework.AIDefinition.OnKilledPawn");
	}

	UAIDefinition_execOnKilledPawn_Params OnKilledPawn_Params;
	memset(&OnKilledPawn_Params, 0, sizeof(OnKilledPawn_Params));
	memcpy_s(&OnKilledPawn_Params.Killed, sizeof(OnKilledPawn_Params.Killed), &Killed, sizeof(Killed));
	memcpy_s(&OnKilledPawn_Params.ConsumerHandle, sizeof(OnKilledPawn_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnKilledPawn->iNative = 0;
	uFnOnKilledPawn->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnKilledPawn, &OnKilledPawn_Params, nullptr);
	uFnOnKilledPawn->FunctionFlags |= 0x400;
	uFnOnKilledPawn->iNative = 2523;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnKilledPawn_Params.ConsumerHandle, sizeof(OnKilledPawn_Params.ConsumerHandle));
};

// Function GearboxFramework.AIDefinition.OnLanded
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2524])
// Parameter Info:
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UAIDefinition::OnLanded(struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnLanded = nullptr;

	if (!uFnOnLanded)
	{
		uFnOnLanded = UFunction::FindFunction("Function GearboxFramework.AIDefinition.OnLanded");
	}

	UAIDefinition_execOnLanded_Params OnLanded_Params;
	memset(&OnLanded_Params, 0, sizeof(OnLanded_Params));
	memcpy_s(&OnLanded_Params.ConsumerHandle, sizeof(OnLanded_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnLanded->iNative = 0;
	uFnOnLanded->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnLanded, &OnLanded_Params, nullptr);
	uFnOnLanded->FunctionFlags |= 0x400;
	uFnOnLanded->iNative = 2524;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnLanded_Params.ConsumerHandle, sizeof(OnLanded_Params.ConsumerHandle));
};

// Function GearboxFramework.AIDefinition.OnStopFiringWeapon
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2525])
// Parameter Info:
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UAIDefinition::OnStopFiringWeapon(struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnStopFiringWeapon = nullptr;

	if (!uFnOnStopFiringWeapon)
	{
		uFnOnStopFiringWeapon = UFunction::FindFunction("Function GearboxFramework.AIDefinition.OnStopFiringWeapon");
	}

	UAIDefinition_execOnStopFiringWeapon_Params OnStopFiringWeapon_Params;
	memset(&OnStopFiringWeapon_Params, 0, sizeof(OnStopFiringWeapon_Params));
	memcpy_s(&OnStopFiringWeapon_Params.ConsumerHandle, sizeof(OnStopFiringWeapon_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnStopFiringWeapon->iNative = 0;
	uFnOnStopFiringWeapon->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnStopFiringWeapon, &OnStopFiringWeapon_Params, nullptr);
	uFnOnStopFiringWeapon->FunctionFlags |= 0x400;
	uFnOnStopFiringWeapon->iNative = 2525;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnStopFiringWeapon_Params.ConsumerHandle, sizeof(OnStopFiringWeapon_Params.ConsumerHandle));
};

// Function GearboxFramework.AIDefinition.OnStartFiringWeapon
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2526])
// Parameter Info:
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UAIDefinition::OnStartFiringWeapon(struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnStartFiringWeapon = nullptr;

	if (!uFnOnStartFiringWeapon)
	{
		uFnOnStartFiringWeapon = UFunction::FindFunction("Function GearboxFramework.AIDefinition.OnStartFiringWeapon");
	}

	UAIDefinition_execOnStartFiringWeapon_Params OnStartFiringWeapon_Params;
	memset(&OnStartFiringWeapon_Params, 0, sizeof(OnStartFiringWeapon_Params));
	memcpy_s(&OnStartFiringWeapon_Params.ConsumerHandle, sizeof(OnStartFiringWeapon_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnStartFiringWeapon->iNative = 0;
	uFnOnStartFiringWeapon->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnStartFiringWeapon, &OnStartFiringWeapon_Params, nullptr);
	uFnOnStartFiringWeapon->FunctionFlags |= 0x400;
	uFnOnStartFiringWeapon->iNative = 2526;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnStartFiringWeapon_Params.ConsumerHandle, sizeof(OnStartFiringWeapon_Params.ConsumerHandle));
};

// Function GearboxFramework.AIDefinition.OnTargetInvalid
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2527])
// Parameter Info:
// class UObject*                 Target                         (CPF_Parm)
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UAIDefinition::OnTargetInvalid(class UObject* Target, struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnTargetInvalid = nullptr;

	if (!uFnOnTargetInvalid)
	{
		uFnOnTargetInvalid = UFunction::FindFunction("Function GearboxFramework.AIDefinition.OnTargetInvalid");
	}

	UAIDefinition_execOnTargetInvalid_Params OnTargetInvalid_Params;
	memset(&OnTargetInvalid_Params, 0, sizeof(OnTargetInvalid_Params));
	memcpy_s(&OnTargetInvalid_Params.Target, sizeof(OnTargetInvalid_Params.Target), &Target, sizeof(Target));
	memcpy_s(&OnTargetInvalid_Params.ConsumerHandle, sizeof(OnTargetInvalid_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnTargetInvalid->iNative = 0;
	uFnOnTargetInvalid->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnTargetInvalid, &OnTargetInvalid_Params, nullptr);
	uFnOnTargetInvalid->FunctionFlags |= 0x400;
	uFnOnTargetInvalid->iNative = 2527;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnTargetInvalid_Params.ConsumerHandle, sizeof(OnTargetInvalid_Params.ConsumerHandle));
};

// Function GearboxFramework.AIDefinition.OnTargetValid
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2528])
// Parameter Info:
// class UObject*                 Target                         (CPF_Parm)
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UAIDefinition::OnTargetValid(class UObject* Target, struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnTargetValid = nullptr;

	if (!uFnOnTargetValid)
	{
		uFnOnTargetValid = UFunction::FindFunction("Function GearboxFramework.AIDefinition.OnTargetValid");
	}

	UAIDefinition_execOnTargetValid_Params OnTargetValid_Params;
	memset(&OnTargetValid_Params, 0, sizeof(OnTargetValid_Params));
	memcpy_s(&OnTargetValid_Params.Target, sizeof(OnTargetValid_Params.Target), &Target, sizeof(Target));
	memcpy_s(&OnTargetValid_Params.ConsumerHandle, sizeof(OnTargetValid_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnTargetValid->iNative = 0;
	uFnOnTargetValid->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnTargetValid, &OnTargetValid_Params, nullptr);
	uFnOnTargetValid->FunctionFlags |= 0x400;
	uFnOnTargetValid->iNative = 2528;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnTargetValid_Params.ConsumerHandle, sizeof(OnTargetValid_Params.ConsumerHandle));
};

// Function GearboxFramework.AIDefinition.OnTargetLost
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2529])
// Parameter Info:
// class UObject*                 OldTarget                      (CPF_Parm)
// bool                           bChangedTargets                (CPF_Parm)
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UAIDefinition::OnTargetLost(class UObject* OldTarget, bool bChangedTargets, struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnTargetLost = nullptr;

	if (!uFnOnTargetLost)
	{
		uFnOnTargetLost = UFunction::FindFunction("Function GearboxFramework.AIDefinition.OnTargetLost");
	}

	UAIDefinition_execOnTargetLost_Params OnTargetLost_Params;
	memset(&OnTargetLost_Params, 0, sizeof(OnTargetLost_Params));
	memcpy_s(&OnTargetLost_Params.OldTarget, sizeof(OnTargetLost_Params.OldTarget), &OldTarget, sizeof(OldTarget));
	OnTargetLost_Params.bChangedTargets = bChangedTargets;
	memcpy_s(&OnTargetLost_Params.ConsumerHandle, sizeof(OnTargetLost_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnTargetLost->iNative = 0;
	uFnOnTargetLost->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnTargetLost, &OnTargetLost_Params, nullptr);
	uFnOnTargetLost->FunctionFlags |= 0x400;
	uFnOnTargetLost->iNative = 2529;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnTargetLost_Params.ConsumerHandle, sizeof(OnTargetLost_Params.ConsumerHandle));
};

// Function GearboxFramework.AIDefinition.OnTargetChanged
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2530])
// Parameter Info:
// class UObject*                 OldTarget                      (CPF_Parm)
// class UObject*                 NewTarget                      (CPF_Parm)
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UAIDefinition::OnTargetChanged(class UObject* OldTarget, class UObject* NewTarget, struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnTargetChanged = nullptr;

	if (!uFnOnTargetChanged)
	{
		uFnOnTargetChanged = UFunction::FindFunction("Function GearboxFramework.AIDefinition.OnTargetChanged");
	}

	UAIDefinition_execOnTargetChanged_Params OnTargetChanged_Params;
	memset(&OnTargetChanged_Params, 0, sizeof(OnTargetChanged_Params));
	memcpy_s(&OnTargetChanged_Params.OldTarget, sizeof(OnTargetChanged_Params.OldTarget), &OldTarget, sizeof(OldTarget));
	memcpy_s(&OnTargetChanged_Params.NewTarget, sizeof(OnTargetChanged_Params.NewTarget), &NewTarget, sizeof(NewTarget));
	memcpy_s(&OnTargetChanged_Params.ConsumerHandle, sizeof(OnTargetChanged_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnTargetChanged->iNative = 0;
	uFnOnTargetChanged->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnTargetChanged, &OnTargetChanged_Params, nullptr);
	uFnOnTargetChanged->FunctionFlags |= 0x400;
	uFnOnTargetChanged->iNative = 2530;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnTargetChanged_Params.ConsumerHandle, sizeof(OnTargetChanged_Params.ConsumerHandle));
};

// Function GearboxFramework.AIDefinition.OnTargetAcquired
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2531])
// Parameter Info:
// class UObject*                 NewTarget                      (CPF_Parm)
// bool                           bChangedTargets                (CPF_Parm)
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UAIDefinition::OnTargetAcquired(class UObject* NewTarget, bool bChangedTargets, struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnTargetAcquired = nullptr;

	if (!uFnOnTargetAcquired)
	{
		uFnOnTargetAcquired = UFunction::FindFunction("Function GearboxFramework.AIDefinition.OnTargetAcquired");
	}

	UAIDefinition_execOnTargetAcquired_Params OnTargetAcquired_Params;
	memset(&OnTargetAcquired_Params, 0, sizeof(OnTargetAcquired_Params));
	memcpy_s(&OnTargetAcquired_Params.NewTarget, sizeof(OnTargetAcquired_Params.NewTarget), &NewTarget, sizeof(NewTarget));
	OnTargetAcquired_Params.bChangedTargets = bChangedTargets;
	memcpy_s(&OnTargetAcquired_Params.ConsumerHandle, sizeof(OnTargetAcquired_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnTargetAcquired->iNative = 0;
	uFnOnTargetAcquired->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnTargetAcquired, &OnTargetAcquired_Params, nullptr);
	uFnOnTargetAcquired->FunctionFlags |= 0x400;
	uFnOnTargetAcquired->iNative = 2531;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnTargetAcquired_Params.ConsumerHandle, sizeof(OnTargetAcquired_Params.ConsumerHandle));
};

// Function GearboxFramework.AIDefinition.OnSpawned
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2506])
// Parameter Info:
// EOnSpawnOutputs                EventOutput                    (CPF_Parm)
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UAIDefinition::OnSpawned(EOnSpawnOutputs EventOutput, struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnSpawned = nullptr;

	if (!uFnOnSpawned)
	{
		uFnOnSpawned = UFunction::FindFunction("Function GearboxFramework.AIDefinition.OnSpawned");
	}

	UAIDefinition_execOnSpawned_Params OnSpawned_Params;
	memset(&OnSpawned_Params, 0, sizeof(OnSpawned_Params));
	memcpy_s(&OnSpawned_Params.EventOutput, sizeof(OnSpawned_Params.EventOutput), &EventOutput, sizeof(EventOutput));
	memcpy_s(&OnSpawned_Params.ConsumerHandle, sizeof(OnSpawned_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnSpawned->iNative = 0;
	uFnOnSpawned->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnSpawned, &OnSpawned_Params, nullptr);
	uFnOnSpawned->FunctionFlags |= 0x400;
	uFnOnSpawned->iNative = 2506;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnSpawned_Params.ConsumerHandle, sizeof(OnSpawned_Params.ConsumerHandle));
};

// Function GearboxFramework.AIDefinition.OnTakeHeal
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2532])
// Parameter Info:
// class UObject*                 Instigator                     (CPF_Parm)
// float                          Damage                         (CPF_Parm)
// float                          ShieldDamage                   (CPF_Parm)
// class UObject*                 DamageSource                   (CPF_Parm)
// class UObject*                 DamageType                     (CPF_Parm)
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UAIDefinition::OnTakeHeal(class UObject* Instigator, float Damage, float ShieldDamage, class UObject* DamageSource, class UObject* DamageType, struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnTakeHeal = nullptr;

	if (!uFnOnTakeHeal)
	{
		uFnOnTakeHeal = UFunction::FindFunction("Function GearboxFramework.AIDefinition.OnTakeHeal");
	}

	UAIDefinition_execOnTakeHeal_Params OnTakeHeal_Params;
	memset(&OnTakeHeal_Params, 0, sizeof(OnTakeHeal_Params));
	memcpy_s(&OnTakeHeal_Params.Instigator, sizeof(OnTakeHeal_Params.Instigator), &Instigator, sizeof(Instigator));
	memcpy_s(&OnTakeHeal_Params.Damage, sizeof(OnTakeHeal_Params.Damage), &Damage, sizeof(Damage));
	memcpy_s(&OnTakeHeal_Params.ShieldDamage, sizeof(OnTakeHeal_Params.ShieldDamage), &ShieldDamage, sizeof(ShieldDamage));
	memcpy_s(&OnTakeHeal_Params.DamageSource, sizeof(OnTakeHeal_Params.DamageSource), &DamageSource, sizeof(DamageSource));
	memcpy_s(&OnTakeHeal_Params.DamageType, sizeof(OnTakeHeal_Params.DamageType), &DamageType, sizeof(DamageType));
	memcpy_s(&OnTakeHeal_Params.ConsumerHandle, sizeof(OnTakeHeal_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnTakeHeal->iNative = 0;
	uFnOnTakeHeal->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnTakeHeal, &OnTakeHeal_Params, nullptr);
	uFnOnTakeHeal->FunctionFlags |= 0x400;
	uFnOnTakeHeal->iNative = 2532;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnTakeHeal_Params.ConsumerHandle, sizeof(OnTakeHeal_Params.ConsumerHandle));
};

// Function GearboxFramework.AIDefinition.OnVehicleTakeDamage
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2533])
// Parameter Info:
// class UObject*                 Instigator                     (CPF_Parm)
// class UObject*                 HitVehicle                     (CPF_Parm)
// float                          Damage                         (CPF_Parm)
// float                          ShieldDamage                   (CPF_Parm)
// class UObject*                 DamageSource                   (CPF_Parm)
// class UObject*                 DamageType                     (CPF_Parm)
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UAIDefinition::OnVehicleTakeDamage(class UObject* Instigator, class UObject* HitVehicle, float Damage, float ShieldDamage, class UObject* DamageSource, class UObject* DamageType, struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnVehicleTakeDamage = nullptr;

	if (!uFnOnVehicleTakeDamage)
	{
		uFnOnVehicleTakeDamage = UFunction::FindFunction("Function GearboxFramework.AIDefinition.OnVehicleTakeDamage");
	}

	UAIDefinition_execOnVehicleTakeDamage_Params OnVehicleTakeDamage_Params;
	memset(&OnVehicleTakeDamage_Params, 0, sizeof(OnVehicleTakeDamage_Params));
	memcpy_s(&OnVehicleTakeDamage_Params.Instigator, sizeof(OnVehicleTakeDamage_Params.Instigator), &Instigator, sizeof(Instigator));
	memcpy_s(&OnVehicleTakeDamage_Params.HitVehicle, sizeof(OnVehicleTakeDamage_Params.HitVehicle), &HitVehicle, sizeof(HitVehicle));
	memcpy_s(&OnVehicleTakeDamage_Params.Damage, sizeof(OnVehicleTakeDamage_Params.Damage), &Damage, sizeof(Damage));
	memcpy_s(&OnVehicleTakeDamage_Params.ShieldDamage, sizeof(OnVehicleTakeDamage_Params.ShieldDamage), &ShieldDamage, sizeof(ShieldDamage));
	memcpy_s(&OnVehicleTakeDamage_Params.DamageSource, sizeof(OnVehicleTakeDamage_Params.DamageSource), &DamageSource, sizeof(DamageSource));
	memcpy_s(&OnVehicleTakeDamage_Params.DamageType, sizeof(OnVehicleTakeDamage_Params.DamageType), &DamageType, sizeof(DamageType));
	memcpy_s(&OnVehicleTakeDamage_Params.ConsumerHandle, sizeof(OnVehicleTakeDamage_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnVehicleTakeDamage->iNative = 0;
	uFnOnVehicleTakeDamage->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnVehicleTakeDamage, &OnVehicleTakeDamage_Params, nullptr);
	uFnOnVehicleTakeDamage->FunctionFlags |= 0x400;
	uFnOnVehicleTakeDamage->iNative = 2533;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnVehicleTakeDamage_Params.ConsumerHandle, sizeof(OnVehicleTakeDamage_Params.ConsumerHandle));
};

// Function GearboxFramework.AIDefinition.OnGiveDamage
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2534])
// Parameter Info:
// class UObject*                 Receiver                       (CPF_Parm)
// float                          Damage                         (CPF_Parm)
// float                          ShieldDamage                   (CPF_Parm)
// class UObject*                 DamageSource                   (CPF_Parm)
// class UObject*                 DamageType                     (CPF_Parm)
// bool                           bWasCrit                       (CPF_Parm)
// float                          ExcessDamageDone               (CPF_Parm)
// int32_t                        DamageTags                     (CPF_Parm)
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UAIDefinition::OnGiveDamage(class UObject* Receiver, float Damage, float ShieldDamage, class UObject* DamageSource, class UObject* DamageType, bool bWasCrit, float ExcessDamageDone, int32_t DamageTags, struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnGiveDamage = nullptr;

	if (!uFnOnGiveDamage)
	{
		uFnOnGiveDamage = UFunction::FindFunction("Function GearboxFramework.AIDefinition.OnGiveDamage");
	}

	UAIDefinition_execOnGiveDamage_Params OnGiveDamage_Params;
	memset(&OnGiveDamage_Params, 0, sizeof(OnGiveDamage_Params));
	memcpy_s(&OnGiveDamage_Params.Receiver, sizeof(OnGiveDamage_Params.Receiver), &Receiver, sizeof(Receiver));
	memcpy_s(&OnGiveDamage_Params.Damage, sizeof(OnGiveDamage_Params.Damage), &Damage, sizeof(Damage));
	memcpy_s(&OnGiveDamage_Params.ShieldDamage, sizeof(OnGiveDamage_Params.ShieldDamage), &ShieldDamage, sizeof(ShieldDamage));
	memcpy_s(&OnGiveDamage_Params.DamageSource, sizeof(OnGiveDamage_Params.DamageSource), &DamageSource, sizeof(DamageSource));
	memcpy_s(&OnGiveDamage_Params.DamageType, sizeof(OnGiveDamage_Params.DamageType), &DamageType, sizeof(DamageType));
	OnGiveDamage_Params.bWasCrit = bWasCrit;
	memcpy_s(&OnGiveDamage_Params.ExcessDamageDone, sizeof(OnGiveDamage_Params.ExcessDamageDone), &ExcessDamageDone, sizeof(ExcessDamageDone));
	memcpy_s(&OnGiveDamage_Params.DamageTags, sizeof(OnGiveDamage_Params.DamageTags), &DamageTags, sizeof(DamageTags));
	memcpy_s(&OnGiveDamage_Params.ConsumerHandle, sizeof(OnGiveDamage_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnGiveDamage->iNative = 0;
	uFnOnGiveDamage->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnGiveDamage, &OnGiveDamage_Params, nullptr);
	uFnOnGiveDamage->FunctionFlags |= 0x400;
	uFnOnGiveDamage->iNative = 2534;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnGiveDamage_Params.ConsumerHandle, sizeof(OnGiveDamage_Params.ConsumerHandle));
};

// Function GearboxFramework.AIDefinition.OnTakeDamage
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2535])
// Parameter Info:
// class UObject*                 Instigator                     (CPF_Parm)
// float                          Damage                         (CPF_Parm)
// float                          ShieldDamage                   (CPF_Parm)
// class UObject*                 DamageSource                   (CPF_Parm)
// class UObject*                 DamageType                     (CPF_Parm)
// bool                           bWasCrit                       (CPF_Parm)
// float                          ExcessDamageDone               (CPF_Parm)
// int32_t                        DamageTags                     (CPF_Parm)
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UAIDefinition::OnTakeDamage(class UObject* Instigator, float Damage, float ShieldDamage, class UObject* DamageSource, class UObject* DamageType, bool bWasCrit, float ExcessDamageDone, int32_t DamageTags, struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnTakeDamage = nullptr;

	if (!uFnOnTakeDamage)
	{
		uFnOnTakeDamage = UFunction::FindFunction("Function GearboxFramework.AIDefinition.OnTakeDamage");
	}

	UAIDefinition_execOnTakeDamage_Params OnTakeDamage_Params;
	memset(&OnTakeDamage_Params, 0, sizeof(OnTakeDamage_Params));
	memcpy_s(&OnTakeDamage_Params.Instigator, sizeof(OnTakeDamage_Params.Instigator), &Instigator, sizeof(Instigator));
	memcpy_s(&OnTakeDamage_Params.Damage, sizeof(OnTakeDamage_Params.Damage), &Damage, sizeof(Damage));
	memcpy_s(&OnTakeDamage_Params.ShieldDamage, sizeof(OnTakeDamage_Params.ShieldDamage), &ShieldDamage, sizeof(ShieldDamage));
	memcpy_s(&OnTakeDamage_Params.DamageSource, sizeof(OnTakeDamage_Params.DamageSource), &DamageSource, sizeof(DamageSource));
	memcpy_s(&OnTakeDamage_Params.DamageType, sizeof(OnTakeDamage_Params.DamageType), &DamageType, sizeof(DamageType));
	OnTakeDamage_Params.bWasCrit = bWasCrit;
	memcpy_s(&OnTakeDamage_Params.ExcessDamageDone, sizeof(OnTakeDamage_Params.ExcessDamageDone), &ExcessDamageDone, sizeof(ExcessDamageDone));
	memcpy_s(&OnTakeDamage_Params.DamageTags, sizeof(OnTakeDamage_Params.DamageTags), &DamageTags, sizeof(DamageTags));
	memcpy_s(&OnTakeDamage_Params.ConsumerHandle, sizeof(OnTakeDamage_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnTakeDamage->iNative = 0;
	uFnOnTakeDamage->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnTakeDamage, &OnTakeDamage_Params, nullptr);
	uFnOnTakeDamage->FunctionFlags |= 0x400;
	uFnOnTakeDamage->iNative = 2535;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnTakeDamage_Params.ConsumerHandle, sizeof(OnTakeDamage_Params.ConsumerHandle));
};

// Function GearboxFramework.AIDefinition.OnUserCouldNotAffordSecondary
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2536])
// Parameter Info:
// ENPCOnUsedOutputs              EventOutput                    (CPF_Parm)
// class UObject*                 Instigator                     (CPF_Parm)
// class UObject*                 UsedComponent                  (CPF_Parm)
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UAIDefinition::OnUserCouldNotAffordSecondary(ENPCOnUsedOutputs EventOutput, class UObject* Instigator, class UObject* UsedComponent, struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnUserCouldNotAffordSecondary = nullptr;

	if (!uFnOnUserCouldNotAffordSecondary)
	{
		uFnOnUserCouldNotAffordSecondary = UFunction::FindFunction("Function GearboxFramework.AIDefinition.OnUserCouldNotAffordSecondary");
	}

	UAIDefinition_execOnUserCouldNotAffordSecondary_Params OnUserCouldNotAffordSecondary_Params;
	memset(&OnUserCouldNotAffordSecondary_Params, 0, sizeof(OnUserCouldNotAffordSecondary_Params));
	memcpy_s(&OnUserCouldNotAffordSecondary_Params.EventOutput, sizeof(OnUserCouldNotAffordSecondary_Params.EventOutput), &EventOutput, sizeof(EventOutput));
	memcpy_s(&OnUserCouldNotAffordSecondary_Params.Instigator, sizeof(OnUserCouldNotAffordSecondary_Params.Instigator), &Instigator, sizeof(Instigator));
	memcpy_s(&OnUserCouldNotAffordSecondary_Params.UsedComponent, sizeof(OnUserCouldNotAffordSecondary_Params.UsedComponent), &UsedComponent, sizeof(UsedComponent));
	memcpy_s(&OnUserCouldNotAffordSecondary_Params.ConsumerHandle, sizeof(OnUserCouldNotAffordSecondary_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnUserCouldNotAffordSecondary->iNative = 0;
	uFnOnUserCouldNotAffordSecondary->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnUserCouldNotAffordSecondary, &OnUserCouldNotAffordSecondary_Params, nullptr);
	uFnOnUserCouldNotAffordSecondary->FunctionFlags |= 0x400;
	uFnOnUserCouldNotAffordSecondary->iNative = 2536;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnUserCouldNotAffordSecondary_Params.ConsumerHandle, sizeof(OnUserCouldNotAffordSecondary_Params.ConsumerHandle));
};

// Function GearboxFramework.AIDefinition.OnUserCouldNotAfford
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2537])
// Parameter Info:
// ENPCOnUsedOutputs              EventOutput                    (CPF_Parm)
// class UObject*                 Instigator                     (CPF_Parm)
// class UObject*                 UsedComponent                  (CPF_Parm)
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UAIDefinition::OnUserCouldNotAfford(ENPCOnUsedOutputs EventOutput, class UObject* Instigator, class UObject* UsedComponent, struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnUserCouldNotAfford = nullptr;

	if (!uFnOnUserCouldNotAfford)
	{
		uFnOnUserCouldNotAfford = UFunction::FindFunction("Function GearboxFramework.AIDefinition.OnUserCouldNotAfford");
	}

	UAIDefinition_execOnUserCouldNotAfford_Params OnUserCouldNotAfford_Params;
	memset(&OnUserCouldNotAfford_Params, 0, sizeof(OnUserCouldNotAfford_Params));
	memcpy_s(&OnUserCouldNotAfford_Params.EventOutput, sizeof(OnUserCouldNotAfford_Params.EventOutput), &EventOutput, sizeof(EventOutput));
	memcpy_s(&OnUserCouldNotAfford_Params.Instigator, sizeof(OnUserCouldNotAfford_Params.Instigator), &Instigator, sizeof(Instigator));
	memcpy_s(&OnUserCouldNotAfford_Params.UsedComponent, sizeof(OnUserCouldNotAfford_Params.UsedComponent), &UsedComponent, sizeof(UsedComponent));
	memcpy_s(&OnUserCouldNotAfford_Params.ConsumerHandle, sizeof(OnUserCouldNotAfford_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnUserCouldNotAfford->iNative = 0;
	uFnOnUserCouldNotAfford->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnUserCouldNotAfford, &OnUserCouldNotAfford_Params, nullptr);
	uFnOnUserCouldNotAfford->FunctionFlags |= 0x400;
	uFnOnUserCouldNotAfford->iNative = 2537;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnUserCouldNotAfford_Params.ConsumerHandle, sizeof(OnUserCouldNotAfford_Params.ConsumerHandle));
};

// Function GearboxFramework.AIDefinition.OnSecondaryUsed
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2538])
// Parameter Info:
// ENPCOnUsedOutputs              EventOutput                    (CPF_Parm)
// class UObject*                 Instigator                     (CPF_Parm)
// class UObject*                 UsedComponent                  (CPF_Parm)
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UAIDefinition::OnSecondaryUsed(ENPCOnUsedOutputs EventOutput, class UObject* Instigator, class UObject* UsedComponent, struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnSecondaryUsed = nullptr;

	if (!uFnOnSecondaryUsed)
	{
		uFnOnSecondaryUsed = UFunction::FindFunction("Function GearboxFramework.AIDefinition.OnSecondaryUsed");
	}

	UAIDefinition_execOnSecondaryUsed_Params OnSecondaryUsed_Params;
	memset(&OnSecondaryUsed_Params, 0, sizeof(OnSecondaryUsed_Params));
	memcpy_s(&OnSecondaryUsed_Params.EventOutput, sizeof(OnSecondaryUsed_Params.EventOutput), &EventOutput, sizeof(EventOutput));
	memcpy_s(&OnSecondaryUsed_Params.Instigator, sizeof(OnSecondaryUsed_Params.Instigator), &Instigator, sizeof(Instigator));
	memcpy_s(&OnSecondaryUsed_Params.UsedComponent, sizeof(OnSecondaryUsed_Params.UsedComponent), &UsedComponent, sizeof(UsedComponent));
	memcpy_s(&OnSecondaryUsed_Params.ConsumerHandle, sizeof(OnSecondaryUsed_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnSecondaryUsed->iNative = 0;
	uFnOnSecondaryUsed->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnSecondaryUsed, &OnSecondaryUsed_Params, nullptr);
	uFnOnSecondaryUsed->FunctionFlags |= 0x400;
	uFnOnSecondaryUsed->iNative = 2538;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnSecondaryUsed_Params.ConsumerHandle, sizeof(OnSecondaryUsed_Params.ConsumerHandle));
};

// Function GearboxFramework.AIDefinition.OnUsed
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2539])
// Parameter Info:
// ENPCOnUsedOutputs              EventOutput                    (CPF_Parm)
// class UObject*                 Instigator                     (CPF_Parm)
// class UObject*                 UsedComponent                  (CPF_Parm)
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UAIDefinition::OnUsed(ENPCOnUsedOutputs EventOutput, class UObject* Instigator, class UObject* UsedComponent, struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnUsed = nullptr;

	if (!uFnOnUsed)
	{
		uFnOnUsed = UFunction::FindFunction("Function GearboxFramework.AIDefinition.OnUsed");
	}

	UAIDefinition_execOnUsed_Params OnUsed_Params;
	memset(&OnUsed_Params, 0, sizeof(OnUsed_Params));
	memcpy_s(&OnUsed_Params.EventOutput, sizeof(OnUsed_Params.EventOutput), &EventOutput, sizeof(EventOutput));
	memcpy_s(&OnUsed_Params.Instigator, sizeof(OnUsed_Params.Instigator), &Instigator, sizeof(Instigator));
	memcpy_s(&OnUsed_Params.UsedComponent, sizeof(OnUsed_Params.UsedComponent), &UsedComponent, sizeof(UsedComponent));
	memcpy_s(&OnUsed_Params.ConsumerHandle, sizeof(OnUsed_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnUsed->iNative = 0;
	uFnOnUsed->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnUsed, &OnUsed_Params, nullptr);
	uFnOnUsed->FunctionFlags |= 0x400;
	uFnOnUsed->iNative = 2539;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnUsed_Params.ConsumerHandle, sizeof(OnUsed_Params.ConsumerHandle));
};

// Function GearboxFramework.FlagExpressionEvaluator.Evaluate
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[22809])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 ContextSource                  (CPF_Parm)

bool UFlagExpressionEvaluator::Evaluate(class UObject* ContextSource)
{
	static UFunction* uFnEvaluate = nullptr;

	if (!uFnEvaluate)
	{
		uFnEvaluate = UFunction::FindFunction("Function GearboxFramework.FlagExpressionEvaluator.Evaluate");
	}

	UFlagExpressionEvaluator_execEvaluate_Params Evaluate_Params;
	memset(&Evaluate_Params, 0, sizeof(Evaluate_Params));
	memcpy_s(&Evaluate_Params.ContextSource, sizeof(Evaluate_Params.ContextSource), &ContextSource, sizeof(ContextSource));

	uFnEvaluate->iNative = 0;
	uFnEvaluate->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnEvaluate, &Evaluate_Params, nullptr);
	uFnEvaluate->FunctionFlags |= 0x400;
	uFnEvaluate->iNative = 22809;

	return Evaluate_Params.ReturnValue;
};

// Function GearboxFramework.FlagSingleExpressionEvaluator.Evaluate
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[22809])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 ContextSource                  (CPF_Parm)

bool UFlagSingleExpressionEvaluator::Evaluate(class UObject* ContextSource)
{
	static UFunction* uFnEvaluate = nullptr;

	if (!uFnEvaluate)
	{
		uFnEvaluate = UFunction::FindFunction("Function GearboxFramework.FlagSingleExpressionEvaluator.Evaluate");
	}

	UFlagSingleExpressionEvaluator_execEvaluate_Params Evaluate_Params;
	memset(&Evaluate_Params, 0, sizeof(Evaluate_Params));
	memcpy_s(&Evaluate_Params.ContextSource, sizeof(Evaluate_Params.ContextSource), &ContextSource, sizeof(ContextSource));

	uFnEvaluate->iNative = 0;
	uFnEvaluate->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnEvaluate, &Evaluate_Params, nullptr);
	uFnEvaluate->FunctionFlags |= 0x400;
	uFnEvaluate->iNative = 22809;

	return Evaluate_Params.ReturnValue;
};

// Function GearboxFramework.FormationComponent.GetFormationRotation
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34102])
// Parameter Info:
// struct FRotator                ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FRotator UFormationComponent::GetFormationRotation()
{
	static UFunction* uFnGetFormationRotation = nullptr;

	if (!uFnGetFormationRotation)
	{
		uFnGetFormationRotation = UFunction::FindFunction("Function GearboxFramework.FormationComponent.GetFormationRotation");
	}

	UFormationComponent_execGetFormationRotation_Params GetFormationRotation_Params;
	memset(&GetFormationRotation_Params, 0, sizeof(GetFormationRotation_Params));

	uFnGetFormationRotation->iNative = 0;
	uFnGetFormationRotation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetFormationRotation, &GetFormationRotation_Params, nullptr);
	uFnGetFormationRotation->FunctionFlags |= 0x400;
	uFnGetFormationRotation->iNative = 34102;

	return GetFormationRotation_Params.ReturnValue;
};

// Function GearboxFramework.FormationComponent.GetFormationLocation
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34101])
// Parameter Info:
// struct FVector                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// bool                           bFlying                        (CPF_Parm)

struct FVector UFormationComponent::GetFormationLocation(bool bFlying)
{
	static UFunction* uFnGetFormationLocation = nullptr;

	if (!uFnGetFormationLocation)
	{
		uFnGetFormationLocation = UFunction::FindFunction("Function GearboxFramework.FormationComponent.GetFormationLocation");
	}

	UFormationComponent_execGetFormationLocation_Params GetFormationLocation_Params;
	memset(&GetFormationLocation_Params, 0, sizeof(GetFormationLocation_Params));
	GetFormationLocation_Params.bFlying = bFlying;

	uFnGetFormationLocation->iNative = 0;
	uFnGetFormationLocation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetFormationLocation, &GetFormationLocation_Params, nullptr);
	uFnGetFormationLocation->FunctionFlags |= 0x400;
	uFnGetFormationLocation->iNative = 34101;

	return GetFormationLocation_Params.ReturnValue;
};

// Function GearboxFramework.FormationComponent.SetAIOwner
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35884])
// Parameter Info:
// class UIAIInterface*           NewOwner                       (CPF_Parm)

void UFormationComponent::SetAIOwner(class UIAIInterface* NewOwner)
{
	static UFunction* uFnSetAIOwner = nullptr;

	if (!uFnSetAIOwner)
	{
		uFnSetAIOwner = UFunction::FindFunction("Function GearboxFramework.FormationComponent.SetAIOwner");
	}

	UFormationComponent_execSetAIOwner_Params SetAIOwner_Params;
	memset(&SetAIOwner_Params, 0, sizeof(SetAIOwner_Params));
	memcpy_s(&SetAIOwner_Params.NewOwner, sizeof(SetAIOwner_Params.NewOwner), &NewOwner, sizeof(NewOwner));

	uFnSetAIOwner->iNative = 0;
	uFnSetAIOwner->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetAIOwner, &SetAIOwner_Params, nullptr);
	uFnSetAIOwner->FunctionFlags |= 0x400;
	uFnSetAIOwner->iNative = 35884;
};

// Function GearboxFramework.FormationComponent.GetAIOwner
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34037])
// Parameter Info:
// class UIAIInterface*           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UIAIInterface* UFormationComponent::GetAIOwner()
{
	static UFunction* uFnGetAIOwner = nullptr;

	if (!uFnGetAIOwner)
	{
		uFnGetAIOwner = UFunction::FindFunction("Function GearboxFramework.FormationComponent.GetAIOwner");
	}

	UFormationComponent_execGetAIOwner_Params GetAIOwner_Params;
	memset(&GetAIOwner_Params, 0, sizeof(GetAIOwner_Params));

	uFnGetAIOwner->iNative = 0;
	uFnGetAIOwner->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAIOwner, &GetAIOwner_Params, nullptr);
	uFnGetAIOwner->FunctionFlags |= 0x400;
	uFnGetAIOwner->iNative = 34037;

	return GetAIOwner_Params.ReturnValue;
};

// Function GearboxFramework.FormationComponent.ShouldCrouch
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[29070])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UFormationComponent::ShouldCrouch()
{
	static UFunction* uFnShouldCrouch = nullptr;

	if (!uFnShouldCrouch)
	{
		uFnShouldCrouch = UFunction::FindFunction("Function GearboxFramework.FormationComponent.ShouldCrouch");
	}

	UFormationComponent_execShouldCrouch_Params ShouldCrouch_Params;
	memset(&ShouldCrouch_Params, 0, sizeof(ShouldCrouch_Params));

	uFnShouldCrouch->iNative = 0;
	uFnShouldCrouch->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnShouldCrouch, &ShouldCrouch_Params, nullptr);
	uFnShouldCrouch->FunctionFlags |= 0x400;
	uFnShouldCrouch->iNative = 29070;

	return ShouldCrouch_Params.ReturnValue;
};

// Function GearboxFramework.GameTestDefinition.GameTestEvent
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2446])
// Parameter Info:
// const struct FName&            SpecializedEventName           (CPF_Parm)
// class UObject*                 Instigator                     (CPF_Parm)
// class UObject*                 Other                          (CPF_Parm)
// class UObject*                 TeamDefinition                 (CPF_Parm)
// int32_t                        Index                          (CPF_Parm)
// float                          FloatParam                     (CPF_Parm)
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UGameTestDefinition::GameTestEvent(const struct FName& SpecializedEventName, class UObject* Instigator, class UObject* Other, class UObject* TeamDefinition, int32_t Index, float FloatParam, struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnGameTestEvent = nullptr;

	if (!uFnGameTestEvent)
	{
		uFnGameTestEvent = UFunction::FindFunction("Function GearboxFramework.GameTestDefinition.GameTestEvent");
	}

	UGameTestDefinition_execGameTestEvent_Params GameTestEvent_Params;
	memset(&GameTestEvent_Params, 0, sizeof(GameTestEvent_Params));
	memcpy_s(&GameTestEvent_Params.SpecializedEventName, sizeof(GameTestEvent_Params.SpecializedEventName), &SpecializedEventName, sizeof(SpecializedEventName));
	memcpy_s(&GameTestEvent_Params.Instigator, sizeof(GameTestEvent_Params.Instigator), &Instigator, sizeof(Instigator));
	memcpy_s(&GameTestEvent_Params.Other, sizeof(GameTestEvent_Params.Other), &Other, sizeof(Other));
	memcpy_s(&GameTestEvent_Params.TeamDefinition, sizeof(GameTestEvent_Params.TeamDefinition), &TeamDefinition, sizeof(TeamDefinition));
	memcpy_s(&GameTestEvent_Params.Index, sizeof(GameTestEvent_Params.Index), &Index, sizeof(Index));
	memcpy_s(&GameTestEvent_Params.FloatParam, sizeof(GameTestEvent_Params.FloatParam), &FloatParam, sizeof(FloatParam));
	memcpy_s(&GameTestEvent_Params.ConsumerHandle, sizeof(GameTestEvent_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnGameTestEvent->iNative = 0;
	uFnGameTestEvent->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGameTestEvent, &GameTestEvent_Params, nullptr);
	uFnGameTestEvent->FunctionFlags |= 0x400;
	uFnGameTestEvent->iNative = 2446;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &GameTestEvent_Params.ConsumerHandle, sizeof(GameTestEvent_Params.ConsumerHandle));
};

// Function GearboxFramework.GameTestDefinition.CleanupTest
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2447])
// Parameter Info:
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UGameTestDefinition::CleanupTest(struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnCleanupTest = nullptr;

	if (!uFnCleanupTest)
	{
		uFnCleanupTest = UFunction::FindFunction("Function GearboxFramework.GameTestDefinition.CleanupTest");
	}

	UGameTestDefinition_execCleanupTest_Params CleanupTest_Params;
	memset(&CleanupTest_Params, 0, sizeof(CleanupTest_Params));
	memcpy_s(&CleanupTest_Params.ConsumerHandle, sizeof(CleanupTest_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnCleanupTest->iNative = 0;
	uFnCleanupTest->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCleanupTest, &CleanupTest_Params, nullptr);
	uFnCleanupTest->FunctionFlags |= 0x400;
	uFnCleanupTest->iNative = 2447;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &CleanupTest_Params.ConsumerHandle, sizeof(CleanupTest_Params.ConsumerHandle));
};

// Function GearboxFramework.GameTestDefinition.RunTest
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2448])
// Parameter Info:
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UGameTestDefinition::RunTest(struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnRunTest = nullptr;

	if (!uFnRunTest)
	{
		uFnRunTest = UFunction::FindFunction("Function GearboxFramework.GameTestDefinition.RunTest");
	}

	UGameTestDefinition_execRunTest_Params RunTest_Params;
	memset(&RunTest_Params, 0, sizeof(RunTest_Params));
	memcpy_s(&RunTest_Params.ConsumerHandle, sizeof(RunTest_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnRunTest->iNative = 0;
	uFnRunTest->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRunTest, &RunTest_Params, nullptr);
	uFnRunTest->FunctionFlags |= 0x400;
	uFnRunTest->iNative = 2448;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &RunTest_Params.ConsumerHandle, sizeof(RunTest_Params.ConsumerHandle));
};

// Function GearboxFramework.GBXActorList.RemoveAndDeleteActorsOfClassFromLevel
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35665])
// Parameter Info:
// class UClass*                  TheClass                       (CPF_Const | CPF_Parm)
// class ULevel*                  Level                          (CPF_Parm)

void UGBXActorList::RemoveAndDeleteActorsOfClassFromLevel(class UClass* TheClass, class ULevel* Level)
{
	static UFunction* uFnRemoveAndDeleteActorsOfClassFromLevel = nullptr;

	if (!uFnRemoveAndDeleteActorsOfClassFromLevel)
	{
		uFnRemoveAndDeleteActorsOfClassFromLevel = UFunction::FindFunction("Function GearboxFramework.GBXActorList.RemoveAndDeleteActorsOfClassFromLevel");
	}

	UGBXActorList_execRemoveAndDeleteActorsOfClassFromLevel_Params RemoveAndDeleteActorsOfClassFromLevel_Params;
	memset(&RemoveAndDeleteActorsOfClassFromLevel_Params, 0, sizeof(RemoveAndDeleteActorsOfClassFromLevel_Params));
	memcpy_s(&RemoveAndDeleteActorsOfClassFromLevel_Params.TheClass, sizeof(RemoveAndDeleteActorsOfClassFromLevel_Params.TheClass), &TheClass, sizeof(TheClass));
	memcpy_s(&RemoveAndDeleteActorsOfClassFromLevel_Params.Level, sizeof(RemoveAndDeleteActorsOfClassFromLevel_Params.Level), &Level, sizeof(Level));

	uFnRemoveAndDeleteActorsOfClassFromLevel->iNative = 0;
	uFnRemoveAndDeleteActorsOfClassFromLevel->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRemoveAndDeleteActorsOfClassFromLevel, &RemoveAndDeleteActorsOfClassFromLevel_Params, nullptr);
	uFnRemoveAndDeleteActorsOfClassFromLevel->FunctionFlags |= 0x400;
	uFnRemoveAndDeleteActorsOfClassFromLevel->iNative = 35665;
};

// Function GearboxFramework.GBXActorList.RemoveActorsOfClassFromLevel
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35661])
// Parameter Info:
// class UClass*                  TheClass                       (CPF_Const | CPF_Parm)
// class ULevel*                  Level                          (CPF_Parm)

void UGBXActorList::RemoveActorsOfClassFromLevel(class UClass* TheClass, class ULevel* Level)
{
	static UFunction* uFnRemoveActorsOfClassFromLevel = nullptr;

	if (!uFnRemoveActorsOfClassFromLevel)
	{
		uFnRemoveActorsOfClassFromLevel = UFunction::FindFunction("Function GearboxFramework.GBXActorList.RemoveActorsOfClassFromLevel");
	}

	UGBXActorList_execRemoveActorsOfClassFromLevel_Params RemoveActorsOfClassFromLevel_Params;
	memset(&RemoveActorsOfClassFromLevel_Params, 0, sizeof(RemoveActorsOfClassFromLevel_Params));
	memcpy_s(&RemoveActorsOfClassFromLevel_Params.TheClass, sizeof(RemoveActorsOfClassFromLevel_Params.TheClass), &TheClass, sizeof(TheClass));
	memcpy_s(&RemoveActorsOfClassFromLevel_Params.Level, sizeof(RemoveActorsOfClassFromLevel_Params.Level), &Level, sizeof(Level));

	uFnRemoveActorsOfClassFromLevel->iNative = 0;
	uFnRemoveActorsOfClassFromLevel->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRemoveActorsOfClassFromLevel, &RemoveActorsOfClassFromLevel_Params, nullptr);
	uFnRemoveActorsOfClassFromLevel->FunctionFlags |= 0x400;
	uFnRemoveActorsOfClassFromLevel->iNative = 35661;
};

// Function GearboxFramework.GBXActorList.RemoveAndDeleteActorsFromLevel
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35664])
// Parameter Info:
// class ULevel*                  Level                          (CPF_Parm)

void UGBXActorList::RemoveAndDeleteActorsFromLevel(class ULevel* Level)
{
	static UFunction* uFnRemoveAndDeleteActorsFromLevel = nullptr;

	if (!uFnRemoveAndDeleteActorsFromLevel)
	{
		uFnRemoveAndDeleteActorsFromLevel = UFunction::FindFunction("Function GearboxFramework.GBXActorList.RemoveAndDeleteActorsFromLevel");
	}

	UGBXActorList_execRemoveAndDeleteActorsFromLevel_Params RemoveAndDeleteActorsFromLevel_Params;
	memset(&RemoveAndDeleteActorsFromLevel_Params, 0, sizeof(RemoveAndDeleteActorsFromLevel_Params));
	memcpy_s(&RemoveAndDeleteActorsFromLevel_Params.Level, sizeof(RemoveAndDeleteActorsFromLevel_Params.Level), &Level, sizeof(Level));

	uFnRemoveAndDeleteActorsFromLevel->iNative = 0;
	uFnRemoveAndDeleteActorsFromLevel->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRemoveAndDeleteActorsFromLevel, &RemoveAndDeleteActorsFromLevel_Params, nullptr);
	uFnRemoveAndDeleteActorsFromLevel->FunctionFlags |= 0x400;
	uFnRemoveAndDeleteActorsFromLevel->iNative = 35664;
};

// Function GearboxFramework.GBXActorList.RemoveActorsFromLevel
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35660])
// Parameter Info:
// class ULevel*                  Level                          (CPF_Parm)

void UGBXActorList::RemoveActorsFromLevel(class ULevel* Level)
{
	static UFunction* uFnRemoveActorsFromLevel = nullptr;

	if (!uFnRemoveActorsFromLevel)
	{
		uFnRemoveActorsFromLevel = UFunction::FindFunction("Function GearboxFramework.GBXActorList.RemoveActorsFromLevel");
	}

	UGBXActorList_execRemoveActorsFromLevel_Params RemoveActorsFromLevel_Params;
	memset(&RemoveActorsFromLevel_Params, 0, sizeof(RemoveActorsFromLevel_Params));
	memcpy_s(&RemoveActorsFromLevel_Params.Level, sizeof(RemoveActorsFromLevel_Params.Level), &Level, sizeof(Level));

	uFnRemoveActorsFromLevel->iNative = 0;
	uFnRemoveActorsFromLevel->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRemoveActorsFromLevel, &RemoveActorsFromLevel_Params, nullptr);
	uFnRemoveActorsFromLevel->FunctionFlags |= 0x400;
	uFnRemoveActorsFromLevel->iNative = 35660;
};

// Function GearboxFramework.GBXActorList.FindNextActorByLevel
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[33817])
// Parameter Info:
// class AActor*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class ULevel*                  Level                          (CPF_Parm)
// int32_t                        Index                          (CPF_Parm | CPF_OutParm)

class AActor* UGBXActorList::FindNextActorByLevel(class ULevel* Level, int32_t& Index)
{
	static UFunction* uFnFindNextActorByLevel = nullptr;

	if (!uFnFindNextActorByLevel)
	{
		uFnFindNextActorByLevel = UFunction::FindFunction("Function GearboxFramework.GBXActorList.FindNextActorByLevel");
	}

	UGBXActorList_execFindNextActorByLevel_Params FindNextActorByLevel_Params;
	memset(&FindNextActorByLevel_Params, 0, sizeof(FindNextActorByLevel_Params));
	memcpy_s(&FindNextActorByLevel_Params.Level, sizeof(FindNextActorByLevel_Params.Level), &Level, sizeof(Level));
	memcpy_s(&FindNextActorByLevel_Params.Index, sizeof(FindNextActorByLevel_Params.Index), &Index, sizeof(Index));

	uFnFindNextActorByLevel->iNative = 0;
	uFnFindNextActorByLevel->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnFindNextActorByLevel, &FindNextActorByLevel_Params, nullptr);
	uFnFindNextActorByLevel->FunctionFlags |= 0x400;
	uFnFindNextActorByLevel->iNative = 33817;

	memcpy_s(&Index, sizeof(Index), &FindNextActorByLevel_Params.Index, sizeof(FindNextActorByLevel_Params.Index));

	return FindNextActorByLevel_Params.ReturnValue;
};

// Function GearboxFramework.GBXActorList.FindFirstActorByLevel
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[33811])
// Parameter Info:
// class AActor*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class ULevel*                  Level                          (CPF_Parm)
// int32_t                        Index                          (CPF_Parm | CPF_OutParm)

class AActor* UGBXActorList::FindFirstActorByLevel(class ULevel* Level, int32_t& Index)
{
	static UFunction* uFnFindFirstActorByLevel = nullptr;

	if (!uFnFindFirstActorByLevel)
	{
		uFnFindFirstActorByLevel = UFunction::FindFunction("Function GearboxFramework.GBXActorList.FindFirstActorByLevel");
	}

	UGBXActorList_execFindFirstActorByLevel_Params FindFirstActorByLevel_Params;
	memset(&FindFirstActorByLevel_Params, 0, sizeof(FindFirstActorByLevel_Params));
	memcpy_s(&FindFirstActorByLevel_Params.Level, sizeof(FindFirstActorByLevel_Params.Level), &Level, sizeof(Level));
	memcpy_s(&FindFirstActorByLevel_Params.Index, sizeof(FindFirstActorByLevel_Params.Index), &Index, sizeof(Index));

	uFnFindFirstActorByLevel->iNative = 0;
	uFnFindFirstActorByLevel->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnFindFirstActorByLevel, &FindFirstActorByLevel_Params, nullptr);
	uFnFindFirstActorByLevel->FunctionFlags |= 0x400;
	uFnFindFirstActorByLevel->iNative = 33811;

	memcpy_s(&Index, sizeof(Index), &FindFirstActorByLevel_Params.Index, sizeof(FindFirstActorByLevel_Params.Index));

	return FindFirstActorByLevel_Params.ReturnValue;
};

// Function GearboxFramework.GBXActorList.FindNextActorByClass
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[33816])
// Parameter Info:
// class AActor*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UClass*                  TheClass                       (CPF_Const | CPF_Parm)
// int32_t                        Index                          (CPF_Parm | CPF_OutParm)

class AActor* UGBXActorList::FindNextActorByClass(class UClass* TheClass, int32_t& Index)
{
	static UFunction* uFnFindNextActorByClass = nullptr;

	if (!uFnFindNextActorByClass)
	{
		uFnFindNextActorByClass = UFunction::FindFunction("Function GearboxFramework.GBXActorList.FindNextActorByClass");
	}

	UGBXActorList_execFindNextActorByClass_Params FindNextActorByClass_Params;
	memset(&FindNextActorByClass_Params, 0, sizeof(FindNextActorByClass_Params));
	memcpy_s(&FindNextActorByClass_Params.TheClass, sizeof(FindNextActorByClass_Params.TheClass), &TheClass, sizeof(TheClass));
	memcpy_s(&FindNextActorByClass_Params.Index, sizeof(FindNextActorByClass_Params.Index), &Index, sizeof(Index));

	uFnFindNextActorByClass->iNative = 0;
	uFnFindNextActorByClass->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnFindNextActorByClass, &FindNextActorByClass_Params, nullptr);
	uFnFindNextActorByClass->FunctionFlags |= 0x400;
	uFnFindNextActorByClass->iNative = 33816;

	memcpy_s(&Index, sizeof(Index), &FindNextActorByClass_Params.Index, sizeof(FindNextActorByClass_Params.Index));

	return FindNextActorByClass_Params.ReturnValue;
};

// Function GearboxFramework.GBXActorList.FindFirstActorByClass
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[33810])
// Parameter Info:
// class AActor*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UClass*                  TheClass                       (CPF_Const | CPF_Parm)
// int32_t                        Index                          (CPF_Parm | CPF_OutParm)

class AActor* UGBXActorList::FindFirstActorByClass(class UClass* TheClass, int32_t& Index)
{
	static UFunction* uFnFindFirstActorByClass = nullptr;

	if (!uFnFindFirstActorByClass)
	{
		uFnFindFirstActorByClass = UFunction::FindFunction("Function GearboxFramework.GBXActorList.FindFirstActorByClass");
	}

	UGBXActorList_execFindFirstActorByClass_Params FindFirstActorByClass_Params;
	memset(&FindFirstActorByClass_Params, 0, sizeof(FindFirstActorByClass_Params));
	memcpy_s(&FindFirstActorByClass_Params.TheClass, sizeof(FindFirstActorByClass_Params.TheClass), &TheClass, sizeof(TheClass));
	memcpy_s(&FindFirstActorByClass_Params.Index, sizeof(FindFirstActorByClass_Params.Index), &Index, sizeof(Index));

	uFnFindFirstActorByClass->iNative = 0;
	uFnFindFirstActorByClass->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnFindFirstActorByClass, &FindFirstActorByClass_Params, nullptr);
	uFnFindFirstActorByClass->FunctionFlags |= 0x400;
	uFnFindFirstActorByClass->iNative = 33810;

	memcpy_s(&Index, sizeof(Index), &FindFirstActorByClass_Params.Index, sizeof(FindFirstActorByClass_Params.Index));

	return FindFirstActorByClass_Params.ReturnValue;
};

// Function GearboxFramework.GBXActorList.RemoveActor
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35659])
// Parameter Info:
// class AActor*                  Actor                          (CPF_Parm)

void UGBXActorList::RemoveActor(class AActor* Actor)
{
	static UFunction* uFnRemoveActor = nullptr;

	if (!uFnRemoveActor)
	{
		uFnRemoveActor = UFunction::FindFunction("Function GearboxFramework.GBXActorList.RemoveActor");
	}

	UGBXActorList_execRemoveActor_Params RemoveActor_Params;
	memset(&RemoveActor_Params, 0, sizeof(RemoveActor_Params));
	memcpy_s(&RemoveActor_Params.Actor, sizeof(RemoveActor_Params.Actor), &Actor, sizeof(Actor));

	uFnRemoveActor->iNative = 0;
	uFnRemoveActor->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRemoveActor, &RemoveActor_Params, nullptr);
	uFnRemoveActor->FunctionFlags |= 0x400;
	uFnRemoveActor->iNative = 35659;
};

// Function GearboxFramework.GBXActorList.AddActor
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[31659])
// Parameter Info:
// class AActor*                  Actor                          (CPF_Parm)
// class ULevel*                  Level                          (CPF_Parm)

void UGBXActorList::AddActor(class AActor* Actor, class ULevel* Level)
{
	static UFunction* uFnAddActor = nullptr;

	if (!uFnAddActor)
	{
		uFnAddActor = UFunction::FindFunction("Function GearboxFramework.GBXActorList.AddActor");
	}

	UGBXActorList_execAddActor_Params AddActor_Params;
	memset(&AddActor_Params, 0, sizeof(AddActor_Params));
	memcpy_s(&AddActor_Params.Actor, sizeof(AddActor_Params.Actor), &Actor, sizeof(Actor));
	memcpy_s(&AddActor_Params.Level, sizeof(AddActor_Params.Level), &Level, sizeof(Level));

	uFnAddActor->iNative = 0;
	uFnAddActor->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnAddActor, &AddActor_Params, nullptr);
	uFnAddActor->FunctionFlags |= 0x400;
	uFnAddActor->iNative = 31659;
};

// Function GearboxFramework.GBXAutoTestManager.ShutdownClients
// [0x00020402] (FUNC_Defined | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2449])
// Parameter Info:

void AGBXAutoTestManager::ShutdownClients()
{
	static UFunction* uFnShutdownClients = nullptr;

	if (!uFnShutdownClients)
	{
		uFnShutdownClients = UFunction::FindFunction("Function GearboxFramework.GBXAutoTestManager.ShutdownClients");
	}

	AGBXAutoTestManager_execShutdownClients_Params ShutdownClients_Params;
	memset(&ShutdownClients_Params, 0, sizeof(ShutdownClients_Params));

	uFnShutdownClients->iNative = 0;
	uFnShutdownClients->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnShutdownClients, &ShutdownClients_Params, nullptr);
	uFnShutdownClients->FunctionFlags |= 0x400;
	uFnShutdownClients->iNative = 2449;
};

// Function GearboxFramework.GBXAutoTestManager.ShutdownTimer
// [0x00020402] (FUNC_Defined | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2450])
// Parameter Info:

void AGBXAutoTestManager::ShutdownTimer()
{
	static UFunction* uFnShutdownTimer = nullptr;

	if (!uFnShutdownTimer)
	{
		uFnShutdownTimer = UFunction::FindFunction("Function GearboxFramework.GBXAutoTestManager.ShutdownTimer");
	}

	AGBXAutoTestManager_execShutdownTimer_Params ShutdownTimer_Params;
	memset(&ShutdownTimer_Params, 0, sizeof(ShutdownTimer_Params));

	uFnShutdownTimer->iNative = 0;
	uFnShutdownTimer->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnShutdownTimer, &ShutdownTimer_Params, nullptr);
	uFnShutdownTimer->FunctionFlags |= 0x400;
	uFnShutdownTimer->iNative = 2450;
};

// Function GearboxFramework.GBXAutoTestManager.AutoTestTimer
// [0x00020402] (FUNC_Defined | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2451])
// Parameter Info:

void AGBXAutoTestManager::AutoTestTimer()
{
	static UFunction* uFnAutoTestTimer = nullptr;

	if (!uFnAutoTestTimer)
	{
		uFnAutoTestTimer = UFunction::FindFunction("Function GearboxFramework.GBXAutoTestManager.AutoTestTimer");
	}

	AGBXAutoTestManager_execAutoTestTimer_Params AutoTestTimer_Params;
	memset(&AutoTestTimer_Params, 0, sizeof(AutoTestTimer_Params));

	uFnAutoTestTimer->iNative = 0;
	uFnAutoTestTimer->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnAutoTestTimer, &AutoTestTimer_Params, nullptr);
	uFnAutoTestTimer->FunctionFlags |= 0x400;
	uFnAutoTestTimer->iNative = 2451;
};

// Function GearboxFramework.GBXAutoTestManager.GetBehaviorConsumerHandle
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34051])
// Parameter Info:
// struct FBehaviorConsumerHandle ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FBehaviorConsumerHandle AGBXAutoTestManager::GetBehaviorConsumerHandle()
{
	static UFunction* uFnGetBehaviorConsumerHandle = nullptr;

	if (!uFnGetBehaviorConsumerHandle)
	{
		uFnGetBehaviorConsumerHandle = UFunction::FindFunction("Function GearboxFramework.GBXAutoTestManager.GetBehaviorConsumerHandle");
	}

	AGBXAutoTestManager_execGetBehaviorConsumerHandle_Params GetBehaviorConsumerHandle_Params;
	memset(&GetBehaviorConsumerHandle_Params, 0, sizeof(GetBehaviorConsumerHandle_Params));

	uFnGetBehaviorConsumerHandle->iNative = 0;
	uFnGetBehaviorConsumerHandle->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetBehaviorConsumerHandle, &GetBehaviorConsumerHandle_Params, nullptr);
	uFnGetBehaviorConsumerHandle->FunctionFlags |= 0x400;
	uFnGetBehaviorConsumerHandle->iNative = 34051;

	return GetBehaviorConsumerHandle_Params.ReturnValue;
};

// Function GearboxFramework.GBXCameraMode.PreViewTargetUpdate
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35529])
// Parameter Info:
// float                          DeltaTime                      (CPF_Parm)
// class UGBXCameraState*         CamState                       (CPF_Parm)
// struct FRotator                OutViewRotation                (CPF_Parm | CPF_OutParm)

void UGBXCameraMode::PreViewTargetUpdate(float DeltaTime, class UGBXCameraState* CamState, struct FRotator& OutViewRotation)
{
	static UFunction* uFnPreViewTargetUpdate = nullptr;

	if (!uFnPreViewTargetUpdate)
	{
		uFnPreViewTargetUpdate = UFunction::FindFunction("Function GearboxFramework.GBXCameraMode.PreViewTargetUpdate");
	}

	UGBXCameraMode_execPreViewTargetUpdate_Params PreViewTargetUpdate_Params;
	memset(&PreViewTargetUpdate_Params, 0, sizeof(PreViewTargetUpdate_Params));
	memcpy_s(&PreViewTargetUpdate_Params.DeltaTime, sizeof(PreViewTargetUpdate_Params.DeltaTime), &DeltaTime, sizeof(DeltaTime));
	memcpy_s(&PreViewTargetUpdate_Params.CamState, sizeof(PreViewTargetUpdate_Params.CamState), &CamState, sizeof(CamState));
	memcpy_s(&PreViewTargetUpdate_Params.OutViewRotation, sizeof(PreViewTargetUpdate_Params.OutViewRotation), &OutViewRotation, sizeof(OutViewRotation));

	uFnPreViewTargetUpdate->iNative = 0;
	uFnPreViewTargetUpdate->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPreViewTargetUpdate, &PreViewTargetUpdate_Params, nullptr);
	uFnPreViewTargetUpdate->FunctionFlags |= 0x400;
	uFnPreViewTargetUpdate->iNative = 35529;

	memcpy_s(&OutViewRotation, sizeof(OutViewRotation), &PreViewTargetUpdate_Params.OutViewRotation, sizeof(PreViewTargetUpdate_Params.OutViewRotation));
};

// Function GearboxFramework.GBXCameraMode.Update
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[2482])
// Parameter Info:
// float                          DeltaTime                      (CPF_Parm)
// class UGBXCameraState*         CamState                       (CPF_Parm)
// struct FTViewTarget            ViewTarget                     (CPF_Parm | CPF_OutParm)
// struct FTQPOV                  ViewmodelPOV                   (CPF_Parm | CPF_OutParm)

void UGBXCameraMode::Update(float DeltaTime, class UGBXCameraState* CamState, struct FTViewTarget& ViewTarget, struct FTQPOV& ViewmodelPOV)
{
	static UFunction* uFnUpdate = nullptr;

	if (!uFnUpdate)
	{
		uFnUpdate = UFunction::FindFunction("Function GearboxFramework.GBXCameraMode.Update");
	}

	UGBXCameraMode_execUpdate_Params Update_Params;
	memset(&Update_Params, 0, sizeof(Update_Params));
	memcpy_s(&Update_Params.DeltaTime, sizeof(Update_Params.DeltaTime), &DeltaTime, sizeof(DeltaTime));
	memcpy_s(&Update_Params.CamState, sizeof(Update_Params.CamState), &CamState, sizeof(CamState));
	memcpy_s(&Update_Params.ViewTarget, sizeof(Update_Params.ViewTarget), &ViewTarget, sizeof(ViewTarget));
	memcpy_s(&Update_Params.ViewmodelPOV, sizeof(Update_Params.ViewmodelPOV), &ViewmodelPOV, sizeof(ViewmodelPOV));

	uFnUpdate->iNative = 0;
	uFnUpdate->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnUpdate, &Update_Params, nullptr);
	uFnUpdate->FunctionFlags |= 0x400;
	uFnUpdate->iNative = 2482;

	memcpy_s(&ViewTarget, sizeof(ViewTarget), &Update_Params.ViewTarget, sizeof(Update_Params.ViewTarget));
	memcpy_s(&ViewmodelPOV, sizeof(ViewmodelPOV), &Update_Params.ViewmodelPOV, sizeof(Update_Params.ViewmodelPOV));
};

// Function GearboxFramework.GBXCameraMode.End
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[15573])
// Parameter Info:
// class UGBXCameraState*         CamState                       (CPF_Parm)

void UGBXCameraMode::End(class UGBXCameraState* CamState)
{
	static UFunction* uFnEnd = nullptr;

	if (!uFnEnd)
	{
		uFnEnd = UFunction::FindFunction("Function GearboxFramework.GBXCameraMode.End");
	}

	UGBXCameraMode_execEnd_Params End_Params;
	memset(&End_Params, 0, sizeof(End_Params));
	memcpy_s(&End_Params.CamState, sizeof(End_Params.CamState), &CamState, sizeof(CamState));

	uFnEnd->iNative = 0;
	uFnEnd->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnEnd, &End_Params, nullptr);
	uFnEnd->FunctionFlags |= 0x400;
	uFnEnd->iNative = 15573;
};

// Function GearboxFramework.GBXCameraMode.Start
// [0x00424400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[14797])
// Parameter Info:
// class UGBXCameraState*         CamState                       (CPF_Parm)
// float                          BlendTimeOverride              (CPF_OptionalParm | CPF_Parm)
// struct FTPOV                   PreviousPOV                    (CPF_Const | CPF_Parm | CPF_OutParm)
// struct FTQPOV                  PreviousViewmodelOffsetPOV     (CPF_Const | CPF_Parm | CPF_OutParm)

void UGBXCameraMode::Start(class UGBXCameraState* CamState, float BlendTimeOverride, struct FTPOV& PreviousPOV, struct FTQPOV& PreviousViewmodelOffsetPOV)
{
	static UFunction* uFnStart = nullptr;

	if (!uFnStart)
	{
		uFnStart = UFunction::FindFunction("Function GearboxFramework.GBXCameraMode.Start");
	}

	UGBXCameraMode_execStart_Params Start_Params;
	memset(&Start_Params, 0, sizeof(Start_Params));
	memcpy_s(&Start_Params.CamState, sizeof(Start_Params.CamState), &CamState, sizeof(CamState));
	memcpy_s(&Start_Params.BlendTimeOverride, sizeof(Start_Params.BlendTimeOverride), &BlendTimeOverride, sizeof(BlendTimeOverride));
	memcpy_s(&Start_Params.PreviousPOV, sizeof(Start_Params.PreviousPOV), &PreviousPOV, sizeof(PreviousPOV));
	memcpy_s(&Start_Params.PreviousViewmodelOffsetPOV, sizeof(Start_Params.PreviousViewmodelOffsetPOV), &PreviousViewmodelOffsetPOV, sizeof(PreviousViewmodelOffsetPOV));

	uFnStart->iNative = 0;
	uFnStart->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnStart, &Start_Params, nullptr);
	uFnStart->FunctionFlags |= 0x400;
	uFnStart->iNative = 14797;

	memcpy_s(&PreviousPOV, sizeof(PreviousPOV), &Start_Params.PreviousPOV, sizeof(Start_Params.PreviousPOV));
	memcpy_s(&PreviousViewmodelOffsetPOV, sizeof(PreviousViewmodelOffsetPOV), &Start_Params.PreviousViewmodelOffsetPOV, sizeof(Start_Params.PreviousViewmodelOffsetPOV));
};

// Function GearboxFramework.GBXCameraMode.ShutDown
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2361])
// Parameter Info:

void UGBXCameraMode::ShutDown()
{
	static UFunction* uFnShutDown = nullptr;

	if (!uFnShutDown)
	{
		uFnShutDown = UFunction::FindFunction("Function GearboxFramework.GBXCameraMode.ShutDown");
	}

	UGBXCameraMode_execShutDown_Params ShutDown_Params;
	memset(&ShutDown_Params, 0, sizeof(ShutDown_Params));

	uFnShutDown->iNative = 0;
	uFnShutDown->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnShutDown, &ShutDown_Params, nullptr);
	uFnShutDown->FunctionFlags |= 0x400;
	uFnShutDown->iNative = 2361;
};

// Function GearboxFramework.GBXCameraMode.Initialize
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[14833])
// Parameter Info:
// class UGBXCameraInputs*        CameraInputs                   (CPF_Parm)

void UGBXCameraMode::Initialize(class UGBXCameraInputs* CameraInputs)
{
	static UFunction* uFnInitialize = nullptr;

	if (!uFnInitialize)
	{
		uFnInitialize = UFunction::FindFunction("Function GearboxFramework.GBXCameraMode.Initialize");
	}

	UGBXCameraMode_execInitialize_Params Initialize_Params;
	memset(&Initialize_Params, 0, sizeof(Initialize_Params));
	memcpy_s(&Initialize_Params.CameraInputs, sizeof(Initialize_Params.CameraInputs), &CameraInputs, sizeof(CameraInputs));

	uFnInitialize->iNative = 0;
	uFnInitialize->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInitialize, &Initialize_Params, nullptr);
	uFnInitialize->FunctionFlags |= 0x400;
	uFnInitialize->iNative = 14833;
};

// Function GearboxFramework.GBXCameraModeSet.GetMode
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34131])
// Parameter Info:
// class UGBXCameraMode*          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FName&            ModeName                       (CPF_Parm)

class UGBXCameraMode* UGBXCameraModeSet::GetMode(const struct FName& ModeName)
{
	static UFunction* uFnGetMode = nullptr;

	if (!uFnGetMode)
	{
		uFnGetMode = UFunction::FindFunction("Function GearboxFramework.GBXCameraModeSet.GetMode");
	}

	UGBXCameraModeSet_execGetMode_Params GetMode_Params;
	memset(&GetMode_Params, 0, sizeof(GetMode_Params));
	memcpy_s(&GetMode_Params.ModeName, sizeof(GetMode_Params.ModeName), &ModeName, sizeof(ModeName));

	uFnGetMode->iNative = 0;
	uFnGetMode->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetMode, &GetMode_Params, nullptr);
	uFnGetMode->FunctionFlags |= 0x400;
	uFnGetMode->iNative = 34131;

	return GetMode_Params.ReturnValue;
};

// Function GearboxFramework.GBXCameraModeSet.ShutdownModes
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35962])
// Parameter Info:

void UGBXCameraModeSet::ShutdownModes()
{
	static UFunction* uFnShutdownModes = nullptr;

	if (!uFnShutdownModes)
	{
		uFnShutdownModes = UFunction::FindFunction("Function GearboxFramework.GBXCameraModeSet.ShutdownModes");
	}

	UGBXCameraModeSet_execShutdownModes_Params ShutdownModes_Params;
	memset(&ShutdownModes_Params, 0, sizeof(ShutdownModes_Params));

	uFnShutdownModes->iNative = 0;
	uFnShutdownModes->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnShutdownModes, &ShutdownModes_Params, nullptr);
	uFnShutdownModes->FunctionFlags |= 0x400;
	uFnShutdownModes->iNative = 35962;
};

// Function GearboxFramework.GBXCameraModeSet.InitializeModes
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34557])
// Parameter Info:
// class UGBXCameraInputs*        CameraInputs                   (CPF_Parm)

void UGBXCameraModeSet::InitializeModes(class UGBXCameraInputs* CameraInputs)
{
	static UFunction* uFnInitializeModes = nullptr;

	if (!uFnInitializeModes)
	{
		uFnInitializeModes = UFunction::FindFunction("Function GearboxFramework.GBXCameraModeSet.InitializeModes");
	}

	UGBXCameraModeSet_execInitializeModes_Params InitializeModes_Params;
	memset(&InitializeModes_Params, 0, sizeof(InitializeModes_Params));
	memcpy_s(&InitializeModes_Params.CameraInputs, sizeof(InitializeModes_Params.CameraInputs), &CameraInputs, sizeof(CameraInputs));

	uFnInitializeModes->iNative = 0;
	uFnInitializeModes->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInitializeModes, &InitializeModes_Params, nullptr);
	uFnInitializeModes->FunctionFlags |= 0x400;
	uFnInitializeModes->iNative = 34557;
};

// Function GearboxFramework.GBXCameraModeSet.InitializeFromDefinition
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[15031])
// Parameter Info:
// class UGBXCameraModeSetDefinition* Def                            (CPF_Parm)

void UGBXCameraModeSet::InitializeFromDefinition(class UGBXCameraModeSetDefinition* Def)
{
	static UFunction* uFnInitializeFromDefinition = nullptr;

	if (!uFnInitializeFromDefinition)
	{
		uFnInitializeFromDefinition = UFunction::FindFunction("Function GearboxFramework.GBXCameraModeSet.InitializeFromDefinition");
	}

	UGBXCameraModeSet_execInitializeFromDefinition_Params InitializeFromDefinition_Params;
	memset(&InitializeFromDefinition_Params, 0, sizeof(InitializeFromDefinition_Params));
	memcpy_s(&InitializeFromDefinition_Params.Def, sizeof(InitializeFromDefinition_Params.Def), &Def, sizeof(Def));

	uFnInitializeFromDefinition->iNative = 0;
	uFnInitializeFromDefinition->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInitializeFromDefinition, &InitializeFromDefinition_Params, nullptr);
	uFnInitializeFromDefinition->FunctionFlags |= 0x400;
	uFnInitializeFromDefinition->iNative = 15031;
};

// Function GearboxFramework.GearboxCamera.DisplayDebug
// [0x12420100] (FUNC_Simulated | FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AHUD*                    HUD                            (CPF_Parm)
// float                          out_YL                         (CPF_Parm | CPF_OutParm)
// float                          out_YPos                       (CPF_Parm | CPF_OutParm)

void AGearboxCamera::DisplayDebug(class AHUD* HUD, float& out_YL, float& out_YPos)
{
	static UFunction* uFnDisplayDebug = nullptr;

	if (!uFnDisplayDebug)
	{
		uFnDisplayDebug = UFunction::FindFunction("Function GearboxFramework.GearboxCamera.DisplayDebug");
	}

	AGearboxCamera_execDisplayDebug_Params DisplayDebug_Params;
	memset(&DisplayDebug_Params, 0, sizeof(DisplayDebug_Params));
	memcpy_s(&DisplayDebug_Params.HUD, sizeof(DisplayDebug_Params.HUD), &HUD, sizeof(HUD));
	memcpy_s(&DisplayDebug_Params.out_YL, sizeof(DisplayDebug_Params.out_YL), &out_YL, sizeof(out_YL));
	memcpy_s(&DisplayDebug_Params.out_YPos, sizeof(DisplayDebug_Params.out_YPos), &out_YPos, sizeof(out_YPos));

	this->ProcessEvent(uFnDisplayDebug, &DisplayDebug_Params, nullptr);

	memcpy_s(&out_YL, sizeof(out_YL), &DisplayDebug_Params.out_YL, sizeof(DisplayDebug_Params.out_YL));
	memcpy_s(&out_YPos, sizeof(out_YPos), &DisplayDebug_Params.out_YPos, sizeof(DisplayDebug_Params.out_YPos));
};

// Function GearboxFramework.GearboxCamera.GetDesiredPawnRotation
// [0x00020500] (FUNC_Simulated | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34086])
// Parameter Info:
// struct FRotator                ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FRotator AGearboxCamera::GetDesiredPawnRotation()
{
	static UFunction* uFnGetDesiredPawnRotation = nullptr;

	if (!uFnGetDesiredPawnRotation)
	{
		uFnGetDesiredPawnRotation = UFunction::FindFunction("Function GearboxFramework.GearboxCamera.GetDesiredPawnRotation");
	}

	AGearboxCamera_execGetDesiredPawnRotation_Params GetDesiredPawnRotation_Params;
	memset(&GetDesiredPawnRotation_Params, 0, sizeof(GetDesiredPawnRotation_Params));

	uFnGetDesiredPawnRotation->iNative = 0;
	uFnGetDesiredPawnRotation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetDesiredPawnRotation, &GetDesiredPawnRotation_Params, nullptr);
	uFnGetDesiredPawnRotation->FunctionFlags |= 0x400;
	uFnGetDesiredPawnRotation->iNative = 34086;

	return GetDesiredPawnRotation_Params.ReturnValue;
};

// Function GearboxFramework.GearboxCamera.CycleDebugCameraMode
// [0x00024500] (FUNC_Simulated | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[32989])
// Parameter Info:
// bool                           bReverse                       (CPF_OptionalParm | CPF_Parm)

void AGearboxCamera::CycleDebugCameraMode(bool bReverse)
{
	static UFunction* uFnCycleDebugCameraMode = nullptr;

	if (!uFnCycleDebugCameraMode)
	{
		uFnCycleDebugCameraMode = UFunction::FindFunction("Function GearboxFramework.GearboxCamera.CycleDebugCameraMode");
	}

	AGearboxCamera_execCycleDebugCameraMode_Params CycleDebugCameraMode_Params;
	memset(&CycleDebugCameraMode_Params, 0, sizeof(CycleDebugCameraMode_Params));
	CycleDebugCameraMode_Params.bReverse = bReverse;

	uFnCycleDebugCameraMode->iNative = 0;
	uFnCycleDebugCameraMode->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCycleDebugCameraMode, &CycleDebugCameraMode_Params, nullptr);
	uFnCycleDebugCameraMode->FunctionFlags |= 0x400;
	uFnCycleDebugCameraMode->iNative = 32989;
};

// Function GearboxFramework.GearboxCamera.GetCameraModeNames
// [0x00420500] (FUNC_Simulated | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34058])
// Parameter Info:
// class TArray<struct FName>     OutModeNames                   (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void AGearboxCamera::GetCameraModeNames(class TArray<struct FName>& OutModeNames)
{
	static UFunction* uFnGetCameraModeNames = nullptr;

	if (!uFnGetCameraModeNames)
	{
		uFnGetCameraModeNames = UFunction::FindFunction("Function GearboxFramework.GearboxCamera.GetCameraModeNames");
	}

	AGearboxCamera_execGetCameraModeNames_Params GetCameraModeNames_Params;
	memset(&GetCameraModeNames_Params, 0, sizeof(GetCameraModeNames_Params));
	memcpy_s(&GetCameraModeNames_Params.OutModeNames, sizeof(GetCameraModeNames_Params.OutModeNames), &OutModeNames, sizeof(OutModeNames));

	uFnGetCameraModeNames->iNative = 0;
	uFnGetCameraModeNames->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetCameraModeNames, &GetCameraModeNames_Params, nullptr);
	uFnGetCameraModeNames->FunctionFlags |= 0x400;
	uFnGetCameraModeNames->iNative = 34058;

	memcpy_s(&OutModeNames, sizeof(OutModeNames), &GetCameraModeNames_Params.OutModeNames, sizeof(GetCameraModeNames_Params.OutModeNames));
};

// Function GearboxFramework.GearboxCamera.UpdateViewTarget
// [0x12420000] (FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// float                          DeltaTime                      (CPF_Parm)
// struct FTViewTarget            OutVT                          (CPF_Parm | CPF_OutParm)

void AGearboxCamera::UpdateViewTarget(float DeltaTime, struct FTViewTarget& OutVT)
{
	static UFunction* uFnUpdateViewTarget = nullptr;

	if (!uFnUpdateViewTarget)
	{
		uFnUpdateViewTarget = UFunction::FindFunction("Function GearboxFramework.GearboxCamera.UpdateViewTarget");
	}

	AGearboxCamera_execUpdateViewTarget_Params UpdateViewTarget_Params;
	memset(&UpdateViewTarget_Params, 0, sizeof(UpdateViewTarget_Params));
	memcpy_s(&UpdateViewTarget_Params.DeltaTime, sizeof(UpdateViewTarget_Params.DeltaTime), &DeltaTime, sizeof(DeltaTime));
	memcpy_s(&UpdateViewTarget_Params.OutVT, sizeof(UpdateViewTarget_Params.OutVT), &OutVT, sizeof(OutVT));

	this->ProcessEvent(uFnUpdateViewTarget, &UpdateViewTarget_Params, nullptr);

	memcpy_s(&OutVT, sizeof(OutVT), &UpdateViewTarget_Params.OutVT, sizeof(UpdateViewTarget_Params.OutVT));
};

// Function GearboxFramework.GearboxCamera.UpdateCameraInputs
// [0x00020500] (FUNC_Simulated | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36611])
// Parameter Info:

void AGearboxCamera::UpdateCameraInputs()
{
	static UFunction* uFnUpdateCameraInputs = nullptr;

	if (!uFnUpdateCameraInputs)
	{
		uFnUpdateCameraInputs = UFunction::FindFunction("Function GearboxFramework.GearboxCamera.UpdateCameraInputs");
	}

	AGearboxCamera_execUpdateCameraInputs_Params UpdateCameraInputs_Params;
	memset(&UpdateCameraInputs_Params, 0, sizeof(UpdateCameraInputs_Params));

	uFnUpdateCameraInputs->iNative = 0;
	uFnUpdateCameraInputs->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnUpdateCameraInputs, &UpdateCameraInputs_Params, nullptr);
	uFnUpdateCameraInputs->FunctionFlags |= 0x400;
	uFnUpdateCameraInputs->iNative = 36611;
};

// Function GearboxFramework.GearboxCamera.ProcessViewRotation
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[27737])
// Parameter Info:
// float                          DeltaTime                      (CPF_Parm)
// struct FRotator                OutViewRotation                (CPF_Parm | CPF_OutParm)
// struct FRotator                OutDeltaRot                    (CPF_Parm | CPF_OutParm)

void AGearboxCamera::ProcessViewRotation(float DeltaTime, struct FRotator& OutViewRotation, struct FRotator& OutDeltaRot)
{
	static UFunction* uFnProcessViewRotation = nullptr;

	if (!uFnProcessViewRotation)
	{
		uFnProcessViewRotation = UFunction::FindFunction("Function GearboxFramework.GearboxCamera.ProcessViewRotation");
	}

	AGearboxCamera_execProcessViewRotation_Params ProcessViewRotation_Params;
	memset(&ProcessViewRotation_Params, 0, sizeof(ProcessViewRotation_Params));
	memcpy_s(&ProcessViewRotation_Params.DeltaTime, sizeof(ProcessViewRotation_Params.DeltaTime), &DeltaTime, sizeof(DeltaTime));
	memcpy_s(&ProcessViewRotation_Params.OutViewRotation, sizeof(ProcessViewRotation_Params.OutViewRotation), &OutViewRotation, sizeof(OutViewRotation));
	memcpy_s(&ProcessViewRotation_Params.OutDeltaRot, sizeof(ProcessViewRotation_Params.OutDeltaRot), &OutDeltaRot, sizeof(OutDeltaRot));

	uFnProcessViewRotation->iNative = 0;
	uFnProcessViewRotation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnProcessViewRotation, &ProcessViewRotation_Params, nullptr);
	uFnProcessViewRotation->FunctionFlags |= 0x400;
	uFnProcessViewRotation->iNative = 27737;

	memcpy_s(&OutViewRotation, sizeof(OutViewRotation), &ProcessViewRotation_Params.OutViewRotation, sizeof(ProcessViewRotation_Params.OutViewRotation));
	memcpy_s(&OutDeltaRot, sizeof(OutDeltaRot), &ProcessViewRotation_Params.OutDeltaRot, sizeof(ProcessViewRotation_Params.OutDeltaRot));
};

// Function GearboxFramework.GearboxCamera.UpdateCamera
// [0x00020D00] (FUNC_Simulated | FUNC_Native | FUNC_Event | FUNC_Public | FUNC_AllFlags) (iNative[14775])
// Parameter Info:
// float                          DeltaTime                      (CPF_Parm)

void AGearboxCamera::eventUpdateCamera(float DeltaTime)
{
	static UFunction* uFnUpdateCamera = nullptr;

	if (!uFnUpdateCamera)
	{
		uFnUpdateCamera = UFunction::FindFunction("Function GearboxFramework.GearboxCamera.UpdateCamera");
	}

	AGearboxCamera_eventUpdateCamera_Params UpdateCamera_Params;
	memset(&UpdateCamera_Params, 0, sizeof(UpdateCamera_Params));
	memcpy_s(&UpdateCamera_Params.DeltaTime, sizeof(UpdateCamera_Params.DeltaTime), &DeltaTime, sizeof(DeltaTime));

	uFnUpdateCamera->iNative = 0;
	uFnUpdateCamera->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnUpdateCamera, &UpdateCamera_Params, nullptr);
	uFnUpdateCamera->FunctionFlags |= 0x400;
	uFnUpdateCamera->iNative = 14775;
};

// Function GearboxFramework.GearboxCamera.ClearAllCameraShakes
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void AGearboxCamera::ClearAllCameraShakes()
{
	static UFunction* uFnClearAllCameraShakes = nullptr;

	if (!uFnClearAllCameraShakes)
	{
		uFnClearAllCameraShakes = UFunction::FindFunction("Function GearboxFramework.GearboxCamera.ClearAllCameraShakes");
	}

	AGearboxCamera_execClearAllCameraShakes_Params ClearAllCameraShakes_Params;
	memset(&ClearAllCameraShakes_Params, 0, sizeof(ClearAllCameraShakes_Params));

	this->ProcessEvent(uFnClearAllCameraShakes, &ClearAllCameraShakes_Params, nullptr);
};

// Function GearboxFramework.GearboxCamera.StopCameraShake
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UCameraShake*            Shake                          (CPF_Parm)

void AGearboxCamera::StopCameraShake(class UCameraShake* Shake)
{
	static UFunction* uFnStopCameraShake = nullptr;

	if (!uFnStopCameraShake)
	{
		uFnStopCameraShake = UFunction::FindFunction("Function GearboxFramework.GearboxCamera.StopCameraShake");
	}

	AGearboxCamera_execStopCameraShake_Params StopCameraShake_Params;
	memset(&StopCameraShake_Params, 0, sizeof(StopCameraShake_Params));
	memcpy_s(&StopCameraShake_Params.Shake, sizeof(StopCameraShake_Params.Shake), &Shake, sizeof(Shake));

	this->ProcessEvent(uFnStopCameraShake, &StopCameraShake_Params, nullptr);
};

// Function GearboxFramework.GearboxCamera.PlayCameraShake
// [0x12024000] (FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UCameraShake*            Shake                          (CPF_Parm)
// float                          Scale                          (CPF_Parm)
// ECameraAnimPlaySpace           PlaySpace                      (CPF_OptionalParm | CPF_Parm)
// const struct FRotator&         UserPlaySpaceRot               (CPF_OptionalParm | CPF_Parm)

void AGearboxCamera::PlayCameraShake(class UCameraShake* Shake, float Scale, ECameraAnimPlaySpace PlaySpace, const struct FRotator& UserPlaySpaceRot)
{
	static UFunction* uFnPlayCameraShake = nullptr;

	if (!uFnPlayCameraShake)
	{
		uFnPlayCameraShake = UFunction::FindFunction("Function GearboxFramework.GearboxCamera.PlayCameraShake");
	}

	AGearboxCamera_execPlayCameraShake_Params PlayCameraShake_Params;
	memset(&PlayCameraShake_Params, 0, sizeof(PlayCameraShake_Params));
	memcpy_s(&PlayCameraShake_Params.Shake, sizeof(PlayCameraShake_Params.Shake), &Shake, sizeof(Shake));
	memcpy_s(&PlayCameraShake_Params.Scale, sizeof(PlayCameraShake_Params.Scale), &Scale, sizeof(Scale));
	memcpy_s(&PlayCameraShake_Params.PlaySpace, sizeof(PlayCameraShake_Params.PlaySpace), &PlaySpace, sizeof(PlaySpace));
	memcpy_s(&PlayCameraShake_Params.UserPlaySpaceRot, sizeof(PlayCameraShake_Params.UserPlaySpaceRot), &UserPlaySpaceRot, sizeof(UserPlaySpaceRot));

	this->ProcessEvent(uFnPlayCameraShake, &PlayCameraShake_Params, nullptr);
};

// Function GearboxFramework.GearboxCamera.RemoveAllEpicCameraShakes
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35662])
// Parameter Info:

void AGearboxCamera::RemoveAllEpicCameraShakes()
{
	static UFunction* uFnRemoveAllEpicCameraShakes = nullptr;

	if (!uFnRemoveAllEpicCameraShakes)
	{
		uFnRemoveAllEpicCameraShakes = UFunction::FindFunction("Function GearboxFramework.GearboxCamera.RemoveAllEpicCameraShakes");
	}

	AGearboxCamera_execRemoveAllEpicCameraShakes_Params RemoveAllEpicCameraShakes_Params;
	memset(&RemoveAllEpicCameraShakes_Params, 0, sizeof(RemoveAllEpicCameraShakes_Params));

	uFnRemoveAllEpicCameraShakes->iNative = 0;
	uFnRemoveAllEpicCameraShakes->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRemoveAllEpicCameraShakes, &RemoveAllEpicCameraShakes_Params, nullptr);
	uFnRemoveAllEpicCameraShakes->FunctionFlags |= 0x400;
	uFnRemoveAllEpicCameraShakes->iNative = 35662;
};

// Function GearboxFramework.GearboxCamera.RemoveEpicCameraShake
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35669])
// Parameter Info:
// class UCameraShake*            Shake                          (CPF_Parm)

void AGearboxCamera::RemoveEpicCameraShake(class UCameraShake* Shake)
{
	static UFunction* uFnRemoveEpicCameraShake = nullptr;

	if (!uFnRemoveEpicCameraShake)
	{
		uFnRemoveEpicCameraShake = UFunction::FindFunction("Function GearboxFramework.GearboxCamera.RemoveEpicCameraShake");
	}

	AGearboxCamera_execRemoveEpicCameraShake_Params RemoveEpicCameraShake_Params;
	memset(&RemoveEpicCameraShake_Params, 0, sizeof(RemoveEpicCameraShake_Params));
	memcpy_s(&RemoveEpicCameraShake_Params.Shake, sizeof(RemoveEpicCameraShake_Params.Shake), &Shake, sizeof(Shake));

	uFnRemoveEpicCameraShake->iNative = 0;
	uFnRemoveEpicCameraShake->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRemoveEpicCameraShake, &RemoveEpicCameraShake_Params, nullptr);
	uFnRemoveEpicCameraShake->FunctionFlags |= 0x400;
	uFnRemoveEpicCameraShake->iNative = 35669;
};

// Function GearboxFramework.GearboxCamera.AddEpicCameraShake
// [0x00024400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[31662])
// Parameter Info:
// class UCameraShake*            NewShake                       (CPF_Parm)
// float                          Scale                          (CPF_Parm)
// ECameraAnimPlaySpace           PlaySpace                      (CPF_OptionalParm | CPF_Parm)
// const struct FRotator&         UserPlaySpaceRot               (CPF_OptionalParm | CPF_Parm)

void AGearboxCamera::AddEpicCameraShake(class UCameraShake* NewShake, float Scale, ECameraAnimPlaySpace PlaySpace, const struct FRotator& UserPlaySpaceRot)
{
	static UFunction* uFnAddEpicCameraShake = nullptr;

	if (!uFnAddEpicCameraShake)
	{
		uFnAddEpicCameraShake = UFunction::FindFunction("Function GearboxFramework.GearboxCamera.AddEpicCameraShake");
	}

	AGearboxCamera_execAddEpicCameraShake_Params AddEpicCameraShake_Params;
	memset(&AddEpicCameraShake_Params, 0, sizeof(AddEpicCameraShake_Params));
	memcpy_s(&AddEpicCameraShake_Params.NewShake, sizeof(AddEpicCameraShake_Params.NewShake), &NewShake, sizeof(NewShake));
	memcpy_s(&AddEpicCameraShake_Params.Scale, sizeof(AddEpicCameraShake_Params.Scale), &Scale, sizeof(Scale));
	memcpy_s(&AddEpicCameraShake_Params.PlaySpace, sizeof(AddEpicCameraShake_Params.PlaySpace), &PlaySpace, sizeof(PlaySpace));
	memcpy_s(&AddEpicCameraShake_Params.UserPlaySpaceRot, sizeof(AddEpicCameraShake_Params.UserPlaySpaceRot), &UserPlaySpaceRot, sizeof(UserPlaySpaceRot));

	uFnAddEpicCameraShake->iNative = 0;
	uFnAddEpicCameraShake->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnAddEpicCameraShake, &AddEpicCameraShake_Params, nullptr);
	uFnAddEpicCameraShake->FunctionFlags |= 0x400;
	uFnAddEpicCameraShake->iNative = 31662;
};

// Function GearboxFramework.GearboxCamera.StopGBXCameraShake
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36304])
// Parameter Info:

void AGearboxCamera::StopGBXCameraShake()
{
	static UFunction* uFnStopGBXCameraShake = nullptr;

	if (!uFnStopGBXCameraShake)
	{
		uFnStopGBXCameraShake = UFunction::FindFunction("Function GearboxFramework.GearboxCamera.StopGBXCameraShake");
	}

	AGearboxCamera_execStopGBXCameraShake_Params StopGBXCameraShake_Params;
	memset(&StopGBXCameraShake_Params, 0, sizeof(StopGBXCameraShake_Params));

	uFnStopGBXCameraShake->iNative = 0;
	uFnStopGBXCameraShake->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnStopGBXCameraShake, &StopGBXCameraShake_Params, nullptr);
	uFnStopGBXCameraShake->FunctionFlags |= 0x400;
	uFnStopGBXCameraShake->iNative = 36304;
};

// Function GearboxFramework.GearboxCamera.PlayGBXCameraShake
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35462])
// Parameter Info:
// const struct FGearboxViewShakeInfo& Shake                          (CPF_Parm)

void AGearboxCamera::PlayGBXCameraShake(const struct FGearboxViewShakeInfo& Shake)
{
	static UFunction* uFnPlayGBXCameraShake = nullptr;

	if (!uFnPlayGBXCameraShake)
	{
		uFnPlayGBXCameraShake = UFunction::FindFunction("Function GearboxFramework.GearboxCamera.PlayGBXCameraShake");
	}

	AGearboxCamera_execPlayGBXCameraShake_Params PlayGBXCameraShake_Params;
	memset(&PlayGBXCameraShake_Params, 0, sizeof(PlayGBXCameraShake_Params));
	memcpy_s(&PlayGBXCameraShake_Params.Shake, sizeof(PlayGBXCameraShake_Params.Shake), &Shake, sizeof(Shake));

	uFnPlayGBXCameraShake->iNative = 0;
	uFnPlayGBXCameraShake->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPlayGBXCameraShake, &PlayGBXCameraShake_Params, nullptr);
	uFnPlayGBXCameraShake->FunctionFlags |= 0x400;
	uFnPlayGBXCameraShake->iNative = 35462;
};

// Function GearboxFramework.GearboxCamera.SetViewTarget
// [0x00024400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[29021])
// Parameter Info:
// class AActor*                  NewViewTarget                  (CPF_Parm)
// const struct FViewTargetTransitionParams& TransitionParams               (CPF_OptionalParm | CPF_Parm)

void AGearboxCamera::SetViewTarget(class AActor* NewViewTarget, const struct FViewTargetTransitionParams& TransitionParams)
{
	static UFunction* uFnSetViewTarget = nullptr;

	if (!uFnSetViewTarget)
	{
		uFnSetViewTarget = UFunction::FindFunction("Function GearboxFramework.GearboxCamera.SetViewTarget");
	}

	AGearboxCamera_execSetViewTarget_Params SetViewTarget_Params;
	memset(&SetViewTarget_Params, 0, sizeof(SetViewTarget_Params));
	memcpy_s(&SetViewTarget_Params.NewViewTarget, sizeof(SetViewTarget_Params.NewViewTarget), &NewViewTarget, sizeof(NewViewTarget));
	memcpy_s(&SetViewTarget_Params.TransitionParams, sizeof(SetViewTarget_Params.TransitionParams), &TransitionParams, sizeof(TransitionParams));

	uFnSetViewTarget->iNative = 0;
	uFnSetViewTarget->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetViewTarget, &SetViewTarget_Params, nullptr);
	uFnSetViewTarget->FunctionFlags |= 0x400;
	uFnSetViewTarget->iNative = 29021;
};

// Function GearboxFramework.GearboxCamera.ResetCameraRotation
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35715])
// Parameter Info:
// const struct FRotator&         NewRot                         (CPF_Parm)

void AGearboxCamera::ResetCameraRotation(const struct FRotator& NewRot)
{
	static UFunction* uFnResetCameraRotation = nullptr;

	if (!uFnResetCameraRotation)
	{
		uFnResetCameraRotation = UFunction::FindFunction("Function GearboxFramework.GearboxCamera.ResetCameraRotation");
	}

	AGearboxCamera_execResetCameraRotation_Params ResetCameraRotation_Params;
	memset(&ResetCameraRotation_Params, 0, sizeof(ResetCameraRotation_Params));
	memcpy_s(&ResetCameraRotation_Params.NewRot, sizeof(ResetCameraRotation_Params.NewRot), &NewRot, sizeof(NewRot));

	uFnResetCameraRotation->iNative = 0;
	uFnResetCameraRotation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnResetCameraRotation, &ResetCameraRotation_Params, nullptr);
	uFnResetCameraRotation->FunctionFlags |= 0x400;
	uFnResetCameraRotation->iNative = 35715;
};

// Function GearboxFramework.GearboxCamera.GetCurrentMode
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34070])
// Parameter Info:
// class UGBXCameraMode*          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UGBXCameraMode* AGearboxCamera::GetCurrentMode()
{
	static UFunction* uFnGetCurrentMode = nullptr;

	if (!uFnGetCurrentMode)
	{
		uFnGetCurrentMode = UFunction::FindFunction("Function GearboxFramework.GearboxCamera.GetCurrentMode");
	}

	AGearboxCamera_execGetCurrentMode_Params GetCurrentMode_Params;
	memset(&GetCurrentMode_Params, 0, sizeof(GetCurrentMode_Params));

	uFnGetCurrentMode->iNative = 0;
	uFnGetCurrentMode->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetCurrentMode, &GetCurrentMode_Params, nullptr);
	uFnGetCurrentMode->FunctionFlags |= 0x400;
	uFnGetCurrentMode->iNative = 34070;

	return GetCurrentMode_Params.ReturnValue;
};

// Function GearboxFramework.GearboxCamera.ClearCameraMode
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32749])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool AGearboxCamera::ClearCameraMode()
{
	static UFunction* uFnClearCameraMode = nullptr;

	if (!uFnClearCameraMode)
	{
		uFnClearCameraMode = UFunction::FindFunction("Function GearboxFramework.GearboxCamera.ClearCameraMode");
	}

	AGearboxCamera_execClearCameraMode_Params ClearCameraMode_Params;
	memset(&ClearCameraMode_Params, 0, sizeof(ClearCameraMode_Params));

	uFnClearCameraMode->iNative = 0;
	uFnClearCameraMode->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnClearCameraMode, &ClearCameraMode_Params, nullptr);
	uFnClearCameraMode->FunctionFlags |= 0x400;
	uFnClearCameraMode->iNative = 32749;

	return ClearCameraMode_Params.ReturnValue;
};

// Function GearboxFramework.GearboxCamera.PopCameraMode
// [0x00024400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[35505])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FName&            ModeName                       (CPF_Parm)
// float                          BlendTimeOverride              (CPF_OptionalParm | CPF_Parm)

bool AGearboxCamera::PopCameraMode(const struct FName& ModeName, float BlendTimeOverride)
{
	static UFunction* uFnPopCameraMode = nullptr;

	if (!uFnPopCameraMode)
	{
		uFnPopCameraMode = UFunction::FindFunction("Function GearboxFramework.GearboxCamera.PopCameraMode");
	}

	AGearboxCamera_execPopCameraMode_Params PopCameraMode_Params;
	memset(&PopCameraMode_Params, 0, sizeof(PopCameraMode_Params));
	memcpy_s(&PopCameraMode_Params.ModeName, sizeof(PopCameraMode_Params.ModeName), &ModeName, sizeof(ModeName));
	memcpy_s(&PopCameraMode_Params.BlendTimeOverride, sizeof(PopCameraMode_Params.BlendTimeOverride), &BlendTimeOverride, sizeof(BlendTimeOverride));

	uFnPopCameraMode->iNative = 0;
	uFnPopCameraMode->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPopCameraMode, &PopCameraMode_Params, nullptr);
	uFnPopCameraMode->FunctionFlags |= 0x400;
	uFnPopCameraMode->iNative = 35505;

	return PopCameraMode_Params.ReturnValue;
};

// Function GearboxFramework.GearboxCamera.PushCameraMode
// [0x00024400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[35582])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FName&            ModeName                       (CPF_Parm)
// float                          BlendTimeOverride              (CPF_OptionalParm | CPF_Parm)

bool AGearboxCamera::PushCameraMode(const struct FName& ModeName, float BlendTimeOverride)
{
	static UFunction* uFnPushCameraMode = nullptr;

	if (!uFnPushCameraMode)
	{
		uFnPushCameraMode = UFunction::FindFunction("Function GearboxFramework.GearboxCamera.PushCameraMode");
	}

	AGearboxCamera_execPushCameraMode_Params PushCameraMode_Params;
	memset(&PushCameraMode_Params, 0, sizeof(PushCameraMode_Params));
	memcpy_s(&PushCameraMode_Params.ModeName, sizeof(PushCameraMode_Params.ModeName), &ModeName, sizeof(ModeName));
	memcpy_s(&PushCameraMode_Params.BlendTimeOverride, sizeof(PushCameraMode_Params.BlendTimeOverride), &BlendTimeOverride, sizeof(BlendTimeOverride));

	uFnPushCameraMode->iNative = 0;
	uFnPushCameraMode->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPushCameraMode, &PushCameraMode_Params, nullptr);
	uFnPushCameraMode->FunctionFlags |= 0x400;
	uFnPushCameraMode->iNative = 35582;

	return PushCameraMode_Params.ReturnValue;
};

// Function GearboxFramework.GearboxCamera.SetCameraMode
// [0x00024400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[28738])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FName&            ModeName                       (CPF_Parm)
// float                          BlendTimeOverride              (CPF_OptionalParm | CPF_Parm)
// bool                           bForceResetMode                (CPF_OptionalParm | CPF_Parm)

bool AGearboxCamera::SetCameraMode(const struct FName& ModeName, float BlendTimeOverride, bool bForceResetMode)
{
	static UFunction* uFnSetCameraMode = nullptr;

	if (!uFnSetCameraMode)
	{
		uFnSetCameraMode = UFunction::FindFunction("Function GearboxFramework.GearboxCamera.SetCameraMode");
	}

	AGearboxCamera_execSetCameraMode_Params SetCameraMode_Params;
	memset(&SetCameraMode_Params, 0, sizeof(SetCameraMode_Params));
	memcpy_s(&SetCameraMode_Params.ModeName, sizeof(SetCameraMode_Params.ModeName), &ModeName, sizeof(ModeName));
	memcpy_s(&SetCameraMode_Params.BlendTimeOverride, sizeof(SetCameraMode_Params.BlendTimeOverride), &BlendTimeOverride, sizeof(BlendTimeOverride));
	SetCameraMode_Params.bForceResetMode = bForceResetMode;

	uFnSetCameraMode->iNative = 0;
	uFnSetCameraMode->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetCameraMode, &SetCameraMode_Params, nullptr);
	uFnSetCameraMode->FunctionFlags |= 0x400;
	uFnSetCameraMode->iNative = 28738;

	return SetCameraMode_Params.ReturnValue;
};

// Function GearboxFramework.GearboxCamera.ClearModeSets
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32755])
// Parameter Info:

void AGearboxCamera::ClearModeSets()
{
	static UFunction* uFnClearModeSets = nullptr;

	if (!uFnClearModeSets)
	{
		uFnClearModeSets = UFunction::FindFunction("Function GearboxFramework.GearboxCamera.ClearModeSets");
	}

	AGearboxCamera_execClearModeSets_Params ClearModeSets_Params;
	memset(&ClearModeSets_Params, 0, sizeof(ClearModeSets_Params));

	uFnClearModeSets->iNative = 0;
	uFnClearModeSets->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnClearModeSets, &ClearModeSets_Params, nullptr);
	uFnClearModeSets->FunctionFlags |= 0x400;
	uFnClearModeSets->iNative = 32755;
};

// Function GearboxFramework.GearboxCamera.HasModeSet
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34319])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UGBXCameraModeSet*       ModeSet                        (CPF_Parm)

bool AGearboxCamera::HasModeSet(class UGBXCameraModeSet* ModeSet)
{
	static UFunction* uFnHasModeSet = nullptr;

	if (!uFnHasModeSet)
	{
		uFnHasModeSet = UFunction::FindFunction("Function GearboxFramework.GearboxCamera.HasModeSet");
	}

	AGearboxCamera_execHasModeSet_Params HasModeSet_Params;
	memset(&HasModeSet_Params, 0, sizeof(HasModeSet_Params));
	memcpy_s(&HasModeSet_Params.ModeSet, sizeof(HasModeSet_Params.ModeSet), &ModeSet, sizeof(ModeSet));

	uFnHasModeSet->iNative = 0;
	uFnHasModeSet->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnHasModeSet, &HasModeSet_Params, nullptr);
	uFnHasModeSet->FunctionFlags |= 0x400;
	uFnHasModeSet->iNative = 34319;

	return HasModeSet_Params.ReturnValue;
};

// Function GearboxFramework.GearboxCamera.RemoveModeSetByDefinition
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35673])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UGBXCameraModeSetDefinition* ModeSetDefinition              (CPF_Parm)

bool AGearboxCamera::RemoveModeSetByDefinition(class UGBXCameraModeSetDefinition* ModeSetDefinition)
{
	static UFunction* uFnRemoveModeSetByDefinition = nullptr;

	if (!uFnRemoveModeSetByDefinition)
	{
		uFnRemoveModeSetByDefinition = UFunction::FindFunction("Function GearboxFramework.GearboxCamera.RemoveModeSetByDefinition");
	}

	AGearboxCamera_execRemoveModeSetByDefinition_Params RemoveModeSetByDefinition_Params;
	memset(&RemoveModeSetByDefinition_Params, 0, sizeof(RemoveModeSetByDefinition_Params));
	memcpy_s(&RemoveModeSetByDefinition_Params.ModeSetDefinition, sizeof(RemoveModeSetByDefinition_Params.ModeSetDefinition), &ModeSetDefinition, sizeof(ModeSetDefinition));

	uFnRemoveModeSetByDefinition->iNative = 0;
	uFnRemoveModeSetByDefinition->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRemoveModeSetByDefinition, &RemoveModeSetByDefinition_Params, nullptr);
	uFnRemoveModeSetByDefinition->FunctionFlags |= 0x400;
	uFnRemoveModeSetByDefinition->iNative = 35673;

	return RemoveModeSetByDefinition_Params.ReturnValue;
};

// Function GearboxFramework.GearboxCamera.AddModeSetByDefinition
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[31674])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UGBXCameraModeSetDefinition* ModeSetDefinition              (CPF_Parm)

bool AGearboxCamera::AddModeSetByDefinition(class UGBXCameraModeSetDefinition* ModeSetDefinition)
{
	static UFunction* uFnAddModeSetByDefinition = nullptr;

	if (!uFnAddModeSetByDefinition)
	{
		uFnAddModeSetByDefinition = UFunction::FindFunction("Function GearboxFramework.GearboxCamera.AddModeSetByDefinition");
	}

	AGearboxCamera_execAddModeSetByDefinition_Params AddModeSetByDefinition_Params;
	memset(&AddModeSetByDefinition_Params, 0, sizeof(AddModeSetByDefinition_Params));
	memcpy_s(&AddModeSetByDefinition_Params.ModeSetDefinition, sizeof(AddModeSetByDefinition_Params.ModeSetDefinition), &ModeSetDefinition, sizeof(ModeSetDefinition));

	uFnAddModeSetByDefinition->iNative = 0;
	uFnAddModeSetByDefinition->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnAddModeSetByDefinition, &AddModeSetByDefinition_Params, nullptr);
	uFnAddModeSetByDefinition->FunctionFlags |= 0x400;
	uFnAddModeSetByDefinition->iNative = 31674;

	return AddModeSetByDefinition_Params.ReturnValue;
};

// Function GearboxFramework.GearboxCamera.RemoveModeSet
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35672])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UGBXCameraModeSet*       ModeSet                        (CPF_Parm)

bool AGearboxCamera::RemoveModeSet(class UGBXCameraModeSet* ModeSet)
{
	static UFunction* uFnRemoveModeSet = nullptr;

	if (!uFnRemoveModeSet)
	{
		uFnRemoveModeSet = UFunction::FindFunction("Function GearboxFramework.GearboxCamera.RemoveModeSet");
	}

	AGearboxCamera_execRemoveModeSet_Params RemoveModeSet_Params;
	memset(&RemoveModeSet_Params, 0, sizeof(RemoveModeSet_Params));
	memcpy_s(&RemoveModeSet_Params.ModeSet, sizeof(RemoveModeSet_Params.ModeSet), &ModeSet, sizeof(ModeSet));

	uFnRemoveModeSet->iNative = 0;
	uFnRemoveModeSet->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRemoveModeSet, &RemoveModeSet_Params, nullptr);
	uFnRemoveModeSet->FunctionFlags |= 0x400;
	uFnRemoveModeSet->iNative = 35672;

	return RemoveModeSet_Params.ReturnValue;
};

// Function GearboxFramework.GearboxCamera.AddModeSet
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[31673])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UGBXCameraModeSet*       ModeSet                        (CPF_Parm)

bool AGearboxCamera::AddModeSet(class UGBXCameraModeSet* ModeSet)
{
	static UFunction* uFnAddModeSet = nullptr;

	if (!uFnAddModeSet)
	{
		uFnAddModeSet = UFunction::FindFunction("Function GearboxFramework.GearboxCamera.AddModeSet");
	}

	AGearboxCamera_execAddModeSet_Params AddModeSet_Params;
	memset(&AddModeSet_Params, 0, sizeof(AddModeSet_Params));
	memcpy_s(&AddModeSet_Params.ModeSet, sizeof(AddModeSet_Params.ModeSet), &ModeSet, sizeof(ModeSet));

	uFnAddModeSet->iNative = 0;
	uFnAddModeSet->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnAddModeSet, &AddModeSet_Params, nullptr);
	uFnAddModeSet->FunctionFlags |= 0x400;
	uFnAddModeSet->iNative = 31673;

	return AddModeSet_Params.ReturnValue;
};

// Function GearboxFramework.GBXCameraShakeManager.AddEpicCameraShake
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[31662])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UCameraShake*            NewShake                       (CPF_Parm)
// float                          Scale                          (CPF_Parm)
// ECameraAnimPlaySpace           PlaySpace                      (CPF_Parm)
// const struct FRotator&         UserPlaySpaceRot               (CPF_Parm)

bool UGBXCameraShakeManager::AddEpicCameraShake(class UCameraShake* NewShake, float Scale, ECameraAnimPlaySpace PlaySpace, const struct FRotator& UserPlaySpaceRot)
{
	static UFunction* uFnAddEpicCameraShake = nullptr;

	if (!uFnAddEpicCameraShake)
	{
		uFnAddEpicCameraShake = UFunction::FindFunction("Function GearboxFramework.GBXCameraShakeManager.AddEpicCameraShake");
	}

	UGBXCameraShakeManager_execAddEpicCameraShake_Params AddEpicCameraShake_Params;
	memset(&AddEpicCameraShake_Params, 0, sizeof(AddEpicCameraShake_Params));
	memcpy_s(&AddEpicCameraShake_Params.NewShake, sizeof(AddEpicCameraShake_Params.NewShake), &NewShake, sizeof(NewShake));
	memcpy_s(&AddEpicCameraShake_Params.Scale, sizeof(AddEpicCameraShake_Params.Scale), &Scale, sizeof(Scale));
	memcpy_s(&AddEpicCameraShake_Params.PlaySpace, sizeof(AddEpicCameraShake_Params.PlaySpace), &PlaySpace, sizeof(PlaySpace));
	memcpy_s(&AddEpicCameraShake_Params.UserPlaySpaceRot, sizeof(AddEpicCameraShake_Params.UserPlaySpaceRot), &UserPlaySpaceRot, sizeof(UserPlaySpaceRot));

	uFnAddEpicCameraShake->iNative = 0;
	uFnAddEpicCameraShake->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnAddEpicCameraShake, &AddEpicCameraShake_Params, nullptr);
	uFnAddEpicCameraShake->FunctionFlags |= 0x400;
	uFnAddEpicCameraShake->iNative = 31662;

	return AddEpicCameraShake_Params.ReturnValue;
};

// Function GearboxFramework.GBXCameraShakeManager.PlayGBXCameraShake
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35462])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FGearboxViewShakeInfo& NewShake                       (CPF_Parm)

bool UGBXCameraShakeManager::PlayGBXCameraShake(const struct FGearboxViewShakeInfo& NewShake)
{
	static UFunction* uFnPlayGBXCameraShake = nullptr;

	if (!uFnPlayGBXCameraShake)
	{
		uFnPlayGBXCameraShake = UFunction::FindFunction("Function GearboxFramework.GBXCameraShakeManager.PlayGBXCameraShake");
	}

	UGBXCameraShakeManager_execPlayGBXCameraShake_Params PlayGBXCameraShake_Params;
	memset(&PlayGBXCameraShake_Params, 0, sizeof(PlayGBXCameraShake_Params));
	memcpy_s(&PlayGBXCameraShake_Params.NewShake, sizeof(PlayGBXCameraShake_Params.NewShake), &NewShake, sizeof(NewShake));

	uFnPlayGBXCameraShake->iNative = 0;
	uFnPlayGBXCameraShake->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPlayGBXCameraShake, &PlayGBXCameraShake_Params, nullptr);
	uFnPlayGBXCameraShake->FunctionFlags |= 0x400;
	uFnPlayGBXCameraShake->iNative = 35462;

	return PlayGBXCameraShake_Params.ReturnValue;
};

// Function GearboxFramework.GBXCameraShakeManager.ApplyShakes
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[31893])
// Parameter Info:
// struct FVector                 OutLocation                    (CPF_Parm | CPF_OutParm)
// struct FRotator                OutRotation                    (CPF_Parm | CPF_OutParm)
// float                          OutFOV                         (CPF_Parm | CPF_OutParm)

void UGBXCameraShakeManager::ApplyShakes(struct FVector& OutLocation, struct FRotator& OutRotation, float& OutFOV)
{
	static UFunction* uFnApplyShakes = nullptr;

	if (!uFnApplyShakes)
	{
		uFnApplyShakes = UFunction::FindFunction("Function GearboxFramework.GBXCameraShakeManager.ApplyShakes");
	}

	UGBXCameraShakeManager_execApplyShakes_Params ApplyShakes_Params;
	memset(&ApplyShakes_Params, 0, sizeof(ApplyShakes_Params));
	memcpy_s(&ApplyShakes_Params.OutLocation, sizeof(ApplyShakes_Params.OutLocation), &OutLocation, sizeof(OutLocation));
	memcpy_s(&ApplyShakes_Params.OutRotation, sizeof(ApplyShakes_Params.OutRotation), &OutRotation, sizeof(OutRotation));
	memcpy_s(&ApplyShakes_Params.OutFOV, sizeof(ApplyShakes_Params.OutFOV), &OutFOV, sizeof(OutFOV));

	uFnApplyShakes->iNative = 0;
	uFnApplyShakes->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnApplyShakes, &ApplyShakes_Params, nullptr);
	uFnApplyShakes->FunctionFlags |= 0x400;
	uFnApplyShakes->iNative = 31893;

	memcpy_s(&OutLocation, sizeof(OutLocation), &ApplyShakes_Params.OutLocation, sizeof(ApplyShakes_Params.OutLocation));
	memcpy_s(&OutRotation, sizeof(OutRotation), &ApplyShakes_Params.OutRotation, sizeof(ApplyShakes_Params.OutRotation));
	memcpy_s(&OutFOV, sizeof(OutFOV), &ApplyShakes_Params.OutFOV, sizeof(ApplyShakes_Params.OutFOV));
};

// Function GearboxFramework.GBXCameraShakeManager.Update
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2482])
// Parameter Info:
// float                          DeltaTime                      (CPF_Parm)

void UGBXCameraShakeManager::Update(float DeltaTime)
{
	static UFunction* uFnUpdate = nullptr;

	if (!uFnUpdate)
	{
		uFnUpdate = UFunction::FindFunction("Function GearboxFramework.GBXCameraShakeManager.Update");
	}

	UGBXCameraShakeManager_execUpdate_Params Update_Params;
	memset(&Update_Params, 0, sizeof(Update_Params));
	memcpy_s(&Update_Params.DeltaTime, sizeof(Update_Params.DeltaTime), &DeltaTime, sizeof(DeltaTime));

	uFnUpdate->iNative = 0;
	uFnUpdate->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnUpdate, &Update_Params, nullptr);
	uFnUpdate->FunctionFlags |= 0x400;
	uFnUpdate->iNative = 2482;
};

// Function GearboxFramework.GBXCameraState.LimitPitch
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34825])
// Parameter Info:
// float                          MinDegree                      (CPF_Parm)
// float                          MaxDegree                      (CPF_Parm)

void UGBXCameraState::LimitPitch(float MinDegree, float MaxDegree)
{
	static UFunction* uFnLimitPitch = nullptr;

	if (!uFnLimitPitch)
	{
		uFnLimitPitch = UFunction::FindFunction("Function GearboxFramework.GBXCameraState.LimitPitch");
	}

	UGBXCameraState_execLimitPitch_Params LimitPitch_Params;
	memset(&LimitPitch_Params, 0, sizeof(LimitPitch_Params));
	memcpy_s(&LimitPitch_Params.MinDegree, sizeof(LimitPitch_Params.MinDegree), &MinDegree, sizeof(MinDegree));
	memcpy_s(&LimitPitch_Params.MaxDegree, sizeof(LimitPitch_Params.MaxDegree), &MaxDegree, sizeof(MaxDegree));

	uFnLimitPitch->iNative = 0;
	uFnLimitPitch->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnLimitPitch, &LimitPitch_Params, nullptr);
	uFnLimitPitch->FunctionFlags |= 0x400;
	uFnLimitPitch->iNative = 34825;
};

// Function GearboxFramework.GBXCameraState.ResetNonPersistentVariables
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35719])
// Parameter Info:

void UGBXCameraState::ResetNonPersistentVariables()
{
	static UFunction* uFnResetNonPersistentVariables = nullptr;

	if (!uFnResetNonPersistentVariables)
	{
		uFnResetNonPersistentVariables = UFunction::FindFunction("Function GearboxFramework.GBXCameraState.ResetNonPersistentVariables");
	}

	UGBXCameraState_execResetNonPersistentVariables_Params ResetNonPersistentVariables_Params;
	memset(&ResetNonPersistentVariables_Params, 0, sizeof(ResetNonPersistentVariables_Params));

	uFnResetNonPersistentVariables->iNative = 0;
	uFnResetNonPersistentVariables->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnResetNonPersistentVariables, &ResetNonPersistentVariables_Params, nullptr);
	uFnResetNonPersistentVariables->FunctionFlags |= 0x400;
	uFnResetNonPersistentVariables->iNative = 35719;
};

// Function GearboxFramework.GBXCameraState.GetViewmodelFOV
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34255])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float UGBXCameraState::GetViewmodelFOV()
{
	static UFunction* uFnGetViewmodelFOV = nullptr;

	if (!uFnGetViewmodelFOV)
	{
		uFnGetViewmodelFOV = UFunction::FindFunction("Function GearboxFramework.GBXCameraState.GetViewmodelFOV");
	}

	UGBXCameraState_execGetViewmodelFOV_Params GetViewmodelFOV_Params;
	memset(&GetViewmodelFOV_Params, 0, sizeof(GetViewmodelFOV_Params));

	uFnGetViewmodelFOV->iNative = 0;
	uFnGetViewmodelFOV->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetViewmodelFOV, &GetViewmodelFOV_Params, nullptr);
	uFnGetViewmodelFOV->FunctionFlags |= 0x400;
	uFnGetViewmodelFOV->iNative = 34255;

	return GetViewmodelFOV_Params.ReturnValue;
};

// Function GearboxFramework.GBXCameraState.GetCameraFOV
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34056])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float UGBXCameraState::GetCameraFOV()
{
	static UFunction* uFnGetCameraFOV = nullptr;

	if (!uFnGetCameraFOV)
	{
		uFnGetCameraFOV = UFunction::FindFunction("Function GearboxFramework.GBXCameraState.GetCameraFOV");
	}

	UGBXCameraState_execGetCameraFOV_Params GetCameraFOV_Params;
	memset(&GetCameraFOV_Params, 0, sizeof(GetCameraFOV_Params));

	uFnGetCameraFOV->iNative = 0;
	uFnGetCameraFOV->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetCameraFOV, &GetCameraFOV_Params, nullptr);
	uFnGetCameraFOV->FunctionFlags |= 0x400;
	uFnGetCameraFOV->iNative = 34056;

	return GetCameraFOV_Params.ReturnValue;
};

// Function GearboxFramework.GBXCameraState.GetViewmodelLocationRotation
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34256])
// Parameter Info:
// const struct FVector&          DeltaLocation                  (CPF_Parm)
// const struct FRotator&         DeltaRotation                  (CPF_Parm)
// struct FVector                 Location                       (CPF_Parm | CPF_OutParm)
// struct FQuat                   Rotation                       (CPF_Parm | CPF_OutParm)

void UGBXCameraState::GetViewmodelLocationRotation(const struct FVector& DeltaLocation, const struct FRotator& DeltaRotation, struct FVector& Location, struct FQuat& Rotation)
{
	static UFunction* uFnGetViewmodelLocationRotation = nullptr;

	if (!uFnGetViewmodelLocationRotation)
	{
		uFnGetViewmodelLocationRotation = UFunction::FindFunction("Function GearboxFramework.GBXCameraState.GetViewmodelLocationRotation");
	}

	UGBXCameraState_execGetViewmodelLocationRotation_Params GetViewmodelLocationRotation_Params;
	memset(&GetViewmodelLocationRotation_Params, 0, sizeof(GetViewmodelLocationRotation_Params));
	memcpy_s(&GetViewmodelLocationRotation_Params.DeltaLocation, sizeof(GetViewmodelLocationRotation_Params.DeltaLocation), &DeltaLocation, sizeof(DeltaLocation));
	memcpy_s(&GetViewmodelLocationRotation_Params.DeltaRotation, sizeof(GetViewmodelLocationRotation_Params.DeltaRotation), &DeltaRotation, sizeof(DeltaRotation));
	memcpy_s(&GetViewmodelLocationRotation_Params.Location, sizeof(GetViewmodelLocationRotation_Params.Location), &Location, sizeof(Location));
	memcpy_s(&GetViewmodelLocationRotation_Params.Rotation, sizeof(GetViewmodelLocationRotation_Params.Rotation), &Rotation, sizeof(Rotation));

	uFnGetViewmodelLocationRotation->iNative = 0;
	uFnGetViewmodelLocationRotation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetViewmodelLocationRotation, &GetViewmodelLocationRotation_Params, nullptr);
	uFnGetViewmodelLocationRotation->FunctionFlags |= 0x400;
	uFnGetViewmodelLocationRotation->iNative = 34256;

	memcpy_s(&Location, sizeof(Location), &GetViewmodelLocationRotation_Params.Location, sizeof(GetViewmodelLocationRotation_Params.Location));
	memcpy_s(&Rotation, sizeof(Rotation), &GetViewmodelLocationRotation_Params.Rotation, sizeof(GetViewmodelLocationRotation_Params.Rotation));
};

// Function GearboxFramework.GBXCameraState.GetCameraLocationRotation
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34057])
// Parameter Info:
// struct FVector                 Location                       (CPF_Parm | CPF_OutParm)
// struct FRotator                Rotation                       (CPF_Parm | CPF_OutParm)

void UGBXCameraState::GetCameraLocationRotation(struct FVector& Location, struct FRotator& Rotation)
{
	static UFunction* uFnGetCameraLocationRotation = nullptr;

	if (!uFnGetCameraLocationRotation)
	{
		uFnGetCameraLocationRotation = UFunction::FindFunction("Function GearboxFramework.GBXCameraState.GetCameraLocationRotation");
	}

	UGBXCameraState_execGetCameraLocationRotation_Params GetCameraLocationRotation_Params;
	memset(&GetCameraLocationRotation_Params, 0, sizeof(GetCameraLocationRotation_Params));
	memcpy_s(&GetCameraLocationRotation_Params.Location, sizeof(GetCameraLocationRotation_Params.Location), &Location, sizeof(Location));
	memcpy_s(&GetCameraLocationRotation_Params.Rotation, sizeof(GetCameraLocationRotation_Params.Rotation), &Rotation, sizeof(Rotation));

	uFnGetCameraLocationRotation->iNative = 0;
	uFnGetCameraLocationRotation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetCameraLocationRotation, &GetCameraLocationRotation_Params, nullptr);
	uFnGetCameraLocationRotation->FunctionFlags |= 0x400;
	uFnGetCameraLocationRotation->iNative = 34057;

	memcpy_s(&Location, sizeof(Location), &GetCameraLocationRotation_Params.Location, sizeof(GetCameraLocationRotation_Params.Location));
	memcpy_s(&Rotation, sizeof(Rotation), &GetCameraLocationRotation_Params.Rotation, sizeof(GetCameraLocationRotation_Params.Rotation));
};

// Function GearboxFramework.GBXCameraState.GetBaseLocationRotation
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34050])
// Parameter Info:
// struct FVector                 Location                       (CPF_Parm | CPF_OutParm)
// struct FRotator                Rotation                       (CPF_Parm | CPF_OutParm)

void UGBXCameraState::GetBaseLocationRotation(struct FVector& Location, struct FRotator& Rotation)
{
	static UFunction* uFnGetBaseLocationRotation = nullptr;

	if (!uFnGetBaseLocationRotation)
	{
		uFnGetBaseLocationRotation = UFunction::FindFunction("Function GearboxFramework.GBXCameraState.GetBaseLocationRotation");
	}

	UGBXCameraState_execGetBaseLocationRotation_Params GetBaseLocationRotation_Params;
	memset(&GetBaseLocationRotation_Params, 0, sizeof(GetBaseLocationRotation_Params));
	memcpy_s(&GetBaseLocationRotation_Params.Location, sizeof(GetBaseLocationRotation_Params.Location), &Location, sizeof(Location));
	memcpy_s(&GetBaseLocationRotation_Params.Rotation, sizeof(GetBaseLocationRotation_Params.Rotation), &Rotation, sizeof(Rotation));

	uFnGetBaseLocationRotation->iNative = 0;
	uFnGetBaseLocationRotation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetBaseLocationRotation, &GetBaseLocationRotation_Params, nullptr);
	uFnGetBaseLocationRotation->FunctionFlags |= 0x400;
	uFnGetBaseLocationRotation->iNative = 34050;

	memcpy_s(&Location, sizeof(Location), &GetBaseLocationRotation_Params.Location, sizeof(GetBaseLocationRotation_Params.Location));
	memcpy_s(&Rotation, sizeof(Rotation), &GetBaseLocationRotation_Params.Rotation, sizeof(GetBaseLocationRotation_Params.Rotation));
};

// Function GearboxFramework.GBXDangerComponent.SetEnabled
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[28802])
// Parameter Info:
// bool                           bNewEnabled                    (CPF_Parm)

void UGBXDangerComponent::SetEnabled(bool bNewEnabled)
{
	static UFunction* uFnSetEnabled = nullptr;

	if (!uFnSetEnabled)
	{
		uFnSetEnabled = UFunction::FindFunction("Function GearboxFramework.GBXDangerComponent.SetEnabled");
	}

	UGBXDangerComponent_execSetEnabled_Params SetEnabled_Params;
	memset(&SetEnabled_Params, 0, sizeof(SetEnabled_Params));
	SetEnabled_Params.bNewEnabled = bNewEnabled;

	uFnSetEnabled->iNative = 0;
	uFnSetEnabled->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetEnabled, &SetEnabled_Params, nullptr);
	uFnSetEnabled->FunctionFlags |= 0x400;
	uFnSetEnabled->iNative = 28802;
};

// Function GearboxFramework.GBXInfluenceInfo_Boundary.InitPoints
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[24595])
// Parameter Info:
// int32_t                        NumPoints                      (CPF_Const | CPF_Parm)

void UGBXInfluenceInfo_Boundary::InitPoints(int32_t NumPoints)
{
	static UFunction* uFnInitPoints = nullptr;

	if (!uFnInitPoints)
	{
		uFnInitPoints = UFunction::FindFunction("Function GearboxFramework.GBXInfluenceInfo_Boundary.InitPoints");
	}

	UGBXInfluenceInfo_Boundary_execInitPoints_Params InitPoints_Params;
	memset(&InitPoints_Params, 0, sizeof(InitPoints_Params));
	memcpy_s(&InitPoints_Params.NumPoints, sizeof(InitPoints_Params.NumPoints), &NumPoints, sizeof(NumPoints));

	uFnInitPoints->iNative = 0;
	uFnInitPoints->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInitPoints, &InitPoints_Params, nullptr);
	uFnInitPoints->FunctionFlags |= 0x400;
	uFnInitPoints->iNative = 24595;
};

// Function GearboxFramework.GBXInfluenceInfo_Combine.GetOperand2
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34162])
// Parameter Info:
// class UGBXInfluenceInfo*       ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UGBXInfluenceInfo* UGBXInfluenceInfo_Combine::GetOperand2()
{
	static UFunction* uFnGetOperand2 = nullptr;

	if (!uFnGetOperand2)
	{
		uFnGetOperand2 = UFunction::FindFunction("Function GearboxFramework.GBXInfluenceInfo_Combine.GetOperand2");
	}

	UGBXInfluenceInfo_Combine_execGetOperand2_Params GetOperand2_Params;
	memset(&GetOperand2_Params, 0, sizeof(GetOperand2_Params));

	uFnGetOperand2->iNative = 0;
	uFnGetOperand2->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetOperand2, &GetOperand2_Params, nullptr);
	uFnGetOperand2->FunctionFlags |= 0x400;
	uFnGetOperand2->iNative = 34162;

	return GetOperand2_Params.ReturnValue;
};

// Function GearboxFramework.GBXInfluenceInfo_Combine.GetOperand1
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34161])
// Parameter Info:
// class UGBXInfluenceInfo*       ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UGBXInfluenceInfo* UGBXInfluenceInfo_Combine::GetOperand1()
{
	static UFunction* uFnGetOperand1 = nullptr;

	if (!uFnGetOperand1)
	{
		uFnGetOperand1 = UFunction::FindFunction("Function GearboxFramework.GBXInfluenceInfo_Combine.GetOperand1");
	}

	UGBXInfluenceInfo_Combine_execGetOperand1_Params GetOperand1_Params;
	memset(&GetOperand1_Params, 0, sizeof(GetOperand1_Params));

	uFnGetOperand1->iNative = 0;
	uFnGetOperand1->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetOperand1, &GetOperand1_Params, nullptr);
	uFnGetOperand1->FunctionFlags |= 0x400;
	uFnGetOperand1->iNative = 34161;

	return GetOperand1_Params.ReturnValue;
};

// Function GearboxFramework.GBXInfluenceInfo_Combine.GetValue
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[24017])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        PointIdx                       (CPF_Const | CPF_Parm)

float UGBXInfluenceInfo_Combine::GetValue(int32_t PointIdx)
{
	static UFunction* uFnGetValue = nullptr;

	if (!uFnGetValue)
	{
		uFnGetValue = UFunction::FindFunction("Function GearboxFramework.GBXInfluenceInfo_Combine.GetValue");
	}

	UGBXInfluenceInfo_Combine_execGetValue_Params GetValue_Params;
	memset(&GetValue_Params, 0, sizeof(GetValue_Params));
	memcpy_s(&GetValue_Params.PointIdx, sizeof(GetValue_Params.PointIdx), &PointIdx, sizeof(PointIdx));

	uFnGetValue->iNative = 0;
	uFnGetValue->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetValue, &GetValue_Params, nullptr);
	uFnGetValue->FunctionFlags |= 0x400;
	uFnGetValue->iNative = 24017;

	return GetValue_Params.ReturnValue;
};

// Function GearboxFramework.GBXInfluenceInfo_Combine.InitPoints
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[24595])
// Parameter Info:
// int32_t                        NumPoints                      (CPF_Const | CPF_Parm)

void UGBXInfluenceInfo_Combine::InitPoints(int32_t NumPoints)
{
	static UFunction* uFnInitPoints = nullptr;

	if (!uFnInitPoints)
	{
		uFnInitPoints = UFunction::FindFunction("Function GearboxFramework.GBXInfluenceInfo_Combine.InitPoints");
	}

	UGBXInfluenceInfo_Combine_execInitPoints_Params InitPoints_Params;
	memset(&InitPoints_Params, 0, sizeof(InitPoints_Params));
	memcpy_s(&InitPoints_Params.NumPoints, sizeof(InitPoints_Params.NumPoints), &NumPoints, sizeof(NumPoints));

	uFnInitPoints->iNative = 0;
	uFnInitPoints->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInitPoints, &InitPoints_Params, nullptr);
	uFnInitPoints->FunctionFlags |= 0x400;
	uFnInitPoints->iNative = 24595;
};

// Function GearboxFramework.GBXInfluenceInfo_Danger.DangerInUnitRadius
// [0x00424401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[33015])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// float                          Units                          (CPF_Const | CPF_Parm)
// const struct FName&            Type                           (CPF_Const | CPF_OptionalParm | CPF_Parm)
// struct FInfluencePointRef      InfPoint                       (CPF_Const | CPF_Parm | CPF_OutParm)

bool UGBXInfluenceInfo_Danger::DangerInUnitRadius(float Units, const struct FName& Type, struct FInfluencePointRef& InfPoint)
{
	static UFunction* uFnDangerInUnitRadius = nullptr;

	if (!uFnDangerInUnitRadius)
	{
		uFnDangerInUnitRadius = UFunction::FindFunction("Function GearboxFramework.GBXInfluenceInfo_Danger.DangerInUnitRadius");
	}

	UGBXInfluenceInfo_Danger_execDangerInUnitRadius_Params DangerInUnitRadius_Params;
	memset(&DangerInUnitRadius_Params, 0, sizeof(DangerInUnitRadius_Params));
	memcpy_s(&DangerInUnitRadius_Params.Units, sizeof(DangerInUnitRadius_Params.Units), &Units, sizeof(Units));
	memcpy_s(&DangerInUnitRadius_Params.Type, sizeof(DangerInUnitRadius_Params.Type), &Type, sizeof(Type));
	memcpy_s(&DangerInUnitRadius_Params.InfPoint, sizeof(DangerInUnitRadius_Params.InfPoint), &InfPoint, sizeof(InfPoint));

	uFnDangerInUnitRadius->iNative = 0;
	uFnDangerInUnitRadius->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnDangerInUnitRadius, &DangerInUnitRadius_Params, nullptr);
	uFnDangerInUnitRadius->FunctionFlags |= 0x400;
	uFnDangerInUnitRadius->iNative = 33015;

	memcpy_s(&InfPoint, sizeof(InfPoint), &DangerInUnitRadius_Params.InfPoint, sizeof(DangerInUnitRadius_Params.InfPoint));

	return DangerInUnitRadius_Params.ReturnValue;
};

// Function GearboxFramework.GBXInfluenceInfo_Danger.DangerInNodeRadius
// [0x00424401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[33014])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        Nodes                          (CPF_Const | CPF_Parm)
// const struct FName&            Type                           (CPF_Const | CPF_OptionalParm | CPF_Parm)
// struct FInfluencePointRef      InfPoint                       (CPF_Const | CPF_Parm | CPF_OutParm)

bool UGBXInfluenceInfo_Danger::DangerInNodeRadius(int32_t Nodes, const struct FName& Type, struct FInfluencePointRef& InfPoint)
{
	static UFunction* uFnDangerInNodeRadius = nullptr;

	if (!uFnDangerInNodeRadius)
	{
		uFnDangerInNodeRadius = UFunction::FindFunction("Function GearboxFramework.GBXInfluenceInfo_Danger.DangerInNodeRadius");
	}

	UGBXInfluenceInfo_Danger_execDangerInNodeRadius_Params DangerInNodeRadius_Params;
	memset(&DangerInNodeRadius_Params, 0, sizeof(DangerInNodeRadius_Params));
	memcpy_s(&DangerInNodeRadius_Params.Nodes, sizeof(DangerInNodeRadius_Params.Nodes), &Nodes, sizeof(Nodes));
	memcpy_s(&DangerInNodeRadius_Params.Type, sizeof(DangerInNodeRadius_Params.Type), &Type, sizeof(Type));
	memcpy_s(&DangerInNodeRadius_Params.InfPoint, sizeof(DangerInNodeRadius_Params.InfPoint), &InfPoint, sizeof(InfPoint));

	uFnDangerInNodeRadius->iNative = 0;
	uFnDangerInNodeRadius->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnDangerInNodeRadius, &DangerInNodeRadius_Params, nullptr);
	uFnDangerInNodeRadius->FunctionFlags |= 0x400;
	uFnDangerInNodeRadius->iNative = 33014;

	memcpy_s(&InfPoint, sizeof(InfPoint), &DangerInNodeRadius_Params.InfPoint, sizeof(DangerInNodeRadius_Params.InfPoint));

	return DangerInNodeRadius_Params.ReturnValue;
};

// Function GearboxFramework.GBXInfluenceInfo_Danger.UnregisterDanger
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36602])
// Parameter Info:
// class UGBXDangerComponent*     OldDanger                      (CPF_Parm | CPF_EditInline)

void UGBXInfluenceInfo_Danger::UnregisterDanger(class UGBXDangerComponent* OldDanger)
{
	static UFunction* uFnUnregisterDanger = nullptr;

	if (!uFnUnregisterDanger)
	{
		uFnUnregisterDanger = UFunction::FindFunction("Function GearboxFramework.GBXInfluenceInfo_Danger.UnregisterDanger");
	}

	UGBXInfluenceInfo_Danger_execUnregisterDanger_Params UnregisterDanger_Params;
	memset(&UnregisterDanger_Params, 0, sizeof(UnregisterDanger_Params));
	memcpy_s(&UnregisterDanger_Params.OldDanger, sizeof(UnregisterDanger_Params.OldDanger), &OldDanger, sizeof(OldDanger));

	uFnUnregisterDanger->iNative = 0;
	uFnUnregisterDanger->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnUnregisterDanger, &UnregisterDanger_Params, nullptr);
	uFnUnregisterDanger->FunctionFlags |= 0x400;
	uFnUnregisterDanger->iNative = 36602;
};

// Function GearboxFramework.GBXInfluenceInfo_Danger.RegisterDanger
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35632])
// Parameter Info:
// class UGBXDangerComponent*     NewDanger                      (CPF_Parm | CPF_EditInline)

void UGBXInfluenceInfo_Danger::RegisterDanger(class UGBXDangerComponent* NewDanger)
{
	static UFunction* uFnRegisterDanger = nullptr;

	if (!uFnRegisterDanger)
	{
		uFnRegisterDanger = UFunction::FindFunction("Function GearboxFramework.GBXInfluenceInfo_Danger.RegisterDanger");
	}

	UGBXInfluenceInfo_Danger_execRegisterDanger_Params RegisterDanger_Params;
	memset(&RegisterDanger_Params, 0, sizeof(RegisterDanger_Params));
	memcpy_s(&RegisterDanger_Params.NewDanger, sizeof(RegisterDanger_Params.NewDanger), &NewDanger, sizeof(NewDanger));

	uFnRegisterDanger->iNative = 0;
	uFnRegisterDanger->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRegisterDanger, &RegisterDanger_Params, nullptr);
	uFnRegisterDanger->FunctionFlags |= 0x400;
	uFnRegisterDanger->iNative = 35632;
};

// Function GearboxFramework.GBXInfluenceInfo_Danger.GetValue
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[24017])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        PointIdx                       (CPF_Const | CPF_Parm)

float UGBXInfluenceInfo_Danger::GetValue(int32_t PointIdx)
{
	static UFunction* uFnGetValue = nullptr;

	if (!uFnGetValue)
	{
		uFnGetValue = UFunction::FindFunction("Function GearboxFramework.GBXInfluenceInfo_Danger.GetValue");
	}

	UGBXInfluenceInfo_Danger_execGetValue_Params GetValue_Params;
	memset(&GetValue_Params, 0, sizeof(GetValue_Params));
	memcpy_s(&GetValue_Params.PointIdx, sizeof(GetValue_Params.PointIdx), &PointIdx, sizeof(PointIdx));

	uFnGetValue->iNative = 0;
	uFnGetValue->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetValue, &GetValue_Params, nullptr);
	uFnGetValue->FunctionFlags |= 0x400;
	uFnGetValue->iNative = 24017;

	return GetValue_Params.ReturnValue;
};

// Function GearboxFramework.GBXInfluenceInfo_Danger.InitPoints
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[24595])
// Parameter Info:
// int32_t                        NumPoints                      (CPF_Const | CPF_Parm)

void UGBXInfluenceInfo_Danger::InitPoints(int32_t NumPoints)
{
	static UFunction* uFnInitPoints = nullptr;

	if (!uFnInitPoints)
	{
		uFnInitPoints = UFunction::FindFunction("Function GearboxFramework.GBXInfluenceInfo_Danger.InitPoints");
	}

	UGBXInfluenceInfo_Danger_execInitPoints_Params InitPoints_Params;
	memset(&InitPoints_Params, 0, sizeof(InitPoints_Params));
	memcpy_s(&InitPoints_Params.NumPoints, sizeof(InitPoints_Params.NumPoints), &NumPoints, sizeof(NumPoints));

	uFnInitPoints->iNative = 0;
	uFnInitPoints->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInitPoints, &InitPoints_Params, nullptr);
	uFnInitPoints->FunctionFlags |= 0x400;
	uFnInitPoints->iNative = 24595;
};

// Function GearboxFramework.GBXInfluenceInfo_Danger.Prepare
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[27641])
// Parameter Info:

void UGBXInfluenceInfo_Danger::Prepare()
{
	static UFunction* uFnPrepare = nullptr;

	if (!uFnPrepare)
	{
		uFnPrepare = UFunction::FindFunction("Function GearboxFramework.GBXInfluenceInfo_Danger.Prepare");
	}

	UGBXInfluenceInfo_Danger_execPrepare_Params Prepare_Params;
	memset(&Prepare_Params, 0, sizeof(Prepare_Params));

	uFnPrepare->iNative = 0;
	uFnPrepare->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPrepare, &Prepare_Params, nullptr);
	uFnPrepare->FunctionFlags |= 0x400;
	uFnPrepare->iNative = 27641;
};

// Function GearboxFramework.GBXInfluenceInfo_Danger.Update
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2482])
// Parameter Info:

void UGBXInfluenceInfo_Danger::Update()
{
	static UFunction* uFnUpdate = nullptr;

	if (!uFnUpdate)
	{
		uFnUpdate = UFunction::FindFunction("Function GearboxFramework.GBXInfluenceInfo_Danger.Update");
	}

	UGBXInfluenceInfo_Danger_execUpdate_Params Update_Params;
	memset(&Update_Params, 0, sizeof(Update_Params));

	uFnUpdate->iNative = 0;
	uFnUpdate->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnUpdate, &Update_Params, nullptr);
	uFnUpdate->FunctionFlags |= 0x400;
	uFnUpdate->iNative = 2482;
};

// Function GearboxFramework.GBXInfluenceInfo_Debug.Update
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2482])
// Parameter Info:

void UGBXInfluenceInfo_Debug::Update()
{
	static UFunction* uFnUpdate = nullptr;

	if (!uFnUpdate)
	{
		uFnUpdate = UFunction::FindFunction("Function GearboxFramework.GBXInfluenceInfo_Debug.Update");
	}

	UGBXInfluenceInfo_Debug_execUpdate_Params Update_Params;
	memset(&Update_Params, 0, sizeof(Update_Params));

	uFnUpdate->iNative = 0;
	uFnUpdate->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnUpdate, &Update_Params, nullptr);
	uFnUpdate->FunctionFlags |= 0x400;
	uFnUpdate->iNative = 2482;
};

// Function GearboxFramework.GBXInfluenceInfo_LineOfSight.CheckPoints
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32729])
// Parameter Info:
// ELineOfSightInfo               ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        Point1                         (CPF_Parm)
// int32_t                        Point2                         (CPF_Parm)

ELineOfSightInfo UGBXInfluenceInfo_LineOfSight::CheckPoints(int32_t Point1, int32_t Point2)
{
	static UFunction* uFnCheckPoints = nullptr;

	if (!uFnCheckPoints)
	{
		uFnCheckPoints = UFunction::FindFunction("Function GearboxFramework.GBXInfluenceInfo_LineOfSight.CheckPoints");
	}

	UGBXInfluenceInfo_LineOfSight_execCheckPoints_Params CheckPoints_Params;
	memset(&CheckPoints_Params, 0, sizeof(CheckPoints_Params));
	memcpy_s(&CheckPoints_Params.Point1, sizeof(CheckPoints_Params.Point1), &Point1, sizeof(Point1));
	memcpy_s(&CheckPoints_Params.Point2, sizeof(CheckPoints_Params.Point2), &Point2, sizeof(Point2));

	uFnCheckPoints->iNative = 0;
	uFnCheckPoints->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCheckPoints, &CheckPoints_Params, nullptr);
	uFnCheckPoints->FunctionFlags |= 0x400;
	uFnCheckPoints->iNative = 32729;

	return CheckPoints_Params.ReturnValue;
};

// Function GearboxFramework.GBXInfluenceInfo_LineOfSight.InitPoints
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[24595])
// Parameter Info:
// int32_t                        NumPoints                      (CPF_Const | CPF_Parm)

void UGBXInfluenceInfo_LineOfSight::InitPoints(int32_t NumPoints)
{
	static UFunction* uFnInitPoints = nullptr;

	if (!uFnInitPoints)
	{
		uFnInitPoints = UFunction::FindFunction("Function GearboxFramework.GBXInfluenceInfo_LineOfSight.InitPoints");
	}

	UGBXInfluenceInfo_LineOfSight_execInitPoints_Params InitPoints_Params;
	memset(&InitPoints_Params, 0, sizeof(InitPoints_Params));
	memcpy_s(&InitPoints_Params.NumPoints, sizeof(InitPoints_Params.NumPoints), &NumPoints, sizeof(NumPoints));

	uFnInitPoints->iNative = 0;
	uFnInitPoints->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInitPoints, &InitPoints_Params, nullptr);
	uFnInitPoints->FunctionFlags |= 0x400;
	uFnInitPoints->iNative = 24595;
};

// Function GearboxFramework.GBXInfluenceInfo_Occupancy.IsUnitRadiusOccupied
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34700])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// float                          Units                          (CPF_Const | CPF_Parm)
// class UPathingObstacleInfo*    TestingObstacle                (CPF_Parm)
// class UExpressionEvaluator*    Condition                      (CPF_Parm)
// struct FInfluencePointRef      InfPoint                       (CPF_Const | CPF_Parm | CPF_OutParm)

bool UGBXInfluenceInfo_Occupancy::IsUnitRadiusOccupied(float Units, class UPathingObstacleInfo* TestingObstacle, class UExpressionEvaluator* Condition, struct FInfluencePointRef& InfPoint)
{
	static UFunction* uFnIsUnitRadiusOccupied = nullptr;

	if (!uFnIsUnitRadiusOccupied)
	{
		uFnIsUnitRadiusOccupied = UFunction::FindFunction("Function GearboxFramework.GBXInfluenceInfo_Occupancy.IsUnitRadiusOccupied");
	}

	UGBXInfluenceInfo_Occupancy_execIsUnitRadiusOccupied_Params IsUnitRadiusOccupied_Params;
	memset(&IsUnitRadiusOccupied_Params, 0, sizeof(IsUnitRadiusOccupied_Params));
	memcpy_s(&IsUnitRadiusOccupied_Params.Units, sizeof(IsUnitRadiusOccupied_Params.Units), &Units, sizeof(Units));
	memcpy_s(&IsUnitRadiusOccupied_Params.TestingObstacle, sizeof(IsUnitRadiusOccupied_Params.TestingObstacle), &TestingObstacle, sizeof(TestingObstacle));
	memcpy_s(&IsUnitRadiusOccupied_Params.Condition, sizeof(IsUnitRadiusOccupied_Params.Condition), &Condition, sizeof(Condition));
	memcpy_s(&IsUnitRadiusOccupied_Params.InfPoint, sizeof(IsUnitRadiusOccupied_Params.InfPoint), &InfPoint, sizeof(InfPoint));

	uFnIsUnitRadiusOccupied->iNative = 0;
	uFnIsUnitRadiusOccupied->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsUnitRadiusOccupied, &IsUnitRadiusOccupied_Params, nullptr);
	uFnIsUnitRadiusOccupied->FunctionFlags |= 0x400;
	uFnIsUnitRadiusOccupied->iNative = 34700;

	memcpy_s(&InfPoint, sizeof(InfPoint), &IsUnitRadiusOccupied_Params.InfPoint, sizeof(IsUnitRadiusOccupied_Params.InfPoint));

	return IsUnitRadiusOccupied_Params.ReturnValue;
};

// Function GearboxFramework.GBXInfluenceInfo_Occupancy.IsNodeRadiusOccupied
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34676])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        Nodes                          (CPF_Const | CPF_Parm)
// class UPathingObstacleInfo*    TestingObstacle                (CPF_Parm)
// class UExpressionEvaluator*    Condition                      (CPF_Parm)
// struct FInfluencePointRef      InfPoint                       (CPF_Const | CPF_Parm | CPF_OutParm)

bool UGBXInfluenceInfo_Occupancy::IsNodeRadiusOccupied(int32_t Nodes, class UPathingObstacleInfo* TestingObstacle, class UExpressionEvaluator* Condition, struct FInfluencePointRef& InfPoint)
{
	static UFunction* uFnIsNodeRadiusOccupied = nullptr;

	if (!uFnIsNodeRadiusOccupied)
	{
		uFnIsNodeRadiusOccupied = UFunction::FindFunction("Function GearboxFramework.GBXInfluenceInfo_Occupancy.IsNodeRadiusOccupied");
	}

	UGBXInfluenceInfo_Occupancy_execIsNodeRadiusOccupied_Params IsNodeRadiusOccupied_Params;
	memset(&IsNodeRadiusOccupied_Params, 0, sizeof(IsNodeRadiusOccupied_Params));
	memcpy_s(&IsNodeRadiusOccupied_Params.Nodes, sizeof(IsNodeRadiusOccupied_Params.Nodes), &Nodes, sizeof(Nodes));
	memcpy_s(&IsNodeRadiusOccupied_Params.TestingObstacle, sizeof(IsNodeRadiusOccupied_Params.TestingObstacle), &TestingObstacle, sizeof(TestingObstacle));
	memcpy_s(&IsNodeRadiusOccupied_Params.Condition, sizeof(IsNodeRadiusOccupied_Params.Condition), &Condition, sizeof(Condition));
	memcpy_s(&IsNodeRadiusOccupied_Params.InfPoint, sizeof(IsNodeRadiusOccupied_Params.InfPoint), &InfPoint, sizeof(InfPoint));

	uFnIsNodeRadiusOccupied->iNative = 0;
	uFnIsNodeRadiusOccupied->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsNodeRadiusOccupied, &IsNodeRadiusOccupied_Params, nullptr);
	uFnIsNodeRadiusOccupied->FunctionFlags |= 0x400;
	uFnIsNodeRadiusOccupied->iNative = 34676;

	memcpy_s(&InfPoint, sizeof(InfPoint), &IsNodeRadiusOccupied_Params.InfPoint, sizeof(IsNodeRadiusOccupied_Params.InfPoint));

	return IsNodeRadiusOccupied_Params.ReturnValue;
};

// Function GearboxFramework.GBXInfluenceInfo_Occupancy.SubtractObstacle
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36336])
// Parameter Info:
// class UPathingObstacleInfo*    Obstacle                       (CPF_Parm)

void UGBXInfluenceInfo_Occupancy::SubtractObstacle(class UPathingObstacleInfo* Obstacle)
{
	static UFunction* uFnSubtractObstacle = nullptr;

	if (!uFnSubtractObstacle)
	{
		uFnSubtractObstacle = UFunction::FindFunction("Function GearboxFramework.GBXInfluenceInfo_Occupancy.SubtractObstacle");
	}

	UGBXInfluenceInfo_Occupancy_execSubtractObstacle_Params SubtractObstacle_Params;
	memset(&SubtractObstacle_Params, 0, sizeof(SubtractObstacle_Params));
	memcpy_s(&SubtractObstacle_Params.Obstacle, sizeof(SubtractObstacle_Params.Obstacle), &Obstacle, sizeof(Obstacle));

	uFnSubtractObstacle->iNative = 0;
	uFnSubtractObstacle->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSubtractObstacle, &SubtractObstacle_Params, nullptr);
	uFnSubtractObstacle->FunctionFlags |= 0x400;
	uFnSubtractObstacle->iNative = 36336;
};

// Function GearboxFramework.GBXInfluenceInfo_Occupancy.ResetObstacle
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35720])
// Parameter Info:
// class UPathingObstacleInfo*    Obstacle                       (CPF_Parm)

void UGBXInfluenceInfo_Occupancy::ResetObstacle(class UPathingObstacleInfo* Obstacle)
{
	static UFunction* uFnResetObstacle = nullptr;

	if (!uFnResetObstacle)
	{
		uFnResetObstacle = UFunction::FindFunction("Function GearboxFramework.GBXInfluenceInfo_Occupancy.ResetObstacle");
	}

	UGBXInfluenceInfo_Occupancy_execResetObstacle_Params ResetObstacle_Params;
	memset(&ResetObstacle_Params, 0, sizeof(ResetObstacle_Params));
	memcpy_s(&ResetObstacle_Params.Obstacle, sizeof(ResetObstacle_Params.Obstacle), &Obstacle, sizeof(Obstacle));

	uFnResetObstacle->iNative = 0;
	uFnResetObstacle->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnResetObstacle, &ResetObstacle_Params, nullptr);
	uFnResetObstacle->FunctionFlags |= 0x400;
	uFnResetObstacle->iNative = 35720;
};

// Function GearboxFramework.GBXInfluenceInfo_Occupancy.AddObstacle
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[31678])
// Parameter Info:
// class UPathingObstacleInfo*    Obstacle                       (CPF_Parm)

void UGBXInfluenceInfo_Occupancy::AddObstacle(class UPathingObstacleInfo* Obstacle)
{
	static UFunction* uFnAddObstacle = nullptr;

	if (!uFnAddObstacle)
	{
		uFnAddObstacle = UFunction::FindFunction("Function GearboxFramework.GBXInfluenceInfo_Occupancy.AddObstacle");
	}

	UGBXInfluenceInfo_Occupancy_execAddObstacle_Params AddObstacle_Params;
	memset(&AddObstacle_Params, 0, sizeof(AddObstacle_Params));
	memcpy_s(&AddObstacle_Params.Obstacle, sizeof(AddObstacle_Params.Obstacle), &Obstacle, sizeof(Obstacle));

	uFnAddObstacle->iNative = 0;
	uFnAddObstacle->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnAddObstacle, &AddObstacle_Params, nullptr);
	uFnAddObstacle->FunctionFlags |= 0x400;
	uFnAddObstacle->iNative = 31678;
};

// Function GearboxFramework.GBXInfluenceInfo_Occupancy.InitPoints
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[24595])
// Parameter Info:
// int32_t                        NumPoints                      (CPF_Const | CPF_Parm)

void UGBXInfluenceInfo_Occupancy::InitPoints(int32_t NumPoints)
{
	static UFunction* uFnInitPoints = nullptr;

	if (!uFnInitPoints)
	{
		uFnInitPoints = UFunction::FindFunction("Function GearboxFramework.GBXInfluenceInfo_Occupancy.InitPoints");
	}

	UGBXInfluenceInfo_Occupancy_execInitPoints_Params InitPoints_Params;
	memset(&InitPoints_Params, 0, sizeof(InitPoints_Params));
	memcpy_s(&InitPoints_Params.NumPoints, sizeof(InitPoints_Params.NumPoints), &NumPoints, sizeof(NumPoints));

	uFnInitPoints->iNative = 0;
	uFnInitPoints->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInitPoints, &InitPoints_Params, nullptr);
	uFnInitPoints->FunctionFlags |= 0x400;
	uFnInitPoints->iNative = 24595;
};

// Function GearboxFramework.GBXInfluenceInfo_Occupancy.Update
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2482])
// Parameter Info:

void UGBXInfluenceInfo_Occupancy::Update()
{
	static UFunction* uFnUpdate = nullptr;

	if (!uFnUpdate)
	{
		uFnUpdate = UFunction::FindFunction("Function GearboxFramework.GBXInfluenceInfo_Occupancy.Update");
	}

	UGBXInfluenceInfo_Occupancy_execUpdate_Params Update_Params;
	memset(&Update_Params, 0, sizeof(Update_Params));

	uFnUpdate->iNative = 0;
	uFnUpdate->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnUpdate, &Update_Params, nullptr);
	uFnUpdate->FunctionFlags |= 0x400;
	uFnUpdate->iNative = 2482;
};

// Function GearboxFramework.GBXInfluenceInfo_Search.ClearVisiblePointsInCone
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[32763])
// Parameter Info:
// const struct FInfluencePointRef& InfPoint                       (CPF_Const | CPF_Parm)
// float                          ConeDist                       (CPF_Parm)
// float                          ConeAngle                      (CPF_Parm)
// struct FVector                 ConeDir                        (CPF_Const | CPF_Parm | CPF_OutParm)

void UGBXInfluenceInfo_Search::ClearVisiblePointsInCone(const struct FInfluencePointRef& InfPoint, float ConeDist, float ConeAngle, struct FVector& ConeDir)
{
	static UFunction* uFnClearVisiblePointsInCone = nullptr;

	if (!uFnClearVisiblePointsInCone)
	{
		uFnClearVisiblePointsInCone = UFunction::FindFunction("Function GearboxFramework.GBXInfluenceInfo_Search.ClearVisiblePointsInCone");
	}

	UGBXInfluenceInfo_Search_execClearVisiblePointsInCone_Params ClearVisiblePointsInCone_Params;
	memset(&ClearVisiblePointsInCone_Params, 0, sizeof(ClearVisiblePointsInCone_Params));
	memcpy_s(&ClearVisiblePointsInCone_Params.InfPoint, sizeof(ClearVisiblePointsInCone_Params.InfPoint), &InfPoint, sizeof(InfPoint));
	memcpy_s(&ClearVisiblePointsInCone_Params.ConeDist, sizeof(ClearVisiblePointsInCone_Params.ConeDist), &ConeDist, sizeof(ConeDist));
	memcpy_s(&ClearVisiblePointsInCone_Params.ConeAngle, sizeof(ClearVisiblePointsInCone_Params.ConeAngle), &ConeAngle, sizeof(ConeAngle));
	memcpy_s(&ClearVisiblePointsInCone_Params.ConeDir, sizeof(ClearVisiblePointsInCone_Params.ConeDir), &ConeDir, sizeof(ConeDir));

	uFnClearVisiblePointsInCone->iNative = 0;
	uFnClearVisiblePointsInCone->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnClearVisiblePointsInCone, &ClearVisiblePointsInCone_Params, nullptr);
	uFnClearVisiblePointsInCone->FunctionFlags |= 0x400;
	uFnClearVisiblePointsInCone->iNative = 32763;

	memcpy_s(&ConeDir, sizeof(ConeDir), &ClearVisiblePointsInCone_Params.ConeDir, sizeof(ClearVisiblePointsInCone_Params.ConeDir));
};

// Function GearboxFramework.GBXInfluenceInfo_Search.GetBestPoint
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34053])
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// float                          Radius                         (CPF_Const | CPF_Parm)
// struct FVector                 Location                       (CPF_Const | CPF_Parm | CPF_OutParm)

int32_t UGBXInfluenceInfo_Search::GetBestPoint(float Radius, struct FVector& Location)
{
	static UFunction* uFnGetBestPoint = nullptr;

	if (!uFnGetBestPoint)
	{
		uFnGetBestPoint = UFunction::FindFunction("Function GearboxFramework.GBXInfluenceInfo_Search.GetBestPoint");
	}

	UGBXInfluenceInfo_Search_execGetBestPoint_Params GetBestPoint_Params;
	memset(&GetBestPoint_Params, 0, sizeof(GetBestPoint_Params));
	memcpy_s(&GetBestPoint_Params.Radius, sizeof(GetBestPoint_Params.Radius), &Radius, sizeof(Radius));
	memcpy_s(&GetBestPoint_Params.Location, sizeof(GetBestPoint_Params.Location), &Location, sizeof(Location));

	uFnGetBestPoint->iNative = 0;
	uFnGetBestPoint->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetBestPoint, &GetBestPoint_Params, nullptr);
	uFnGetBestPoint->FunctionFlags |= 0x400;
	uFnGetBestPoint->iNative = 34053;

	memcpy_s(&Location, sizeof(Location), &GetBestPoint_Params.Location, sizeof(GetBestPoint_Params.Location));

	return GetBestPoint_Params.ReturnValue;
};

// Function GearboxFramework.GBXInfluenceInfo_Search.UnclaimPoint
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36596])
// Parameter Info:
// int32_t                        PointIdx                       (CPF_Const | CPF_Parm)

void UGBXInfluenceInfo_Search::UnclaimPoint(int32_t PointIdx)
{
	static UFunction* uFnUnclaimPoint = nullptr;

	if (!uFnUnclaimPoint)
	{
		uFnUnclaimPoint = UFunction::FindFunction("Function GearboxFramework.GBXInfluenceInfo_Search.UnclaimPoint");
	}

	UGBXInfluenceInfo_Search_execUnclaimPoint_Params UnclaimPoint_Params;
	memset(&UnclaimPoint_Params, 0, sizeof(UnclaimPoint_Params));
	memcpy_s(&UnclaimPoint_Params.PointIdx, sizeof(UnclaimPoint_Params.PointIdx), &PointIdx, sizeof(PointIdx));

	uFnUnclaimPoint->iNative = 0;
	uFnUnclaimPoint->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnUnclaimPoint, &UnclaimPoint_Params, nullptr);
	uFnUnclaimPoint->FunctionFlags |= 0x400;
	uFnUnclaimPoint->iNative = 36596;
};

// Function GearboxFramework.GBXInfluenceInfo_Search.ClaimPoint
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32742])
// Parameter Info:
// int32_t                        PointIdx                       (CPF_Const | CPF_Parm)

void UGBXInfluenceInfo_Search::ClaimPoint(int32_t PointIdx)
{
	static UFunction* uFnClaimPoint = nullptr;

	if (!uFnClaimPoint)
	{
		uFnClaimPoint = UFunction::FindFunction("Function GearboxFramework.GBXInfluenceInfo_Search.ClaimPoint");
	}

	UGBXInfluenceInfo_Search_execClaimPoint_Params ClaimPoint_Params;
	memset(&ClaimPoint_Params, 0, sizeof(ClaimPoint_Params));
	memcpy_s(&ClaimPoint_Params.PointIdx, sizeof(ClaimPoint_Params.PointIdx), &PointIdx, sizeof(PointIdx));

	uFnClaimPoint->iNative = 0;
	uFnClaimPoint->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnClaimPoint, &ClaimPoint_Params, nullptr);
	uFnClaimPoint->FunctionFlags |= 0x400;
	uFnClaimPoint->iNative = 32742;
};

// Function GearboxFramework.GBXInfluenceInfo_Search.PointClaimed
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35489])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGBXInfluenceInfo_Search::PointClaimed()
{
	static UFunction* uFnPointClaimed = nullptr;

	if (!uFnPointClaimed)
	{
		uFnPointClaimed = UFunction::FindFunction("Function GearboxFramework.GBXInfluenceInfo_Search.PointClaimed");
	}

	UGBXInfluenceInfo_Search_execPointClaimed_Params PointClaimed_Params;
	memset(&PointClaimed_Params, 0, sizeof(PointClaimed_Params));

	uFnPointClaimed->iNative = 0;
	uFnPointClaimed->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPointClaimed, &PointClaimed_Params, nullptr);
	uFnPointClaimed->FunctionFlags |= 0x400;
	uFnPointClaimed->iNative = 35489;

	return PointClaimed_Params.ReturnValue;
};

// Function GearboxFramework.GBXInfluenceInfo_Search.CheckClear
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32724])
// Parameter Info:

void UGBXInfluenceInfo_Search::CheckClear()
{
	static UFunction* uFnCheckClear = nullptr;

	if (!uFnCheckClear)
	{
		uFnCheckClear = UFunction::FindFunction("Function GearboxFramework.GBXInfluenceInfo_Search.CheckClear");
	}

	UGBXInfluenceInfo_Search_execCheckClear_Params CheckClear_Params;
	memset(&CheckClear_Params, 0, sizeof(CheckClear_Params));

	uFnCheckClear->iNative = 0;
	uFnCheckClear->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCheckClear, &CheckClear_Params, nullptr);
	uFnCheckClear->FunctionFlags |= 0x400;
	uFnCheckClear->iNative = 32724;
};

// Function GearboxFramework.GBXInfluenceInfo_Search.Update
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2482])
// Parameter Info:

void UGBXInfluenceInfo_Search::Update()
{
	static UFunction* uFnUpdate = nullptr;

	if (!uFnUpdate)
	{
		uFnUpdate = UFunction::FindFunction("Function GearboxFramework.GBXInfluenceInfo_Search.Update");
	}

	UGBXInfluenceInfo_Search_execUpdate_Params Update_Params;
	memset(&Update_Params, 0, sizeof(Update_Params));

	uFnUpdate->iNative = 0;
	uFnUpdate->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnUpdate, &Update_Params, nullptr);
	uFnUpdate->FunctionFlags |= 0x400;
	uFnUpdate->iNative = 2482;
};

// Function GearboxFramework.GBXObjectList.RemoveObjectsOfClass
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35676])
// Parameter Info:
// class UClass*                  TheClass                       (CPF_Const | CPF_Parm)

void UGBXObjectList::RemoveObjectsOfClass(class UClass* TheClass)
{
	static UFunction* uFnRemoveObjectsOfClass = nullptr;

	if (!uFnRemoveObjectsOfClass)
	{
		uFnRemoveObjectsOfClass = UFunction::FindFunction("Function GearboxFramework.GBXObjectList.RemoveObjectsOfClass");
	}

	UGBXObjectList_execRemoveObjectsOfClass_Params RemoveObjectsOfClass_Params;
	memset(&RemoveObjectsOfClass_Params, 0, sizeof(RemoveObjectsOfClass_Params));
	memcpy_s(&RemoveObjectsOfClass_Params.TheClass, sizeof(RemoveObjectsOfClass_Params.TheClass), &TheClass, sizeof(TheClass));

	uFnRemoveObjectsOfClass->iNative = 0;
	uFnRemoveObjectsOfClass->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRemoveObjectsOfClass, &RemoveObjectsOfClass_Params, nullptr);
	uFnRemoveObjectsOfClass->FunctionFlags |= 0x400;
	uFnRemoveObjectsOfClass->iNative = 35676;
};

// Function GearboxFramework.GBXObjectList.FindNextObjectByClass
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[33818])
// Parameter Info:
// class UObject*                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UClass*                  TheClass                       (CPF_Const | CPF_Parm)
// int32_t                        Index                          (CPF_Parm | CPF_OutParm)

class UObject* UGBXObjectList::FindNextObjectByClass(class UClass* TheClass, int32_t& Index)
{
	static UFunction* uFnFindNextObjectByClass = nullptr;

	if (!uFnFindNextObjectByClass)
	{
		uFnFindNextObjectByClass = UFunction::FindFunction("Function GearboxFramework.GBXObjectList.FindNextObjectByClass");
	}

	UGBXObjectList_execFindNextObjectByClass_Params FindNextObjectByClass_Params;
	memset(&FindNextObjectByClass_Params, 0, sizeof(FindNextObjectByClass_Params));
	memcpy_s(&FindNextObjectByClass_Params.TheClass, sizeof(FindNextObjectByClass_Params.TheClass), &TheClass, sizeof(TheClass));
	memcpy_s(&FindNextObjectByClass_Params.Index, sizeof(FindNextObjectByClass_Params.Index), &Index, sizeof(Index));

	uFnFindNextObjectByClass->iNative = 0;
	uFnFindNextObjectByClass->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnFindNextObjectByClass, &FindNextObjectByClass_Params, nullptr);
	uFnFindNextObjectByClass->FunctionFlags |= 0x400;
	uFnFindNextObjectByClass->iNative = 33818;

	memcpy_s(&Index, sizeof(Index), &FindNextObjectByClass_Params.Index, sizeof(FindNextObjectByClass_Params.Index));

	return FindNextObjectByClass_Params.ReturnValue;
};

// Function GearboxFramework.GBXObjectList.FindFirstObjectByClass
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[33812])
// Parameter Info:
// class UObject*                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UClass*                  TheClass                       (CPF_Const | CPF_Parm)
// int32_t                        Index                          (CPF_Parm | CPF_OutParm)

class UObject* UGBXObjectList::FindFirstObjectByClass(class UClass* TheClass, int32_t& Index)
{
	static UFunction* uFnFindFirstObjectByClass = nullptr;

	if (!uFnFindFirstObjectByClass)
	{
		uFnFindFirstObjectByClass = UFunction::FindFunction("Function GearboxFramework.GBXObjectList.FindFirstObjectByClass");
	}

	UGBXObjectList_execFindFirstObjectByClass_Params FindFirstObjectByClass_Params;
	memset(&FindFirstObjectByClass_Params, 0, sizeof(FindFirstObjectByClass_Params));
	memcpy_s(&FindFirstObjectByClass_Params.TheClass, sizeof(FindFirstObjectByClass_Params.TheClass), &TheClass, sizeof(TheClass));
	memcpy_s(&FindFirstObjectByClass_Params.Index, sizeof(FindFirstObjectByClass_Params.Index), &Index, sizeof(Index));

	uFnFindFirstObjectByClass->iNative = 0;
	uFnFindFirstObjectByClass->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnFindFirstObjectByClass, &FindFirstObjectByClass_Params, nullptr);
	uFnFindFirstObjectByClass->FunctionFlags |= 0x400;
	uFnFindFirstObjectByClass->iNative = 33812;

	memcpy_s(&Index, sizeof(Index), &FindFirstObjectByClass_Params.Index, sizeof(FindFirstObjectByClass_Params.Index));

	return FindFirstObjectByClass_Params.ReturnValue;
};

// Function GearboxFramework.GBXObjectList.RemoveObject
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35675])
// Parameter Info:
// class UObject*                 TheObject                      (CPF_Parm)

void UGBXObjectList::RemoveObject(class UObject* TheObject)
{
	static UFunction* uFnRemoveObject = nullptr;

	if (!uFnRemoveObject)
	{
		uFnRemoveObject = UFunction::FindFunction("Function GearboxFramework.GBXObjectList.RemoveObject");
	}

	UGBXObjectList_execRemoveObject_Params RemoveObject_Params;
	memset(&RemoveObject_Params, 0, sizeof(RemoveObject_Params));
	memcpy_s(&RemoveObject_Params.TheObject, sizeof(RemoveObject_Params.TheObject), &TheObject, sizeof(TheObject));

	uFnRemoveObject->iNative = 0;
	uFnRemoveObject->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRemoveObject, &RemoveObject_Params, nullptr);
	uFnRemoveObject->FunctionFlags |= 0x400;
	uFnRemoveObject->iNative = 35675;
};

// Function GearboxFramework.GBXObjectList.AddObject
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[31677])
// Parameter Info:
// class UObject*                 TheObject                      (CPF_Parm)

void UGBXObjectList::AddObject(class UObject* TheObject)
{
	static UFunction* uFnAddObject = nullptr;

	if (!uFnAddObject)
	{
		uFnAddObject = UFunction::FindFunction("Function GearboxFramework.GBXObjectList.AddObject");
	}

	UGBXObjectList_execAddObject_Params AddObject_Params;
	memset(&AddObject_Params, 0, sizeof(AddObject_Params));
	memcpy_s(&AddObject_Params.TheObject, sizeof(AddObject_Params.TheObject), &TheObject, sizeof(TheObject));

	uFnAddObject->iNative = 0;
	uFnAddObject->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnAddObject, &AddObject_Params, nullptr);
	uFnAddObject->FunctionFlags |= 0x400;
	uFnAddObject->iNative = 31677;
};

// Function GearboxFramework.GBXPathConstraint.GetPointScore
// [0x00480400] (FUNC_Native | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34182])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FInfluencePointRef& InfPoint                       (CPF_Const | CPF_Parm)
// struct FVector                 TestLoc                        (CPF_Const | CPF_Parm | CPF_OutParm)

float UGBXPathConstraint::GetPointScore(const struct FInfluencePointRef& InfPoint, struct FVector& TestLoc)
{
	static UFunction* uFnGetPointScore = nullptr;

	if (!uFnGetPointScore)
	{
		uFnGetPointScore = UFunction::FindFunction("Function GearboxFramework.GBXPathConstraint.GetPointScore");
	}

	UGBXPathConstraint_execGetPointScore_Params GetPointScore_Params;
	memset(&GetPointScore_Params, 0, sizeof(GetPointScore_Params));
	memcpy_s(&GetPointScore_Params.InfPoint, sizeof(GetPointScore_Params.InfPoint), &InfPoint, sizeof(InfPoint));
	memcpy_s(&GetPointScore_Params.TestLoc, sizeof(GetPointScore_Params.TestLoc), &TestLoc, sizeof(TestLoc));

	uFnGetPointScore->iNative = 0;
	uFnGetPointScore->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetPointScore, &GetPointScore_Params, nullptr);
	uFnGetPointScore->FunctionFlags |= 0x400;
	uFnGetPointScore->iNative = 34182;

	memcpy_s(&TestLoc, sizeof(TestLoc), &GetPointScore_Params.TestLoc, sizeof(GetPointScore_Params.TestLoc));

	return GetPointScore_Params.ReturnValue;
};

// Function GearboxFramework.GBXPathConstraint.ValidPoint
// [0x00480400] (FUNC_Native | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags) (iNative[36669])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FInfluencePointRef& InfPoint                       (CPF_Const | CPF_Parm)
// struct FVector                 TestLoc                        (CPF_Const | CPF_Parm | CPF_OutParm)

bool UGBXPathConstraint::ValidPoint(const struct FInfluencePointRef& InfPoint, struct FVector& TestLoc)
{
	static UFunction* uFnValidPoint = nullptr;

	if (!uFnValidPoint)
	{
		uFnValidPoint = UFunction::FindFunction("Function GearboxFramework.GBXPathConstraint.ValidPoint");
	}

	UGBXPathConstraint_execValidPoint_Params ValidPoint_Params;
	memset(&ValidPoint_Params, 0, sizeof(ValidPoint_Params));
	memcpy_s(&ValidPoint_Params.InfPoint, sizeof(ValidPoint_Params.InfPoint), &InfPoint, sizeof(InfPoint));
	memcpy_s(&ValidPoint_Params.TestLoc, sizeof(ValidPoint_Params.TestLoc), &TestLoc, sizeof(TestLoc));

	uFnValidPoint->iNative = 0;
	uFnValidPoint->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnValidPoint, &ValidPoint_Params, nullptr);
	uFnValidPoint->FunctionFlags |= 0x400;
	uFnValidPoint->iNative = 36669;

	memcpy_s(&TestLoc, sizeof(TestLoc), &ValidPoint_Params.TestLoc, sizeof(ValidPoint_Params.TestLoc));

	return ValidPoint_Params.ReturnValue;
};

// Function GearboxFramework.GBXPathConstraint.Init
// [0x00080400] (FUNC_Native | FUNC_Protected | FUNC_AllFlags) (iNative[762])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UIAIInterface*           AI                             (CPF_Parm)
// class AActor*                  InTarget                       (CPF_Parm)
// const struct FVector&          InStartLoc                     (CPF_Parm)

bool UGBXPathConstraint::Init(class UIAIInterface* AI, class AActor* InTarget, const struct FVector& InStartLoc)
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function GearboxFramework.GBXPathConstraint.Init");
	}

	UGBXPathConstraint_execInit_Params Init_Params;
	memset(&Init_Params, 0, sizeof(Init_Params));
	memcpy_s(&Init_Params.AI, sizeof(Init_Params.AI), &AI, sizeof(AI));
	memcpy_s(&Init_Params.InTarget, sizeof(Init_Params.InTarget), &InTarget, sizeof(InTarget));
	memcpy_s(&Init_Params.InStartLoc, sizeof(Init_Params.InStartLoc), &InStartLoc, sizeof(InStartLoc));

	uFnInit->iNative = 0;
	uFnInit->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInit, &Init_Params, nullptr);
	uFnInit->FunctionFlags |= 0x400;
	uFnInit->iNative = 762;

	return Init_Params.ReturnValue;
};

// Function GearboxFramework.GBXPathConstraint.FirstInit
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[33840])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UIAIInterface*           AI                             (CPF_Parm)

bool UGBXPathConstraint::FirstInit(class UIAIInterface* AI)
{
	static UFunction* uFnFirstInit = nullptr;

	if (!uFnFirstInit)
	{
		uFnFirstInit = UFunction::FindFunction("Function GearboxFramework.GBXPathConstraint.FirstInit");
	}

	UGBXPathConstraint_execFirstInit_Params FirstInit_Params;
	memset(&FirstInit_Params, 0, sizeof(FirstInit_Params));
	memcpy_s(&FirstInit_Params.AI, sizeof(FirstInit_Params.AI), &AI, sizeof(AI));

	uFnFirstInit->iNative = 0;
	uFnFirstInit->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnFirstInit, &FirstInit_Params, nullptr);
	uFnFirstInit->FunctionFlags |= 0x400;
	uFnFirstInit->iNative = 33840;

	return FirstInit_Params.ReturnValue;
};

// Function GearboxFramework.GBXPathConstraint.NewPathInit
// [0x00080400] (FUNC_Native | FUNC_Protected | FUNC_AllFlags) (iNative[35107])
// Parameter Info:

void UGBXPathConstraint::NewPathInit()
{
	static UFunction* uFnNewPathInit = nullptr;

	if (!uFnNewPathInit)
	{
		uFnNewPathInit = UFunction::FindFunction("Function GearboxFramework.GBXPathConstraint.NewPathInit");
	}

	UGBXPathConstraint_execNewPathInit_Params NewPathInit_Params;
	memset(&NewPathInit_Params, 0, sizeof(NewPathInit_Params));

	uFnNewPathInit->iNative = 0;
	uFnNewPathInit->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnNewPathInit, &NewPathInit_Params, nullptr);
	uFnNewPathInit->FunctionFlags |= 0x400;
	uFnNewPathInit->iNative = 35107;
};

// Function GearboxFramework.GBXPathConstraint_Boundary.ValidPoint
// [0x00480400] (FUNC_Native | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags) (iNative[36669])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FInfluencePointRef& InfPoint                       (CPF_Const | CPF_Parm)
// struct FVector                 TestLoc                        (CPF_Const | CPF_Parm | CPF_OutParm)

bool UGBXPathConstraint_Boundary::ValidPoint(const struct FInfluencePointRef& InfPoint, struct FVector& TestLoc)
{
	static UFunction* uFnValidPoint = nullptr;

	if (!uFnValidPoint)
	{
		uFnValidPoint = UFunction::FindFunction("Function GearboxFramework.GBXPathConstraint_Boundary.ValidPoint");
	}

	UGBXPathConstraint_Boundary_execValidPoint_Params ValidPoint_Params;
	memset(&ValidPoint_Params, 0, sizeof(ValidPoint_Params));
	memcpy_s(&ValidPoint_Params.InfPoint, sizeof(ValidPoint_Params.InfPoint), &InfPoint, sizeof(InfPoint));
	memcpy_s(&ValidPoint_Params.TestLoc, sizeof(ValidPoint_Params.TestLoc), &TestLoc, sizeof(TestLoc));

	uFnValidPoint->iNative = 0;
	uFnValidPoint->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnValidPoint, &ValidPoint_Params, nullptr);
	uFnValidPoint->FunctionFlags |= 0x400;
	uFnValidPoint->iNative = 36669;

	memcpy_s(&TestLoc, sizeof(TestLoc), &ValidPoint_Params.TestLoc, sizeof(ValidPoint_Params.TestLoc));

	return ValidPoint_Params.ReturnValue;
};

// Function GearboxFramework.GBXPathConstraint_Boundary.Init
// [0x00080400] (FUNC_Native | FUNC_Protected | FUNC_AllFlags) (iNative[762])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UIAIInterface*           AI                             (CPF_Parm)
// class AActor*                  InTarget                       (CPF_Parm)
// const struct FVector&          InStartLoc                     (CPF_Parm)

bool UGBXPathConstraint_Boundary::Init(class UIAIInterface* AI, class AActor* InTarget, const struct FVector& InStartLoc)
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function GearboxFramework.GBXPathConstraint_Boundary.Init");
	}

	UGBXPathConstraint_Boundary_execInit_Params Init_Params;
	memset(&Init_Params, 0, sizeof(Init_Params));
	memcpy_s(&Init_Params.AI, sizeof(Init_Params.AI), &AI, sizeof(AI));
	memcpy_s(&Init_Params.InTarget, sizeof(Init_Params.InTarget), &InTarget, sizeof(InTarget));
	memcpy_s(&Init_Params.InStartLoc, sizeof(Init_Params.InStartLoc), &InStartLoc, sizeof(InStartLoc));

	uFnInit->iNative = 0;
	uFnInit->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInit, &Init_Params, nullptr);
	uFnInit->FunctionFlags |= 0x400;
	uFnInit->iNative = 762;

	return Init_Params.ReturnValue;
};

// Function GearboxFramework.GBXPathConstraint_Danger.ValidPoint
// [0x00480400] (FUNC_Native | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags) (iNative[36669])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FInfluencePointRef& InfPoint                       (CPF_Const | CPF_Parm)
// struct FVector                 TestLoc                        (CPF_Const | CPF_Parm | CPF_OutParm)

bool UGBXPathConstraint_Danger::ValidPoint(const struct FInfluencePointRef& InfPoint, struct FVector& TestLoc)
{
	static UFunction* uFnValidPoint = nullptr;

	if (!uFnValidPoint)
	{
		uFnValidPoint = UFunction::FindFunction("Function GearboxFramework.GBXPathConstraint_Danger.ValidPoint");
	}

	UGBXPathConstraint_Danger_execValidPoint_Params ValidPoint_Params;
	memset(&ValidPoint_Params, 0, sizeof(ValidPoint_Params));
	memcpy_s(&ValidPoint_Params.InfPoint, sizeof(ValidPoint_Params.InfPoint), &InfPoint, sizeof(InfPoint));
	memcpy_s(&ValidPoint_Params.TestLoc, sizeof(ValidPoint_Params.TestLoc), &TestLoc, sizeof(TestLoc));

	uFnValidPoint->iNative = 0;
	uFnValidPoint->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnValidPoint, &ValidPoint_Params, nullptr);
	uFnValidPoint->FunctionFlags |= 0x400;
	uFnValidPoint->iNative = 36669;

	memcpy_s(&TestLoc, sizeof(TestLoc), &ValidPoint_Params.TestLoc, sizeof(ValidPoint_Params.TestLoc));

	return ValidPoint_Params.ReturnValue;
};

// Function GearboxFramework.GBXPathConstraint_Danger.Init
// [0x00080400] (FUNC_Native | FUNC_Protected | FUNC_AllFlags) (iNative[762])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UIAIInterface*           AI                             (CPF_Parm)
// class AActor*                  InTarget                       (CPF_Parm)
// const struct FVector&          InStartLoc                     (CPF_Parm)

bool UGBXPathConstraint_Danger::Init(class UIAIInterface* AI, class AActor* InTarget, const struct FVector& InStartLoc)
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function GearboxFramework.GBXPathConstraint_Danger.Init");
	}

	UGBXPathConstraint_Danger_execInit_Params Init_Params;
	memset(&Init_Params, 0, sizeof(Init_Params));
	memcpy_s(&Init_Params.AI, sizeof(Init_Params.AI), &AI, sizeof(AI));
	memcpy_s(&Init_Params.InTarget, sizeof(Init_Params.InTarget), &InTarget, sizeof(InTarget));
	memcpy_s(&Init_Params.InStartLoc, sizeof(Init_Params.InStartLoc), &InStartLoc, sizeof(InStartLoc));

	uFnInit->iNative = 0;
	uFnInit->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInit, &Init_Params, nullptr);
	uFnInit->FunctionFlags |= 0x400;
	uFnInit->iNative = 762;

	return Init_Params.ReturnValue;
};

// Function GearboxFramework.GBXPathConstraint_Direct.ValidPoint
// [0x00480400] (FUNC_Native | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags) (iNative[36669])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FInfluencePointRef& InfPoint                       (CPF_Const | CPF_Parm)
// struct FVector                 TestLoc                        (CPF_Const | CPF_Parm | CPF_OutParm)

bool UGBXPathConstraint_Direct::ValidPoint(const struct FInfluencePointRef& InfPoint, struct FVector& TestLoc)
{
	static UFunction* uFnValidPoint = nullptr;

	if (!uFnValidPoint)
	{
		uFnValidPoint = UFunction::FindFunction("Function GearboxFramework.GBXPathConstraint_Direct.ValidPoint");
	}

	UGBXPathConstraint_Direct_execValidPoint_Params ValidPoint_Params;
	memset(&ValidPoint_Params, 0, sizeof(ValidPoint_Params));
	memcpy_s(&ValidPoint_Params.InfPoint, sizeof(ValidPoint_Params.InfPoint), &InfPoint, sizeof(InfPoint));
	memcpy_s(&ValidPoint_Params.TestLoc, sizeof(ValidPoint_Params.TestLoc), &TestLoc, sizeof(TestLoc));

	uFnValidPoint->iNative = 0;
	uFnValidPoint->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnValidPoint, &ValidPoint_Params, nullptr);
	uFnValidPoint->FunctionFlags |= 0x400;
	uFnValidPoint->iNative = 36669;

	memcpy_s(&TestLoc, sizeof(TestLoc), &ValidPoint_Params.TestLoc, sizeof(ValidPoint_Params.TestLoc));

	return ValidPoint_Params.ReturnValue;
};

// Function GearboxFramework.GBXPathConstraint_Distance.ValidPoint
// [0x00480400] (FUNC_Native | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags) (iNative[36669])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FInfluencePointRef& InfPoint                       (CPF_Const | CPF_Parm)
// struct FVector                 TestLoc                        (CPF_Const | CPF_Parm | CPF_OutParm)

bool UGBXPathConstraint_Distance::ValidPoint(const struct FInfluencePointRef& InfPoint, struct FVector& TestLoc)
{
	static UFunction* uFnValidPoint = nullptr;

	if (!uFnValidPoint)
	{
		uFnValidPoint = UFunction::FindFunction("Function GearboxFramework.GBXPathConstraint_Distance.ValidPoint");
	}

	UGBXPathConstraint_Distance_execValidPoint_Params ValidPoint_Params;
	memset(&ValidPoint_Params, 0, sizeof(ValidPoint_Params));
	memcpy_s(&ValidPoint_Params.InfPoint, sizeof(ValidPoint_Params.InfPoint), &InfPoint, sizeof(InfPoint));
	memcpy_s(&ValidPoint_Params.TestLoc, sizeof(ValidPoint_Params.TestLoc), &TestLoc, sizeof(TestLoc));

	uFnValidPoint->iNative = 0;
	uFnValidPoint->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnValidPoint, &ValidPoint_Params, nullptr);
	uFnValidPoint->FunctionFlags |= 0x400;
	uFnValidPoint->iNative = 36669;

	memcpy_s(&TestLoc, sizeof(TestLoc), &ValidPoint_Params.TestLoc, sizeof(ValidPoint_Params.TestLoc));

	return ValidPoint_Params.ReturnValue;
};

// Function GearboxFramework.GBXPathConstraint_Distance.NewPathInit
// [0x00080400] (FUNC_Native | FUNC_Protected | FUNC_AllFlags) (iNative[35107])
// Parameter Info:

void UGBXPathConstraint_Distance::NewPathInit()
{
	static UFunction* uFnNewPathInit = nullptr;

	if (!uFnNewPathInit)
	{
		uFnNewPathInit = UFunction::FindFunction("Function GearboxFramework.GBXPathConstraint_Distance.NewPathInit");
	}

	UGBXPathConstraint_Distance_execNewPathInit_Params NewPathInit_Params;
	memset(&NewPathInit_Params, 0, sizeof(NewPathInit_Params));

	uFnNewPathInit->iNative = 0;
	uFnNewPathInit->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnNewPathInit, &NewPathInit_Params, nullptr);
	uFnNewPathInit->FunctionFlags |= 0x400;
	uFnNewPathInit->iNative = 35107;
};

// Function GearboxFramework.GBXPathConstraint_Height.ValidPoint
// [0x00480400] (FUNC_Native | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags) (iNative[36669])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FInfluencePointRef& InfPoint                       (CPF_Const | CPF_Parm)
// struct FVector                 TestLoc                        (CPF_Const | CPF_Parm | CPF_OutParm)

bool UGBXPathConstraint_Height::ValidPoint(const struct FInfluencePointRef& InfPoint, struct FVector& TestLoc)
{
	static UFunction* uFnValidPoint = nullptr;

	if (!uFnValidPoint)
	{
		uFnValidPoint = UFunction::FindFunction("Function GearboxFramework.GBXPathConstraint_Height.ValidPoint");
	}

	UGBXPathConstraint_Height_execValidPoint_Params ValidPoint_Params;
	memset(&ValidPoint_Params, 0, sizeof(ValidPoint_Params));
	memcpy_s(&ValidPoint_Params.InfPoint, sizeof(ValidPoint_Params.InfPoint), &InfPoint, sizeof(InfPoint));
	memcpy_s(&ValidPoint_Params.TestLoc, sizeof(ValidPoint_Params.TestLoc), &TestLoc, sizeof(TestLoc));

	uFnValidPoint->iNative = 0;
	uFnValidPoint->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnValidPoint, &ValidPoint_Params, nullptr);
	uFnValidPoint->FunctionFlags |= 0x400;
	uFnValidPoint->iNative = 36669;

	memcpy_s(&TestLoc, sizeof(TestLoc), &ValidPoint_Params.TestLoc, sizeof(ValidPoint_Params.TestLoc));

	return ValidPoint_Params.ReturnValue;
};

// Function GearboxFramework.GBXPathConstraint_MaxDistance.ValidPoint
// [0x00480400] (FUNC_Native | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags) (iNative[36669])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FInfluencePointRef& InfPoint                       (CPF_Const | CPF_Parm)
// struct FVector                 TestLoc                        (CPF_Const | CPF_Parm | CPF_OutParm)

bool UGBXPathConstraint_MaxDistance::ValidPoint(const struct FInfluencePointRef& InfPoint, struct FVector& TestLoc)
{
	static UFunction* uFnValidPoint = nullptr;

	if (!uFnValidPoint)
	{
		uFnValidPoint = UFunction::FindFunction("Function GearboxFramework.GBXPathConstraint_MaxDistance.ValidPoint");
	}

	UGBXPathConstraint_MaxDistance_execValidPoint_Params ValidPoint_Params;
	memset(&ValidPoint_Params, 0, sizeof(ValidPoint_Params));
	memcpy_s(&ValidPoint_Params.InfPoint, sizeof(ValidPoint_Params.InfPoint), &InfPoint, sizeof(InfPoint));
	memcpy_s(&ValidPoint_Params.TestLoc, sizeof(ValidPoint_Params.TestLoc), &TestLoc, sizeof(TestLoc));

	uFnValidPoint->iNative = 0;
	uFnValidPoint->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnValidPoint, &ValidPoint_Params, nullptr);
	uFnValidPoint->FunctionFlags |= 0x400;
	uFnValidPoint->iNative = 36669;

	memcpy_s(&TestLoc, sizeof(TestLoc), &ValidPoint_Params.TestLoc, sizeof(ValidPoint_Params.TestLoc));

	return ValidPoint_Params.ReturnValue;
};

// Function GearboxFramework.GBXPathConstraint_Move.ValidPoint
// [0x00480400] (FUNC_Native | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags) (iNative[36669])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FInfluencePointRef& InfPoint                       (CPF_Const | CPF_Parm)
// struct FVector                 TestLoc                        (CPF_Const | CPF_Parm | CPF_OutParm)

bool UGBXPathConstraint_Move::ValidPoint(const struct FInfluencePointRef& InfPoint, struct FVector& TestLoc)
{
	static UFunction* uFnValidPoint = nullptr;

	if (!uFnValidPoint)
	{
		uFnValidPoint = UFunction::FindFunction("Function GearboxFramework.GBXPathConstraint_Move.ValidPoint");
	}

	UGBXPathConstraint_Move_execValidPoint_Params ValidPoint_Params;
	memset(&ValidPoint_Params, 0, sizeof(ValidPoint_Params));
	memcpy_s(&ValidPoint_Params.InfPoint, sizeof(ValidPoint_Params.InfPoint), &InfPoint, sizeof(InfPoint));
	memcpy_s(&ValidPoint_Params.TestLoc, sizeof(ValidPoint_Params.TestLoc), &TestLoc, sizeof(TestLoc));

	uFnValidPoint->iNative = 0;
	uFnValidPoint->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnValidPoint, &ValidPoint_Params, nullptr);
	uFnValidPoint->FunctionFlags |= 0x400;
	uFnValidPoint->iNative = 36669;

	memcpy_s(&TestLoc, sizeof(TestLoc), &ValidPoint_Params.TestLoc, sizeof(ValidPoint_Params.TestLoc));

	return ValidPoint_Params.ReturnValue;
};

// Function GearboxFramework.GBXPathConstraint_Move.FirstInit
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[33840])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UIAIInterface*           AI                             (CPF_Parm)

bool UGBXPathConstraint_Move::FirstInit(class UIAIInterface* AI)
{
	static UFunction* uFnFirstInit = nullptr;

	if (!uFnFirstInit)
	{
		uFnFirstInit = UFunction::FindFunction("Function GearboxFramework.GBXPathConstraint_Move.FirstInit");
	}

	UGBXPathConstraint_Move_execFirstInit_Params FirstInit_Params;
	memset(&FirstInit_Params, 0, sizeof(FirstInit_Params));
	memcpy_s(&FirstInit_Params.AI, sizeof(FirstInit_Params.AI), &AI, sizeof(AI));

	uFnFirstInit->iNative = 0;
	uFnFirstInit->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnFirstInit, &FirstInit_Params, nullptr);
	uFnFirstInit->FunctionFlags |= 0x400;
	uFnFirstInit->iNative = 33840;

	return FirstInit_Params.ReturnValue;
};

// Function GearboxFramework.GBXPathConstraint_Occupancy.ValidPoint
// [0x00480400] (FUNC_Native | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags) (iNative[36669])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FInfluencePointRef& InfPoint                       (CPF_Const | CPF_Parm)
// struct FVector                 TestLoc                        (CPF_Const | CPF_Parm | CPF_OutParm)

bool UGBXPathConstraint_Occupancy::ValidPoint(const struct FInfluencePointRef& InfPoint, struct FVector& TestLoc)
{
	static UFunction* uFnValidPoint = nullptr;

	if (!uFnValidPoint)
	{
		uFnValidPoint = UFunction::FindFunction("Function GearboxFramework.GBXPathConstraint_Occupancy.ValidPoint");
	}

	UGBXPathConstraint_Occupancy_execValidPoint_Params ValidPoint_Params;
	memset(&ValidPoint_Params, 0, sizeof(ValidPoint_Params));
	memcpy_s(&ValidPoint_Params.InfPoint, sizeof(ValidPoint_Params.InfPoint), &InfPoint, sizeof(InfPoint));
	memcpy_s(&ValidPoint_Params.TestLoc, sizeof(ValidPoint_Params.TestLoc), &TestLoc, sizeof(TestLoc));

	uFnValidPoint->iNative = 0;
	uFnValidPoint->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnValidPoint, &ValidPoint_Params, nullptr);
	uFnValidPoint->FunctionFlags |= 0x400;
	uFnValidPoint->iNative = 36669;

	memcpy_s(&TestLoc, sizeof(TestLoc), &ValidPoint_Params.TestLoc, sizeof(ValidPoint_Params.TestLoc));

	return ValidPoint_Params.ReturnValue;
};

// Function GearboxFramework.GBXPathConstraint_Occupancy.Init
// [0x00080400] (FUNC_Native | FUNC_Protected | FUNC_AllFlags) (iNative[762])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UIAIInterface*           AI                             (CPF_Parm)
// class AActor*                  InTarget                       (CPF_Parm)
// const struct FVector&          InStartLoc                     (CPF_Parm)

bool UGBXPathConstraint_Occupancy::Init(class UIAIInterface* AI, class AActor* InTarget, const struct FVector& InStartLoc)
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function GearboxFramework.GBXPathConstraint_Occupancy.Init");
	}

	UGBXPathConstraint_Occupancy_execInit_Params Init_Params;
	memset(&Init_Params, 0, sizeof(Init_Params));
	memcpy_s(&Init_Params.AI, sizeof(Init_Params.AI), &AI, sizeof(AI));
	memcpy_s(&Init_Params.InTarget, sizeof(Init_Params.InTarget), &InTarget, sizeof(InTarget));
	memcpy_s(&Init_Params.InStartLoc, sizeof(Init_Params.InStartLoc), &InStartLoc, sizeof(InStartLoc));

	uFnInit->iNative = 0;
	uFnInit->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInit, &Init_Params, nullptr);
	uFnInit->FunctionFlags |= 0x400;
	uFnInit->iNative = 762;

	return Init_Params.ReturnValue;
};

// Function GearboxFramework.GBXPathConstraint_Range.ValidPoint
// [0x00480400] (FUNC_Native | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags) (iNative[36669])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FInfluencePointRef& InfPoint                       (CPF_Const | CPF_Parm)
// struct FVector                 TestLoc                        (CPF_Const | CPF_Parm | CPF_OutParm)

bool UGBXPathConstraint_Range::ValidPoint(const struct FInfluencePointRef& InfPoint, struct FVector& TestLoc)
{
	static UFunction* uFnValidPoint = nullptr;

	if (!uFnValidPoint)
	{
		uFnValidPoint = UFunction::FindFunction("Function GearboxFramework.GBXPathConstraint_Range.ValidPoint");
	}

	UGBXPathConstraint_Range_execValidPoint_Params ValidPoint_Params;
	memset(&ValidPoint_Params, 0, sizeof(ValidPoint_Params));
	memcpy_s(&ValidPoint_Params.InfPoint, sizeof(ValidPoint_Params.InfPoint), &InfPoint, sizeof(InfPoint));
	memcpy_s(&ValidPoint_Params.TestLoc, sizeof(ValidPoint_Params.TestLoc), &TestLoc, sizeof(TestLoc));

	uFnValidPoint->iNative = 0;
	uFnValidPoint->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnValidPoint, &ValidPoint_Params, nullptr);
	uFnValidPoint->FunctionFlags |= 0x400;
	uFnValidPoint->iNative = 36669;

	memcpy_s(&TestLoc, sizeof(TestLoc), &ValidPoint_Params.TestLoc, sizeof(ValidPoint_Params.TestLoc));

	return ValidPoint_Params.ReturnValue;
};

// Function GearboxFramework.GBXPathConstraint_Range.Init
// [0x00080400] (FUNC_Native | FUNC_Protected | FUNC_AllFlags) (iNative[762])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UIAIInterface*           AI                             (CPF_Parm)
// class AActor*                  InTarget                       (CPF_Parm)
// const struct FVector&          InStartLoc                     (CPF_Parm)

bool UGBXPathConstraint_Range::Init(class UIAIInterface* AI, class AActor* InTarget, const struct FVector& InStartLoc)
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function GearboxFramework.GBXPathConstraint_Range.Init");
	}

	UGBXPathConstraint_Range_execInit_Params Init_Params;
	memset(&Init_Params, 0, sizeof(Init_Params));
	memcpy_s(&Init_Params.AI, sizeof(Init_Params.AI), &AI, sizeof(AI));
	memcpy_s(&Init_Params.InTarget, sizeof(Init_Params.InTarget), &InTarget, sizeof(InTarget));
	memcpy_s(&Init_Params.InStartLoc, sizeof(Init_Params.InStartLoc), &InStartLoc, sizeof(InStartLoc));

	uFnInit->iNative = 0;
	uFnInit->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInit, &Init_Params, nullptr);
	uFnInit->FunctionFlags |= 0x400;
	uFnInit->iNative = 762;

	return Init_Params.ReturnValue;
};

// Function GearboxFramework.GBXPathConstraint_Side.ValidPoint
// [0x00480400] (FUNC_Native | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags) (iNative[36669])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FInfluencePointRef& InfPoint                       (CPF_Const | CPF_Parm)
// struct FVector                 TestLoc                        (CPF_Const | CPF_Parm | CPF_OutParm)

bool UGBXPathConstraint_Side::ValidPoint(const struct FInfluencePointRef& InfPoint, struct FVector& TestLoc)
{
	static UFunction* uFnValidPoint = nullptr;

	if (!uFnValidPoint)
	{
		uFnValidPoint = UFunction::FindFunction("Function GearboxFramework.GBXPathConstraint_Side.ValidPoint");
	}

	UGBXPathConstraint_Side_execValidPoint_Params ValidPoint_Params;
	memset(&ValidPoint_Params, 0, sizeof(ValidPoint_Params));
	memcpy_s(&ValidPoint_Params.InfPoint, sizeof(ValidPoint_Params.InfPoint), &InfPoint, sizeof(InfPoint));
	memcpy_s(&ValidPoint_Params.TestLoc, sizeof(ValidPoint_Params.TestLoc), &TestLoc, sizeof(TestLoc));

	uFnValidPoint->iNative = 0;
	uFnValidPoint->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnValidPoint, &ValidPoint_Params, nullptr);
	uFnValidPoint->FunctionFlags |= 0x400;
	uFnValidPoint->iNative = 36669;

	memcpy_s(&TestLoc, sizeof(TestLoc), &ValidPoint_Params.TestLoc, sizeof(ValidPoint_Params.TestLoc));

	return ValidPoint_Params.ReturnValue;
};

// Function GearboxFramework.GBXPathConstraint_Side.Init
// [0x00080400] (FUNC_Native | FUNC_Protected | FUNC_AllFlags) (iNative[762])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UIAIInterface*           AI                             (CPF_Parm)
// class AActor*                  InTarget                       (CPF_Parm)
// const struct FVector&          InStartLoc                     (CPF_Parm)

bool UGBXPathConstraint_Side::Init(class UIAIInterface* AI, class AActor* InTarget, const struct FVector& InStartLoc)
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function GearboxFramework.GBXPathConstraint_Side.Init");
	}

	UGBXPathConstraint_Side_execInit_Params Init_Params;
	memset(&Init_Params, 0, sizeof(Init_Params));
	memcpy_s(&Init_Params.AI, sizeof(Init_Params.AI), &AI, sizeof(AI));
	memcpy_s(&Init_Params.InTarget, sizeof(Init_Params.InTarget), &InTarget, sizeof(InTarget));
	memcpy_s(&Init_Params.InStartLoc, sizeof(Init_Params.InStartLoc), &InStartLoc, sizeof(InStartLoc));

	uFnInit->iNative = 0;
	uFnInit->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInit, &Init_Params, nullptr);
	uFnInit->FunctionFlags |= 0x400;
	uFnInit->iNative = 762;

	return Init_Params.ReturnValue;
};

// Function GearboxFramework.GBXPathConstraint_Side.FirstInit
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[33840])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UIAIInterface*           AI                             (CPF_Parm)

bool UGBXPathConstraint_Side::FirstInit(class UIAIInterface* AI)
{
	static UFunction* uFnFirstInit = nullptr;

	if (!uFnFirstInit)
	{
		uFnFirstInit = UFunction::FindFunction("Function GearboxFramework.GBXPathConstraint_Side.FirstInit");
	}

	UGBXPathConstraint_Side_execFirstInit_Params FirstInit_Params;
	memset(&FirstInit_Params, 0, sizeof(FirstInit_Params));
	memcpy_s(&FirstInit_Params.AI, sizeof(FirstInit_Params.AI), &AI, sizeof(AI));

	uFnFirstInit->iNative = 0;
	uFnFirstInit->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnFirstInit, &FirstInit_Params, nullptr);
	uFnFirstInit->FunctionFlags |= 0x400;
	uFnFirstInit->iNative = 33840;

	return FirstInit_Params.ReturnValue;
};

// Function GearboxFramework.GBXPathConstraint_Territory.ValidPoint
// [0x00480400] (FUNC_Native | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags) (iNative[36669])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FInfluencePointRef& InfPoint                       (CPF_Const | CPF_Parm)
// struct FVector                 TestLoc                        (CPF_Const | CPF_Parm | CPF_OutParm)

bool UGBXPathConstraint_Territory::ValidPoint(const struct FInfluencePointRef& InfPoint, struct FVector& TestLoc)
{
	static UFunction* uFnValidPoint = nullptr;

	if (!uFnValidPoint)
	{
		uFnValidPoint = UFunction::FindFunction("Function GearboxFramework.GBXPathConstraint_Territory.ValidPoint");
	}

	UGBXPathConstraint_Territory_execValidPoint_Params ValidPoint_Params;
	memset(&ValidPoint_Params, 0, sizeof(ValidPoint_Params));
	memcpy_s(&ValidPoint_Params.InfPoint, sizeof(ValidPoint_Params.InfPoint), &InfPoint, sizeof(InfPoint));
	memcpy_s(&ValidPoint_Params.TestLoc, sizeof(ValidPoint_Params.TestLoc), &TestLoc, sizeof(TestLoc));

	uFnValidPoint->iNative = 0;
	uFnValidPoint->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnValidPoint, &ValidPoint_Params, nullptr);
	uFnValidPoint->FunctionFlags |= 0x400;
	uFnValidPoint->iNative = 36669;

	memcpy_s(&TestLoc, sizeof(TestLoc), &ValidPoint_Params.TestLoc, sizeof(ValidPoint_Params.TestLoc));

	return ValidPoint_Params.ReturnValue;
};

// Function GearboxFramework.GBXPathConstraint_Territory.Init
// [0x00080400] (FUNC_Native | FUNC_Protected | FUNC_AllFlags) (iNative[762])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UIAIInterface*           AI                             (CPF_Parm)
// class AActor*                  InTarget                       (CPF_Parm)
// const struct FVector&          InStartLoc                     (CPF_Parm)

bool UGBXPathConstraint_Territory::Init(class UIAIInterface* AI, class AActor* InTarget, const struct FVector& InStartLoc)
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function GearboxFramework.GBXPathConstraint_Territory.Init");
	}

	UGBXPathConstraint_Territory_execInit_Params Init_Params;
	memset(&Init_Params, 0, sizeof(Init_Params));
	memcpy_s(&Init_Params.AI, sizeof(Init_Params.AI), &AI, sizeof(AI));
	memcpy_s(&Init_Params.InTarget, sizeof(Init_Params.InTarget), &InTarget, sizeof(InTarget));
	memcpy_s(&Init_Params.InStartLoc, sizeof(Init_Params.InStartLoc), &InStartLoc, sizeof(InStartLoc));

	uFnInit->iNative = 0;
	uFnInit->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInit, &Init_Params, nullptr);
	uFnInit->FunctionFlags |= 0x400;
	uFnInit->iNative = 762;

	return Init_Params.ReturnValue;
};

// Function GearboxFramework.GBXPathConstraint_Territory.FirstInit
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[33840])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UIAIInterface*           AI                             (CPF_Parm)

bool UGBXPathConstraint_Territory::FirstInit(class UIAIInterface* AI)
{
	static UFunction* uFnFirstInit = nullptr;

	if (!uFnFirstInit)
	{
		uFnFirstInit = UFunction::FindFunction("Function GearboxFramework.GBXPathConstraint_Territory.FirstInit");
	}

	UGBXPathConstraint_Territory_execFirstInit_Params FirstInit_Params;
	memset(&FirstInit_Params, 0, sizeof(FirstInit_Params));
	memcpy_s(&FirstInit_Params.AI, sizeof(FirstInit_Params.AI), &AI, sizeof(AI));

	uFnFirstInit->iNative = 0;
	uFnFirstInit->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnFirstInit, &FirstInit_Params, nullptr);
	uFnFirstInit->FunctionFlags |= 0x400;
	uFnFirstInit->iNative = 33840;

	return FirstInit_Params.ReturnValue;
};

// Function GearboxFramework.GBXTargetSearchDefinition.GetHitNormalOffset
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34109])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float UGBXTargetSearchDefinition::GetHitNormalOffset()
{
	static UFunction* uFnGetHitNormalOffset = nullptr;

	if (!uFnGetHitNormalOffset)
	{
		uFnGetHitNormalOffset = UFunction::FindFunction("Function GearboxFramework.GBXTargetSearchDefinition.GetHitNormalOffset");
	}

	UGBXTargetSearchDefinition_execGetHitNormalOffset_Params GetHitNormalOffset_Params;
	memset(&GetHitNormalOffset_Params, 0, sizeof(GetHitNormalOffset_Params));

	uFnGetHitNormalOffset->iNative = 0;
	uFnGetHitNormalOffset->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetHitNormalOffset, &GetHitNormalOffset_Params, nullptr);
	uFnGetHitNormalOffset->FunctionFlags |= 0x400;
	uFnGetHitNormalOffset->iNative = 34109;

	return GetHitNormalOffset_Params.ReturnValue;
};

// Function GearboxFramework.GBXTargetSearchDefinition.DoMultiSearch
// [0x00424401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[33303])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UIGBXTargetSearch*       Source                         (CPF_Parm)
// class AActor*                  PreferredTarget                (CPF_Parm)
// class UObject*                 AdditionalContext              (CPF_OptionalParm | CPF_Parm)
// class TArray<class AActor*>    ExcludedActors                 (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// class TArray<struct FTargetSearchResult> SearchResults                  (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// struct FVector                 SourceLocationOverride         (CPF_OptionalParm | CPF_Parm | CPF_OutParm)
// struct FRotator                SourceRotationOverride         (CPF_OptionalParm | CPF_Parm | CPF_OutParm)

bool UGBXTargetSearchDefinition::DoMultiSearch(class UIGBXTargetSearch* Source, class AActor* PreferredTarget, class UObject* AdditionalContext, class TArray<class AActor*>& ExcludedActors, class TArray<struct FTargetSearchResult>& SearchResults, struct FVector& SourceLocationOverride, struct FRotator& SourceRotationOverride)
{
	static UFunction* uFnDoMultiSearch = nullptr;

	if (!uFnDoMultiSearch)
	{
		uFnDoMultiSearch = UFunction::FindFunction("Function GearboxFramework.GBXTargetSearchDefinition.DoMultiSearch");
	}

	UGBXTargetSearchDefinition_execDoMultiSearch_Params DoMultiSearch_Params;
	memset(&DoMultiSearch_Params, 0, sizeof(DoMultiSearch_Params));
	memcpy_s(&DoMultiSearch_Params.Source, sizeof(DoMultiSearch_Params.Source), &Source, sizeof(Source));
	memcpy_s(&DoMultiSearch_Params.PreferredTarget, sizeof(DoMultiSearch_Params.PreferredTarget), &PreferredTarget, sizeof(PreferredTarget));
	memcpy_s(&DoMultiSearch_Params.AdditionalContext, sizeof(DoMultiSearch_Params.AdditionalContext), &AdditionalContext, sizeof(AdditionalContext));
	memcpy_s(&DoMultiSearch_Params.ExcludedActors, sizeof(DoMultiSearch_Params.ExcludedActors), &ExcludedActors, sizeof(ExcludedActors));
	memcpy_s(&DoMultiSearch_Params.SearchResults, sizeof(DoMultiSearch_Params.SearchResults), &SearchResults, sizeof(SearchResults));
	memcpy_s(&DoMultiSearch_Params.SourceLocationOverride, sizeof(DoMultiSearch_Params.SourceLocationOverride), &SourceLocationOverride, sizeof(SourceLocationOverride));
	memcpy_s(&DoMultiSearch_Params.SourceRotationOverride, sizeof(DoMultiSearch_Params.SourceRotationOverride), &SourceRotationOverride, sizeof(SourceRotationOverride));

	uFnDoMultiSearch->iNative = 0;
	uFnDoMultiSearch->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnDoMultiSearch, &DoMultiSearch_Params, nullptr);
	uFnDoMultiSearch->FunctionFlags |= 0x400;
	uFnDoMultiSearch->iNative = 33303;

	memcpy_s(&ExcludedActors, sizeof(ExcludedActors), &DoMultiSearch_Params.ExcludedActors, sizeof(DoMultiSearch_Params.ExcludedActors));
	memcpy_s(&SearchResults, sizeof(SearchResults), &DoMultiSearch_Params.SearchResults, sizeof(DoMultiSearch_Params.SearchResults));
	memcpy_s(&SourceLocationOverride, sizeof(SourceLocationOverride), &DoMultiSearch_Params.SourceLocationOverride, sizeof(DoMultiSearch_Params.SourceLocationOverride));
	memcpy_s(&SourceRotationOverride, sizeof(SourceRotationOverride), &DoMultiSearch_Params.SourceRotationOverride, sizeof(DoMultiSearch_Params.SourceRotationOverride));

	return DoMultiSearch_Params.ReturnValue;
};

// Function GearboxFramework.GBXTargetSearchDefinition.DoSearch
// [0x00424401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[33305])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UIGBXTargetSearch*       Source                         (CPF_Parm)
// class AActor*                  PreferredTarget                (CPF_Parm)
// class UObject*                 AdditionalContext              (CPF_OptionalParm | CPF_Parm)
// class TArray<class AActor*>    ExcludedActors                 (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// struct FTargetSearchResult     SearchResult                   (CPF_Parm | CPF_OutParm)
// struct FVector                 SourceLocationOverride         (CPF_OptionalParm | CPF_Parm | CPF_OutParm)
// struct FRotator                SourceRotationOverride         (CPF_OptionalParm | CPF_Parm | CPF_OutParm)

bool UGBXTargetSearchDefinition::DoSearch(class UIGBXTargetSearch* Source, class AActor* PreferredTarget, class UObject* AdditionalContext, class TArray<class AActor*>& ExcludedActors, struct FTargetSearchResult& SearchResult, struct FVector& SourceLocationOverride, struct FRotator& SourceRotationOverride)
{
	static UFunction* uFnDoSearch = nullptr;

	if (!uFnDoSearch)
	{
		uFnDoSearch = UFunction::FindFunction("Function GearboxFramework.GBXTargetSearchDefinition.DoSearch");
	}

	UGBXTargetSearchDefinition_execDoSearch_Params DoSearch_Params;
	memset(&DoSearch_Params, 0, sizeof(DoSearch_Params));
	memcpy_s(&DoSearch_Params.Source, sizeof(DoSearch_Params.Source), &Source, sizeof(Source));
	memcpy_s(&DoSearch_Params.PreferredTarget, sizeof(DoSearch_Params.PreferredTarget), &PreferredTarget, sizeof(PreferredTarget));
	memcpy_s(&DoSearch_Params.AdditionalContext, sizeof(DoSearch_Params.AdditionalContext), &AdditionalContext, sizeof(AdditionalContext));
	memcpy_s(&DoSearch_Params.ExcludedActors, sizeof(DoSearch_Params.ExcludedActors), &ExcludedActors, sizeof(ExcludedActors));
	memcpy_s(&DoSearch_Params.SearchResult, sizeof(DoSearch_Params.SearchResult), &SearchResult, sizeof(SearchResult));
	memcpy_s(&DoSearch_Params.SourceLocationOverride, sizeof(DoSearch_Params.SourceLocationOverride), &SourceLocationOverride, sizeof(SourceLocationOverride));
	memcpy_s(&DoSearch_Params.SourceRotationOverride, sizeof(DoSearch_Params.SourceRotationOverride), &SourceRotationOverride, sizeof(SourceRotationOverride));

	uFnDoSearch->iNative = 0;
	uFnDoSearch->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnDoSearch, &DoSearch_Params, nullptr);
	uFnDoSearch->FunctionFlags |= 0x400;
	uFnDoSearch->iNative = 33305;

	memcpy_s(&ExcludedActors, sizeof(ExcludedActors), &DoSearch_Params.ExcludedActors, sizeof(DoSearch_Params.ExcludedActors));
	memcpy_s(&SearchResult, sizeof(SearchResult), &DoSearch_Params.SearchResult, sizeof(DoSearch_Params.SearchResult));
	memcpy_s(&SourceLocationOverride, sizeof(SourceLocationOverride), &DoSearch_Params.SourceLocationOverride, sizeof(DoSearch_Params.SourceLocationOverride));
	memcpy_s(&SourceRotationOverride, sizeof(SourceRotationOverride), &DoSearch_Params.SourceRotationOverride, sizeof(DoSearch_Params.SourceRotationOverride));

	return DoSearch_Params.ReturnValue;
};

// Function GearboxFramework.GBXTargetSearchLimits.SetDebuggingLifeTime
// [0x00022400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[35892])
// Parameter Info:
// float                          Lifetime                       (CPF_Parm)

void UGBXTargetSearchLimits::SetDebuggingLifeTime(float Lifetime)
{
	static UFunction* uFnSetDebuggingLifeTime = nullptr;

	if (!uFnSetDebuggingLifeTime)
	{
		uFnSetDebuggingLifeTime = UFunction::FindFunction("Function GearboxFramework.GBXTargetSearchLimits.SetDebuggingLifeTime");
	}

	UGBXTargetSearchLimits_execSetDebuggingLifeTime_Params SetDebuggingLifeTime_Params;
	memset(&SetDebuggingLifeTime_Params, 0, sizeof(SetDebuggingLifeTime_Params));
	memcpy_s(&SetDebuggingLifeTime_Params.Lifetime, sizeof(SetDebuggingLifeTime_Params.Lifetime), &Lifetime, sizeof(Lifetime));

	uFnSetDebuggingLifeTime->iNative = 0;
	uFnSetDebuggingLifeTime->FunctionFlags &= ~0x400;
	UGBXTargetSearchLimits::StaticClass()->ProcessEvent(uFnSetDebuggingLifeTime, &SetDebuggingLifeTime_Params, nullptr);
	uFnSetDebuggingLifeTime->FunctionFlags |= 0x400;
	uFnSetDebuggingLifeTime->iNative = 35892;
};

// Function GearboxFramework.GBXTargetSearchLimits.RestoreDebuggingToDefaults
// [0x00022400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[35754])
// Parameter Info:

void UGBXTargetSearchLimits::RestoreDebuggingToDefaults()
{
	static UFunction* uFnRestoreDebuggingToDefaults = nullptr;

	if (!uFnRestoreDebuggingToDefaults)
	{
		uFnRestoreDebuggingToDefaults = UFunction::FindFunction("Function GearboxFramework.GBXTargetSearchLimits.RestoreDebuggingToDefaults");
	}

	UGBXTargetSearchLimits_execRestoreDebuggingToDefaults_Params RestoreDebuggingToDefaults_Params;
	memset(&RestoreDebuggingToDefaults_Params, 0, sizeof(RestoreDebuggingToDefaults_Params));

	uFnRestoreDebuggingToDefaults->iNative = 0;
	uFnRestoreDebuggingToDefaults->FunctionFlags &= ~0x400;
	UGBXTargetSearchLimits::StaticClass()->ProcessEvent(uFnRestoreDebuggingToDefaults, &RestoreDebuggingToDefaults_Params, nullptr);
	uFnRestoreDebuggingToDefaults->FunctionFlags |= 0x400;
	uFnRestoreDebuggingToDefaults->iNative = 35754;
};

// Function GearboxFramework.GBXTargetSearchLimits.IsDebuggingEnabled
// [0x00022400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[34653])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGBXTargetSearchLimits::IsDebuggingEnabled()
{
	static UFunction* uFnIsDebuggingEnabled = nullptr;

	if (!uFnIsDebuggingEnabled)
	{
		uFnIsDebuggingEnabled = UFunction::FindFunction("Function GearboxFramework.GBXTargetSearchLimits.IsDebuggingEnabled");
	}

	UGBXTargetSearchLimits_execIsDebuggingEnabled_Params IsDebuggingEnabled_Params;
	memset(&IsDebuggingEnabled_Params, 0, sizeof(IsDebuggingEnabled_Params));

	uFnIsDebuggingEnabled->iNative = 0;
	uFnIsDebuggingEnabled->FunctionFlags &= ~0x400;
	UGBXTargetSearchLimits::StaticClass()->ProcessEvent(uFnIsDebuggingEnabled, &IsDebuggingEnabled_Params, nullptr);
	uFnIsDebuggingEnabled->FunctionFlags |= 0x400;
	uFnIsDebuggingEnabled->iNative = 34653;

	return IsDebuggingEnabled_Params.ReturnValue;
};

// Function GearboxFramework.GBXTargetSearchLimits.ToggleDebugging
// [0x00022400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[36531])
// Parameter Info:

void UGBXTargetSearchLimits::ToggleDebugging()
{
	static UFunction* uFnToggleDebugging = nullptr;

	if (!uFnToggleDebugging)
	{
		uFnToggleDebugging = UFunction::FindFunction("Function GearboxFramework.GBXTargetSearchLimits.ToggleDebugging");
	}

	UGBXTargetSearchLimits_execToggleDebugging_Params ToggleDebugging_Params;
	memset(&ToggleDebugging_Params, 0, sizeof(ToggleDebugging_Params));

	uFnToggleDebugging->iNative = 0;
	uFnToggleDebugging->FunctionFlags &= ~0x400;
	UGBXTargetSearchLimits::StaticClass()->ProcessEvent(uFnToggleDebugging, &ToggleDebugging_Params, nullptr);
	uFnToggleDebugging->FunctionFlags |= 0x400;
	uFnToggleDebugging->iNative = 36531;
};

// Function GearboxFramework.GearboxAIMoveNode.GetBrokenNodes
// [0x00422400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34055])
// Parameter Info:
// class TArray<class AGearboxAIMoveNode*> OutNodes                       (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void AGearboxAIMoveNode::GetBrokenNodes(class TArray<class AGearboxAIMoveNode*>& OutNodes)
{
	static UFunction* uFnGetBrokenNodes = nullptr;

	if (!uFnGetBrokenNodes)
	{
		uFnGetBrokenNodes = UFunction::FindFunction("Function GearboxFramework.GearboxAIMoveNode.GetBrokenNodes");
	}

	AGearboxAIMoveNode_execGetBrokenNodes_Params GetBrokenNodes_Params;
	memset(&GetBrokenNodes_Params, 0, sizeof(GetBrokenNodes_Params));
	memcpy_s(&GetBrokenNodes_Params.OutNodes, sizeof(GetBrokenNodes_Params.OutNodes), &OutNodes, sizeof(OutNodes));

	uFnGetBrokenNodes->iNative = 0;
	uFnGetBrokenNodes->FunctionFlags &= ~0x400;
	AGearboxAIMoveNode::StaticClass()->ProcessEvent(uFnGetBrokenNodes, &GetBrokenNodes_Params, nullptr);
	uFnGetBrokenNodes->FunctionFlags |= 0x400;
	uFnGetBrokenNodes->iNative = 34055;

	memcpy_s(&OutNodes, sizeof(OutNodes), &GetBrokenNodes_Params.OutNodes, sizeof(GetBrokenNodes_Params.OutNodes));
};

// Function GearboxFramework.GearboxAIMoveNode.GetError
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34097])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  OutError                       (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool AGearboxAIMoveNode::GetError(class FString& OutError)
{
	static UFunction* uFnGetError = nullptr;

	if (!uFnGetError)
	{
		uFnGetError = UFunction::FindFunction("Function GearboxFramework.GearboxAIMoveNode.GetError");
	}

	AGearboxAIMoveNode_execGetError_Params GetError_Params;
	memset(&GetError_Params, 0, sizeof(GetError_Params));
	memcpy_s(&GetError_Params.OutError, sizeof(GetError_Params.OutError), &OutError, sizeof(OutError));

	uFnGetError->iNative = 0;
	uFnGetError->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetError, &GetError_Params, nullptr);
	uFnGetError->FunctionFlags |= 0x400;
	uFnGetError->iNative = 34097;

	memcpy_s(&OutError, sizeof(OutError), &GetError_Params.OutError, sizeof(GetError_Params.OutError));

	return GetError_Params.ReturnValue;
};

// Function GearboxFramework.GearboxAIMoveNode.TimerHoldFinished
// [0x00020403] (FUNC_Final | FUNC_Defined | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2559])
// Parameter Info:

void AGearboxAIMoveNode::TimerHoldFinished()
{
	static UFunction* uFnTimerHoldFinished = nullptr;

	if (!uFnTimerHoldFinished)
	{
		uFnTimerHoldFinished = UFunction::FindFunction("Function GearboxFramework.GearboxAIMoveNode.TimerHoldFinished");
	}

	AGearboxAIMoveNode_execTimerHoldFinished_Params TimerHoldFinished_Params;
	memset(&TimerHoldFinished_Params, 0, sizeof(TimerHoldFinished_Params));

	uFnTimerHoldFinished->iNative = 0;
	uFnTimerHoldFinished->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnTimerHoldFinished, &TimerHoldFinished_Params, nullptr);
	uFnTimerHoldFinished->FunctionFlags |= 0x400;
	uFnTimerHoldFinished->iNative = 2559;
};

// Function GearboxFramework.GearboxAIMoveNode.SpecialMovesFinished
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36182])
// Parameter Info:

void AGearboxAIMoveNode::SpecialMovesFinished()
{
	static UFunction* uFnSpecialMovesFinished = nullptr;

	if (!uFnSpecialMovesFinished)
	{
		uFnSpecialMovesFinished = UFunction::FindFunction("Function GearboxFramework.GearboxAIMoveNode.SpecialMovesFinished");
	}

	AGearboxAIMoveNode_execSpecialMovesFinished_Params SpecialMovesFinished_Params;
	memset(&SpecialMovesFinished_Params, 0, sizeof(SpecialMovesFinished_Params));

	uFnSpecialMovesFinished->iNative = 0;
	uFnSpecialMovesFinished->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSpecialMovesFinished, &SpecialMovesFinished_Params, nullptr);
	uFnSpecialMovesFinished->FunctionFlags |= 0x400;
	uFnSpecialMovesFinished->iNative = 36182;
};

// Function GearboxFramework.GearboxAIMoveNode.DoesPatrolPathExistToPoint
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[33301])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AGearboxAIMoveNode*      PatrolPoint                    (CPF_Const | CPF_Parm)

bool AGearboxAIMoveNode::DoesPatrolPathExistToPoint(class AGearboxAIMoveNode* PatrolPoint)
{
	static UFunction* uFnDoesPatrolPathExistToPoint = nullptr;

	if (!uFnDoesPatrolPathExistToPoint)
	{
		uFnDoesPatrolPathExistToPoint = UFunction::FindFunction("Function GearboxFramework.GearboxAIMoveNode.DoesPatrolPathExistToPoint");
	}

	AGearboxAIMoveNode_execDoesPatrolPathExistToPoint_Params DoesPatrolPathExistToPoint_Params;
	memset(&DoesPatrolPathExistToPoint_Params, 0, sizeof(DoesPatrolPathExistToPoint_Params));
	memcpy_s(&DoesPatrolPathExistToPoint_Params.PatrolPoint, sizeof(DoesPatrolPathExistToPoint_Params.PatrolPoint), &PatrolPoint, sizeof(PatrolPoint));

	uFnDoesPatrolPathExistToPoint->iNative = 0;
	uFnDoesPatrolPathExistToPoint->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnDoesPatrolPathExistToPoint, &DoesPatrolPathExistToPoint_Params, nullptr);
	uFnDoesPatrolPathExistToPoint->FunctionFlags |= 0x400;
	uFnDoesPatrolPathExistToPoint->iNative = 33301;

	return DoesPatrolPathExistToPoint_Params.ReturnValue;
};

// Function GearboxFramework.GearboxAIMoveNode.GetAllLinkedNodes
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34041])
// Parameter Info:
// class TArray<class AGearboxAIMoveNode*> OutNodes                       (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void AGearboxAIMoveNode::GetAllLinkedNodes(class TArray<class AGearboxAIMoveNode*>& OutNodes)
{
	static UFunction* uFnGetAllLinkedNodes = nullptr;

	if (!uFnGetAllLinkedNodes)
	{
		uFnGetAllLinkedNodes = UFunction::FindFunction("Function GearboxFramework.GearboxAIMoveNode.GetAllLinkedNodes");
	}

	AGearboxAIMoveNode_execGetAllLinkedNodes_Params GetAllLinkedNodes_Params;
	memset(&GetAllLinkedNodes_Params, 0, sizeof(GetAllLinkedNodes_Params));
	memcpy_s(&GetAllLinkedNodes_Params.OutNodes, sizeof(GetAllLinkedNodes_Params.OutNodes), &OutNodes, sizeof(OutNodes));

	uFnGetAllLinkedNodes->iNative = 0;
	uFnGetAllLinkedNodes->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAllLinkedNodes, &GetAllLinkedNodes_Params, nullptr);
	uFnGetAllLinkedNodes->FunctionFlags |= 0x400;
	uFnGetAllLinkedNodes->iNative = 34041;

	memcpy_s(&OutNodes, sizeof(OutNodes), &GetAllLinkedNodes_Params.OutNodes, sizeof(GetAllLinkedNodes_Params.OutNodes));
};

// Function GearboxFramework.GearboxAIMoveNode.GetNextMoveNodeClosestToPoint
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34145])
// Parameter Info:
// class AGearboxAIMoveNode*      ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FVector&          TestPoint                      (CPF_Parm)

class AGearboxAIMoveNode* AGearboxAIMoveNode::GetNextMoveNodeClosestToPoint(const struct FVector& TestPoint)
{
	static UFunction* uFnGetNextMoveNodeClosestToPoint = nullptr;

	if (!uFnGetNextMoveNodeClosestToPoint)
	{
		uFnGetNextMoveNodeClosestToPoint = UFunction::FindFunction("Function GearboxFramework.GearboxAIMoveNode.GetNextMoveNodeClosestToPoint");
	}

	AGearboxAIMoveNode_execGetNextMoveNodeClosestToPoint_Params GetNextMoveNodeClosestToPoint_Params;
	memset(&GetNextMoveNodeClosestToPoint_Params, 0, sizeof(GetNextMoveNodeClosestToPoint_Params));
	memcpy_s(&GetNextMoveNodeClosestToPoint_Params.TestPoint, sizeof(GetNextMoveNodeClosestToPoint_Params.TestPoint), &TestPoint, sizeof(TestPoint));

	uFnGetNextMoveNodeClosestToPoint->iNative = 0;
	uFnGetNextMoveNodeClosestToPoint->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetNextMoveNodeClosestToPoint, &GetNextMoveNodeClosestToPoint_Params, nullptr);
	uFnGetNextMoveNodeClosestToPoint->FunctionFlags |= 0x400;
	uFnGetNextMoveNodeClosestToPoint->iNative = 34145;

	return GetNextMoveNodeClosestToPoint_Params.ReturnValue;
};

// Function GearboxFramework.GearboxAIMoveNode.GetPrevMoveNode
// [0x00024400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[34185])
// Parameter Info:
// class AGearboxAIMoveNode*      ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// bool                           bIgnoreEnabled                 (CPF_OptionalParm | CPF_Parm)
// class AActor*                  User                           (CPF_OptionalParm | CPF_Parm)

class AGearboxAIMoveNode* AGearboxAIMoveNode::GetPrevMoveNode(bool bIgnoreEnabled, class AActor* User)
{
	static UFunction* uFnGetPrevMoveNode = nullptr;

	if (!uFnGetPrevMoveNode)
	{
		uFnGetPrevMoveNode = UFunction::FindFunction("Function GearboxFramework.GearboxAIMoveNode.GetPrevMoveNode");
	}

	AGearboxAIMoveNode_execGetPrevMoveNode_Params GetPrevMoveNode_Params;
	memset(&GetPrevMoveNode_Params, 0, sizeof(GetPrevMoveNode_Params));
	GetPrevMoveNode_Params.bIgnoreEnabled = bIgnoreEnabled;
	memcpy_s(&GetPrevMoveNode_Params.User, sizeof(GetPrevMoveNode_Params.User), &User, sizeof(User));

	uFnGetPrevMoveNode->iNative = 0;
	uFnGetPrevMoveNode->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetPrevMoveNode, &GetPrevMoveNode_Params, nullptr);
	uFnGetPrevMoveNode->FunctionFlags |= 0x400;
	uFnGetPrevMoveNode->iNative = 34185;

	return GetPrevMoveNode_Params.ReturnValue;
};

// Function GearboxFramework.GearboxAIMoveNode.GetNextMoveNode
// [0x00024400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[34144])
// Parameter Info:
// class AGearboxAIMoveNode*      ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// bool                           bIgnoreEnabled                 (CPF_OptionalParm | CPF_Parm)
// class AActor*                  User                           (CPF_OptionalParm | CPF_Parm)

class AGearboxAIMoveNode* AGearboxAIMoveNode::GetNextMoveNode(bool bIgnoreEnabled, class AActor* User)
{
	static UFunction* uFnGetNextMoveNode = nullptr;

	if (!uFnGetNextMoveNode)
	{
		uFnGetNextMoveNode = UFunction::FindFunction("Function GearboxFramework.GearboxAIMoveNode.GetNextMoveNode");
	}

	AGearboxAIMoveNode_execGetNextMoveNode_Params GetNextMoveNode_Params;
	memset(&GetNextMoveNode_Params, 0, sizeof(GetNextMoveNode_Params));
	GetNextMoveNode_Params.bIgnoreEnabled = bIgnoreEnabled;
	memcpy_s(&GetNextMoveNode_Params.User, sizeof(GetNextMoveNode_Params.User), &User, sizeof(User));

	uFnGetNextMoveNode->iNative = 0;
	uFnGetNextMoveNode->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetNextMoveNode, &GetNextMoveNode_Params, nullptr);
	uFnGetNextMoveNode->FunctionFlags |= 0x400;
	uFnGetNextMoveNode->iNative = 34144;

	return GetNextMoveNode_Params.ReturnValue;
};

// Function GearboxFramework.GearboxAIMoveNode.RemoveNode
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35674])
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AGearboxAIMoveNode*      OldNode                        (CPF_Parm)

int32_t AGearboxAIMoveNode::RemoveNode(class AGearboxAIMoveNode* OldNode)
{
	static UFunction* uFnRemoveNode = nullptr;

	if (!uFnRemoveNode)
	{
		uFnRemoveNode = UFunction::FindFunction("Function GearboxFramework.GearboxAIMoveNode.RemoveNode");
	}

	AGearboxAIMoveNode_execRemoveNode_Params RemoveNode_Params;
	memset(&RemoveNode_Params, 0, sizeof(RemoveNode_Params));
	memcpy_s(&RemoveNode_Params.OldNode, sizeof(RemoveNode_Params.OldNode), &OldNode, sizeof(OldNode));

	uFnRemoveNode->iNative = 0;
	uFnRemoveNode->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRemoveNode, &RemoveNode_Params, nullptr);
	uFnRemoveNode->FunctionFlags |= 0x400;
	uFnRemoveNode->iNative = 35674;

	return RemoveNode_Params.ReturnValue;
};

// Function GearboxFramework.GearboxAIMoveNode.AddNode
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[31676])
// Parameter Info:
// class AGearboxAIMoveNode*      NewNode                        (CPF_Parm)

void AGearboxAIMoveNode::AddNode(class AGearboxAIMoveNode* NewNode)
{
	static UFunction* uFnAddNode = nullptr;

	if (!uFnAddNode)
	{
		uFnAddNode = UFunction::FindFunction("Function GearboxFramework.GearboxAIMoveNode.AddNode");
	}

	AGearboxAIMoveNode_execAddNode_Params AddNode_Params;
	memset(&AddNode_Params, 0, sizeof(AddNode_Params));
	memcpy_s(&AddNode_Params.NewNode, sizeof(AddNode_Params.NewNode), &NewNode, sizeof(NewNode));

	uFnAddNode->iNative = 0;
	uFnAddNode->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnAddNode, &AddNode_Params, nullptr);
	uFnAddNode->FunctionFlags |= 0x400;
	uFnAddNode->iNative = 31676;
};

// Function GearboxFramework.GearboxAIMoveNode.ClearLinks
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32754])
// Parameter Info:

void AGearboxAIMoveNode::ClearLinks()
{
	static UFunction* uFnClearLinks = nullptr;

	if (!uFnClearLinks)
	{
		uFnClearLinks = UFunction::FindFunction("Function GearboxFramework.GearboxAIMoveNode.ClearLinks");
	}

	AGearboxAIMoveNode_execClearLinks_Params ClearLinks_Params;
	memset(&ClearLinks_Params, 0, sizeof(ClearLinks_Params));

	uFnClearLinks->iNative = 0;
	uFnClearLinks->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnClearLinks, &ClearLinks_Params, nullptr);
	uFnClearLinks->FunctionFlags |= 0x400;
	uFnClearLinks->iNative = 32754;
};

// Function GearboxFramework.GearboxAIMoveNode.OnToggle
// [0x12020102] (FUNC_Defined | FUNC_Simulated | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class USeqAct_Toggle*          Action                         (CPF_Parm)

void AGearboxAIMoveNode::OnToggle(class USeqAct_Toggle* Action)
{
	static UFunction* uFnOnToggle = nullptr;

	if (!uFnOnToggle)
	{
		uFnOnToggle = UFunction::FindFunction("Function GearboxFramework.GearboxAIMoveNode.OnToggle");
	}

	AGearboxAIMoveNode_execOnToggle_Params OnToggle_Params;
	memset(&OnToggle_Params, 0, sizeof(OnToggle_Params));
	memcpy_s(&OnToggle_Params.Action, sizeof(OnToggle_Params.Action), &Action, sizeof(Action));

	this->ProcessEvent(uFnOnToggle, &OnToggle_Params, nullptr);
};

// Function GearboxFramework.AIDebugTarget.GetObstacleInfo
// [0x00024400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[34160])
// Parameter Info:
// class UPathingObstacleInfo*    ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// bool                           bFillInfo                      (CPF_OptionalParm | CPF_Parm)

class UPathingObstacleInfo* AAIDebugTarget::GetObstacleInfo(bool bFillInfo)
{
	static UFunction* uFnGetObstacleInfo = nullptr;

	if (!uFnGetObstacleInfo)
	{
		uFnGetObstacleInfo = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.GetObstacleInfo");
	}

	AAIDebugTarget_execGetObstacleInfo_Params GetObstacleInfo_Params;
	memset(&GetObstacleInfo_Params, 0, sizeof(GetObstacleInfo_Params));
	GetObstacleInfo_Params.bFillInfo = bFillInfo;

	uFnGetObstacleInfo->iNative = 0;
	uFnGetObstacleInfo->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetObstacleInfo, &GetObstacleInfo_Params, nullptr);
	uFnGetObstacleInfo->FunctionFlags |= 0x400;
	uFnGetObstacleInfo->iNative = 34160;

	return GetObstacleInfo_Params.ReturnValue;
};

// Function GearboxFramework.AIDebugTarget.SetObstacleInfo
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35913])
// Parameter Info:
// class UPathingObstacleInfo*    Info                           (CPF_Parm)

void AAIDebugTarget::SetObstacleInfo(class UPathingObstacleInfo* Info)
{
	static UFunction* uFnSetObstacleInfo = nullptr;

	if (!uFnSetObstacleInfo)
	{
		uFnSetObstacleInfo = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.SetObstacleInfo");
	}

	AAIDebugTarget_execSetObstacleInfo_Params SetObstacleInfo_Params;
	memset(&SetObstacleInfo_Params, 0, sizeof(SetObstacleInfo_Params));
	memcpy_s(&SetObstacleInfo_Params.Info, sizeof(SetObstacleInfo_Params.Info), &Info, sizeof(Info));

	uFnSetObstacleInfo->iNative = 0;
	uFnSetObstacleInfo->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetObstacleInfo, &SetObstacleInfo_Params, nullptr);
	uFnSetObstacleInfo->FunctionFlags |= 0x400;
	uFnSetObstacleInfo->iNative = 35913;
};

// Function GearboxFramework.AIDebugTarget.GetObstacleActor
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34159])
// Parameter Info:
// class AActor*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class AActor* AAIDebugTarget::GetObstacleActor()
{
	static UFunction* uFnGetObstacleActor = nullptr;

	if (!uFnGetObstacleActor)
	{
		uFnGetObstacleActor = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.GetObstacleActor");
	}

	AAIDebugTarget_execGetObstacleActor_Params GetObstacleActor_Params;
	memset(&GetObstacleActor_Params, 0, sizeof(GetObstacleActor_Params));

	uFnGetObstacleActor->iNative = 0;
	uFnGetObstacleActor->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetObstacleActor, &GetObstacleActor_Params, nullptr);
	uFnGetObstacleActor->FunctionFlags |= 0x400;
	uFnGetObstacleActor->iNative = 34159;

	return GetObstacleActor_Params.ReturnValue;
};

// Function GearboxFramework.AIDebugTarget.GetAudibility
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[23564])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float AAIDebugTarget::GetAudibility()
{
	static UFunction* uFnGetAudibility = nullptr;

	if (!uFnGetAudibility)
	{
		uFnGetAudibility = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.GetAudibility");
	}

	AAIDebugTarget_execGetAudibility_Params GetAudibility_Params;
	memset(&GetAudibility_Params, 0, sizeof(GetAudibility_Params));

	uFnGetAudibility->iNative = 0;
	uFnGetAudibility->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAudibility, &GetAudibility_Params, nullptr);
	uFnGetAudibility->FunctionFlags |= 0x400;
	uFnGetAudibility->iNative = 23564;

	return GetAudibility_Params.ReturnValue;
};

// Function GearboxFramework.AIDebugTarget.GetVisibility
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[24027])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float AAIDebugTarget::GetVisibility()
{
	static UFunction* uFnGetVisibility = nullptr;

	if (!uFnGetVisibility)
	{
		uFnGetVisibility = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.GetVisibility");
	}

	AAIDebugTarget_execGetVisibility_Params GetVisibility_Params;
	memset(&GetVisibility_Params, 0, sizeof(GetVisibility_Params));

	uFnGetVisibility->iNative = 0;
	uFnGetVisibility->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetVisibility, &GetVisibility_Params, nullptr);
	uFnGetVisibility->FunctionFlags |= 0x400;
	uFnGetVisibility->iNative = 24027;

	return GetVisibility_Params.ReturnValue;
};

// Function GearboxFramework.AIDebugTarget.SetPatsy
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[28914])
// Parameter Info:
// class UITargetable*            NewPatsy                       (CPF_Parm)

void AAIDebugTarget::SetPatsy(class UITargetable* NewPatsy)
{
	static UFunction* uFnSetPatsy = nullptr;

	if (!uFnSetPatsy)
	{
		uFnSetPatsy = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.SetPatsy");
	}

	AAIDebugTarget_execSetPatsy_Params SetPatsy_Params;
	memset(&SetPatsy_Params, 0, sizeof(SetPatsy_Params));
	memcpy_s(&SetPatsy_Params.NewPatsy, sizeof(SetPatsy_Params.NewPatsy), &NewPatsy, sizeof(NewPatsy));

	uFnSetPatsy->iNative = 0;
	uFnSetPatsy->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetPatsy, &SetPatsy_Params, nullptr);
	uFnSetPatsy->FunctionFlags |= 0x400;
	uFnSetPatsy->iNative = 28914;
};

// Function GearboxFramework.AIDebugTarget.GetPatsy
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[23847])
// Parameter Info:
// class UITargetable*            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UITargetable* AAIDebugTarget::GetPatsy()
{
	static UFunction* uFnGetPatsy = nullptr;

	if (!uFnGetPatsy)
	{
		uFnGetPatsy = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.GetPatsy");
	}

	AAIDebugTarget_execGetPatsy_Params GetPatsy_Params;
	memset(&GetPatsy_Params, 0, sizeof(GetPatsy_Params));

	uFnGetPatsy->iNative = 0;
	uFnGetPatsy->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetPatsy, &GetPatsy_Params, nullptr);
	uFnGetPatsy->FunctionFlags |= 0x400;
	uFnGetPatsy->iNative = 23847;

	return GetPatsy_Params.ReturnValue;
};

// Function GearboxFramework.AIDebugTarget.IsBeingHealed
// [0x00020500] (FUNC_Simulated | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[24848])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool AAIDebugTarget::IsBeingHealed()
{
	static UFunction* uFnIsBeingHealed = nullptr;

	if (!uFnIsBeingHealed)
	{
		uFnIsBeingHealed = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.IsBeingHealed");
	}

	AAIDebugTarget_execIsBeingHealed_Params IsBeingHealed_Params;
	memset(&IsBeingHealed_Params, 0, sizeof(IsBeingHealed_Params));

	uFnIsBeingHealed->iNative = 0;
	uFnIsBeingHealed->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsBeingHealed, &IsBeingHealed_Params, nullptr);
	uFnIsBeingHealed->FunctionFlags |= 0x400;
	uFnIsBeingHealed->iNative = 24848;

	return IsBeingHealed_Params.ReturnValue;
};

// Function GearboxFramework.AIDebugTarget.SetBeingHealed
// [0x00020500] (FUNC_Simulated | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[28724])
// Parameter Info:
// bool                           bNewBeingHealed                (CPF_Parm)

void AAIDebugTarget::SetBeingHealed(bool bNewBeingHealed)
{
	static UFunction* uFnSetBeingHealed = nullptr;

	if (!uFnSetBeingHealed)
	{
		uFnSetBeingHealed = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.SetBeingHealed");
	}

	AAIDebugTarget_execSetBeingHealed_Params SetBeingHealed_Params;
	memset(&SetBeingHealed_Params, 0, sizeof(SetBeingHealed_Params));
	SetBeingHealed_Params.bNewBeingHealed = bNewBeingHealed;

	uFnSetBeingHealed->iNative = 0;
	uFnSetBeingHealed->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetBeingHealed, &SetBeingHealed_Params, nullptr);
	uFnSetBeingHealed->FunctionFlags |= 0x400;
	uFnSetBeingHealed->iNative = 28724;
};

// Function GearboxFramework.AIDebugTarget.IsBoss
// [0x00020500] (FUNC_Simulated | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[24851])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool AAIDebugTarget::IsBoss()
{
	static UFunction* uFnIsBoss = nullptr;

	if (!uFnIsBoss)
	{
		uFnIsBoss = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.IsBoss");
	}

	AAIDebugTarget_execIsBoss_Params IsBoss_Params;
	memset(&IsBoss_Params, 0, sizeof(IsBoss_Params));

	uFnIsBoss->iNative = 0;
	uFnIsBoss->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsBoss, &IsBoss_Params, nullptr);
	uFnIsBoss->FunctionFlags |= 0x400;
	uFnIsBoss->iNative = 24851;

	return IsBoss_Params.ReturnValue;
};

// Function GearboxFramework.AIDebugTarget.Behavior_RegisterTargetable
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[10753])
// Parameter Info:
// bool                           bUnregister                    (CPF_Parm)

void AAIDebugTarget::Behavior_RegisterTargetable(bool bUnregister)
{
	static UFunction* uFnBehavior_RegisterTargetable = nullptr;

	if (!uFnBehavior_RegisterTargetable)
	{
		uFnBehavior_RegisterTargetable = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.Behavior_RegisterTargetable");
	}

	AAIDebugTarget_execBehavior_RegisterTargetable_Params Behavior_RegisterTargetable_Params;
	memset(&Behavior_RegisterTargetable_Params, 0, sizeof(Behavior_RegisterTargetable_Params));
	Behavior_RegisterTargetable_Params.bUnregister = bUnregister;

	uFnBehavior_RegisterTargetable->iNative = 0;
	uFnBehavior_RegisterTargetable->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnBehavior_RegisterTargetable, &Behavior_RegisterTargetable_Params, nullptr);
	uFnBehavior_RegisterTargetable->FunctionFlags |= 0x400;
	uFnBehavior_RegisterTargetable->iNative = 10753;
};

// Function GearboxFramework.AIDebugTarget.IsTargetableProxy
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[24943])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool AAIDebugTarget::IsTargetableProxy()
{
	static UFunction* uFnIsTargetableProxy = nullptr;

	if (!uFnIsTargetableProxy)
	{
		uFnIsTargetableProxy = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.IsTargetableProxy");
	}

	AAIDebugTarget_execIsTargetableProxy_Params IsTargetableProxy_Params;
	memset(&IsTargetableProxy_Params, 0, sizeof(IsTargetableProxy_Params));

	uFnIsTargetableProxy->iNative = 0;
	uFnIsTargetableProxy->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsTargetableProxy, &IsTargetableProxy_Params, nullptr);
	uFnIsTargetableProxy->FunctionFlags |= 0x400;
	uFnIsTargetableProxy->iNative = 24943;

	return IsTargetableProxy_Params.ReturnValue;
};

// Function GearboxFramework.AIDebugTarget.GetAutoAimProfile
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[23566])
// Parameter Info:
// EAutoAimProfile                ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

EAutoAimProfile AAIDebugTarget::GetAutoAimProfile()
{
	static UFunction* uFnGetAutoAimProfile = nullptr;

	if (!uFnGetAutoAimProfile)
	{
		uFnGetAutoAimProfile = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.GetAutoAimProfile");
	}

	AAIDebugTarget_execGetAutoAimProfile_Params GetAutoAimProfile_Params;
	memset(&GetAutoAimProfile_Params, 0, sizeof(GetAutoAimProfile_Params));

	uFnGetAutoAimProfile->iNative = 0;
	uFnGetAutoAimProfile->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAutoAimProfile, &GetAutoAimProfile_Params, nullptr);
	uFnGetAutoAimProfile->FunctionFlags |= 0x400;
	uFnGetAutoAimProfile->iNative = 23566;

	return GetAutoAimProfile_Params.ReturnValue;
};

// Function GearboxFramework.AIDebugTarget.GetMagnetismRange
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[23780])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float AAIDebugTarget::GetMagnetismRange()
{
	static UFunction* uFnGetMagnetismRange = nullptr;

	if (!uFnGetMagnetismRange)
	{
		uFnGetMagnetismRange = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.GetMagnetismRange");
	}

	AAIDebugTarget_execGetMagnetismRange_Params GetMagnetismRange_Params;
	memset(&GetMagnetismRange_Params, 0, sizeof(GetMagnetismRange_Params));

	uFnGetMagnetismRange->iNative = 0;
	uFnGetMagnetismRange->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetMagnetismRange, &GetMagnetismRange_Params, nullptr);
	uFnGetMagnetismRange->FunctionFlags |= 0x400;
	uFnGetMagnetismRange->iNative = 23780;

	return GetMagnetismRange_Params.ReturnValue;
};

// Function GearboxFramework.AIDebugTarget.GetMagnetismOrigin
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[23779])
// Parameter Info:
// struct FVector                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FVector AAIDebugTarget::GetMagnetismOrigin()
{
	static UFunction* uFnGetMagnetismOrigin = nullptr;

	if (!uFnGetMagnetismOrigin)
	{
		uFnGetMagnetismOrigin = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.GetMagnetismOrigin");
	}

	AAIDebugTarget_execGetMagnetismOrigin_Params GetMagnetismOrigin_Params;
	memset(&GetMagnetismOrigin_Params, 0, sizeof(GetMagnetismOrigin_Params));

	uFnGetMagnetismOrigin->iNative = 0;
	uFnGetMagnetismOrigin->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetMagnetismOrigin, &GetMagnetismOrigin_Params, nullptr);
	uFnGetMagnetismOrigin->FunctionFlags |= 0x400;
	uFnGetMagnetismOrigin->iNative = 23779;

	return GetMagnetismOrigin_Params.ReturnValue;
};

// Function GearboxFramework.AIDebugTarget.IsAutoAimTarget
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[24844])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool AAIDebugTarget::IsAutoAimTarget()
{
	static UFunction* uFnIsAutoAimTarget = nullptr;

	if (!uFnIsAutoAimTarget)
	{
		uFnIsAutoAimTarget = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.IsAutoAimTarget");
	}

	AAIDebugTarget_execIsAutoAimTarget_Params IsAutoAimTarget_Params;
	memset(&IsAutoAimTarget_Params, 0, sizeof(IsAutoAimTarget_Params));

	uFnIsAutoAimTarget->iNative = 0;
	uFnIsAutoAimTarget->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsAutoAimTarget, &IsAutoAimTarget_Params, nullptr);
	uFnIsAutoAimTarget->FunctionFlags |= 0x400;
	uFnIsAutoAimTarget->iNative = 24844;

	return IsAutoAimTarget_Params.ReturnValue;
};

// Function GearboxFramework.AIDebugTarget.GetTargetingModifier
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[23976])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float AAIDebugTarget::GetTargetingModifier()
{
	static UFunction* uFnGetTargetingModifier = nullptr;

	if (!uFnGetTargetingModifier)
	{
		uFnGetTargetingModifier = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.GetTargetingModifier");
	}

	AAIDebugTarget_execGetTargetingModifier_Params GetTargetingModifier_Params;
	memset(&GetTargetingModifier_Params, 0, sizeof(GetTargetingModifier_Params));

	uFnGetTargetingModifier->iNative = 0;
	uFnGetTargetingModifier->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetTargetingModifier, &GetTargetingModifier_Params, nullptr);
	uFnGetTargetingModifier->FunctionFlags |= 0x400;
	uFnGetTargetingModifier->iNative = 23976;

	return GetTargetingModifier_Params.ReturnValue;
};

// Function GearboxFramework.AIDebugTarget.IsValidHomingTarget
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[24953])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool AAIDebugTarget::IsValidHomingTarget()
{
	static UFunction* uFnIsValidHomingTarget = nullptr;

	if (!uFnIsValidHomingTarget)
	{
		uFnIsValidHomingTarget = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.IsValidHomingTarget");
	}

	AAIDebugTarget_execIsValidHomingTarget_Params IsValidHomingTarget_Params;
	memset(&IsValidHomingTarget_Params, 0, sizeof(IsValidHomingTarget_Params));

	uFnIsValidHomingTarget->iNative = 0;
	uFnIsValidHomingTarget->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsValidHomingTarget, &IsValidHomingTarget_Params, nullptr);
	uFnIsValidHomingTarget->FunctionFlags |= 0x400;
	uFnIsValidHomingTarget->iNative = 24953;

	return IsValidHomingTarget_Params.ReturnValue;
};

// Function GearboxFramework.AIDebugTarget.GetTargetableIsHidden
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[23972])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool AAIDebugTarget::GetTargetableIsHidden()
{
	static UFunction* uFnGetTargetableIsHidden = nullptr;

	if (!uFnGetTargetableIsHidden)
	{
		uFnGetTargetableIsHidden = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.GetTargetableIsHidden");
	}

	AAIDebugTarget_execGetTargetableIsHidden_Params GetTargetableIsHidden_Params;
	memset(&GetTargetableIsHidden_Params, 0, sizeof(GetTargetableIsHidden_Params));

	uFnGetTargetableIsHidden->iNative = 0;
	uFnGetTargetableIsHidden->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetTargetableIsHidden, &GetTargetableIsHidden_Params, nullptr);
	uFnGetTargetableIsHidden->FunctionFlags |= 0x400;
	uFnGetTargetableIsHidden->iNative = 23972;

	return GetTargetableIsHidden_Params.ReturnValue;
};

// Function GearboxFramework.AIDebugTarget.CanSnapZoom
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[20422])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool AAIDebugTarget::CanSnapZoom()
{
	static UFunction* uFnCanSnapZoom = nullptr;

	if (!uFnCanSnapZoom)
	{
		uFnCanSnapZoom = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.CanSnapZoom");
	}

	AAIDebugTarget_execCanSnapZoom_Params CanSnapZoom_Params;
	memset(&CanSnapZoom_Params, 0, sizeof(CanSnapZoom_Params));

	uFnCanSnapZoom->iNative = 0;
	uFnCanSnapZoom->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCanSnapZoom, &CanSnapZoom_Params, nullptr);
	uFnCanSnapZoom->FunctionFlags |= 0x400;
	uFnCanSnapZoom->iNative = 20422;

	return CanSnapZoom_Params.ReturnValue;
};

// Function GearboxFramework.AIDebugTarget.GetSnapRegion
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[23936])
// Parameter Info:
// struct FTargetSnapRegion       SnapRegion                     (CPF_Parm | CPF_OutParm)

void AAIDebugTarget::GetSnapRegion(struct FTargetSnapRegion& SnapRegion)
{
	static UFunction* uFnGetSnapRegion = nullptr;

	if (!uFnGetSnapRegion)
	{
		uFnGetSnapRegion = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.GetSnapRegion");
	}

	AAIDebugTarget_execGetSnapRegion_Params GetSnapRegion_Params;
	memset(&GetSnapRegion_Params, 0, sizeof(GetSnapRegion_Params));
	memcpy_s(&GetSnapRegion_Params.SnapRegion, sizeof(GetSnapRegion_Params.SnapRegion), &SnapRegion, sizeof(SnapRegion));

	uFnGetSnapRegion->iNative = 0;
	uFnGetSnapRegion->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetSnapRegion, &GetSnapRegion_Params, nullptr);
	uFnGetSnapRegion->FunctionFlags |= 0x400;
	uFnGetSnapRegion->iNative = 23936;

	memcpy_s(&SnapRegion, sizeof(SnapRegion), &GetSnapRegion_Params.SnapRegion, sizeof(GetSnapRegion_Params.SnapRegion));
};

// Function GearboxFramework.AIDebugTarget.GetSnapLocation
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[23935])
// Parameter Info:
// struct FVector                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FVector AAIDebugTarget::GetSnapLocation()
{
	static UFunction* uFnGetSnapLocation = nullptr;

	if (!uFnGetSnapLocation)
	{
		uFnGetSnapLocation = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.GetSnapLocation");
	}

	AAIDebugTarget_execGetSnapLocation_Params GetSnapLocation_Params;
	memset(&GetSnapLocation_Params, 0, sizeof(GetSnapLocation_Params));

	uFnGetSnapLocation->iNative = 0;
	uFnGetSnapLocation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetSnapLocation, &GetSnapLocation_Params, nullptr);
	uFnGetSnapLocation->FunctionFlags |= 0x400;
	uFnGetSnapLocation->iNative = 23935;

	return GetSnapLocation_Params.ReturnValue;
};

// Function GearboxFramework.AIDebugTarget.GetAuxiliaryTargetableLocations
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[23567])
// Parameter Info:
// class TArray<struct FVector>   AuxLocations                   (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void AAIDebugTarget::GetAuxiliaryTargetableLocations(class TArray<struct FVector>& AuxLocations)
{
	static UFunction* uFnGetAuxiliaryTargetableLocations = nullptr;

	if (!uFnGetAuxiliaryTargetableLocations)
	{
		uFnGetAuxiliaryTargetableLocations = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.GetAuxiliaryTargetableLocations");
	}

	AAIDebugTarget_execGetAuxiliaryTargetableLocations_Params GetAuxiliaryTargetableLocations_Params;
	memset(&GetAuxiliaryTargetableLocations_Params, 0, sizeof(GetAuxiliaryTargetableLocations_Params));
	memcpy_s(&GetAuxiliaryTargetableLocations_Params.AuxLocations, sizeof(GetAuxiliaryTargetableLocations_Params.AuxLocations), &AuxLocations, sizeof(AuxLocations));

	uFnGetAuxiliaryTargetableLocations->iNative = 0;
	uFnGetAuxiliaryTargetableLocations->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAuxiliaryTargetableLocations, &GetAuxiliaryTargetableLocations_Params, nullptr);
	uFnGetAuxiliaryTargetableLocations->FunctionFlags |= 0x400;
	uFnGetAuxiliaryTargetableLocations->iNative = 23567;

	memcpy_s(&AuxLocations, sizeof(AuxLocations), &GetAuxiliaryTargetableLocations_Params.AuxLocations, sizeof(GetAuxiliaryTargetableLocations_Params.AuxLocations));
};

// Function GearboxFramework.AIDebugTarget.GetTargetableLocation
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[23974])
// Parameter Info:
// struct FVector                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FVector AAIDebugTarget::GetTargetableLocation()
{
	static UFunction* uFnGetTargetableLocation = nullptr;

	if (!uFnGetTargetableLocation)
	{
		uFnGetTargetableLocation = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.GetTargetableLocation");
	}

	AAIDebugTarget_execGetTargetableLocation_Params GetTargetableLocation_Params;
	memset(&GetTargetableLocation_Params, 0, sizeof(GetTargetableLocation_Params));

	uFnGetTargetableLocation->iNative = 0;
	uFnGetTargetableLocation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetTargetableLocation, &GetTargetableLocation_Params, nullptr);
	uFnGetTargetableLocation->FunctionFlags |= 0x400;
	uFnGetTargetableLocation->iNative = 23974;

	return GetTargetableLocation_Params.ReturnValue;
};

// Function GearboxFramework.AIDebugTarget.Behavior_SetCanTarget
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[18322])
// Parameter Info:
// EChangeStatus                  ChangeStatus                   (CPF_Parm)

void AAIDebugTarget::Behavior_SetCanTarget(EChangeStatus ChangeStatus)
{
	static UFunction* uFnBehavior_SetCanTarget = nullptr;

	if (!uFnBehavior_SetCanTarget)
	{
		uFnBehavior_SetCanTarget = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.Behavior_SetCanTarget");
	}

	AAIDebugTarget_execBehavior_SetCanTarget_Params Behavior_SetCanTarget_Params;
	memset(&Behavior_SetCanTarget_Params, 0, sizeof(Behavior_SetCanTarget_Params));
	memcpy_s(&Behavior_SetCanTarget_Params.ChangeStatus, sizeof(Behavior_SetCanTarget_Params.ChangeStatus), &ChangeStatus, sizeof(ChangeStatus));

	uFnBehavior_SetCanTarget->iNative = 0;
	uFnBehavior_SetCanTarget->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnBehavior_SetCanTarget, &Behavior_SetCanTarget_Params, nullptr);
	uFnBehavior_SetCanTarget->FunctionFlags |= 0x400;
	uFnBehavior_SetCanTarget->iNative = 18322;
};

// Function GearboxFramework.AIDebugTarget.IsTargetable
// [0x00024400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[24942])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        TargetFlags                    (CPF_OptionalParm | CPF_Parm)

bool AAIDebugTarget::IsTargetable(int32_t TargetFlags)
{
	static UFunction* uFnIsTargetable = nullptr;

	if (!uFnIsTargetable)
	{
		uFnIsTargetable = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.IsTargetable");
	}

	AAIDebugTarget_execIsTargetable_Params IsTargetable_Params;
	memset(&IsTargetable_Params, 0, sizeof(IsTargetable_Params));
	memcpy_s(&IsTargetable_Params.TargetFlags, sizeof(IsTargetable_Params.TargetFlags), &TargetFlags, sizeof(TargetFlags));

	uFnIsTargetable->iNative = 0;
	uFnIsTargetable->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsTargetable, &IsTargetable_Params, nullptr);
	uFnIsTargetable->FunctionFlags |= 0x400;
	uFnIsTargetable->iNative = 24942;

	return IsTargetable_Params.ReturnValue;
};

// Function GearboxFramework.AIDebugTarget.ShowSelfAsTarget
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[29092])
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// bool                           bControllersOnly               (CPF_Parm)

int32_t AAIDebugTarget::ShowSelfAsTarget(bool bControllersOnly)
{
	static UFunction* uFnShowSelfAsTarget = nullptr;

	if (!uFnShowSelfAsTarget)
	{
		uFnShowSelfAsTarget = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.ShowSelfAsTarget");
	}

	AAIDebugTarget_execShowSelfAsTarget_Params ShowSelfAsTarget_Params;
	memset(&ShowSelfAsTarget_Params, 0, sizeof(ShowSelfAsTarget_Params));
	ShowSelfAsTarget_Params.bControllersOnly = bControllersOnly;

	uFnShowSelfAsTarget->iNative = 0;
	uFnShowSelfAsTarget->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnShowSelfAsTarget, &ShowSelfAsTarget_Params, nullptr);
	uFnShowSelfAsTarget->FunctionFlags |= 0x400;
	uFnShowSelfAsTarget->iNative = 29092;

	return ShowSelfAsTarget_Params.ReturnValue;
};

// Function GearboxFramework.AIDebugTarget.GetOpinion
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[23837])
// Parameter Info:
// EOpinion                       ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 Other                          (CPF_Parm)

EOpinion AAIDebugTarget::GetOpinion(class UObject* Other)
{
	static UFunction* uFnGetOpinion = nullptr;

	if (!uFnGetOpinion)
	{
		uFnGetOpinion = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.GetOpinion");
	}

	AAIDebugTarget_execGetOpinion_Params GetOpinion_Params;
	memset(&GetOpinion_Params, 0, sizeof(GetOpinion_Params));
	memcpy_s(&GetOpinion_Params.Other, sizeof(GetOpinion_Params.Other), &Other, sizeof(Other));

	uFnGetOpinion->iNative = 0;
	uFnGetOpinion->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetOpinion, &GetOpinion_Params, nullptr);
	uFnGetOpinion->FunctionFlags |= 0x400;
	uFnGetOpinion->iNative = 23837;

	return GetOpinion_Params.ReturnValue;
};

// Function GearboxFramework.AIDebugTarget.SetAllegiance
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[28695])
// Parameter Info:
// class UPawnAllegiance*         NewAllegiance                  (CPF_Parm)

void AAIDebugTarget::SetAllegiance(class UPawnAllegiance* NewAllegiance)
{
	static UFunction* uFnSetAllegiance = nullptr;

	if (!uFnSetAllegiance)
	{
		uFnSetAllegiance = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.SetAllegiance");
	}

	AAIDebugTarget_execSetAllegiance_Params SetAllegiance_Params;
	memset(&SetAllegiance_Params, 0, sizeof(SetAllegiance_Params));
	memcpy_s(&SetAllegiance_Params.NewAllegiance, sizeof(SetAllegiance_Params.NewAllegiance), &NewAllegiance, sizeof(NewAllegiance));

	uFnSetAllegiance->iNative = 0;
	uFnSetAllegiance->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetAllegiance, &SetAllegiance_Params, nullptr);
	uFnSetAllegiance->FunctionFlags |= 0x400;
	uFnSetAllegiance->iNative = 28695;
};

// Function GearboxFramework.AIDebugTarget.GetDefaultAllegiance
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[23666])
// Parameter Info:
// class UPawnAllegiance*         ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UPawnAllegiance* AAIDebugTarget::GetDefaultAllegiance()
{
	static UFunction* uFnGetDefaultAllegiance = nullptr;

	if (!uFnGetDefaultAllegiance)
	{
		uFnGetDefaultAllegiance = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.GetDefaultAllegiance");
	}

	AAIDebugTarget_execGetDefaultAllegiance_Params GetDefaultAllegiance_Params;
	memset(&GetDefaultAllegiance_Params, 0, sizeof(GetDefaultAllegiance_Params));

	uFnGetDefaultAllegiance->iNative = 0;
	uFnGetDefaultAllegiance->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetDefaultAllegiance, &GetDefaultAllegiance_Params, nullptr);
	uFnGetDefaultAllegiance->FunctionFlags |= 0x400;
	uFnGetDefaultAllegiance->iNative = 23666;

	return GetDefaultAllegiance_Params.ReturnValue;
};

// Function GearboxFramework.AIDebugTarget.GetObjectAllegiance
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[23829])
// Parameter Info:
// class UPawnAllegiance*         ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UPawnAllegiance* AAIDebugTarget::GetObjectAllegianceW()
{
	static UFunction* uFnGetObjectAllegianceW = nullptr;

	if (!uFnGetObjectAllegianceW)
	{
		uFnGetObjectAllegianceW = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.GetObjectAllegiance");
	}

	AAIDebugTarget_execGetObjectAllegianceW_Params GetObjectAllegianceW_Params;
	memset(&GetObjectAllegianceW_Params, 0, sizeof(GetObjectAllegianceW_Params));

	uFnGetObjectAllegianceW->iNative = 0;
	uFnGetObjectAllegianceW->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetObjectAllegianceW, &GetObjectAllegianceW_Params, nullptr);
	uFnGetObjectAllegianceW->FunctionFlags |= 0x400;
	uFnGetObjectAllegianceW->iNative = 23829;

	return GetObjectAllegianceW_Params.ReturnValue;
};

// Function GearboxFramework.AIDebugTarget.IsSameAllegiance
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[24932])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 anObject                       (CPF_Parm)

bool AAIDebugTarget::IsSameAllegiance(class UObject* anObject)
{
	static UFunction* uFnIsSameAllegiance = nullptr;

	if (!uFnIsSameAllegiance)
	{
		uFnIsSameAllegiance = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.IsSameAllegiance");
	}

	AAIDebugTarget_execIsSameAllegiance_Params IsSameAllegiance_Params;
	memset(&IsSameAllegiance_Params, 0, sizeof(IsSameAllegiance_Params));
	memcpy_s(&IsSameAllegiance_Params.anObject, sizeof(IsSameAllegiance_Params.anObject), &anObject, sizeof(anObject));

	uFnIsSameAllegiance->iNative = 0;
	uFnIsSameAllegiance->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsSameAllegiance, &IsSameAllegiance_Params, nullptr);
	uFnIsSameAllegiance->FunctionFlags |= 0x400;
	uFnIsSameAllegiance->iNative = 24932;

	return IsSameAllegiance_Params.ReturnValue;
};

// Function GearboxFramework.AIDebugTarget.IsNeutral
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[24906])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 anObject                       (CPF_Parm)

bool AAIDebugTarget::IsNeutral(class UObject* anObject)
{
	static UFunction* uFnIsNeutral = nullptr;

	if (!uFnIsNeutral)
	{
		uFnIsNeutral = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.IsNeutral");
	}

	AAIDebugTarget_execIsNeutral_Params IsNeutral_Params;
	memset(&IsNeutral_Params, 0, sizeof(IsNeutral_Params));
	memcpy_s(&IsNeutral_Params.anObject, sizeof(IsNeutral_Params.anObject), &anObject, sizeof(anObject));

	uFnIsNeutral->iNative = 0;
	uFnIsNeutral->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsNeutral, &IsNeutral_Params, nullptr);
	uFnIsNeutral->FunctionFlags |= 0x400;
	uFnIsNeutral->iNative = 24906;

	return IsNeutral_Params.ReturnValue;
};

// Function GearboxFramework.AIDebugTarget.IsFriendly
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[24878])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 anObject                       (CPF_Parm)

bool AAIDebugTarget::IsFriendly(class UObject* anObject)
{
	static UFunction* uFnIsFriendly = nullptr;

	if (!uFnIsFriendly)
	{
		uFnIsFriendly = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.IsFriendly");
	}

	AAIDebugTarget_execIsFriendly_Params IsFriendly_Params;
	memset(&IsFriendly_Params, 0, sizeof(IsFriendly_Params));
	memcpy_s(&IsFriendly_Params.anObject, sizeof(IsFriendly_Params.anObject), &anObject, sizeof(anObject));

	uFnIsFriendly->iNative = 0;
	uFnIsFriendly->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsFriendly, &IsFriendly_Params, nullptr);
	uFnIsFriendly->FunctionFlags |= 0x400;
	uFnIsFriendly->iNative = 24878;

	return IsFriendly_Params.ReturnValue;
};

// Function GearboxFramework.AIDebugTarget.IsEnemy
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[24873])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 anObject                       (CPF_Parm)

bool AAIDebugTarget::IsEnemy(class UObject* anObject)
{
	static UFunction* uFnIsEnemy = nullptr;

	if (!uFnIsEnemy)
	{
		uFnIsEnemy = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.IsEnemy");
	}

	AAIDebugTarget_execIsEnemy_Params IsEnemy_Params;
	memset(&IsEnemy_Params, 0, sizeof(IsEnemy_Params));
	memcpy_s(&IsEnemy_Params.anObject, sizeof(IsEnemy_Params.anObject), &anObject, sizeof(anObject));

	uFnIsEnemy->iNative = 0;
	uFnIsEnemy->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsEnemy, &IsEnemy_Params, nullptr);
	uFnIsEnemy->FunctionFlags |= 0x400;
	uFnIsEnemy->iNative = 24873;

	return IsEnemy_Params.ReturnValue;
};

// Function GearboxFramework.AIDebugTarget.HideTargetInfoOnHud
// [0x00024500] (FUNC_Simulated | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[24214])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class APawn*                   HUDOwner                       (CPF_OptionalParm | CPF_Parm)

bool AAIDebugTarget::HideTargetInfoOnHud(class APawn* HUDOwner)
{
	static UFunction* uFnHideTargetInfoOnHud = nullptr;

	if (!uFnHideTargetInfoOnHud)
	{
		uFnHideTargetInfoOnHud = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.HideTargetInfoOnHud");
	}

	AAIDebugTarget_execHideTargetInfoOnHud_Params HideTargetInfoOnHud_Params;
	memset(&HideTargetInfoOnHud_Params, 0, sizeof(HideTargetInfoOnHud_Params));
	memcpy_s(&HideTargetInfoOnHud_Params.HUDOwner, sizeof(HideTargetInfoOnHud_Params.HUDOwner), &HUDOwner, sizeof(HUDOwner));

	uFnHideTargetInfoOnHud->iNative = 0;
	uFnHideTargetInfoOnHud->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnHideTargetInfoOnHud, &HideTargetInfoOnHud_Params, nullptr);
	uFnHideTargetInfoOnHud->FunctionFlags |= 0x400;
	uFnHideTargetInfoOnHud->iNative = 24214;

	return HideTargetInfoOnHud_Params.ReturnValue;
};

// Function GearboxFramework.AIDebugTarget.IsChampion
// [0x00020500] (FUNC_Simulated | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[24853])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool AAIDebugTarget::IsChampion()
{
	static UFunction* uFnIsChampion = nullptr;

	if (!uFnIsChampion)
	{
		uFnIsChampion = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.IsChampion");
	}

	AAIDebugTarget_execIsChampion_Params IsChampion_Params;
	memset(&IsChampion_Params, 0, sizeof(IsChampion_Params));

	uFnIsChampion->iNative = 0;
	uFnIsChampion->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsChampion, &IsChampion_Params, nullptr);
	uFnIsChampion->FunctionFlags |= 0x400;
	uFnIsChampion->iNative = 24853;

	return IsChampion_Params.ReturnValue;
};

// Function GearboxFramework.AIDebugTarget.DoesTargetableTakeDamage
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[22004])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool AAIDebugTarget::DoesTargetableTakeDamage()
{
	static UFunction* uFnDoesTargetableTakeDamage = nullptr;

	if (!uFnDoesTargetableTakeDamage)
	{
		uFnDoesTargetableTakeDamage = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.DoesTargetableTakeDamage");
	}

	AAIDebugTarget_execDoesTargetableTakeDamage_Params DoesTargetableTakeDamage_Params;
	memset(&DoesTargetableTakeDamage_Params, 0, sizeof(DoesTargetableTakeDamage_Params));

	uFnDoesTargetableTakeDamage->iNative = 0;
	uFnDoesTargetableTakeDamage->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnDoesTargetableTakeDamage, &DoesTargetableTakeDamage_Params, nullptr);
	uFnDoesTargetableTakeDamage->FunctionFlags |= 0x400;
	uFnDoesTargetableTakeDamage->iNative = 22004;

	return DoesTargetableTakeDamage_Params.ReturnValue;
};

// Function GearboxFramework.AIDebugTarget.DisplayParentInfo
// [0x00020500] (FUNC_Simulated | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[21844])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool AAIDebugTarget::DisplayParentInfo()
{
	static UFunction* uFnDisplayParentInfo = nullptr;

	if (!uFnDisplayParentInfo)
	{
		uFnDisplayParentInfo = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.DisplayParentInfo");
	}

	AAIDebugTarget_execDisplayParentInfo_Params DisplayParentInfo_Params;
	memset(&DisplayParentInfo_Params, 0, sizeof(DisplayParentInfo_Params));

	uFnDisplayParentInfo->iNative = 0;
	uFnDisplayParentInfo->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnDisplayParentInfo, &DisplayParentInfo_Params, nullptr);
	uFnDisplayParentInfo->FunctionFlags |= 0x400;
	uFnDisplayParentInfo->iNative = 21844;

	return DisplayParentInfo_Params.ReturnValue;
};

// Function GearboxFramework.AIDebugTarget.SetInfoBarVisibility
// [0x00020500] (FUNC_Simulated | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[28846])
// Parameter Info:
// bool                           bVisible                       (CPF_Parm)

void AAIDebugTarget::SetInfoBarVisibility(bool bVisible)
{
	static UFunction* uFnSetInfoBarVisibility = nullptr;

	if (!uFnSetInfoBarVisibility)
	{
		uFnSetInfoBarVisibility = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.SetInfoBarVisibility");
	}

	AAIDebugTarget_execSetInfoBarVisibility_Params SetInfoBarVisibility_Params;
	memset(&SetInfoBarVisibility_Params, 0, sizeof(SetInfoBarVisibility_Params));
	SetInfoBarVisibility_Params.bVisible = bVisible;

	uFnSetInfoBarVisibility->iNative = 0;
	uFnSetInfoBarVisibility->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetInfoBarVisibility, &SetInfoBarVisibility_Params, nullptr);
	uFnSetInfoBarVisibility->FunctionFlags |= 0x400;
	uFnSetInfoBarVisibility->iNative = 28846;
};

// Function GearboxFramework.AIDebugTarget.GetHealthInfo
// [0x00420500] (FUNC_Simulated | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[23741])
// Parameter Info:
// struct FHealthInfo             OutHealthInfo                  (CPF_Parm | CPF_OutParm)

void AAIDebugTarget::GetHealthInfo(struct FHealthInfo& OutHealthInfo)
{
	static UFunction* uFnGetHealthInfo = nullptr;

	if (!uFnGetHealthInfo)
	{
		uFnGetHealthInfo = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.GetHealthInfo");
	}

	AAIDebugTarget_execGetHealthInfo_Params GetHealthInfo_Params;
	memset(&GetHealthInfo_Params, 0, sizeof(GetHealthInfo_Params));
	memcpy_s(&GetHealthInfo_Params.OutHealthInfo, sizeof(GetHealthInfo_Params.OutHealthInfo), &OutHealthInfo, sizeof(OutHealthInfo));

	uFnGetHealthInfo->iNative = 0;
	uFnGetHealthInfo->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetHealthInfo, &GetHealthInfo_Params, nullptr);
	uFnGetHealthInfo->FunctionFlags |= 0x400;
	uFnGetHealthInfo->iNative = 23741;

	memcpy_s(&OutHealthInfo, sizeof(OutHealthInfo), &GetHealthInfo_Params.OutHealthInfo, sizeof(GetHealthInfo_Params.OutHealthInfo));
};

// Function GearboxFramework.AIDebugTarget.GetExpInfo
// [0x00420500] (FUNC_Simulated | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[23707])
// Parameter Info:
// int32_t                        ExpLevelValue                  (CPF_Parm | CPF_OutParm)

void AAIDebugTarget::GetExpInfo(int32_t& ExpLevelValue)
{
	static UFunction* uFnGetExpInfo = nullptr;

	if (!uFnGetExpInfo)
	{
		uFnGetExpInfo = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.GetExpInfo");
	}

	AAIDebugTarget_execGetExpInfo_Params GetExpInfo_Params;
	memset(&GetExpInfo_Params, 0, sizeof(GetExpInfo_Params));
	memcpy_s(&GetExpInfo_Params.ExpLevelValue, sizeof(GetExpInfo_Params.ExpLevelValue), &ExpLevelValue, sizeof(ExpLevelValue));

	uFnGetExpInfo->iNative = 0;
	uFnGetExpInfo->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetExpInfo, &GetExpInfo_Params, nullptr);
	uFnGetExpInfo->FunctionFlags |= 0x400;
	uFnGetExpInfo->iNative = 23707;

	memcpy_s(&ExpLevelValue, sizeof(ExpLevelValue), &GetExpInfo_Params.ExpLevelValue, sizeof(GetExpInfo_Params.ExpLevelValue));
};

// Function GearboxFramework.AIDebugTarget.GetTargetableActor
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[23971])
// Parameter Info:
// class AActor*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class AActor* AAIDebugTarget::GetTargetableActor()
{
	static UFunction* uFnGetTargetableActor = nullptr;

	if (!uFnGetTargetableActor)
	{
		uFnGetTargetableActor = UFunction::FindFunction("Function GearboxFramework.AIDebugTarget.GetTargetableActor");
	}

	AAIDebugTarget_execGetTargetableActor_Params GetTargetableActor_Params;
	memset(&GetTargetableActor_Params, 0, sizeof(GetTargetableActor_Params));

	uFnGetTargetableActor->iNative = 0;
	uFnGetTargetableActor->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetTargetableActor, &GetTargetableActor_Params, nullptr);
	uFnGetTargetableActor->FunctionFlags |= 0x400;
	uFnGetTargetableActor->iNative = 23971;

	return GetTargetableActor_Params.ReturnValue;
};

// Function GearboxFramework.BodyAIMoveNode.ServerSpecialMove_StopAny
// [0xFFFF0000122248C0] (FUNC_Net | FUNC_NetReliable | FUNC_Event | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_NetServer | FUNC_DLLImport | FUNC_K2Pure | FUNC_NetValidate | FUNC_AllFlags)
// Parameter Info:
// bool                           bClearQueue                    (CPF_OptionalParm | CPF_Parm)
// bool                           bInterrupted                   (CPF_OptionalParm | CPF_Parm)

void ABodyAIMoveNode::eventServerSpecialMove_StopAny(bool bClearQueue, bool bInterrupted)
{
	static UFunction* uFnServerSpecialMove_StopAny = nullptr;

	if (!uFnServerSpecialMove_StopAny)
	{
		uFnServerSpecialMove_StopAny = UFunction::FindFunction("Function GearboxFramework.BodyAIMoveNode.ServerSpecialMove_StopAny");
	}

	ABodyAIMoveNode_eventServerSpecialMove_StopAny_Params ServerSpecialMove_StopAny_Params;
	memset(&ServerSpecialMove_StopAny_Params, 0, sizeof(ServerSpecialMove_StopAny_Params));
	ServerSpecialMove_StopAny_Params.bClearQueue = bClearQueue;
	ServerSpecialMove_StopAny_Params.bInterrupted = bInterrupted;

	this->ProcessEvent(uFnServerSpecialMove_StopAny, &ServerSpecialMove_StopAny_Params, nullptr);
};

// Function GearboxFramework.BodyAIMoveNode.ServerSpecialMove_Stop
// [0xFFFF0000122248C0] (FUNC_Net | FUNC_NetReliable | FUNC_Event | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_NetServer | FUNC_DLLImport | FUNC_K2Pure | FUNC_NetValidate | FUNC_AllFlags)
// Parameter Info:
// class USpecialMoveDefinition*  OldSMD                         (CPF_Parm)
// bool                           bClearQueue                    (CPF_OptionalParm | CPF_Parm)
// bool                           bInterrupted                   (CPF_OptionalParm | CPF_Parm)

void ABodyAIMoveNode::eventServerSpecialMove_Stop(class USpecialMoveDefinition* OldSMD, bool bClearQueue, bool bInterrupted)
{
	static UFunction* uFnServerSpecialMove_Stop = nullptr;

	if (!uFnServerSpecialMove_Stop)
	{
		uFnServerSpecialMove_Stop = UFunction::FindFunction("Function GearboxFramework.BodyAIMoveNode.ServerSpecialMove_Stop");
	}

	ABodyAIMoveNode_eventServerSpecialMove_Stop_Params ServerSpecialMove_Stop_Params;
	memset(&ServerSpecialMove_Stop_Params, 0, sizeof(ServerSpecialMove_Stop_Params));
	memcpy_s(&ServerSpecialMove_Stop_Params.OldSMD, sizeof(ServerSpecialMove_Stop_Params.OldSMD), &OldSMD, sizeof(OldSMD));
	ServerSpecialMove_Stop_Params.bClearQueue = bClearQueue;
	ServerSpecialMove_Stop_Params.bInterrupted = bInterrupted;

	this->ProcessEvent(uFnServerSpecialMove_Stop, &ServerSpecialMove_Stop_Params, nullptr);
};

// Function GearboxFramework.BodyAIMoveNode.ServerSpecialMove_Queue
// [0xFFFF0000122248C0] (FUNC_Net | FUNC_NetReliable | FUNC_Event | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_NetServer | FUNC_DLLImport | FUNC_K2Pure | FUNC_NetValidate | FUNC_AllFlags)
// Parameter Info:
// class USpecialMoveDefinition*  NewSMD                         (CPF_Parm)
// float                          PlayRateScale                  (CPF_OptionalParm | CPF_Parm)
// float                          Duration                       (CPF_OptionalParm | CPF_Parm)
// const struct FName&            CallbackName                   (CPF_OptionalParm | CPF_Parm)
// class UObject*                 CallbackObject                 (CPF_OptionalParm | CPF_Parm)
// class UObject*                 Data                           (CPF_OptionalParm | CPF_Parm)
// bool                           bSendCallbackAtEndOfSequence   (CPF_OptionalParm | CPF_Parm)
// bool                           bStartOfSequence               (CPF_OptionalParm | CPF_Parm)

void ABodyAIMoveNode::eventServerSpecialMove_Queue(class USpecialMoveDefinition* NewSMD, float PlayRateScale, float Duration, const struct FName& CallbackName, class UObject* CallbackObject, class UObject* Data, bool bSendCallbackAtEndOfSequence, bool bStartOfSequence)
{
	static UFunction* uFnServerSpecialMove_Queue = nullptr;

	if (!uFnServerSpecialMove_Queue)
	{
		uFnServerSpecialMove_Queue = UFunction::FindFunction("Function GearboxFramework.BodyAIMoveNode.ServerSpecialMove_Queue");
	}

	ABodyAIMoveNode_eventServerSpecialMove_Queue_Params ServerSpecialMove_Queue_Params;
	memset(&ServerSpecialMove_Queue_Params, 0, sizeof(ServerSpecialMove_Queue_Params));
	memcpy_s(&ServerSpecialMove_Queue_Params.NewSMD, sizeof(ServerSpecialMove_Queue_Params.NewSMD), &NewSMD, sizeof(NewSMD));
	memcpy_s(&ServerSpecialMove_Queue_Params.PlayRateScale, sizeof(ServerSpecialMove_Queue_Params.PlayRateScale), &PlayRateScale, sizeof(PlayRateScale));
	memcpy_s(&ServerSpecialMove_Queue_Params.Duration, sizeof(ServerSpecialMove_Queue_Params.Duration), &Duration, sizeof(Duration));
	memcpy_s(&ServerSpecialMove_Queue_Params.CallbackName, sizeof(ServerSpecialMove_Queue_Params.CallbackName), &CallbackName, sizeof(CallbackName));
	memcpy_s(&ServerSpecialMove_Queue_Params.CallbackObject, sizeof(ServerSpecialMove_Queue_Params.CallbackObject), &CallbackObject, sizeof(CallbackObject));
	memcpy_s(&ServerSpecialMove_Queue_Params.Data, sizeof(ServerSpecialMove_Queue_Params.Data), &Data, sizeof(Data));
	ServerSpecialMove_Queue_Params.bSendCallbackAtEndOfSequence = bSendCallbackAtEndOfSequence;
	ServerSpecialMove_Queue_Params.bStartOfSequence = bStartOfSequence;

	this->ProcessEvent(uFnServerSpecialMove_Queue, &ServerSpecialMove_Queue_Params, nullptr);
};

// Function GearboxFramework.BodyAIMoveNode.ServerSpecialMove_Play
// [0xFFFF0000122248C0] (FUNC_Net | FUNC_NetReliable | FUNC_Event | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_NetServer | FUNC_DLLImport | FUNC_K2Pure | FUNC_NetValidate | FUNC_AllFlags)
// Parameter Info:
// class USpecialMoveDefinition*  NewSMD                         (CPF_Parm)
// float                          PlayRateScale                  (CPF_OptionalParm | CPF_Parm)
// float                          Duration                       (CPF_OptionalParm | CPF_Parm)
// const struct FName&            CallbackName                   (CPF_OptionalParm | CPF_Parm)
// class UObject*                 CallbackObject                 (CPF_OptionalParm | CPF_Parm)
// class UObject*                 Data                           (CPF_OptionalParm | CPF_Parm)
// bool                           bSendCallbackAtEndOfSequence   (CPF_OptionalParm | CPF_Parm)

void ABodyAIMoveNode::eventServerSpecialMove_Play(class USpecialMoveDefinition* NewSMD, float PlayRateScale, float Duration, const struct FName& CallbackName, class UObject* CallbackObject, class UObject* Data, bool bSendCallbackAtEndOfSequence)
{
	static UFunction* uFnServerSpecialMove_Play = nullptr;

	if (!uFnServerSpecialMove_Play)
	{
		uFnServerSpecialMove_Play = UFunction::FindFunction("Function GearboxFramework.BodyAIMoveNode.ServerSpecialMove_Play");
	}

	ABodyAIMoveNode_eventServerSpecialMove_Play_Params ServerSpecialMove_Play_Params;
	memset(&ServerSpecialMove_Play_Params, 0, sizeof(ServerSpecialMove_Play_Params));
	memcpy_s(&ServerSpecialMove_Play_Params.NewSMD, sizeof(ServerSpecialMove_Play_Params.NewSMD), &NewSMD, sizeof(NewSMD));
	memcpy_s(&ServerSpecialMove_Play_Params.PlayRateScale, sizeof(ServerSpecialMove_Play_Params.PlayRateScale), &PlayRateScale, sizeof(PlayRateScale));
	memcpy_s(&ServerSpecialMove_Play_Params.Duration, sizeof(ServerSpecialMove_Play_Params.Duration), &Duration, sizeof(Duration));
	memcpy_s(&ServerSpecialMove_Play_Params.CallbackName, sizeof(ServerSpecialMove_Play_Params.CallbackName), &CallbackName, sizeof(CallbackName));
	memcpy_s(&ServerSpecialMove_Play_Params.CallbackObject, sizeof(ServerSpecialMove_Play_Params.CallbackObject), &CallbackObject, sizeof(CallbackObject));
	memcpy_s(&ServerSpecialMove_Play_Params.Data, sizeof(ServerSpecialMove_Play_Params.Data), &Data, sizeof(Data));
	ServerSpecialMove_Play_Params.bSendCallbackAtEndOfSequence = bSendCallbackAtEndOfSequence;

	this->ProcessEvent(uFnServerSpecialMove_Play, &ServerSpecialMove_Play_Params, nullptr);
};

// Function GearboxFramework.BodyAIMoveNode.SetReplicatedSMData
// [0x00424400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35926])
// Parameter Info:
// bool                           bInterrupted                   (CPF_OptionalParm | CPF_Parm)
// struct FSpecialMoveData        NewSMData                      (CPF_Parm | CPF_OutParm)

void ABodyAIMoveNode::SetReplicatedSMData(bool bInterrupted, struct FSpecialMoveData& NewSMData)
{
	static UFunction* uFnSetReplicatedSMData = nullptr;

	if (!uFnSetReplicatedSMData)
	{
		uFnSetReplicatedSMData = UFunction::FindFunction("Function GearboxFramework.BodyAIMoveNode.SetReplicatedSMData");
	}

	ABodyAIMoveNode_execSetReplicatedSMData_Params SetReplicatedSMData_Params;
	memset(&SetReplicatedSMData_Params, 0, sizeof(SetReplicatedSMData_Params));
	SetReplicatedSMData_Params.bInterrupted = bInterrupted;
	memcpy_s(&SetReplicatedSMData_Params.NewSMData, sizeof(SetReplicatedSMData_Params.NewSMData), &NewSMData, sizeof(NewSMData));

	uFnSetReplicatedSMData->iNative = 0;
	uFnSetReplicatedSMData->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetReplicatedSMData, &SetReplicatedSMData_Params, nullptr);
	uFnSetReplicatedSMData->FunctionFlags |= 0x400;
	uFnSetReplicatedSMData->iNative = 35926;

	memcpy_s(&NewSMData, sizeof(NewSMData), &SetReplicatedSMData_Params.NewSMData, sizeof(SetReplicatedSMData_Params.NewSMData));
};

// Function GearboxFramework.BodyAIMoveNode.GetDefaultRootMotionRotationMode
// [0x00020500] (FUNC_Simulated | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[23677])
// Parameter Info:
// ERootMotionRotationMode        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

ERootMotionRotationMode ABodyAIMoveNode::GetDefaultRootMotionRotationMode()
{
	static UFunction* uFnGetDefaultRootMotionRotationMode = nullptr;

	if (!uFnGetDefaultRootMotionRotationMode)
	{
		uFnGetDefaultRootMotionRotationMode = UFunction::FindFunction("Function GearboxFramework.BodyAIMoveNode.GetDefaultRootMotionRotationMode");
	}

	ABodyAIMoveNode_execGetDefaultRootMotionRotationMode_Params GetDefaultRootMotionRotationMode_Params;
	memset(&GetDefaultRootMotionRotationMode_Params, 0, sizeof(GetDefaultRootMotionRotationMode_Params));

	uFnGetDefaultRootMotionRotationMode->iNative = 0;
	uFnGetDefaultRootMotionRotationMode->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetDefaultRootMotionRotationMode, &GetDefaultRootMotionRotationMode_Params, nullptr);
	uFnGetDefaultRootMotionRotationMode->FunctionFlags |= 0x400;
	uFnGetDefaultRootMotionRotationMode->iNative = 23677;

	return GetDefaultRootMotionRotationMode_Params.ReturnValue;
};

// Function GearboxFramework.BodyAIMoveNode.GetDefaultRootMotionMode
// [0x00020500] (FUNC_Simulated | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[23676])
// Parameter Info:
// ERootMotionMode                ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

ERootMotionMode ABodyAIMoveNode::GetDefaultRootMotionMode()
{
	static UFunction* uFnGetDefaultRootMotionMode = nullptr;

	if (!uFnGetDefaultRootMotionMode)
	{
		uFnGetDefaultRootMotionMode = UFunction::FindFunction("Function GearboxFramework.BodyAIMoveNode.GetDefaultRootMotionMode");
	}

	ABodyAIMoveNode_execGetDefaultRootMotionMode_Params GetDefaultRootMotionMode_Params;
	memset(&GetDefaultRootMotionMode_Params, 0, sizeof(GetDefaultRootMotionMode_Params));

	uFnGetDefaultRootMotionMode->iNative = 0;
	uFnGetDefaultRootMotionMode->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetDefaultRootMotionMode, &GetDefaultRootMotionMode_Params, nullptr);
	uFnGetDefaultRootMotionMode->FunctionFlags |= 0x400;
	uFnGetDefaultRootMotionMode->iNative = 23676;

	return GetDefaultRootMotionMode_Params.ReturnValue;
};

// Function GearboxFramework.BodyAIMoveNode.GetSkelMesh
// [0x00020500] (FUNC_Simulated | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34208])
// Parameter Info:
// class USkeletalMeshComponent*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline)

class USkeletalMeshComponent* ABodyAIMoveNode::GetSkelMesh()
{
	static UFunction* uFnGetSkelMesh = nullptr;

	if (!uFnGetSkelMesh)
	{
		uFnGetSkelMesh = UFunction::FindFunction("Function GearboxFramework.BodyAIMoveNode.GetSkelMesh");
	}

	ABodyAIMoveNode_execGetSkelMesh_Params GetSkelMesh_Params;
	memset(&GetSkelMesh_Params, 0, sizeof(GetSkelMesh_Params));

	uFnGetSkelMesh->iNative = 0;
	uFnGetSkelMesh->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetSkelMesh, &GetSkelMesh_Params, nullptr);
	uFnGetSkelMesh->FunctionFlags |= 0x400;
	uFnGetSkelMesh->iNative = 34208;

	return GetSkelMesh_Params.ReturnValue;
};

// Function GearboxFramework.BodyAIMoveNode.GetSMComponent
// [0x00020500] (FUNC_Simulated | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34209])
// Parameter Info:
// class USpecialMoveComponent*   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline)

class USpecialMoveComponent* ABodyAIMoveNode::GetSMComponent()
{
	static UFunction* uFnGetSMComponent = nullptr;

	if (!uFnGetSMComponent)
	{
		uFnGetSMComponent = UFunction::FindFunction("Function GearboxFramework.BodyAIMoveNode.GetSMComponent");
	}

	ABodyAIMoveNode_execGetSMComponent_Params GetSMComponent_Params;
	memset(&GetSMComponent_Params, 0, sizeof(GetSMComponent_Params));

	uFnGetSMComponent->iNative = 0;
	uFnGetSMComponent->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetSMComponent, &GetSMComponent_Params, nullptr);
	uFnGetSMComponent->FunctionFlags |= 0x400;
	uFnGetSMComponent->iNative = 34209;

	return GetSMComponent_Params.ReturnValue;
};

// Function GearboxFramework.BodyAIMoveNode.GetActor
// [0x00020500] (FUNC_Simulated | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34025])
// Parameter Info:
// class AActor*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class AActor* ABodyAIMoveNode::GetActor()
{
	static UFunction* uFnGetActor = nullptr;

	if (!uFnGetActor)
	{
		uFnGetActor = UFunction::FindFunction("Function GearboxFramework.BodyAIMoveNode.GetActor");
	}

	ABodyAIMoveNode_execGetActor_Params GetActor_Params;
	memset(&GetActor_Params, 0, sizeof(GetActor_Params));

	uFnGetActor->iNative = 0;
	uFnGetActor->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetActor, &GetActor_Params, nullptr);
	uFnGetActor->FunctionFlags |= 0x400;
	uFnGetActor->iNative = 34025;

	return GetActor_Params.ReturnValue;
};

// Function GearboxFramework.BodyAIMoveNode.ReplicatedEvent
// [0x12020900] (FUNC_Simulated | FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FName&            VarName                        (CPF_Parm)

void ABodyAIMoveNode::eventReplicatedEvent(const struct FName& VarName)
{
	static UFunction* uFnReplicatedEvent = nullptr;

	if (!uFnReplicatedEvent)
	{
		uFnReplicatedEvent = UFunction::FindFunction("Function GearboxFramework.BodyAIMoveNode.ReplicatedEvent");
	}

	ABodyAIMoveNode_eventReplicatedEvent_Params ReplicatedEvent_Params;
	memset(&ReplicatedEvent_Params, 0, sizeof(ReplicatedEvent_Params));
	memcpy_s(&ReplicatedEvent_Params.VarName, sizeof(ReplicatedEvent_Params.VarName), &VarName, sizeof(VarName));

	this->ProcessEvent(uFnReplicatedEvent, &ReplicatedEvent_Params, nullptr);
};

// Function GearboxFramework.BodyAIMoveNode.GetBehaviorConsumerHandle
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34051])
// Parameter Info:
// struct FBehaviorConsumerHandle ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FBehaviorConsumerHandle ABodyAIMoveNode::GetBehaviorConsumerHandle()
{
	static UFunction* uFnGetBehaviorConsumerHandle = nullptr;

	if (!uFnGetBehaviorConsumerHandle)
	{
		uFnGetBehaviorConsumerHandle = UFunction::FindFunction("Function GearboxFramework.BodyAIMoveNode.GetBehaviorConsumerHandle");
	}

	ABodyAIMoveNode_execGetBehaviorConsumerHandle_Params GetBehaviorConsumerHandle_Params;
	memset(&GetBehaviorConsumerHandle_Params, 0, sizeof(GetBehaviorConsumerHandle_Params));

	uFnGetBehaviorConsumerHandle->iNative = 0;
	uFnGetBehaviorConsumerHandle->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetBehaviorConsumerHandle, &GetBehaviorConsumerHandle_Params, nullptr);
	uFnGetBehaviorConsumerHandle->FunctionFlags |= 0x400;
	uFnGetBehaviorConsumerHandle->iNative = 34051;

	return GetBehaviorConsumerHandle_Params.ReturnValue;
};

// Function GearboxFramework.BodyAIMoveNode.RegisterBehaviorConsumer
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35631])
// Parameter Info:

void ABodyAIMoveNode::RegisterBehaviorConsumer()
{
	static UFunction* uFnRegisterBehaviorConsumer = nullptr;

	if (!uFnRegisterBehaviorConsumer)
	{
		uFnRegisterBehaviorConsumer = UFunction::FindFunction("Function GearboxFramework.BodyAIMoveNode.RegisterBehaviorConsumer");
	}

	ABodyAIMoveNode_execRegisterBehaviorConsumer_Params RegisterBehaviorConsumer_Params;
	memset(&RegisterBehaviorConsumer_Params, 0, sizeof(RegisterBehaviorConsumer_Params));

	uFnRegisterBehaviorConsumer->iNative = 0;
	uFnRegisterBehaviorConsumer->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRegisterBehaviorConsumer, &RegisterBehaviorConsumer_Params, nullptr);
	uFnRegisterBehaviorConsumer->FunctionFlags |= 0x400;
	uFnRegisterBehaviorConsumer->iNative = 35631;
};

// Function GearboxFramework.BodyAIMoveNode.GetInstanceDataState
// [0x12420000] (FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FInstanceData2          OutInstanceDataState           (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool ABodyAIMoveNode::GetInstanceDataState(struct FInstanceData2& OutInstanceDataState)
{
	static UFunction* uFnGetInstanceDataState = nullptr;

	if (!uFnGetInstanceDataState)
	{
		uFnGetInstanceDataState = UFunction::FindFunction("Function GearboxFramework.BodyAIMoveNode.GetInstanceDataState");
	}

	ABodyAIMoveNode_execGetInstanceDataState_Params GetInstanceDataState_Params;
	memset(&GetInstanceDataState_Params, 0, sizeof(GetInstanceDataState_Params));
	memcpy_s(&GetInstanceDataState_Params.OutInstanceDataState, sizeof(GetInstanceDataState_Params.OutInstanceDataState), &OutInstanceDataState, sizeof(OutInstanceDataState));

	this->ProcessEvent(uFnGetInstanceDataState, &GetInstanceDataState_Params, nullptr);

	memcpy_s(&OutInstanceDataState, sizeof(OutInstanceDataState), &GetInstanceDataState_Params.OutInstanceDataState, sizeof(GetInstanceDataState_Params.OutInstanceDataState));

	return GetInstanceDataState_Params.ReturnValue;
};

// Function GearboxFramework.BodyAIMoveNode.RemoveInstanceData
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FName&            DataName                       (CPF_Parm)

bool ABodyAIMoveNode::eventRemoveInstanceData(const struct FName& DataName)
{
	static UFunction* uFnRemoveInstanceData = nullptr;

	if (!uFnRemoveInstanceData)
	{
		uFnRemoveInstanceData = UFunction::FindFunction("Function GearboxFramework.BodyAIMoveNode.RemoveInstanceData");
	}

	ABodyAIMoveNode_eventRemoveInstanceData_Params RemoveInstanceData_Params;
	memset(&RemoveInstanceData_Params, 0, sizeof(RemoveInstanceData_Params));
	memcpy_s(&RemoveInstanceData_Params.DataName, sizeof(RemoveInstanceData_Params.DataName), &DataName, sizeof(DataName));

	this->ProcessEvent(uFnRemoveInstanceData, &RemoveInstanceData_Params, nullptr);

	return RemoveInstanceData_Params.ReturnValue;
};

// Function GearboxFramework.BodyAIMoveNode.GetInstanceData
// [0x12420800] (FUNC_Event | FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FName&            DataName                       (CPF_Parm)
// class TArray<struct FInstanceDataItem2> InstanceData                   (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool ABodyAIMoveNode::eventGetInstanceData(const struct FName& DataName, class TArray<struct FInstanceDataItem2>& InstanceData)
{
	static UFunction* uFnGetInstanceData = nullptr;

	if (!uFnGetInstanceData)
	{
		uFnGetInstanceData = UFunction::FindFunction("Function GearboxFramework.BodyAIMoveNode.GetInstanceData");
	}

	ABodyAIMoveNode_eventGetInstanceData_Params GetInstanceData_Params;
	memset(&GetInstanceData_Params, 0, sizeof(GetInstanceData_Params));
	memcpy_s(&GetInstanceData_Params.DataName, sizeof(GetInstanceData_Params.DataName), &DataName, sizeof(DataName));
	memcpy_s(&GetInstanceData_Params.InstanceData, sizeof(GetInstanceData_Params.InstanceData), &InstanceData, sizeof(InstanceData));

	this->ProcessEvent(uFnGetInstanceData, &GetInstanceData_Params, nullptr);

	memcpy_s(&InstanceData, sizeof(InstanceData), &GetInstanceData_Params.InstanceData, sizeof(GetInstanceData_Params.InstanceData));

	return GetInstanceData_Params.ReturnValue;
};

// Function GearboxFramework.BodyAIMoveNode.SetInstanceData
// [0x12024800] (FUNC_Event | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FInstanceDataItem2& InstanceData                   (CPF_Parm | CPF_NeedCtorLink)
// bool                           bAllowDuplicateNames           (CPF_OptionalParm | CPF_Parm)

bool ABodyAIMoveNode::eventSetInstanceData(const struct FInstanceDataItem2& InstanceData, bool bAllowDuplicateNames)
{
	static UFunction* uFnSetInstanceData = nullptr;

	if (!uFnSetInstanceData)
	{
		uFnSetInstanceData = UFunction::FindFunction("Function GearboxFramework.BodyAIMoveNode.SetInstanceData");
	}

	ABodyAIMoveNode_eventSetInstanceData_Params SetInstanceData_Params;
	memset(&SetInstanceData_Params, 0, sizeof(SetInstanceData_Params));
	memcpy_s(&SetInstanceData_Params.InstanceData, sizeof(SetInstanceData_Params.InstanceData), &InstanceData, sizeof(InstanceData));
	SetInstanceData_Params.bAllowDuplicateNames = bAllowDuplicateNames;

	this->ProcessEvent(uFnSetInstanceData, &SetInstanceData_Params, nullptr);

	return SetInstanceData_Params.ReturnValue;
};

// Function GearboxFramework.BodyAIMoveNode.CheckStartReplication
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32733])
// Parameter Info:

void ABodyAIMoveNode::CheckStartReplication()
{
	static UFunction* uFnCheckStartReplication = nullptr;

	if (!uFnCheckStartReplication)
	{
		uFnCheckStartReplication = UFunction::FindFunction("Function GearboxFramework.BodyAIMoveNode.CheckStartReplication");
	}

	ABodyAIMoveNode_execCheckStartReplication_Params CheckStartReplication_Params;
	memset(&CheckStartReplication_Params, 0, sizeof(CheckStartReplication_Params));

	uFnCheckStartReplication->iNative = 0;
	uFnCheckStartReplication->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCheckStartReplication, &CheckStartReplication_Params, nullptr);
	uFnCheckStartReplication->FunctionFlags |= 0x400;
	uFnCheckStartReplication->iNative = 32733;
};

// Function GearboxFramework.BodyAIMoveNode.InitBody
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34531])
// Parameter Info:

void ABodyAIMoveNode::InitBody()
{
	static UFunction* uFnInitBody = nullptr;

	if (!uFnInitBody)
	{
		uFnInitBody = UFunction::FindFunction("Function GearboxFramework.BodyAIMoveNode.InitBody");
	}

	ABodyAIMoveNode_execInitBody_Params InitBody_Params;
	memset(&InitBody_Params, 0, sizeof(InitBody_Params));

	uFnInitBody->iNative = 0;
	uFnInitBody->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInitBody, &InitBody_Params, nullptr);
	uFnInitBody->FunctionFlags |= 0x400;
	uFnInitBody->iNative = 34531;
};

// Function GearboxFramework.Perch.GetInstanceData
// [0x12420900] (FUNC_Simulated | FUNC_Event | FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FName&            DataName                       (CPF_Parm)
// class TArray<struct FInstanceDataItem2> InstanceData                   (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool APerch::eventGetInstanceData(const struct FName& DataName, class TArray<struct FInstanceDataItem2>& InstanceData)
{
	static UFunction* uFnGetInstanceData = nullptr;

	if (!uFnGetInstanceData)
	{
		uFnGetInstanceData = UFunction::FindFunction("Function GearboxFramework.Perch.GetInstanceData");
	}

	APerch_eventGetInstanceData_Params GetInstanceData_Params;
	memset(&GetInstanceData_Params, 0, sizeof(GetInstanceData_Params));
	memcpy_s(&GetInstanceData_Params.DataName, sizeof(GetInstanceData_Params.DataName), &DataName, sizeof(DataName));
	memcpy_s(&GetInstanceData_Params.InstanceData, sizeof(GetInstanceData_Params.InstanceData), &InstanceData, sizeof(InstanceData));

	this->ProcessEvent(uFnGetInstanceData, &GetInstanceData_Params, nullptr);

	memcpy_s(&InstanceData, sizeof(InstanceData), &GetInstanceData_Params.InstanceData, sizeof(GetInstanceData_Params.InstanceData));

	return GetInstanceData_Params.ReturnValue;
};

// Function GearboxFramework.Perch.ReplicatedEvent
// [0x12020900] (FUNC_Simulated | FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FName&            VarName                        (CPF_Parm)

void APerch::eventReplicatedEvent(const struct FName& VarName)
{
	static UFunction* uFnReplicatedEvent = nullptr;

	if (!uFnReplicatedEvent)
	{
		uFnReplicatedEvent = UFunction::FindFunction("Function GearboxFramework.Perch.ReplicatedEvent");
	}

	APerch_eventReplicatedEvent_Params ReplicatedEvent_Params;
	memset(&ReplicatedEvent_Params, 0, sizeof(ReplicatedEvent_Params));
	memcpy_s(&ReplicatedEvent_Params.VarName, sizeof(ReplicatedEvent_Params.VarName), &VarName, sizeof(VarName));

	this->ProcessEvent(uFnReplicatedEvent, &ReplicatedEvent_Params, nullptr);
};

// Function GearboxFramework.Perch.MatchActorToPerchPiece
// [0x00022400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[34889])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AActor*                  User                           (CPF_Parm)
// class AActor*                  MatchActor                     (CPF_Parm)

bool APerch::MatchActorToPerchPiece(class AActor* User, class AActor* MatchActor)
{
	static UFunction* uFnMatchActorToPerchPiece = nullptr;

	if (!uFnMatchActorToPerchPiece)
	{
		uFnMatchActorToPerchPiece = UFunction::FindFunction("Function GearboxFramework.Perch.MatchActorToPerchPiece");
	}

	APerch_execMatchActorToPerchPiece_Params MatchActorToPerchPiece_Params;
	memset(&MatchActorToPerchPiece_Params, 0, sizeof(MatchActorToPerchPiece_Params));
	memcpy_s(&MatchActorToPerchPiece_Params.User, sizeof(MatchActorToPerchPiece_Params.User), &User, sizeof(User));
	memcpy_s(&MatchActorToPerchPiece_Params.MatchActor, sizeof(MatchActorToPerchPiece_Params.MatchActor), &MatchActor, sizeof(MatchActor));

	uFnMatchActorToPerchPiece->iNative = 0;
	uFnMatchActorToPerchPiece->FunctionFlags &= ~0x400;
	APerch::StaticClass()->ProcessEvent(uFnMatchActorToPerchPiece, &MatchActorToPerchPiece_Params, nullptr);
	uFnMatchActorToPerchPiece->FunctionFlags |= 0x400;
	uFnMatchActorToPerchPiece->iNative = 34889;

	return MatchActorToPerchPiece_Params.ReturnValue;
};

// Function GearboxFramework.Perch.GetPieceProjectileFromUser
// [0x00022400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[34176])
// Parameter Info:
// class UObject*                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AActor*                  User                           (CPF_Parm)

class UObject* APerch::GetPieceProjectileFromUser(class AActor* User)
{
	static UFunction* uFnGetPieceProjectileFromUser = nullptr;

	if (!uFnGetPieceProjectileFromUser)
	{
		uFnGetPieceProjectileFromUser = UFunction::FindFunction("Function GearboxFramework.Perch.GetPieceProjectileFromUser");
	}

	APerch_execGetPieceProjectileFromUser_Params GetPieceProjectileFromUser_Params;
	memset(&GetPieceProjectileFromUser_Params, 0, sizeof(GetPieceProjectileFromUser_Params));
	memcpy_s(&GetPieceProjectileFromUser_Params.User, sizeof(GetPieceProjectileFromUser_Params.User), &User, sizeof(User));

	uFnGetPieceProjectileFromUser->iNative = 0;
	uFnGetPieceProjectileFromUser->FunctionFlags &= ~0x400;
	APerch::StaticClass()->ProcessEvent(uFnGetPieceProjectileFromUser, &GetPieceProjectileFromUser_Params, nullptr);
	uFnGetPieceProjectileFromUser->FunctionFlags |= 0x400;
	uFnGetPieceProjectileFromUser->iNative = 34176;

	return GetPieceProjectileFromUser_Params.ReturnValue;
};

// Function GearboxFramework.Perch.DetachPieceFromUser
// [0x00022400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[33199])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AActor*                  User                           (CPF_Parm)

bool APerch::DetachPieceFromUser(class AActor* User)
{
	static UFunction* uFnDetachPieceFromUser = nullptr;

	if (!uFnDetachPieceFromUser)
	{
		uFnDetachPieceFromUser = UFunction::FindFunction("Function GearboxFramework.Perch.DetachPieceFromUser");
	}

	APerch_execDetachPieceFromUser_Params DetachPieceFromUser_Params;
	memset(&DetachPieceFromUser_Params, 0, sizeof(DetachPieceFromUser_Params));
	memcpy_s(&DetachPieceFromUser_Params.User, sizeof(DetachPieceFromUser_Params.User), &User, sizeof(User));

	uFnDetachPieceFromUser->iNative = 0;
	uFnDetachPieceFromUser->FunctionFlags &= ~0x400;
	APerch::StaticClass()->ProcessEvent(uFnDetachPieceFromUser, &DetachPieceFromUser_Params, nullptr);
	uFnDetachPieceFromUser->FunctionFlags |= 0x400;
	uFnDetachPieceFromUser->iNative = 33199;

	return DetachPieceFromUser_Params.ReturnValue;
};

// Function GearboxFramework.Perch.NotifyAttachDataReplicated
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35181])
// Parameter Info:

void APerch::NotifyAttachDataReplicated()
{
	static UFunction* uFnNotifyAttachDataReplicated = nullptr;

	if (!uFnNotifyAttachDataReplicated)
	{
		uFnNotifyAttachDataReplicated = UFunction::FindFunction("Function GearboxFramework.Perch.NotifyAttachDataReplicated");
	}

	APerch_execNotifyAttachDataReplicated_Params NotifyAttachDataReplicated_Params;
	memset(&NotifyAttachDataReplicated_Params, 0, sizeof(NotifyAttachDataReplicated_Params));

	uFnNotifyAttachDataReplicated->iNative = 0;
	uFnNotifyAttachDataReplicated->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnNotifyAttachDataReplicated, &NotifyAttachDataReplicated_Params, nullptr);
	uFnNotifyAttachDataReplicated->FunctionFlags |= 0x400;
	uFnNotifyAttachDataReplicated->iNative = 35181;
};

// Function GearboxFramework.Perch.IdleFinished
// [0x00020403] (FUNC_Final | FUNC_Defined | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2499])
// Parameter Info:

void APerch::IdleFinished()
{
	static UFunction* uFnIdleFinished = nullptr;

	if (!uFnIdleFinished)
	{
		uFnIdleFinished = UFunction::FindFunction("Function GearboxFramework.Perch.IdleFinished");
	}

	APerch_execIdleFinished_Params IdleFinished_Params;
	memset(&IdleFinished_Params, 0, sizeof(IdleFinished_Params));

	uFnIdleFinished->iNative = 0;
	uFnIdleFinished->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIdleFinished, &IdleFinished_Params, nullptr);
	uFnIdleFinished->FunctionFlags |= 0x400;
	uFnIdleFinished->iNative = 2499;
};

// Function GearboxFramework.Perch.PerchEnded
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35415])
// Parameter Info:
// class AActor*                  User                           (CPF_Parm)

void APerch::PerchEnded(class AActor* User)
{
	static UFunction* uFnPerchEnded = nullptr;

	if (!uFnPerchEnded)
	{
		uFnPerchEnded = UFunction::FindFunction("Function GearboxFramework.Perch.PerchEnded");
	}

	APerch_execPerchEnded_Params PerchEnded_Params;
	memset(&PerchEnded_Params, 0, sizeof(PerchEnded_Params));
	memcpy_s(&PerchEnded_Params.User, sizeof(PerchEnded_Params.User), &User, sizeof(User));

	uFnPerchEnded->iNative = 0;
	uFnPerchEnded->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPerchEnded, &PerchEnded_Params, nullptr);
	uFnPerchEnded->FunctionFlags |= 0x400;
	uFnPerchEnded->iNative = 35415;
};

// Function GearboxFramework.Perch.PerchStarted
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35418])
// Parameter Info:
// class AActor*                  User                           (CPF_Parm)
// float                          InterpTime                     (CPF_Parm)

void APerch::PerchStarted(class AActor* User, float InterpTime)
{
	static UFunction* uFnPerchStarted = nullptr;

	if (!uFnPerchStarted)
	{
		uFnPerchStarted = UFunction::FindFunction("Function GearboxFramework.Perch.PerchStarted");
	}

	APerch_execPerchStarted_Params PerchStarted_Params;
	memset(&PerchStarted_Params, 0, sizeof(PerchStarted_Params));
	memcpy_s(&PerchStarted_Params.User, sizeof(PerchStarted_Params.User), &User, sizeof(User));
	memcpy_s(&PerchStarted_Params.InterpTime, sizeof(PerchStarted_Params.InterpTime), &InterpTime, sizeof(InterpTime));

	uFnPerchStarted->iNative = 0;
	uFnPerchStarted->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPerchStarted, &PerchStarted_Params, nullptr);
	uFnPerchStarted->FunctionFlags |= 0x400;
	uFnPerchStarted->iNative = 35418;
};

// Function GearboxFramework.Perch.SetDynamicData
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35896])
// Parameter Info:
// class UPerchTag*               NewTag                         (CPF_Parm)
// float                          NewUseRadius                   (CPF_Parm)
// float                          NewUseHeight                   (CPF_Parm)

void APerch::SetDynamicData(class UPerchTag* NewTag, float NewUseRadius, float NewUseHeight)
{
	static UFunction* uFnSetDynamicData = nullptr;

	if (!uFnSetDynamicData)
	{
		uFnSetDynamicData = UFunction::FindFunction("Function GearboxFramework.Perch.SetDynamicData");
	}

	APerch_execSetDynamicData_Params SetDynamicData_Params;
	memset(&SetDynamicData_Params, 0, sizeof(SetDynamicData_Params));
	memcpy_s(&SetDynamicData_Params.NewTag, sizeof(SetDynamicData_Params.NewTag), &NewTag, sizeof(NewTag));
	memcpy_s(&SetDynamicData_Params.NewUseRadius, sizeof(SetDynamicData_Params.NewUseRadius), &NewUseRadius, sizeof(NewUseRadius));
	memcpy_s(&SetDynamicData_Params.NewUseHeight, sizeof(SetDynamicData_Params.NewUseHeight), &NewUseHeight, sizeof(NewUseHeight));

	uFnSetDynamicData->iNative = 0;
	uFnSetDynamicData->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetDynamicData, &SetDynamicData_Params, nullptr);
	uFnSetDynamicData->FunctionFlags |= 0x400;
	uFnSetDynamicData->iNative = 35896;
};

// Function GearboxFramework.Perch.SetPerchState
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35920])
// Parameter Info:
// class AActor*                  User                           (CPF_Parm)
// EPerchState                    NewState                       (CPF_Parm)

void APerch::SetPerchState(class AActor* User, EPerchState NewState)
{
	static UFunction* uFnSetPerchState = nullptr;

	if (!uFnSetPerchState)
	{
		uFnSetPerchState = UFunction::FindFunction("Function GearboxFramework.Perch.SetPerchState");
	}

	APerch_execSetPerchState_Params SetPerchState_Params;
	memset(&SetPerchState_Params, 0, sizeof(SetPerchState_Params));
	memcpy_s(&SetPerchState_Params.User, sizeof(SetPerchState_Params.User), &User, sizeof(User));
	memcpy_s(&SetPerchState_Params.NewState, sizeof(SetPerchState_Params.NewState), &NewState, sizeof(NewState));

	uFnSetPerchState->iNative = 0;
	uFnSetPerchState->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetPerchState, &SetPerchState_Params, nullptr);
	uFnSetPerchState->FunctionFlags |= 0x400;
	uFnSetPerchState->iNative = 35920;
};

// Function GearboxFramework.Perch.GetPerchState
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34174])
// Parameter Info:
// EPerchState                    ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AActor*                  User                           (CPF_Parm)

EPerchState APerch::GetPerchState(class AActor* User)
{
	static UFunction* uFnGetPerchState = nullptr;

	if (!uFnGetPerchState)
	{
		uFnGetPerchState = UFunction::FindFunction("Function GearboxFramework.Perch.GetPerchState");
	}

	APerch_execGetPerchState_Params GetPerchState_Params;
	memset(&GetPerchState_Params, 0, sizeof(GetPerchState_Params));
	memcpy_s(&GetPerchState_Params.User, sizeof(GetPerchState_Params.User), &User, sizeof(User));

	uFnGetPerchState->iNative = 0;
	uFnGetPerchState->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetPerchState, &GetPerchState_Params, nullptr);
	uFnGetPerchState->FunctionFlags |= 0x400;
	uFnGetPerchState->iNative = 34174;

	return GetPerchState_Params.ReturnValue;
};

// Function GearboxFramework.Perch.GetUserLocation
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34252])
// Parameter Info:
// struct FVector                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AActor*                  User                           (CPF_Parm)

struct FVector APerch::GetUserLocation(class AActor* User)
{
	static UFunction* uFnGetUserLocation = nullptr;

	if (!uFnGetUserLocation)
	{
		uFnGetUserLocation = UFunction::FindFunction("Function GearboxFramework.Perch.GetUserLocation");
	}

	APerch_execGetUserLocation_Params GetUserLocation_Params;
	memset(&GetUserLocation_Params, 0, sizeof(GetUserLocation_Params));
	memcpy_s(&GetUserLocation_Params.User, sizeof(GetUserLocation_Params.User), &User, sizeof(User));

	uFnGetUserLocation->iNative = 0;
	uFnGetUserLocation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetUserLocation, &GetUserLocation_Params, nullptr);
	uFnGetUserLocation->FunctionFlags |= 0x400;
	uFnGetUserLocation->iNative = 34252;

	return GetUserLocation_Params.ReturnValue;
};

// Function GearboxFramework.Perch.MarkUnreachable
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34884])
// Parameter Info:

void APerch::MarkUnreachable()
{
	static UFunction* uFnMarkUnreachable = nullptr;

	if (!uFnMarkUnreachable)
	{
		uFnMarkUnreachable = UFunction::FindFunction("Function GearboxFramework.Perch.MarkUnreachable");
	}

	APerch_execMarkUnreachable_Params MarkUnreachable_Params;
	memset(&MarkUnreachable_Params, 0, sizeof(MarkUnreachable_Params));

	uFnMarkUnreachable->iNative = 0;
	uFnMarkUnreachable->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnMarkUnreachable, &MarkUnreachable_Params, nullptr);
	uFnMarkUnreachable->FunctionFlags |= 0x400;
	uFnMarkUnreachable->iNative = 34884;
};

// Function GearboxFramework.Perch.GetBody
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34054])
// Parameter Info:
// class UPerchBodyDefinition*    ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UPerchBodyDefinition* APerch::GetBody()
{
	static UFunction* uFnGetBody = nullptr;

	if (!uFnGetBody)
	{
		uFnGetBody = UFunction::FindFunction("Function GearboxFramework.Perch.GetBody");
	}

	APerch_execGetBody_Params GetBody_Params;
	memset(&GetBody_Params, 0, sizeof(GetBody_Params));

	uFnGetBody->iNative = 0;
	uFnGetBody->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetBody, &GetBody_Params, nullptr);
	uFnGetBody->FunctionFlags |= 0x400;
	uFnGetBody->iNative = 34054;

	return GetBody_Params.ReturnValue;
};

// Function GearboxFramework.Perch.GetTag
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34235])
// Parameter Info:
// class UPerchTag*               ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UPerchTag* APerch::GetTag()
{
	static UFunction* uFnGetTag = nullptr;

	if (!uFnGetTag)
	{
		uFnGetTag = UFunction::FindFunction("Function GearboxFramework.Perch.GetTag");
	}

	APerch_execGetTag_Params GetTag_Params;
	memset(&GetTag_Params, 0, sizeof(GetTag_Params));

	uFnGetTag->iNative = 0;
	uFnGetTag->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetTag, &GetTag_Params, nullptr);
	uFnGetTag->FunctionFlags |= 0x400;
	uFnGetTag->iNative = 34235;

	return GetTag_Params.ReturnValue;
};

// Function GearboxFramework.SpawnPoint.GetSpawnRotation
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34223])
// Parameter Info:
// struct FRotator                ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FRotator ASpawnPoint::GetSpawnRotation()
{
	static UFunction* uFnGetSpawnRotation = nullptr;

	if (!uFnGetSpawnRotation)
	{
		uFnGetSpawnRotation = UFunction::FindFunction("Function GearboxFramework.SpawnPoint.GetSpawnRotation");
	}

	ASpawnPoint_execGetSpawnRotation_Params GetSpawnRotation_Params;
	memset(&GetSpawnRotation_Params, 0, sizeof(GetSpawnRotation_Params));

	uFnGetSpawnRotation->iNative = 0;
	uFnGetSpawnRotation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetSpawnRotation, &GetSpawnRotation_Params, nullptr);
	uFnGetSpawnRotation->FunctionFlags |= 0x400;
	uFnGetSpawnRotation->iNative = 34223;

	return GetSpawnRotation_Params.ReturnValue;
};

// Function GearboxFramework.SpawnPoint.GetSpawnLocation
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34219])
// Parameter Info:
// struct FVector                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FVector ASpawnPoint::GetSpawnLocation()
{
	static UFunction* uFnGetSpawnLocation = nullptr;

	if (!uFnGetSpawnLocation)
	{
		uFnGetSpawnLocation = UFunction::FindFunction("Function GearboxFramework.SpawnPoint.GetSpawnLocation");
	}

	ASpawnPoint_execGetSpawnLocation_Params GetSpawnLocation_Params;
	memset(&GetSpawnLocation_Params, 0, sizeof(GetSpawnLocation_Params));

	uFnGetSpawnLocation->iNative = 0;
	uFnGetSpawnLocation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetSpawnLocation, &GetSpawnLocation_Params, nullptr);
	uFnGetSpawnLocation->FunctionFlags |= 0x400;
	uFnGetSpawnLocation->iNative = 34219;

	return GetSpawnLocation_Params.ReturnValue;
};

// Function GearboxFramework.SpawnPoint.CanSpawnFromFactory
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32684])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpawnFactory*           Factory                        (CPF_Parm)
// int32_t                        GameStage                      (CPF_Parm)
// int32_t                        AwesomeLevel                   (CPF_Parm)

bool ASpawnPoint::CanSpawnFromFactory(class USpawnFactory* Factory, int32_t GameStage, int32_t AwesomeLevel)
{
	static UFunction* uFnCanSpawnFromFactory = nullptr;

	if (!uFnCanSpawnFromFactory)
	{
		uFnCanSpawnFromFactory = UFunction::FindFunction("Function GearboxFramework.SpawnPoint.CanSpawnFromFactory");
	}

	ASpawnPoint_execCanSpawnFromFactory_Params CanSpawnFromFactory_Params;
	memset(&CanSpawnFromFactory_Params, 0, sizeof(CanSpawnFromFactory_Params));
	memcpy_s(&CanSpawnFromFactory_Params.Factory, sizeof(CanSpawnFromFactory_Params.Factory), &Factory, sizeof(Factory));
	memcpy_s(&CanSpawnFromFactory_Params.GameStage, sizeof(CanSpawnFromFactory_Params.GameStage), &GameStage, sizeof(GameStage));
	memcpy_s(&CanSpawnFromFactory_Params.AwesomeLevel, sizeof(CanSpawnFromFactory_Params.AwesomeLevel), &AwesomeLevel, sizeof(AwesomeLevel));

	uFnCanSpawnFromFactory->iNative = 0;
	uFnCanSpawnFromFactory->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCanSpawnFromFactory, &CanSpawnFromFactory_Params, nullptr);
	uFnCanSpawnFromFactory->FunctionFlags |= 0x400;
	uFnCanSpawnFromFactory->iNative = 32684;

	return CanSpawnFromFactory_Params.ReturnValue;
};

// Function GearboxFramework.SpawnPoint.ActorSpawned
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[31654])
// Parameter Info:
// class AActor*                  SpawnedActor                   (CPF_Parm)

void ASpawnPoint::ActorSpawned(class AActor* SpawnedActor)
{
	static UFunction* uFnActorSpawned = nullptr;

	if (!uFnActorSpawned)
	{
		uFnActorSpawned = UFunction::FindFunction("Function GearboxFramework.SpawnPoint.ActorSpawned");
	}

	ASpawnPoint_execActorSpawned_Params ActorSpawned_Params;
	memset(&ActorSpawned_Params, 0, sizeof(ActorSpawned_Params));
	memcpy_s(&ActorSpawned_Params.SpawnedActor, sizeof(ActorSpawned_Params.SpawnedActor), &SpawnedActor, sizeof(SpawnedActor));

	uFnActorSpawned->iNative = 0;
	uFnActorSpawned->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnActorSpawned, &ActorSpawned_Params, nullptr);
	uFnActorSpawned->FunctionFlags |= 0x400;
	uFnActorSpawned->iNative = 31654;
};

// Function GearboxFramework.SpawnPoint.RandomizeInitialDestinations
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35601])
// Parameter Info:

void ASpawnPoint::RandomizeInitialDestinations()
{
	static UFunction* uFnRandomizeInitialDestinations = nullptr;

	if (!uFnRandomizeInitialDestinations)
	{
		uFnRandomizeInitialDestinations = UFunction::FindFunction("Function GearboxFramework.SpawnPoint.RandomizeInitialDestinations");
	}

	ASpawnPoint_execRandomizeInitialDestinations_Params RandomizeInitialDestinations_Params;
	memset(&RandomizeInitialDestinations_Params, 0, sizeof(RandomizeInitialDestinations_Params));

	uFnRandomizeInitialDestinations->iNative = 0;
	uFnRandomizeInitialDestinations->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRandomizeInitialDestinations, &RandomizeInitialDestinations_Params, nullptr);
	uFnRandomizeInitialDestinations->FunctionFlags |= 0x400;
	uFnRandomizeInitialDestinations->iNative = 35601;
};

// Function GearboxFramework.SpawnPoint.GetInitialDestination
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34114])
// Parameter Info:
// class AActor*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class AActor* ASpawnPoint::GetInitialDestination()
{
	static UFunction* uFnGetInitialDestination = nullptr;

	if (!uFnGetInitialDestination)
	{
		uFnGetInitialDestination = UFunction::FindFunction("Function GearboxFramework.SpawnPoint.GetInitialDestination");
	}

	ASpawnPoint_execGetInitialDestination_Params GetInitialDestination_Params;
	memset(&GetInitialDestination_Params, 0, sizeof(GetInitialDestination_Params));

	uFnGetInitialDestination->iNative = 0;
	uFnGetInitialDestination->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetInitialDestination, &GetInitialDestination_Params, nullptr);
	uFnGetInitialDestination->FunctionFlags |= 0x400;
	uFnGetInitialDestination->iNative = 34114;

	return GetInitialDestination_Params.ReturnValue;
};

// Function GearboxFramework.SpawnPoint.GetInitialAction
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// EInitialActionType             ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

EInitialActionType ASpawnPoint::GetInitialAction()
{
	static UFunction* uFnGetInitialAction = nullptr;

	if (!uFnGetInitialAction)
	{
		uFnGetInitialAction = UFunction::FindFunction("Function GearboxFramework.SpawnPoint.GetInitialAction");
	}

	ASpawnPoint_execGetInitialAction_Params GetInitialAction_Params;
	memset(&GetInitialAction_Params, 0, sizeof(GetInitialAction_Params));

	this->ProcessEvent(uFnGetInitialAction, &GetInitialAction_Params, nullptr);

	return GetInitialAction_Params.ReturnValue;
};

// Function GearboxFramework.SpawnPoint.StartStretchy
// [0x00020403] (FUNC_Final | FUNC_Defined | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2445])
// Parameter Info:

void ASpawnPoint::StartStretchy()
{
	static UFunction* uFnStartStretchy = nullptr;

	if (!uFnStartStretchy)
	{
		uFnStartStretchy = UFunction::FindFunction("Function GearboxFramework.SpawnPoint.StartStretchy");
	}

	ASpawnPoint_execStartStretchy_Params StartStretchy_Params;
	memset(&StartStretchy_Params, 0, sizeof(StartStretchy_Params));

	uFnStartStretchy->iNative = 0;
	uFnStartStretchy->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnStartStretchy, &StartStretchy_Params, nullptr);
	uFnStartStretchy->FunctionFlags |= 0x400;
	uFnStartStretchy->iNative = 2445;
};

// Function GearboxFramework.SpawnPoint.SpawnEnded
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36122])
// Parameter Info:
// class AActor*                  User                           (CPF_Parm)

void ASpawnPoint::SpawnEnded(class AActor* User)
{
	static UFunction* uFnSpawnEnded = nullptr;

	if (!uFnSpawnEnded)
	{
		uFnSpawnEnded = UFunction::FindFunction("Function GearboxFramework.SpawnPoint.SpawnEnded");
	}

	ASpawnPoint_execSpawnEnded_Params SpawnEnded_Params;
	memset(&SpawnEnded_Params, 0, sizeof(SpawnEnded_Params));
	memcpy_s(&SpawnEnded_Params.User, sizeof(SpawnEnded_Params.User), &User, sizeof(User));

	uFnSpawnEnded->iNative = 0;
	uFnSpawnEnded->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSpawnEnded, &SpawnEnded_Params, nullptr);
	uFnSpawnEnded->FunctionFlags |= 0x400;
	uFnSpawnEnded->iNative = 36122;
};

// Function GearboxFramework.SpawnPoint.SpawnStarted
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36156])
// Parameter Info:
// class AActor*                  User                           (CPF_Parm)
// float                          StretchyStartTime              (CPF_Parm)

void ASpawnPoint::SpawnStarted(class AActor* User, float StretchyStartTime)
{
	static UFunction* uFnSpawnStarted = nullptr;

	if (!uFnSpawnStarted)
	{
		uFnSpawnStarted = UFunction::FindFunction("Function GearboxFramework.SpawnPoint.SpawnStarted");
	}

	ASpawnPoint_execSpawnStarted_Params SpawnStarted_Params;
	memset(&SpawnStarted_Params, 0, sizeof(SpawnStarted_Params));
	memcpy_s(&SpawnStarted_Params.User, sizeof(SpawnStarted_Params.User), &User, sizeof(User));
	memcpy_s(&SpawnStarted_Params.StretchyStartTime, sizeof(SpawnStarted_Params.StretchyStartTime), &StretchyStartTime, sizeof(StretchyStartTime));

	uFnSpawnStarted->iNative = 0;
	uFnSpawnStarted->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSpawnStarted, &SpawnStarted_Params, nullptr);
	uFnSpawnStarted->FunctionFlags |= 0x400;
	uFnSpawnStarted->iNative = 36156;
};

// Function GearboxFramework.NavAnimNode.StartStretchy
// [0x00020403] (FUNC_Final | FUNC_Defined | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2445])
// Parameter Info:

void ANavAnimNode::StartStretchy()
{
	static UFunction* uFnStartStretchy = nullptr;

	if (!uFnStartStretchy)
	{
		uFnStartStretchy = UFunction::FindFunction("Function GearboxFramework.NavAnimNode.StartStretchy");
	}

	ANavAnimNode_execStartStretchy_Params StartStretchy_Params;
	memset(&StartStretchy_Params, 0, sizeof(StartStretchy_Params));

	uFnStartStretchy->iNative = 0;
	uFnStartStretchy->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnStartStretchy, &StartStretchy_Params, nullptr);
	uFnStartStretchy->FunctionFlags |= 0x400;
	uFnStartStretchy->iNative = 2445;
};

// Function GearboxFramework.NavAnimNode.NavAnimEnded
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35068])
// Parameter Info:
// class AActor*                  User                           (CPF_Parm)

void ANavAnimNode::NavAnimEnded(class AActor* User)
{
	static UFunction* uFnNavAnimEnded = nullptr;

	if (!uFnNavAnimEnded)
	{
		uFnNavAnimEnded = UFunction::FindFunction("Function GearboxFramework.NavAnimNode.NavAnimEnded");
	}

	ANavAnimNode_execNavAnimEnded_Params NavAnimEnded_Params;
	memset(&NavAnimEnded_Params, 0, sizeof(NavAnimEnded_Params));
	memcpy_s(&NavAnimEnded_Params.User, sizeof(NavAnimEnded_Params.User), &User, sizeof(User));

	uFnNavAnimEnded->iNative = 0;
	uFnNavAnimEnded->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnNavAnimEnded, &NavAnimEnded_Params, nullptr);
	uFnNavAnimEnded->FunctionFlags |= 0x400;
	uFnNavAnimEnded->iNative = 35068;
};

// Function GearboxFramework.NavAnimNode.NavAnimStarted
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35070])
// Parameter Info:
// class UNavAnimConnection*      Connection                     (CPF_Parm)
// class AActor*                  User                           (CPF_Parm)
// float                          InterpTime                     (CPF_Parm)
// float                          StretchyStartTime              (CPF_Parm)

void ANavAnimNode::NavAnimStarted(class UNavAnimConnection* Connection, class AActor* User, float InterpTime, float StretchyStartTime)
{
	static UFunction* uFnNavAnimStarted = nullptr;

	if (!uFnNavAnimStarted)
	{
		uFnNavAnimStarted = UFunction::FindFunction("Function GearboxFramework.NavAnimNode.NavAnimStarted");
	}

	ANavAnimNode_execNavAnimStarted_Params NavAnimStarted_Params;
	memset(&NavAnimStarted_Params, 0, sizeof(NavAnimStarted_Params));
	memcpy_s(&NavAnimStarted_Params.Connection, sizeof(NavAnimStarted_Params.Connection), &Connection, sizeof(Connection));
	memcpy_s(&NavAnimStarted_Params.User, sizeof(NavAnimStarted_Params.User), &User, sizeof(User));
	memcpy_s(&NavAnimStarted_Params.InterpTime, sizeof(NavAnimStarted_Params.InterpTime), &InterpTime, sizeof(InterpTime));
	memcpy_s(&NavAnimStarted_Params.StretchyStartTime, sizeof(NavAnimStarted_Params.StretchyStartTime), &StretchyStartTime, sizeof(StretchyStartTime));

	uFnNavAnimStarted->iNative = 0;
	uFnNavAnimStarted->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnNavAnimStarted, &NavAnimStarted_Params, nullptr);
	uFnNavAnimStarted->FunctionFlags |= 0x400;
	uFnNavAnimStarted->iNative = 35070;
};

// Function GearboxFramework.PhysicsJumpNode.CheckWaitingUsers
// [0x00020403] (FUNC_Final | FUNC_Defined | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2505])
// Parameter Info:

void APhysicsJumpNode::CheckWaitingUsers()
{
	static UFunction* uFnCheckWaitingUsers = nullptr;

	if (!uFnCheckWaitingUsers)
	{
		uFnCheckWaitingUsers = UFunction::FindFunction("Function GearboxFramework.PhysicsJumpNode.CheckWaitingUsers");
	}

	APhysicsJumpNode_execCheckWaitingUsers_Params CheckWaitingUsers_Params;
	memset(&CheckWaitingUsers_Params, 0, sizeof(CheckWaitingUsers_Params));

	uFnCheckWaitingUsers->iNative = 0;
	uFnCheckWaitingUsers->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCheckWaitingUsers, &CheckWaitingUsers_Params, nullptr);
	uFnCheckWaitingUsers->FunctionFlags |= 0x400;
	uFnCheckWaitingUsers->iNative = 2505;
};

// Function GearboxFramework.PhysicsJumpNode.GetJumpState
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34124])
// Parameter Info:
// EPhysicsJumpState              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AActor*                  User                           (CPF_Parm)

EPhysicsJumpState APhysicsJumpNode::GetJumpState(class AActor* User)
{
	static UFunction* uFnGetJumpState = nullptr;

	if (!uFnGetJumpState)
	{
		uFnGetJumpState = UFunction::FindFunction("Function GearboxFramework.PhysicsJumpNode.GetJumpState");
	}

	APhysicsJumpNode_execGetJumpState_Params GetJumpState_Params;
	memset(&GetJumpState_Params, 0, sizeof(GetJumpState_Params));
	memcpy_s(&GetJumpState_Params.User, sizeof(GetJumpState_Params.User), &User, sizeof(User));

	uFnGetJumpState->iNative = 0;
	uFnGetJumpState->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetJumpState, &GetJumpState_Params, nullptr);
	uFnGetJumpState->FunctionFlags |= 0x400;
	uFnGetJumpState->iNative = 34124;

	return GetJumpState_Params.ReturnValue;
};

// Function GearboxFramework.PhysicsJumpNode.ShouldPlayLand
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35951])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AActor*                  User                           (CPF_Parm)

bool APhysicsJumpNode::ShouldPlayLand(class AActor* User)
{
	static UFunction* uFnShouldPlayLand = nullptr;

	if (!uFnShouldPlayLand)
	{
		uFnShouldPlayLand = UFunction::FindFunction("Function GearboxFramework.PhysicsJumpNode.ShouldPlayLand");
	}

	APhysicsJumpNode_execShouldPlayLand_Params ShouldPlayLand_Params;
	memset(&ShouldPlayLand_Params, 0, sizeof(ShouldPlayLand_Params));
	memcpy_s(&ShouldPlayLand_Params.User, sizeof(ShouldPlayLand_Params.User), &User, sizeof(User));

	uFnShouldPlayLand->iNative = 0;
	uFnShouldPlayLand->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnShouldPlayLand, &ShouldPlayLand_Params, nullptr);
	uFnShouldPlayLand->FunctionFlags |= 0x400;
	uFnShouldPlayLand->iNative = 35951;

	return ShouldPlayLand_Params.ReturnValue;
};

// Function GearboxFramework.PhysicsJumpNode.JumpEnded
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34710])
// Parameter Info:
// class AActor*                  User                           (CPF_Parm)

void APhysicsJumpNode::JumpEnded(class AActor* User)
{
	static UFunction* uFnJumpEnded = nullptr;

	if (!uFnJumpEnded)
	{
		uFnJumpEnded = UFunction::FindFunction("Function GearboxFramework.PhysicsJumpNode.JumpEnded");
	}

	APhysicsJumpNode_execJumpEnded_Params JumpEnded_Params;
	memset(&JumpEnded_Params, 0, sizeof(JumpEnded_Params));
	memcpy_s(&JumpEnded_Params.User, sizeof(JumpEnded_Params.User), &User, sizeof(User));

	uFnJumpEnded->iNative = 0;
	uFnJumpEnded->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnJumpEnded, &JumpEnded_Params, nullptr);
	uFnJumpEnded->FunctionFlags |= 0x400;
	uFnJumpEnded->iNative = 34710;
};

// Function GearboxFramework.PhysicsJumpNode.PlayLand
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35467])
// Parameter Info:
// class AActor*                  User                           (CPF_Parm)

void APhysicsJumpNode::PlayLand(class AActor* User)
{
	static UFunction* uFnPlayLand = nullptr;

	if (!uFnPlayLand)
	{
		uFnPlayLand = UFunction::FindFunction("Function GearboxFramework.PhysicsJumpNode.PlayLand");
	}

	APhysicsJumpNode_execPlayLand_Params PlayLand_Params;
	memset(&PlayLand_Params, 0, sizeof(PlayLand_Params));
	memcpy_s(&PlayLand_Params.User, sizeof(PlayLand_Params.User), &User, sizeof(User));

	uFnPlayLand->iNative = 0;
	uFnPlayLand->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPlayLand, &PlayLand_Params, nullptr);
	uFnPlayLand->FunctionFlags |= 0x400;
	uFnPlayLand->iNative = 35467;
};

// Function GearboxFramework.PhysicsJumpNode.PlayIdle
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35463])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AActor*                  User                           (CPF_Parm)

float APhysicsJumpNode::PlayIdle(class AActor* User)
{
	static UFunction* uFnPlayIdle = nullptr;

	if (!uFnPlayIdle)
	{
		uFnPlayIdle = UFunction::FindFunction("Function GearboxFramework.PhysicsJumpNode.PlayIdle");
	}

	APhysicsJumpNode_execPlayIdle_Params PlayIdle_Params;
	memset(&PlayIdle_Params, 0, sizeof(PlayIdle_Params));
	memcpy_s(&PlayIdle_Params.User, sizeof(PlayIdle_Params.User), &User, sizeof(User));

	uFnPlayIdle->iNative = 0;
	uFnPlayIdle->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPlayIdle, &PlayIdle_Params, nullptr);
	uFnPlayIdle->FunctionFlags |= 0x400;
	uFnPlayIdle->iNative = 35463;

	return PlayIdle_Params.ReturnValue;
};

// Function GearboxFramework.PhysicsJumpNode.PlayLaunch
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35468])
// Parameter Info:
// class UPhysicsJumpConnection*  Connection                     (CPF_Parm)
// class AActor*                  User                           (CPF_Parm)

void APhysicsJumpNode::PlayLaunch(class UPhysicsJumpConnection* Connection, class AActor* User)
{
	static UFunction* uFnPlayLaunch = nullptr;

	if (!uFnPlayLaunch)
	{
		uFnPlayLaunch = UFunction::FindFunction("Function GearboxFramework.PhysicsJumpNode.PlayLaunch");
	}

	APhysicsJumpNode_execPlayLaunch_Params PlayLaunch_Params;
	memset(&PlayLaunch_Params, 0, sizeof(PlayLaunch_Params));
	memcpy_s(&PlayLaunch_Params.Connection, sizeof(PlayLaunch_Params.Connection), &Connection, sizeof(Connection));
	memcpy_s(&PlayLaunch_Params.User, sizeof(PlayLaunch_Params.User), &User, sizeof(User));

	uFnPlayLaunch->iNative = 0;
	uFnPlayLaunch->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPlayLaunch, &PlayLaunch_Params, nullptr);
	uFnPlayLaunch->FunctionFlags |= 0x400;
	uFnPlayLaunch->iNative = 35468;
};

// Function GearboxFramework.GearboxAIUtility.AIUpdateWhilePaused
// [0x12024000] (FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// int32_t                        TickCount                      (CPF_OptionalParm | CPF_Parm)

void UGearboxAIUtility::AIUpdateWhilePaused(int32_t TickCount)
{
	static UFunction* uFnAIUpdateWhilePaused = nullptr;

	if (!uFnAIUpdateWhilePaused)
	{
		uFnAIUpdateWhilePaused = UFunction::FindFunction("Function GearboxFramework.GearboxAIUtility.AIUpdateWhilePaused");
	}

	UGearboxAIUtility_execAIUpdateWhilePaused_Params AIUpdateWhilePaused_Params;
	memset(&AIUpdateWhilePaused_Params, 0, sizeof(AIUpdateWhilePaused_Params));
	memcpy_s(&AIUpdateWhilePaused_Params.TickCount, sizeof(AIUpdateWhilePaused_Params.TickCount), &TickCount, sizeof(TickCount));

	this->ProcessEvent(uFnAIUpdateWhilePaused, &AIUpdateWhilePaused_Params, nullptr);
};

// Function GearboxFramework.GearboxAIUtility.ShowAIRelevance
// [0x12420000] (FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AHUD*                    HUD                            (CPF_Parm)
// float                          out_YL                         (CPF_Parm | CPF_OutParm)
// float                          out_YPos                       (CPF_Parm | CPF_OutParm)

void UGearboxAIUtility::ShowAIRelevance(class AHUD* HUD, float& out_YL, float& out_YPos)
{
	static UFunction* uFnShowAIRelevance = nullptr;

	if (!uFnShowAIRelevance)
	{
		uFnShowAIRelevance = UFunction::FindFunction("Function GearboxFramework.GearboxAIUtility.ShowAIRelevance");
	}

	UGearboxAIUtility_execShowAIRelevance_Params ShowAIRelevance_Params;
	memset(&ShowAIRelevance_Params, 0, sizeof(ShowAIRelevance_Params));
	memcpy_s(&ShowAIRelevance_Params.HUD, sizeof(ShowAIRelevance_Params.HUD), &HUD, sizeof(HUD));
	memcpy_s(&ShowAIRelevance_Params.out_YL, sizeof(ShowAIRelevance_Params.out_YL), &out_YL, sizeof(out_YL));
	memcpy_s(&ShowAIRelevance_Params.out_YPos, sizeof(ShowAIRelevance_Params.out_YPos), &out_YPos, sizeof(out_YPos));

	this->ProcessEvent(uFnShowAIRelevance, &ShowAIRelevance_Params, nullptr);

	memcpy_s(&out_YL, sizeof(out_YL), &ShowAIRelevance_Params.out_YL, sizeof(ShowAIRelevance_Params.out_YL));
	memcpy_s(&out_YPos, sizeof(out_YPos), &ShowAIRelevance_Params.out_YPos, sizeof(ShowAIRelevance_Params.out_YPos));
};

// Function GearboxFramework.GearboxAIUtility.ShowMoveNodeErrors
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AHUD*                    HUD                            (CPF_Parm)

void UGearboxAIUtility::ShowMoveNodeErrors(class AHUD* HUD)
{
	static UFunction* uFnShowMoveNodeErrors = nullptr;

	if (!uFnShowMoveNodeErrors)
	{
		uFnShowMoveNodeErrors = UFunction::FindFunction("Function GearboxFramework.GearboxAIUtility.ShowMoveNodeErrors");
	}

	UGearboxAIUtility_execShowMoveNodeErrors_Params ShowMoveNodeErrors_Params;
	memset(&ShowMoveNodeErrors_Params, 0, sizeof(ShowMoveNodeErrors_Params));
	memcpy_s(&ShowMoveNodeErrors_Params.HUD, sizeof(ShowMoveNodeErrors_Params.HUD), &HUD, sizeof(HUD));

	this->ProcessEvent(uFnShowMoveNodeErrors, &ShowMoveNodeErrors_Params, nullptr);
};

// Function GearboxFramework.GearboxAIUtility.ShowPathingEntityErrors
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AHUD*                    HUD                            (CPF_Parm)

void UGearboxAIUtility::ShowPathingEntityErrors(class AHUD* HUD)
{
	static UFunction* uFnShowPathingEntityErrors = nullptr;

	if (!uFnShowPathingEntityErrors)
	{
		uFnShowPathingEntityErrors = UFunction::FindFunction("Function GearboxFramework.GearboxAIUtility.ShowPathingEntityErrors");
	}

	UGearboxAIUtility_execShowPathingEntityErrors_Params ShowPathingEntityErrors_Params;
	memset(&ShowPathingEntityErrors_Params, 0, sizeof(ShowPathingEntityErrors_Params));
	memcpy_s(&ShowPathingEntityErrors_Params.HUD, sizeof(ShowPathingEntityErrors_Params.HUD), &HUD, sizeof(HUD));

	this->ProcessEvent(uFnShowPathingEntityErrors, &ShowPathingEntityErrors_Params, nullptr);
};

// Function GearboxFramework.GearboxAIUtility.DisplayPathErrors
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AHUD*                    HUD                            (CPF_Parm)

void UGearboxAIUtility::eventDisplayPathErrors(class AHUD* HUD)
{
	static UFunction* uFnDisplayPathErrors = nullptr;

	if (!uFnDisplayPathErrors)
	{
		uFnDisplayPathErrors = UFunction::FindFunction("Function GearboxFramework.GearboxAIUtility.DisplayPathErrors");
	}

	UGearboxAIUtility_eventDisplayPathErrors_Params DisplayPathErrors_Params;
	memset(&DisplayPathErrors_Params, 0, sizeof(DisplayPathErrors_Params));
	memcpy_s(&DisplayPathErrors_Params.HUD, sizeof(DisplayPathErrors_Params.HUD), &HUD, sizeof(HUD));

	this->ProcessEvent(uFnDisplayPathErrors, &DisplayPathErrors_Params, nullptr);
};

// Function GearboxFramework.GearboxAIUtility.DisplayDebug
// [0x12420000] (FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AHUD*                    HUD                            (CPF_Parm)
// float                          out_YL                         (CPF_Parm | CPF_OutParm)
// float                          out_YPos                       (CPF_Parm | CPF_OutParm)

void UGearboxAIUtility::DisplayDebug(class AHUD* HUD, float& out_YL, float& out_YPos)
{
	static UFunction* uFnDisplayDebug = nullptr;

	if (!uFnDisplayDebug)
	{
		uFnDisplayDebug = UFunction::FindFunction("Function GearboxFramework.GearboxAIUtility.DisplayDebug");
	}

	UGearboxAIUtility_execDisplayDebug_Params DisplayDebug_Params;
	memset(&DisplayDebug_Params, 0, sizeof(DisplayDebug_Params));
	memcpy_s(&DisplayDebug_Params.HUD, sizeof(DisplayDebug_Params.HUD), &HUD, sizeof(HUD));
	memcpy_s(&DisplayDebug_Params.out_YL, sizeof(DisplayDebug_Params.out_YL), &out_YL, sizeof(out_YL));
	memcpy_s(&DisplayDebug_Params.out_YPos, sizeof(DisplayDebug_Params.out_YPos), &out_YPos, sizeof(out_YPos));

	this->ProcessEvent(uFnDisplayDebug, &DisplayDebug_Params, nullptr);

	memcpy_s(&out_YL, sizeof(out_YL), &DisplayDebug_Params.out_YL, sizeof(DisplayDebug_Params.out_YL));
	memcpy_s(&out_YPos, sizeof(out_YPos), &DisplayDebug_Params.out_YPos, sizeof(DisplayDebug_Params.out_YPos));
};

// Function GearboxFramework.GearboxAIUtility.IsDebugObstacle
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34654])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AActor*                  Obstacle                       (CPF_Parm)

bool UGearboxAIUtility::IsDebugObstacle(class AActor* Obstacle)
{
	static UFunction* uFnIsDebugObstacle = nullptr;

	if (!uFnIsDebugObstacle)
	{
		uFnIsDebugObstacle = UFunction::FindFunction("Function GearboxFramework.GearboxAIUtility.IsDebugObstacle");
	}

	UGearboxAIUtility_execIsDebugObstacle_Params IsDebugObstacle_Params;
	memset(&IsDebugObstacle_Params, 0, sizeof(IsDebugObstacle_Params));
	memcpy_s(&IsDebugObstacle_Params.Obstacle, sizeof(IsDebugObstacle_Params.Obstacle), &Obstacle, sizeof(Obstacle));

	uFnIsDebugObstacle->iNative = 0;
	uFnIsDebugObstacle->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsDebugObstacle, &IsDebugObstacle_Params, nullptr);
	uFnIsDebugObstacle->FunctionFlags |= 0x400;
	uFnIsDebugObstacle->iNative = 34654;

	return IsDebugObstacle_Params.ReturnValue;
};

// Function GearboxFramework.GearboxAIUtility.AIRelevanceActive
// [0x00022400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[31769])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGearboxAIUtility::AIRelevanceActive()
{
	static UFunction* uFnAIRelevanceActive = nullptr;

	if (!uFnAIRelevanceActive)
	{
		uFnAIRelevanceActive = UFunction::FindFunction("Function GearboxFramework.GearboxAIUtility.AIRelevanceActive");
	}

	UGearboxAIUtility_execAIRelevanceActive_Params AIRelevanceActive_Params;
	memset(&AIRelevanceActive_Params, 0, sizeof(AIRelevanceActive_Params));

	uFnAIRelevanceActive->iNative = 0;
	uFnAIRelevanceActive->FunctionFlags &= ~0x400;
	UGearboxAIUtility::StaticClass()->ProcessEvent(uFnAIRelevanceActive, &AIRelevanceActive_Params, nullptr);
	uFnAIRelevanceActive->FunctionFlags |= 0x400;
	uFnAIRelevanceActive->iNative = 31769;

	return AIRelevanceActive_Params.ReturnValue;
};

// Function GearboxFramework.GearboxAIUtility.ToggleForceAIToBeIrrelevant
// [0x00022400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[36533])
// Parameter Info:

void UGearboxAIUtility::ToggleForceAIToBeIrrelevant()
{
	static UFunction* uFnToggleForceAIToBeIrrelevant = nullptr;

	if (!uFnToggleForceAIToBeIrrelevant)
	{
		uFnToggleForceAIToBeIrrelevant = UFunction::FindFunction("Function GearboxFramework.GearboxAIUtility.ToggleForceAIToBeIrrelevant");
	}

	UGearboxAIUtility_execToggleForceAIToBeIrrelevant_Params ToggleForceAIToBeIrrelevant_Params;
	memset(&ToggleForceAIToBeIrrelevant_Params, 0, sizeof(ToggleForceAIToBeIrrelevant_Params));

	uFnToggleForceAIToBeIrrelevant->iNative = 0;
	uFnToggleForceAIToBeIrrelevant->FunctionFlags &= ~0x400;
	UGearboxAIUtility::StaticClass()->ProcessEvent(uFnToggleForceAIToBeIrrelevant, &ToggleForceAIToBeIrrelevant_Params, nullptr);
	uFnToggleForceAIToBeIrrelevant->FunctionFlags |= 0x400;
	uFnToggleForceAIToBeIrrelevant->iNative = 36533;
};

// Function GearboxFramework.GearboxAIUtility.ToggleAIRelevance
// [0x00022400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[36520])
// Parameter Info:

void UGearboxAIUtility::ToggleAIRelevance()
{
	static UFunction* uFnToggleAIRelevance = nullptr;

	if (!uFnToggleAIRelevance)
	{
		uFnToggleAIRelevance = UFunction::FindFunction("Function GearboxFramework.GearboxAIUtility.ToggleAIRelevance");
	}

	UGearboxAIUtility_execToggleAIRelevance_Params ToggleAIRelevance_Params;
	memset(&ToggleAIRelevance_Params, 0, sizeof(ToggleAIRelevance_Params));

	uFnToggleAIRelevance->iNative = 0;
	uFnToggleAIRelevance->FunctionFlags &= ~0x400;
	UGearboxAIUtility::StaticClass()->ProcessEvent(uFnToggleAIRelevance, &ToggleAIRelevance_Params, nullptr);
	uFnToggleAIRelevance->FunctionFlags |= 0x400;
	uFnToggleAIRelevance->iNative = 36520;
};

// Function GearboxFramework.GearboxAIUtility.GetNearestNavMeshPoly
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34140])
// Parameter Info:
// struct FGBXNavMeshPolyRef      ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AActor*                  Obstacle                       (CPF_Parm)

struct FGBXNavMeshPolyRef UGearboxAIUtility::GetNearestNavMeshPoly(class AActor* Obstacle)
{
	static UFunction* uFnGetNearestNavMeshPoly = nullptr;

	if (!uFnGetNearestNavMeshPoly)
	{
		uFnGetNearestNavMeshPoly = UFunction::FindFunction("Function GearboxFramework.GearboxAIUtility.GetNearestNavMeshPoly");
	}

	UGearboxAIUtility_execGetNearestNavMeshPoly_Params GetNearestNavMeshPoly_Params;
	memset(&GetNearestNavMeshPoly_Params, 0, sizeof(GetNearestNavMeshPoly_Params));
	memcpy_s(&GetNearestNavMeshPoly_Params.Obstacle, sizeof(GetNearestNavMeshPoly_Params.Obstacle), &Obstacle, sizeof(Obstacle));

	uFnGetNearestNavMeshPoly->iNative = 0;
	uFnGetNearestNavMeshPoly->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetNearestNavMeshPoly, &GetNearestNavMeshPoly_Params, nullptr);
	uFnGetNearestNavMeshPoly->FunctionFlags |= 0x400;
	uFnGetNearestNavMeshPoly->iNative = 34140;

	return GetNearestNavMeshPoly_Params.ReturnValue;
};

// Function GearboxFramework.GearboxAIUtility.GetObstacleInfo
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34160])
// Parameter Info:
// class UPathingObstacleInfo*    ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AActor*                  Obstacle                       (CPF_Parm)

class UPathingObstacleInfo* UGearboxAIUtility::GetObstacleInfo(class AActor* Obstacle)
{
	static UFunction* uFnGetObstacleInfo = nullptr;

	if (!uFnGetObstacleInfo)
	{
		uFnGetObstacleInfo = UFunction::FindFunction("Function GearboxFramework.GearboxAIUtility.GetObstacleInfo");
	}

	UGearboxAIUtility_execGetObstacleInfo_Params GetObstacleInfo_Params;
	memset(&GetObstacleInfo_Params, 0, sizeof(GetObstacleInfo_Params));
	memcpy_s(&GetObstacleInfo_Params.Obstacle, sizeof(GetObstacleInfo_Params.Obstacle), &Obstacle, sizeof(Obstacle));

	uFnGetObstacleInfo->iNative = 0;
	uFnGetObstacleInfo->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetObstacleInfo, &GetObstacleInfo_Params, nullptr);
	uFnGetObstacleInfo->FunctionFlags |= 0x400;
	uFnGetObstacleInfo->iNative = 34160;

	return GetObstacleInfo_Params.ReturnValue;
};

// Function GearboxFramework.GearboxAIUtility.GetNearestNavMeshLoc
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34139])
// Parameter Info:
// struct FBasedPosition          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AActor*                  Obstacle                       (CPF_Parm)

struct FBasedPosition UGearboxAIUtility::GetNearestNavMeshLoc(class AActor* Obstacle)
{
	static UFunction* uFnGetNearestNavMeshLoc = nullptr;

	if (!uFnGetNearestNavMeshLoc)
	{
		uFnGetNearestNavMeshLoc = UFunction::FindFunction("Function GearboxFramework.GearboxAIUtility.GetNearestNavMeshLoc");
	}

	UGearboxAIUtility_execGetNearestNavMeshLoc_Params GetNearestNavMeshLoc_Params;
	memset(&GetNearestNavMeshLoc_Params, 0, sizeof(GetNearestNavMeshLoc_Params));
	memcpy_s(&GetNearestNavMeshLoc_Params.Obstacle, sizeof(GetNearestNavMeshLoc_Params.Obstacle), &Obstacle, sizeof(Obstacle));

	uFnGetNearestNavMeshLoc->iNative = 0;
	uFnGetNearestNavMeshLoc->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetNearestNavMeshLoc, &GetNearestNavMeshLoc_Params, nullptr);
	uFnGetNearestNavMeshLoc->FunctionFlags |= 0x400;
	uFnGetNearestNavMeshLoc->iNative = 34139;

	return GetNearestNavMeshLoc_Params.ReturnValue;
};

// Function GearboxFramework.GearboxAIUtility.GetVertDistToNavMesh
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34254])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AActor*                  Obstacle                       (CPF_Parm)

float UGearboxAIUtility::GetVertDistToNavMesh(class AActor* Obstacle)
{
	static UFunction* uFnGetVertDistToNavMesh = nullptr;

	if (!uFnGetVertDistToNavMesh)
	{
		uFnGetVertDistToNavMesh = UFunction::FindFunction("Function GearboxFramework.GearboxAIUtility.GetVertDistToNavMesh");
	}

	UGearboxAIUtility_execGetVertDistToNavMesh_Params GetVertDistToNavMesh_Params;
	memset(&GetVertDistToNavMesh_Params, 0, sizeof(GetVertDistToNavMesh_Params));
	memcpy_s(&GetVertDistToNavMesh_Params.Obstacle, sizeof(GetVertDistToNavMesh_Params.Obstacle), &Obstacle, sizeof(Obstacle));

	uFnGetVertDistToNavMesh->iNative = 0;
	uFnGetVertDistToNavMesh->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetVertDistToNavMesh, &GetVertDistToNavMesh_Params, nullptr);
	uFnGetVertDistToNavMesh->FunctionFlags |= 0x400;
	uFnGetVertDistToNavMesh->iNative = 34254;

	return GetVertDistToNavMesh_Params.ReturnValue;
};

// Function GearboxFramework.GearboxAIUtility.GetDistToNavMesh
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34090])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AActor*                  Obstacle                       (CPF_Parm)

float UGearboxAIUtility::GetDistToNavMesh(class AActor* Obstacle)
{
	static UFunction* uFnGetDistToNavMesh = nullptr;

	if (!uFnGetDistToNavMesh)
	{
		uFnGetDistToNavMesh = UFunction::FindFunction("Function GearboxFramework.GearboxAIUtility.GetDistToNavMesh");
	}

	UGearboxAIUtility_execGetDistToNavMesh_Params GetDistToNavMesh_Params;
	memset(&GetDistToNavMesh_Params, 0, sizeof(GetDistToNavMesh_Params));
	memcpy_s(&GetDistToNavMesh_Params.Obstacle, sizeof(GetDistToNavMesh_Params.Obstacle), &Obstacle, sizeof(Obstacle));

	uFnGetDistToNavMesh->iNative = 0;
	uFnGetDistToNavMesh->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetDistToNavMesh, &GetDistToNavMesh_Params, nullptr);
	uFnGetDistToNavMesh->FunctionFlags |= 0x400;
	uFnGetDistToNavMesh->iNative = 34090;

	return GetDistToNavMesh_Params.ReturnValue;
};

// Function GearboxFramework.GearboxAIUtility.IsAboveNavMesh
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34642])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AActor*                  Obstacle                       (CPF_Parm)

bool UGearboxAIUtility::IsAboveNavMesh(class AActor* Obstacle)
{
	static UFunction* uFnIsAboveNavMesh = nullptr;

	if (!uFnIsAboveNavMesh)
	{
		uFnIsAboveNavMesh = UFunction::FindFunction("Function GearboxFramework.GearboxAIUtility.IsAboveNavMesh");
	}

	UGearboxAIUtility_execIsAboveNavMesh_Params IsAboveNavMesh_Params;
	memset(&IsAboveNavMesh_Params, 0, sizeof(IsAboveNavMesh_Params));
	memcpy_s(&IsAboveNavMesh_Params.Obstacle, sizeof(IsAboveNavMesh_Params.Obstacle), &Obstacle, sizeof(Obstacle));

	uFnIsAboveNavMesh->iNative = 0;
	uFnIsAboveNavMesh->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsAboveNavMesh, &IsAboveNavMesh_Params, nullptr);
	uFnIsAboveNavMesh->FunctionFlags |= 0x400;
	uFnIsAboveNavMesh->iNative = 34642;

	return IsAboveNavMesh_Params.ReturnValue;
};

// Function GearboxFramework.GearboxAIUtility.ClearNavMeshInfo
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32756])
// Parameter Info:
// class AActor*                  Obstacle                       (CPF_Parm)

void UGearboxAIUtility::ClearNavMeshInfo(class AActor* Obstacle)
{
	static UFunction* uFnClearNavMeshInfo = nullptr;

	if (!uFnClearNavMeshInfo)
	{
		uFnClearNavMeshInfo = UFunction::FindFunction("Function GearboxFramework.GearboxAIUtility.ClearNavMeshInfo");
	}

	UGearboxAIUtility_execClearNavMeshInfo_Params ClearNavMeshInfo_Params;
	memset(&ClearNavMeshInfo_Params, 0, sizeof(ClearNavMeshInfo_Params));
	memcpy_s(&ClearNavMeshInfo_Params.Obstacle, sizeof(ClearNavMeshInfo_Params.Obstacle), &Obstacle, sizeof(Obstacle));

	uFnClearNavMeshInfo->iNative = 0;
	uFnClearNavMeshInfo->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnClearNavMeshInfo, &ClearNavMeshInfo_Params, nullptr);
	uFnClearNavMeshInfo->FunctionFlags |= 0x400;
	uFnClearNavMeshInfo->iNative = 32756;
};

// Function GearboxFramework.GearboxAIUtility.UnregisterAIComponent
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36601])
// Parameter Info:
// class UAIComponent*            InAIComp                       (CPF_Parm | CPF_EditInline)

void UGearboxAIUtility::UnregisterAIComponent(class UAIComponent* InAIComp)
{
	static UFunction* uFnUnregisterAIComponent = nullptr;

	if (!uFnUnregisterAIComponent)
	{
		uFnUnregisterAIComponent = UFunction::FindFunction("Function GearboxFramework.GearboxAIUtility.UnregisterAIComponent");
	}

	UGearboxAIUtility_execUnregisterAIComponent_Params UnregisterAIComponent_Params;
	memset(&UnregisterAIComponent_Params, 0, sizeof(UnregisterAIComponent_Params));
	memcpy_s(&UnregisterAIComponent_Params.InAIComp, sizeof(UnregisterAIComponent_Params.InAIComp), &InAIComp, sizeof(InAIComp));

	uFnUnregisterAIComponent->iNative = 0;
	uFnUnregisterAIComponent->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnUnregisterAIComponent, &UnregisterAIComponent_Params, nullptr);
	uFnUnregisterAIComponent->FunctionFlags |= 0x400;
	uFnUnregisterAIComponent->iNative = 36601;
};

// Function GearboxFramework.GearboxAIUtility.RegisterAIComponent
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35630])
// Parameter Info:
// class UAIComponent*            InAIComp                       (CPF_Parm | CPF_EditInline)

void UGearboxAIUtility::RegisterAIComponent(class UAIComponent* InAIComp)
{
	static UFunction* uFnRegisterAIComponent = nullptr;

	if (!uFnRegisterAIComponent)
	{
		uFnRegisterAIComponent = UFunction::FindFunction("Function GearboxFramework.GearboxAIUtility.RegisterAIComponent");
	}

	UGearboxAIUtility_execRegisterAIComponent_Params RegisterAIComponent_Params;
	memset(&RegisterAIComponent_Params, 0, sizeof(RegisterAIComponent_Params));
	memcpy_s(&RegisterAIComponent_Params.InAIComp, sizeof(RegisterAIComponent_Params.InAIComp), &InAIComp, sizeof(InAIComp));

	uFnRegisterAIComponent->iNative = 0;
	uFnRegisterAIComponent->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRegisterAIComponent, &RegisterAIComponent_Params, nullptr);
	uFnRegisterAIComponent->FunctionFlags |= 0x400;
	uFnRegisterAIComponent->iNative = 35630;
};

// Function GearboxFramework.GearboxAIUtility.IsRegisteredObstacle
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34688])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AActor*                  Obstacle                       (CPF_Parm)

bool UGearboxAIUtility::IsRegisteredObstacle(class AActor* Obstacle)
{
	static UFunction* uFnIsRegisteredObstacle = nullptr;

	if (!uFnIsRegisteredObstacle)
	{
		uFnIsRegisteredObstacle = UFunction::FindFunction("Function GearboxFramework.GearboxAIUtility.IsRegisteredObstacle");
	}

	UGearboxAIUtility_execIsRegisteredObstacle_Params IsRegisteredObstacle_Params;
	memset(&IsRegisteredObstacle_Params, 0, sizeof(IsRegisteredObstacle_Params));
	memcpy_s(&IsRegisteredObstacle_Params.Obstacle, sizeof(IsRegisteredObstacle_Params.Obstacle), &Obstacle, sizeof(Obstacle));

	uFnIsRegisteredObstacle->iNative = 0;
	uFnIsRegisteredObstacle->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsRegisteredObstacle, &IsRegisteredObstacle_Params, nullptr);
	uFnIsRegisteredObstacle->FunctionFlags |= 0x400;
	uFnIsRegisteredObstacle->iNative = 34688;

	return IsRegisteredObstacle_Params.ReturnValue;
};

// Function GearboxFramework.GearboxAIUtility.UnRegisterObstacle
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36605])
// Parameter Info:
// class AActor*                  Obstacle                       (CPF_Parm)

void UGearboxAIUtility::UnRegisterObstacle(class AActor* Obstacle)
{
	static UFunction* uFnUnRegisterObstacle = nullptr;

	if (!uFnUnRegisterObstacle)
	{
		uFnUnRegisterObstacle = UFunction::FindFunction("Function GearboxFramework.GearboxAIUtility.UnRegisterObstacle");
	}

	UGearboxAIUtility_execUnRegisterObstacle_Params UnRegisterObstacle_Params;
	memset(&UnRegisterObstacle_Params, 0, sizeof(UnRegisterObstacle_Params));
	memcpy_s(&UnRegisterObstacle_Params.Obstacle, sizeof(UnRegisterObstacle_Params.Obstacle), &Obstacle, sizeof(Obstacle));

	uFnUnRegisterObstacle->iNative = 0;
	uFnUnRegisterObstacle->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnUnRegisterObstacle, &UnRegisterObstacle_Params, nullptr);
	uFnUnRegisterObstacle->FunctionFlags |= 0x400;
	uFnUnRegisterObstacle->iNative = 36605;
};

// Function GearboxFramework.GearboxAIUtility.RegisterObstacle
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35640])
// Parameter Info:
// class AActor*                  Obstacle                       (CPF_Parm)

void UGearboxAIUtility::RegisterObstacle(class AActor* Obstacle)
{
	static UFunction* uFnRegisterObstacle = nullptr;

	if (!uFnRegisterObstacle)
	{
		uFnRegisterObstacle = UFunction::FindFunction("Function GearboxFramework.GearboxAIUtility.RegisterObstacle");
	}

	UGearboxAIUtility_execRegisterObstacle_Params RegisterObstacle_Params;
	memset(&RegisterObstacle_Params, 0, sizeof(RegisterObstacle_Params));
	memcpy_s(&RegisterObstacle_Params.Obstacle, sizeof(RegisterObstacle_Params.Obstacle), &Obstacle, sizeof(Obstacle));

	uFnRegisterObstacle->iNative = 0;
	uFnRegisterObstacle->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRegisterObstacle, &RegisterObstacle_Params, nullptr);
	uFnRegisterObstacle->FunctionFlags |= 0x400;
	uFnRegisterObstacle->iNative = 35640;
};

// Function GearboxFramework.GearboxAnimNodeAimOffset.GetPivotPoint
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34177])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FVector                 PivotPoint                     (CPF_Parm | CPF_OutParm)

bool UGearboxAnimNodeAimOffset::GetPivotPoint(struct FVector& PivotPoint)
{
	static UFunction* uFnGetPivotPoint = nullptr;

	if (!uFnGetPivotPoint)
	{
		uFnGetPivotPoint = UFunction::FindFunction("Function GearboxFramework.GearboxAnimNodeAimOffset.GetPivotPoint");
	}

	UGearboxAnimNodeAimOffset_execGetPivotPoint_Params GetPivotPoint_Params;
	memset(&GetPivotPoint_Params, 0, sizeof(GetPivotPoint_Params));
	memcpy_s(&GetPivotPoint_Params.PivotPoint, sizeof(GetPivotPoint_Params.PivotPoint), &PivotPoint, sizeof(PivotPoint));

	uFnGetPivotPoint->iNative = 0;
	uFnGetPivotPoint->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetPivotPoint, &GetPivotPoint_Params, nullptr);
	uFnGetPivotPoint->FunctionFlags |= 0x400;
	uFnGetPivotPoint->iNative = 34177;

	memcpy_s(&PivotPoint, sizeof(PivotPoint), &GetPivotPoint_Params.PivotPoint, sizeof(GetPivotPoint_Params.PivotPoint));

	return GetPivotPoint_Params.ReturnValue;
};

// Function GearboxFramework.GearboxAnimNodeAimOffset.CalcAim
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32644])
// Parameter Info:
// struct FVector2D               ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FVector2D UGearboxAnimNodeAimOffset::CalcAim()
{
	static UFunction* uFnCalcAim = nullptr;

	if (!uFnCalcAim)
	{
		uFnCalcAim = UFunction::FindFunction("Function GearboxFramework.GearboxAnimNodeAimOffset.CalcAim");
	}

	UGearboxAnimNodeAimOffset_execCalcAim_Params CalcAim_Params;
	memset(&CalcAim_Params, 0, sizeof(CalcAim_Params));

	uFnCalcAim->iNative = 0;
	uFnCalcAim->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCalcAim, &CalcAim_Params, nullptr);
	uFnCalcAim->FunctionFlags |= 0x400;
	uFnCalcAim->iNative = 32644;

	return CalcAim_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.Direction
// [0x0002A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_AllFlags) (iNative[16130])
// Parameter Info:
// struct FVector                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FVector&          A                              (CPF_Parm)
// const struct FVector&          B                              (CPF_Parm)

struct FVector UGearboxBehaviorFunctionLibrary::Direction(const struct FVector& A, const struct FVector& B)
{
	static UFunction* uFnDirection = nullptr;

	if (!uFnDirection)
	{
		uFnDirection = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.Direction");
	}

	UGearboxBehaviorFunctionLibrary_execDirection_Params Direction_Params;
	memset(&Direction_Params, 0, sizeof(Direction_Params));
	memcpy_s(&Direction_Params.A, sizeof(Direction_Params.A), &A, sizeof(A));
	memcpy_s(&Direction_Params.B, sizeof(Direction_Params.B), &B, sizeof(B));

	uFnDirection->iNative = 0;
	uFnDirection->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnDirection, &Direction_Params, nullptr);
	uFnDirection->FunctionFlags |= 0x400;
	uFnDirection->iNative = 16130;

	return Direction_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.WorldToLocalVector
// [0x0002A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_AllFlags) (iNative[36755])
// Parameter Info:
// struct FVector                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FVector&          WorldDir                       (CPF_Parm)
// const struct FVector&          Forward                        (CPF_Parm)

struct FVector UGearboxBehaviorFunctionLibrary::WorldToLocalVector(const struct FVector& WorldDir, const struct FVector& Forward)
{
	static UFunction* uFnWorldToLocalVector = nullptr;

	if (!uFnWorldToLocalVector)
	{
		uFnWorldToLocalVector = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.WorldToLocalVector");
	}

	UGearboxBehaviorFunctionLibrary_execWorldToLocalVector_Params WorldToLocalVector_Params;
	memset(&WorldToLocalVector_Params, 0, sizeof(WorldToLocalVector_Params));
	memcpy_s(&WorldToLocalVector_Params.WorldDir, sizeof(WorldToLocalVector_Params.WorldDir), &WorldDir, sizeof(WorldDir));
	memcpy_s(&WorldToLocalVector_Params.Forward, sizeof(WorldToLocalVector_Params.Forward), &Forward, sizeof(Forward));

	uFnWorldToLocalVector->iNative = 0;
	uFnWorldToLocalVector->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnWorldToLocalVector, &WorldToLocalVector_Params, nullptr);
	uFnWorldToLocalVector->FunctionFlags |= 0x400;
	uFnWorldToLocalVector->iNative = 36755;

	return WorldToLocalVector_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.ObjectListElement
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35236])
// Parameter Info:
// class UObject*                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        Index                          (CPF_Parm)
// class TArray<class UObject*>   List                           (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class UObject* UGearboxBehaviorFunctionLibrary::ObjectListElement(int32_t Index, class TArray<class UObject*>& List)
{
	static UFunction* uFnObjectListElement = nullptr;

	if (!uFnObjectListElement)
	{
		uFnObjectListElement = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.ObjectListElement");
	}

	UGearboxBehaviorFunctionLibrary_execObjectListElement_Params ObjectListElement_Params;
	memset(&ObjectListElement_Params, 0, sizeof(ObjectListElement_Params));
	memcpy_s(&ObjectListElement_Params.Index, sizeof(ObjectListElement_Params.Index), &Index, sizeof(Index));
	memcpy_s(&ObjectListElement_Params.List, sizeof(ObjectListElement_Params.List), &List, sizeof(List));

	uFnObjectListElement->iNative = 0;
	uFnObjectListElement->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnObjectListElement, &ObjectListElement_Params, nullptr);
	uFnObjectListElement->FunctionFlags |= 0x400;
	uFnObjectListElement->iNative = 35236;

	memcpy_s(&List, sizeof(List), &ObjectListElement_Params.List, sizeof(ObjectListElement_Params.List));

	return ObjectListElement_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.GetScale3D
// [0x0002A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_AllFlags) (iNative[34199])
// Parameter Info:
// struct FVector                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 A                              (CPF_Parm)

struct FVector UGearboxBehaviorFunctionLibrary::GetScale3D(class UObject* A)
{
	static UFunction* uFnGetScale3D = nullptr;

	if (!uFnGetScale3D)
	{
		uFnGetScale3D = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.GetScale3D");
	}

	UGearboxBehaviorFunctionLibrary_execGetScale3D_Params GetScale3D_Params;
	memset(&GetScale3D_Params, 0, sizeof(GetScale3D_Params));
	memcpy_s(&GetScale3D_Params.A, sizeof(GetScale3D_Params.A), &A, sizeof(A));

	uFnGetScale3D->iNative = 0;
	uFnGetScale3D->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnGetScale3D, &GetScale3D_Params, nullptr);
	uFnGetScale3D->FunctionFlags |= 0x400;
	uFnGetScale3D->iNative = 34199;

	return GetScale3D_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.GetScale
// [0x0002A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_AllFlags) (iNative[34198])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 A                              (CPF_Parm)

float UGearboxBehaviorFunctionLibrary::GetScale(class UObject* A)
{
	static UFunction* uFnGetScale = nullptr;

	if (!uFnGetScale)
	{
		uFnGetScale = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.GetScale");
	}

	UGearboxBehaviorFunctionLibrary_execGetScale_Params GetScale_Params;
	memset(&GetScale_Params, 0, sizeof(GetScale_Params));
	memcpy_s(&GetScale_Params.A, sizeof(GetScale_Params.A), &A, sizeof(A));

	uFnGetScale->iNative = 0;
	uFnGetScale->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnGetScale, &GetScale_Params, nullptr);
	uFnGetScale->FunctionFlags |= 0x400;
	uFnGetScale->iNative = 34198;

	return GetScale_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.SortDistance
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[36052])
// Parameter Info:
// class TArray<class UObject*>   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// const struct FVector&          Location                       (CPF_Parm)
// class TArray<class UObject*>   A                              (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class TArray<class UObject*> UGearboxBehaviorFunctionLibrary::SortDistance(const struct FVector& Location, class TArray<class UObject*>& A)
{
	static UFunction* uFnSortDistance = nullptr;

	if (!uFnSortDistance)
	{
		uFnSortDistance = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.SortDistance");
	}

	UGearboxBehaviorFunctionLibrary_execSortDistance_Params SortDistance_Params;
	memset(&SortDistance_Params, 0, sizeof(SortDistance_Params));
	memcpy_s(&SortDistance_Params.Location, sizeof(SortDistance_Params.Location), &Location, sizeof(Location));
	memcpy_s(&SortDistance_Params.A, sizeof(SortDistance_Params.A), &A, sizeof(A));

	uFnSortDistance->iNative = 0;
	uFnSortDistance->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnSortDistance, &SortDistance_Params, nullptr);
	uFnSortDistance->FunctionFlags |= 0x400;
	uFnSortDistance->iNative = 36052;

	memcpy_s(&A, sizeof(A), &SortDistance_Params.A, sizeof(SortDistance_Params.A));

	return SortDistance_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.Nearest
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35076])
// Parameter Info:
// class UObject*                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FVector&          Location                       (CPF_Parm)
// class TArray<class UObject*>   A                              (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class UObject* UGearboxBehaviorFunctionLibrary::Nearest(const struct FVector& Location, class TArray<class UObject*>& A)
{
	static UFunction* uFnNearest = nullptr;

	if (!uFnNearest)
	{
		uFnNearest = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.Nearest");
	}

	UGearboxBehaviorFunctionLibrary_execNearest_Params Nearest_Params;
	memset(&Nearest_Params, 0, sizeof(Nearest_Params));
	memcpy_s(&Nearest_Params.Location, sizeof(Nearest_Params.Location), &Location, sizeof(Location));
	memcpy_s(&Nearest_Params.A, sizeof(Nearest_Params.A), &A, sizeof(A));

	uFnNearest->iNative = 0;
	uFnNearest->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnNearest, &Nearest_Params, nullptr);
	uFnNearest->FunctionFlags |= 0x400;
	uFnNearest->iNative = 35076;

	memcpy_s(&A, sizeof(A), &Nearest_Params.A, sizeof(Nearest_Params.A));

	return Nearest_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.Farthest
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[33798])
// Parameter Info:
// class UObject*                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FVector&          Location                       (CPF_Parm)
// class TArray<class UObject*>   A                              (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class UObject* UGearboxBehaviorFunctionLibrary::Farthest(const struct FVector& Location, class TArray<class UObject*>& A)
{
	static UFunction* uFnFarthest = nullptr;

	if (!uFnFarthest)
	{
		uFnFarthest = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.Farthest");
	}

	UGearboxBehaviorFunctionLibrary_execFarthest_Params Farthest_Params;
	memset(&Farthest_Params, 0, sizeof(Farthest_Params));
	memcpy_s(&Farthest_Params.Location, sizeof(Farthest_Params.Location), &Location, sizeof(Location));
	memcpy_s(&Farthest_Params.A, sizeof(Farthest_Params.A), &A, sizeof(A));

	uFnFarthest->iNative = 0;
	uFnFarthest->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnFarthest, &Farthest_Params, nullptr);
	uFnFarthest->FunctionFlags |= 0x400;
	uFnFarthest->iNative = 33798;

	memcpy_s(&A, sizeof(A), &Farthest_Params.A, sizeof(Farthest_Params.A));

	return Farthest_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.NearFilter
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35080])
// Parameter Info:
// class TArray<class UObject*>   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// const struct FVector&          Location                       (CPF_Parm)
// float                          Distance                       (CPF_Parm)
// class TArray<class UObject*>   A                              (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class TArray<class UObject*> UGearboxBehaviorFunctionLibrary::NearFilter(const struct FVector& Location, float Distance, class TArray<class UObject*>& A)
{
	static UFunction* uFnNearFilter = nullptr;

	if (!uFnNearFilter)
	{
		uFnNearFilter = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.NearFilter");
	}

	UGearboxBehaviorFunctionLibrary_execNearFilter_Params NearFilter_Params;
	memset(&NearFilter_Params, 0, sizeof(NearFilter_Params));
	memcpy_s(&NearFilter_Params.Location, sizeof(NearFilter_Params.Location), &Location, sizeof(Location));
	memcpy_s(&NearFilter_Params.Distance, sizeof(NearFilter_Params.Distance), &Distance, sizeof(Distance));
	memcpy_s(&NearFilter_Params.A, sizeof(NearFilter_Params.A), &A, sizeof(A));

	uFnNearFilter->iNative = 0;
	uFnNearFilter->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnNearFilter, &NearFilter_Params, nullptr);
	uFnNearFilter->FunctionFlags |= 0x400;
	uFnNearFilter->iNative = 35080;

	memcpy_s(&A, sizeof(A), &NearFilter_Params.A, sizeof(NearFilter_Params.A));

	return NearFilter_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.FarFilter
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[33797])
// Parameter Info:
// class TArray<class UObject*>   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// const struct FVector&          Location                       (CPF_Parm)
// float                          Distance                       (CPF_Parm)
// class TArray<class UObject*>   A                              (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class TArray<class UObject*> UGearboxBehaviorFunctionLibrary::FarFilter(const struct FVector& Location, float Distance, class TArray<class UObject*>& A)
{
	static UFunction* uFnFarFilter = nullptr;

	if (!uFnFarFilter)
	{
		uFnFarFilter = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.FarFilter");
	}

	UGearboxBehaviorFunctionLibrary_execFarFilter_Params FarFilter_Params;
	memset(&FarFilter_Params, 0, sizeof(FarFilter_Params));
	memcpy_s(&FarFilter_Params.Location, sizeof(FarFilter_Params.Location), &Location, sizeof(Location));
	memcpy_s(&FarFilter_Params.Distance, sizeof(FarFilter_Params.Distance), &Distance, sizeof(Distance));
	memcpy_s(&FarFilter_Params.A, sizeof(FarFilter_Params.A), &A, sizeof(A));

	uFnFarFilter->iNative = 0;
	uFnFarFilter->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnFarFilter, &FarFilter_Params, nullptr);
	uFnFarFilter->FunctionFlags |= 0x400;
	uFnFarFilter->iNative = 33797;

	memcpy_s(&A, sizeof(A), &FarFilter_Params.A, sizeof(FarFilter_Params.A));

	return FarFilter_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.AllegianceFilter
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[17202])
// Parameter Info:
// class TArray<class UObject*>   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class UObject*                 AllegianceInfo                 (CPF_Parm)
// class TArray<class UObject*>   A                              (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class TArray<class UObject*> UGearboxBehaviorFunctionLibrary::AllegianceFilter(class UObject* AllegianceInfo, class TArray<class UObject*>& A)
{
	static UFunction* uFnAllegianceFilter = nullptr;

	if (!uFnAllegianceFilter)
	{
		uFnAllegianceFilter = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.AllegianceFilter");
	}

	UGearboxBehaviorFunctionLibrary_execAllegianceFilter_Params AllegianceFilter_Params;
	memset(&AllegianceFilter_Params, 0, sizeof(AllegianceFilter_Params));
	memcpy_s(&AllegianceFilter_Params.AllegianceInfo, sizeof(AllegianceFilter_Params.AllegianceInfo), &AllegianceInfo, sizeof(AllegianceInfo));
	memcpy_s(&AllegianceFilter_Params.A, sizeof(AllegianceFilter_Params.A), &A, sizeof(A));

	uFnAllegianceFilter->iNative = 0;
	uFnAllegianceFilter->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnAllegianceFilter, &AllegianceFilter_Params, nullptr);
	uFnAllegianceFilter->FunctionFlags |= 0x400;
	uFnAllegianceFilter->iNative = 17202;

	memcpy_s(&A, sizeof(A), &AllegianceFilter_Params.A, sizeof(AllegianceFilter_Params.A));

	return AllegianceFilter_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.DamageableFilter
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[32990])
// Parameter Info:
// class TArray<class UObject*>   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class TArray<class UObject*>   A                              (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class TArray<class UObject*> UGearboxBehaviorFunctionLibrary::DamageableFilter(class TArray<class UObject*>& A)
{
	static UFunction* uFnDamageableFilter = nullptr;

	if (!uFnDamageableFilter)
	{
		uFnDamageableFilter = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.DamageableFilter");
	}

	UGearboxBehaviorFunctionLibrary_execDamageableFilter_Params DamageableFilter_Params;
	memset(&DamageableFilter_Params, 0, sizeof(DamageableFilter_Params));
	memcpy_s(&DamageableFilter_Params.A, sizeof(DamageableFilter_Params.A), &A, sizeof(A));

	uFnDamageableFilter->iNative = 0;
	uFnDamageableFilter->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnDamageableFilter, &DamageableFilter_Params, nullptr);
	uFnDamageableFilter->FunctionFlags |= 0x400;
	uFnDamageableFilter->iNative = 32990;

	memcpy_s(&A, sizeof(A), &DamageableFilter_Params.A, sizeof(DamageableFilter_Params.A));

	return DamageableFilter_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.FriendlyFilter
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[33920])
// Parameter Info:
// class TArray<class UObject*>   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class UObject*                 AllegianceInfo                 (CPF_Parm)
// class TArray<class UObject*>   A                              (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class TArray<class UObject*> UGearboxBehaviorFunctionLibrary::FriendlyFilter(class UObject* AllegianceInfo, class TArray<class UObject*>& A)
{
	static UFunction* uFnFriendlyFilter = nullptr;

	if (!uFnFriendlyFilter)
	{
		uFnFriendlyFilter = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.FriendlyFilter");
	}

	UGearboxBehaviorFunctionLibrary_execFriendlyFilter_Params FriendlyFilter_Params;
	memset(&FriendlyFilter_Params, 0, sizeof(FriendlyFilter_Params));
	memcpy_s(&FriendlyFilter_Params.AllegianceInfo, sizeof(FriendlyFilter_Params.AllegianceInfo), &AllegianceInfo, sizeof(AllegianceInfo));
	memcpy_s(&FriendlyFilter_Params.A, sizeof(FriendlyFilter_Params.A), &A, sizeof(A));

	uFnFriendlyFilter->iNative = 0;
	uFnFriendlyFilter->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnFriendlyFilter, &FriendlyFilter_Params, nullptr);
	uFnFriendlyFilter->FunctionFlags |= 0x400;
	uFnFriendlyFilter->iNative = 33920;

	memcpy_s(&A, sizeof(A), &FriendlyFilter_Params.A, sizeof(FriendlyFilter_Params.A));

	return FriendlyFilter_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.EnemyFilter
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[33571])
// Parameter Info:
// class TArray<class UObject*>   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class UObject*                 AllegianceInfo                 (CPF_Parm)
// class TArray<class UObject*>   A                              (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class TArray<class UObject*> UGearboxBehaviorFunctionLibrary::EnemyFilter(class UObject* AllegianceInfo, class TArray<class UObject*>& A)
{
	static UFunction* uFnEnemyFilter = nullptr;

	if (!uFnEnemyFilter)
	{
		uFnEnemyFilter = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.EnemyFilter");
	}

	UGearboxBehaviorFunctionLibrary_execEnemyFilter_Params EnemyFilter_Params;
	memset(&EnemyFilter_Params, 0, sizeof(EnemyFilter_Params));
	memcpy_s(&EnemyFilter_Params.AllegianceInfo, sizeof(EnemyFilter_Params.AllegianceInfo), &AllegianceInfo, sizeof(AllegianceInfo));
	memcpy_s(&EnemyFilter_Params.A, sizeof(EnemyFilter_Params.A), &A, sizeof(A));

	uFnEnemyFilter->iNative = 0;
	uFnEnemyFilter->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnEnemyFilter, &EnemyFilter_Params, nullptr);
	uFnEnemyFilter->FunctionFlags |= 0x400;
	uFnEnemyFilter->iNative = 33571;

	memcpy_s(&A, sizeof(A), &EnemyFilter_Params.A, sizeof(EnemyFilter_Params.A));

	return EnemyFilter_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.ItemFilter
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34702])
// Parameter Info:
// class TArray<class UObject*>   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class TArray<class UObject*>   A                              (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class TArray<class UObject*> UGearboxBehaviorFunctionLibrary::ItemFilter(class TArray<class UObject*>& A)
{
	static UFunction* uFnItemFilter = nullptr;

	if (!uFnItemFilter)
	{
		uFnItemFilter = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.ItemFilter");
	}

	UGearboxBehaviorFunctionLibrary_execItemFilter_Params ItemFilter_Params;
	memset(&ItemFilter_Params, 0, sizeof(ItemFilter_Params));
	memcpy_s(&ItemFilter_Params.A, sizeof(ItemFilter_Params.A), &A, sizeof(A));

	uFnItemFilter->iNative = 0;
	uFnItemFilter->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnItemFilter, &ItemFilter_Params, nullptr);
	uFnItemFilter->FunctionFlags |= 0x400;
	uFnItemFilter->iNative = 34702;

	memcpy_s(&A, sizeof(A), &ItemFilter_Params.A, sizeof(ItemFilter_Params.A));

	return ItemFilter_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.ProjectileFilter
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35559])
// Parameter Info:
// class TArray<class UObject*>   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class TArray<class UObject*>   A                              (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class TArray<class UObject*> UGearboxBehaviorFunctionLibrary::ProjectileFilter(class TArray<class UObject*>& A)
{
	static UFunction* uFnProjectileFilter = nullptr;

	if (!uFnProjectileFilter)
	{
		uFnProjectileFilter = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.ProjectileFilter");
	}

	UGearboxBehaviorFunctionLibrary_execProjectileFilter_Params ProjectileFilter_Params;
	memset(&ProjectileFilter_Params, 0, sizeof(ProjectileFilter_Params));
	memcpy_s(&ProjectileFilter_Params.A, sizeof(ProjectileFilter_Params.A), &A, sizeof(A));

	uFnProjectileFilter->iNative = 0;
	uFnProjectileFilter->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnProjectileFilter, &ProjectileFilter_Params, nullptr);
	uFnProjectileFilter->FunctionFlags |= 0x400;
	uFnProjectileFilter->iNative = 35559;

	memcpy_s(&A, sizeof(A), &ProjectileFilter_Params.A, sizeof(ProjectileFilter_Params.A));

	return ProjectileFilter_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.PlayerFilter
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35455])
// Parameter Info:
// class TArray<class UObject*>   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class TArray<class UObject*>   A                              (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class TArray<class UObject*> UGearboxBehaviorFunctionLibrary::PlayerFilter(class TArray<class UObject*>& A)
{
	static UFunction* uFnPlayerFilter = nullptr;

	if (!uFnPlayerFilter)
	{
		uFnPlayerFilter = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.PlayerFilter");
	}

	UGearboxBehaviorFunctionLibrary_execPlayerFilter_Params PlayerFilter_Params;
	memset(&PlayerFilter_Params, 0, sizeof(PlayerFilter_Params));
	memcpy_s(&PlayerFilter_Params.A, sizeof(PlayerFilter_Params.A), &A, sizeof(A));

	uFnPlayerFilter->iNative = 0;
	uFnPlayerFilter->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnPlayerFilter, &PlayerFilter_Params, nullptr);
	uFnPlayerFilter->FunctionFlags |= 0x400;
	uFnPlayerFilter->iNative = 35455;

	memcpy_s(&A, sizeof(A), &PlayerFilter_Params.A, sizeof(PlayerFilter_Params.A));

	return PlayerFilter_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.IsPlayer
// [0x0002A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_AllFlags) (iNative[34679])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 A                              (CPF_Parm)

bool UGearboxBehaviorFunctionLibrary::IsPlayer(class UObject* A)
{
	static UFunction* uFnIsPlayer = nullptr;

	if (!uFnIsPlayer)
	{
		uFnIsPlayer = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.IsPlayer");
	}

	UGearboxBehaviorFunctionLibrary_execIsPlayer_Params IsPlayer_Params;
	memset(&IsPlayer_Params, 0, sizeof(IsPlayer_Params));
	memcpy_s(&IsPlayer_Params.A, sizeof(IsPlayer_Params.A), &A, sizeof(A));

	uFnIsPlayer->iNative = 0;
	uFnIsPlayer->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnIsPlayer, &IsPlayer_Params, nullptr);
	uFnIsPlayer->FunctionFlags |= 0x400;
	uFnIsPlayer->iNative = 34679;

	return IsPlayer_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.AllDiff_Vect
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[31840])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class TArray<struct FVector>   A                              (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UGearboxBehaviorFunctionLibrary::AllDiff_Vect(class TArray<struct FVector>& A)
{
	static UFunction* uFnAllDiff_Vect = nullptr;

	if (!uFnAllDiff_Vect)
	{
		uFnAllDiff_Vect = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.AllDiff_Vect");
	}

	UGearboxBehaviorFunctionLibrary_execAllDiff_Vect_Params AllDiff_Vect_Params;
	memset(&AllDiff_Vect_Params, 0, sizeof(AllDiff_Vect_Params));
	memcpy_s(&AllDiff_Vect_Params.A, sizeof(AllDiff_Vect_Params.A), &A, sizeof(A));

	uFnAllDiff_Vect->iNative = 0;
	uFnAllDiff_Vect->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnAllDiff_Vect, &AllDiff_Vect_Params, nullptr);
	uFnAllDiff_Vect->FunctionFlags |= 0x400;
	uFnAllDiff_Vect->iNative = 31840;

	memcpy_s(&A, sizeof(A), &AllDiff_Vect_Params.A, sizeof(AllDiff_Vect_Params.A));

	return AllDiff_Vect_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.AllSame_Vect
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[31856])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class TArray<struct FVector>   A                              (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UGearboxBehaviorFunctionLibrary::AllSame_Vect(class TArray<struct FVector>& A)
{
	static UFunction* uFnAllSame_Vect = nullptr;

	if (!uFnAllSame_Vect)
	{
		uFnAllSame_Vect = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.AllSame_Vect");
	}

	UGearboxBehaviorFunctionLibrary_execAllSame_Vect_Params AllSame_Vect_Params;
	memset(&AllSame_Vect_Params, 0, sizeof(AllSame_Vect_Params));
	memcpy_s(&AllSame_Vect_Params.A, sizeof(AllSame_Vect_Params.A), &A, sizeof(A));

	uFnAllSame_Vect->iNative = 0;
	uFnAllSame_Vect->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnAllSame_Vect, &AllSame_Vect_Params, nullptr);
	uFnAllSame_Vect->FunctionFlags |= 0x400;
	uFnAllSame_Vect->iNative = 31856;

	memcpy_s(&A, sizeof(A), &AllSame_Vect_Params.A, sizeof(AllSame_Vect_Params.A));

	return AllSame_Vect_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.AllDiff_Float
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[31837])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class TArray<float>            A                              (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UGearboxBehaviorFunctionLibrary::AllDiff_Float(class TArray<float>& A)
{
	static UFunction* uFnAllDiff_Float = nullptr;

	if (!uFnAllDiff_Float)
	{
		uFnAllDiff_Float = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.AllDiff_Float");
	}

	UGearboxBehaviorFunctionLibrary_execAllDiff_Float_Params AllDiff_Float_Params;
	memset(&AllDiff_Float_Params, 0, sizeof(AllDiff_Float_Params));
	memcpy_s(&AllDiff_Float_Params.A, sizeof(AllDiff_Float_Params.A), &A, sizeof(A));

	uFnAllDiff_Float->iNative = 0;
	uFnAllDiff_Float->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnAllDiff_Float, &AllDiff_Float_Params, nullptr);
	uFnAllDiff_Float->FunctionFlags |= 0x400;
	uFnAllDiff_Float->iNative = 31837;

	memcpy_s(&A, sizeof(A), &AllDiff_Float_Params.A, sizeof(AllDiff_Float_Params.A));

	return AllDiff_Float_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.AllSame_Float
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[31853])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class TArray<float>            A                              (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UGearboxBehaviorFunctionLibrary::AllSame_Float(class TArray<float>& A)
{
	static UFunction* uFnAllSame_Float = nullptr;

	if (!uFnAllSame_Float)
	{
		uFnAllSame_Float = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.AllSame_Float");
	}

	UGearboxBehaviorFunctionLibrary_execAllSame_Float_Params AllSame_Float_Params;
	memset(&AllSame_Float_Params, 0, sizeof(AllSame_Float_Params));
	memcpy_s(&AllSame_Float_Params.A, sizeof(AllSame_Float_Params.A), &A, sizeof(A));

	uFnAllSame_Float->iNative = 0;
	uFnAllSame_Float->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnAllSame_Float, &AllSame_Float_Params, nullptr);
	uFnAllSame_Float->FunctionFlags |= 0x400;
	uFnAllSame_Float->iNative = 31853;

	memcpy_s(&A, sizeof(A), &AllSame_Float_Params.A, sizeof(AllSame_Float_Params.A));

	return AllSame_Float_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.AllDiff_Int
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[31838])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class TArray<int32_t>          A                              (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UGearboxBehaviorFunctionLibrary::AllDiff_Int(class TArray<int32_t>& A)
{
	static UFunction* uFnAllDiff_Int = nullptr;

	if (!uFnAllDiff_Int)
	{
		uFnAllDiff_Int = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.AllDiff_Int");
	}

	UGearboxBehaviorFunctionLibrary_execAllDiff_Int_Params AllDiff_Int_Params;
	memset(&AllDiff_Int_Params, 0, sizeof(AllDiff_Int_Params));
	memcpy_s(&AllDiff_Int_Params.A, sizeof(AllDiff_Int_Params.A), &A, sizeof(A));

	uFnAllDiff_Int->iNative = 0;
	uFnAllDiff_Int->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnAllDiff_Int, &AllDiff_Int_Params, nullptr);
	uFnAllDiff_Int->FunctionFlags |= 0x400;
	uFnAllDiff_Int->iNative = 31838;

	memcpy_s(&A, sizeof(A), &AllDiff_Int_Params.A, sizeof(AllDiff_Int_Params.A));

	return AllDiff_Int_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.AllSame_Int
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[31854])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class TArray<int32_t>          A                              (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UGearboxBehaviorFunctionLibrary::AllSame_Int(class TArray<int32_t>& A)
{
	static UFunction* uFnAllSame_Int = nullptr;

	if (!uFnAllSame_Int)
	{
		uFnAllSame_Int = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.AllSame_Int");
	}

	UGearboxBehaviorFunctionLibrary_execAllSame_Int_Params AllSame_Int_Params;
	memset(&AllSame_Int_Params, 0, sizeof(AllSame_Int_Params));
	memcpy_s(&AllSame_Int_Params.A, sizeof(AllSame_Int_Params.A), &A, sizeof(A));

	uFnAllSame_Int->iNative = 0;
	uFnAllSame_Int->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnAllSame_Int, &AllSame_Int_Params, nullptr);
	uFnAllSame_Int->FunctionFlags |= 0x400;
	uFnAllSame_Int->iNative = 31854;

	memcpy_s(&A, sizeof(A), &AllSame_Int_Params.A, sizeof(AllSame_Int_Params.A));

	return AllSame_Int_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.AllDiff_Object
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[31839])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class TArray<class UObject*>   A                              (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UGearboxBehaviorFunctionLibrary::AllDiff_Object(class TArray<class UObject*>& A)
{
	static UFunction* uFnAllDiff_Object = nullptr;

	if (!uFnAllDiff_Object)
	{
		uFnAllDiff_Object = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.AllDiff_Object");
	}

	UGearboxBehaviorFunctionLibrary_execAllDiff_Object_Params AllDiff_Object_Params;
	memset(&AllDiff_Object_Params, 0, sizeof(AllDiff_Object_Params));
	memcpy_s(&AllDiff_Object_Params.A, sizeof(AllDiff_Object_Params.A), &A, sizeof(A));

	uFnAllDiff_Object->iNative = 0;
	uFnAllDiff_Object->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnAllDiff_Object, &AllDiff_Object_Params, nullptr);
	uFnAllDiff_Object->FunctionFlags |= 0x400;
	uFnAllDiff_Object->iNative = 31839;

	memcpy_s(&A, sizeof(A), &AllDiff_Object_Params.A, sizeof(AllDiff_Object_Params.A));

	return AllDiff_Object_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.AllSame_Object
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[31855])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class TArray<class UObject*>   A                              (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UGearboxBehaviorFunctionLibrary::AllSame_Object(class TArray<class UObject*>& A)
{
	static UFunction* uFnAllSame_Object = nullptr;

	if (!uFnAllSame_Object)
	{
		uFnAllSame_Object = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.AllSame_Object");
	}

	UGearboxBehaviorFunctionLibrary_execAllSame_Object_Params AllSame_Object_Params;
	memset(&AllSame_Object_Params, 0, sizeof(AllSame_Object_Params));
	memcpy_s(&AllSame_Object_Params.A, sizeof(AllSame_Object_Params.A), &A, sizeof(A));

	uFnAllSame_Object->iNative = 0;
	uFnAllSame_Object->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnAllSame_Object, &AllSame_Object_Params, nullptr);
	uFnAllSame_Object->FunctionFlags |= 0x400;
	uFnAllSame_Object->iNative = 31855;

	memcpy_s(&A, sizeof(A), &AllSame_Object_Params.A, sizeof(AllSame_Object_Params.A));

	return AllSame_Object_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.AllDiff_Bool
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[31836])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class TArray<bool>             A                              (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UGearboxBehaviorFunctionLibrary::AllDiff_Bool(class TArray<bool>& A)
{
	static UFunction* uFnAllDiff_Bool = nullptr;

	if (!uFnAllDiff_Bool)
	{
		uFnAllDiff_Bool = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.AllDiff_Bool");
	}

	UGearboxBehaviorFunctionLibrary_execAllDiff_Bool_Params AllDiff_Bool_Params;
	memset(&AllDiff_Bool_Params, 0, sizeof(AllDiff_Bool_Params));
	memcpy_s(&AllDiff_Bool_Params.A, sizeof(AllDiff_Bool_Params.A), &A, sizeof(A));

	uFnAllDiff_Bool->iNative = 0;
	uFnAllDiff_Bool->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnAllDiff_Bool, &AllDiff_Bool_Params, nullptr);
	uFnAllDiff_Bool->FunctionFlags |= 0x400;
	uFnAllDiff_Bool->iNative = 31836;

	memcpy_s(&A, sizeof(A), &AllDiff_Bool_Params.A, sizeof(AllDiff_Bool_Params.A));

	return AllDiff_Bool_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.AllSame_Bool
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[31852])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class TArray<bool>             A                              (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UGearboxBehaviorFunctionLibrary::AllSame_Bool(class TArray<bool>& A)
{
	static UFunction* uFnAllSame_Bool = nullptr;

	if (!uFnAllSame_Bool)
	{
		uFnAllSame_Bool = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.AllSame_Bool");
	}

	UGearboxBehaviorFunctionLibrary_execAllSame_Bool_Params AllSame_Bool_Params;
	memset(&AllSame_Bool_Params, 0, sizeof(AllSame_Bool_Params));
	memcpy_s(&AllSame_Bool_Params.A, sizeof(AllSame_Bool_Params.A), &A, sizeof(A));

	uFnAllSame_Bool->iNative = 0;
	uFnAllSame_Bool->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnAllSame_Bool, &AllSame_Bool_Params, nullptr);
	uFnAllSame_Bool->FunctionFlags |= 0x400;
	uFnAllSame_Bool->iNative = 31852;

	memcpy_s(&A, sizeof(A), &AllSame_Bool_Params.A, sizeof(AllSame_Bool_Params.A));

	return AllSame_Bool_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.AnyFalse
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[31887])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class TArray<bool>             A                              (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UGearboxBehaviorFunctionLibrary::AnyFalse(class TArray<bool>& A)
{
	static UFunction* uFnAnyFalse = nullptr;

	if (!uFnAnyFalse)
	{
		uFnAnyFalse = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.AnyFalse");
	}

	UGearboxBehaviorFunctionLibrary_execAnyFalse_Params AnyFalse_Params;
	memset(&AnyFalse_Params, 0, sizeof(AnyFalse_Params));
	memcpy_s(&AnyFalse_Params.A, sizeof(AnyFalse_Params.A), &A, sizeof(A));

	uFnAnyFalse->iNative = 0;
	uFnAnyFalse->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnAnyFalse, &AnyFalse_Params, nullptr);
	uFnAnyFalse->FunctionFlags |= 0x400;
	uFnAnyFalse->iNative = 31887;

	memcpy_s(&A, sizeof(A), &AnyFalse_Params.A, sizeof(AnyFalse_Params.A));

	return AnyFalse_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.AnyTrue
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[31888])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class TArray<bool>             A                              (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UGearboxBehaviorFunctionLibrary::AnyTrue(class TArray<bool>& A)
{
	static UFunction* uFnAnyTrue = nullptr;

	if (!uFnAnyTrue)
	{
		uFnAnyTrue = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.AnyTrue");
	}

	UGearboxBehaviorFunctionLibrary_execAnyTrue_Params AnyTrue_Params;
	memset(&AnyTrue_Params, 0, sizeof(AnyTrue_Params));
	memcpy_s(&AnyTrue_Params.A, sizeof(AnyTrue_Params.A), &A, sizeof(A));

	uFnAnyTrue->iNative = 0;
	uFnAnyTrue->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnAnyTrue, &AnyTrue_Params, nullptr);
	uFnAnyTrue->FunctionFlags |= 0x400;
	uFnAnyTrue->iNative = 31888;

	memcpy_s(&A, sizeof(A), &AnyTrue_Params.A, sizeof(AnyTrue_Params.A));

	return AnyTrue_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.AllFalse
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[31845])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class TArray<bool>             A                              (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UGearboxBehaviorFunctionLibrary::AllFalse(class TArray<bool>& A)
{
	static UFunction* uFnAllFalse = nullptr;

	if (!uFnAllFalse)
	{
		uFnAllFalse = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.AllFalse");
	}

	UGearboxBehaviorFunctionLibrary_execAllFalse_Params AllFalse_Params;
	memset(&AllFalse_Params, 0, sizeof(AllFalse_Params));
	memcpy_s(&AllFalse_Params.A, sizeof(AllFalse_Params.A), &A, sizeof(A));

	uFnAllFalse->iNative = 0;
	uFnAllFalse->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnAllFalse, &AllFalse_Params, nullptr);
	uFnAllFalse->FunctionFlags |= 0x400;
	uFnAllFalse->iNative = 31845;

	memcpy_s(&A, sizeof(A), &AllFalse_Params.A, sizeof(AllFalse_Params.A));

	return AllFalse_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.AllTrue
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[31859])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class TArray<bool>             A                              (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UGearboxBehaviorFunctionLibrary::AllTrue(class TArray<bool>& A)
{
	static UFunction* uFnAllTrue = nullptr;

	if (!uFnAllTrue)
	{
		uFnAllTrue = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.AllTrue");
	}

	UGearboxBehaviorFunctionLibrary_execAllTrue_Params AllTrue_Params;
	memset(&AllTrue_Params, 0, sizeof(AllTrue_Params));
	memcpy_s(&AllTrue_Params.A, sizeof(AllTrue_Params.A), &A, sizeof(A));

	uFnAllTrue->iNative = 0;
	uFnAllTrue->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnAllTrue, &AllTrue_Params, nullptr);
	uFnAllTrue->FunctionFlags |= 0x400;
	uFnAllTrue->iNative = 31859;

	memcpy_s(&A, sizeof(A), &AllTrue_Params.A, sizeof(AllTrue_Params.A));

	return AllTrue_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.BoolToIntGBX
// [0x0002A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_AllFlags) (iNative[32366])
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// bool                           A                              (CPF_Parm)

int32_t UGearboxBehaviorFunctionLibrary::BoolToIntGBX(bool A)
{
	static UFunction* uFnBoolToIntGBX = nullptr;

	if (!uFnBoolToIntGBX)
	{
		uFnBoolToIntGBX = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.BoolToIntGBX");
	}

	UGearboxBehaviorFunctionLibrary_execBoolToIntGBX_Params BoolToIntGBX_Params;
	memset(&BoolToIntGBX_Params, 0, sizeof(BoolToIntGBX_Params));
	BoolToIntGBX_Params.A = A;

	uFnBoolToIntGBX->iNative = 0;
	uFnBoolToIntGBX->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnBoolToIntGBX, &BoolToIntGBX_Params, nullptr);
	uFnBoolToIntGBX->FunctionFlags |= 0x400;
	uFnBoolToIntGBX->iNative = 32366;

	return BoolToIntGBX_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.IntToFloatGBX
// [0x0002A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_AllFlags) (iNative[34632])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        A                              (CPF_Parm)

float UGearboxBehaviorFunctionLibrary::IntToFloatGBX(int32_t A)
{
	static UFunction* uFnIntToFloatGBX = nullptr;

	if (!uFnIntToFloatGBX)
	{
		uFnIntToFloatGBX = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.IntToFloatGBX");
	}

	UGearboxBehaviorFunctionLibrary_execIntToFloatGBX_Params IntToFloatGBX_Params;
	memset(&IntToFloatGBX_Params, 0, sizeof(IntToFloatGBX_Params));
	memcpy_s(&IntToFloatGBX_Params.A, sizeof(IntToFloatGBX_Params.A), &A, sizeof(A));

	uFnIntToFloatGBX->iNative = 0;
	uFnIntToFloatGBX->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnIntToFloatGBX, &IntToFloatGBX_Params, nullptr);
	uFnIntToFloatGBX->FunctionFlags |= 0x400;
	uFnIntToFloatGBX->iNative = 34632;

	return IntToFloatGBX_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.BoolToFloatGBX
// [0x0002A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_AllFlags) (iNative[32365])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// bool                           A                              (CPF_Parm)

float UGearboxBehaviorFunctionLibrary::BoolToFloatGBX(bool A)
{
	static UFunction* uFnBoolToFloatGBX = nullptr;

	if (!uFnBoolToFloatGBX)
	{
		uFnBoolToFloatGBX = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.BoolToFloatGBX");
	}

	UGearboxBehaviorFunctionLibrary_execBoolToFloatGBX_Params BoolToFloatGBX_Params;
	memset(&BoolToFloatGBX_Params, 0, sizeof(BoolToFloatGBX_Params));
	BoolToFloatGBX_Params.A = A;

	uFnBoolToFloatGBX->iNative = 0;
	uFnBoolToFloatGBX->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnBoolToFloatGBX, &BoolToFloatGBX_Params, nullptr);
	uFnBoolToFloatGBX->FunctionFlags |= 0x400;
	uFnBoolToFloatGBX->iNative = 32365;

	return BoolToFloatGBX_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.ProductVector
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35558])
// Parameter Info:
// struct FVector                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class TArray<struct FVector>   A                              (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

struct FVector UGearboxBehaviorFunctionLibrary::ProductVector(class TArray<struct FVector>& A)
{
	static UFunction* uFnProductVector = nullptr;

	if (!uFnProductVector)
	{
		uFnProductVector = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.ProductVector");
	}

	UGearboxBehaviorFunctionLibrary_execProductVector_Params ProductVector_Params;
	memset(&ProductVector_Params, 0, sizeof(ProductVector_Params));
	memcpy_s(&ProductVector_Params.A, sizeof(ProductVector_Params.A), &A, sizeof(A));

	uFnProductVector->iNative = 0;
	uFnProductVector->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnProductVector, &ProductVector_Params, nullptr);
	uFnProductVector->FunctionFlags |= 0x400;
	uFnProductVector->iNative = 35558;

	memcpy_s(&A, sizeof(A), &ProductVector_Params.A, sizeof(ProductVector_Params.A));

	return ProductVector_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.ProductInt
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35557])
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class TArray<int32_t>          A                              (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

int32_t UGearboxBehaviorFunctionLibrary::ProductInt(class TArray<int32_t>& A)
{
	static UFunction* uFnProductInt = nullptr;

	if (!uFnProductInt)
	{
		uFnProductInt = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.ProductInt");
	}

	UGearboxBehaviorFunctionLibrary_execProductInt_Params ProductInt_Params;
	memset(&ProductInt_Params, 0, sizeof(ProductInt_Params));
	memcpy_s(&ProductInt_Params.A, sizeof(ProductInt_Params.A), &A, sizeof(A));

	uFnProductInt->iNative = 0;
	uFnProductInt->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnProductInt, &ProductInt_Params, nullptr);
	uFnProductInt->FunctionFlags |= 0x400;
	uFnProductInt->iNative = 35557;

	memcpy_s(&A, sizeof(A), &ProductInt_Params.A, sizeof(ProductInt_Params.A));

	return ProductInt_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.ProductFloat
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35556])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class TArray<float>            A                              (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

float UGearboxBehaviorFunctionLibrary::ProductFloat(class TArray<float>& A)
{
	static UFunction* uFnProductFloat = nullptr;

	if (!uFnProductFloat)
	{
		uFnProductFloat = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.ProductFloat");
	}

	UGearboxBehaviorFunctionLibrary_execProductFloat_Params ProductFloat_Params;
	memset(&ProductFloat_Params, 0, sizeof(ProductFloat_Params));
	memcpy_s(&ProductFloat_Params.A, sizeof(ProductFloat_Params.A), &A, sizeof(A));

	uFnProductFloat->iNative = 0;
	uFnProductFloat->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnProductFloat, &ProductFloat_Params, nullptr);
	uFnProductFloat->FunctionFlags |= 0x400;
	uFnProductFloat->iNative = 35556;

	memcpy_s(&A, sizeof(A), &ProductFloat_Params.A, sizeof(ProductFloat_Params.A));

	return ProductFloat_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.SumFloat
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[36341])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class TArray<float>            A                              (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

float UGearboxBehaviorFunctionLibrary::SumFloat(class TArray<float>& A)
{
	static UFunction* uFnSumFloat = nullptr;

	if (!uFnSumFloat)
	{
		uFnSumFloat = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.SumFloat");
	}

	UGearboxBehaviorFunctionLibrary_execSumFloat_Params SumFloat_Params;
	memset(&SumFloat_Params, 0, sizeof(SumFloat_Params));
	memcpy_s(&SumFloat_Params.A, sizeof(SumFloat_Params.A), &A, sizeof(A));

	uFnSumFloat->iNative = 0;
	uFnSumFloat->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnSumFloat, &SumFloat_Params, nullptr);
	uFnSumFloat->FunctionFlags |= 0x400;
	uFnSumFloat->iNative = 36341;

	memcpy_s(&A, sizeof(A), &SumFloat_Params.A, sizeof(SumFloat_Params.A));

	return SumFloat_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.SumInt
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[36342])
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class TArray<int32_t>          A                              (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

int32_t UGearboxBehaviorFunctionLibrary::SumInt(class TArray<int32_t>& A)
{
	static UFunction* uFnSumInt = nullptr;

	if (!uFnSumInt)
	{
		uFnSumInt = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.SumInt");
	}

	UGearboxBehaviorFunctionLibrary_execSumInt_Params SumInt_Params;
	memset(&SumInt_Params, 0, sizeof(SumInt_Params));
	memcpy_s(&SumInt_Params.A, sizeof(SumInt_Params.A), &A, sizeof(A));

	uFnSumInt->iNative = 0;
	uFnSumInt->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnSumInt, &SumInt_Params, nullptr);
	uFnSumInt->FunctionFlags |= 0x400;
	uFnSumInt->iNative = 36342;

	memcpy_s(&A, sizeof(A), &SumInt_Params.A, sizeof(SumInt_Params.A));

	return SumInt_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.SumVector
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[36344])
// Parameter Info:
// struct FVector                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class TArray<struct FVector>   A                              (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

struct FVector UGearboxBehaviorFunctionLibrary::SumVector(class TArray<struct FVector>& A)
{
	static UFunction* uFnSumVector = nullptr;

	if (!uFnSumVector)
	{
		uFnSumVector = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.SumVector");
	}

	UGearboxBehaviorFunctionLibrary_execSumVector_Params SumVector_Params;
	memset(&SumVector_Params, 0, sizeof(SumVector_Params));
	memcpy_s(&SumVector_Params.A, sizeof(SumVector_Params.A), &A, sizeof(A));

	uFnSumVector->iNative = 0;
	uFnSumVector->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnSumVector, &SumVector_Params, nullptr);
	uFnSumVector->FunctionFlags |= 0x400;
	uFnSumVector->iNative = 36344;

	memcpy_s(&A, sizeof(A), &SumVector_Params.A, sizeof(SumVector_Params.A));

	return SumVector_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.MakeVector3
// [0x0002A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_AllFlags) (iNative[34875])
// Parameter Info:
// struct FVector                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// float                          X                              (CPF_Parm)
// float                          Y                              (CPF_Parm)
// float                          Z                              (CPF_Parm)

struct FVector UGearboxBehaviorFunctionLibrary::MakeVector3(float X, float Y, float Z)
{
	static UFunction* uFnMakeVector3 = nullptr;

	if (!uFnMakeVector3)
	{
		uFnMakeVector3 = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.MakeVector3");
	}

	UGearboxBehaviorFunctionLibrary_execMakeVector3_Params MakeVector3_Params;
	memset(&MakeVector3_Params, 0, sizeof(MakeVector3_Params));
	memcpy_s(&MakeVector3_Params.X, sizeof(MakeVector3_Params.X), &X, sizeof(X));
	memcpy_s(&MakeVector3_Params.Y, sizeof(MakeVector3_Params.Y), &Y, sizeof(Y));
	memcpy_s(&MakeVector3_Params.Z, sizeof(MakeVector3_Params.Z), &Z, sizeof(Z));

	uFnMakeVector3->iNative = 0;
	uFnMakeVector3->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnMakeVector3, &MakeVector3_Params, nullptr);
	uFnMakeVector3->FunctionFlags |= 0x400;
	uFnMakeVector3->iNative = 34875;

	return MakeVector3_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.MakeVector1
// [0x0002A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_AllFlags) (iNative[34874])
// Parameter Info:
// struct FVector                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// float                          XYZ                            (CPF_Parm)

struct FVector UGearboxBehaviorFunctionLibrary::MakeVector1(float XYZ)
{
	static UFunction* uFnMakeVector1 = nullptr;

	if (!uFnMakeVector1)
	{
		uFnMakeVector1 = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.MakeVector1");
	}

	UGearboxBehaviorFunctionLibrary_execMakeVector1_Params MakeVector1_Params;
	memset(&MakeVector1_Params, 0, sizeof(MakeVector1_Params));
	memcpy_s(&MakeVector1_Params.XYZ, sizeof(MakeVector1_Params.XYZ), &XYZ, sizeof(XYZ));

	uFnMakeVector1->iNative = 0;
	uFnMakeVector1->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnMakeVector1, &MakeVector1_Params, nullptr);
	uFnMakeVector1->FunctionFlags |= 0x400;
	uFnMakeVector1->iNative = 34874;

	return MakeVector1_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.FltMultiMax
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[33876])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class TArray<float>            Options                        (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

float UGearboxBehaviorFunctionLibrary::FltMultiMax(class TArray<float>& Options)
{
	static UFunction* uFnFltMultiMax = nullptr;

	if (!uFnFltMultiMax)
	{
		uFnFltMultiMax = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.FltMultiMax");
	}

	UGearboxBehaviorFunctionLibrary_execFltMultiMax_Params FltMultiMax_Params;
	memset(&FltMultiMax_Params, 0, sizeof(FltMultiMax_Params));
	memcpy_s(&FltMultiMax_Params.Options, sizeof(FltMultiMax_Params.Options), &Options, sizeof(Options));

	uFnFltMultiMax->iNative = 0;
	uFnFltMultiMax->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnFltMultiMax, &FltMultiMax_Params, nullptr);
	uFnFltMultiMax->FunctionFlags |= 0x400;
	uFnFltMultiMax->iNative = 33876;

	memcpy_s(&Options, sizeof(Options), &FltMultiMax_Params.Options, sizeof(FltMultiMax_Params.Options));

	return FltMultiMax_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.FltMultiMin
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[33877])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class TArray<float>            Options                        (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

float UGearboxBehaviorFunctionLibrary::FltMultiMin(class TArray<float>& Options)
{
	static UFunction* uFnFltMultiMin = nullptr;

	if (!uFnFltMultiMin)
	{
		uFnFltMultiMin = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.FltMultiMin");
	}

	UGearboxBehaviorFunctionLibrary_execFltMultiMin_Params FltMultiMin_Params;
	memset(&FltMultiMin_Params, 0, sizeof(FltMultiMin_Params));
	memcpy_s(&FltMultiMin_Params.Options, sizeof(FltMultiMin_Params.Options), &Options, sizeof(Options));

	uFnFltMultiMin->iNative = 0;
	uFnFltMultiMin->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnFltMultiMin, &FltMultiMin_Params, nullptr);
	uFnFltMultiMin->FunctionFlags |= 0x400;
	uFnFltMultiMin->iNative = 33877;

	memcpy_s(&Options, sizeof(Options), &FltMultiMin_Params.Options, sizeof(FltMultiMin_Params.Options));

	return FltMultiMin_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.IntMultiMax
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34627])
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class TArray<int32_t>          Options                        (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

int32_t UGearboxBehaviorFunctionLibrary::IntMultiMax(class TArray<int32_t>& Options)
{
	static UFunction* uFnIntMultiMax = nullptr;

	if (!uFnIntMultiMax)
	{
		uFnIntMultiMax = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.IntMultiMax");
	}

	UGearboxBehaviorFunctionLibrary_execIntMultiMax_Params IntMultiMax_Params;
	memset(&IntMultiMax_Params, 0, sizeof(IntMultiMax_Params));
	memcpy_s(&IntMultiMax_Params.Options, sizeof(IntMultiMax_Params.Options), &Options, sizeof(Options));

	uFnIntMultiMax->iNative = 0;
	uFnIntMultiMax->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnIntMultiMax, &IntMultiMax_Params, nullptr);
	uFnIntMultiMax->FunctionFlags |= 0x400;
	uFnIntMultiMax->iNative = 34627;

	memcpy_s(&Options, sizeof(Options), &IntMultiMax_Params.Options, sizeof(IntMultiMax_Params.Options));

	return IntMultiMax_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.IntMultiMin
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34628])
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class TArray<int32_t>          Options                        (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

int32_t UGearboxBehaviorFunctionLibrary::IntMultiMin(class TArray<int32_t>& Options)
{
	static UFunction* uFnIntMultiMin = nullptr;

	if (!uFnIntMultiMin)
	{
		uFnIntMultiMin = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.IntMultiMin");
	}

	UGearboxBehaviorFunctionLibrary_execIntMultiMin_Params IntMultiMin_Params;
	memset(&IntMultiMin_Params, 0, sizeof(IntMultiMin_Params));
	memcpy_s(&IntMultiMin_Params.Options, sizeof(IntMultiMin_Params.Options), &Options, sizeof(Options));

	uFnIntMultiMin->iNative = 0;
	uFnIntMultiMin->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnIntMultiMin, &IntMultiMin_Params, nullptr);
	uFnIntMultiMin->FunctionFlags |= 0x400;
	uFnIntMultiMin->iNative = 34628;

	memcpy_s(&Options, sizeof(Options), &IntMultiMin_Params.Options, sizeof(IntMultiMin_Params.Options));

	return IntMultiMin_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.VectorZ
// [0x0002A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_AllFlags) (iNative[36682])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FVector&          A                              (CPF_Parm)

float UGearboxBehaviorFunctionLibrary::VectorZ(const struct FVector& A)
{
	static UFunction* uFnVectorZ = nullptr;

	if (!uFnVectorZ)
	{
		uFnVectorZ = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.VectorZ");
	}

	UGearboxBehaviorFunctionLibrary_execVectorZ_Params VectorZ_Params;
	memset(&VectorZ_Params, 0, sizeof(VectorZ_Params));
	memcpy_s(&VectorZ_Params.A, sizeof(VectorZ_Params.A), &A, sizeof(A));

	uFnVectorZ->iNative = 0;
	uFnVectorZ->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnVectorZ, &VectorZ_Params, nullptr);
	uFnVectorZ->FunctionFlags |= 0x400;
	uFnVectorZ->iNative = 36682;

	return VectorZ_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.VectorY
// [0x0002A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_AllFlags) (iNative[36681])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FVector&          A                              (CPF_Parm)

float UGearboxBehaviorFunctionLibrary::VectorY(const struct FVector& A)
{
	static UFunction* uFnVectorY = nullptr;

	if (!uFnVectorY)
	{
		uFnVectorY = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.VectorY");
	}

	UGearboxBehaviorFunctionLibrary_execVectorY_Params VectorY_Params;
	memset(&VectorY_Params, 0, sizeof(VectorY_Params));
	memcpy_s(&VectorY_Params.A, sizeof(VectorY_Params.A), &A, sizeof(A));

	uFnVectorY->iNative = 0;
	uFnVectorY->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnVectorY, &VectorY_Params, nullptr);
	uFnVectorY->FunctionFlags |= 0x400;
	uFnVectorY->iNative = 36681;

	return VectorY_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.VectorX
// [0x0002A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_AllFlags) (iNative[36680])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FVector&          A                              (CPF_Parm)

float UGearboxBehaviorFunctionLibrary::VectorX(const struct FVector& A)
{
	static UFunction* uFnVectorX = nullptr;

	if (!uFnVectorX)
	{
		uFnVectorX = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.VectorX");
	}

	UGearboxBehaviorFunctionLibrary_execVectorX_Params VectorX_Params;
	memset(&VectorX_Params, 0, sizeof(VectorX_Params));
	memcpy_s(&VectorX_Params.A, sizeof(VectorX_Params.A), &A, sizeof(A));

	uFnVectorX->iNative = 0;
	uFnVectorX->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnVectorX, &VectorX_Params, nullptr);
	uFnVectorX->FunctionFlags |= 0x400;
	uFnVectorX->iNative = 36680;

	return VectorX_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.IntRand
// [0x0002A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_AllFlags) (iNative[34631])
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        Min                            (CPF_Parm)
// int32_t                        Max                            (CPF_Parm)

int32_t UGearboxBehaviorFunctionLibrary::IntRand(int32_t Min, int32_t Max)
{
	static UFunction* uFnIntRand = nullptr;

	if (!uFnIntRand)
	{
		uFnIntRand = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.IntRand");
	}

	UGearboxBehaviorFunctionLibrary_execIntRand_Params IntRand_Params;
	memset(&IntRand_Params, 0, sizeof(IntRand_Params));
	memcpy_s(&IntRand_Params.Min, sizeof(IntRand_Params.Min), &Min, sizeof(Min));
	memcpy_s(&IntRand_Params.Max, sizeof(IntRand_Params.Max), &Max, sizeof(Max));

	uFnIntRand->iNative = 0;
	uFnIntRand->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnIntRand, &IntRand_Params, nullptr);
	uFnIntRand->FunctionFlags |= 0x400;
	uFnIntRand->iNative = 34631;

	return IntRand_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.IntAvg
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34582])
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class TArray<int32_t>          A                              (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

int32_t UGearboxBehaviorFunctionLibrary::IntAvg(class TArray<int32_t>& A)
{
	static UFunction* uFnIntAvg = nullptr;

	if (!uFnIntAvg)
	{
		uFnIntAvg = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.IntAvg");
	}

	UGearboxBehaviorFunctionLibrary_execIntAvg_Params IntAvg_Params;
	memset(&IntAvg_Params, 0, sizeof(IntAvg_Params));
	memcpy_s(&IntAvg_Params.A, sizeof(IntAvg_Params.A), &A, sizeof(A));

	uFnIntAvg->iNative = 0;
	uFnIntAvg->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnIntAvg, &IntAvg_Params, nullptr);
	uFnIntAvg->FunctionFlags |= 0x400;
	uFnIntAvg->iNative = 34582;

	memcpy_s(&A, sizeof(A), &IntAvg_Params.A, sizeof(IntAvg_Params.A));

	return IntAvg_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.IntPow
// [0x0002A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_AllFlags) (iNative[34630])
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        Value                          (CPF_Parm)
// int32_t                        Exponent                       (CPF_Parm)

int32_t UGearboxBehaviorFunctionLibrary::IntPow(int32_t Value, int32_t Exponent)
{
	static UFunction* uFnIntPow = nullptr;

	if (!uFnIntPow)
	{
		uFnIntPow = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.IntPow");
	}

	UGearboxBehaviorFunctionLibrary_execIntPow_Params IntPow_Params;
	memset(&IntPow_Params, 0, sizeof(IntPow_Params));
	memcpy_s(&IntPow_Params.Value, sizeof(IntPow_Params.Value), &Value, sizeof(Value));
	memcpy_s(&IntPow_Params.Exponent, sizeof(IntPow_Params.Exponent), &Exponent, sizeof(Exponent));

	uFnIntPow->iNative = 0;
	uFnIntPow->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnIntPow, &IntPow_Params, nullptr);
	uFnIntPow->FunctionFlags |= 0x400;
	uFnIntPow->iNative = 34630;

	return IntPow_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.IWithinRange
// [0x0002A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_AllFlags) (iNative[34707])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        A                              (CPF_Parm)
// int32_t                        Min                            (CPF_Parm)
// int32_t                        Max                            (CPF_Parm)

bool UGearboxBehaviorFunctionLibrary::IWithinRange(int32_t A, int32_t Min, int32_t Max)
{
	static UFunction* uFnIWithinRange = nullptr;

	if (!uFnIWithinRange)
	{
		uFnIWithinRange = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.IWithinRange");
	}

	UGearboxBehaviorFunctionLibrary_execIWithinRange_Params IWithinRange_Params;
	memset(&IWithinRange_Params, 0, sizeof(IWithinRange_Params));
	memcpy_s(&IWithinRange_Params.A, sizeof(IWithinRange_Params.A), &A, sizeof(A));
	memcpy_s(&IWithinRange_Params.Min, sizeof(IWithinRange_Params.Min), &Min, sizeof(Min));
	memcpy_s(&IWithinRange_Params.Max, sizeof(IWithinRange_Params.Max), &Max, sizeof(Max));

	uFnIWithinRange->iNative = 0;
	uFnIWithinRange->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnIWithinRange, &IWithinRange_Params, nullptr);
	uFnIWithinRange->FunctionFlags |= 0x400;
	uFnIWithinRange->iNative = 34707;

	return IWithinRange_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.FWithinRange
// [0x0002A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_AllFlags) (iNative[33940])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// float                          A                              (CPF_Parm)
// float                          Min                            (CPF_Parm)
// float                          Max                            (CPF_Parm)

bool UGearboxBehaviorFunctionLibrary::FWithinRange(float A, float Min, float Max)
{
	static UFunction* uFnFWithinRange = nullptr;

	if (!uFnFWithinRange)
	{
		uFnFWithinRange = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.FWithinRange");
	}

	UGearboxBehaviorFunctionLibrary_execFWithinRange_Params FWithinRange_Params;
	memset(&FWithinRange_Params, 0, sizeof(FWithinRange_Params));
	memcpy_s(&FWithinRange_Params.A, sizeof(FWithinRange_Params.A), &A, sizeof(A));
	memcpy_s(&FWithinRange_Params.Min, sizeof(FWithinRange_Params.Min), &Min, sizeof(Min));
	memcpy_s(&FWithinRange_Params.Max, sizeof(FWithinRange_Params.Max), &Max, sizeof(Max));

	uFnFWithinRange->iNative = 0;
	uFnFWithinRange->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnFWithinRange, &FWithinRange_Params, nullptr);
	uFnFWithinRange->FunctionFlags |= 0x400;
	uFnFWithinRange->iNative = 33940;

	return FWithinRange_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.FilterSanitize_Object
// [0x0042A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[33808])
// Parameter Info:
// class TArray<class UObject*>   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class TArray<class UObject*>   Objs                           (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class TArray<class UObject*> UGearboxBehaviorFunctionLibrary::FilterSanitize_Object(class TArray<class UObject*>& Objs)
{
	static UFunction* uFnFilterSanitize_Object = nullptr;

	if (!uFnFilterSanitize_Object)
	{
		uFnFilterSanitize_Object = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.FilterSanitize_Object");
	}

	UGearboxBehaviorFunctionLibrary_execFilterSanitize_Object_Params FilterSanitize_Object_Params;
	memset(&FilterSanitize_Object_Params, 0, sizeof(FilterSanitize_Object_Params));
	memcpy_s(&FilterSanitize_Object_Params.Objs, sizeof(FilterSanitize_Object_Params.Objs), &Objs, sizeof(Objs));

	uFnFilterSanitize_Object->iNative = 0;
	uFnFilterSanitize_Object->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnFilterSanitize_Object, &FilterSanitize_Object_Params, nullptr);
	uFnFilterSanitize_Object->FunctionFlags |= 0x400;
	uFnFilterSanitize_Object->iNative = 33808;

	memcpy_s(&Objs, sizeof(Objs), &FilterSanitize_Object_Params.Objs, sizeof(FilterSanitize_Object_Params.Objs));

	return FilterSanitize_Object_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.GetOwner
// [0x0002A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_AllFlags) (iNative[34163])
// Parameter Info:
// class AActor*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AActor*                  A                              (CPF_Parm)

class AActor* UGearboxBehaviorFunctionLibrary::GetOwner(class AActor* A)
{
	static UFunction* uFnGetOwner = nullptr;

	if (!uFnGetOwner)
	{
		uFnGetOwner = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.GetOwner");
	}

	UGearboxBehaviorFunctionLibrary_execGetOwner_Params GetOwner_Params;
	memset(&GetOwner_Params, 0, sizeof(GetOwner_Params));
	memcpy_s(&GetOwner_Params.A, sizeof(GetOwner_Params.A), &A, sizeof(A));

	uFnGetOwner->iNative = 0;
	uFnGetOwner->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnGetOwner, &GetOwner_Params, nullptr);
	uFnGetOwner->FunctionFlags |= 0x400;
	uFnGetOwner->iNative = 34163;

	return GetOwner_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.GetAttachedActors
// [0x0002A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_AllFlags) (iNative[34045])
// Parameter Info:
// class TArray<class AActor*>    ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class AActor*                  A                              (CPF_Parm)

class TArray<class AActor*> UGearboxBehaviorFunctionLibrary::GetAttachedActors(class AActor* A)
{
	static UFunction* uFnGetAttachedActors = nullptr;

	if (!uFnGetAttachedActors)
	{
		uFnGetAttachedActors = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.GetAttachedActors");
	}

	UGearboxBehaviorFunctionLibrary_execGetAttachedActors_Params GetAttachedActors_Params;
	memset(&GetAttachedActors_Params, 0, sizeof(GetAttachedActors_Params));
	memcpy_s(&GetAttachedActors_Params.A, sizeof(GetAttachedActors_Params.A), &A, sizeof(A));

	uFnGetAttachedActors->iNative = 0;
	uFnGetAttachedActors->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnGetAttachedActors, &GetAttachedActors_Params, nullptr);
	uFnGetAttachedActors->FunctionFlags |= 0x400;
	uFnGetAttachedActors->iNative = 34045;

	return GetAttachedActors_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.SetBase
// [0x0002A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_AllFlags) (iNative[28720])
// Parameter Info:
// class AActor*                  A                              (CPF_Parm)
// class AActor*                  Input                          (CPF_Parm)

void UGearboxBehaviorFunctionLibrary::SetBase(class AActor* A, class AActor* Input)
{
	static UFunction* uFnSetBase = nullptr;

	if (!uFnSetBase)
	{
		uFnSetBase = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.SetBase");
	}

	UGearboxBehaviorFunctionLibrary_execSetBase_Params SetBase_Params;
	memset(&SetBase_Params, 0, sizeof(SetBase_Params));
	memcpy_s(&SetBase_Params.A, sizeof(SetBase_Params.A), &A, sizeof(A));
	memcpy_s(&SetBase_Params.Input, sizeof(SetBase_Params.Input), &Input, sizeof(Input));

	uFnSetBase->iNative = 0;
	uFnSetBase->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnSetBase, &SetBase_Params, nullptr);
	uFnSetBase->FunctionFlags |= 0x400;
	uFnSetBase->iNative = 28720;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.GetBase
// [0x0002A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_AllFlags) (iNative[34049])
// Parameter Info:
// class AActor*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AActor*                  A                              (CPF_Parm)

class AActor* UGearboxBehaviorFunctionLibrary::GetBase(class AActor* A)
{
	static UFunction* uFnGetBase = nullptr;

	if (!uFnGetBase)
	{
		uFnGetBase = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.GetBase");
	}

	UGearboxBehaviorFunctionLibrary_execGetBase_Params GetBase_Params;
	memset(&GetBase_Params, 0, sizeof(GetBase_Params));
	memcpy_s(&GetBase_Params.A, sizeof(GetBase_Params.A), &A, sizeof(A));

	uFnGetBase->iNative = 0;
	uFnGetBase->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnGetBase, &GetBase_Params, nullptr);
	uFnGetBase->FunctionFlags |= 0x400;
	uFnGetBase->iNative = 34049;

	return GetBase_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.IntNonzero
// [0x0002A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_AllFlags) (iNative[34629])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        A                              (CPF_Parm)

bool UGearboxBehaviorFunctionLibrary::IntNonzero(int32_t A)
{
	static UFunction* uFnIntNonzero = nullptr;

	if (!uFnIntNonzero)
	{
		uFnIntNonzero = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.IntNonzero");
	}

	UGearboxBehaviorFunctionLibrary_execIntNonzero_Params IntNonzero_Params;
	memset(&IntNonzero_Params, 0, sizeof(IntNonzero_Params));
	memcpy_s(&IntNonzero_Params.A, sizeof(IntNonzero_Params.A), &A, sizeof(A));

	uFnIntNonzero->iNative = 0;
	uFnIntNonzero->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnIntNonzero, &IntNonzero_Params, nullptr);
	uFnIntNonzero->FunctionFlags |= 0x400;
	uFnIntNonzero->iNative = 34629;

	return IntNonzero_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.IntZero
// [0x0002A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_AllFlags) (iNative[34633])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        A                              (CPF_Parm)

bool UGearboxBehaviorFunctionLibrary::IntZero(int32_t A)
{
	static UFunction* uFnIntZero = nullptr;

	if (!uFnIntZero)
	{
		uFnIntZero = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.IntZero");
	}

	UGearboxBehaviorFunctionLibrary_execIntZero_Params IntZero_Params;
	memset(&IntZero_Params, 0, sizeof(IntZero_Params));
	memcpy_s(&IntZero_Params.A, sizeof(IntZero_Params.A), &A, sizeof(A));

	uFnIntZero->iNative = 0;
	uFnIntZero->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnIntZero, &IntZero_Params, nullptr);
	uFnIntZero->FunctionFlags |= 0x400;
	uFnIntZero->iNative = 34633;

	return IntZero_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.IsInvalid
// [0x0002A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_AllFlags) (iNative[34672])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 A                              (CPF_Parm)

bool UGearboxBehaviorFunctionLibrary::IsInvalid(class UObject* A)
{
	static UFunction* uFnIsInvalid = nullptr;

	if (!uFnIsInvalid)
	{
		uFnIsInvalid = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.IsInvalid");
	}

	UGearboxBehaviorFunctionLibrary_execIsInvalid_Params IsInvalid_Params;
	memset(&IsInvalid_Params, 0, sizeof(IsInvalid_Params));
	memcpy_s(&IsInvalid_Params.A, sizeof(IsInvalid_Params.A), &A, sizeof(A));

	uFnIsInvalid->iNative = 0;
	uFnIsInvalid->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnIsInvalid, &IsInvalid_Params, nullptr);
	uFnIsInvalid->FunctionFlags |= 0x400;
	uFnIsInvalid->iNative = 34672;

	return IsInvalid_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.IsValid
// [0x0002A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_AllFlags) (iNative[16322])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 A                              (CPF_Parm)

bool UGearboxBehaviorFunctionLibrary::IsValid(class UObject* A)
{
	static UFunction* uFnIsValid = nullptr;

	if (!uFnIsValid)
	{
		uFnIsValid = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.IsValid");
	}

	UGearboxBehaviorFunctionLibrary_execIsValid_Params IsValid_Params;
	memset(&IsValid_Params, 0, sizeof(IsValid_Params));
	memcpy_s(&IsValid_Params.A, sizeof(IsValid_Params.A), &A, sizeof(A));

	uFnIsValid->iNative = 0;
	uFnIsValid->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnIsValid, &IsValid_Params, nullptr);
	uFnIsValid->FunctionFlags |= 0x400;
	uFnIsValid->iNative = 16322;

	return IsValid_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.IsNearby
// [0x0002A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_AllFlags) (iNative[34674])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FVector&          A                              (CPF_Parm)
// const struct FVector&          B                              (CPF_Parm)
// float                          Dist                           (CPF_Parm)

bool UGearboxBehaviorFunctionLibrary::IsNearby(const struct FVector& A, const struct FVector& B, float Dist)
{
	static UFunction* uFnIsNearby = nullptr;

	if (!uFnIsNearby)
	{
		uFnIsNearby = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.IsNearby");
	}

	UGearboxBehaviorFunctionLibrary_execIsNearby_Params IsNearby_Params;
	memset(&IsNearby_Params, 0, sizeof(IsNearby_Params));
	memcpy_s(&IsNearby_Params.A, sizeof(IsNearby_Params.A), &A, sizeof(A));
	memcpy_s(&IsNearby_Params.B, sizeof(IsNearby_Params.B), &B, sizeof(B));
	memcpy_s(&IsNearby_Params.Dist, sizeof(IsNearby_Params.Dist), &Dist, sizeof(Dist));

	uFnIsNearby->iNative = 0;
	uFnIsNearby->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnIsNearby, &IsNearby_Params, nullptr);
	uFnIsNearby->FunctionFlags |= 0x400;
	uFnIsNearby->iNative = 34674;

	return IsNearby_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.Distance
// [0x0002A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_AllFlags) (iNative[21851])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FVector&          A                              (CPF_Parm)
// const struct FVector&          B                              (CPF_Parm)

float UGearboxBehaviorFunctionLibrary::Distance(const struct FVector& A, const struct FVector& B)
{
	static UFunction* uFnDistance = nullptr;

	if (!uFnDistance)
	{
		uFnDistance = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.Distance");
	}

	UGearboxBehaviorFunctionLibrary_execDistance_Params Distance_Params;
	memset(&Distance_Params, 0, sizeof(Distance_Params));
	memcpy_s(&Distance_Params.A, sizeof(Distance_Params.A), &A, sizeof(A));
	memcpy_s(&Distance_Params.B, sizeof(Distance_Params.B), &B, sizeof(B));

	uFnDistance->iNative = 0;
	uFnDistance->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnDistance, &Distance_Params, nullptr);
	uFnDistance->FunctionFlags |= 0x400;
	uFnDistance->iNative = 21851;

	return Distance_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.ActorPointDistance
// [0x0002A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_AllFlags) (iNative[31653])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 A                              (CPF_Parm)
// const struct FVector&          B                              (CPF_Parm)

float UGearboxBehaviorFunctionLibrary::ActorPointDistance(class UObject* A, const struct FVector& B)
{
	static UFunction* uFnActorPointDistance = nullptr;

	if (!uFnActorPointDistance)
	{
		uFnActorPointDistance = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.ActorPointDistance");
	}

	UGearboxBehaviorFunctionLibrary_execActorPointDistance_Params ActorPointDistance_Params;
	memset(&ActorPointDistance_Params, 0, sizeof(ActorPointDistance_Params));
	memcpy_s(&ActorPointDistance_Params.A, sizeof(ActorPointDistance_Params.A), &A, sizeof(A));
	memcpy_s(&ActorPointDistance_Params.B, sizeof(ActorPointDistance_Params.B), &B, sizeof(B));

	uFnActorPointDistance->iNative = 0;
	uFnActorPointDistance->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnActorPointDistance, &ActorPointDistance_Params, nullptr);
	uFnActorPointDistance->FunctionFlags |= 0x400;
	uFnActorPointDistance->iNative = 31653;

	return ActorPointDistance_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.ActorDistance
// [0x0002A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_AllFlags) (iNative[31648])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 A                              (CPF_Parm)
// class UObject*                 B                              (CPF_Parm)

float UGearboxBehaviorFunctionLibrary::ActorDistance(class UObject* A, class UObject* B)
{
	static UFunction* uFnActorDistance = nullptr;

	if (!uFnActorDistance)
	{
		uFnActorDistance = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.ActorDistance");
	}

	UGearboxBehaviorFunctionLibrary_execActorDistance_Params ActorDistance_Params;
	memset(&ActorDistance_Params, 0, sizeof(ActorDistance_Params));
	memcpy_s(&ActorDistance_Params.A, sizeof(ActorDistance_Params.A), &A, sizeof(A));
	memcpy_s(&ActorDistance_Params.B, sizeof(ActorDistance_Params.B), &B, sizeof(B));

	uFnActorDistance->iNative = 0;
	uFnActorDistance->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnActorDistance, &ActorDistance_Params, nullptr);
	uFnActorDistance->FunctionFlags |= 0x400;
	uFnActorDistance->iNative = 31648;

	return ActorDistance_Params.ReturnValue;
};

// Function GearboxFramework.GearboxBehaviorFunctionLibrary.ActorNearby
// [0x0002A401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Const | FUNC_Public | FUNC_AllFlags) (iNative[31652])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 A                              (CPF_Parm)
// class UObject*                 B                              (CPF_Parm)
// float                          Dist                           (CPF_Parm)

bool UGearboxBehaviorFunctionLibrary::ActorNearby(class UObject* A, class UObject* B, float Dist)
{
	static UFunction* uFnActorNearby = nullptr;

	if (!uFnActorNearby)
	{
		uFnActorNearby = UFunction::FindFunction("Function GearboxFramework.GearboxBehaviorFunctionLibrary.ActorNearby");
	}

	UGearboxBehaviorFunctionLibrary_execActorNearby_Params ActorNearby_Params;
	memset(&ActorNearby_Params, 0, sizeof(ActorNearby_Params));
	memcpy_s(&ActorNearby_Params.A, sizeof(ActorNearby_Params.A), &A, sizeof(A));
	memcpy_s(&ActorNearby_Params.B, sizeof(ActorNearby_Params.B), &B, sizeof(B));
	memcpy_s(&ActorNearby_Params.Dist, sizeof(ActorNearby_Params.Dist), &Dist, sizeof(Dist));

	uFnActorNearby->iNative = 0;
	uFnActorNearby->FunctionFlags &= ~0x400;
	UGearboxBehaviorFunctionLibrary::StaticClass()->ProcessEvent(uFnActorNearby, &ActorNearby_Params, nullptr);
	uFnActorNearby->FunctionFlags |= 0x400;
	uFnActorNearby->iNative = 31652;

	return ActorNearby_Params.ReturnValue;
};

// Function GearboxFramework.GearboxPlayerController.LookAt
// [0xFFFF0000010205C0] (FUNC_Net | FUNC_NetReliable | FUNC_Simulated | FUNC_Native | FUNC_Public | FUNC_NetClient | FUNC_NetValidate | FUNC_AllFlags) (iNative[14838])
// Parameter Info:
// const struct FVector&          LookAtLocation                 (CPF_Parm)

void AGearboxPlayerController::LookAt(const struct FVector& LookAtLocation)
{
	static UFunction* uFnLookAt = nullptr;

	if (!uFnLookAt)
	{
		uFnLookAt = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.LookAt");
	}

	AGearboxPlayerController_execLookAt_Params LookAt_Params;
	memset(&LookAt_Params, 0, sizeof(LookAt_Params));
	memcpy_s(&LookAt_Params.LookAtLocation, sizeof(LookAt_Params.LookAtLocation), &LookAtLocation, sizeof(LookAtLocation));

	uFnLookAt->iNative = 0;
	uFnLookAt->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnLookAt, &LookAt_Params, nullptr);
	uFnLookAt->FunctionFlags |= 0x400;
	uFnLookAt->iNative = 14838;
};

// Function GearboxFramework.GearboxPlayerController.ShowSparkID
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void AGearboxPlayerController::ShowSparkID()
{
	static UFunction* uFnShowSparkID = nullptr;

	if (!uFnShowSparkID)
	{
		uFnShowSparkID = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.ShowSparkID");
	}

	AGearboxPlayerController_execShowSparkID_Params ShowSparkID_Params;
	memset(&ShowSparkID_Params, 0, sizeof(ShowSparkID_Params));

	this->ProcessEvent(uFnShowSparkID, &ShowSparkID_Params, nullptr);
};

// Function GearboxFramework.GearboxPlayerController.ShouldCheckRemoteControlCheckbox
// [0x00024400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[29068])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint8_t                        CheckBoxName                   (CPF_Parm)
// class AHUD*                    HUD                            (CPF_OptionalParm | CPF_Parm)

bool AGearboxPlayerController::ShouldCheckRemoteControlCheckbox(uint8_t CheckBoxName, class AHUD* HUD)
{
	static UFunction* uFnShouldCheckRemoteControlCheckbox = nullptr;

	if (!uFnShouldCheckRemoteControlCheckbox)
	{
		uFnShouldCheckRemoteControlCheckbox = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.ShouldCheckRemoteControlCheckbox");
	}

	AGearboxPlayerController_execShouldCheckRemoteControlCheckbox_Params ShouldCheckRemoteControlCheckbox_Params;
	memset(&ShouldCheckRemoteControlCheckbox_Params, 0, sizeof(ShouldCheckRemoteControlCheckbox_Params));
	memcpy_s(&ShouldCheckRemoteControlCheckbox_Params.CheckBoxName, sizeof(ShouldCheckRemoteControlCheckbox_Params.CheckBoxName), &CheckBoxName, sizeof(CheckBoxName));
	memcpy_s(&ShouldCheckRemoteControlCheckbox_Params.HUD, sizeof(ShouldCheckRemoteControlCheckbox_Params.HUD), &HUD, sizeof(HUD));

	uFnShouldCheckRemoteControlCheckbox->iNative = 0;
	uFnShouldCheckRemoteControlCheckbox->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnShouldCheckRemoteControlCheckbox, &ShouldCheckRemoteControlCheckbox_Params, nullptr);
	uFnShouldCheckRemoteControlCheckbox->FunctionFlags |= 0x400;
	uFnShouldCheckRemoteControlCheckbox->iNative = 29068;

	return ShouldCheckRemoteControlCheckbox_Params.ReturnValue;
};

// Function GearboxFramework.GearboxPlayerController.DisplayDebugSpark
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[33268])
// Parameter Info:
// class AHUD*                    HUD                            (CPF_Parm)
// float                          out_YL                         (CPF_Parm | CPF_OutParm)
// float                          out_YPos                       (CPF_Parm | CPF_OutParm)

void AGearboxPlayerController::DisplayDebugSpark(class AHUD* HUD, float& out_YL, float& out_YPos)
{
	static UFunction* uFnDisplayDebugSpark = nullptr;

	if (!uFnDisplayDebugSpark)
	{
		uFnDisplayDebugSpark = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.DisplayDebugSpark");
	}

	AGearboxPlayerController_execDisplayDebugSpark_Params DisplayDebugSpark_Params;
	memset(&DisplayDebugSpark_Params, 0, sizeof(DisplayDebugSpark_Params));
	memcpy_s(&DisplayDebugSpark_Params.HUD, sizeof(DisplayDebugSpark_Params.HUD), &HUD, sizeof(HUD));
	memcpy_s(&DisplayDebugSpark_Params.out_YL, sizeof(DisplayDebugSpark_Params.out_YL), &out_YL, sizeof(out_YL));
	memcpy_s(&DisplayDebugSpark_Params.out_YPos, sizeof(DisplayDebugSpark_Params.out_YPos), &out_YPos, sizeof(out_YPos));

	uFnDisplayDebugSpark->iNative = 0;
	uFnDisplayDebugSpark->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnDisplayDebugSpark, &DisplayDebugSpark_Params, nullptr);
	uFnDisplayDebugSpark->FunctionFlags |= 0x400;
	uFnDisplayDebugSpark->iNative = 33268;

	memcpy_s(&out_YL, sizeof(out_YL), &DisplayDebugSpark_Params.out_YL, sizeof(DisplayDebugSpark_Params.out_YL));
	memcpy_s(&out_YPos, sizeof(out_YPos), &DisplayDebugSpark_Params.out_YPos, sizeof(DisplayDebugSpark_Params.out_YPos));
};

// Function GearboxFramework.GearboxPlayerController.DisplayDebug
// [0x12420100] (FUNC_Simulated | FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AHUD*                    HUD                            (CPF_Parm)
// float                          out_YL                         (CPF_Parm | CPF_OutParm)
// float                          out_YPos                       (CPF_Parm | CPF_OutParm)

void AGearboxPlayerController::DisplayDebug(class AHUD* HUD, float& out_YL, float& out_YPos)
{
	static UFunction* uFnDisplayDebug = nullptr;

	if (!uFnDisplayDebug)
	{
		uFnDisplayDebug = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.DisplayDebug");
	}

	AGearboxPlayerController_execDisplayDebug_Params DisplayDebug_Params;
	memset(&DisplayDebug_Params, 0, sizeof(DisplayDebug_Params));
	memcpy_s(&DisplayDebug_Params.HUD, sizeof(DisplayDebug_Params.HUD), &HUD, sizeof(HUD));
	memcpy_s(&DisplayDebug_Params.out_YL, sizeof(DisplayDebug_Params.out_YL), &out_YL, sizeof(out_YL));
	memcpy_s(&DisplayDebug_Params.out_YPos, sizeof(DisplayDebug_Params.out_YPos), &out_YPos, sizeof(out_YPos));

	this->ProcessEvent(uFnDisplayDebug, &DisplayDebug_Params, nullptr);

	memcpy_s(&out_YL, sizeof(out_YL), &DisplayDebug_Params.out_YL, sizeof(DisplayDebug_Params.out_YL));
	memcpy_s(&out_YPos, sizeof(out_YPos), &DisplayDebug_Params.out_YPos, sizeof(DisplayDebug_Params.out_YPos));
};

// Function GearboxFramework.GearboxPlayerController.AITree
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void AGearboxPlayerController::AITree()
{
	static UFunction* uFnAITree = nullptr;

	if (!uFnAITree)
	{
		uFnAITree = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.AITree");
	}

	AGearboxPlayerController_execAITree_Params AITree_Params;
	memset(&AITree_Params, 0, sizeof(AITree_Params));

	this->ProcessEvent(uFnAITree, &AITree_Params, nullptr);
};

// Function GearboxFramework.GearboxPlayerController.AIToggleLineOfSight
// [0x00020601] (FUNC_Final | FUNC_Exec | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[31813])
// Parameter Info:

void AGearboxPlayerController::AIToggleLineOfSight()
{
	static UFunction* uFnAIToggleLineOfSight = nullptr;

	if (!uFnAIToggleLineOfSight)
	{
		uFnAIToggleLineOfSight = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.AIToggleLineOfSight");
	}

	AGearboxPlayerController_execAIToggleLineOfSight_Params AIToggleLineOfSight_Params;
	memset(&AIToggleLineOfSight_Params, 0, sizeof(AIToggleLineOfSight_Params));

	uFnAIToggleLineOfSight->iNative = 0;
	uFnAIToggleLineOfSight->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnAIToggleLineOfSight, &AIToggleLineOfSight_Params, nullptr);
	uFnAIToggleLineOfSight->FunctionFlags |= 0x400;
	uFnAIToggleLineOfSight->iNative = 31813;
};

// Function GearboxFramework.GearboxPlayerController.AIToggleAwareness
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void AGearboxPlayerController::AIToggleAwareness()
{
	static UFunction* uFnAIToggleAwareness = nullptr;

	if (!uFnAIToggleAwareness)
	{
		uFnAIToggleAwareness = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.AIToggleAwareness");
	}

	AGearboxPlayerController_execAIToggleAwareness_Params AIToggleAwareness_Params;
	memset(&AIToggleAwareness_Params, 0, sizeof(AIToggleAwareness_Params));

	this->ProcessEvent(uFnAIToggleAwareness, &AIToggleAwareness_Params, nullptr);
};

// Function GearboxFramework.GearboxPlayerController.AITogglePaths
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void AGearboxPlayerController::AITogglePaths()
{
	static UFunction* uFnAITogglePaths = nullptr;

	if (!uFnAITogglePaths)
	{
		uFnAITogglePaths = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.AITogglePaths");
	}

	AGearboxPlayerController_execAITogglePaths_Params AITogglePaths_Params;
	memset(&AITogglePaths_Params, 0, sizeof(AITogglePaths_Params));

	this->ProcessEvent(uFnAITogglePaths, &AITogglePaths_Params, nullptr);
};

// Function GearboxFramework.GearboxPlayerController.AIToggleTargetViewCones
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void AGearboxPlayerController::AIToggleTargetViewCones()
{
	static UFunction* uFnAIToggleTargetViewCones = nullptr;

	if (!uFnAIToggleTargetViewCones)
	{
		uFnAIToggleTargetViewCones = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.AIToggleTargetViewCones");
	}

	AGearboxPlayerController_execAIToggleTargetViewCones_Params AIToggleTargetViewCones_Params;
	memset(&AIToggleTargetViewCones_Params, 0, sizeof(AIToggleTargetViewCones_Params));

	this->ProcessEvent(uFnAIToggleTargetViewCones, &AIToggleTargetViewCones_Params, nullptr);
};

// Function GearboxFramework.GearboxPlayerController.AIToggleCombat
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void AGearboxPlayerController::AIToggleCombat()
{
	static UFunction* uFnAIToggleCombat = nullptr;

	if (!uFnAIToggleCombat)
	{
		uFnAIToggleCombat = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.AIToggleCombat");
	}

	AGearboxPlayerController_execAIToggleCombat_Params AIToggleCombat_Params;
	memset(&AIToggleCombat_Params, 0, sizeof(AIToggleCombat_Params));

	this->ProcessEvent(uFnAIToggleCombat, &AIToggleCombat_Params, nullptr);
};

// Function GearboxFramework.GearboxPlayerController.AIToggleFlags
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void AGearboxPlayerController::AIToggleFlags()
{
	static UFunction* uFnAIToggleFlags = nullptr;

	if (!uFnAIToggleFlags)
	{
		uFnAIToggleFlags = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.AIToggleFlags");
	}

	AGearboxPlayerController_execAIToggleFlags_Params AIToggleFlags_Params;
	memset(&AIToggleFlags_Params, 0, sizeof(AIToggleFlags_Params));

	this->ProcessEvent(uFnAIToggleFlags, &AIToggleFlags_Params, nullptr);
};

// Function GearboxFramework.GearboxPlayerController.AIDebugNextSnapshot
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void AGearboxPlayerController::AIDebugNextSnapshot()
{
	static UFunction* uFnAIDebugNextSnapshot = nullptr;

	if (!uFnAIDebugNextSnapshot)
	{
		uFnAIDebugNextSnapshot = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.AIDebugNextSnapshot");
	}

	AGearboxPlayerController_execAIDebugNextSnapshot_Params AIDebugNextSnapshot_Params;
	memset(&AIDebugNextSnapshot_Params, 0, sizeof(AIDebugNextSnapshot_Params));

	this->ProcessEvent(uFnAIDebugNextSnapshot, &AIDebugNextSnapshot_Params, nullptr);
};

// Function GearboxFramework.GearboxPlayerController.AIDebugPrevSnapshot
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void AGearboxPlayerController::AIDebugPrevSnapshot()
{
	static UFunction* uFnAIDebugPrevSnapshot = nullptr;

	if (!uFnAIDebugPrevSnapshot)
	{
		uFnAIDebugPrevSnapshot = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.AIDebugPrevSnapshot");
	}

	AGearboxPlayerController_execAIDebugPrevSnapshot_Params AIDebugPrevSnapshot_Params;
	memset(&AIDebugPrevSnapshot_Params, 0, sizeof(AIDebugPrevSnapshot_Params));

	this->ProcessEvent(uFnAIDebugPrevSnapshot, &AIDebugPrevSnapshot_Params, nullptr);
};

// Function GearboxFramework.GearboxPlayerController.ainext
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void AGearboxPlayerController::ainext()
{
	static UFunction* uFnainext = nullptr;

	if (!uFnainext)
	{
		uFnainext = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.ainext");
	}

	AGearboxPlayerController_execainext_Params ainext_Params;
	memset(&ainext_Params, 0, sizeof(ainext_Params));

	this->ProcessEvent(uFnainext, &ainext_Params, nullptr);
};

// Function GearboxFramework.GearboxPlayerController.aiprev
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void AGearboxPlayerController::aiprev()
{
	static UFunction* uFnaiprev = nullptr;

	if (!uFnaiprev)
	{
		uFnaiprev = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.aiprev");
	}

	AGearboxPlayerController_execaiprev_Params aiprev_Params;
	memset(&aiprev_Params, 0, sizeof(aiprev_Params));

	this->ProcessEvent(uFnaiprev, &aiprev_Params, nullptr);
};

// Function GearboxFramework.GearboxPlayerController.AIDebugSetPawn
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AGearboxPawn*            NewPawn                        (CPF_Parm)

void AGearboxPlayerController::AIDebugSetPawn(class AGearboxPawn* NewPawn)
{
	static UFunction* uFnAIDebugSetPawn = nullptr;

	if (!uFnAIDebugSetPawn)
	{
		uFnAIDebugSetPawn = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.AIDebugSetPawn");
	}

	AGearboxPlayerController_execAIDebugSetPawn_Params AIDebugSetPawn_Params;
	memset(&AIDebugSetPawn_Params, 0, sizeof(AIDebugSetPawn_Params));
	memcpy_s(&AIDebugSetPawn_Params.NewPawn, sizeof(AIDebugSetPawn_Params.NewPawn), &NewPawn, sizeof(NewPawn));

	this->ProcessEvent(uFnAIDebugSetPawn, &AIDebugSetPawn_Params, nullptr);
};

// Function GearboxFramework.GearboxPlayerController.AIDebugSetPawnByName
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FName&            NewPawnName                    (CPF_Parm)

void AGearboxPlayerController::AIDebugSetPawnByName(const struct FName& NewPawnName)
{
	static UFunction* uFnAIDebugSetPawnByName = nullptr;

	if (!uFnAIDebugSetPawnByName)
	{
		uFnAIDebugSetPawnByName = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.AIDebugSetPawnByName");
	}

	AGearboxPlayerController_execAIDebugSetPawnByName_Params AIDebugSetPawnByName_Params;
	memset(&AIDebugSetPawnByName_Params, 0, sizeof(AIDebugSetPawnByName_Params));
	memcpy_s(&AIDebugSetPawnByName_Params.NewPawnName, sizeof(AIDebugSetPawnByName_Params.NewPawnName), &NewPawnName, sizeof(NewPawnName));

	this->ProcessEvent(uFnAIDebugSetPawnByName, &AIDebugSetPawnByName_Params, nullptr);
};

// Function GearboxFramework.GearboxPlayerController.debugpawn
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void AGearboxPlayerController::debugpawn()
{
	static UFunction* uFndebugpawn = nullptr;

	if (!uFndebugpawn)
	{
		uFndebugpawn = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.debugpawn");
	}

	AGearboxPlayerController_execdebugpawn_Params debugpawn_Params;
	memset(&debugpawn_Params, 0, sizeof(debugpawn_Params));

	this->ProcessEvent(uFndebugpawn, &debugpawn_Params, nullptr);
};

// Function GearboxFramework.GearboxPlayerController.aisetp
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FName&            NewPawnName                    (CPF_Parm)

void AGearboxPlayerController::aisetp(const struct FName& NewPawnName)
{
	static UFunction* uFnaisetp = nullptr;

	if (!uFnaisetp)
	{
		uFnaisetp = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.aisetp");
	}

	AGearboxPlayerController_execaisetp_Params aisetp_Params;
	memset(&aisetp_Params, 0, sizeof(aisetp_Params));
	memcpy_s(&aisetp_Params.NewPawnName, sizeof(aisetp_Params.NewPawnName), &NewPawnName, sizeof(NewPawnName));

	this->ProcessEvent(uFnaisetp, &aisetp_Params, nullptr);
};

// Function GearboxFramework.GearboxPlayerController.PawnDied
// [0x16020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Call | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class APawn*                   P                              (CPF_Parm)

void AGearboxPlayerController::PawnDied(class APawn* P)
{
	static UFunction* uFnPawnDied = nullptr;

	if (!uFnPawnDied)
	{
		uFnPawnDied = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.PawnDied");
	}

	AGearboxPlayerController_execPawnDied_Params PawnDied_Params;
	memset(&PawnDied_Params, 0, sizeof(PawnDied_Params));
	memcpy_s(&PawnDied_Params.P, sizeof(PawnDied_Params.P), &P, sizeof(P));

	this->ProcessEvent(uFnPawnDied, &PawnDied_Params, nullptr);
};

// Function GearboxFramework.GearboxPlayerController.NotifyGameUnPaused
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void AGearboxPlayerController::NotifyGameUnPaused()
{
	static UFunction* uFnNotifyGameUnPaused = nullptr;

	if (!uFnNotifyGameUnPaused)
	{
		uFnNotifyGameUnPaused = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.NotifyGameUnPaused");
	}

	AGearboxPlayerController_execNotifyGameUnPaused_Params NotifyGameUnPaused_Params;
	memset(&NotifyGameUnPaused_Params, 0, sizeof(NotifyGameUnPaused_Params));

	this->ProcessEvent(uFnNotifyGameUnPaused, &NotifyGameUnPaused_Params, nullptr);
};

// Function GearboxFramework.GearboxPlayerController.NotifyGamePaused
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void AGearboxPlayerController::NotifyGamePaused()
{
	static UFunction* uFnNotifyGamePaused = nullptr;

	if (!uFnNotifyGamePaused)
	{
		uFnNotifyGamePaused = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.NotifyGamePaused");
	}

	AGearboxPlayerController_execNotifyGamePaused_Params NotifyGamePaused_Params;
	memset(&NotifyGamePaused_Params, 0, sizeof(NotifyGamePaused_Params));

	this->ProcessEvent(uFnNotifyGamePaused, &NotifyGamePaused_Params, nullptr);
};

// Function GearboxFramework.GearboxPlayerController.GetMyUserId
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34135])
// Parameter Info:
// struct FPlatformUserId         ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FPlatformUserId AGearboxPlayerController::GetMyUserId()
{
	static UFunction* uFnGetMyUserId = nullptr;

	if (!uFnGetMyUserId)
	{
		uFnGetMyUserId = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.GetMyUserId");
	}

	AGearboxPlayerController_execGetMyUserId_Params GetMyUserId_Params;
	memset(&GetMyUserId_Params, 0, sizeof(GetMyUserId_Params));

	uFnGetMyUserId->iNative = 0;
	uFnGetMyUserId->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetMyUserId, &GetMyUserId_Params, nullptr);
	uFnGetMyUserId->FunctionFlags |= 0x400;
	uFnGetMyUserId->iNative = 34135;

	return GetMyUserId_Params.ReturnValue;
};

// Function GearboxFramework.GearboxPlayerController.ClientKeepPlayingLoadingMovie
// [0xFFFF0000130209C0] (FUNC_Net | FUNC_NetReliable | FUNC_Simulated | FUNC_Event | FUNC_Public | FUNC_NetClient | FUNC_DLLImport | FUNC_K2Pure | FUNC_NetValidate | FUNC_AllFlags)
// Parameter Info:

void AGearboxPlayerController::eventClientKeepPlayingLoadingMovie()
{
	static UFunction* uFnClientKeepPlayingLoadingMovie = nullptr;

	if (!uFnClientKeepPlayingLoadingMovie)
	{
		uFnClientKeepPlayingLoadingMovie = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.ClientKeepPlayingLoadingMovie");
	}

	AGearboxPlayerController_eventClientKeepPlayingLoadingMovie_Params ClientKeepPlayingLoadingMovie_Params;
	memset(&ClientKeepPlayingLoadingMovie_Params, 0, sizeof(ClientKeepPlayingLoadingMovie_Params));

	this->ProcessEvent(uFnClientKeepPlayingLoadingMovie, &ClientKeepPlayingLoadingMovie_Params, nullptr);
};

// Function GearboxFramework.GearboxPlayerController.SpawnPlayerCamera
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void AGearboxPlayerController::eventSpawnPlayerCamera()
{
	static UFunction* uFnSpawnPlayerCamera = nullptr;

	if (!uFnSpawnPlayerCamera)
	{
		uFnSpawnPlayerCamera = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.SpawnPlayerCamera");
	}

	AGearboxPlayerController_eventSpawnPlayerCamera_Params SpawnPlayerCamera_Params;
	memset(&SpawnPlayerCamera_Params, 0, sizeof(SpawnPlayerCamera_Params));

	this->ProcessEvent(uFnSpawnPlayerCamera, &SpawnPlayerCamera_Params, nullptr);
};

// Function GearboxFramework.GearboxPlayerController.InitInputSystem
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void AGearboxPlayerController::eventInitInputSystem()
{
	static UFunction* uFnInitInputSystem = nullptr;

	if (!uFnInitInputSystem)
	{
		uFnInitInputSystem = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.InitInputSystem");
	}

	AGearboxPlayerController_eventInitInputSystem_Params InitInputSystem_Params;
	memset(&InitInputSystem_Params, 0, sizeof(InitInputSystem_Params));

	this->ProcessEvent(uFnInitInputSystem, &InitInputSystem_Params, nullptr);
};

// Function GearboxFramework.GearboxPlayerController.NoTargetAll
// [0x12030200] (FUNC_Exec | FUNC_Invariant | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void AGearboxPlayerController::NoTargetAll()
{
	static UFunction* uFnNoTargetAll = nullptr;

	if (!uFnNoTargetAll)
	{
		uFnNoTargetAll = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.NoTargetAll");
	}

	AGearboxPlayerController_execNoTargetAll_Params NoTargetAll_Params;
	memset(&NoTargetAll_Params, 0, sizeof(NoTargetAll_Params));

	this->ProcessEvent(uFnNoTargetAll, &NoTargetAll_Params, nullptr);
};

// Function GearboxFramework.GearboxPlayerController.NoTarget
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void AGearboxPlayerController::NoTarget()
{
	static UFunction* uFnNoTarget = nullptr;

	if (!uFnNoTarget)
	{
		uFnNoTarget = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.NoTarget");
	}

	AGearboxPlayerController_execNoTarget_Params NoTarget_Params;
	memset(&NoTarget_Params, 0, sizeof(NoTarget_Params));

	this->ProcessEvent(uFnNoTarget, &NoTarget_Params, nullptr);
};

// Function GearboxFramework.GearboxPlayerController.Possess
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class APawn*                   aPawn                          (CPF_Parm)
// bool                           bVehicleTransition             (CPF_Parm)

void AGearboxPlayerController::Possess(class APawn* aPawn, bool bVehicleTransition)
{
	static UFunction* uFnPossess = nullptr;

	if (!uFnPossess)
	{
		uFnPossess = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.Possess");
	}

	AGearboxPlayerController_execPossess_Params Possess_Params;
	memset(&Possess_Params, 0, sizeof(Possess_Params));
	memcpy_s(&Possess_Params.aPawn, sizeof(Possess_Params.aPawn), &aPawn, sizeof(aPawn));
	Possess_Params.bVehicleTransition = bVehicleTransition;

	this->ProcessEvent(uFnPossess, &Possess_Params, nullptr);
};

// Function GearboxFramework.GearboxPlayerController.DontTarget
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           bModeFlag                      (CPF_Parm)

void AGearboxPlayerController::DontTarget(bool bModeFlag)
{
	static UFunction* uFnDontTarget = nullptr;

	if (!uFnDontTarget)
	{
		uFnDontTarget = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.DontTarget");
	}

	AGearboxPlayerController_execDontTarget_Params DontTarget_Params;
	memset(&DontTarget_Params, 0, sizeof(DontTarget_Params));
	DontTarget_Params.bModeFlag = bModeFlag;

	this->ProcessEvent(uFnDontTarget, &DontTarget_Params, nullptr);
};

// Function GearboxFramework.GearboxPlayerController.ClientConsoleCommand
// [0xFFFF0000130201C0] (FUNC_Net | FUNC_NetReliable | FUNC_Simulated | FUNC_Public | FUNC_NetClient | FUNC_DLLImport | FUNC_K2Pure | FUNC_NetValidate | FUNC_AllFlags)
// Parameter Info:
// const class FString&           Command                        (CPF_Parm | CPF_NeedCtorLink)

void AGearboxPlayerController::ClientConsoleCommand(const class FString& Command)
{
	static UFunction* uFnClientConsoleCommand = nullptr;

	if (!uFnClientConsoleCommand)
	{
		uFnClientConsoleCommand = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.ClientConsoleCommand");
	}

	AGearboxPlayerController_execClientConsoleCommand_Params ClientConsoleCommand_Params;
	memset(&ClientConsoleCommand_Params, 0, sizeof(ClientConsoleCommand_Params));
	memcpy_s(&ClientConsoleCommand_Params.Command, sizeof(ClientConsoleCommand_Params.Command), &Command, sizeof(Command));

	this->ProcessEvent(uFnClientConsoleCommand, &ClientConsoleCommand_Params, nullptr);
};

// Function GearboxFramework.GearboxPlayerController.IsPlayerAllowingActiveMoment
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool AGearboxPlayerController::IsPlayerAllowingActiveMoment()
{
	static UFunction* uFnIsPlayerAllowingActiveMoment = nullptr;

	if (!uFnIsPlayerAllowingActiveMoment)
	{
		uFnIsPlayerAllowingActiveMoment = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.IsPlayerAllowingActiveMoment");
	}

	AGearboxPlayerController_execIsPlayerAllowingActiveMoment_Params IsPlayerAllowingActiveMoment_Params;
	memset(&IsPlayerAllowingActiveMoment_Params, 0, sizeof(IsPlayerAllowingActiveMoment_Params));

	this->ProcessEvent(uFnIsPlayerAllowingActiveMoment, &IsPlayerAllowingActiveMoment_Params, nullptr);

	return IsPlayerAllowingActiveMoment_Params.ReturnValue;
};

// Function GearboxFramework.GearboxPlayerController.IsActiveMomentRunning
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool AGearboxPlayerController::IsActiveMomentRunning()
{
	static UFunction* uFnIsActiveMomentRunning = nullptr;

	if (!uFnIsActiveMomentRunning)
	{
		uFnIsActiveMomentRunning = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.IsActiveMomentRunning");
	}

	AGearboxPlayerController_execIsActiveMomentRunning_Params IsActiveMomentRunning_Params;
	memset(&IsActiveMomentRunning_Params, 0, sizeof(IsActiveMomentRunning_Params));

	this->ProcessEvent(uFnIsActiveMomentRunning, &IsActiveMomentRunning_Params, nullptr);

	return IsActiveMomentRunning_Params.ReturnValue;
};

// Function GearboxFramework.GearboxPlayerController.UpdateViewLeadingDelta
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[36624])
// Parameter Info:
// struct FVector                 CameraTranslation              (CPF_Const | CPF_Parm | CPF_OutParm)
// struct FQuat                   CameraRotation                 (CPF_Const | CPF_Parm | CPF_OutParm)

void AGearboxPlayerController::UpdateViewLeadingDelta(struct FVector& CameraTranslation, struct FQuat& CameraRotation)
{
	static UFunction* uFnUpdateViewLeadingDelta = nullptr;

	if (!uFnUpdateViewLeadingDelta)
	{
		uFnUpdateViewLeadingDelta = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.UpdateViewLeadingDelta");
	}

	AGearboxPlayerController_execUpdateViewLeadingDelta_Params UpdateViewLeadingDelta_Params;
	memset(&UpdateViewLeadingDelta_Params, 0, sizeof(UpdateViewLeadingDelta_Params));
	memcpy_s(&UpdateViewLeadingDelta_Params.CameraTranslation, sizeof(UpdateViewLeadingDelta_Params.CameraTranslation), &CameraTranslation, sizeof(CameraTranslation));
	memcpy_s(&UpdateViewLeadingDelta_Params.CameraRotation, sizeof(UpdateViewLeadingDelta_Params.CameraRotation), &CameraRotation, sizeof(CameraRotation));

	uFnUpdateViewLeadingDelta->iNative = 0;
	uFnUpdateViewLeadingDelta->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnUpdateViewLeadingDelta, &UpdateViewLeadingDelta_Params, nullptr);
	uFnUpdateViewLeadingDelta->FunctionFlags |= 0x400;
	uFnUpdateViewLeadingDelta->iNative = 36624;

	memcpy_s(&CameraTranslation, sizeof(CameraTranslation), &UpdateViewLeadingDelta_Params.CameraTranslation, sizeof(UpdateViewLeadingDelta_Params.CameraTranslation));
	memcpy_s(&CameraRotation, sizeof(CameraRotation), &UpdateViewLeadingDelta_Params.CameraRotation, sizeof(UpdateViewLeadingDelta_Params.CameraRotation));
};

// Function GearboxFramework.GearboxPlayerController.UpdateViewModelTransform
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[36625])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FVector                 ViewModelLocation              (CPF_Const | CPF_Parm | CPF_OutParm)
// struct FQuat                   ViewModelRotation              (CPF_Const | CPF_Parm | CPF_OutParm)

bool AGearboxPlayerController::UpdateViewModelTransform(struct FVector& ViewModelLocation, struct FQuat& ViewModelRotation)
{
	static UFunction* uFnUpdateViewModelTransform = nullptr;

	if (!uFnUpdateViewModelTransform)
	{
		uFnUpdateViewModelTransform = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.UpdateViewModelTransform");
	}

	AGearboxPlayerController_execUpdateViewModelTransform_Params UpdateViewModelTransform_Params;
	memset(&UpdateViewModelTransform_Params, 0, sizeof(UpdateViewModelTransform_Params));
	memcpy_s(&UpdateViewModelTransform_Params.ViewModelLocation, sizeof(UpdateViewModelTransform_Params.ViewModelLocation), &ViewModelLocation, sizeof(ViewModelLocation));
	memcpy_s(&UpdateViewModelTransform_Params.ViewModelRotation, sizeof(UpdateViewModelTransform_Params.ViewModelRotation), &ViewModelRotation, sizeof(ViewModelRotation));

	uFnUpdateViewModelTransform->iNative = 0;
	uFnUpdateViewModelTransform->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnUpdateViewModelTransform, &UpdateViewModelTransform_Params, nullptr);
	uFnUpdateViewModelTransform->FunctionFlags |= 0x400;
	uFnUpdateViewModelTransform->iNative = 36625;

	memcpy_s(&ViewModelLocation, sizeof(ViewModelLocation), &UpdateViewModelTransform_Params.ViewModelLocation, sizeof(UpdateViewModelTransform_Params.ViewModelLocation));
	memcpy_s(&ViewModelRotation, sizeof(ViewModelRotation), &UpdateViewModelTransform_Params.ViewModelRotation, sizeof(UpdateViewModelTransform_Params.ViewModelRotation));

	return UpdateViewModelTransform_Params.ReturnValue;
};

// Function GearboxFramework.GearboxPlayerController.StopViewShaking
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36310])
// Parameter Info:

void AGearboxPlayerController::StopViewShaking()
{
	static UFunction* uFnStopViewShaking = nullptr;

	if (!uFnStopViewShaking)
	{
		uFnStopViewShaking = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.StopViewShaking");
	}

	AGearboxPlayerController_execStopViewShaking_Params StopViewShaking_Params;
	memset(&StopViewShaking_Params, 0, sizeof(StopViewShaking_Params));

	uFnStopViewShaking->iNative = 0;
	uFnStopViewShaking->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnStopViewShaking, &StopViewShaking_Params, nullptr);
	uFnStopViewShaking->FunctionFlags |= 0x400;
	uFnStopViewShaking->iNative = 36310;
};

// Function GearboxFramework.GearboxPlayerController.OnCameraShake
// [0x12020002] (FUNC_Defined | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UGearboxSeqAct_CameraShake* ShakeAction                    (CPF_Parm)

void AGearboxPlayerController::OnCameraShake(class UGearboxSeqAct_CameraShake* ShakeAction)
{
	static UFunction* uFnOnCameraShake = nullptr;

	if (!uFnOnCameraShake)
	{
		uFnOnCameraShake = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.OnCameraShake");
	}

	AGearboxPlayerController_execOnCameraShake_Params OnCameraShake_Params;
	memset(&OnCameraShake_Params, 0, sizeof(OnCameraShake_Params));
	memcpy_s(&OnCameraShake_Params.ShakeAction, sizeof(OnCameraShake_Params.ShakeAction), &ShakeAction, sizeof(ShakeAction));

	this->ProcessEvent(uFnOnCameraShake, &OnCameraShake_Params, nullptr);
};

// Function GearboxFramework.GearboxPlayerController.ShakeView
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35945])
// Parameter Info:
// const struct FGearboxViewShakeInfo& NewViewShake                   (CPF_Parm)

void AGearboxPlayerController::ShakeView(const struct FGearboxViewShakeInfo& NewViewShake)
{
	static UFunction* uFnShakeView = nullptr;

	if (!uFnShakeView)
	{
		uFnShakeView = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.ShakeView");
	}

	AGearboxPlayerController_execShakeView_Params ShakeView_Params;
	memset(&ShakeView_Params, 0, sizeof(ShakeView_Params));
	memcpy_s(&ShakeView_Params.NewViewShake, sizeof(ShakeView_Params.NewViewShake), &NewViewShake, sizeof(NewViewShake));

	uFnShakeView->iNative = 0;
	uFnShakeView->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnShakeView, &ShakeView_Params, nullptr);
	uFnShakeView->FunctionFlags |= 0x400;
	uFnShakeView->iNative = 35945;
};

// Function GearboxFramework.GearboxPlayerController.ClientDamageShake
// [0xFFFF0000130201C0] (FUNC_Net | FUNC_NetReliable | FUNC_Simulated | FUNC_Public | FUNC_NetClient | FUNC_DLLImport | FUNC_K2Pure | FUNC_NetValidate | FUNC_AllFlags)
// Parameter Info:
// int32_t                        Damage                         (CPF_Parm)

void AGearboxPlayerController::ClientDamageShake(int32_t Damage)
{
	static UFunction* uFnClientDamageShake = nullptr;

	if (!uFnClientDamageShake)
	{
		uFnClientDamageShake = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.ClientDamageShake");
	}

	AGearboxPlayerController_execClientDamageShake_Params ClientDamageShake_Params;
	memset(&ClientDamageShake_Params, 0, sizeof(ClientDamageShake_Params));
	memcpy_s(&ClientDamageShake_Params.Damage, sizeof(ClientDamageShake_Params.Damage), &Damage, sizeof(Damage));

	this->ProcessEvent(uFnClientDamageShake, &ClientDamageShake_Params, nullptr);
};

// Function GearboxFramework.GearboxPlayerController.ConsoleEcho
// [0x12024000] (FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const class FString&           Text                           (CPF_Parm | CPF_NeedCtorLink)
// bool                           bLogOutput                     (CPF_OptionalParm | CPF_Parm)

void AGearboxPlayerController::ConsoleEcho(const class FString& Text, bool bLogOutput)
{
	static UFunction* uFnConsoleEcho = nullptr;

	if (!uFnConsoleEcho)
	{
		uFnConsoleEcho = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.ConsoleEcho");
	}

	AGearboxPlayerController_execConsoleEcho_Params ConsoleEcho_Params;
	memset(&ConsoleEcho_Params, 0, sizeof(ConsoleEcho_Params));
	memcpy_s(&ConsoleEcho_Params.Text, sizeof(ConsoleEcho_Params.Text), &Text, sizeof(Text));
	ConsoleEcho_Params.bLogOutput = bLogOutput;

	this->ProcessEvent(uFnConsoleEcho, &ConsoleEcho_Params, nullptr);
};

// Function GearboxFramework.GearboxPlayerController.Initialize
// [0x12020100] (FUNC_Simulated | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void AGearboxPlayerController::Initialize()
{
	static UFunction* uFnInitialize = nullptr;

	if (!uFnInitialize)
	{
		uFnInitialize = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.Initialize");
	}

	AGearboxPlayerController_execInitialize_Params Initialize_Params;
	memset(&Initialize_Params, 0, sizeof(Initialize_Params));

	this->ProcessEvent(uFnInitialize, &Initialize_Params, nullptr);
};

// Function GearboxFramework.GearboxPlayerController.PostBeginPlay
// [0x12020100] (FUNC_Simulated | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void AGearboxPlayerController::PostBeginPlay()
{
	static UFunction* uFnPostBeginPlay = nullptr;

	if (!uFnPostBeginPlay)
	{
		uFnPostBeginPlay = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.PostBeginPlay");
	}

	AGearboxPlayerController_execPostBeginPlay_Params PostBeginPlay_Params;
	memset(&PostBeginPlay_Params, 0, sizeof(PostBeginPlay_Params));

	this->ProcessEvent(uFnPostBeginPlay, &PostBeginPlay_Params, nullptr);
};

// Function GearboxFramework.GearboxPlayerController.GenerateNewSessionGuid
// [0x00080401] (FUNC_Final | FUNC_Native | FUNC_Protected | FUNC_AllFlags) (iNative[34010])
// Parameter Info:

void AGearboxPlayerController::GenerateNewSessionGuid()
{
	static UFunction* uFnGenerateNewSessionGuid = nullptr;

	if (!uFnGenerateNewSessionGuid)
	{
		uFnGenerateNewSessionGuid = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.GenerateNewSessionGuid");
	}

	AGearboxPlayerController_execGenerateNewSessionGuid_Params GenerateNewSessionGuid_Params;
	memset(&GenerateNewSessionGuid_Params, 0, sizeof(GenerateNewSessionGuid_Params));

	uFnGenerateNewSessionGuid->iNative = 0;
	uFnGenerateNewSessionGuid->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGenerateNewSessionGuid, &GenerateNewSessionGuid_Params, nullptr);
	uFnGenerateNewSessionGuid->FunctionFlags |= 0x400;
	uFnGenerateNewSessionGuid->iNative = 34010;
};

// Function GearboxFramework.GearboxPlayerController.RemoveAudioEffect
// [0xFFFF0000002204C0] (FUNC_Net | FUNC_NetReliable | FUNC_Native | FUNC_Public | FUNC_NetServer | FUNC_NetValidate | FUNC_AllFlags) (iNative[14856])
// Parameter Info:
// const struct FEnvironmentalEffectInfo& EffectInfo                     (CPF_Parm)

void AGearboxPlayerController::RemoveAudioEffect(const struct FEnvironmentalEffectInfo& EffectInfo)
{
	static UFunction* uFnRemoveAudioEffect = nullptr;

	if (!uFnRemoveAudioEffect)
	{
		uFnRemoveAudioEffect = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.RemoveAudioEffect");
	}

	AGearboxPlayerController_execRemoveAudioEffect_Params RemoveAudioEffect_Params;
	memset(&RemoveAudioEffect_Params, 0, sizeof(RemoveAudioEffect_Params));
	memcpy_s(&RemoveAudioEffect_Params.EffectInfo, sizeof(RemoveAudioEffect_Params.EffectInfo), &EffectInfo, sizeof(EffectInfo));

	uFnRemoveAudioEffect->iNative = 0;
	uFnRemoveAudioEffect->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRemoveAudioEffect, &RemoveAudioEffect_Params, nullptr);
	uFnRemoveAudioEffect->FunctionFlags |= 0x400;
	uFnRemoveAudioEffect->iNative = 14856;
};

// Function GearboxFramework.GearboxPlayerController.ApplyAudioEffect
// [0xFFFF0000002204C0] (FUNC_Net | FUNC_NetReliable | FUNC_Native | FUNC_Public | FUNC_NetServer | FUNC_NetValidate | FUNC_AllFlags) (iNative[14801])
// Parameter Info:
// const struct FEnvironmentalEffectInfo& EffectInfo                     (CPF_Parm)

void AGearboxPlayerController::ApplyAudioEffect(const struct FEnvironmentalEffectInfo& EffectInfo)
{
	static UFunction* uFnApplyAudioEffect = nullptr;

	if (!uFnApplyAudioEffect)
	{
		uFnApplyAudioEffect = UFunction::FindFunction("Function GearboxFramework.GearboxPlayerController.ApplyAudioEffect");
	}

	AGearboxPlayerController_execApplyAudioEffect_Params ApplyAudioEffect_Params;
	memset(&ApplyAudioEffect_Params, 0, sizeof(ApplyAudioEffect_Params));
	memcpy_s(&ApplyAudioEffect_Params.EffectInfo, sizeof(ApplyAudioEffect_Params.EffectInfo), &EffectInfo, sizeof(EffectInfo));

	uFnApplyAudioEffect->iNative = 0;
	uFnApplyAudioEffect->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnApplyAudioEffect, &ApplyAudioEffect_Params, nullptr);
	uFnApplyAudioEffect->FunctionFlags |= 0x400;
	uFnApplyAudioEffect->iNative = 14801;
};

// Function GearboxFramework.GearboxCheatManager.AIHoldTypes
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UGearboxCheatManager::AIHoldTypes()
{
	static UFunction* uFnAIHoldTypes = nullptr;

	if (!uFnAIHoldTypes)
	{
		uFnAIHoldTypes = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.AIHoldTypes");
	}

	UGearboxCheatManager_execAIHoldTypes_Params AIHoldTypes_Params;
	memset(&AIHoldTypes_Params, 0, sizeof(AIHoldTypes_Params));

	this->ProcessEvent(uFnAIHoldTypes, &AIHoldTypes_Params, nullptr);
};

// Function GearboxFramework.GearboxCheatManager.AIHoldReleaseAll
// [0x12024200] (FUNC_Exec | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FName&            HoldType                       (CPF_Parm)
// const struct FName&            Reason                         (CPF_OptionalParm | CPF_Parm)

void UGearboxCheatManager::AIHoldReleaseAll(const struct FName& HoldType, const struct FName& Reason)
{
	static UFunction* uFnAIHoldReleaseAll = nullptr;

	if (!uFnAIHoldReleaseAll)
	{
		uFnAIHoldReleaseAll = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.AIHoldReleaseAll");
	}

	UGearboxCheatManager_execAIHoldReleaseAll_Params AIHoldReleaseAll_Params;
	memset(&AIHoldReleaseAll_Params, 0, sizeof(AIHoldReleaseAll_Params));
	memcpy_s(&AIHoldReleaseAll_Params.HoldType, sizeof(AIHoldReleaseAll_Params.HoldType), &HoldType, sizeof(HoldType));
	memcpy_s(&AIHoldReleaseAll_Params.Reason, sizeof(AIHoldReleaseAll_Params.Reason), &Reason, sizeof(Reason));

	this->ProcessEvent(uFnAIHoldReleaseAll, &AIHoldReleaseAll_Params, nullptr);
};

// Function GearboxFramework.GearboxCheatManager.AIHoldAll
// [0x12024200] (FUNC_Exec | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FName&            HoldType                       (CPF_Parm)
// const struct FName&            Reason                         (CPF_OptionalParm | CPF_Parm)

void UGearboxCheatManager::AIHoldAll(const struct FName& HoldType, const struct FName& Reason)
{
	static UFunction* uFnAIHoldAll = nullptr;

	if (!uFnAIHoldAll)
	{
		uFnAIHoldAll = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.AIHoldAll");
	}

	UGearboxCheatManager_execAIHoldAll_Params AIHoldAll_Params;
	memset(&AIHoldAll_Params, 0, sizeof(AIHoldAll_Params));
	memcpy_s(&AIHoldAll_Params.HoldType, sizeof(AIHoldAll_Params.HoldType), &HoldType, sizeof(HoldType));
	memcpy_s(&AIHoldAll_Params.Reason, sizeof(AIHoldAll_Params.Reason), &Reason, sizeof(Reason));

	this->ProcessEvent(uFnAIHoldAll, &AIHoldAll_Params, nullptr);
};

// Function GearboxFramework.GearboxCheatManager.AIHoldRelease
// [0x12024200] (FUNC_Exec | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FName&            HoldType                       (CPF_Parm)
// const struct FName&            Reason                         (CPF_OptionalParm | CPF_Parm)

void UGearboxCheatManager::AIHoldRelease(const struct FName& HoldType, const struct FName& Reason)
{
	static UFunction* uFnAIHoldRelease = nullptr;

	if (!uFnAIHoldRelease)
	{
		uFnAIHoldRelease = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.AIHoldRelease");
	}

	UGearboxCheatManager_execAIHoldRelease_Params AIHoldRelease_Params;
	memset(&AIHoldRelease_Params, 0, sizeof(AIHoldRelease_Params));
	memcpy_s(&AIHoldRelease_Params.HoldType, sizeof(AIHoldRelease_Params.HoldType), &HoldType, sizeof(HoldType));
	memcpy_s(&AIHoldRelease_Params.Reason, sizeof(AIHoldRelease_Params.Reason), &Reason, sizeof(Reason));

	this->ProcessEvent(uFnAIHoldRelease, &AIHoldRelease_Params, nullptr);
};

// Function GearboxFramework.GearboxCheatManager.AIHold
// [0x12024200] (FUNC_Exec | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FName&            HoldType                       (CPF_Parm)
// const struct FName&            Reason                         (CPF_OptionalParm | CPF_Parm)

void UGearboxCheatManager::AIHold(const struct FName& HoldType, const struct FName& Reason)
{
	static UFunction* uFnAIHold = nullptr;

	if (!uFnAIHold)
	{
		uFnAIHold = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.AIHold");
	}

	UGearboxCheatManager_execAIHold_Params AIHold_Params;
	memset(&AIHold_Params, 0, sizeof(AIHold_Params));
	memcpy_s(&AIHold_Params.HoldType, sizeof(AIHold_Params.HoldType), &HoldType, sizeof(HoldType));
	memcpy_s(&AIHold_Params.Reason, sizeof(AIHold_Params.Reason), &Reason, sizeof(Reason));

	this->ProcessEvent(uFnAIHold, &AIHold_Params, nullptr);
};

// Function GearboxFramework.GearboxCheatManager.AIOpenAITree
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UGearboxCheatManager::AIOpenAITree()
{
	static UFunction* uFnAIOpenAITree = nullptr;

	if (!uFnAIOpenAITree)
	{
		uFnAIOpenAITree = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.AIOpenAITree");
	}

	UGearboxCheatManager_execAIOpenAITree_Params AIOpenAITree_Params;
	memset(&AIOpenAITree_Params, 0, sizeof(AIOpenAITree_Params));

	this->ProcessEvent(uFnAIOpenAITree, &AIOpenAITree_Params, nullptr);
};

// Function GearboxFramework.GearboxCheatManager.AIOpenAIDef
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UGearboxCheatManager::AIOpenAIDef()
{
	static UFunction* uFnAIOpenAIDef = nullptr;

	if (!uFnAIOpenAIDef)
	{
		uFnAIOpenAIDef = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.AIOpenAIDef");
	}

	UGearboxCheatManager_execAIOpenAIDef_Params AIOpenAIDef_Params;
	memset(&AIOpenAIDef_Params, 0, sizeof(AIOpenAIDef_Params));

	this->ProcessEvent(uFnAIOpenAIDef, &AIOpenAIDef_Params, nullptr);
};

// Function GearboxFramework.GearboxCheatManager.AIOpenTargetingDef
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UGearboxCheatManager::AIOpenTargetingDef()
{
	static UFunction* uFnAIOpenTargetingDef = nullptr;

	if (!uFnAIOpenTargetingDef)
	{
		uFnAIOpenTargetingDef = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.AIOpenTargetingDef");
	}

	UGearboxCheatManager_execAIOpenTargetingDef_Params AIOpenTargetingDef_Params;
	memset(&AIOpenTargetingDef_Params, 0, sizeof(AIOpenTargetingDef_Params));

	this->ProcessEvent(uFnAIOpenTargetingDef, &AIOpenTargetingDef_Params, nullptr);
};

// Function GearboxFramework.GearboxCheatManager.AIOpenBalanceDef
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UGearboxCheatManager::AIOpenBalanceDef()
{
	static UFunction* uFnAIOpenBalanceDef = nullptr;

	if (!uFnAIOpenBalanceDef)
	{
		uFnAIOpenBalanceDef = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.AIOpenBalanceDef");
	}

	UGearboxCheatManager_execAIOpenBalanceDef_Params AIOpenBalanceDef_Params;
	memset(&AIOpenBalanceDef_Params, 0, sizeof(AIOpenBalanceDef_Params));

	this->ProcessEvent(uFnAIOpenBalanceDef, &AIOpenBalanceDef_Params, nullptr);
};

// Function GearboxFramework.GearboxCheatManager.AIOpenSpawnDef
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UGearboxCheatManager::AIOpenSpawnDef()
{
	static UFunction* uFnAIOpenSpawnDef = nullptr;

	if (!uFnAIOpenSpawnDef)
	{
		uFnAIOpenSpawnDef = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.AIOpenSpawnDef");
	}

	UGearboxCheatManager_execAIOpenSpawnDef_Params AIOpenSpawnDef_Params;
	memset(&AIOpenSpawnDef_Params, 0, sizeof(AIOpenSpawnDef_Params));

	this->ProcessEvent(uFnAIOpenSpawnDef, &AIOpenSpawnDef_Params, nullptr);
};

// Function GearboxFramework.GearboxCheatManager.AIOpenPawnDef
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UGearboxCheatManager::AIOpenPawnDef()
{
	static UFunction* uFnAIOpenPawnDef = nullptr;

	if (!uFnAIOpenPawnDef)
	{
		uFnAIOpenPawnDef = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.AIOpenPawnDef");
	}

	UGearboxCheatManager_execAIOpenPawnDef_Params AIOpenPawnDef_Params;
	memset(&AIOpenPawnDef_Params, 0, sizeof(AIOpenPawnDef_Params));

	this->ProcessEvent(uFnAIOpenPawnDef, &AIOpenPawnDef_Params, nullptr);
};

// Function GearboxFramework.GearboxCheatManager.AISyncAIDef
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UGearboxCheatManager::AISyncAIDef()
{
	static UFunction* uFnAISyncAIDef = nullptr;

	if (!uFnAISyncAIDef)
	{
		uFnAISyncAIDef = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.AISyncAIDef");
	}

	UGearboxCheatManager_execAISyncAIDef_Params AISyncAIDef_Params;
	memset(&AISyncAIDef_Params, 0, sizeof(AISyncAIDef_Params));

	this->ProcessEvent(uFnAISyncAIDef, &AISyncAIDef_Params, nullptr);
};

// Function GearboxFramework.GearboxCheatManager.AISyncTargetingDef
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UGearboxCheatManager::AISyncTargetingDef()
{
	static UFunction* uFnAISyncTargetingDef = nullptr;

	if (!uFnAISyncTargetingDef)
	{
		uFnAISyncTargetingDef = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.AISyncTargetingDef");
	}

	UGearboxCheatManager_execAISyncTargetingDef_Params AISyncTargetingDef_Params;
	memset(&AISyncTargetingDef_Params, 0, sizeof(AISyncTargetingDef_Params));

	this->ProcessEvent(uFnAISyncTargetingDef, &AISyncTargetingDef_Params, nullptr);
};

// Function GearboxFramework.GearboxCheatManager.AISyncBalanceDef
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UGearboxCheatManager::AISyncBalanceDef()
{
	static UFunction* uFnAISyncBalanceDef = nullptr;

	if (!uFnAISyncBalanceDef)
	{
		uFnAISyncBalanceDef = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.AISyncBalanceDef");
	}

	UGearboxCheatManager_execAISyncBalanceDef_Params AISyncBalanceDef_Params;
	memset(&AISyncBalanceDef_Params, 0, sizeof(AISyncBalanceDef_Params));

	this->ProcessEvent(uFnAISyncBalanceDef, &AISyncBalanceDef_Params, nullptr);
};

// Function GearboxFramework.GearboxCheatManager.AISyncSpawnDef
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UGearboxCheatManager::AISyncSpawnDef()
{
	static UFunction* uFnAISyncSpawnDef = nullptr;

	if (!uFnAISyncSpawnDef)
	{
		uFnAISyncSpawnDef = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.AISyncSpawnDef");
	}

	UGearboxCheatManager_execAISyncSpawnDef_Params AISyncSpawnDef_Params;
	memset(&AISyncSpawnDef_Params, 0, sizeof(AISyncSpawnDef_Params));

	this->ProcessEvent(uFnAISyncSpawnDef, &AISyncSpawnDef_Params, nullptr);
};

// Function GearboxFramework.GearboxCheatManager.AISyncPawnDef
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UGearboxCheatManager::AISyncPawnDef()
{
	static UFunction* uFnAISyncPawnDef = nullptr;

	if (!uFnAISyncPawnDef)
	{
		uFnAISyncPawnDef = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.AISyncPawnDef");
	}

	UGearboxCheatManager_execAISyncPawnDef_Params AISyncPawnDef_Params;
	memset(&AISyncPawnDef_Params, 0, sizeof(AISyncPawnDef_Params));

	this->ProcessEvent(uFnAISyncPawnDef, &AISyncPawnDef_Params, nullptr);
};

// Function GearboxFramework.GearboxCheatManager.AIShowActions
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UGearboxCheatManager::AIShowActions()
{
	static UFunction* uFnAIShowActions = nullptr;

	if (!uFnAIShowActions)
	{
		uFnAIShowActions = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.AIShowActions");
	}

	UGearboxCheatManager_execAIShowActions_Params AIShowActions_Params;
	memset(&AIShowActions_Params, 0, sizeof(AIShowActions_Params));

	this->ProcessEvent(uFnAIShowActions, &AIShowActions_Params, nullptr);
};

// Function GearboxFramework.GearboxCheatManager.AISetDisabledActions
// [0x12024200] (FUNC_Exec | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const class FString&           ActionTagNames                 (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UGearboxCheatManager::AISetDisabledActions(const class FString& ActionTagNames)
{
	static UFunction* uFnAISetDisabledActions = nullptr;

	if (!uFnAISetDisabledActions)
	{
		uFnAISetDisabledActions = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.AISetDisabledActions");
	}

	UGearboxCheatManager_execAISetDisabledActions_Params AISetDisabledActions_Params;
	memset(&AISetDisabledActions_Params, 0, sizeof(AISetDisabledActions_Params));
	memcpy_s(&AISetDisabledActions_Params.ActionTagNames, sizeof(AISetDisabledActions_Params.ActionTagNames), &ActionTagNames, sizeof(ActionTagNames));

	this->ProcessEvent(uFnAISetDisabledActions, &AISetDisabledActions_Params, nullptr);
};

// Function GearboxFramework.GearboxCheatManager.AISetEnabledActions
// [0x12024200] (FUNC_Exec | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const class FString&           ActionTagNames                 (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UGearboxCheatManager::AISetEnabledActions(const class FString& ActionTagNames)
{
	static UFunction* uFnAISetEnabledActions = nullptr;

	if (!uFnAISetEnabledActions)
	{
		uFnAISetEnabledActions = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.AISetEnabledActions");
	}

	UGearboxCheatManager_execAISetEnabledActions_Params AISetEnabledActions_Params;
	memset(&AISetEnabledActions_Params, 0, sizeof(AISetEnabledActions_Params));
	memcpy_s(&AISetEnabledActions_Params.ActionTagNames, sizeof(AISetEnabledActions_Params.ActionTagNames), &ActionTagNames, sizeof(ActionTagNames));

	this->ProcessEvent(uFnAISetEnabledActions, &AISetEnabledActions_Params, nullptr);
};

// Function GearboxFramework.GearboxCheatManager.AIDisableActions
// [0x12024200] (FUNC_Exec | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const class FString&           ActionTagNames                 (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UGearboxCheatManager::AIDisableActions(const class FString& ActionTagNames)
{
	static UFunction* uFnAIDisableActions = nullptr;

	if (!uFnAIDisableActions)
	{
		uFnAIDisableActions = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.AIDisableActions");
	}

	UGearboxCheatManager_execAIDisableActions_Params AIDisableActions_Params;
	memset(&AIDisableActions_Params, 0, sizeof(AIDisableActions_Params));
	memcpy_s(&AIDisableActions_Params.ActionTagNames, sizeof(AIDisableActions_Params.ActionTagNames), &ActionTagNames, sizeof(ActionTagNames));

	this->ProcessEvent(uFnAIDisableActions, &AIDisableActions_Params, nullptr);
};

// Function GearboxFramework.GearboxCheatManager.AIEnableActions
// [0x12024200] (FUNC_Exec | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const class FString&           ActionTagNames                 (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UGearboxCheatManager::AIEnableActions(const class FString& ActionTagNames)
{
	static UFunction* uFnAIEnableActions = nullptr;

	if (!uFnAIEnableActions)
	{
		uFnAIEnableActions = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.AIEnableActions");
	}

	UGearboxCheatManager_execAIEnableActions_Params AIEnableActions_Params;
	memset(&AIEnableActions_Params, 0, sizeof(AIEnableActions_Params));
	memcpy_s(&AIEnableActions_Params.ActionTagNames, sizeof(AIEnableActions_Params.ActionTagNames), &ActionTagNames, sizeof(ActionTagNames));

	this->ProcessEvent(uFnAIEnableActions, &AIEnableActions_Params, nullptr);
};

// Function GearboxFramework.GearboxCheatManager.DebugAIBreadCrumbs
// [0x00020600] (FUNC_Exec | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[33031])
// Parameter Info:

void UGearboxCheatManager::DebugAIBreadCrumbs()
{
	static UFunction* uFnDebugAIBreadCrumbs = nullptr;

	if (!uFnDebugAIBreadCrumbs)
	{
		uFnDebugAIBreadCrumbs = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.DebugAIBreadCrumbs");
	}

	UGearboxCheatManager_execDebugAIBreadCrumbs_Params DebugAIBreadCrumbs_Params;
	memset(&DebugAIBreadCrumbs_Params, 0, sizeof(DebugAIBreadCrumbs_Params));

	uFnDebugAIBreadCrumbs->iNative = 0;
	uFnDebugAIBreadCrumbs->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnDebugAIBreadCrumbs, &DebugAIBreadCrumbs_Params, nullptr);
	uFnDebugAIBreadCrumbs->FunctionFlags |= 0x400;
	uFnDebugAIBreadCrumbs->iNative = 33031;
};

// Function GearboxFramework.GearboxCheatManager.DebugAwareness
// [0x00020600] (FUNC_Exec | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[33041])
// Parameter Info:

void UGearboxCheatManager::DebugAwareness()
{
	static UFunction* uFnDebugAwareness = nullptr;

	if (!uFnDebugAwareness)
	{
		uFnDebugAwareness = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.DebugAwareness");
	}

	UGearboxCheatManager_execDebugAwareness_Params DebugAwareness_Params;
	memset(&DebugAwareness_Params, 0, sizeof(DebugAwareness_Params));

	uFnDebugAwareness->iNative = 0;
	uFnDebugAwareness->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnDebugAwareness, &DebugAwareness_Params, nullptr);
	uFnDebugAwareness->FunctionFlags |= 0x400;
	uFnDebugAwareness->iNative = 33041;
};

// Function GearboxFramework.GearboxCheatManager.ToggleAISight
// [0x00020600] (FUNC_Exec | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36522])
// Parameter Info:

void UGearboxCheatManager::ToggleAISight()
{
	static UFunction* uFnToggleAISight = nullptr;

	if (!uFnToggleAISight)
	{
		uFnToggleAISight = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.ToggleAISight");
	}

	UGearboxCheatManager_execToggleAISight_Params ToggleAISight_Params;
	memset(&ToggleAISight_Params, 0, sizeof(ToggleAISight_Params));

	uFnToggleAISight->iNative = 0;
	uFnToggleAISight->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnToggleAISight, &ToggleAISight_Params, nullptr);
	uFnToggleAISight->FunctionFlags |= 0x400;
	uFnToggleAISight->iNative = 36522;
};

// Function GearboxFramework.GearboxCheatManager.YUNoCover
// [0x00020600] (FUNC_Exec | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36758])
// Parameter Info:

void UGearboxCheatManager::YUNoCover()
{
	static UFunction* uFnYUNoCover = nullptr;

	if (!uFnYUNoCover)
	{
		uFnYUNoCover = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.YUNoCover");
	}

	UGearboxCheatManager_execYUNoCover_Params YUNoCover_Params;
	memset(&YUNoCover_Params, 0, sizeof(YUNoCover_Params));

	uFnYUNoCover->iNative = 0;
	uFnYUNoCover->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnYUNoCover, &YUNoCover_Params, nullptr);
	uFnYUNoCover->FunctionFlags |= 0x400;
	uFnYUNoCover->iNative = 36758;
};

// Function GearboxFramework.GearboxCheatManager.YUNoPerch
// [0x00024600] (FUNC_Exec | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[36759])
// Parameter Info:
// float                          CheckRadius                    (CPF_OptionalParm | CPF_Parm)

void UGearboxCheatManager::YUNoPerch(float CheckRadius)
{
	static UFunction* uFnYUNoPerch = nullptr;

	if (!uFnYUNoPerch)
	{
		uFnYUNoPerch = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.YUNoPerch");
	}

	UGearboxCheatManager_execYUNoPerch_Params YUNoPerch_Params;
	memset(&YUNoPerch_Params, 0, sizeof(YUNoPerch_Params));
	memcpy_s(&YUNoPerch_Params.CheckRadius, sizeof(YUNoPerch_Params.CheckRadius), &CheckRadius, sizeof(CheckRadius));

	uFnYUNoPerch->iNative = 0;
	uFnYUNoPerch->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnYUNoPerch, &YUNoPerch_Params, nullptr);
	uFnYUNoPerch->FunctionFlags |= 0x400;
	uFnYUNoPerch->iNative = 36759;
};

// Function GearboxFramework.GearboxCheatManager.ResetFeatureClass
// [0x00020600] (FUNC_Exec | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35717])
// Parameter Info:
// class UClass*                  FeatureClass                   (CPF_Parm)

void UGearboxCheatManager::ResetFeatureClass(class UClass* FeatureClass)
{
	static UFunction* uFnResetFeatureClass = nullptr;

	if (!uFnResetFeatureClass)
	{
		uFnResetFeatureClass = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.ResetFeatureClass");
	}

	UGearboxCheatManager_execResetFeatureClass_Params ResetFeatureClass_Params;
	memset(&ResetFeatureClass_Params, 0, sizeof(ResetFeatureClass_Params));
	memcpy_s(&ResetFeatureClass_Params.FeatureClass, sizeof(ResetFeatureClass_Params.FeatureClass), &FeatureClass, sizeof(FeatureClass));

	uFnResetFeatureClass->iNative = 0;
	uFnResetFeatureClass->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnResetFeatureClass, &ResetFeatureClass_Params, nullptr);
	uFnResetFeatureClass->FunctionFlags |= 0x400;
	uFnResetFeatureClass->iNative = 35717;
};

// Function GearboxFramework.GearboxCheatManager.DebugTargetClusters
// [0x00024600] (FUNC_Exec | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[33075])
// Parameter Info:
// const struct FName&            ClusterName                    (CPF_OptionalParm | CPF_Parm)

void UGearboxCheatManager::DebugTargetClusters(const struct FName& ClusterName)
{
	static UFunction* uFnDebugTargetClusters = nullptr;

	if (!uFnDebugTargetClusters)
	{
		uFnDebugTargetClusters = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.DebugTargetClusters");
	}

	UGearboxCheatManager_execDebugTargetClusters_Params DebugTargetClusters_Params;
	memset(&DebugTargetClusters_Params, 0, sizeof(DebugTargetClusters_Params));
	memcpy_s(&DebugTargetClusters_Params.ClusterName, sizeof(DebugTargetClusters_Params.ClusterName), &ClusterName, sizeof(ClusterName));

	uFnDebugTargetClusters->iNative = 0;
	uFnDebugTargetClusters->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnDebugTargetClusters, &DebugTargetClusters_Params, nullptr);
	uFnDebugTargetClusters->FunctionFlags |= 0x400;
	uFnDebugTargetClusters->iNative = 33075;
};

// Function GearboxFramework.GearboxCheatManager.DebugTerritory
// [0x00020600] (FUNC_Exec | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[33076])
// Parameter Info:

void UGearboxCheatManager::DebugTerritory()
{
	static UFunction* uFnDebugTerritory = nullptr;

	if (!uFnDebugTerritory)
	{
		uFnDebugTerritory = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.DebugTerritory");
	}

	UGearboxCheatManager_execDebugTerritory_Params DebugTerritory_Params;
	memset(&DebugTerritory_Params, 0, sizeof(DebugTerritory_Params));

	uFnDebugTerritory->iNative = 0;
	uFnDebugTerritory->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnDebugTerritory, &DebugTerritory_Params, nullptr);
	uFnDebugTerritory->FunctionFlags |= 0x400;
	uFnDebugTerritory->iNative = 33076;
};

// Function GearboxFramework.GearboxCheatManager.PrintGameObjectPools
// [0x00020600] (FUNC_Exec | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35539])
// Parameter Info:

void UGearboxCheatManager::PrintGameObjectPools()
{
	static UFunction* uFnPrintGameObjectPools = nullptr;

	if (!uFnPrintGameObjectPools)
	{
		uFnPrintGameObjectPools = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.PrintGameObjectPools");
	}

	UGearboxCheatManager_execPrintGameObjectPools_Params PrintGameObjectPools_Params;
	memset(&PrintGameObjectPools_Params, 0, sizeof(PrintGameObjectPools_Params));

	uFnPrintGameObjectPools->iNative = 0;
	uFnPrintGameObjectPools->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPrintGameObjectPools, &PrintGameObjectPools_Params, nullptr);
	uFnPrintGameObjectPools->FunctionFlags |= 0x400;
	uFnPrintGameObjectPools->iNative = 35539;
};

// Function GearboxFramework.GearboxCheatManager.AIScriptedTarget
// [0x00020600] (FUNC_Exec | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[31790])
// Parameter Info:

void UGearboxCheatManager::AIScriptedTarget()
{
	static UFunction* uFnAIScriptedTarget = nullptr;

	if (!uFnAIScriptedTarget)
	{
		uFnAIScriptedTarget = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.AIScriptedTarget");
	}

	UGearboxCheatManager_execAIScriptedTarget_Params AIScriptedTarget_Params;
	memset(&AIScriptedTarget_Params, 0, sizeof(AIScriptedTarget_Params));

	uFnAIScriptedTarget->iNative = 0;
	uFnAIScriptedTarget->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnAIScriptedTarget, &AIScriptedTarget_Params, nullptr);
	uFnAIScriptedTarget->FunctionFlags |= 0x400;
	uFnAIScriptedTarget->iNative = 31790;
};

// Function GearboxFramework.GearboxCheatManager.AIScriptedLook
// [0x00020600] (FUNC_Exec | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[31788])
// Parameter Info:

void UGearboxCheatManager::AIScriptedLook()
{
	static UFunction* uFnAIScriptedLook = nullptr;

	if (!uFnAIScriptedLook)
	{
		uFnAIScriptedLook = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.AIScriptedLook");
	}

	UGearboxCheatManager_execAIScriptedLook_Params AIScriptedLook_Params;
	memset(&AIScriptedLook_Params, 0, sizeof(AIScriptedLook_Params));

	uFnAIScriptedLook->iNative = 0;
	uFnAIScriptedLook->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnAIScriptedLook, &AIScriptedLook_Params, nullptr);
	uFnAIScriptedLook->FunctionFlags |= 0x400;
	uFnAIScriptedLook->iNative = 31788;
};

// Function GearboxFramework.GearboxCheatManager.AIScriptedMove
// [0x00020600] (FUNC_Exec | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[31789])
// Parameter Info:

void UGearboxCheatManager::AIScriptedMove()
{
	static UFunction* uFnAIScriptedMove = nullptr;

	if (!uFnAIScriptedMove)
	{
		uFnAIScriptedMove = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.AIScriptedMove");
	}

	UGearboxCheatManager_execAIScriptedMove_Params AIScriptedMove_Params;
	memset(&AIScriptedMove_Params, 0, sizeof(AIScriptedMove_Params));

	uFnAIScriptedMove->iNative = 0;
	uFnAIScriptedMove->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnAIScriptedMove, &AIScriptedMove_Params, nullptr);
	uFnAIScriptedMove->FunctionFlags |= 0x400;
	uFnAIScriptedMove->iNative = 31789;
};

// Function GearboxFramework.GearboxCheatManager.AIScriptedClear
// [0x00020600] (FUNC_Exec | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[31787])
// Parameter Info:

void UGearboxCheatManager::AIScriptedClear()
{
	static UFunction* uFnAIScriptedClear = nullptr;

	if (!uFnAIScriptedClear)
	{
		uFnAIScriptedClear = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.AIScriptedClear");
	}

	UGearboxCheatManager_execAIScriptedClear_Params AIScriptedClear_Params;
	memset(&AIScriptedClear_Params, 0, sizeof(AIScriptedClear_Params));

	uFnAIScriptedClear->iNative = 0;
	uFnAIScriptedClear->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnAIScriptedClear, &AIScriptedClear_Params, nullptr);
	uFnAIScriptedClear->FunctionFlags |= 0x400;
	uFnAIScriptedClear->iNative = 31787;
};

// Function GearboxFramework.GearboxCheatManager.SpecialMoveSetTime
// [0x00020600] (FUNC_Exec | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36181])
// Parameter Info:
// float                          NewTime                        (CPF_Parm)

void UGearboxCheatManager::SpecialMoveSetTime(float NewTime)
{
	static UFunction* uFnSpecialMoveSetTime = nullptr;

	if (!uFnSpecialMoveSetTime)
	{
		uFnSpecialMoveSetTime = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.SpecialMoveSetTime");
	}

	UGearboxCheatManager_execSpecialMoveSetTime_Params SpecialMoveSetTime_Params;
	memset(&SpecialMoveSetTime_Params, 0, sizeof(SpecialMoveSetTime_Params));
	memcpy_s(&SpecialMoveSetTime_Params.NewTime, sizeof(SpecialMoveSetTime_Params.NewTime), &NewTime, sizeof(NewTime));

	uFnSpecialMoveSetTime->iNative = 0;
	uFnSpecialMoveSetTime->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSpecialMoveSetTime, &SpecialMoveSetTime_Params, nullptr);
	uFnSpecialMoveSetTime->FunctionFlags |= 0x400;
	uFnSpecialMoveSetTime->iNative = 36181;
};

// Function GearboxFramework.GearboxCheatManager.AIClearInfluenceMaps
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UGearboxCheatManager::AIClearInfluenceMaps()
{
	static UFunction* uFnAIClearInfluenceMaps = nullptr;

	if (!uFnAIClearInfluenceMaps)
	{
		uFnAIClearInfluenceMaps = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.AIClearInfluenceMaps");
	}

	UGearboxCheatManager_execAIClearInfluenceMaps_Params AIClearInfluenceMaps_Params;
	memset(&AIClearInfluenceMaps_Params, 0, sizeof(AIClearInfluenceMaps_Params));

	this->ProcessEvent(uFnAIClearInfluenceMaps, &AIClearInfluenceMaps_Params, nullptr);
};

// Function GearboxFramework.GearboxCheatManager.AIUpdateWhilePaused
// [0x12024200] (FUNC_Exec | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// int32_t                        TickCount                      (CPF_OptionalParm | CPF_Parm)

void UGearboxCheatManager::AIUpdateWhilePaused(int32_t TickCount)
{
	static UFunction* uFnAIUpdateWhilePaused = nullptr;

	if (!uFnAIUpdateWhilePaused)
	{
		uFnAIUpdateWhilePaused = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.AIUpdateWhilePaused");
	}

	UGearboxCheatManager_execAIUpdateWhilePaused_Params AIUpdateWhilePaused_Params;
	memset(&AIUpdateWhilePaused_Params, 0, sizeof(AIUpdateWhilePaused_Params));
	memcpy_s(&AIUpdateWhilePaused_Params.TickCount, sizeof(AIUpdateWhilePaused_Params.TickCount), &TickCount, sizeof(TickCount));

	this->ProcessEvent(uFnAIUpdateWhilePaused, &AIUpdateWhilePaused_Params, nullptr);
};

// Function GearboxFramework.GearboxCheatManager.GbxAnimDebug
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UGearboxCheatManager::GbxAnimDebug()
{
	static UFunction* uFnGbxAnimDebug = nullptr;

	if (!uFnGbxAnimDebug)
	{
		uFnGbxAnimDebug = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.GbxAnimDebug");
	}

	UGearboxCheatManager_execGbxAnimDebug_Params GbxAnimDebug_Params;
	memset(&GbxAnimDebug_Params, 0, sizeof(GbxAnimDebug_Params));

	this->ProcessEvent(uFnGbxAnimDebug, &GbxAnimDebug_Params, nullptr);
};

// Function GearboxFramework.GearboxCheatManager.AIConstraintClear
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UGearboxCheatManager::AIConstraintClear()
{
	static UFunction* uFnAIConstraintClear = nullptr;

	if (!uFnAIConstraintClear)
	{
		uFnAIConstraintClear = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.AIConstraintClear");
	}

	UGearboxCheatManager_execAIConstraintClear_Params AIConstraintClear_Params;
	memset(&AIConstraintClear_Params, 0, sizeof(AIConstraintClear_Params));

	this->ProcessEvent(uFnAIConstraintClear, &AIConstraintClear_Params, nullptr);
};

// Function GearboxFramework.GearboxCheatManager.AIConstraintCurr
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UGearboxCheatManager::AIConstraintCurr()
{
	static UFunction* uFnAIConstraintCurr = nullptr;

	if (!uFnAIConstraintCurr)
	{
		uFnAIConstraintCurr = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.AIConstraintCurr");
	}

	UGearboxCheatManager_execAIConstraintCurr_Params AIConstraintCurr_Params;
	memset(&AIConstraintCurr_Params, 0, sizeof(AIConstraintCurr_Params));

	this->ProcessEvent(uFnAIConstraintCurr, &AIConstraintCurr_Params, nullptr);
};

// Function GearboxFramework.GearboxCheatManager.AIConstraintPrev
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UGearboxCheatManager::AIConstraintPrev()
{
	static UFunction* uFnAIConstraintPrev = nullptr;

	if (!uFnAIConstraintPrev)
	{
		uFnAIConstraintPrev = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.AIConstraintPrev");
	}

	UGearboxCheatManager_execAIConstraintPrev_Params AIConstraintPrev_Params;
	memset(&AIConstraintPrev_Params, 0, sizeof(AIConstraintPrev_Params));

	this->ProcessEvent(uFnAIConstraintPrev, &AIConstraintPrev_Params, nullptr);
};

// Function GearboxFramework.GearboxCheatManager.AIConstraintNext
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UGearboxCheatManager::AIConstraintNext()
{
	static UFunction* uFnAIConstraintNext = nullptr;

	if (!uFnAIConstraintNext)
	{
		uFnAIConstraintNext = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.AIConstraintNext");
	}

	UGearboxCheatManager_execAIConstraintNext_Params AIConstraintNext_Params;
	memset(&AIConstraintNext_Params, 0, sizeof(AIConstraintNext_Params));

	this->ProcessEvent(uFnAIConstraintNext, &AIConstraintNext_Params, nullptr);
};

// Function GearboxFramework.GearboxCheatManager.DebugArcLOS
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UGearboxCheatManager::DebugArcLOS()
{
	static UFunction* uFnDebugArcLOS = nullptr;

	if (!uFnDebugArcLOS)
	{
		uFnDebugArcLOS = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.DebugArcLOS");
	}

	UGearboxCheatManager_execDebugArcLOS_Params DebugArcLOS_Params;
	memset(&DebugArcLOS_Params, 0, sizeof(DebugArcLOS_Params));

	this->ProcessEvent(uFnDebugArcLOS, &DebugArcLOS_Params, nullptr);
};

// Function GearboxFramework.GearboxCheatManager.DebugHumanRotation
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UGearboxCheatManager::DebugHumanRotation()
{
	static UFunction* uFnDebugHumanRotation = nullptr;

	if (!uFnDebugHumanRotation)
	{
		uFnDebugHumanRotation = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.DebugHumanRotation");
	}

	UGearboxCheatManager_execDebugHumanRotation_Params DebugHumanRotation_Params;
	memset(&DebugHumanRotation_Params, 0, sizeof(DebugHumanRotation_Params));

	this->ProcessEvent(uFnDebugHumanRotation, &DebugHumanRotation_Params, nullptr);
};

// Function GearboxFramework.GearboxCheatManager.DebugAIRotation
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UGearboxCheatManager::DebugAIRotation()
{
	static UFunction* uFnDebugAIRotation = nullptr;

	if (!uFnDebugAIRotation)
	{
		uFnDebugAIRotation = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.DebugAIRotation");
	}

	UGearboxCheatManager_execDebugAIRotation_Params DebugAIRotation_Params;
	memset(&DebugAIRotation_Params, 0, sizeof(DebugAIRotation_Params));

	this->ProcessEvent(uFnDebugAIRotation, &DebugAIRotation_Params, nullptr);
};

// Function GearboxFramework.GearboxCheatManager.DebugForceUncloak
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UGearboxCheatManager::DebugForceUncloak()
{
	static UFunction* uFnDebugForceUncloak = nullptr;

	if (!uFnDebugForceUncloak)
	{
		uFnDebugForceUncloak = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.DebugForceUncloak");
	}

	UGearboxCheatManager_execDebugForceUncloak_Params DebugForceUncloak_Params;
	memset(&DebugForceUncloak_Params, 0, sizeof(DebugForceUncloak_Params));

	this->ProcessEvent(uFnDebugForceUncloak, &DebugForceUncloak_Params, nullptr);
};

// Function GearboxFramework.GearboxCheatManager.DebugForceCloak
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UGearboxCheatManager::DebugForceCloak()
{
	static UFunction* uFnDebugForceCloak = nullptr;

	if (!uFnDebugForceCloak)
	{
		uFnDebugForceCloak = UFunction::FindFunction("Function GearboxFramework.GearboxCheatManager.DebugForceCloak");
	}

	UGearboxCheatManager_execDebugForceCloak_Params DebugForceCloak_Params;
	memset(&DebugForceCloak_Params, 0, sizeof(DebugForceCloak_Params));

	this->ProcessEvent(uFnDebugForceCloak, &DebugForceCloak_Params, nullptr);
};

// Function GearboxFramework.GearboxData.HasValidShiftAccount
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGearboxData::eventHasValidShiftAccount()
{
	static UFunction* uFnHasValidShiftAccount = nullptr;

	if (!uFnHasValidShiftAccount)
	{
		uFnHasValidShiftAccount = UFunction::FindFunction("Function GearboxFramework.GearboxData.HasValidShiftAccount");
	}

	UGearboxData_eventHasValidShiftAccount_Params HasValidShiftAccount_Params;
	memset(&HasValidShiftAccount_Params, 0, sizeof(HasValidShiftAccount_Params));

	this->ProcessEvent(uFnHasValidShiftAccount, &HasValidShiftAccount_Params, nullptr);

	return HasValidShiftAccount_Params.ReturnValue;
};

// Function GearboxFramework.GearboxData.ProcessArchwayVerification
// [0x12420000] (FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// struct FArchwayResult          Archway                        (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UGearboxData::ProcessArchwayVerification(struct FArchwayResult& Archway)
{
	static UFunction* uFnProcessArchwayVerification = nullptr;

	if (!uFnProcessArchwayVerification)
	{
		uFnProcessArchwayVerification = UFunction::FindFunction("Function GearboxFramework.GearboxData.ProcessArchwayVerification");
	}

	UGearboxData_execProcessArchwayVerification_Params ProcessArchwayVerification_Params;
	memset(&ProcessArchwayVerification_Params, 0, sizeof(ProcessArchwayVerification_Params));
	memcpy_s(&ProcessArchwayVerification_Params.Archway, sizeof(ProcessArchwayVerification_Params.Archway), &Archway, sizeof(Archway));

	this->ProcessEvent(uFnProcessArchwayVerification, &ProcessArchwayVerification_Params, nullptr);

	memcpy_s(&Archway, sizeof(Archway), &ProcessArchwayVerification_Params.Archway, sizeof(ProcessArchwayVerification_Params.Archway));
};

// Function GearboxFramework.GearboxData.CanGetTicket
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGearboxData::CanGetTicket()
{
	static UFunction* uFnCanGetTicket = nullptr;

	if (!uFnCanGetTicket)
	{
		uFnCanGetTicket = UFunction::FindFunction("Function GearboxFramework.GearboxData.CanGetTicket");
	}

	UGearboxData_execCanGetTicket_Params CanGetTicket_Params;
	memset(&CanGetTicket_Params, 0, sizeof(CanGetTicket_Params));

	this->ProcessEvent(uFnCanGetTicket, &CanGetTicket_Params, nullptr);

	return CanGetTicket_Params.ReturnValue;
};

// Function GearboxFramework.GearboxData.EscapeJson
// [0x12022000] (FUNC_Static | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// const class FString&           Input                          (CPF_Parm | CPF_NeedCtorLink)

class FString UGearboxData::EscapeJson(const class FString& Input)
{
	static UFunction* uFnEscapeJson = nullptr;

	if (!uFnEscapeJson)
	{
		uFnEscapeJson = UFunction::FindFunction("Function GearboxFramework.GearboxData.EscapeJson");
	}

	UGearboxData_execEscapeJson_Params EscapeJson_Params;
	memset(&EscapeJson_Params, 0, sizeof(EscapeJson_Params));
	memcpy_s(&EscapeJson_Params.Input, sizeof(EscapeJson_Params.Input), &Input, sizeof(Input));

	UGearboxData::StaticClass()->ProcessEvent(uFnEscapeJson, &EscapeJson_Params, nullptr);

	return EscapeJson_Params.ReturnValue;
};

// Function GearboxFramework.GearboxData.ReplaceServices
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35686])
// Parameter Info:
// class TArray<struct FServiceResult> NewServices                    (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UGearboxData::ReplaceServices(class TArray<struct FServiceResult>& NewServices)
{
	static UFunction* uFnReplaceServices = nullptr;

	if (!uFnReplaceServices)
	{
		uFnReplaceServices = UFunction::FindFunction("Function GearboxFramework.GearboxData.ReplaceServices");
	}

	UGearboxData_execReplaceServices_Params ReplaceServices_Params;
	memset(&ReplaceServices_Params, 0, sizeof(ReplaceServices_Params));
	memcpy_s(&ReplaceServices_Params.NewServices, sizeof(ReplaceServices_Params.NewServices), &NewServices, sizeof(NewServices));

	uFnReplaceServices->iNative = 0;
	uFnReplaceServices->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnReplaceServices, &ReplaceServices_Params, nullptr);
	uFnReplaceServices->FunctionFlags |= 0x400;
	uFnReplaceServices->iNative = 35686;

	memcpy_s(&NewServices, sizeof(NewServices), &ReplaceServices_Params.NewServices, sizeof(ReplaceServices_Params.NewServices));
};

// Function GearboxFramework.GearboxData.GetService
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class USparkServiceConfiguration* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FName&            ServiceName                    (CPF_Parm)

class USparkServiceConfiguration* UGearboxData::eventGetService(const struct FName& ServiceName)
{
	static UFunction* uFnGetService = nullptr;

	if (!uFnGetService)
	{
		uFnGetService = UFunction::FindFunction("Function GearboxFramework.GearboxData.GetService");
	}

	UGearboxData_eventGetService_Params GetService_Params;
	memset(&GetService_Params, 0, sizeof(GetService_Params));
	memcpy_s(&GetService_Params.ServiceName, sizeof(GetService_Params.ServiceName), &ServiceName, sizeof(ServiceName));

	this->ProcessEvent(uFnGetService, &GetService_Params, nullptr);

	return GetService_Params.ReturnValue;
};

// Function GearboxFramework.GearboxData.Clear
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UGearboxData::Clear()
{
	static UFunction* uFnClear = nullptr;

	if (!uFnClear)
	{
		uFnClear = UFunction::FindFunction("Function GearboxFramework.GearboxData.Clear");
	}

	UGearboxData_execClear_Params Clear_Params;
	memset(&Clear_Params, 0, sizeof(Clear_Params));

	this->ProcessEvent(uFnClear, &Clear_Params, nullptr);
};

// Function GearboxFramework.GearboxAccountData.HandleQueueStatusResponse
// [0x00420402] (FUNC_Defined | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[2428])
// Parameter Info:
// struct FSparkResult            Result                         (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UGearboxAccountData::HandleQueueStatusResponse(struct FSparkResult& Result)
{
	static UFunction* uFnHandleQueueStatusResponse = nullptr;

	if (!uFnHandleQueueStatusResponse)
	{
		uFnHandleQueueStatusResponse = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.HandleQueueStatusResponse");
	}

	UGearboxAccountData_execHandleQueueStatusResponse_Params HandleQueueStatusResponse_Params;
	memset(&HandleQueueStatusResponse_Params, 0, sizeof(HandleQueueStatusResponse_Params));
	memcpy_s(&HandleQueueStatusResponse_Params.Result, sizeof(HandleQueueStatusResponse_Params.Result), &Result, sizeof(Result));

	uFnHandleQueueStatusResponse->iNative = 0;
	uFnHandleQueueStatusResponse->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnHandleQueueStatusResponse, &HandleQueueStatusResponse_Params, nullptr);
	uFnHandleQueueStatusResponse->FunctionFlags |= 0x400;
	uFnHandleQueueStatusResponse->iNative = 2428;

	memcpy_s(&Result, sizeof(Result), &HandleQueueStatusResponse_Params.Result, sizeof(HandleQueueStatusResponse_Params.Result));
};

// Function GearboxFramework.GearboxAccountData.HasValidShiftAccount
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGearboxAccountData::eventHasValidShiftAccount()
{
	static UFunction* uFnHasValidShiftAccount = nullptr;

	if (!uFnHasValidShiftAccount)
	{
		uFnHasValidShiftAccount = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.HasValidShiftAccount");
	}

	UGearboxAccountData_eventHasValidShiftAccount_Params HasValidShiftAccount_Params;
	memset(&HasValidShiftAccount_Params, 0, sizeof(HasValidShiftAccount_Params));

	this->ProcessEvent(uFnHasValidShiftAccount, &HasValidShiftAccount_Params, nullptr);

	return HasValidShiftAccount_Params.ReturnValue;
};

// Function GearboxFramework.GearboxAccountData.ProcessArchwayVerification
// [0x12420000] (FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// struct FArchwayResult          Archway                        (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UGearboxAccountData::ProcessArchwayVerification(struct FArchwayResult& Archway)
{
	static UFunction* uFnProcessArchwayVerification = nullptr;

	if (!uFnProcessArchwayVerification)
	{
		uFnProcessArchwayVerification = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.ProcessArchwayVerification");
	}

	UGearboxAccountData_execProcessArchwayVerification_Params ProcessArchwayVerification_Params;
	memset(&ProcessArchwayVerification_Params, 0, sizeof(ProcessArchwayVerification_Params));
	memcpy_s(&ProcessArchwayVerification_Params.Archway, sizeof(ProcessArchwayVerification_Params.Archway), &Archway, sizeof(Archway));

	this->ProcessEvent(uFnProcessArchwayVerification, &ProcessArchwayVerification_Params, nullptr);

	memcpy_s(&Archway, sizeof(Archway), &ProcessArchwayVerification_Params.Archway, sizeof(ProcessArchwayVerification_Params.Archway));
};

// Function GearboxFramework.GearboxAccountData.GetPlatformTicket
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FScriptDelegate&  GetPlatformTicketCompleteDelegate (CPF_Parm | CPF_NeedCtorLink)

bool UGearboxAccountData::GetPlatformTicket(const struct FScriptDelegate& GetPlatformTicketCompleteDelegate)
{
	static UFunction* uFnGetPlatformTicket = nullptr;

	if (!uFnGetPlatformTicket)
	{
		uFnGetPlatformTicket = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.GetPlatformTicket");
	}

	UGearboxAccountData_execGetPlatformTicket_Params GetPlatformTicket_Params;
	memset(&GetPlatformTicket_Params, 0, sizeof(GetPlatformTicket_Params));
	memcpy_s(&GetPlatformTicket_Params.GetPlatformTicketCompleteDelegate, sizeof(GetPlatformTicket_Params.GetPlatformTicketCompleteDelegate), &GetPlatformTicketCompleteDelegate, sizeof(GetPlatformTicketCompleteDelegate));

	this->ProcessEvent(uFnGetPlatformTicket, &GetPlatformTicket_Params, nullptr);

	return GetPlatformTicket_Params.ReturnValue;
};

// Function GearboxFramework.GearboxAccountData.CanGetTicket
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGearboxAccountData::CanGetTicket()
{
	static UFunction* uFnCanGetTicket = nullptr;

	if (!uFnCanGetTicket)
	{
		uFnCanGetTicket = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.CanGetTicket");
	}

	UGearboxAccountData_execCanGetTicket_Params CanGetTicket_Params;
	memset(&CanGetTicket_Params, 0, sizeof(CanGetTicket_Params));

	this->ProcessEvent(uFnCanGetTicket, &CanGetTicket_Params, nullptr);

	return CanGetTicket_Params.ReturnValue;
};

// Function GearboxFramework.GearboxAccountData.EstablishPlatformId
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FPlatformUserId&  NewUserId                      (CPF_Parm)

void UGearboxAccountData::EstablishPlatformId(const struct FPlatformUserId& NewUserId)
{
	static UFunction* uFnEstablishPlatformId = nullptr;

	if (!uFnEstablishPlatformId)
	{
		uFnEstablishPlatformId = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.EstablishPlatformId");
	}

	UGearboxAccountData_execEstablishPlatformId_Params EstablishPlatformId_Params;
	memset(&EstablishPlatformId_Params, 0, sizeof(EstablishPlatformId_Params));
	memcpy_s(&EstablishPlatformId_Params.NewUserId, sizeof(EstablishPlatformId_Params.NewUserId), &NewUserId, sizeof(NewUserId));

	this->ProcessEvent(uFnEstablishPlatformId, &EstablishPlatformId_Params, nullptr);
};

// Function GearboxFramework.GearboxAccountData.HandleOffersNotifiedResponse
// [0x12420002] (FUNC_Defined | FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// struct FSparkResult            Result                         (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UGearboxAccountData::HandleOffersNotifiedResponse(struct FSparkResult& Result)
{
	static UFunction* uFnHandleOffersNotifiedResponse = nullptr;

	if (!uFnHandleOffersNotifiedResponse)
	{
		uFnHandleOffersNotifiedResponse = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.HandleOffersNotifiedResponse");
	}

	UGearboxAccountData_execHandleOffersNotifiedResponse_Params HandleOffersNotifiedResponse_Params;
	memset(&HandleOffersNotifiedResponse_Params, 0, sizeof(HandleOffersNotifiedResponse_Params));
	memcpy_s(&HandleOffersNotifiedResponse_Params.Result, sizeof(HandleOffersNotifiedResponse_Params.Result), &Result, sizeof(Result));

	this->ProcessEvent(uFnHandleOffersNotifiedResponse, &HandleOffersNotifiedResponse_Params, nullptr);

	memcpy_s(&Result, sizeof(Result), &HandleOffersNotifiedResponse_Params.Result, sizeof(HandleOffersNotifiedResponse_Params.Result));
};

// Function GearboxFramework.GearboxAccountData.HandleBulkEntitlementsConsumedResponse
// [0x12420002] (FUNC_Defined | FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// struct FSparkResult            Result                         (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UGearboxAccountData::HandleBulkEntitlementsConsumedResponse(struct FSparkResult& Result)
{
	static UFunction* uFnHandleBulkEntitlementsConsumedResponse = nullptr;

	if (!uFnHandleBulkEntitlementsConsumedResponse)
	{
		uFnHandleBulkEntitlementsConsumedResponse = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.HandleBulkEntitlementsConsumedResponse");
	}

	UGearboxAccountData_execHandleBulkEntitlementsConsumedResponse_Params HandleBulkEntitlementsConsumedResponse_Params;
	memset(&HandleBulkEntitlementsConsumedResponse_Params, 0, sizeof(HandleBulkEntitlementsConsumedResponse_Params));
	memcpy_s(&HandleBulkEntitlementsConsumedResponse_Params.Result, sizeof(HandleBulkEntitlementsConsumedResponse_Params.Result), &Result, sizeof(Result));

	this->ProcessEvent(uFnHandleBulkEntitlementsConsumedResponse, &HandleBulkEntitlementsConsumedResponse_Params, nullptr);

	memcpy_s(&Result, sizeof(Result), &HandleBulkEntitlementsConsumedResponse_Params.Result, sizeof(HandleBulkEntitlementsConsumedResponse_Params.Result));
};

// Function GearboxFramework.GearboxAccountData.HandleEntitlementConsumedResponse
// [0x12420002] (FUNC_Defined | FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// struct FSparkResult            Result                         (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UGearboxAccountData::HandleEntitlementConsumedResponse(struct FSparkResult& Result)
{
	static UFunction* uFnHandleEntitlementConsumedResponse = nullptr;

	if (!uFnHandleEntitlementConsumedResponse)
	{
		uFnHandleEntitlementConsumedResponse = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.HandleEntitlementConsumedResponse");
	}

	UGearboxAccountData_execHandleEntitlementConsumedResponse_Params HandleEntitlementConsumedResponse_Params;
	memset(&HandleEntitlementConsumedResponse_Params, 0, sizeof(HandleEntitlementConsumedResponse_Params));
	memcpy_s(&HandleEntitlementConsumedResponse_Params.Result, sizeof(HandleEntitlementConsumedResponse_Params.Result), &Result, sizeof(Result));

	this->ProcessEvent(uFnHandleEntitlementConsumedResponse, &HandleEntitlementConsumedResponse_Params, nullptr);

	memcpy_s(&Result, sizeof(Result), &HandleEntitlementConsumedResponse_Params.Result, sizeof(HandleEntitlementConsumedResponse_Params.Result));
};

// Function GearboxFramework.GearboxAccountData.HandleCodeRedeemedResponse
// [0x12420002] (FUNC_Defined | FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// struct FSparkResult            Result                         (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UGearboxAccountData::HandleCodeRedeemedResponse(struct FSparkResult& Result)
{
	static UFunction* uFnHandleCodeRedeemedResponse = nullptr;

	if (!uFnHandleCodeRedeemedResponse)
	{
		uFnHandleCodeRedeemedResponse = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.HandleCodeRedeemedResponse");
	}

	UGearboxAccountData_execHandleCodeRedeemedResponse_Params HandleCodeRedeemedResponse_Params;
	memset(&HandleCodeRedeemedResponse_Params, 0, sizeof(HandleCodeRedeemedResponse_Params));
	memcpy_s(&HandleCodeRedeemedResponse_Params.Result, sizeof(HandleCodeRedeemedResponse_Params.Result), &Result, sizeof(Result));

	this->ProcessEvent(uFnHandleCodeRedeemedResponse, &HandleCodeRedeemedResponse_Params, nullptr);

	memcpy_s(&Result, sizeof(Result), &HandleCodeRedeemedResponse_Params.Result, sizeof(HandleCodeRedeemedResponse_Params.Result));
};

// Function GearboxFramework.GearboxAccountData.HandleResetPasswordResponse
// [0x12420002] (FUNC_Defined | FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// struct FSparkResult            Result                         (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UGearboxAccountData::HandleResetPasswordResponse(struct FSparkResult& Result)
{
	static UFunction* uFnHandleResetPasswordResponse = nullptr;

	if (!uFnHandleResetPasswordResponse)
	{
		uFnHandleResetPasswordResponse = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.HandleResetPasswordResponse");
	}

	UGearboxAccountData_execHandleResetPasswordResponse_Params HandleResetPasswordResponse_Params;
	memset(&HandleResetPasswordResponse_Params, 0, sizeof(HandleResetPasswordResponse_Params));
	memcpy_s(&HandleResetPasswordResponse_Params.Result, sizeof(HandleResetPasswordResponse_Params.Result), &Result, sizeof(Result));

	this->ProcessEvent(uFnHandleResetPasswordResponse, &HandleResetPasswordResponse_Params, nullptr);

	memcpy_s(&Result, sizeof(Result), &HandleResetPasswordResponse_Params.Result, sizeof(HandleResetPasswordResponse_Params.Result));
};

// Function GearboxFramework.GearboxAccountData.HandleSignUpResponse
// [0x12420002] (FUNC_Defined | FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// struct FSparkResult            Result                         (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UGearboxAccountData::HandleSignUpResponse(struct FSparkResult& Result)
{
	static UFunction* uFnHandleSignUpResponse = nullptr;

	if (!uFnHandleSignUpResponse)
	{
		uFnHandleSignUpResponse = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.HandleSignUpResponse");
	}

	UGearboxAccountData_execHandleSignUpResponse_Params HandleSignUpResponse_Params;
	memset(&HandleSignUpResponse_Params, 0, sizeof(HandleSignUpResponse_Params));
	memcpy_s(&HandleSignUpResponse_Params.Result, sizeof(HandleSignUpResponse_Params.Result), &Result, sizeof(Result));

	this->ProcessEvent(uFnHandleSignUpResponse, &HandleSignUpResponse_Params, nullptr);

	memcpy_s(&Result, sizeof(Result), &HandleSignUpResponse_Params.Result, sizeof(HandleSignUpResponse_Params.Result));
};

// Function GearboxFramework.GearboxAccountData.HandleSignInResponse
// [0x12420002] (FUNC_Defined | FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// struct FSparkResult            Result                         (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UGearboxAccountData::HandleSignInResponse(struct FSparkResult& Result)
{
	static UFunction* uFnHandleSignInResponse = nullptr;

	if (!uFnHandleSignInResponse)
	{
		uFnHandleSignInResponse = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.HandleSignInResponse");
	}

	UGearboxAccountData_execHandleSignInResponse_Params HandleSignInResponse_Params;
	memset(&HandleSignInResponse_Params, 0, sizeof(HandleSignInResponse_Params));
	memcpy_s(&HandleSignInResponse_Params.Result, sizeof(HandleSignInResponse_Params.Result), &Result, sizeof(Result));

	this->ProcessEvent(uFnHandleSignInResponse, &HandleSignInResponse_Params, nullptr);

	memcpy_s(&Result, sizeof(Result), &HandleSignInResponse_Params.Result, sizeof(HandleSignInResponse_Params.Result));
};

// Function GearboxFramework.GearboxAccountData.MarkOffersNotified
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UGearboxAccountData::MarkOffersNotified()
{
	static UFunction* uFnMarkOffersNotified = nullptr;

	if (!uFnMarkOffersNotified)
	{
		uFnMarkOffersNotified = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.MarkOffersNotified");
	}

	UGearboxAccountData_execMarkOffersNotified_Params MarkOffersNotified_Params;
	memset(&MarkOffersNotified_Params, 0, sizeof(MarkOffersNotified_Params));

	this->ProcessEvent(uFnMarkOffersNotified, &MarkOffersNotified_Params, nullptr);
};

// Function GearboxFramework.GearboxAccountData.LocallyConsumeEntitlementWithCount
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FName&            EntitlementName                (CPF_Parm)
// int32_t                        NumToConsume                   (CPF_Parm)

bool UGearboxAccountData::LocallyConsumeEntitlementWithCount(const struct FName& EntitlementName, int32_t NumToConsume)
{
	static UFunction* uFnLocallyConsumeEntitlementWithCount = nullptr;

	if (!uFnLocallyConsumeEntitlementWithCount)
	{
		uFnLocallyConsumeEntitlementWithCount = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.LocallyConsumeEntitlementWithCount");
	}

	UGearboxAccountData_execLocallyConsumeEntitlementWithCount_Params LocallyConsumeEntitlementWithCount_Params;
	memset(&LocallyConsumeEntitlementWithCount_Params, 0, sizeof(LocallyConsumeEntitlementWithCount_Params));
	memcpy_s(&LocallyConsumeEntitlementWithCount_Params.EntitlementName, sizeof(LocallyConsumeEntitlementWithCount_Params.EntitlementName), &EntitlementName, sizeof(EntitlementName));
	memcpy_s(&LocallyConsumeEntitlementWithCount_Params.NumToConsume, sizeof(LocallyConsumeEntitlementWithCount_Params.NumToConsume), &NumToConsume, sizeof(NumToConsume));

	this->ProcessEvent(uFnLocallyConsumeEntitlementWithCount, &LocallyConsumeEntitlementWithCount_Params, nullptr);

	return LocallyConsumeEntitlementWithCount_Params.ReturnValue;
};

// Function GearboxFramework.GearboxAccountData.ConsumeEntitlementsWithCounts
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const class TArray<class UGearboxAccountEntitlement*>& EntitlementsToConsume          (CPF_Parm | CPF_NeedCtorLink)
// const class TArray<int32_t>&   Counts                         (CPF_Parm | CPF_NeedCtorLink)
// const struct FScriptDelegate&  EntitlementConsumedDelegate    (CPF_Parm | CPF_NeedCtorLink)

void UGearboxAccountData::eventConsumeEntitlementsWithCounts(const class TArray<class UGearboxAccountEntitlement*>& EntitlementsToConsume, const class TArray<int32_t>& Counts, const struct FScriptDelegate& EntitlementConsumedDelegate)
{
	static UFunction* uFnConsumeEntitlementsWithCounts = nullptr;

	if (!uFnConsumeEntitlementsWithCounts)
	{
		uFnConsumeEntitlementsWithCounts = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.ConsumeEntitlementsWithCounts");
	}

	UGearboxAccountData_eventConsumeEntitlementsWithCounts_Params ConsumeEntitlementsWithCounts_Params;
	memset(&ConsumeEntitlementsWithCounts_Params, 0, sizeof(ConsumeEntitlementsWithCounts_Params));
	memcpy_s(&ConsumeEntitlementsWithCounts_Params.EntitlementsToConsume, sizeof(ConsumeEntitlementsWithCounts_Params.EntitlementsToConsume), &EntitlementsToConsume, sizeof(EntitlementsToConsume));
	memcpy_s(&ConsumeEntitlementsWithCounts_Params.Counts, sizeof(ConsumeEntitlementsWithCounts_Params.Counts), &Counts, sizeof(Counts));
	memcpy_s(&ConsumeEntitlementsWithCounts_Params.EntitlementConsumedDelegate, sizeof(ConsumeEntitlementsWithCounts_Params.EntitlementConsumedDelegate), &EntitlementConsumedDelegate, sizeof(EntitlementConsumedDelegate));

	this->ProcessEvent(uFnConsumeEntitlementsWithCounts, &ConsumeEntitlementsWithCounts_Params, nullptr);
};

// Function GearboxFramework.GearboxAccountData.ConsumeEntitlementWithCount
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FName&            EntitlementName                (CPF_Parm)
// int32_t                        Count                          (CPF_Parm)
// const struct FScriptDelegate&  EntitlementConsumedDelegate    (CPF_Parm | CPF_NeedCtorLink)

void UGearboxAccountData::ConsumeEntitlementWithCount(const struct FName& EntitlementName, int32_t Count, const struct FScriptDelegate& EntitlementConsumedDelegate)
{
	static UFunction* uFnConsumeEntitlementWithCount = nullptr;

	if (!uFnConsumeEntitlementWithCount)
	{
		uFnConsumeEntitlementWithCount = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.ConsumeEntitlementWithCount");
	}

	UGearboxAccountData_execConsumeEntitlementWithCount_Params ConsumeEntitlementWithCount_Params;
	memset(&ConsumeEntitlementWithCount_Params, 0, sizeof(ConsumeEntitlementWithCount_Params));
	memcpy_s(&ConsumeEntitlementWithCount_Params.EntitlementName, sizeof(ConsumeEntitlementWithCount_Params.EntitlementName), &EntitlementName, sizeof(EntitlementName));
	memcpy_s(&ConsumeEntitlementWithCount_Params.Count, sizeof(ConsumeEntitlementWithCount_Params.Count), &Count, sizeof(Count));
	memcpy_s(&ConsumeEntitlementWithCount_Params.EntitlementConsumedDelegate, sizeof(ConsumeEntitlementWithCount_Params.EntitlementConsumedDelegate), &EntitlementConsumedDelegate, sizeof(EntitlementConsumedDelegate));

	this->ProcessEvent(uFnConsumeEntitlementWithCount, &ConsumeEntitlementWithCount_Params, nullptr);
};

// Function GearboxFramework.GearboxAccountData.RedeemCode
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const class FString&           Code                           (CPF_Parm | CPF_NeedCtorLink)
// const struct FScriptDelegate&  CodeRedeemedDelegate           (CPF_Parm | CPF_NeedCtorLink)

void UGearboxAccountData::RedeemCode(const class FString& Code, const struct FScriptDelegate& CodeRedeemedDelegate)
{
	static UFunction* uFnRedeemCode = nullptr;

	if (!uFnRedeemCode)
	{
		uFnRedeemCode = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.RedeemCode");
	}

	UGearboxAccountData_execRedeemCode_Params RedeemCode_Params;
	memset(&RedeemCode_Params, 0, sizeof(RedeemCode_Params));
	memcpy_s(&RedeemCode_Params.Code, sizeof(RedeemCode_Params.Code), &Code, sizeof(Code));
	memcpy_s(&RedeemCode_Params.CodeRedeemedDelegate, sizeof(RedeemCode_Params.CodeRedeemedDelegate), &CodeRedeemedDelegate, sizeof(CodeRedeemedDelegate));

	this->ProcessEvent(uFnRedeemCode, &RedeemCode_Params, nullptr);
};

// Function GearboxFramework.GearboxAccountData.ResetPasswordGearboxAccount
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const class FString&           Email                          (CPF_Parm | CPF_NeedCtorLink)
// const struct FScriptDelegate&  ResetPasswordDelegate          (CPF_Parm | CPF_NeedCtorLink)

void UGearboxAccountData::ResetPasswordGearboxAccount(const class FString& Email, const struct FScriptDelegate& ResetPasswordDelegate)
{
	static UFunction* uFnResetPasswordGearboxAccount = nullptr;

	if (!uFnResetPasswordGearboxAccount)
	{
		uFnResetPasswordGearboxAccount = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.ResetPasswordGearboxAccount");
	}

	UGearboxAccountData_execResetPasswordGearboxAccount_Params ResetPasswordGearboxAccount_Params;
	memset(&ResetPasswordGearboxAccount_Params, 0, sizeof(ResetPasswordGearboxAccount_Params));
	memcpy_s(&ResetPasswordGearboxAccount_Params.Email, sizeof(ResetPasswordGearboxAccount_Params.Email), &Email, sizeof(Email));
	memcpy_s(&ResetPasswordGearboxAccount_Params.ResetPasswordDelegate, sizeof(ResetPasswordGearboxAccount_Params.ResetPasswordDelegate), &ResetPasswordDelegate, sizeof(ResetPasswordDelegate));

	this->ProcessEvent(uFnResetPasswordGearboxAccount, &ResetPasswordGearboxAccount_Params, nullptr);
};

// Function GearboxFramework.GearboxAccountData.SignUpGearboxAccount
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const class FString&           Email                          (CPF_Parm | CPF_NeedCtorLink)
// const class FString&           Password                       (CPF_Parm | CPF_NeedCtorLink)
// const class FString&           PasswordConfirm                (CPF_Parm | CPF_NeedCtorLink)
// const class FString&           AgeString                      (CPF_Parm | CPF_NeedCtorLink)
// const struct FScriptDelegate&  SignUpDelegate                 (CPF_Parm | CPF_NeedCtorLink)

void UGearboxAccountData::SignUpGearboxAccount(const class FString& Email, const class FString& Password, const class FString& PasswordConfirm, const class FString& AgeString, const struct FScriptDelegate& SignUpDelegate)
{
	static UFunction* uFnSignUpGearboxAccount = nullptr;

	if (!uFnSignUpGearboxAccount)
	{
		uFnSignUpGearboxAccount = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.SignUpGearboxAccount");
	}

	UGearboxAccountData_execSignUpGearboxAccount_Params SignUpGearboxAccount_Params;
	memset(&SignUpGearboxAccount_Params, 0, sizeof(SignUpGearboxAccount_Params));
	memcpy_s(&SignUpGearboxAccount_Params.Email, sizeof(SignUpGearboxAccount_Params.Email), &Email, sizeof(Email));
	memcpy_s(&SignUpGearboxAccount_Params.Password, sizeof(SignUpGearboxAccount_Params.Password), &Password, sizeof(Password));
	memcpy_s(&SignUpGearboxAccount_Params.PasswordConfirm, sizeof(SignUpGearboxAccount_Params.PasswordConfirm), &PasswordConfirm, sizeof(PasswordConfirm));
	memcpy_s(&SignUpGearboxAccount_Params.AgeString, sizeof(SignUpGearboxAccount_Params.AgeString), &AgeString, sizeof(AgeString));
	memcpy_s(&SignUpGearboxAccount_Params.SignUpDelegate, sizeof(SignUpGearboxAccount_Params.SignUpDelegate), &SignUpDelegate, sizeof(SignUpDelegate));

	this->ProcessEvent(uFnSignUpGearboxAccount, &SignUpGearboxAccount_Params, nullptr);
};

// Function GearboxFramework.GearboxAccountData.SignInGearboxAccount
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const class FString&           Email                          (CPF_Parm | CPF_NeedCtorLink)
// const class FString&           Password                       (CPF_Parm | CPF_NeedCtorLink)
// const struct FScriptDelegate&  SignInDelegate                 (CPF_Parm | CPF_NeedCtorLink)

void UGearboxAccountData::SignInGearboxAccount(const class FString& Email, const class FString& Password, const struct FScriptDelegate& SignInDelegate)
{
	static UFunction* uFnSignInGearboxAccount = nullptr;

	if (!uFnSignInGearboxAccount)
	{
		uFnSignInGearboxAccount = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.SignInGearboxAccount");
	}

	UGearboxAccountData_execSignInGearboxAccount_Params SignInGearboxAccount_Params;
	memset(&SignInGearboxAccount_Params, 0, sizeof(SignInGearboxAccount_Params));
	memcpy_s(&SignInGearboxAccount_Params.Email, sizeof(SignInGearboxAccount_Params.Email), &Email, sizeof(Email));
	memcpy_s(&SignInGearboxAccount_Params.Password, sizeof(SignInGearboxAccount_Params.Password), &Password, sizeof(Password));
	memcpy_s(&SignInGearboxAccount_Params.SignInDelegate, sizeof(SignInGearboxAccount_Params.SignInDelegate), &SignInDelegate, sizeof(SignInDelegate));

	this->ProcessEvent(uFnSignInGearboxAccount, &SignInGearboxAccount_Params, nullptr);
};

// Function GearboxFramework.GearboxAccountData.OnEntitlementConsumed
// [0x00120000] (FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter Info:
// EEntitlementConsumedResult     ConsumeResult                  (CPF_Parm)

void UGearboxAccountData::OnEntitlementConsumed(EEntitlementConsumedResult ConsumeResult)
{
	static UFunction* uFnOnEntitlementConsumed = nullptr;

	if (!uFnOnEntitlementConsumed)
	{
		uFnOnEntitlementConsumed = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.OnEntitlementConsumed");
	}

	UGearboxAccountData_execOnEntitlementConsumed_Params OnEntitlementConsumed_Params;
	memset(&OnEntitlementConsumed_Params, 0, sizeof(OnEntitlementConsumed_Params));
	memcpy_s(&OnEntitlementConsumed_Params.ConsumeResult, sizeof(OnEntitlementConsumed_Params.ConsumeResult), &ConsumeResult, sizeof(ConsumeResult));

	this->ProcessEvent(uFnOnEntitlementConsumed, &OnEntitlementConsumed_Params, nullptr);
};

// Function GearboxFramework.GearboxAccountData.OnCodeRedeemed
// [0x00120000] (FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter Info:
// ECodeRedeemedResult            RedeemResult                   (CPF_Parm)

void UGearboxAccountData::OnCodeRedeemed(ECodeRedeemedResult RedeemResult)
{
	static UFunction* uFnOnCodeRedeemed = nullptr;

	if (!uFnOnCodeRedeemed)
	{
		uFnOnCodeRedeemed = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.OnCodeRedeemed");
	}

	UGearboxAccountData_execOnCodeRedeemed_Params OnCodeRedeemed_Params;
	memset(&OnCodeRedeemed_Params, 0, sizeof(OnCodeRedeemed_Params));
	memcpy_s(&OnCodeRedeemed_Params.RedeemResult, sizeof(OnCodeRedeemed_Params.RedeemResult), &RedeemResult, sizeof(RedeemResult));

	this->ProcessEvent(uFnOnCodeRedeemed, &OnCodeRedeemed_Params, nullptr);
};

// Function GearboxFramework.GearboxAccountData.OnResetPasswordGearboxAccount
// [0x00120000] (FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter Info:
// EResetPasswordResult           ResetResult                    (CPF_Parm)

void UGearboxAccountData::OnResetPasswordGearboxAccount(EResetPasswordResult ResetResult)
{
	static UFunction* uFnOnResetPasswordGearboxAccount = nullptr;

	if (!uFnOnResetPasswordGearboxAccount)
	{
		uFnOnResetPasswordGearboxAccount = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.OnResetPasswordGearboxAccount");
	}

	UGearboxAccountData_execOnResetPasswordGearboxAccount_Params OnResetPasswordGearboxAccount_Params;
	memset(&OnResetPasswordGearboxAccount_Params, 0, sizeof(OnResetPasswordGearboxAccount_Params));
	memcpy_s(&OnResetPasswordGearboxAccount_Params.ResetResult, sizeof(OnResetPasswordGearboxAccount_Params.ResetResult), &ResetResult, sizeof(ResetResult));

	this->ProcessEvent(uFnOnResetPasswordGearboxAccount, &OnResetPasswordGearboxAccount_Params, nullptr);
};

// Function GearboxFramework.GearboxAccountData.OnSignUpGearboxAccount
// [0x00120000] (FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter Info:
// ESignUpResult                  SignUpResult                   (CPF_Parm)

void UGearboxAccountData::OnSignUpGearboxAccount(ESignUpResult SignUpResult)
{
	static UFunction* uFnOnSignUpGearboxAccount = nullptr;

	if (!uFnOnSignUpGearboxAccount)
	{
		uFnOnSignUpGearboxAccount = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.OnSignUpGearboxAccount");
	}

	UGearboxAccountData_execOnSignUpGearboxAccount_Params OnSignUpGearboxAccount_Params;
	memset(&OnSignUpGearboxAccount_Params, 0, sizeof(OnSignUpGearboxAccount_Params));
	memcpy_s(&OnSignUpGearboxAccount_Params.SignUpResult, sizeof(OnSignUpGearboxAccount_Params.SignUpResult), &SignUpResult, sizeof(SignUpResult));

	this->ProcessEvent(uFnOnSignUpGearboxAccount, &OnSignUpGearboxAccount_Params, nullptr);
};

// Function GearboxFramework.GearboxAccountData.OnSignInGearboxAccount
// [0x00120000] (FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter Info:
// ESignInResult                  SignInResult                   (CPF_Parm)

void UGearboxAccountData::OnSignInGearboxAccount(ESignInResult SignInResult)
{
	static UFunction* uFnOnSignInGearboxAccount = nullptr;

	if (!uFnOnSignInGearboxAccount)
	{
		uFnOnSignInGearboxAccount = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.OnSignInGearboxAccount");
	}

	UGearboxAccountData_execOnSignInGearboxAccount_Params OnSignInGearboxAccount_Params;
	memset(&OnSignInGearboxAccount_Params, 0, sizeof(OnSignInGearboxAccount_Params));
	memcpy_s(&OnSignInGearboxAccount_Params.SignInResult, sizeof(OnSignInGearboxAccount_Params.SignInResult), &SignInResult, sizeof(SignInResult));

	this->ProcessEvent(uFnOnSignInGearboxAccount, &OnSignInGearboxAccount_Params, nullptr);
};

// Function GearboxFramework.GearboxAccountData.CountEntitlement
// [0x12024000] (FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FName&            EntitlementName                (CPF_Parm)
// bool                           bIgnoreLocallyConsumed         (CPF_OptionalParm | CPF_Parm)

int32_t UGearboxAccountData::CountEntitlement(const struct FName& EntitlementName, bool bIgnoreLocallyConsumed)
{
	static UFunction* uFnCountEntitlement = nullptr;

	if (!uFnCountEntitlement)
	{
		uFnCountEntitlement = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.CountEntitlement");
	}

	UGearboxAccountData_execCountEntitlement_Params CountEntitlement_Params;
	memset(&CountEntitlement_Params, 0, sizeof(CountEntitlement_Params));
	memcpy_s(&CountEntitlement_Params.EntitlementName, sizeof(CountEntitlement_Params.EntitlementName), &EntitlementName, sizeof(EntitlementName));
	CountEntitlement_Params.bIgnoreLocallyConsumed = bIgnoreLocallyConsumed;

	this->ProcessEvent(uFnCountEntitlement, &CountEntitlement_Params, nullptr);

	return CountEntitlement_Params.ReturnValue;
};

// Function GearboxFramework.GearboxAccountData.LocalMarkOffersNotified
// [0x12040001] (FUNC_Final | FUNC_Private | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UGearboxAccountData::LocalMarkOffersNotified()
{
	static UFunction* uFnLocalMarkOffersNotified = nullptr;

	if (!uFnLocalMarkOffersNotified)
	{
		uFnLocalMarkOffersNotified = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.LocalMarkOffersNotified");
	}

	UGearboxAccountData_execLocalMarkOffersNotified_Params LocalMarkOffersNotified_Params;
	memset(&LocalMarkOffersNotified_Params, 0, sizeof(LocalMarkOffersNotified_Params));

	this->ProcessEvent(uFnLocalMarkOffersNotified, &LocalMarkOffersNotified_Params, nullptr);
};

// Function GearboxFramework.GearboxAccountData.GetUnnotifiedOffers
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class TArray<class UGearboxAccountOffer*> ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class TArray<class UGearboxAccountOffer*> UGearboxAccountData::GetUnnotifiedOffers()
{
	static UFunction* uFnGetUnnotifiedOffers = nullptr;

	if (!uFnGetUnnotifiedOffers)
	{
		uFnGetUnnotifiedOffers = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.GetUnnotifiedOffers");
	}

	UGearboxAccountData_execGetUnnotifiedOffers_Params GetUnnotifiedOffers_Params;
	memset(&GetUnnotifiedOffers_Params, 0, sizeof(GetUnnotifiedOffers_Params));

	this->ProcessEvent(uFnGetUnnotifiedOffers, &GetUnnotifiedOffers_Params, nullptr);

	return GetUnnotifiedOffers_Params.ReturnValue;
};

// Function GearboxFramework.GearboxAccountData.GetEntitlementWithName
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UGearboxAccountEntitlement* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FName&            EntitlementName                (CPF_Parm)

class UGearboxAccountEntitlement* UGearboxAccountData::GetEntitlementWithName(const struct FName& EntitlementName)
{
	static UFunction* uFnGetEntitlementWithName = nullptr;

	if (!uFnGetEntitlementWithName)
	{
		uFnGetEntitlementWithName = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.GetEntitlementWithName");
	}

	UGearboxAccountData_execGetEntitlementWithName_Params GetEntitlementWithName_Params;
	memset(&GetEntitlementWithName_Params, 0, sizeof(GetEntitlementWithName_Params));
	memcpy_s(&GetEntitlementWithName_Params.EntitlementName, sizeof(GetEntitlementWithName_Params.EntitlementName), &EntitlementName, sizeof(EntitlementName));

	this->ProcessEvent(uFnGetEntitlementWithName, &GetEntitlementWithName_Params, nullptr);

	return GetEntitlementWithName_Params.ReturnValue;
};

// Function GearboxFramework.GearboxAccountData.GetEntitlementWithId
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UGearboxAccountEntitlement* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        Id                             (CPF_Parm)

class UGearboxAccountEntitlement* UGearboxAccountData::GetEntitlementWithId(int32_t Id)
{
	static UFunction* uFnGetEntitlementWithId = nullptr;

	if (!uFnGetEntitlementWithId)
	{
		uFnGetEntitlementWithId = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.GetEntitlementWithId");
	}

	UGearboxAccountData_execGetEntitlementWithId_Params GetEntitlementWithId_Params;
	memset(&GetEntitlementWithId_Params, 0, sizeof(GetEntitlementWithId_Params));
	memcpy_s(&GetEntitlementWithId_Params.Id, sizeof(GetEntitlementWithId_Params.Id), &Id, sizeof(Id));

	this->ProcessEvent(uFnGetEntitlementWithId, &GetEntitlementWithId_Params, nullptr);

	return GetEntitlementWithId_Params.ReturnValue;
};

// Function GearboxFramework.GearboxAccountData.HasEntitlement
// [0x12024000] (FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FName&            EntitlementName                (CPF_Parm)
// bool                           bIgnoreLocallyConsumed         (CPF_OptionalParm | CPF_Parm)

bool UGearboxAccountData::HasEntitlement(const struct FName& EntitlementName, bool bIgnoreLocallyConsumed)
{
	static UFunction* uFnHasEntitlement = nullptr;

	if (!uFnHasEntitlement)
	{
		uFnHasEntitlement = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.HasEntitlement");
	}

	UGearboxAccountData_execHasEntitlement_Params HasEntitlement_Params;
	memset(&HasEntitlement_Params, 0, sizeof(HasEntitlement_Params));
	memcpy_s(&HasEntitlement_Params.EntitlementName, sizeof(HasEntitlement_Params.EntitlementName), &EntitlementName, sizeof(EntitlementName));
	HasEntitlement_Params.bIgnoreLocallyConsumed = bIgnoreLocallyConsumed;

	this->ProcessEvent(uFnHasEntitlement, &HasEntitlement_Params, nullptr);

	return HasEntitlement_Params.ReturnValue;
};

// Function GearboxFramework.GearboxAccountData.RemoveEntitlement
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UGearboxAccountEntitlement* Entitlement                    (CPF_Parm)

void UGearboxAccountData::RemoveEntitlement(class UGearboxAccountEntitlement* Entitlement)
{
	static UFunction* uFnRemoveEntitlement = nullptr;

	if (!uFnRemoveEntitlement)
	{
		uFnRemoveEntitlement = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.RemoveEntitlement");
	}

	UGearboxAccountData_execRemoveEntitlement_Params RemoveEntitlement_Params;
	memset(&RemoveEntitlement_Params, 0, sizeof(RemoveEntitlement_Params));
	memcpy_s(&RemoveEntitlement_Params.Entitlement, sizeof(RemoveEntitlement_Params.Entitlement), &Entitlement, sizeof(Entitlement));

	this->ProcessEvent(uFnRemoveEntitlement, &RemoveEntitlement_Params, nullptr);
};

// Function GearboxFramework.GearboxAccountData.ReplaceEntitlements
// [0x12420000] (FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class TArray<struct FEntitlementResult> NewEntitlements                (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// class TArray<struct FOfferResult> NewOffers                      (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UGearboxAccountData::ReplaceEntitlements(class TArray<struct FEntitlementResult>& NewEntitlements, class TArray<struct FOfferResult>& NewOffers)
{
	static UFunction* uFnReplaceEntitlements = nullptr;

	if (!uFnReplaceEntitlements)
	{
		uFnReplaceEntitlements = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.ReplaceEntitlements");
	}

	UGearboxAccountData_execReplaceEntitlements_Params ReplaceEntitlements_Params;
	memset(&ReplaceEntitlements_Params, 0, sizeof(ReplaceEntitlements_Params));
	memcpy_s(&ReplaceEntitlements_Params.NewEntitlements, sizeof(ReplaceEntitlements_Params.NewEntitlements), &NewEntitlements, sizeof(NewEntitlements));
	memcpy_s(&ReplaceEntitlements_Params.NewOffers, sizeof(ReplaceEntitlements_Params.NewOffers), &NewOffers, sizeof(NewOffers));

	this->ProcessEvent(uFnReplaceEntitlements, &ReplaceEntitlements_Params, nullptr);

	memcpy_s(&NewEntitlements, sizeof(NewEntitlements), &ReplaceEntitlements_Params.NewEntitlements, sizeof(ReplaceEntitlements_Params.NewEntitlements));
	memcpy_s(&NewOffers, sizeof(NewOffers), &ReplaceEntitlements_Params.NewOffers, sizeof(ReplaceEntitlements_Params.NewOffers));
};

// Function GearboxFramework.GearboxAccountData.HandleReloadEntitlementsResponse
// [0x12420002] (FUNC_Defined | FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// struct FSparkResult            Result                         (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UGearboxAccountData::HandleReloadEntitlementsResponse(struct FSparkResult& Result)
{
	static UFunction* uFnHandleReloadEntitlementsResponse = nullptr;

	if (!uFnHandleReloadEntitlementsResponse)
	{
		uFnHandleReloadEntitlementsResponse = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.HandleReloadEntitlementsResponse");
	}

	UGearboxAccountData_execHandleReloadEntitlementsResponse_Params HandleReloadEntitlementsResponse_Params;
	memset(&HandleReloadEntitlementsResponse_Params, 0, sizeof(HandleReloadEntitlementsResponse_Params));
	memcpy_s(&HandleReloadEntitlementsResponse_Params.Result, sizeof(HandleReloadEntitlementsResponse_Params.Result), &Result, sizeof(Result));

	this->ProcessEvent(uFnHandleReloadEntitlementsResponse, &HandleReloadEntitlementsResponse_Params, nullptr);

	memcpy_s(&Result, sizeof(Result), &HandleReloadEntitlementsResponse_Params.Result, sizeof(HandleReloadEntitlementsResponse_Params.Result));
};

// Function GearboxFramework.GearboxAccountData.ReloadEntitlements
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGearboxAccountData::ReloadEntitlements()
{
	static UFunction* uFnReloadEntitlements = nullptr;

	if (!uFnReloadEntitlements)
	{
		uFnReloadEntitlements = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.ReloadEntitlements");
	}

	UGearboxAccountData_execReloadEntitlements_Params ReloadEntitlements_Params;
	memset(&ReloadEntitlements_Params, 0, sizeof(ReloadEntitlements_Params));

	this->ProcessEvent(uFnReloadEntitlements, &ReloadEntitlements_Params, nullptr);

	return ReloadEntitlements_Params.ReturnValue;
};

// Function GearboxFramework.GearboxAccountData.ResetEntitlementUpdateTimer
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35716])
// Parameter Info:

void UGearboxAccountData::ResetEntitlementUpdateTimer()
{
	static UFunction* uFnResetEntitlementUpdateTimer = nullptr;

	if (!uFnResetEntitlementUpdateTimer)
	{
		uFnResetEntitlementUpdateTimer = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.ResetEntitlementUpdateTimer");
	}

	UGearboxAccountData_execResetEntitlementUpdateTimer_Params ResetEntitlementUpdateTimer_Params;
	memset(&ResetEntitlementUpdateTimer_Params, 0, sizeof(ResetEntitlementUpdateTimer_Params));

	uFnResetEntitlementUpdateTimer->iNative = 0;
	uFnResetEntitlementUpdateTimer->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnResetEntitlementUpdateTimer, &ResetEntitlementUpdateTimer_Params, nullptr);
	uFnResetEntitlementUpdateTimer->FunctionFlags |= 0x400;
	uFnResetEntitlementUpdateTimer->iNative = 35716;
};

// Function GearboxFramework.GearboxAccountData.CanReloadEntitlements
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32680])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGearboxAccountData::CanReloadEntitlements()
{
	static UFunction* uFnCanReloadEntitlements = nullptr;

	if (!uFnCanReloadEntitlements)
	{
		uFnCanReloadEntitlements = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.CanReloadEntitlements");
	}

	UGearboxAccountData_execCanReloadEntitlements_Params CanReloadEntitlements_Params;
	memset(&CanReloadEntitlements_Params, 0, sizeof(CanReloadEntitlements_Params));

	uFnCanReloadEntitlements->iNative = 0;
	uFnCanReloadEntitlements->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCanReloadEntitlements, &CanReloadEntitlements_Params, nullptr);
	uFnCanReloadEntitlements->FunctionFlags |= 0x400;
	uFnCanReloadEntitlements->iNative = 32680;

	return CanReloadEntitlements_Params.ReturnValue;
};

// Function GearboxFramework.GearboxAccountData.TriggerEntitlementsUpdatedDelegates
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UGearboxAccountData::TriggerEntitlementsUpdatedDelegates()
{
	static UFunction* uFnTriggerEntitlementsUpdatedDelegates = nullptr;

	if (!uFnTriggerEntitlementsUpdatedDelegates)
	{
		uFnTriggerEntitlementsUpdatedDelegates = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.TriggerEntitlementsUpdatedDelegates");
	}

	UGearboxAccountData_execTriggerEntitlementsUpdatedDelegates_Params TriggerEntitlementsUpdatedDelegates_Params;
	memset(&TriggerEntitlementsUpdatedDelegates_Params, 0, sizeof(TriggerEntitlementsUpdatedDelegates_Params));

	this->ProcessEvent(uFnTriggerEntitlementsUpdatedDelegates, &TriggerEntitlementsUpdatedDelegates_Params, nullptr);
};

// Function GearboxFramework.GearboxAccountData.ClearEntitlementsUpdatedDelegate
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FScriptDelegate&  EntitlementsUpdatedDelegate    (CPF_Parm | CPF_NeedCtorLink)

void UGearboxAccountData::ClearEntitlementsUpdatedDelegate(const struct FScriptDelegate& EntitlementsUpdatedDelegate)
{
	static UFunction* uFnClearEntitlementsUpdatedDelegate = nullptr;

	if (!uFnClearEntitlementsUpdatedDelegate)
	{
		uFnClearEntitlementsUpdatedDelegate = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.ClearEntitlementsUpdatedDelegate");
	}

	UGearboxAccountData_execClearEntitlementsUpdatedDelegate_Params ClearEntitlementsUpdatedDelegate_Params;
	memset(&ClearEntitlementsUpdatedDelegate_Params, 0, sizeof(ClearEntitlementsUpdatedDelegate_Params));
	memcpy_s(&ClearEntitlementsUpdatedDelegate_Params.EntitlementsUpdatedDelegate, sizeof(ClearEntitlementsUpdatedDelegate_Params.EntitlementsUpdatedDelegate), &EntitlementsUpdatedDelegate, sizeof(EntitlementsUpdatedDelegate));

	this->ProcessEvent(uFnClearEntitlementsUpdatedDelegate, &ClearEntitlementsUpdatedDelegate_Params, nullptr);
};

// Function GearboxFramework.GearboxAccountData.AddEntitlementsUpdatedDelegate
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FScriptDelegate&  EntitlementsUpdatedDelegate    (CPF_Parm | CPF_NeedCtorLink)

void UGearboxAccountData::AddEntitlementsUpdatedDelegate(const struct FScriptDelegate& EntitlementsUpdatedDelegate)
{
	static UFunction* uFnAddEntitlementsUpdatedDelegate = nullptr;

	if (!uFnAddEntitlementsUpdatedDelegate)
	{
		uFnAddEntitlementsUpdatedDelegate = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.AddEntitlementsUpdatedDelegate");
	}

	UGearboxAccountData_execAddEntitlementsUpdatedDelegate_Params AddEntitlementsUpdatedDelegate_Params;
	memset(&AddEntitlementsUpdatedDelegate_Params, 0, sizeof(AddEntitlementsUpdatedDelegate_Params));
	memcpy_s(&AddEntitlementsUpdatedDelegate_Params.EntitlementsUpdatedDelegate, sizeof(AddEntitlementsUpdatedDelegate_Params.EntitlementsUpdatedDelegate), &EntitlementsUpdatedDelegate, sizeof(EntitlementsUpdatedDelegate));

	this->ProcessEvent(uFnAddEntitlementsUpdatedDelegate, &AddEntitlementsUpdatedDelegate_Params, nullptr);
};

// Function GearboxFramework.GearboxAccountData.Clear
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UGearboxAccountData::Clear()
{
	static UFunction* uFnClear = nullptr;

	if (!uFnClear)
	{
		uFnClear = UFunction::FindFunction("Function GearboxFramework.GearboxAccountData.Clear");
	}

	UGearboxAccountData_execClear_Params Clear_Params;
	memset(&Clear_Params, 0, sizeof(Clear_Params));

	this->ProcessEvent(uFnClear, &Clear_Params, nullptr);
};

// Function GearboxFramework.GearboxServerData.ProcessArchwayVerification
// [0x12420000] (FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// struct FArchwayResult          Archway                        (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UGearboxServerData::ProcessArchwayVerification(struct FArchwayResult& Archway)
{
	static UFunction* uFnProcessArchwayVerification = nullptr;

	if (!uFnProcessArchwayVerification)
	{
		uFnProcessArchwayVerification = UFunction::FindFunction("Function GearboxFramework.GearboxServerData.ProcessArchwayVerification");
	}

	UGearboxServerData_execProcessArchwayVerification_Params ProcessArchwayVerification_Params;
	memset(&ProcessArchwayVerification_Params, 0, sizeof(ProcessArchwayVerification_Params));
	memcpy_s(&ProcessArchwayVerification_Params.Archway, sizeof(ProcessArchwayVerification_Params.Archway), &Archway, sizeof(Archway));

	this->ProcessEvent(uFnProcessArchwayVerification, &ProcessArchwayVerification_Params, nullptr);

	memcpy_s(&Archway, sizeof(Archway), &ProcessArchwayVerification_Params.Archway, sizeof(ProcessArchwayVerification_Params.Archway));
};

// Function GearboxFramework.GearboxServerData.GetServerTicket
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FScriptDelegate&  GetServerTicketCompleteDelegate (CPF_Parm | CPF_NeedCtorLink)

bool UGearboxServerData::GetServerTicket(const struct FScriptDelegate& GetServerTicketCompleteDelegate)
{
	static UFunction* uFnGetServerTicket = nullptr;

	if (!uFnGetServerTicket)
	{
		uFnGetServerTicket = UFunction::FindFunction("Function GearboxFramework.GearboxServerData.GetServerTicket");
	}

	UGearboxServerData_execGetServerTicket_Params GetServerTicket_Params;
	memset(&GetServerTicket_Params, 0, sizeof(GetServerTicket_Params));
	memcpy_s(&GetServerTicket_Params.GetServerTicketCompleteDelegate, sizeof(GetServerTicket_Params.GetServerTicketCompleteDelegate), &GetServerTicketCompleteDelegate, sizeof(GetServerTicketCompleteDelegate));

	this->ProcessEvent(uFnGetServerTicket, &GetServerTicket_Params, nullptr);

	return GetServerTicket_Params.ReturnValue;
};

// Function GearboxFramework.GearboxServerData.CanGetTicket
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGearboxServerData::CanGetTicket()
{
	static UFunction* uFnCanGetTicket = nullptr;

	if (!uFnCanGetTicket)
	{
		uFnCanGetTicket = UFunction::FindFunction("Function GearboxFramework.GearboxServerData.CanGetTicket");
	}

	UGearboxServerData_execCanGetTicket_Params CanGetTicket_Params;
	memset(&CanGetTicket_Params, 0, sizeof(CanGetTicket_Params));

	this->ProcessEvent(uFnCanGetTicket, &CanGetTicket_Params, nullptr);

	return CanGetTicket_Params.ReturnValue;
};

// Function GearboxFramework.GearboxEditorNode.IsChild
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34651])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UGearboxEditorNode*      TestNode                       (CPF_Parm)

bool UGearboxEditorNode::IsChild(class UGearboxEditorNode* TestNode)
{
	static UFunction* uFnIsChild = nullptr;

	if (!uFnIsChild)
	{
		uFnIsChild = UFunction::FindFunction("Function GearboxFramework.GearboxEditorNode.IsChild");
	}

	UGearboxEditorNode_execIsChild_Params IsChild_Params;
	memset(&IsChild_Params, 0, sizeof(IsChild_Params));
	memcpy_s(&IsChild_Params.TestNode, sizeof(IsChild_Params.TestNode), &TestNode, sizeof(TestNode));

	uFnIsChild->iNative = 0;
	uFnIsChild->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsChild, &IsChild_Params, nullptr);
	uFnIsChild->FunctionFlags |= 0x400;
	uFnIsChild->iNative = 34651;

	return IsChild_Params.ReturnValue;
};

// Function GearboxFramework.GearboxExpandableListGFxObject.ExpandableListReacteSelected
// [0x00120000] (FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter Info:
// const class TArray<class UIExpandableListEntry*>& Entries                        (CPF_Const | CPF_Parm | CPF_NeedCtorLink)

void UGearboxExpandableListGFxObject::ExpandableListReacteSelected(const class TArray<class UIExpandableListEntry*>& Entries)
{
	static UFunction* uFnExpandableListReacteSelected = nullptr;

	if (!uFnExpandableListReacteSelected)
	{
		uFnExpandableListReacteSelected = UFunction::FindFunction("Function GearboxFramework.GearboxExpandableListGFxObject.ExpandableListReacteSelected");
	}

	UGearboxExpandableListGFxObject_execExpandableListReacteSelected_Params ExpandableListReacteSelected_Params;
	memset(&ExpandableListReacteSelected_Params, 0, sizeof(ExpandableListReacteSelected_Params));
	memcpy_s(&ExpandableListReacteSelected_Params.Entries, sizeof(ExpandableListReacteSelected_Params.Entries), &Entries, sizeof(Entries));

	this->ProcessEvent(uFnExpandableListReacteSelected, &ExpandableListReacteSelected_Params, nullptr);
};

// Function GearboxFramework.GearboxExpandableListGFxObject.ExpandableListEntryFocused
// [0x00120000] (FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter Info:
// class UIExpandableListEntry*   ListItem                       (CPF_Const | CPF_Parm)

void UGearboxExpandableListGFxObject::ExpandableListEntryFocused(class UIExpandableListEntry* ListItem)
{
	static UFunction* uFnExpandableListEntryFocused = nullptr;

	if (!uFnExpandableListEntryFocused)
	{
		uFnExpandableListEntryFocused = UFunction::FindFunction("Function GearboxFramework.GearboxExpandableListGFxObject.ExpandableListEntryFocused");
	}

	UGearboxExpandableListGFxObject_execExpandableListEntryFocused_Params ExpandableListEntryFocused_Params;
	memset(&ExpandableListEntryFocused_Params, 0, sizeof(ExpandableListEntryFocused_Params));
	memcpy_s(&ExpandableListEntryFocused_Params.ListItem, sizeof(ExpandableListEntryFocused_Params.ListItem), &ListItem, sizeof(ListItem));

	this->ProcessEvent(uFnExpandableListEntryFocused, &ExpandableListEntryFocused_Params, nullptr);
};

// Function GearboxFramework.GearboxExpandableListGFxObject.ExpandableListSubCategoryFocused
// [0x00120000] (FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter Info:
// class UGearboxExpandableListSubCategory* SubCategory                    (CPF_Parm)

void UGearboxExpandableListGFxObject::ExpandableListSubCategoryFocused(class UGearboxExpandableListSubCategory* SubCategory)
{
	static UFunction* uFnExpandableListSubCategoryFocused = nullptr;

	if (!uFnExpandableListSubCategoryFocused)
	{
		uFnExpandableListSubCategoryFocused = UFunction::FindFunction("Function GearboxFramework.GearboxExpandableListGFxObject.ExpandableListSubCategoryFocused");
	}

	UGearboxExpandableListGFxObject_execExpandableListSubCategoryFocused_Params ExpandableListSubCategoryFocused_Params;
	memset(&ExpandableListSubCategoryFocused_Params, 0, sizeof(ExpandableListSubCategoryFocused_Params));
	memcpy_s(&ExpandableListSubCategoryFocused_Params.SubCategory, sizeof(ExpandableListSubCategoryFocused_Params.SubCategory), &SubCategory, sizeof(SubCategory));

	this->ProcessEvent(uFnExpandableListSubCategoryFocused, &ExpandableListSubCategoryFocused_Params, nullptr);
};

// Function GearboxFramework.GearboxExpandableListGFxObject.ExpandableListCategoryFocused
// [0x00120000] (FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter Info:
// class UGearboxExpandableListCategory* Category                       (CPF_Parm)

void UGearboxExpandableListGFxObject::ExpandableListCategoryFocused(class UGearboxExpandableListCategory* Category)
{
	static UFunction* uFnExpandableListCategoryFocused = nullptr;

	if (!uFnExpandableListCategoryFocused)
	{
		uFnExpandableListCategoryFocused = UFunction::FindFunction("Function GearboxFramework.GearboxExpandableListGFxObject.ExpandableListCategoryFocused");
	}

	UGearboxExpandableListGFxObject_execExpandableListCategoryFocused_Params ExpandableListCategoryFocused_Params;
	memset(&ExpandableListCategoryFocused_Params, 0, sizeof(ExpandableListCategoryFocused_Params));
	memcpy_s(&ExpandableListCategoryFocused_Params.Category, sizeof(ExpandableListCategoryFocused_Params.Category), &Category, sizeof(Category));

	this->ProcessEvent(uFnExpandableListCategoryFocused, &ExpandableListCategoryFocused_Params, nullptr);
};

// Function GearboxFramework.GearboxExpandableListGFxObject.UpdateListEntryDisplayInfo
// [0x00120000] (FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter Info:
// class UIExpandableListEntry*   ListItem                       (CPF_Const | CPF_Parm)

void UGearboxExpandableListGFxObject::UpdateListEntryDisplayInfo(class UIExpandableListEntry* ListItem)
{
	static UFunction* uFnUpdateListEntryDisplayInfo = nullptr;

	if (!uFnUpdateListEntryDisplayInfo)
	{
		uFnUpdateListEntryDisplayInfo = UFunction::FindFunction("Function GearboxFramework.GearboxExpandableListGFxObject.UpdateListEntryDisplayInfo");
	}

	UGearboxExpandableListGFxObject_execUpdateListEntryDisplayInfo_Params UpdateListEntryDisplayInfo_Params;
	memset(&UpdateListEntryDisplayInfo_Params, 0, sizeof(UpdateListEntryDisplayInfo_Params));
	memcpy_s(&UpdateListEntryDisplayInfo_Params.ListItem, sizeof(UpdateListEntryDisplayInfo_Params.ListItem), &ListItem, sizeof(ListItem));

	this->ProcessEvent(uFnUpdateListEntryDisplayInfo, &UpdateListEntryDisplayInfo_Params, nullptr);
};

// Function GearboxFramework.GearboxExpandableListGFxObject.UpdateListSubCategoryDisplayInfo
// [0x00120000] (FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter Info:
// class UGearboxExpandableListSubCategory* SubCategory                    (CPF_Parm)
// const class TArray<class UIExpandableListEntry*>& Entries                        (CPF_Const | CPF_Parm | CPF_NeedCtorLink)

void UGearboxExpandableListGFxObject::UpdateListSubCategoryDisplayInfo(class UGearboxExpandableListSubCategory* SubCategory, const class TArray<class UIExpandableListEntry*>& Entries)
{
	static UFunction* uFnUpdateListSubCategoryDisplayInfo = nullptr;

	if (!uFnUpdateListSubCategoryDisplayInfo)
	{
		uFnUpdateListSubCategoryDisplayInfo = UFunction::FindFunction("Function GearboxFramework.GearboxExpandableListGFxObject.UpdateListSubCategoryDisplayInfo");
	}

	UGearboxExpandableListGFxObject_execUpdateListSubCategoryDisplayInfo_Params UpdateListSubCategoryDisplayInfo_Params;
	memset(&UpdateListSubCategoryDisplayInfo_Params, 0, sizeof(UpdateListSubCategoryDisplayInfo_Params));
	memcpy_s(&UpdateListSubCategoryDisplayInfo_Params.SubCategory, sizeof(UpdateListSubCategoryDisplayInfo_Params.SubCategory), &SubCategory, sizeof(SubCategory));
	memcpy_s(&UpdateListSubCategoryDisplayInfo_Params.Entries, sizeof(UpdateListSubCategoryDisplayInfo_Params.Entries), &Entries, sizeof(Entries));

	this->ProcessEvent(uFnUpdateListSubCategoryDisplayInfo, &UpdateListSubCategoryDisplayInfo_Params, nullptr);
};

// Function GearboxFramework.GearboxExpandableListGFxObject.UpdateListCategoryDisplayInfo
// [0x00120000] (FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter Info:
// class UGearboxExpandableListCategory* Category                       (CPF_Parm)
// const class TArray<class UIExpandableListEntry*>& Entries                        (CPF_Const | CPF_Parm | CPF_NeedCtorLink)

void UGearboxExpandableListGFxObject::UpdateListCategoryDisplayInfo(class UGearboxExpandableListCategory* Category, const class TArray<class UIExpandableListEntry*>& Entries)
{
	static UFunction* uFnUpdateListCategoryDisplayInfo = nullptr;

	if (!uFnUpdateListCategoryDisplayInfo)
	{
		uFnUpdateListCategoryDisplayInfo = UFunction::FindFunction("Function GearboxFramework.GearboxExpandableListGFxObject.UpdateListCategoryDisplayInfo");
	}

	UGearboxExpandableListGFxObject_execUpdateListCategoryDisplayInfo_Params UpdateListCategoryDisplayInfo_Params;
	memset(&UpdateListCategoryDisplayInfo_Params, 0, sizeof(UpdateListCategoryDisplayInfo_Params));
	memcpy_s(&UpdateListCategoryDisplayInfo_Params.Category, sizeof(UpdateListCategoryDisplayInfo_Params.Category), &Category, sizeof(Category));
	memcpy_s(&UpdateListCategoryDisplayInfo_Params.Entries, sizeof(UpdateListCategoryDisplayInfo_Params.Entries), &Entries, sizeof(Entries));

	this->ProcessEvent(uFnUpdateListCategoryDisplayInfo, &UpdateListCategoryDisplayInfo_Params, nullptr);
};

// Function GearboxFramework.GearboxExpandableListGFxObject.extOnEntryFocused
// [0x00020402] (FUNC_Defined | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2419])
// Parameter Info:
// const class FString&           EntryName                      (CPF_Const | CPF_Parm | CPF_NeedCtorLink)

void UGearboxExpandableListGFxObject::extOnEntryFocused(const class FString& EntryName)
{
	static UFunction* uFnextOnEntryFocused = nullptr;

	if (!uFnextOnEntryFocused)
	{
		uFnextOnEntryFocused = UFunction::FindFunction("Function GearboxFramework.GearboxExpandableListGFxObject.extOnEntryFocused");
	}

	UGearboxExpandableListGFxObject_execextOnEntryFocused_Params extOnEntryFocused_Params;
	memset(&extOnEntryFocused_Params, 0, sizeof(extOnEntryFocused_Params));
	memcpy_s(&extOnEntryFocused_Params.EntryName, sizeof(extOnEntryFocused_Params.EntryName), &EntryName, sizeof(EntryName));

	uFnextOnEntryFocused->iNative = 0;
	uFnextOnEntryFocused->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnextOnEntryFocused, &extOnEntryFocused_Params, nullptr);
	uFnextOnEntryFocused->FunctionFlags |= 0x400;
	uFnextOnEntryFocused->iNative = 2419;
};

// Function GearboxFramework.GearboxExpandableListGFxObject.extOnEntrySelected
// [0x00020402] (FUNC_Defined | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2420])
// Parameter Info:
// const class FString&           EntryName                      (CPF_Const | CPF_Parm | CPF_NeedCtorLink)

void UGearboxExpandableListGFxObject::extOnEntrySelected(const class FString& EntryName)
{
	static UFunction* uFnextOnEntrySelected = nullptr;

	if (!uFnextOnEntrySelected)
	{
		uFnextOnEntrySelected = UFunction::FindFunction("Function GearboxFramework.GearboxExpandableListGFxObject.extOnEntrySelected");
	}

	UGearboxExpandableListGFxObject_execextOnEntrySelected_Params extOnEntrySelected_Params;
	memset(&extOnEntrySelected_Params, 0, sizeof(extOnEntrySelected_Params));
	memcpy_s(&extOnEntrySelected_Params.EntryName, sizeof(extOnEntrySelected_Params.EntryName), &EntryName, sizeof(EntryName));

	uFnextOnEntrySelected->iNative = 0;
	uFnextOnEntrySelected->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnextOnEntrySelected, &extOnEntrySelected_Params, nullptr);
	uFnextOnEntrySelected->FunctionFlags |= 0x400;
	uFnextOnEntrySelected->iNative = 2420;
};

// Function GearboxFramework.GearboxExpandableListGFxObject.extOnSubCategoryFocused
// [0x00020402] (FUNC_Defined | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2421])
// Parameter Info:
// int32_t                        CurItemGroup                   (CPF_Const | CPF_Parm)

void UGearboxExpandableListGFxObject::extOnSubCategoryFocused(int32_t CurItemGroup)
{
	static UFunction* uFnextOnSubCategoryFocused = nullptr;

	if (!uFnextOnSubCategoryFocused)
	{
		uFnextOnSubCategoryFocused = UFunction::FindFunction("Function GearboxFramework.GearboxExpandableListGFxObject.extOnSubCategoryFocused");
	}

	UGearboxExpandableListGFxObject_execextOnSubCategoryFocused_Params extOnSubCategoryFocused_Params;
	memset(&extOnSubCategoryFocused_Params, 0, sizeof(extOnSubCategoryFocused_Params));
	memcpy_s(&extOnSubCategoryFocused_Params.CurItemGroup, sizeof(extOnSubCategoryFocused_Params.CurItemGroup), &CurItemGroup, sizeof(CurItemGroup));

	uFnextOnSubCategoryFocused->iNative = 0;
	uFnextOnSubCategoryFocused->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnextOnSubCategoryFocused, &extOnSubCategoryFocused_Params, nullptr);
	uFnextOnSubCategoryFocused->FunctionFlags |= 0x400;
	uFnextOnSubCategoryFocused->iNative = 2421;
};

// Function GearboxFramework.GearboxExpandableListGFxObject.extOnSubCategorySelected
// [0x00020402] (FUNC_Defined | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2422])
// Parameter Info:
// int32_t                        CurItemGroup                   (CPF_Const | CPF_Parm)
// int32_t                        CategoryDisplayIndex           (CPF_Const | CPF_Parm)

void UGearboxExpandableListGFxObject::extOnSubCategorySelected(int32_t CurItemGroup, int32_t CategoryDisplayIndex)
{
	static UFunction* uFnextOnSubCategorySelected = nullptr;

	if (!uFnextOnSubCategorySelected)
	{
		uFnextOnSubCategorySelected = UFunction::FindFunction("Function GearboxFramework.GearboxExpandableListGFxObject.extOnSubCategorySelected");
	}

	UGearboxExpandableListGFxObject_execextOnSubCategorySelected_Params extOnSubCategorySelected_Params;
	memset(&extOnSubCategorySelected_Params, 0, sizeof(extOnSubCategorySelected_Params));
	memcpy_s(&extOnSubCategorySelected_Params.CurItemGroup, sizeof(extOnSubCategorySelected_Params.CurItemGroup), &CurItemGroup, sizeof(CurItemGroup));
	memcpy_s(&extOnSubCategorySelected_Params.CategoryDisplayIndex, sizeof(extOnSubCategorySelected_Params.CategoryDisplayIndex), &CategoryDisplayIndex, sizeof(CategoryDisplayIndex));

	uFnextOnSubCategorySelected->iNative = 0;
	uFnextOnSubCategorySelected->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnextOnSubCategorySelected, &extOnSubCategorySelected_Params, nullptr);
	uFnextOnSubCategorySelected->FunctionFlags |= 0x400;
	uFnextOnSubCategorySelected->iNative = 2422;
};

// Function GearboxFramework.GearboxExpandableListGFxObject.extOnCategoryFocused
// [0x00020402] (FUNC_Defined | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2423])
// Parameter Info:
// int32_t                        CurItemGroup                   (CPF_Const | CPF_Parm)

void UGearboxExpandableListGFxObject::extOnCategoryFocused(int32_t CurItemGroup)
{
	static UFunction* uFnextOnCategoryFocused = nullptr;

	if (!uFnextOnCategoryFocused)
	{
		uFnextOnCategoryFocused = UFunction::FindFunction("Function GearboxFramework.GearboxExpandableListGFxObject.extOnCategoryFocused");
	}

	UGearboxExpandableListGFxObject_execextOnCategoryFocused_Params extOnCategoryFocused_Params;
	memset(&extOnCategoryFocused_Params, 0, sizeof(extOnCategoryFocused_Params));
	memcpy_s(&extOnCategoryFocused_Params.CurItemGroup, sizeof(extOnCategoryFocused_Params.CurItemGroup), &CurItemGroup, sizeof(CurItemGroup));

	uFnextOnCategoryFocused->iNative = 0;
	uFnextOnCategoryFocused->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnextOnCategoryFocused, &extOnCategoryFocused_Params, nullptr);
	uFnextOnCategoryFocused->FunctionFlags |= 0x400;
	uFnextOnCategoryFocused->iNative = 2423;
};

// Function GearboxFramework.GearboxExpandableListGFxObject.extOnCategorySelected
// [0x00020402] (FUNC_Defined | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2424])
// Parameter Info:
// int32_t                        CurItemGroup                   (CPF_Const | CPF_Parm)
// int32_t                        CategoryDisplayIndex           (CPF_Const | CPF_Parm)

void UGearboxExpandableListGFxObject::extOnCategorySelected(int32_t CurItemGroup, int32_t CategoryDisplayIndex)
{
	static UFunction* uFnextOnCategorySelected = nullptr;

	if (!uFnextOnCategorySelected)
	{
		uFnextOnCategorySelected = UFunction::FindFunction("Function GearboxFramework.GearboxExpandableListGFxObject.extOnCategorySelected");
	}

	UGearboxExpandableListGFxObject_execextOnCategorySelected_Params extOnCategorySelected_Params;
	memset(&extOnCategorySelected_Params, 0, sizeof(extOnCategorySelected_Params));
	memcpy_s(&extOnCategorySelected_Params.CurItemGroup, sizeof(extOnCategorySelected_Params.CurItemGroup), &CurItemGroup, sizeof(CurItemGroup));
	memcpy_s(&extOnCategorySelected_Params.CategoryDisplayIndex, sizeof(extOnCategorySelected_Params.CategoryDisplayIndex), &CategoryDisplayIndex, sizeof(CategoryDisplayIndex));

	uFnextOnCategorySelected->iNative = 0;
	uFnextOnCategorySelected->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnextOnCategorySelected, &extOnCategorySelected_Params, nullptr);
	uFnextOnCategorySelected->FunctionFlags |= 0x400;
	uFnextOnCategorySelected->iNative = 2424;
};

// Function GearboxFramework.GearboxExpandableListGFxObject.HandleInputKeyFromOwner
// [0x00020402] (FUNC_Defined | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2425])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FPlatformUserId&  InUserId                       (CPF_Parm)
// const struct FName&            ukey                           (CPF_Parm)
// EInputEvent                    uevent                         (CPF_Parm)

bool UGearboxExpandableListGFxObject::HandleInputKeyFromOwner(const struct FPlatformUserId& InUserId, const struct FName& ukey, EInputEvent uevent)
{
	static UFunction* uFnHandleInputKeyFromOwner = nullptr;

	if (!uFnHandleInputKeyFromOwner)
	{
		uFnHandleInputKeyFromOwner = UFunction::FindFunction("Function GearboxFramework.GearboxExpandableListGFxObject.HandleInputKeyFromOwner");
	}

	UGearboxExpandableListGFxObject_execHandleInputKeyFromOwner_Params HandleInputKeyFromOwner_Params;
	memset(&HandleInputKeyFromOwner_Params, 0, sizeof(HandleInputKeyFromOwner_Params));
	memcpy_s(&HandleInputKeyFromOwner_Params.InUserId, sizeof(HandleInputKeyFromOwner_Params.InUserId), &InUserId, sizeof(InUserId));
	memcpy_s(&HandleInputKeyFromOwner_Params.ukey, sizeof(HandleInputKeyFromOwner_Params.ukey), &ukey, sizeof(ukey));
	memcpy_s(&HandleInputKeyFromOwner_Params.uevent, sizeof(HandleInputKeyFromOwner_Params.uevent), &uevent, sizeof(uevent));

	uFnHandleInputKeyFromOwner->iNative = 0;
	uFnHandleInputKeyFromOwner->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnHandleInputKeyFromOwner, &HandleInputKeyFromOwner_Params, nullptr);
	uFnHandleInputKeyFromOwner->FunctionFlags |= 0x400;
	uFnHandleInputKeyFromOwner->iNative = 2425;

	return HandleInputKeyFromOwner_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGFxMovie.extOnEventDispatched
// [0x00020402] (FUNC_Defined | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2545])
// Parameter Info:
// const class FString&           Path                           (CPF_Parm | CPF_NeedCtorLink)
// class UGFxObject*              EventData                      (CPF_Parm)
// int32_t                        NumArrayEntries                (CPF_Parm)

void UGearboxGFxMovie::extOnEventDispatched(const class FString& Path, class UGFxObject* EventData, int32_t NumArrayEntries)
{
	static UFunction* uFnextOnEventDispatched = nullptr;

	if (!uFnextOnEventDispatched)
	{
		uFnextOnEventDispatched = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.extOnEventDispatched");
	}

	UGearboxGFxMovie_execextOnEventDispatched_Params extOnEventDispatched_Params;
	memset(&extOnEventDispatched_Params, 0, sizeof(extOnEventDispatched_Params));
	memcpy_s(&extOnEventDispatched_Params.Path, sizeof(extOnEventDispatched_Params.Path), &Path, sizeof(Path));
	memcpy_s(&extOnEventDispatched_Params.EventData, sizeof(extOnEventDispatched_Params.EventData), &EventData, sizeof(EventData));
	memcpy_s(&extOnEventDispatched_Params.NumArrayEntries, sizeof(extOnEventDispatched_Params.NumArrayEntries), &NumArrayEntries, sizeof(NumArrayEntries));

	uFnextOnEventDispatched->iNative = 0;
	uFnextOnEventDispatched->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnextOnEventDispatched, &extOnEventDispatched_Params, nullptr);
	uFnextOnEventDispatched->FunctionFlags |= 0x400;
	uFnextOnEventDispatched->iNative = 2545;
};

// Function GearboxFramework.GearboxGFxMovie.ForceUpdateImages
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[33901])
// Parameter Info:

void UGearboxGFxMovie::ForceUpdateImages()
{
	static UFunction* uFnForceUpdateImages = nullptr;

	if (!uFnForceUpdateImages)
	{
		uFnForceUpdateImages = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.ForceUpdateImages");
	}

	UGearboxGFxMovie_execForceUpdateImages_Params ForceUpdateImages_Params;
	memset(&ForceUpdateImages_Params, 0, sizeof(ForceUpdateImages_Params));

	uFnForceUpdateImages->iNative = 0;
	uFnForceUpdateImages->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnForceUpdateImages, &ForceUpdateImages_Params, nullptr);
	uFnForceUpdateImages->FunctionFlags |= 0x400;
	uFnForceUpdateImages->iNative = 33901;
};

// Function GearboxFramework.GearboxGFxMovie.extOnClipUnloaded
// [0x12020002] (FUNC_Defined | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UGFxObject*              Clip                           (CPF_Parm)

void UGearboxGFxMovie::extOnClipUnloaded(class UGFxObject* Clip)
{
	static UFunction* uFnextOnClipUnloaded = nullptr;

	if (!uFnextOnClipUnloaded)
	{
		uFnextOnClipUnloaded = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.extOnClipUnloaded");
	}

	UGearboxGFxMovie_execextOnClipUnloaded_Params extOnClipUnloaded_Params;
	memset(&extOnClipUnloaded_Params, 0, sizeof(extOnClipUnloaded_Params));
	memcpy_s(&extOnClipUnloaded_Params.Clip, sizeof(extOnClipUnloaded_Params.Clip), &Clip, sizeof(Clip));

	this->ProcessEvent(uFnextOnClipUnloaded, &extOnClipUnloaded_Params, nullptr);
};

// Function GearboxFramework.GearboxGFxMovie.extOnClipLoaded
// [0x12020002] (FUNC_Defined | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UGFxObject*              Clip                           (CPF_Parm)

void UGearboxGFxMovie::extOnClipLoaded(class UGFxObject* Clip)
{
	static UFunction* uFnextOnClipLoaded = nullptr;

	if (!uFnextOnClipLoaded)
	{
		uFnextOnClipLoaded = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.extOnClipLoaded");
	}

	UGearboxGFxMovie_execextOnClipLoaded_Params extOnClipLoaded_Params;
	memset(&extOnClipLoaded_Params, 0, sizeof(extOnClipLoaded_Params));
	memcpy_s(&extOnClipLoaded_Params.Clip, sizeof(extOnClipLoaded_Params.Clip), &Clip, sizeof(Clip));

	this->ProcessEvent(uFnextOnClipLoaded, &extOnClipLoaded_Params, nullptr);
};

// Function GearboxFramework.GearboxGFxMovie.OnInputTypeChanged
// [0x00020402] (FUNC_Defined | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2546])
// Parameter Info:
// bool                           bNewUsingGamepad               (CPF_Parm)

void UGearboxGFxMovie::OnInputTypeChanged(bool bNewUsingGamepad)
{
	static UFunction* uFnOnInputTypeChanged = nullptr;

	if (!uFnOnInputTypeChanged)
	{
		uFnOnInputTypeChanged = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.OnInputTypeChanged");
	}

	UGearboxGFxMovie_execOnInputTypeChanged_Params OnInputTypeChanged_Params;
	memset(&OnInputTypeChanged_Params, 0, sizeof(OnInputTypeChanged_Params));
	OnInputTypeChanged_Params.bNewUsingGamepad = bNewUsingGamepad;

	uFnOnInputTypeChanged->iNative = 0;
	uFnOnInputTypeChanged->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnInputTypeChanged, &OnInputTypeChanged_Params, nullptr);
	uFnOnInputTypeChanged->FunctionFlags |= 0x400;
	uFnOnInputTypeChanged->iNative = 2546;
};

// Function GearboxFramework.GearboxGFxMovie.HandleHintInput
// [0x00020402] (FUNC_Defined | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2547])
// Parameter Info:
// const struct FPlatformUserId&  UserId                         (CPF_Parm)
// const struct FName&            HintTag                        (CPF_Parm)

void UGearboxGFxMovie::HandleHintInput(const struct FPlatformUserId& UserId, const struct FName& HintTag)
{
	static UFunction* uFnHandleHintInput = nullptr;

	if (!uFnHandleHintInput)
	{
		uFnHandleHintInput = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.HandleHintInput");
	}

	UGearboxGFxMovie_execHandleHintInput_Params HandleHintInput_Params;
	memset(&HandleHintInput_Params, 0, sizeof(HandleHintInput_Params));
	memcpy_s(&HandleHintInput_Params.UserId, sizeof(HandleHintInput_Params.UserId), &UserId, sizeof(UserId));
	memcpy_s(&HandleHintInput_Params.HintTag, sizeof(HandleHintInput_Params.HintTag), &HintTag, sizeof(HintTag));

	uFnHandleHintInput->iNative = 0;
	uFnHandleHintInput->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnHandleHintInput, &HandleHintInput_Params, nullptr);
	uFnHandleHintInput->FunctionFlags |= 0x400;
	uFnHandleHintInput->iNative = 2547;
};

// Function GearboxFramework.GearboxGFxMovie.PopulateHintBar
// [0x00020402] (FUNC_Defined | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2548])
// Parameter Info:

void UGearboxGFxMovie::PopulateHintBar()
{
	static UFunction* uFnPopulateHintBar = nullptr;

	if (!uFnPopulateHintBar)
	{
		uFnPopulateHintBar = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.PopulateHintBar");
	}

	UGearboxGFxMovie_execPopulateHintBar_Params PopulateHintBar_Params;
	memset(&PopulateHintBar_Params, 0, sizeof(PopulateHintBar_Params));

	uFnPopulateHintBar->iNative = 0;
	uFnPopulateHintBar->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPopulateHintBar, &PopulateHintBar_Params, nullptr);
	uFnPopulateHintBar->FunctionFlags |= 0x400;
	uFnPopulateHintBar->iNative = 2548;
};

// Function GearboxFramework.GearboxGFxMovie.FilterButtonInput
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FPlatformUserId&  UserId                         (CPF_Parm)
// const struct FName&            ButtonName                     (CPF_Parm)
// EInputEvent                    InputEvent                     (CPF_Parm)

bool UGearboxGFxMovie::eventFilterButtonInput(const struct FPlatformUserId& UserId, const struct FName& ButtonName, EInputEvent InputEvent)
{
	static UFunction* uFnFilterButtonInput = nullptr;

	if (!uFnFilterButtonInput)
	{
		uFnFilterButtonInput = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.FilterButtonInput");
	}

	UGearboxGFxMovie_eventFilterButtonInput_Params FilterButtonInput_Params;
	memset(&FilterButtonInput_Params, 0, sizeof(FilterButtonInput_Params));
	memcpy_s(&FilterButtonInput_Params.UserId, sizeof(FilterButtonInput_Params.UserId), &UserId, sizeof(UserId));
	memcpy_s(&FilterButtonInput_Params.ButtonName, sizeof(FilterButtonInput_Params.ButtonName), &ButtonName, sizeof(ButtonName));
	memcpy_s(&FilterButtonInput_Params.InputEvent, sizeof(FilterButtonInput_Params.InputEvent), &InputEvent, sizeof(InputEvent));

	this->ProcessEvent(uFnFilterButtonInput, &FilterButtonInput_Params, nullptr);

	return FilterButtonInput_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGFxMovie.extUncacheClip
// [0x12020002] (FUNC_Defined | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const class FString&           ClassName                      (CPF_Parm | CPF_NeedCtorLink)
// class UGFxObject*              Clip                           (CPF_Parm)

void UGearboxGFxMovie::extUncacheClip(const class FString& ClassName, class UGFxObject* Clip)
{
	static UFunction* uFnextUncacheClip = nullptr;

	if (!uFnextUncacheClip)
	{
		uFnextUncacheClip = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.extUncacheClip");
	}

	UGearboxGFxMovie_execextUncacheClip_Params extUncacheClip_Params;
	memset(&extUncacheClip_Params, 0, sizeof(extUncacheClip_Params));
	memcpy_s(&extUncacheClip_Params.ClassName, sizeof(extUncacheClip_Params.ClassName), &ClassName, sizeof(ClassName));
	memcpy_s(&extUncacheClip_Params.Clip, sizeof(extUncacheClip_Params.Clip), &Clip, sizeof(Clip));

	this->ProcessEvent(uFnextUncacheClip, &extUncacheClip_Params, nullptr);
};

// Function GearboxFramework.GearboxGFxMovie.extCacheClip
// [0x12020002] (FUNC_Defined | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const class FString&           ClassName                      (CPF_Parm | CPF_NeedCtorLink)
// class UGFxObject*              Clip                           (CPF_Parm)

void UGearboxGFxMovie::extCacheClip(const class FString& ClassName, class UGFxObject* Clip)
{
	static UFunction* uFnextCacheClip = nullptr;

	if (!uFnextCacheClip)
	{
		uFnextCacheClip = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.extCacheClip");
	}

	UGearboxGFxMovie_execextCacheClip_Params extCacheClip_Params;
	memset(&extCacheClip_Params, 0, sizeof(extCacheClip_Params));
	memcpy_s(&extCacheClip_Params.ClassName, sizeof(extCacheClip_Params.ClassName), &ClassName, sizeof(ClassName));
	memcpy_s(&extCacheClip_Params.Clip, sizeof(extCacheClip_Params.Clip), &Clip, sizeof(Clip));

	this->ProcessEvent(uFnextCacheClip, &extCacheClip_Params, nullptr);
};

// Function GearboxFramework.GearboxGFxMovie.GetUCClassForASClass
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[31382])
// Parameter Info:
// class UClass*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FName&            ClassName                      (CPF_Parm)

class UClass* UGearboxGFxMovie::GetUCClassForASClass(const struct FName& ClassName)
{
	static UFunction* uFnGetUCClassForASClass = nullptr;

	if (!uFnGetUCClassForASClass)
	{
		uFnGetUCClassForASClass = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.GetUCClassForASClass");
	}

	UGearboxGFxMovie_execGetUCClassForASClass_Params GetUCClassForASClass_Params;
	memset(&GetUCClassForASClass_Params, 0, sizeof(GetUCClassForASClass_Params));
	memcpy_s(&GetUCClassForASClass_Params.ClassName, sizeof(GetUCClassForASClass_Params.ClassName), &ClassName, sizeof(ClassName));

	uFnGetUCClassForASClass->iNative = 0;
	uFnGetUCClassForASClass->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetUCClassForASClass, &GetUCClassForASClass_Params, nullptr);
	uFnGetUCClassForASClass->FunctionFlags |= 0x400;
	uFnGetUCClassForASClass->iNative = 31382;

	return GetUCClassForASClass_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGFxMovie.GetBehaviorConsumerHandle
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34051])
// Parameter Info:
// struct FBehaviorConsumerHandle ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FBehaviorConsumerHandle UGearboxGFxMovie::GetBehaviorConsumerHandle()
{
	static UFunction* uFnGetBehaviorConsumerHandle = nullptr;

	if (!uFnGetBehaviorConsumerHandle)
	{
		uFnGetBehaviorConsumerHandle = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.GetBehaviorConsumerHandle");
	}

	UGearboxGFxMovie_execGetBehaviorConsumerHandle_Params GetBehaviorConsumerHandle_Params;
	memset(&GetBehaviorConsumerHandle_Params, 0, sizeof(GetBehaviorConsumerHandle_Params));

	uFnGetBehaviorConsumerHandle->iNative = 0;
	uFnGetBehaviorConsumerHandle->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetBehaviorConsumerHandle, &GetBehaviorConsumerHandle_Params, nullptr);
	uFnGetBehaviorConsumerHandle->FunctionFlags |= 0x400;
	uFnGetBehaviorConsumerHandle->iNative = 34051;

	return GetBehaviorConsumerHandle_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGFxMovie.OnSetViewport
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UGearboxGFxMovie::eventOnSetViewport()
{
	static UFunction* uFnOnSetViewport = nullptr;

	if (!uFnOnSetViewport)
	{
		uFnOnSetViewport = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.OnSetViewport");
	}

	UGearboxGFxMovie_eventOnSetViewport_Params OnSetViewport_Params;
	memset(&OnSetViewport_Params, 0, sizeof(OnSetViewport_Params));

	this->ProcessEvent(uFnOnSetViewport, &OnSetViewport_Params, nullptr);
};

// Function GearboxFramework.GearboxGFxMovie.extSetLanguageExt
// [0x12020002] (FUNC_Defined | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const class FString&           ClipPath                       (CPF_Parm | CPF_NeedCtorLink)

void UGearboxGFxMovie::extSetLanguageExt(const class FString& ClipPath)
{
	static UFunction* uFnextSetLanguageExt = nullptr;

	if (!uFnextSetLanguageExt)
	{
		uFnextSetLanguageExt = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.extSetLanguageExt");
	}

	UGearboxGFxMovie_execextSetLanguageExt_Params extSetLanguageExt_Params;
	memset(&extSetLanguageExt_Params, 0, sizeof(extSetLanguageExt_Params));
	memcpy_s(&extSetLanguageExt_Params.ClipPath, sizeof(extSetLanguageExt_Params.ClipPath), &ClipPath, sizeof(ClipPath));

	this->ProcessEvent(uFnextSetLanguageExt, &extSetLanguageExt_Params, nullptr);
};

// Function GearboxFramework.GearboxGFxMovie.OnClosedOnDeath
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UGearboxGFxMovie::OnClosedOnDeath()
{
	static UFunction* uFnOnClosedOnDeath = nullptr;

	if (!uFnOnClosedOnDeath)
	{
		uFnOnClosedOnDeath = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.OnClosedOnDeath");
	}

	UGearboxGFxMovie_execOnClosedOnDeath_Params OnClosedOnDeath_Params;
	memset(&OnClosedOnDeath_Params, 0, sizeof(OnClosedOnDeath_Params));

	this->ProcessEvent(uFnOnClosedOnDeath, &OnClosedOnDeath_Params, nullptr);
};

// Function GearboxFramework.GearboxGFxMovie.GetStyleDebugString
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UGearboxGFxMovie::GetStyleDebugString()
{
	static UFunction* uFnGetStyleDebugString = nullptr;

	if (!uFnGetStyleDebugString)
	{
		uFnGetStyleDebugString = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.GetStyleDebugString");
	}

	UGearboxGFxMovie_execGetStyleDebugString_Params GetStyleDebugString_Params;
	memset(&GetStyleDebugString_Params, 0, sizeof(GetStyleDebugString_Params));

	this->ProcessEvent(uFnGetStyleDebugString, &GetStyleDebugString_Params, nullptr);

	return GetStyleDebugString_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGFxMovie.GetStateDebugString
// [0x12024000] (FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// bool                           bIncludeFlags                  (CPF_OptionalParm | CPF_Parm)

class FString UGearboxGFxMovie::GetStateDebugString(bool bIncludeFlags)
{
	static UFunction* uFnGetStateDebugString = nullptr;

	if (!uFnGetStateDebugString)
	{
		uFnGetStateDebugString = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.GetStateDebugString");
	}

	UGearboxGFxMovie_execGetStateDebugString_Params GetStateDebugString_Params;
	memset(&GetStateDebugString_Params, 0, sizeof(GetStateDebugString_Params));
	GetStateDebugString_Params.bIncludeFlags = bIncludeFlags;

	this->ProcessEvent(uFnGetStateDebugString, &GetStateDebugString_Params, nullptr);

	return GetStateDebugString_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGFxMovie.InitializeFrom
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34556])
// Parameter Info:
// class UGearboxGFxMovie*        SrcMovie                       (CPF_Parm)

void UGearboxGFxMovie::InitializeFrom(class UGearboxGFxMovie* SrcMovie)
{
	static UFunction* uFnInitializeFrom = nullptr;

	if (!uFnInitializeFrom)
	{
		uFnInitializeFrom = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.InitializeFrom");
	}

	UGearboxGFxMovie_execInitializeFrom_Params InitializeFrom_Params;
	memset(&InitializeFrom_Params, 0, sizeof(InitializeFrom_Params));
	memcpy_s(&InitializeFrom_Params.SrcMovie, sizeof(InitializeFrom_Params.SrcMovie), &SrcMovie, sizeof(SrcMovie));

	uFnInitializeFrom->iNative = 0;
	uFnInitializeFrom->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInitializeFrom, &InitializeFrom_Params, nullptr);
	uFnInitializeFrom->FunctionFlags |= 0x400;
	uFnInitializeFrom->iNative = 34556;
};

// Function GearboxFramework.GearboxGFxMovie.RemoveStylesDrawnTo
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35680])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UPrimitiveComponent*     PrimComp                       (CPF_Parm | CPF_EditInline)
// class UIGFxActorMovie*         Target                         (CPF_Parm)

bool UGearboxGFxMovie::RemoveStylesDrawnTo(class UPrimitiveComponent* PrimComp, class UIGFxActorMovie* Target)
{
	static UFunction* uFnRemoveStylesDrawnTo = nullptr;

	if (!uFnRemoveStylesDrawnTo)
	{
		uFnRemoveStylesDrawnTo = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.RemoveStylesDrawnTo");
	}

	UGearboxGFxMovie_execRemoveStylesDrawnTo_Params RemoveStylesDrawnTo_Params;
	memset(&RemoveStylesDrawnTo_Params, 0, sizeof(RemoveStylesDrawnTo_Params));
	memcpy_s(&RemoveStylesDrawnTo_Params.PrimComp, sizeof(RemoveStylesDrawnTo_Params.PrimComp), &PrimComp, sizeof(PrimComp));
	memcpy_s(&RemoveStylesDrawnTo_Params.Target, sizeof(RemoveStylesDrawnTo_Params.Target), &Target, sizeof(Target));

	uFnRemoveStylesDrawnTo->iNative = 0;
	uFnRemoveStylesDrawnTo->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRemoveStylesDrawnTo, &RemoveStylesDrawnTo_Params, nullptr);
	uFnRemoveStylesDrawnTo->FunctionFlags |= 0x400;
	uFnRemoveStylesDrawnTo->iNative = 35680;

	return RemoveStylesDrawnTo_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGFxMovie.RemoveStyles
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35679])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UIGFxActorMovie*         Target                         (CPF_Parm)

bool UGearboxGFxMovie::RemoveStyles(class UIGFxActorMovie* Target)
{
	static UFunction* uFnRemoveStyles = nullptr;

	if (!uFnRemoveStyles)
	{
		uFnRemoveStyles = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.RemoveStyles");
	}

	UGearboxGFxMovie_execRemoveStyles_Params RemoveStyles_Params;
	memset(&RemoveStyles_Params, 0, sizeof(RemoveStyles_Params));
	memcpy_s(&RemoveStyles_Params.Target, sizeof(RemoveStyles_Params.Target), &Target, sizeof(Target));

	uFnRemoveStyles->iNative = 0;
	uFnRemoveStyles->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRemoveStyles, &RemoveStyles_Params, nullptr);
	uFnRemoveStyles->FunctionFlags |= 0x400;
	uFnRemoveStyles->iNative = 35679;

	return RemoveStyles_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGFxMovie.RemoveStyle
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35678])
// Parameter Info:
// class UGFxMovieDrawStyle*      Style                          (CPF_Parm)

void UGearboxGFxMovie::RemoveStyle(class UGFxMovieDrawStyle* Style)
{
	static UFunction* uFnRemoveStyle = nullptr;

	if (!uFnRemoveStyle)
	{
		uFnRemoveStyle = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.RemoveStyle");
	}

	UGearboxGFxMovie_execRemoveStyle_Params RemoveStyle_Params;
	memset(&RemoveStyle_Params, 0, sizeof(RemoveStyle_Params));
	memcpy_s(&RemoveStyle_Params.Style, sizeof(RemoveStyle_Params.Style), &Style, sizeof(Style));

	uFnRemoveStyle->iNative = 0;
	uFnRemoveStyle->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRemoveStyle, &RemoveStyle_Params, nullptr);
	uFnRemoveStyle->FunctionFlags |= 0x400;
	uFnRemoveStyle->iNative = 35678;
};

// Function GearboxFramework.GearboxGFxMovie.AddStyle
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[31682])
// Parameter Info:
// class UGFxMovieDrawStyle*      Style                          (CPF_Parm)

void UGearboxGFxMovie::AddStyle(class UGFxMovieDrawStyle* Style)
{
	static UFunction* uFnAddStyle = nullptr;

	if (!uFnAddStyle)
	{
		uFnAddStyle = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.AddStyle");
	}

	UGearboxGFxMovie_execAddStyle_Params AddStyle_Params;
	memset(&AddStyle_Params, 0, sizeof(AddStyle_Params));
	memcpy_s(&AddStyle_Params.Style, sizeof(AddStyle_Params.Style), &Style, sizeof(Style));

	uFnAddStyle->iNative = 0;
	uFnAddStyle->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnAddStyle, &AddStyle_Params, nullptr);
	uFnAddStyle->FunctionFlags |= 0x400;
	uFnAddStyle->iNative = 31682;
};

// Function GearboxFramework.GearboxGFxMovie.ShutdownMoviePlayback
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35963])
// Parameter Info:

void UGearboxGFxMovie::ShutdownMoviePlayback()
{
	static UFunction* uFnShutdownMoviePlayback = nullptr;

	if (!uFnShutdownMoviePlayback)
	{
		uFnShutdownMoviePlayback = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.ShutdownMoviePlayback");
	}

	UGearboxGFxMovie_execShutdownMoviePlayback_Params ShutdownMoviePlayback_Params;
	memset(&ShutdownMoviePlayback_Params, 0, sizeof(ShutdownMoviePlayback_Params));

	uFnShutdownMoviePlayback->iNative = 0;
	uFnShutdownMoviePlayback->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnShutdownMoviePlayback, &ShutdownMoviePlayback_Params, nullptr);
	uFnShutdownMoviePlayback->FunctionFlags |= 0x400;
	uFnShutdownMoviePlayback->iNative = 35963;
};

// Function GearboxFramework.GearboxGFxMovie.InitMoviePlayback
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34560])
// Parameter Info:

void UGearboxGFxMovie::InitMoviePlayback()
{
	static UFunction* uFnInitMoviePlayback = nullptr;

	if (!uFnInitMoviePlayback)
	{
		uFnInitMoviePlayback = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.InitMoviePlayback");
	}

	UGearboxGFxMovie_execInitMoviePlayback_Params InitMoviePlayback_Params;
	memset(&InitMoviePlayback_Params, 0, sizeof(InitMoviePlayback_Params));

	uFnInitMoviePlayback->iNative = 0;
	uFnInitMoviePlayback->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInitMoviePlayback, &InitMoviePlayback_Params, nullptr);
	uFnInitMoviePlayback->FunctionFlags |= 0x400;
	uFnInitMoviePlayback->iNative = 34560;
};

// Function GearboxFramework.GearboxGFxMovie.GetRenderTexture
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34193])
// Parameter Info:
// class UTextureRenderTarget2D*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UTextureRenderTarget2D* UGearboxGFxMovie::GetRenderTexture()
{
	static UFunction* uFnGetRenderTexture = nullptr;

	if (!uFnGetRenderTexture)
	{
		uFnGetRenderTexture = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.GetRenderTexture");
	}

	UGearboxGFxMovie_execGetRenderTexture_Params GetRenderTexture_Params;
	memset(&GetRenderTexture_Params, 0, sizeof(GetRenderTexture_Params));

	uFnGetRenderTexture->iNative = 0;
	uFnGetRenderTexture->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetRenderTexture, &GetRenderTexture_Params, nullptr);
	uFnGetRenderTexture->FunctionFlags |= 0x400;
	uFnGetRenderTexture->iNative = 34193;

	return GetRenderTexture_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGFxMovie.MovieState_OnChanged
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           bStateWasChanged               (CPF_Parm)

void UGearboxGFxMovie::eventMovieState_OnChanged(bool bStateWasChanged)
{
	static UFunction* uFnMovieState_OnChanged = nullptr;

	if (!uFnMovieState_OnChanged)
	{
		uFnMovieState_OnChanged = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.MovieState_OnChanged");
	}

	UGearboxGFxMovie_eventMovieState_OnChanged_Params MovieState_OnChanged_Params;
	memset(&MovieState_OnChanged_Params, 0, sizeof(MovieState_OnChanged_Params));
	MovieState_OnChanged_Params.bStateWasChanged = bStateWasChanged;

	this->ProcessEvent(uFnMovieState_OnChanged, &MovieState_OnChanged_Params, nullptr);
};

// Function GearboxFramework.GearboxGFxMovie.MovieState_SetFromMovie
// [0x12020801] (FUNC_Final | FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UGearboxGFxMovie*        Movie                          (CPF_Parm)

bool UGearboxGFxMovie::eventMovieState_SetFromMovie(class UGearboxGFxMovie* Movie)
{
	static UFunction* uFnMovieState_SetFromMovie = nullptr;

	if (!uFnMovieState_SetFromMovie)
	{
		uFnMovieState_SetFromMovie = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.MovieState_SetFromMovie");
	}

	UGearboxGFxMovie_eventMovieState_SetFromMovie_Params MovieState_SetFromMovie_Params;
	memset(&MovieState_SetFromMovie_Params, 0, sizeof(MovieState_SetFromMovie_Params));
	memcpy_s(&MovieState_SetFromMovie_Params.Movie, sizeof(MovieState_SetFromMovie_Params.Movie), &Movie, sizeof(Movie));

	this->ProcessEvent(uFnMovieState_SetFromMovie, &MovieState_SetFromMovie_Params, nullptr);

	return MovieState_SetFromMovie_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGFxMovie.MovieState_Copy
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35022])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FMovieStateStruct       StateDst                       (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// struct FMovieStateStruct       StateSrc                       (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UGearboxGFxMovie::MovieState_Copy(struct FMovieStateStruct& StateDst, struct FMovieStateStruct& StateSrc)
{
	static UFunction* uFnMovieState_Copy = nullptr;

	if (!uFnMovieState_Copy)
	{
		uFnMovieState_Copy = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.MovieState_Copy");
	}

	UGearboxGFxMovie_execMovieState_Copy_Params MovieState_Copy_Params;
	memset(&MovieState_Copy_Params, 0, sizeof(MovieState_Copy_Params));
	memcpy_s(&MovieState_Copy_Params.StateDst, sizeof(MovieState_Copy_Params.StateDst), &StateDst, sizeof(StateDst));
	memcpy_s(&MovieState_Copy_Params.StateSrc, sizeof(MovieState_Copy_Params.StateSrc), &StateSrc, sizeof(StateSrc));

	uFnMovieState_Copy->iNative = 0;
	uFnMovieState_Copy->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnMovieState_Copy, &MovieState_Copy_Params, nullptr);
	uFnMovieState_Copy->FunctionFlags |= 0x400;
	uFnMovieState_Copy->iNative = 35022;

	memcpy_s(&StateDst, sizeof(StateDst), &MovieState_Copy_Params.StateDst, sizeof(MovieState_Copy_Params.StateDst));
	memcpy_s(&StateSrc, sizeof(StateSrc), &MovieState_Copy_Params.StateSrc, sizeof(MovieState_Copy_Params.StateSrc));

	return MovieState_Copy_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGFxMovie.MovieState_Compare
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35021])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FMovieStateStruct       S1                             (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// struct FMovieStateStruct       S2                             (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UGearboxGFxMovie::MovieState_Compare(struct FMovieStateStruct& S1, struct FMovieStateStruct& S2)
{
	static UFunction* uFnMovieState_Compare = nullptr;

	if (!uFnMovieState_Compare)
	{
		uFnMovieState_Compare = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.MovieState_Compare");
	}

	UGearboxGFxMovie_execMovieState_Compare_Params MovieState_Compare_Params;
	memset(&MovieState_Compare_Params, 0, sizeof(MovieState_Compare_Params));
	memcpy_s(&MovieState_Compare_Params.S1, sizeof(MovieState_Compare_Params.S1), &S1, sizeof(S1));
	memcpy_s(&MovieState_Compare_Params.S2, sizeof(MovieState_Compare_Params.S2), &S2, sizeof(S2));

	uFnMovieState_Compare->iNative = 0;
	uFnMovieState_Compare->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnMovieState_Compare, &MovieState_Compare_Params, nullptr);
	uFnMovieState_Compare->FunctionFlags |= 0x400;
	uFnMovieState_Compare->iNative = 35021;

	memcpy_s(&S1, sizeof(S1), &MovieState_Compare_Params.S1, sizeof(MovieState_Compare_Params.S1));
	memcpy_s(&S2, sizeof(S2), &MovieState_Compare_Params.S2, sizeof(MovieState_Compare_Params.S2));

	return MovieState_Compare_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGFxMovie.MovieState_Toggle
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35031])
// Parameter Info:
// const struct FName&            TheState                       (CPF_Parm)

void UGearboxGFxMovie::MovieState_Toggle(const struct FName& TheState)
{
	static UFunction* uFnMovieState_Toggle = nullptr;

	if (!uFnMovieState_Toggle)
	{
		uFnMovieState_Toggle = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.MovieState_Toggle");
	}

	UGearboxGFxMovie_execMovieState_Toggle_Params MovieState_Toggle_Params;
	memset(&MovieState_Toggle_Params, 0, sizeof(MovieState_Toggle_Params));
	memcpy_s(&MovieState_Toggle_Params.TheState, sizeof(MovieState_Toggle_Params.TheState), &TheState, sizeof(TheState));

	uFnMovieState_Toggle->iNative = 0;
	uFnMovieState_Toggle->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnMovieState_Toggle, &MovieState_Toggle_Params, nullptr);
	uFnMovieState_Toggle->FunctionFlags |= 0x400;
	uFnMovieState_Toggle->iNative = 35031;
};

// Function GearboxFramework.GearboxGFxMovie.MovieState_Enable
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[35024])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FName&            TheState                       (CPF_Parm)
// bool                           bEnable                        (CPF_OptionalParm | CPF_Parm)

bool UGearboxGFxMovie::MovieState_Enable(const struct FName& TheState, bool bEnable)
{
	static UFunction* uFnMovieState_Enable = nullptr;

	if (!uFnMovieState_Enable)
	{
		uFnMovieState_Enable = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.MovieState_Enable");
	}

	UGearboxGFxMovie_execMovieState_Enable_Params MovieState_Enable_Params;
	memset(&MovieState_Enable_Params, 0, sizeof(MovieState_Enable_Params));
	memcpy_s(&MovieState_Enable_Params.TheState, sizeof(MovieState_Enable_Params.TheState), &TheState, sizeof(TheState));
	MovieState_Enable_Params.bEnable = bEnable;

	uFnMovieState_Enable->iNative = 0;
	uFnMovieState_Enable->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnMovieState_Enable, &MovieState_Enable_Params, nullptr);
	uFnMovieState_Enable->FunctionFlags |= 0x400;
	uFnMovieState_Enable->iNative = 35024;

	return MovieState_Enable_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGFxMovie.MovieState_IsEnabled
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35027])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FName&            TheState                       (CPF_Parm)

bool UGearboxGFxMovie::MovieState_IsEnabled(const struct FName& TheState)
{
	static UFunction* uFnMovieState_IsEnabled = nullptr;

	if (!uFnMovieState_IsEnabled)
	{
		uFnMovieState_IsEnabled = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.MovieState_IsEnabled");
	}

	UGearboxGFxMovie_execMovieState_IsEnabled_Params MovieState_IsEnabled_Params;
	memset(&MovieState_IsEnabled_Params, 0, sizeof(MovieState_IsEnabled_Params));
	memcpy_s(&MovieState_IsEnabled_Params.TheState, sizeof(MovieState_IsEnabled_Params.TheState), &TheState, sizeof(TheState));

	uFnMovieState_IsEnabled->iNative = 0;
	uFnMovieState_IsEnabled->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnMovieState_IsEnabled, &MovieState_IsEnabled_Params, nullptr);
	uFnMovieState_IsEnabled->FunctionFlags |= 0x400;
	uFnMovieState_IsEnabled->iNative = 35027;

	return MovieState_IsEnabled_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGFxMovie.MovieState_SupportsState
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35030])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FName&            TheState                       (CPF_Parm)

bool UGearboxGFxMovie::MovieState_SupportsState(const struct FName& TheState)
{
	static UFunction* uFnMovieState_SupportsState = nullptr;

	if (!uFnMovieState_SupportsState)
	{
		uFnMovieState_SupportsState = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.MovieState_SupportsState");
	}

	UGearboxGFxMovie_execMovieState_SupportsState_Params MovieState_SupportsState_Params;
	memset(&MovieState_SupportsState_Params, 0, sizeof(MovieState_SupportsState_Params));
	memcpy_s(&MovieState_SupportsState_Params.TheState, sizeof(MovieState_SupportsState_Params.TheState), &TheState, sizeof(TheState));

	uFnMovieState_SupportsState->iNative = 0;
	uFnMovieState_SupportsState->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnMovieState_SupportsState, &MovieState_SupportsState_Params, nullptr);
	uFnMovieState_SupportsState->FunctionFlags |= 0x400;
	uFnMovieState_SupportsState->iNative = 35030;

	return MovieState_SupportsState_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGFxMovie.MovieState_Init
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35026])
// Parameter Info:

void UGearboxGFxMovie::MovieState_Init()
{
	static UFunction* uFnMovieState_Init = nullptr;

	if (!uFnMovieState_Init)
	{
		uFnMovieState_Init = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.MovieState_Init");
	}

	UGearboxGFxMovie_execMovieState_Init_Params MovieState_Init_Params;
	memset(&MovieState_Init_Params, 0, sizeof(MovieState_Init_Params));

	uFnMovieState_Init->iNative = 0;
	uFnMovieState_Init->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnMovieState_Init, &MovieState_Init_Params, nullptr);
	uFnMovieState_Init->FunctionFlags |= 0x400;
	uFnMovieState_Init->iNative = 35026;
};

// Function GearboxFramework.GearboxGFxMovie.InitFromDefinition
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34533])
// Parameter Info:

void UGearboxGFxMovie::InitFromDefinition()
{
	static UFunction* uFnInitFromDefinition = nullptr;

	if (!uFnInitFromDefinition)
	{
		uFnInitFromDefinition = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.InitFromDefinition");
	}

	UGearboxGFxMovie_execInitFromDefinition_Params InitFromDefinition_Params;
	memset(&InitFromDefinition_Params, 0, sizeof(InitFromDefinition_Params));

	uFnInitFromDefinition->iNative = 0;
	uFnInitFromDefinition->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInitFromDefinition, &InitFromDefinition_Params, nullptr);
	uFnInitFromDefinition->FunctionFlags |= 0x400;
	uFnInitFromDefinition->iNative = 34533;
};

// Function GearboxFramework.GearboxGFxMovie.MovieState_Apply
// [0x12022000] (FUNC_Static | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UGearboxGFxMovie*        Movie                          (CPF_Parm)
// class UClass*                  HandlerClass                   (CPF_Parm)

void UGearboxGFxMovie::MovieState_Apply(class UGearboxGFxMovie* Movie, class UClass* HandlerClass)
{
	static UFunction* uFnMovieState_Apply = nullptr;

	if (!uFnMovieState_Apply)
	{
		uFnMovieState_Apply = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.MovieState_Apply");
	}

	UGearboxGFxMovie_execMovieState_Apply_Params MovieState_Apply_Params;
	memset(&MovieState_Apply_Params, 0, sizeof(MovieState_Apply_Params));
	memcpy_s(&MovieState_Apply_Params.Movie, sizeof(MovieState_Apply_Params.Movie), &Movie, sizeof(Movie));
	memcpy_s(&MovieState_Apply_Params.HandlerClass, sizeof(MovieState_Apply_Params.HandlerClass), &HandlerClass, sizeof(HandlerClass));

	UGearboxGFxMovie::StaticClass()->ProcessEvent(uFnMovieState_Apply, &MovieState_Apply_Params, nullptr);
};

// Function GearboxFramework.GearboxGFxMovie.MovieState_ApplyState
// [0x12022000] (FUNC_Static | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FName&            TheState                       (CPF_Parm)
// class UGearboxGFxMovie*        Movie                          (CPF_Parm)

void UGearboxGFxMovie::MovieState_ApplyState(const struct FName& TheState, class UGearboxGFxMovie* Movie)
{
	static UFunction* uFnMovieState_ApplyState = nullptr;

	if (!uFnMovieState_ApplyState)
	{
		uFnMovieState_ApplyState = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.MovieState_ApplyState");
	}

	UGearboxGFxMovie_execMovieState_ApplyState_Params MovieState_ApplyState_Params;
	memset(&MovieState_ApplyState_Params, 0, sizeof(MovieState_ApplyState_Params));
	memcpy_s(&MovieState_ApplyState_Params.TheState, sizeof(MovieState_ApplyState_Params.TheState), &TheState, sizeof(TheState));
	memcpy_s(&MovieState_ApplyState_Params.Movie, sizeof(MovieState_ApplyState_Params.Movie), &Movie, sizeof(Movie));

	UGearboxGFxMovie::StaticClass()->ProcessEvent(uFnMovieState_ApplyState, &MovieState_ApplyState_Params, nullptr);
};

// Function GearboxFramework.GearboxGFxMovie.ApplyState
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const class FString&           StateName                      (CPF_Parm | CPF_NeedCtorLink)
// const class FString&           StateAction                    (CPF_Parm | CPF_NeedCtorLink)

void UGearboxGFxMovie::ApplyState(const class FString& StateName, const class FString& StateAction)
{
	static UFunction* uFnApplyState = nullptr;

	if (!uFnApplyState)
	{
		uFnApplyState = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.ApplyState");
	}

	UGearboxGFxMovie_execApplyState_Params ApplyState_Params;
	memset(&ApplyState_Params, 0, sizeof(ApplyState_Params));
	memcpy_s(&ApplyState_Params.StateName, sizeof(ApplyState_Params.StateName), &StateName, sizeof(StateName));
	memcpy_s(&ApplyState_Params.StateAction, sizeof(ApplyState_Params.StateAction), &StateAction, sizeof(StateAction));

	this->ProcessEvent(uFnApplyState, &ApplyState_Params, nullptr);
};

// Function GearboxFramework.GearboxGFxMovie.SetRenderingEnabled
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           bEnabled                       (CPF_Parm)

void UGearboxGFxMovie::SetRenderingEnabled(bool bEnabled)
{
	static UFunction* uFnSetRenderingEnabled = nullptr;

	if (!uFnSetRenderingEnabled)
	{
		uFnSetRenderingEnabled = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.SetRenderingEnabled");
	}

	UGearboxGFxMovie_execSetRenderingEnabled_Params SetRenderingEnabled_Params;
	memset(&SetRenderingEnabled_Params, 0, sizeof(SetRenderingEnabled_Params));
	SetRenderingEnabled_Params.bEnabled = bEnabled;

	this->ProcessEvent(uFnSetRenderingEnabled, &SetRenderingEnabled_Params, nullptr);
};

// Function GearboxFramework.GearboxGFxMovie.GotoAndStop
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const class FString&           FrameLabel                     (CPF_Parm | CPF_NeedCtorLink)

void UGearboxGFxMovie::GotoAndStop(const class FString& FrameLabel)
{
	static UFunction* uFnGotoAndStop = nullptr;

	if (!uFnGotoAndStop)
	{
		uFnGotoAndStop = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.GotoAndStop");
	}

	UGearboxGFxMovie_execGotoAndStop_Params GotoAndStop_Params;
	memset(&GotoAndStop_Params, 0, sizeof(GotoAndStop_Params));
	memcpy_s(&GotoAndStop_Params.FrameLabel, sizeof(GotoAndStop_Params.FrameLabel), &FrameLabel, sizeof(FrameLabel));

	this->ProcessEvent(uFnGotoAndStop, &GotoAndStop_Params, nullptr);
};

// Function GearboxFramework.GearboxGFxMovie.GotoAndPlay
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const class FString&           FrameLabel                     (CPF_Parm | CPF_NeedCtorLink)

void UGearboxGFxMovie::GotoAndPlay(const class FString& FrameLabel)
{
	static UFunction* uFnGotoAndPlay = nullptr;

	if (!uFnGotoAndPlay)
	{
		uFnGotoAndPlay = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.GotoAndPlay");
	}

	UGearboxGFxMovie_execGotoAndPlay_Params GotoAndPlay_Params;
	memset(&GotoAndPlay_Params, 0, sizeof(GotoAndPlay_Params));
	memcpy_s(&GotoAndPlay_Params.FrameLabel, sizeof(GotoAndPlay_Params.FrameLabel), &FrameLabel, sizeof(FrameLabel));

	this->ProcessEvent(uFnGotoAndPlay, &GotoAndPlay_Params, nullptr);
};

// Function GearboxFramework.GearboxGFxMovie.TriggerUIEvent
// [0x12020002] (FUNC_Defined | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const class FString&           EventString                    (CPF_Parm | CPF_NeedCtorLink)

void UGearboxGFxMovie::TriggerUIEvent(const class FString& EventString)
{
	static UFunction* uFnTriggerUIEvent = nullptr;

	if (!uFnTriggerUIEvent)
	{
		uFnTriggerUIEvent = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.TriggerUIEvent");
	}

	UGearboxGFxMovie_execTriggerUIEvent_Params TriggerUIEvent_Params;
	memset(&TriggerUIEvent_Params, 0, sizeof(TriggerUIEvent_Params));
	memcpy_s(&TriggerUIEvent_Params.EventString, sizeof(TriggerUIEvent_Params.EventString), &EventString, sizeof(EventString));

	this->ProcessEvent(uFnTriggerUIEvent, &TriggerUIEvent_Params, nullptr);
};

// Function GearboxFramework.GearboxGFxMovie.PlaySpecialUISound
// [0x12020002] (FUNC_Defined | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const class FString&           SoundString                    (CPF_Parm | CPF_NeedCtorLink)

void UGearboxGFxMovie::PlaySpecialUISound(const class FString& SoundString)
{
	static UFunction* uFnPlaySpecialUISound = nullptr;

	if (!uFnPlaySpecialUISound)
	{
		uFnPlaySpecialUISound = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.PlaySpecialUISound");
	}

	UGearboxGFxMovie_execPlaySpecialUISound_Params PlaySpecialUISound_Params;
	memset(&PlaySpecialUISound_Params, 0, sizeof(PlaySpecialUISound_Params));
	memcpy_s(&PlaySpecialUISound_Params.SoundString, sizeof(PlaySpecialUISound_Params.SoundString), &SoundString, sizeof(SoundString));

	this->ProcessEvent(uFnPlaySpecialUISound, &PlaySpecialUISound_Params, nullptr);
};

// Function GearboxFramework.GearboxGFxMovie.PlayUISound
// [0x00020C00] (FUNC_Native | FUNC_Event | FUNC_Public | FUNC_AllFlags) (iNative[14854])
// Parameter Info:
// const struct FName&            UIEvent                        (CPF_Parm)

void UGearboxGFxMovie::eventPlayUISound(const struct FName& UIEvent)
{
	static UFunction* uFnPlayUISound = nullptr;

	if (!uFnPlayUISound)
	{
		uFnPlayUISound = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.PlayUISound");
	}

	UGearboxGFxMovie_eventPlayUISound_Params PlayUISound_Params;
	memset(&PlayUISound_Params, 0, sizeof(PlayUISound_Params));
	memcpy_s(&PlayUISound_Params.UIEvent, sizeof(PlayUISound_Params.UIEvent), &UIEvent, sizeof(UIEvent));

	uFnPlayUISound->iNative = 0;
	uFnPlayUISound->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPlayUISound, &PlayUISound_Params, nullptr);
	uFnPlayUISound->FunctionFlags |= 0x400;
	uFnPlayUISound->iNative = 14854;
};

// Function GearboxFramework.GearboxGFxMovie.SetOtherObject
// [0x12020801] (FUNC_Final | FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 Obj                            (CPF_Parm)

void UGearboxGFxMovie::eventSetOtherObject(class UObject* Obj)
{
	static UFunction* uFnSetOtherObject = nullptr;

	if (!uFnSetOtherObject)
	{
		uFnSetOtherObject = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.SetOtherObject");
	}

	UGearboxGFxMovie_eventSetOtherObject_Params SetOtherObject_Params;
	memset(&SetOtherObject_Params, 0, sizeof(SetOtherObject_Params));
	memcpy_s(&SetOtherObject_Params.Obj, sizeof(SetOtherObject_Params.Obj), &Obj, sizeof(Obj));

	this->ProcessEvent(uFnSetOtherObject, &SetOtherObject_Params, nullptr);
};

// Function GearboxFramework.GearboxGFxMovie.GetInstanceContextObject
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34116])
// Parameter Info:
// class UObject*                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UObject* UGearboxGFxMovie::GetInstanceContextObject()
{
	static UFunction* uFnGetInstanceContextObject = nullptr;

	if (!uFnGetInstanceContextObject)
	{
		uFnGetInstanceContextObject = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.GetInstanceContextObject");
	}

	UGearboxGFxMovie_execGetInstanceContextObject_Params GetInstanceContextObject_Params;
	memset(&GetInstanceContextObject_Params, 0, sizeof(GetInstanceContextObject_Params));

	uFnGetInstanceContextObject->iNative = 0;
	uFnGetInstanceContextObject->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetInstanceContextObject, &GetInstanceContextObject_Params, nullptr);
	uFnGetInstanceContextObject->FunctionFlags |= 0x400;
	uFnGetInstanceContextObject->iNative = 34116;

	return GetInstanceContextObject_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGFxMovie.OnTick
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UGearboxGFxMovie::eventOnTick()
{
	static UFunction* uFnOnTick = nullptr;

	if (!uFnOnTick)
	{
		uFnOnTick = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.OnTick");
	}

	UGearboxGFxMovie_eventOnTick_Params OnTick_Params;
	memset(&OnTick_Params, 0, sizeof(OnTick_Params));

	this->ProcessEvent(uFnOnTick, &OnTick_Params, nullptr);
};

// Function GearboxFramework.GearboxGFxMovie.OnClose
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UGearboxGFxMovie::eventOnClose()
{
	static UFunction* uFnOnClose = nullptr;

	if (!uFnOnClose)
	{
		uFnOnClose = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.OnClose");
	}

	UGearboxGFxMovie_eventOnClose_Params OnClose_Params;
	memset(&OnClose_Params, 0, sizeof(OnClose_Params));

	this->ProcessEvent(uFnOnClose, &OnClose_Params, nullptr);
};

// Function GearboxFramework.GearboxGFxMovie.Start
// [0x12024800] (FUNC_Event | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// bool                           StartPaused                    (CPF_OptionalParm | CPF_Parm)

bool UGearboxGFxMovie::eventStart(bool StartPaused)
{
	static UFunction* uFnStart = nullptr;

	if (!uFnStart)
	{
		uFnStart = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.Start");
	}

	UGearboxGFxMovie_eventStart_Params Start_Params;
	memset(&Start_Params, 0, sizeof(Start_Params));
	Start_Params.StartPaused = StartPaused;

	this->ProcessEvent(uFnStart, &Start_Params, nullptr);

	return Start_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGFxMovie.ColorizeTooltipText
// [0x12024001] (FUNC_Final | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// const class FString&           S                              (CPF_Const | CPF_Parm | CPF_NeedCtorLink)
// bool                           bDisabled                      (CPF_OptionalParm | CPF_Parm)

class FString UGearboxGFxMovie::ColorizeTooltipText(const class FString& S, bool bDisabled)
{
	static UFunction* uFnColorizeTooltipText = nullptr;

	if (!uFnColorizeTooltipText)
	{
		uFnColorizeTooltipText = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.ColorizeTooltipText");
	}

	UGearboxGFxMovie_execColorizeTooltipText_Params ColorizeTooltipText_Params;
	memset(&ColorizeTooltipText_Params, 0, sizeof(ColorizeTooltipText_Params));
	memcpy_s(&ColorizeTooltipText_Params.S, sizeof(ColorizeTooltipText_Params.S), &S, sizeof(S));
	ColorizeTooltipText_Params.bDisabled = bDisabled;

	this->ProcessEvent(uFnColorizeTooltipText, &ColorizeTooltipText_Params, nullptr);

	return ColorizeTooltipText_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGFxMovie.GetLocalPlayer
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34128])
// Parameter Info:
// class ULocalPlayer*            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class ULocalPlayer* UGearboxGFxMovie::GetLocalPlayer()
{
	static UFunction* uFnGetLocalPlayer = nullptr;

	if (!uFnGetLocalPlayer)
	{
		uFnGetLocalPlayer = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.GetLocalPlayer");
	}

	UGearboxGFxMovie_execGetLocalPlayer_Params GetLocalPlayer_Params;
	memset(&GetLocalPlayer_Params, 0, sizeof(GetLocalPlayer_Params));

	uFnGetLocalPlayer->iNative = 0;
	uFnGetLocalPlayer->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetLocalPlayer, &GetLocalPlayer_Params, nullptr);
	uFnGetLocalPlayer->FunctionFlags |= 0x400;
	uFnGetLocalPlayer->iNative = 34128;

	return GetLocalPlayer_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGFxMovie.OnClosed
// [0x00120000] (FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter Info:
// class UGearboxGFxMovie*        Movie                          (CPF_Parm)

void UGearboxGFxMovie::OnClosed(class UGearboxGFxMovie* Movie)
{
	static UFunction* uFnOnClosed = nullptr;

	if (!uFnOnClosed)
	{
		uFnOnClosed = UFunction::FindFunction("Function GearboxFramework.GearboxGFxMovie.OnClosed");
	}

	UGearboxGFxMovie_execOnClosed_Params OnClosed_Params;
	memset(&OnClosed_Params, 0, sizeof(OnClosed_Params));
	memcpy_s(&OnClosed_Params.Movie, sizeof(OnClosed_Params.Movie), &Movie, sizeof(Movie));

	this->ProcessEvent(uFnOnClosed, &OnClosed_Params, nullptr);
};

// Function GearboxFramework.GFxMovie_StateParent.MovieState_OnChanged
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           bStateWasChanged               (CPF_Parm)

void UGFxMovie_StateParent::MovieState_OnChanged(bool bStateWasChanged)
{
	static UFunction* uFnMovieState_OnChanged = nullptr;

	if (!uFnMovieState_OnChanged)
	{
		uFnMovieState_OnChanged = UFunction::FindFunction("Function GearboxFramework.GFxMovie_StateParent.MovieState_OnChanged");
	}

	UGFxMovie_StateParent_execMovieState_OnChanged_Params MovieState_OnChanged_Params;
	memset(&MovieState_OnChanged_Params, 0, sizeof(MovieState_OnChanged_Params));
	MovieState_OnChanged_Params.bStateWasChanged = bStateWasChanged;

	this->ProcessEvent(uFnMovieState_OnChanged, &MovieState_OnChanged_Params, nullptr);
};

// Function GearboxFramework.GFxMovie_StateParent.Start
// [0x12024800] (FUNC_Event | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// bool                           StartPaused                    (CPF_OptionalParm | CPF_Parm)

bool UGFxMovie_StateParent::eventStart(bool StartPaused)
{
	static UFunction* uFnStart = nullptr;

	if (!uFnStart)
	{
		uFnStart = UFunction::FindFunction("Function GearboxFramework.GFxMovie_StateParent.Start");
	}

	UGFxMovie_StateParent_eventStart_Params Start_Params;
	memset(&Start_Params, 0, sizeof(Start_Params));
	Start_Params.StartPaused = StartPaused;

	this->ProcessEvent(uFnStart, &Start_Params, nullptr);

	return Start_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGFxObjectManager.RegisterRoot
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35641])
// Parameter Info:
// class UGFxObject*              Root                           (CPF_Parm)

void UGearboxGFxObjectManager::RegisterRoot(class UGFxObject* Root)
{
	static UFunction* uFnRegisterRoot = nullptr;

	if (!uFnRegisterRoot)
	{
		uFnRegisterRoot = UFunction::FindFunction("Function GearboxFramework.GearboxGFxObjectManager.RegisterRoot");
	}

	UGearboxGFxObjectManager_execRegisterRoot_Params RegisterRoot_Params;
	memset(&RegisterRoot_Params, 0, sizeof(RegisterRoot_Params));
	memcpy_s(&RegisterRoot_Params.Root, sizeof(RegisterRoot_Params.Root), &Root, sizeof(Root));

	uFnRegisterRoot->iNative = 0;
	uFnRegisterRoot->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRegisterRoot, &RegisterRoot_Params, nullptr);
	uFnRegisterRoot->FunctionFlags |= 0x400;
	uFnRegisterRoot->iNative = 35641;
};

// Function GearboxFramework.GearboxGFxObjectManager.ApplyLayoutToAllObjects
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[31891])
// Parameter Info:

void UGearboxGFxObjectManager::ApplyLayoutToAllObjects()
{
	static UFunction* uFnApplyLayoutToAllObjects = nullptr;

	if (!uFnApplyLayoutToAllObjects)
	{
		uFnApplyLayoutToAllObjects = UFunction::FindFunction("Function GearboxFramework.GearboxGFxObjectManager.ApplyLayoutToAllObjects");
	}

	UGearboxGFxObjectManager_execApplyLayoutToAllObjects_Params ApplyLayoutToAllObjects_Params;
	memset(&ApplyLayoutToAllObjects_Params, 0, sizeof(ApplyLayoutToAllObjects_Params));

	uFnApplyLayoutToAllObjects->iNative = 0;
	uFnApplyLayoutToAllObjects->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnApplyLayoutToAllObjects, &ApplyLayoutToAllObjects_Params, nullptr);
	uFnApplyLayoutToAllObjects->FunctionFlags |= 0x400;
	uFnApplyLayoutToAllObjects->iNative = 31891;
};

// Function GearboxFramework.GearboxGFxObjectManager.RemoveAllObjects
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35663])
// Parameter Info:

void UGearboxGFxObjectManager::RemoveAllObjects()
{
	static UFunction* uFnRemoveAllObjects = nullptr;

	if (!uFnRemoveAllObjects)
	{
		uFnRemoveAllObjects = UFunction::FindFunction("Function GearboxFramework.GearboxGFxObjectManager.RemoveAllObjects");
	}

	UGearboxGFxObjectManager_execRemoveAllObjects_Params RemoveAllObjects_Params;
	memset(&RemoveAllObjects_Params, 0, sizeof(RemoveAllObjects_Params));

	uFnRemoveAllObjects->iNative = 0;
	uFnRemoveAllObjects->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRemoveAllObjects, &RemoveAllObjects_Params, nullptr);
	uFnRemoveAllObjects->FunctionFlags |= 0x400;
	uFnRemoveAllObjects->iNative = 35663;
};

// Function GearboxFramework.GearboxGFxObjectManager.RemoveObject
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35675])
// Parameter Info:
// class UGFxObject*              Parent                         (CPF_Parm)
// const struct FName&            InstanceName                   (CPF_Parm)

void UGearboxGFxObjectManager::RemoveObject(class UGFxObject* Parent, const struct FName& InstanceName)
{
	static UFunction* uFnRemoveObject = nullptr;

	if (!uFnRemoveObject)
	{
		uFnRemoveObject = UFunction::FindFunction("Function GearboxFramework.GearboxGFxObjectManager.RemoveObject");
	}

	UGearboxGFxObjectManager_execRemoveObject_Params RemoveObject_Params;
	memset(&RemoveObject_Params, 0, sizeof(RemoveObject_Params));
	memcpy_s(&RemoveObject_Params.Parent, sizeof(RemoveObject_Params.Parent), &Parent, sizeof(Parent));
	memcpy_s(&RemoveObject_Params.InstanceName, sizeof(RemoveObject_Params.InstanceName), &InstanceName, sizeof(InstanceName));

	uFnRemoveObject->iNative = 0;
	uFnRemoveObject->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRemoveObject, &RemoveObject_Params, nullptr);
	uFnRemoveObject->FunctionFlags |= 0x400;
	uFnRemoveObject->iNative = 35675;
};

// Function GearboxFramework.GearboxGFxObjectManager.GetObject
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[23828])
// Parameter Info:
// class UGFxObject*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UGFxObject*              Parent                         (CPF_Parm)
// const struct FName&            InstanceName                   (CPF_Parm)

class UGFxObject* UGearboxGFxObjectManager::GetObjectW(class UGFxObject* Parent, const struct FName& InstanceName)
{
	static UFunction* uFnGetObjectW = nullptr;

	if (!uFnGetObjectW)
	{
		uFnGetObjectW = UFunction::FindFunction("Function GearboxFramework.GearboxGFxObjectManager.GetObject");
	}

	UGearboxGFxObjectManager_execGetObjectW_Params GetObjectW_Params;
	memset(&GetObjectW_Params, 0, sizeof(GetObjectW_Params));
	memcpy_s(&GetObjectW_Params.Parent, sizeof(GetObjectW_Params.Parent), &Parent, sizeof(Parent));
	memcpy_s(&GetObjectW_Params.InstanceName, sizeof(GetObjectW_Params.InstanceName), &InstanceName, sizeof(InstanceName));

	uFnGetObjectW->iNative = 0;
	uFnGetObjectW->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetObjectW, &GetObjectW_Params, nullptr);
	uFnGetObjectW->FunctionFlags |= 0x400;
	uFnGetObjectW->iNative = 23828;

	return GetObjectW_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGFxObjectManager.GetObjects
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[34158])
// Parameter Info:
// class TArray<class UGFxObject*> ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class UGFxMoviePlayer*         OuterMovie                     (CPF_Parm)
// const struct FName&            TagName                        (CPF_OptionalParm | CPF_Parm)

class TArray<class UGFxObject*> UGearboxGFxObjectManager::GetObjectsW(class UGFxMoviePlayer* OuterMovie, const struct FName& TagName)
{
	static UFunction* uFnGetObjectsW = nullptr;

	if (!uFnGetObjectsW)
	{
		uFnGetObjectsW = UFunction::FindFunction("Function GearboxFramework.GearboxGFxObjectManager.GetObjects");
	}

	UGearboxGFxObjectManager_execGetObjectsW_Params GetObjectsW_Params;
	memset(&GetObjectsW_Params, 0, sizeof(GetObjectsW_Params));
	memcpy_s(&GetObjectsW_Params.OuterMovie, sizeof(GetObjectsW_Params.OuterMovie), &OuterMovie, sizeof(OuterMovie));
	memcpy_s(&GetObjectsW_Params.TagName, sizeof(GetObjectsW_Params.TagName), &TagName, sizeof(TagName));

	uFnGetObjectsW->iNative = 0;
	uFnGetObjectsW->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetObjectsW, &GetObjectsW_Params, nullptr);
	uFnGetObjectsW->FunctionFlags |= 0x400;
	uFnGetObjectsW->iNative = 34158;

	return GetObjectsW_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGFxObjectManager.OnChildLoaded
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35270])
// Parameter Info:
// const struct FName&            InstanceName                   (CPF_Parm)
// class UGFxObject*              Object                         (CPF_Parm)

void UGearboxGFxObjectManager::OnChildLoaded(const struct FName& InstanceName, class UGFxObject* Object)
{
	static UFunction* uFnOnChildLoaded = nullptr;

	if (!uFnOnChildLoaded)
	{
		uFnOnChildLoaded = UFunction::FindFunction("Function GearboxFramework.GearboxGFxObjectManager.OnChildLoaded");
	}

	UGearboxGFxObjectManager_execOnChildLoaded_Params OnChildLoaded_Params;
	memset(&OnChildLoaded_Params, 0, sizeof(OnChildLoaded_Params));
	memcpy_s(&OnChildLoaded_Params.InstanceName, sizeof(OnChildLoaded_Params.InstanceName), &InstanceName, sizeof(InstanceName));
	memcpy_s(&OnChildLoaded_Params.Object, sizeof(OnChildLoaded_Params.Object), &Object, sizeof(Object));

	uFnOnChildLoaded->iNative = 0;
	uFnOnChildLoaded->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnChildLoaded, &OnChildLoaded_Params, nullptr);
	uFnOnChildLoaded->FunctionFlags |= 0x400;
	uFnOnChildLoaded->iNative = 35270;
};

// Function GearboxFramework.GearboxGFxObjectManager.Tick
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[317])
// Parameter Info:
// float                          DeltaTime                      (CPF_Parm)

void UGearboxGFxObjectManager::Tick(float DeltaTime)
{
	static UFunction* uFnTick = nullptr;

	if (!uFnTick)
	{
		uFnTick = UFunction::FindFunction("Function GearboxFramework.GearboxGFxObjectManager.Tick");
	}

	UGearboxGFxObjectManager_execTick_Params Tick_Params;
	memset(&Tick_Params, 0, sizeof(Tick_Params));
	memcpy_s(&Tick_Params.DeltaTime, sizeof(Tick_Params.DeltaTime), &DeltaTime, sizeof(DeltaTime));

	uFnTick->iNative = 0;
	uFnTick->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnTick, &Tick_Params, nullptr);
	uFnTick->FunctionFlags |= 0x400;
	uFnTick->iNative = 317;
};

// Function GearboxFramework.GearboxGlobals.DisplayDebug
// [0x12420000] (FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AHUD*                    HUD                            (CPF_Parm)
// float                          out_YL                         (CPF_Parm | CPF_OutParm)
// float                          out_YPos                       (CPF_Parm | CPF_OutParm)

void UGearboxGlobals::DisplayDebug(class AHUD* HUD, float& out_YL, float& out_YPos)
{
	static UFunction* uFnDisplayDebug = nullptr;

	if (!uFnDisplayDebug)
	{
		uFnDisplayDebug = UFunction::FindFunction("Function GearboxFramework.GearboxGlobals.DisplayDebug");
	}

	UGearboxGlobals_execDisplayDebug_Params DisplayDebug_Params;
	memset(&DisplayDebug_Params, 0, sizeof(DisplayDebug_Params));
	memcpy_s(&DisplayDebug_Params.HUD, sizeof(DisplayDebug_Params.HUD), &HUD, sizeof(HUD));
	memcpy_s(&DisplayDebug_Params.out_YL, sizeof(DisplayDebug_Params.out_YL), &out_YL, sizeof(out_YL));
	memcpy_s(&DisplayDebug_Params.out_YPos, sizeof(DisplayDebug_Params.out_YPos), &out_YPos, sizeof(out_YPos));

	this->ProcessEvent(uFnDisplayDebug, &DisplayDebug_Params, nullptr);

	memcpy_s(&out_YL, sizeof(out_YL), &DisplayDebug_Params.out_YL, sizeof(DisplayDebug_Params.out_YL));
	memcpy_s(&out_YPos, sizeof(out_YPos), &DisplayDebug_Params.out_YPos, sizeof(DisplayDebug_Params.out_YPos));
};

// Function GearboxFramework.GearboxGlobals.GetPawnRelevanceUtility
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34172])
// Parameter Info:
// class UPawnRelevanceUtility*   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UPawnRelevanceUtility* UGearboxGlobals::GetPawnRelevanceUtility()
{
	static UFunction* uFnGetPawnRelevanceUtility = nullptr;

	if (!uFnGetPawnRelevanceUtility)
	{
		uFnGetPawnRelevanceUtility = UFunction::FindFunction("Function GearboxFramework.GearboxGlobals.GetPawnRelevanceUtility");
	}

	UGearboxGlobals_execGetPawnRelevanceUtility_Params GetPawnRelevanceUtility_Params;
	memset(&GetPawnRelevanceUtility_Params, 0, sizeof(GetPawnRelevanceUtility_Params));

	uFnGetPawnRelevanceUtility->iNative = 0;
	uFnGetPawnRelevanceUtility->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetPawnRelevanceUtility, &GetPawnRelevanceUtility_Params, nullptr);
	uFnGetPawnRelevanceUtility->FunctionFlags |= 0x400;
	uFnGetPawnRelevanceUtility->iNative = 34172;

	return GetPawnRelevanceUtility_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGlobals.GetBehaviorKernel
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[34052])
// Parameter Info:
// class UBehaviorKernel*         ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UBehaviorKernel* UGearboxGlobals::GetBehaviorKernel()
{
	static UFunction* uFnGetBehaviorKernel = nullptr;

	if (!uFnGetBehaviorKernel)
	{
		uFnGetBehaviorKernel = UFunction::FindFunction("Function GearboxFramework.GearboxGlobals.GetBehaviorKernel");
	}

	UGearboxGlobals_execGetBehaviorKernel_Params GetBehaviorKernel_Params;
	memset(&GetBehaviorKernel_Params, 0, sizeof(GetBehaviorKernel_Params));

	uFnGetBehaviorKernel->iNative = 0;
	uFnGetBehaviorKernel->FunctionFlags &= ~0x400;
	UGearboxGlobals::StaticClass()->ProcessEvent(uFnGetBehaviorKernel, &GetBehaviorKernel_Params, nullptr);
	uFnGetBehaviorKernel->FunctionFlags |= 0x400;
	uFnGetBehaviorKernel->iNative = 34052;

	return GetBehaviorKernel_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGlobals.GetDialogSystem
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34088])
// Parameter Info:
// class UDialogSystem*           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UDialogSystem* UGearboxGlobals::GetDialogSystem()
{
	static UFunction* uFnGetDialogSystem = nullptr;

	if (!uFnGetDialogSystem)
	{
		uFnGetDialogSystem = UFunction::FindFunction("Function GearboxFramework.GearboxGlobals.GetDialogSystem");
	}

	UGearboxGlobals_execGetDialogSystem_Params GetDialogSystem_Params;
	memset(&GetDialogSystem_Params, 0, sizeof(GetDialogSystem_Params));

	uFnGetDialogSystem->iNative = 0;
	uFnGetDialogSystem->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetDialogSystem, &GetDialogSystem_Params, nullptr);
	uFnGetDialogSystem->FunctionFlags |= 0x400;
	uFnGetDialogSystem->iNative = 34088;

	return GetDialogSystem_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGlobals.GetSpawnerResetDelay
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34217])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float UGearboxGlobals::GetSpawnerResetDelay()
{
	static UFunction* uFnGetSpawnerResetDelay = nullptr;

	if (!uFnGetSpawnerResetDelay)
	{
		uFnGetSpawnerResetDelay = UFunction::FindFunction("Function GearboxFramework.GearboxGlobals.GetSpawnerResetDelay");
	}

	UGearboxGlobals_execGetSpawnerResetDelay_Params GetSpawnerResetDelay_Params;
	memset(&GetSpawnerResetDelay_Params, 0, sizeof(GetSpawnerResetDelay_Params));

	uFnGetSpawnerResetDelay->iNative = 0;
	uFnGetSpawnerResetDelay->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetSpawnerResetDelay, &GetSpawnerResetDelay_Params, nullptr);
	uFnGetSpawnerResetDelay->FunctionFlags |= 0x400;
	uFnGetSpawnerResetDelay->iNative = 34217;

	return GetSpawnerResetDelay_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGlobals.NotifyActorDied
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[26522])
// Parameter Info:
// class AActor*                  TheActor                       (CPF_Parm)
// bool                           bKeepBody                      (CPF_Parm)

void UGearboxGlobals::NotifyActorDied(class AActor* TheActor, bool bKeepBody)
{
	static UFunction* uFnNotifyActorDied = nullptr;

	if (!uFnNotifyActorDied)
	{
		uFnNotifyActorDied = UFunction::FindFunction("Function GearboxFramework.GearboxGlobals.NotifyActorDied");
	}

	UGearboxGlobals_execNotifyActorDied_Params NotifyActorDied_Params;
	memset(&NotifyActorDied_Params, 0, sizeof(NotifyActorDied_Params));
	memcpy_s(&NotifyActorDied_Params.TheActor, sizeof(NotifyActorDied_Params.TheActor), &TheActor, sizeof(TheActor));
	NotifyActorDied_Params.bKeepBody = bKeepBody;

	uFnNotifyActorDied->iNative = 0;
	uFnNotifyActorDied->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnNotifyActorDied, &NotifyActorDied_Params, nullptr);
	uFnNotifyActorDied->FunctionFlags |= 0x400;
	uFnNotifyActorDied->iNative = 26522;
};

// Function GearboxFramework.GearboxGlobals.DoesLOSIntersectSpecialOccluder
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[33300])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FVector&          FromLoc                        (CPF_Parm)
// const struct FVector&          ToLoc                          (CPF_Parm)
// class UPawnAllegiance*         AllegianceAffected             (CPF_Parm)

bool UGearboxGlobals::DoesLOSIntersectSpecialOccluder(const struct FVector& FromLoc, const struct FVector& ToLoc, class UPawnAllegiance* AllegianceAffected)
{
	static UFunction* uFnDoesLOSIntersectSpecialOccluder = nullptr;

	if (!uFnDoesLOSIntersectSpecialOccluder)
	{
		uFnDoesLOSIntersectSpecialOccluder = UFunction::FindFunction("Function GearboxFramework.GearboxGlobals.DoesLOSIntersectSpecialOccluder");
	}

	UGearboxGlobals_execDoesLOSIntersectSpecialOccluder_Params DoesLOSIntersectSpecialOccluder_Params;
	memset(&DoesLOSIntersectSpecialOccluder_Params, 0, sizeof(DoesLOSIntersectSpecialOccluder_Params));
	memcpy_s(&DoesLOSIntersectSpecialOccluder_Params.FromLoc, sizeof(DoesLOSIntersectSpecialOccluder_Params.FromLoc), &FromLoc, sizeof(FromLoc));
	memcpy_s(&DoesLOSIntersectSpecialOccluder_Params.ToLoc, sizeof(DoesLOSIntersectSpecialOccluder_Params.ToLoc), &ToLoc, sizeof(ToLoc));
	memcpy_s(&DoesLOSIntersectSpecialOccluder_Params.AllegianceAffected, sizeof(DoesLOSIntersectSpecialOccluder_Params.AllegianceAffected), &AllegianceAffected, sizeof(AllegianceAffected));

	uFnDoesLOSIntersectSpecialOccluder->iNative = 0;
	uFnDoesLOSIntersectSpecialOccluder->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnDoesLOSIntersectSpecialOccluder, &DoesLOSIntersectSpecialOccluder_Params, nullptr);
	uFnDoesLOSIntersectSpecialOccluder->FunctionFlags |= 0x400;
	uFnDoesLOSIntersectSpecialOccluder->iNative = 33300;

	return DoesLOSIntersectSpecialOccluder_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGlobals.ValidatePlayerName
// [0x00424400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[36665])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// bool                           bReplaceCharacters             (CPF_OptionalParm | CPF_Parm)
// class FString                  InName                         (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UGearboxGlobals::ValidatePlayerName(bool bReplaceCharacters, class FString& InName)
{
	static UFunction* uFnValidatePlayerName = nullptr;

	if (!uFnValidatePlayerName)
	{
		uFnValidatePlayerName = UFunction::FindFunction("Function GearboxFramework.GearboxGlobals.ValidatePlayerName");
	}

	UGearboxGlobals_execValidatePlayerName_Params ValidatePlayerName_Params;
	memset(&ValidatePlayerName_Params, 0, sizeof(ValidatePlayerName_Params));
	ValidatePlayerName_Params.bReplaceCharacters = bReplaceCharacters;
	memcpy_s(&ValidatePlayerName_Params.InName, sizeof(ValidatePlayerName_Params.InName), &InName, sizeof(InName));

	uFnValidatePlayerName->iNative = 0;
	uFnValidatePlayerName->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnValidatePlayerName, &ValidatePlayerName_Params, nullptr);
	uFnValidatePlayerName->FunctionFlags |= 0x400;
	uFnValidatePlayerName->iNative = 36665;

	memcpy_s(&InName, sizeof(InName), &ValidatePlayerName_Params.InName, sizeof(ValidatePlayerName_Params.InName));

	return ValidatePlayerName_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGlobals.RegisterStateKey
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35642])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FName&            LevelName                      (CPF_Parm)
// const struct FName&            ObjectName                     (CPF_Parm)
// const struct FName&            AdditionalKey                  (CPF_Parm)

bool UGearboxGlobals::RegisterStateKey(const struct FName& LevelName, const struct FName& ObjectName, const struct FName& AdditionalKey)
{
	static UFunction* uFnRegisterStateKey = nullptr;

	if (!uFnRegisterStateKey)
	{
		uFnRegisterStateKey = UFunction::FindFunction("Function GearboxFramework.GearboxGlobals.RegisterStateKey");
	}

	UGearboxGlobals_execRegisterStateKey_Params RegisterStateKey_Params;
	memset(&RegisterStateKey_Params, 0, sizeof(RegisterStateKey_Params));
	memcpy_s(&RegisterStateKey_Params.LevelName, sizeof(RegisterStateKey_Params.LevelName), &LevelName, sizeof(LevelName));
	memcpy_s(&RegisterStateKey_Params.ObjectName, sizeof(RegisterStateKey_Params.ObjectName), &ObjectName, sizeof(ObjectName));
	memcpy_s(&RegisterStateKey_Params.AdditionalKey, sizeof(RegisterStateKey_Params.AdditionalKey), &AdditionalKey, sizeof(AdditionalKey));

	uFnRegisterStateKey->iNative = 0;
	uFnRegisterStateKey->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRegisterStateKey, &RegisterStateKey_Params, nullptr);
	uFnRegisterStateKey->FunctionFlags |= 0x400;
	uFnRegisterStateKey->iNative = 35642;

	return RegisterStateKey_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGlobals.DoesStateKeyExist
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[33302])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FName&            LevelName                      (CPF_Parm)
// const struct FName&            ObjectName                     (CPF_Parm)
// const struct FName&            AdditionalKey                  (CPF_Parm)

bool UGearboxGlobals::DoesStateKeyExist(const struct FName& LevelName, const struct FName& ObjectName, const struct FName& AdditionalKey)
{
	static UFunction* uFnDoesStateKeyExist = nullptr;

	if (!uFnDoesStateKeyExist)
	{
		uFnDoesStateKeyExist = UFunction::FindFunction("Function GearboxFramework.GearboxGlobals.DoesStateKeyExist");
	}

	UGearboxGlobals_execDoesStateKeyExist_Params DoesStateKeyExist_Params;
	memset(&DoesStateKeyExist_Params, 0, sizeof(DoesStateKeyExist_Params));
	memcpy_s(&DoesStateKeyExist_Params.LevelName, sizeof(DoesStateKeyExist_Params.LevelName), &LevelName, sizeof(LevelName));
	memcpy_s(&DoesStateKeyExist_Params.ObjectName, sizeof(DoesStateKeyExist_Params.ObjectName), &ObjectName, sizeof(ObjectName));
	memcpy_s(&DoesStateKeyExist_Params.AdditionalKey, sizeof(DoesStateKeyExist_Params.AdditionalKey), &AdditionalKey, sizeof(AdditionalKey));

	uFnDoesStateKeyExist->iNative = 0;
	uFnDoesStateKeyExist->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnDoesStateKeyExist, &DoesStateKeyExist_Params, nullptr);
	uFnDoesStateKeyExist->FunctionFlags |= 0x400;
	uFnDoesStateKeyExist->iNative = 33302;

	return DoesStateKeyExist_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGlobals.FreeTexture2D
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[23365])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UTexture2D*              Texture                        (CPF_Parm)

bool UGearboxGlobals::FreeTexture2D(class UTexture2D* Texture)
{
	static UFunction* uFnFreeTexture2D = nullptr;

	if (!uFnFreeTexture2D)
	{
		uFnFreeTexture2D = UFunction::FindFunction("Function GearboxFramework.GearboxGlobals.FreeTexture2D");
	}

	UGearboxGlobals_execFreeTexture2D_Params FreeTexture2D_Params;
	memset(&FreeTexture2D_Params, 0, sizeof(FreeTexture2D_Params));
	memcpy_s(&FreeTexture2D_Params.Texture, sizeof(FreeTexture2D_Params.Texture), &Texture, sizeof(Texture));

	uFnFreeTexture2D->iNative = 0;
	uFnFreeTexture2D->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnFreeTexture2D, &FreeTexture2D_Params, nullptr);
	uFnFreeTexture2D->FunctionFlags |= 0x400;
	uFnFreeTexture2D->iNative = 23365;

	return FreeTexture2D_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGlobals.GetTexture2D
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[23989])
// Parameter Info:
// class UTexture2D*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UTexture2D* UGearboxGlobals::GetTexture2D()
{
	static UFunction* uFnGetTexture2D = nullptr;

	if (!uFnGetTexture2D)
	{
		uFnGetTexture2D = UFunction::FindFunction("Function GearboxFramework.GearboxGlobals.GetTexture2D");
	}

	UGearboxGlobals_execGetTexture2D_Params GetTexture2D_Params;
	memset(&GetTexture2D_Params, 0, sizeof(GetTexture2D_Params));

	uFnGetTexture2D->iNative = 0;
	uFnGetTexture2D->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetTexture2D, &GetTexture2D_Params, nullptr);
	uFnGetTexture2D->FunctionFlags |= 0x400;
	uFnGetTexture2D->iNative = 23989;

	return GetTexture2D_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGlobals.GetRenderTextureManager
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34195])
// Parameter Info:
// class UGearboxRenderTextureManager* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UGearboxRenderTextureManager* UGearboxGlobals::GetRenderTextureManager()
{
	static UFunction* uFnGetRenderTextureManager = nullptr;

	if (!uFnGetRenderTextureManager)
	{
		uFnGetRenderTextureManager = UFunction::FindFunction("Function GearboxFramework.GearboxGlobals.GetRenderTextureManager");
	}

	UGearboxGlobals_execGetRenderTextureManager_Params GetRenderTextureManager_Params;
	memset(&GetRenderTextureManager_Params, 0, sizeof(GetRenderTextureManager_Params));

	uFnGetRenderTextureManager->iNative = 0;
	uFnGetRenderTextureManager->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetRenderTextureManager, &GetRenderTextureManager_Params, nullptr);
	uFnGetRenderTextureManager->FunctionFlags |= 0x400;
	uFnGetRenderTextureManager->iNative = 34195;

	return GetRenderTextureManager_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGlobals.GetGFxManager
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34107])
// Parameter Info:
// class UGFxMovieManager*        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UGFxMovieManager* UGearboxGlobals::GetGFxManager()
{
	static UFunction* uFnGetGFxManager = nullptr;

	if (!uFnGetGFxManager)
	{
		uFnGetGFxManager = UFunction::FindFunction("Function GearboxFramework.GearboxGlobals.GetGFxManager");
	}

	UGearboxGlobals_execGetGFxManager_Params GetGFxManager_Params;
	memset(&GetGFxManager_Params, 0, sizeof(GetGFxManager_Params));

	uFnGetGFxManager->iNative = 0;
	uFnGetGFxManager->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetGFxManager, &GetGFxManager_Params, nullptr);
	uFnGetGFxManager->FunctionFlags |= 0x400;
	uFnGetGFxManager->iNative = 34107;

	return GetGFxManager_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGlobals.GetScreenSpaceManager
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34200])
// Parameter Info:
// class UScreenSpaceManager*     ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UScreenSpaceManager* UGearboxGlobals::GetScreenSpaceManager()
{
	static UFunction* uFnGetScreenSpaceManager = nullptr;

	if (!uFnGetScreenSpaceManager)
	{
		uFnGetScreenSpaceManager = UFunction::FindFunction("Function GearboxFramework.GearboxGlobals.GetScreenSpaceManager");
	}

	UGearboxGlobals_execGetScreenSpaceManager_Params GetScreenSpaceManager_Params;
	memset(&GetScreenSpaceManager_Params, 0, sizeof(GetScreenSpaceManager_Params));

	uFnGetScreenSpaceManager->iNative = 0;
	uFnGetScreenSpaceManager->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetScreenSpaceManager, &GetScreenSpaceManager_Params, nullptr);
	uFnGetScreenSpaceManager->FunctionFlags |= 0x400;
	uFnGetScreenSpaceManager->iNative = 34200;

	return GetScreenSpaceManager_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGlobals.RegDynamicTextureStreaming
// [0x00024400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[28050])
// Parameter Info:
// class AActor*                  A                              (CPF_Parm)
// bool                           bRegister                      (CPF_OptionalParm | CPF_Parm)

void UGearboxGlobals::RegDynamicTextureStreaming(class AActor* A, bool bRegister)
{
	static UFunction* uFnRegDynamicTextureStreaming = nullptr;

	if (!uFnRegDynamicTextureStreaming)
	{
		uFnRegDynamicTextureStreaming = UFunction::FindFunction("Function GearboxFramework.GearboxGlobals.RegDynamicTextureStreaming");
	}

	UGearboxGlobals_execRegDynamicTextureStreaming_Params RegDynamicTextureStreaming_Params;
	memset(&RegDynamicTextureStreaming_Params, 0, sizeof(RegDynamicTextureStreaming_Params));
	memcpy_s(&RegDynamicTextureStreaming_Params.A, sizeof(RegDynamicTextureStreaming_Params.A), &A, sizeof(A));
	RegDynamicTextureStreaming_Params.bRegister = bRegister;

	uFnRegDynamicTextureStreaming->iNative = 0;
	uFnRegDynamicTextureStreaming->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRegDynamicTextureStreaming, &RegDynamicTextureStreaming_Params, nullptr);
	uFnRegDynamicTextureStreaming->FunctionFlags |= 0x400;
	uFnRegDynamicTextureStreaming->iNative = 28050;
};

// Function GearboxFramework.GearboxGlobals.GetDynamicTextureActorList
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34092])
// Parameter Info:
// class UGBXActorList*           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UGBXActorList* UGearboxGlobals::GetDynamicTextureActorList()
{
	static UFunction* uFnGetDynamicTextureActorList = nullptr;

	if (!uFnGetDynamicTextureActorList)
	{
		uFnGetDynamicTextureActorList = UFunction::FindFunction("Function GearboxFramework.GearboxGlobals.GetDynamicTextureActorList");
	}

	UGearboxGlobals_execGetDynamicTextureActorList_Params GetDynamicTextureActorList_Params;
	memset(&GetDynamicTextureActorList_Params, 0, sizeof(GetDynamicTextureActorList_Params));

	uFnGetDynamicTextureActorList->iNative = 0;
	uFnGetDynamicTextureActorList->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetDynamicTextureActorList, &GetDynamicTextureActorList_Params, nullptr);
	uFnGetDynamicTextureActorList->FunctionFlags |= 0x400;
	uFnGetDynamicTextureActorList->iNative = 34092;

	return GetDynamicTextureActorList_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGlobals.GetSpawnMaster
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34220])
// Parameter Info:
// class USpawnMaster*            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class USpawnMaster* UGearboxGlobals::GetSpawnMaster()
{
	static UFunction* uFnGetSpawnMaster = nullptr;

	if (!uFnGetSpawnMaster)
	{
		uFnGetSpawnMaster = UFunction::FindFunction("Function GearboxFramework.GearboxGlobals.GetSpawnMaster");
	}

	UGearboxGlobals_execGetSpawnMaster_Params GetSpawnMaster_Params;
	memset(&GetSpawnMaster_Params, 0, sizeof(GetSpawnMaster_Params));

	uFnGetSpawnMaster->iNative = 0;
	uFnGetSpawnMaster->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetSpawnMaster, &GetSpawnMaster_Params, nullptr);
	uFnGetSpawnMaster->FunctionFlags |= 0x400;
	uFnGetSpawnMaster->iNative = 34220;

	return GetSpawnMaster_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGlobals.GetGBXObjectList
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34104])
// Parameter Info:
// class UGBXObjectList*          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UGBXObjectList* UGearboxGlobals::GetGBXObjectList()
{
	static UFunction* uFnGetGBXObjectList = nullptr;

	if (!uFnGetGBXObjectList)
	{
		uFnGetGBXObjectList = UFunction::FindFunction("Function GearboxFramework.GearboxGlobals.GetGBXObjectList");
	}

	UGearboxGlobals_execGetGBXObjectList_Params GetGBXObjectList_Params;
	memset(&GetGBXObjectList_Params, 0, sizeof(GetGBXObjectList_Params));

	uFnGetGBXObjectList->iNative = 0;
	uFnGetGBXObjectList->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetGBXObjectList, &GetGBXObjectList_Params, nullptr);
	uFnGetGBXObjectList->FunctionFlags |= 0x400;
	uFnGetGBXObjectList->iNative = 34104;

	return GetGBXObjectList_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGlobals.GetGBXActorList
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34103])
// Parameter Info:
// class UGBXActorList*           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UGBXActorList* UGearboxGlobals::GetGBXActorList()
{
	static UFunction* uFnGetGBXActorList = nullptr;

	if (!uFnGetGBXActorList)
	{
		uFnGetGBXActorList = UFunction::FindFunction("Function GearboxFramework.GearboxGlobals.GetGBXActorList");
	}

	UGearboxGlobals_execGetGBXActorList_Params GetGBXActorList_Params;
	memset(&GetGBXActorList_Params, 0, sizeof(GetGBXActorList_Params));

	uFnGetGBXActorList->iNative = 0;
	uFnGetGBXActorList->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetGBXActorList, &GetGBXActorList_Params, nullptr);
	uFnGetGBXActorList->FunctionFlags |= 0x400;
	uFnGetGBXActorList->iNative = 34103;

	return GetGBXActorList_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGlobals.GetExposureUtility
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34098])
// Parameter Info:
// class UExposureUtilityBase*    ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UExposureUtilityBase* UGearboxGlobals::GetExposureUtility()
{
	static UFunction* uFnGetExposureUtility = nullptr;

	if (!uFnGetExposureUtility)
	{
		uFnGetExposureUtility = UFunction::FindFunction("Function GearboxFramework.GearboxGlobals.GetExposureUtility");
	}

	UGearboxGlobals_execGetExposureUtility_Params GetExposureUtility_Params;
	memset(&GetExposureUtility_Params, 0, sizeof(GetExposureUtility_Params));

	uFnGetExposureUtility->iNative = 0;
	uFnGetExposureUtility->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetExposureUtility, &GetExposureUtility_Params, nullptr);
	uFnGetExposureUtility->FunctionFlags |= 0x400;
	uFnGetExposureUtility->iNative = 34098;

	return GetExposureUtility_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGlobals.GetGearboxGlobalsDefinition
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34106])
// Parameter Info:
// class UGearboxGlobalsDefinition* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UGearboxGlobalsDefinition* UGearboxGlobals::GetGearboxGlobalsDefinition()
{
	static UFunction* uFnGetGearboxGlobalsDefinition = nullptr;

	if (!uFnGetGearboxGlobalsDefinition)
	{
		uFnGetGearboxGlobalsDefinition = UFunction::FindFunction("Function GearboxFramework.GearboxGlobals.GetGearboxGlobalsDefinition");
	}

	UGearboxGlobals_execGetGearboxGlobalsDefinition_Params GetGearboxGlobalsDefinition_Params;
	memset(&GetGearboxGlobalsDefinition_Params, 0, sizeof(GetGearboxGlobalsDefinition_Params));

	uFnGetGearboxGlobalsDefinition->iNative = 0;
	uFnGetGearboxGlobalsDefinition->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetGearboxGlobalsDefinition, &GetGearboxGlobalsDefinition_Params, nullptr);
	uFnGetGearboxGlobalsDefinition->FunctionFlags |= 0x400;
	uFnGetGearboxGlobalsDefinition->iNative = 34106;

	return GetGearboxGlobalsDefinition_Params.ReturnValue;
};

// Function GearboxFramework.GearboxGlobals.GetGearboxGlobals
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[34105])
// Parameter Info:
// class UGearboxGlobals*         ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UGearboxGlobals* UGearboxGlobals::GetGearboxGlobals()
{
	static UFunction* uFnGetGearboxGlobals = nullptr;

	if (!uFnGetGearboxGlobals)
	{
		uFnGetGearboxGlobals = UFunction::FindFunction("Function GearboxFramework.GearboxGlobals.GetGearboxGlobals");
	}

	UGearboxGlobals_execGetGearboxGlobals_Params GetGearboxGlobals_Params;
	memset(&GetGearboxGlobals_Params, 0, sizeof(GetGearboxGlobals_Params));

	uFnGetGearboxGlobals->iNative = 0;
	uFnGetGearboxGlobals->FunctionFlags &= ~0x400;
	UGearboxGlobals::StaticClass()->ProcessEvent(uFnGetGearboxGlobals, &GetGearboxGlobals_Params, nullptr);
	uFnGetGearboxGlobals->FunctionFlags |= 0x400;
	uFnGetGearboxGlobals->iNative = 34105;

	return GetGearboxGlobals_Params.ReturnValue;
};

// Function GearboxFramework.GearboxHintBarContainerGFxObject.extHandleHintInput
// [0x00020403] (FUNC_Final | FUNC_Defined | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2560])
// Parameter Info:
// int32_t                        ControllerId                   (CPF_Parm)
// const class FString&           HintTag                        (CPF_Parm | CPF_NeedCtorLink)

void UGearboxHintBarContainerGFxObject::extHandleHintInput(int32_t ControllerId, const class FString& HintTag)
{
	static UFunction* uFnextHandleHintInput = nullptr;

	if (!uFnextHandleHintInput)
	{
		uFnextHandleHintInput = UFunction::FindFunction("Function GearboxFramework.GearboxHintBarContainerGFxObject.extHandleHintInput");
	}

	UGearboxHintBarContainerGFxObject_execextHandleHintInput_Params extHandleHintInput_Params;
	memset(&extHandleHintInput_Params, 0, sizeof(extHandleHintInput_Params));
	memcpy_s(&extHandleHintInput_Params.ControllerId, sizeof(extHandleHintInput_Params.ControllerId), &ControllerId, sizeof(ControllerId));
	memcpy_s(&extHandleHintInput_Params.HintTag, sizeof(extHandleHintInput_Params.HintTag), &HintTag, sizeof(HintTag));

	uFnextHandleHintInput->iNative = 0;
	uFnextHandleHintInput->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnextHandleHintInput, &extHandleHintInput_Params, nullptr);
	uFnextHandleHintInput->FunctionFlags |= 0x400;
	uFnextHandleHintInput->iNative = 2560;
};

// Function GearboxFramework.GearboxHUD.InspectAIPawn
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AGearboxPawn*            AIPawn                         (CPF_Parm)

void AGearboxHUD::InspectAIPawn(class AGearboxPawn* AIPawn)
{
	static UFunction* uFnInspectAIPawn = nullptr;

	if (!uFnInspectAIPawn)
	{
		uFnInspectAIPawn = UFunction::FindFunction("Function GearboxFramework.GearboxHUD.InspectAIPawn");
	}

	AGearboxHUD_execInspectAIPawn_Params InspectAIPawn_Params;
	memset(&InspectAIPawn_Params, 0, sizeof(InspectAIPawn_Params));
	memcpy_s(&InspectAIPawn_Params.AIPawn, sizeof(InspectAIPawn_Params.AIPawn), &AIPawn, sizeof(AIPawn));

	this->ProcessEvent(uFnInspectAIPawn, &InspectAIPawn_Params, nullptr);
};

// Function GearboxFramework.GearboxHUD.InspectAI
// [0x12020200] (FUNC_Exec | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void AGearboxHUD::InspectAI()
{
	static UFunction* uFnInspectAI = nullptr;

	if (!uFnInspectAI)
	{
		uFnInspectAI = UFunction::FindFunction("Function GearboxFramework.GearboxHUD.InspectAI");
	}

	AGearboxHUD_execInspectAI_Params InspectAI_Params;
	memset(&InspectAI_Params, 0, sizeof(InspectAI_Params));

	this->ProcessEvent(uFnInspectAI, &InspectAI_Params, nullptr);
};

// Function GearboxFramework.GearboxMind.GetAIChild
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34032])
// Parameter Info:
// class UIAIInterface*           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        ChildIdx                       (CPF_Const | CPF_Parm)

class UIAIInterface* AGearboxMind::GetAIChild(int32_t ChildIdx)
{
	static UFunction* uFnGetAIChild = nullptr;

	if (!uFnGetAIChild)
	{
		uFnGetAIChild = UFunction::FindFunction("Function GearboxFramework.GearboxMind.GetAIChild");
	}

	AGearboxMind_execGetAIChild_Params GetAIChild_Params;
	memset(&GetAIChild_Params, 0, sizeof(GetAIChild_Params));
	memcpy_s(&GetAIChild_Params.ChildIdx, sizeof(GetAIChild_Params.ChildIdx), &ChildIdx, sizeof(ChildIdx));

	uFnGetAIChild->iNative = 0;
	uFnGetAIChild->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAIChild, &GetAIChild_Params, nullptr);
	uFnGetAIChild->FunctionFlags |= 0x400;
	uFnGetAIChild->iNative = 34032;

	return GetAIChild_Params.ReturnValue;
};

// Function GearboxFramework.GearboxMind.GetNumAIChildren
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34150])
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

int32_t AGearboxMind::GetNumAIChildren()
{
	static UFunction* uFnGetNumAIChildren = nullptr;

	if (!uFnGetNumAIChildren)
	{
		uFnGetNumAIChildren = UFunction::FindFunction("Function GearboxFramework.GearboxMind.GetNumAIChildren");
	}

	AGearboxMind_execGetNumAIChildren_Params GetNumAIChildren_Params;
	memset(&GetNumAIChildren_Params, 0, sizeof(GetNumAIChildren_Params));

	uFnGetNumAIChildren->iNative = 0;
	uFnGetNumAIChildren->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetNumAIChildren, &GetNumAIChildren_Params, nullptr);
	uFnGetNumAIChildren->FunctionFlags |= 0x400;
	uFnGetNumAIChildren->iNative = 34150;

	return GetNumAIChildren_Params.ReturnValue;
};

// Function GearboxFramework.GearboxMind.InitSequence
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34561])
// Parameter Info:
// class UActionSequence*         NewSequence                    (CPF_Parm)

void AGearboxMind::InitSequence(class UActionSequence* NewSequence)
{
	static UFunction* uFnInitSequence = nullptr;

	if (!uFnInitSequence)
	{
		uFnInitSequence = UFunction::FindFunction("Function GearboxFramework.GearboxMind.InitSequence");
	}

	AGearboxMind_execInitSequence_Params InitSequence_Params;
	memset(&InitSequence_Params, 0, sizeof(InitSequence_Params));
	memcpy_s(&InitSequence_Params.NewSequence, sizeof(InitSequence_Params.NewSequence), &NewSequence, sizeof(NewSequence));

	uFnInitSequence->iNative = 0;
	uFnInitSequence->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInitSequence, &InitSequence_Params, nullptr);
	uFnInitSequence->FunctionFlags |= 0x400;
	uFnInitSequence->iNative = 34561;
};

// Function GearboxFramework.GearboxMind.GetAllegiance
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34040])
// Parameter Info:
// class UPawnAllegiance*         ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UPawnAllegiance* AGearboxMind::GetAllegiance()
{
	static UFunction* uFnGetAllegiance = nullptr;

	if (!uFnGetAllegiance)
	{
		uFnGetAllegiance = UFunction::FindFunction("Function GearboxFramework.GearboxMind.GetAllegiance");
	}

	AGearboxMind_execGetAllegiance_Params GetAllegiance_Params;
	memset(&GetAllegiance_Params, 0, sizeof(GetAllegiance_Params));

	uFnGetAllegiance->iNative = 0;
	uFnGetAllegiance->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAllegiance, &GetAllegiance_Params, nullptr);
	uFnGetAllegiance->FunctionFlags |= 0x400;
	uFnGetAllegiance->iNative = 34040;

	return GetAllegiance_Params.ReturnValue;
};

// Function GearboxFramework.GearboxMind.GetAIDefinition
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34034])
// Parameter Info:
// class UAIDefinition*           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UAIDefinition* AGearboxMind::GetAIDefinition()
{
	static UFunction* uFnGetAIDefinition = nullptr;

	if (!uFnGetAIDefinition)
	{
		uFnGetAIDefinition = UFunction::FindFunction("Function GearboxFramework.GearboxMind.GetAIDefinition");
	}

	AGearboxMind_execGetAIDefinition_Params GetAIDefinition_Params;
	memset(&GetAIDefinition_Params, 0, sizeof(GetAIDefinition_Params));

	uFnGetAIDefinition->iNative = 0;
	uFnGetAIDefinition->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAIDefinition, &GetAIDefinition_Params, nullptr);
	uFnGetAIDefinition->FunctionFlags |= 0x400;
	uFnGetAIDefinition->iNative = 34034;

	return GetAIDefinition_Params.ReturnValue;
};

// Function GearboxFramework.GearboxMind.SetAIComponent
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35883])
// Parameter Info:
// class UAIComponent*            NewAIComp                      (CPF_Parm | CPF_EditInline)

void AGearboxMind::SetAIComponent(class UAIComponent* NewAIComp)
{
	static UFunction* uFnSetAIComponent = nullptr;

	if (!uFnSetAIComponent)
	{
		uFnSetAIComponent = UFunction::FindFunction("Function GearboxFramework.GearboxMind.SetAIComponent");
	}

	AGearboxMind_execSetAIComponent_Params SetAIComponent_Params;
	memset(&SetAIComponent_Params, 0, sizeof(SetAIComponent_Params));
	memcpy_s(&SetAIComponent_Params.NewAIComp, sizeof(SetAIComponent_Params.NewAIComp), &NewAIComp, sizeof(NewAIComp));

	uFnSetAIComponent->iNative = 0;
	uFnSetAIComponent->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetAIComponent, &SetAIComponent_Params, nullptr);
	uFnSetAIComponent->FunctionFlags |= 0x400;
	uFnSetAIComponent->iNative = 35883;
};

// Function GearboxFramework.GearboxMind.GetAIComponent
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34033])
// Parameter Info:
// class UAIComponent*            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline)

class UAIComponent* AGearboxMind::GetAIComponent()
{
	static UFunction* uFnGetAIComponent = nullptr;

	if (!uFnGetAIComponent)
	{
		uFnGetAIComponent = UFunction::FindFunction("Function GearboxFramework.GearboxMind.GetAIComponent");
	}

	AGearboxMind_execGetAIComponent_Params GetAIComponent_Params;
	memset(&GetAIComponent_Params, 0, sizeof(GetAIComponent_Params));

	uFnGetAIComponent->iNative = 0;
	uFnGetAIComponent->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAIComponent, &GetAIComponent_Params, nullptr);
	uFnGetAIComponent->FunctionFlags |= 0x400;
	uFnGetAIComponent->iNative = 34033;

	return GetAIComponent_Params.ReturnValue;
};

// Function GearboxFramework.GearboxMind.GetAIParent
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34038])
// Parameter Info:
// class UIAIInterface*           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UIAIInterface* AGearboxMind::GetAIParent()
{
	static UFunction* uFnGetAIParent = nullptr;

	if (!uFnGetAIParent)
	{
		uFnGetAIParent = UFunction::FindFunction("Function GearboxFramework.GearboxMind.GetAIParent");
	}

	AGearboxMind_execGetAIParent_Params GetAIParent_Params;
	memset(&GetAIParent_Params, 0, sizeof(GetAIParent_Params));

	uFnGetAIParent->iNative = 0;
	uFnGetAIParent->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAIParent, &GetAIParent_Params, nullptr);
	uFnGetAIParent->FunctionFlags |= 0x400;
	uFnGetAIParent->iNative = 34038;

	return GetAIParent_Params.ReturnValue;
};

// Function GearboxFramework.GearboxMind.GetAILocation
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34035])
// Parameter Info:
// struct FVector                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FVector AGearboxMind::GetAILocation()
{
	static UFunction* uFnGetAILocation = nullptr;

	if (!uFnGetAILocation)
	{
		uFnGetAILocation = UFunction::FindFunction("Function GearboxFramework.GearboxMind.GetAILocation");
	}

	AGearboxMind_execGetAILocation_Params GetAILocation_Params;
	memset(&GetAILocation_Params, 0, sizeof(GetAILocation_Params));

	uFnGetAILocation->iNative = 0;
	uFnGetAILocation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAILocation, &GetAILocation_Params, nullptr);
	uFnGetAILocation->FunctionFlags |= 0x400;
	uFnGetAILocation->iNative = 34035;

	return GetAILocation_Params.ReturnValue;
};

// Function GearboxFramework.GearboxMind.GetAIActor
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34031])
// Parameter Info:
// class AActor*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class AActor* AGearboxMind::GetAIActor()
{
	static UFunction* uFnGetAIActor = nullptr;

	if (!uFnGetAIActor)
	{
		uFnGetAIActor = UFunction::FindFunction("Function GearboxFramework.GearboxMind.GetAIActor");
	}

	AGearboxMind_execGetAIActor_Params GetAIActor_Params;
	memset(&GetAIActor_Params, 0, sizeof(GetAIActor_Params));

	uFnGetAIActor->iNative = 0;
	uFnGetAIActor->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAIActor, &GetAIActor_Params, nullptr);
	uFnGetAIActor->FunctionFlags |= 0x400;
	uFnGetAIActor->iNative = 34031;

	return GetAIActor_Params.ReturnValue;
};

// Function GearboxFramework.GearboxMind.CanTickAI
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32687])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool AGearboxMind::CanTickAI()
{
	static UFunction* uFnCanTickAI = nullptr;

	if (!uFnCanTickAI)
	{
		uFnCanTickAI = UFunction::FindFunction("Function GearboxFramework.GearboxMind.CanTickAI");
	}

	AGearboxMind_execCanTickAI_Params CanTickAI_Params;
	memset(&CanTickAI_Params, 0, sizeof(CanTickAI_Params));

	uFnCanTickAI->iNative = 0;
	uFnCanTickAI->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCanTickAI, &CanTickAI_Params, nullptr);
	uFnCanTickAI->FunctionFlags |= 0x400;
	uFnCanTickAI->iNative = 32687;

	return CanTickAI_Params.ReturnValue;
};

// Function GearboxFramework.GearboxMind.InGodMode
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[24542])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool AGearboxMind::InGodMode()
{
	static UFunction* uFnInGodMode = nullptr;

	if (!uFnInGodMode)
	{
		uFnInGodMode = UFunction::FindFunction("Function GearboxFramework.GearboxMind.InGodMode");
	}

	AGearboxMind_execInGodMode_Params InGodMode_Params;
	memset(&InGodMode_Params, 0, sizeof(InGodMode_Params));

	uFnInGodMode->iNative = 0;
	uFnInGodMode->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInGodMode, &InGodMode_Params, nullptr);
	uFnInGodMode->FunctionFlags |= 0x400;
	uFnInGodMode->iNative = 24542;

	return InGodMode_Params.ReturnValue;
};

// Function GearboxFramework.GearboxMind.PawnDied
// [0x16020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Call | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class APawn*                   inPawn                         (CPF_Parm)

void AGearboxMind::PawnDied(class APawn* inPawn)
{
	static UFunction* uFnPawnDied = nullptr;

	if (!uFnPawnDied)
	{
		uFnPawnDied = UFunction::FindFunction("Function GearboxFramework.GearboxMind.PawnDied");
	}

	AGearboxMind_execPawnDied_Params PawnDied_Params;
	memset(&PawnDied_Params, 0, sizeof(PawnDied_Params));
	memcpy_s(&PawnDied_Params.inPawn, sizeof(PawnDied_Params.inPawn), &inPawn, sizeof(inPawn));

	this->ProcessEvent(uFnPawnDied, &PawnDied_Params, nullptr);
};

// Function GearboxFramework.GearboxMind.Suicide
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void AGearboxMind::Suicide()
{
	static UFunction* uFnSuicide = nullptr;

	if (!uFnSuicide)
	{
		uFnSuicide = UFunction::FindFunction("Function GearboxFramework.GearboxMind.Suicide");
	}

	AGearboxMind_execSuicide_Params Suicide_Params;
	memset(&Suicide_Params, 0, sizeof(Suicide_Params));

	this->ProcessEvent(uFnSuicide, &Suicide_Params, nullptr);
};

// Function GearboxFramework.GearboxMind.OnTargetPriority
// [0x12020002] (FUNC_Defined | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UGearboxSeqAct_TargetPriority* inAction                       (CPF_Parm)

void AGearboxMind::OnTargetPriority(class UGearboxSeqAct_TargetPriority* inAction)
{
	static UFunction* uFnOnTargetPriority = nullptr;

	if (!uFnOnTargetPriority)
	{
		uFnOnTargetPriority = UFunction::FindFunction("Function GearboxFramework.GearboxMind.OnTargetPriority");
	}

	AGearboxMind_execOnTargetPriority_Params OnTargetPriority_Params;
	memset(&OnTargetPriority_Params, 0, sizeof(OnTargetPriority_Params));
	memcpy_s(&OnTargetPriority_Params.inAction, sizeof(OnTargetPriority_Params.inAction), &inAction, sizeof(inAction));

	this->ProcessEvent(uFnOnTargetPriority, &OnTargetPriority_Params, nullptr);
};

// Function GearboxFramework.GearboxMind.Behavior_SetCanTarget
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[18322])
// Parameter Info:
// EChangeStatus                  ChangeStatus                   (CPF_Parm)

void AGearboxMind::Behavior_SetCanTarget(EChangeStatus ChangeStatus)
{
	static UFunction* uFnBehavior_SetCanTarget = nullptr;

	if (!uFnBehavior_SetCanTarget)
	{
		uFnBehavior_SetCanTarget = UFunction::FindFunction("Function GearboxFramework.GearboxMind.Behavior_SetCanTarget");
	}

	AGearboxMind_execBehavior_SetCanTarget_Params Behavior_SetCanTarget_Params;
	memset(&Behavior_SetCanTarget_Params, 0, sizeof(Behavior_SetCanTarget_Params));
	memcpy_s(&Behavior_SetCanTarget_Params.ChangeStatus, sizeof(Behavior_SetCanTarget_Params.ChangeStatus), &ChangeStatus, sizeof(ChangeStatus));

	uFnBehavior_SetCanTarget->iNative = 0;
	uFnBehavior_SetCanTarget->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnBehavior_SetCanTarget, &Behavior_SetCanTarget_Params, nullptr);
	uFnBehavior_SetCanTarget->FunctionFlags |= 0x400;
	uFnBehavior_SetCanTarget->iNative = 18322;
};

// Function GearboxFramework.GearboxMind.GetNoTargetAllEnemies
// [0x00022400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[34148])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool AGearboxMind::GetNoTargetAllEnemies()
{
	static UFunction* uFnGetNoTargetAllEnemies = nullptr;

	if (!uFnGetNoTargetAllEnemies)
	{
		uFnGetNoTargetAllEnemies = UFunction::FindFunction("Function GearboxFramework.GearboxMind.GetNoTargetAllEnemies");
	}

	AGearboxMind_execGetNoTargetAllEnemies_Params GetNoTargetAllEnemies_Params;
	memset(&GetNoTargetAllEnemies_Params, 0, sizeof(GetNoTargetAllEnemies_Params));

	uFnGetNoTargetAllEnemies->iNative = 0;
	uFnGetNoTargetAllEnemies->FunctionFlags &= ~0x400;
	AGearboxMind::StaticClass()->ProcessEvent(uFnGetNoTargetAllEnemies, &GetNoTargetAllEnemies_Params, nullptr);
	uFnGetNoTargetAllEnemies->FunctionFlags |= 0x400;
	uFnGetNoTargetAllEnemies->iNative = 34148;

	return GetNoTargetAllEnemies_Params.ReturnValue;
};

// Function GearboxFramework.GearboxMind.SetNoTargetAllEnemies
// [0x00022400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[35911])
// Parameter Info:
// bool                           bNoTarget                      (CPF_Parm)

void AGearboxMind::SetNoTargetAllEnemies(bool bNoTarget)
{
	static UFunction* uFnSetNoTargetAllEnemies = nullptr;

	if (!uFnSetNoTargetAllEnemies)
	{
		uFnSetNoTargetAllEnemies = UFunction::FindFunction("Function GearboxFramework.GearboxMind.SetNoTargetAllEnemies");
	}

	AGearboxMind_execSetNoTargetAllEnemies_Params SetNoTargetAllEnemies_Params;
	memset(&SetNoTargetAllEnemies_Params, 0, sizeof(SetNoTargetAllEnemies_Params));
	SetNoTargetAllEnemies_Params.bNoTarget = bNoTarget;

	uFnSetNoTargetAllEnemies->iNative = 0;
	uFnSetNoTargetAllEnemies->FunctionFlags &= ~0x400;
	AGearboxMind::StaticClass()->ProcessEvent(uFnSetNoTargetAllEnemies, &SetNoTargetAllEnemies_Params, nullptr);
	uFnSetNoTargetAllEnemies->FunctionFlags |= 0x400;
	uFnSetNoTargetAllEnemies->iNative = 35911;
};

// Function GearboxFramework.GearboxMind.ActivateEventRule
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[31633])
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FName&            RuleEventName                  (CPF_Parm)

int32_t AGearboxMind::ActivateEventRule(const struct FName& RuleEventName)
{
	static UFunction* uFnActivateEventRule = nullptr;

	if (!uFnActivateEventRule)
	{
		uFnActivateEventRule = UFunction::FindFunction("Function GearboxFramework.GearboxMind.ActivateEventRule");
	}

	AGearboxMind_execActivateEventRule_Params ActivateEventRule_Params;
	memset(&ActivateEventRule_Params, 0, sizeof(ActivateEventRule_Params));
	memcpy_s(&ActivateEventRule_Params.RuleEventName, sizeof(ActivateEventRule_Params.RuleEventName), &RuleEventName, sizeof(RuleEventName));

	uFnActivateEventRule->iNative = 0;
	uFnActivateEventRule->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnActivateEventRule, &ActivateEventRule_Params, nullptr);
	uFnActivateEventRule->FunctionFlags |= 0x400;
	uFnActivateEventRule->iNative = 31633;

	return ActivateEventRule_Params.ReturnValue;
};

// Function GearboxFramework.GearboxMind.AddHitTargetRecord
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AGearboxPawn*            HitByPawn                      (CPF_Parm)
// const struct FVector&          NewHitLocation                 (CPF_Parm)
// float                          flNewDamage                    (CPF_Parm)

void AGearboxMind::AddHitTargetRecord(class AGearboxPawn* HitByPawn, const struct FVector& NewHitLocation, float flNewDamage)
{
	static UFunction* uFnAddHitTargetRecord = nullptr;

	if (!uFnAddHitTargetRecord)
	{
		uFnAddHitTargetRecord = UFunction::FindFunction("Function GearboxFramework.GearboxMind.AddHitTargetRecord");
	}

	AGearboxMind_execAddHitTargetRecord_Params AddHitTargetRecord_Params;
	memset(&AddHitTargetRecord_Params, 0, sizeof(AddHitTargetRecord_Params));
	memcpy_s(&AddHitTargetRecord_Params.HitByPawn, sizeof(AddHitTargetRecord_Params.HitByPawn), &HitByPawn, sizeof(HitByPawn));
	memcpy_s(&AddHitTargetRecord_Params.NewHitLocation, sizeof(AddHitTargetRecord_Params.NewHitLocation), &NewHitLocation, sizeof(NewHitLocation));
	memcpy_s(&AddHitTargetRecord_Params.flNewDamage, sizeof(AddHitTargetRecord_Params.flNewDamage), &flNewDamage, sizeof(flNewDamage));

	this->ProcessEvent(uFnAddHitTargetRecord, &AddHitTargetRecord_Params, nullptr);
};

// Function GearboxFramework.GearboxMind.StopMovement
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void AGearboxMind::StopMovement()
{
	static UFunction* uFnStopMovement = nullptr;

	if (!uFnStopMovement)
	{
		uFnStopMovement = UFunction::FindFunction("Function GearboxFramework.GearboxMind.StopMovement");
	}

	AGearboxMind_execStopMovement_Params StopMovement_Params;
	memset(&StopMovement_Params, 0, sizeof(StopMovement_Params));

	this->ProcessEvent(uFnStopMovement, &StopMovement_Params, nullptr);
};

// Function GearboxFramework.GearboxMind.Possess
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class APawn*                   inPawn                         (CPF_Parm)
// bool                           bVehicleTransition             (CPF_Parm)

void AGearboxMind::eventPossess(class APawn* inPawn, bool bVehicleTransition)
{
	static UFunction* uFnPossess = nullptr;

	if (!uFnPossess)
	{
		uFnPossess = UFunction::FindFunction("Function GearboxFramework.GearboxMind.Possess");
	}

	AGearboxMind_eventPossess_Params Possess_Params;
	memset(&Possess_Params, 0, sizeof(Possess_Params));
	memcpy_s(&Possess_Params.inPawn, sizeof(Possess_Params.inPawn), &inPawn, sizeof(inPawn));
	Possess_Params.bVehicleTransition = bVehicleTransition;

	this->ProcessEvent(uFnPossess, &Possess_Params, nullptr);
};

// Function GearboxFramework.GearboxMind.NotifyShotAtBy
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35184])
// Parameter Info:
// class AGearboxPawn*            ShootingPawn                   (CPF_Parm)

void AGearboxMind::NotifyShotAtBy(class AGearboxPawn* ShootingPawn)
{
	static UFunction* uFnNotifyShotAtBy = nullptr;

	if (!uFnNotifyShotAtBy)
	{
		uFnNotifyShotAtBy = UFunction::FindFunction("Function GearboxFramework.GearboxMind.NotifyShotAtBy");
	}

	AGearboxMind_execNotifyShotAtBy_Params NotifyShotAtBy_Params;
	memset(&NotifyShotAtBy_Params, 0, sizeof(NotifyShotAtBy_Params));
	memcpy_s(&NotifyShotAtBy_Params.ShootingPawn, sizeof(NotifyShotAtBy_Params.ShootingPawn), &ShootingPawn, sizeof(ShootingPawn));

	uFnNotifyShotAtBy->iNative = 0;
	uFnNotifyShotAtBy->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnNotifyShotAtBy, &NotifyShotAtBy_Params, nullptr);
	uFnNotifyShotAtBy->FunctionFlags |= 0x400;
	uFnNotifyShotAtBy->iNative = 35184;
};

// Function GearboxFramework.GearboxMind.GetDenSpawner
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34081])
// Parameter Info:
// class ADenSpawner*             ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class ADenSpawner* AGearboxMind::GetDenSpawner()
{
	static UFunction* uFnGetDenSpawner = nullptr;

	if (!uFnGetDenSpawner)
	{
		uFnGetDenSpawner = UFunction::FindFunction("Function GearboxFramework.GearboxMind.GetDenSpawner");
	}

	AGearboxMind_execGetDenSpawner_Params GetDenSpawner_Params;
	memset(&GetDenSpawner_Params, 0, sizeof(GetDenSpawner_Params));

	uFnGetDenSpawner->iNative = 0;
	uFnGetDenSpawner->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetDenSpawner, &GetDenSpawner_Params, nullptr);
	uFnGetDenSpawner->FunctionFlags |= 0x400;
	uFnGetDenSpawner->iNative = 34081;

	return GetDenSpawner_Params.ReturnValue;
};

// Function GearboxFramework.GearboxMind.GetSpawner
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34214])
// Parameter Info:
// class ASpawner*                ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class ASpawner* AGearboxMind::GetSpawner()
{
	static UFunction* uFnGetSpawner = nullptr;

	if (!uFnGetSpawner)
	{
		uFnGetSpawner = UFunction::FindFunction("Function GearboxFramework.GearboxMind.GetSpawner");
	}

	AGearboxMind_execGetSpawner_Params GetSpawner_Params;
	memset(&GetSpawner_Params, 0, sizeof(GetSpawner_Params));

	uFnGetSpawner->iNative = 0;
	uFnGetSpawner->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetSpawner, &GetSpawner_Params, nullptr);
	uFnGetSpawner->FunctionFlags |= 0x400;
	uFnGetSpawner->iNative = 34214;

	return GetSpawner_Params.ReturnValue;
};

// Function GearboxFramework.GearboxMind.GetCurrentTargetInfo
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34073])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UMindTargetInfo*         OutTargetRec                   (CPF_Parm | CPF_OutParm)

bool AGearboxMind::GetCurrentTargetInfo(class UMindTargetInfo*& OutTargetRec)
{
	static UFunction* uFnGetCurrentTargetInfo = nullptr;

	if (!uFnGetCurrentTargetInfo)
	{
		uFnGetCurrentTargetInfo = UFunction::FindFunction("Function GearboxFramework.GearboxMind.GetCurrentTargetInfo");
	}

	AGearboxMind_execGetCurrentTargetInfo_Params GetCurrentTargetInfo_Params;
	memset(&GetCurrentTargetInfo_Params, 0, sizeof(GetCurrentTargetInfo_Params));
	memcpy_s(&GetCurrentTargetInfo_Params.OutTargetRec, sizeof(GetCurrentTargetInfo_Params.OutTargetRec), &OutTargetRec, sizeof(OutTargetRec));

	uFnGetCurrentTargetInfo->iNative = 0;
	uFnGetCurrentTargetInfo->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetCurrentTargetInfo, &GetCurrentTargetInfo_Params, nullptr);
	uFnGetCurrentTargetInfo->FunctionFlags |= 0x400;
	uFnGetCurrentTargetInfo->iNative = 34073;

	memcpy_s(&OutTargetRec, sizeof(OutTargetRec), &GetCurrentTargetInfo_Params.OutTargetRec, sizeof(GetCurrentTargetInfo_Params.OutTargetRec));

	return GetCurrentTargetInfo_Params.ReturnValue;
};

// Function GearboxFramework.GearboxMind.IsSameAllegianceMind
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34690])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AGearboxMind*            aMind                          (CPF_Parm)

bool AGearboxMind::IsSameAllegianceMind(class AGearboxMind* aMind)
{
	static UFunction* uFnIsSameAllegianceMind = nullptr;

	if (!uFnIsSameAllegianceMind)
	{
		uFnIsSameAllegianceMind = UFunction::FindFunction("Function GearboxFramework.GearboxMind.IsSameAllegianceMind");
	}

	AGearboxMind_execIsSameAllegianceMind_Params IsSameAllegianceMind_Params;
	memset(&IsSameAllegianceMind_Params, 0, sizeof(IsSameAllegianceMind_Params));
	memcpy_s(&IsSameAllegianceMind_Params.aMind, sizeof(IsSameAllegianceMind_Params.aMind), &aMind, sizeof(aMind));

	uFnIsSameAllegianceMind->iNative = 0;
	uFnIsSameAllegianceMind->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsSameAllegianceMind, &IsSameAllegianceMind_Params, nullptr);
	uFnIsSameAllegianceMind->FunctionFlags |= 0x400;
	uFnIsSameAllegianceMind->iNative = 34690;

	return IsSameAllegianceMind_Params.ReturnValue;
};

// Function GearboxFramework.GearboxMind.IsSameAllegiance
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[24932])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 anObject                       (CPF_Parm)

bool AGearboxMind::IsSameAllegiance(class UObject* anObject)
{
	static UFunction* uFnIsSameAllegiance = nullptr;

	if (!uFnIsSameAllegiance)
	{
		uFnIsSameAllegiance = UFunction::FindFunction("Function GearboxFramework.GearboxMind.IsSameAllegiance");
	}

	AGearboxMind_execIsSameAllegiance_Params IsSameAllegiance_Params;
	memset(&IsSameAllegiance_Params, 0, sizeof(IsSameAllegiance_Params));
	memcpy_s(&IsSameAllegiance_Params.anObject, sizeof(IsSameAllegiance_Params.anObject), &anObject, sizeof(anObject));

	uFnIsSameAllegiance->iNative = 0;
	uFnIsSameAllegiance->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsSameAllegiance, &IsSameAllegiance_Params, nullptr);
	uFnIsSameAllegiance->FunctionFlags |= 0x400;
	uFnIsSameAllegiance->iNative = 24932;

	return IsSameAllegiance_Params.ReturnValue;
};

// Function GearboxFramework.GearboxMind.IsNeutralMind
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34675])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AGearboxMind*            aMind                          (CPF_Parm)

bool AGearboxMind::IsNeutralMind(class AGearboxMind* aMind)
{
	static UFunction* uFnIsNeutralMind = nullptr;

	if (!uFnIsNeutralMind)
	{
		uFnIsNeutralMind = UFunction::FindFunction("Function GearboxFramework.GearboxMind.IsNeutralMind");
	}

	AGearboxMind_execIsNeutralMind_Params IsNeutralMind_Params;
	memset(&IsNeutralMind_Params, 0, sizeof(IsNeutralMind_Params));
	memcpy_s(&IsNeutralMind_Params.aMind, sizeof(IsNeutralMind_Params.aMind), &aMind, sizeof(aMind));

	uFnIsNeutralMind->iNative = 0;
	uFnIsNeutralMind->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsNeutralMind, &IsNeutralMind_Params, nullptr);
	uFnIsNeutralMind->FunctionFlags |= 0x400;
	uFnIsNeutralMind->iNative = 34675;

	return IsNeutralMind_Params.ReturnValue;
};

// Function GearboxFramework.GearboxMind.IsNeutral
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[24906])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 anObject                       (CPF_Parm)

bool AGearboxMind::IsNeutral(class UObject* anObject)
{
	static UFunction* uFnIsNeutral = nullptr;

	if (!uFnIsNeutral)
	{
		uFnIsNeutral = UFunction::FindFunction("Function GearboxFramework.GearboxMind.IsNeutral");
	}

	AGearboxMind_execIsNeutral_Params IsNeutral_Params;
	memset(&IsNeutral_Params, 0, sizeof(IsNeutral_Params));
	memcpy_s(&IsNeutral_Params.anObject, sizeof(IsNeutral_Params.anObject), &anObject, sizeof(anObject));

	uFnIsNeutral->iNative = 0;
	uFnIsNeutral->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsNeutral, &IsNeutral_Params, nullptr);
	uFnIsNeutral->FunctionFlags |= 0x400;
	uFnIsNeutral->iNative = 24906;

	return IsNeutral_Params.ReturnValue;
};

// Function GearboxFramework.GearboxMind.IsFriendlyMind
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34662])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AGearboxMind*            aMind                          (CPF_Parm)

bool AGearboxMind::IsFriendlyMind(class AGearboxMind* aMind)
{
	static UFunction* uFnIsFriendlyMind = nullptr;

	if (!uFnIsFriendlyMind)
	{
		uFnIsFriendlyMind = UFunction::FindFunction("Function GearboxFramework.GearboxMind.IsFriendlyMind");
	}

	AGearboxMind_execIsFriendlyMind_Params IsFriendlyMind_Params;
	memset(&IsFriendlyMind_Params, 0, sizeof(IsFriendlyMind_Params));
	memcpy_s(&IsFriendlyMind_Params.aMind, sizeof(IsFriendlyMind_Params.aMind), &aMind, sizeof(aMind));

	uFnIsFriendlyMind->iNative = 0;
	uFnIsFriendlyMind->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsFriendlyMind, &IsFriendlyMind_Params, nullptr);
	uFnIsFriendlyMind->FunctionFlags |= 0x400;
	uFnIsFriendlyMind->iNative = 34662;

	return IsFriendlyMind_Params.ReturnValue;
};

// Function GearboxFramework.GearboxMind.IsFriendly
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[24878])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 anObject                       (CPF_Parm)

bool AGearboxMind::IsFriendly(class UObject* anObject)
{
	static UFunction* uFnIsFriendly = nullptr;

	if (!uFnIsFriendly)
	{
		uFnIsFriendly = UFunction::FindFunction("Function GearboxFramework.GearboxMind.IsFriendly");
	}

	AGearboxMind_execIsFriendly_Params IsFriendly_Params;
	memset(&IsFriendly_Params, 0, sizeof(IsFriendly_Params));
	memcpy_s(&IsFriendly_Params.anObject, sizeof(IsFriendly_Params.anObject), &anObject, sizeof(anObject));

	uFnIsFriendly->iNative = 0;
	uFnIsFriendly->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsFriendly, &IsFriendly_Params, nullptr);
	uFnIsFriendly->FunctionFlags |= 0x400;
	uFnIsFriendly->iNative = 24878;

	return IsFriendly_Params.ReturnValue;
};

// Function GearboxFramework.GearboxMind.IsEnemyMind
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34658])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AGearboxMind*            aMind                          (CPF_Parm)

bool AGearboxMind::IsEnemyMind(class AGearboxMind* aMind)
{
	static UFunction* uFnIsEnemyMind = nullptr;

	if (!uFnIsEnemyMind)
	{
		uFnIsEnemyMind = UFunction::FindFunction("Function GearboxFramework.GearboxMind.IsEnemyMind");
	}

	AGearboxMind_execIsEnemyMind_Params IsEnemyMind_Params;
	memset(&IsEnemyMind_Params, 0, sizeof(IsEnemyMind_Params));
	memcpy_s(&IsEnemyMind_Params.aMind, sizeof(IsEnemyMind_Params.aMind), &aMind, sizeof(aMind));

	uFnIsEnemyMind->iNative = 0;
	uFnIsEnemyMind->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsEnemyMind, &IsEnemyMind_Params, nullptr);
	uFnIsEnemyMind->FunctionFlags |= 0x400;
	uFnIsEnemyMind->iNative = 34658;

	return IsEnemyMind_Params.ReturnValue;
};

// Function GearboxFramework.GearboxMind.IsEnemy
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[24873])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 anObject                       (CPF_Parm)

bool AGearboxMind::IsEnemy(class UObject* anObject)
{
	static UFunction* uFnIsEnemy = nullptr;

	if (!uFnIsEnemy)
	{
		uFnIsEnemy = UFunction::FindFunction("Function GearboxFramework.GearboxMind.IsEnemy");
	}

	AGearboxMind_execIsEnemy_Params IsEnemy_Params;
	memset(&IsEnemy_Params, 0, sizeof(IsEnemy_Params));
	memcpy_s(&IsEnemy_Params.anObject, sizeof(IsEnemy_Params.anObject), &anObject, sizeof(anObject));

	uFnIsEnemy->iNative = 0;
	uFnIsEnemy->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsEnemy, &IsEnemy_Params, nullptr);
	uFnIsEnemy->FunctionFlags |= 0x400;
	uFnIsEnemy->iNative = 24873;

	return IsEnemy_Params.ReturnValue;
};

// Function GearboxFramework.GearboxMind.WantsToWalk
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36733])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool AGearboxMind::WantsToWalk()
{
	static UFunction* uFnWantsToWalk = nullptr;

	if (!uFnWantsToWalk)
	{
		uFnWantsToWalk = UFunction::FindFunction("Function GearboxFramework.GearboxMind.WantsToWalk");
	}

	AGearboxMind_execWantsToWalk_Params WantsToWalk_Params;
	memset(&WantsToWalk_Params, 0, sizeof(WantsToWalk_Params));

	uFnWantsToWalk->iNative = 0;
	uFnWantsToWalk->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnWantsToWalk, &WantsToWalk_Params, nullptr);
	uFnWantsToWalk->FunctionFlags |= 0x400;
	uFnWantsToWalk->iNative = 36733;

	return WantsToWalk_Params.ReturnValue;
};

// Function GearboxFramework.GearboxMind.SetWantsToWalk
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35943])
// Parameter Info:
// bool                           bInWantsToWalk                 (CPF_Parm)

void AGearboxMind::SetWantsToWalk(bool bInWantsToWalk)
{
	static UFunction* uFnSetWantsToWalk = nullptr;

	if (!uFnSetWantsToWalk)
	{
		uFnSetWantsToWalk = UFunction::FindFunction("Function GearboxFramework.GearboxMind.SetWantsToWalk");
	}

	AGearboxMind_execSetWantsToWalk_Params SetWantsToWalk_Params;
	memset(&SetWantsToWalk_Params, 0, sizeof(SetWantsToWalk_Params));
	SetWantsToWalk_Params.bInWantsToWalk = bInWantsToWalk;

	uFnSetWantsToWalk->iNative = 0;
	uFnSetWantsToWalk->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetWantsToWalk, &SetWantsToWalk_Params, nullptr);
	uFnSetWantsToWalk->FunctionFlags |= 0x400;
	uFnSetWantsToWalk->iNative = 35943;
};

// Function GearboxFramework.GearboxMind.SetFacingPolicy
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[35900])
// Parameter Info:
// EFacingPolicy                  NewFacingPolicy                (CPF_Parm)
// class AActor*                  NewFacingActor                 (CPF_OptionalParm | CPF_Parm)
// const struct FVector&          NewFacingVector                (CPF_OptionalParm | CPF_Parm)
// EFacingStyle                   NewFacingStyle                 (CPF_OptionalParm | CPF_Parm)

void AGearboxMind::SetFacingPolicy(EFacingPolicy NewFacingPolicy, class AActor* NewFacingActor, const struct FVector& NewFacingVector, EFacingStyle NewFacingStyle)
{
	static UFunction* uFnSetFacingPolicy = nullptr;

	if (!uFnSetFacingPolicy)
	{
		uFnSetFacingPolicy = UFunction::FindFunction("Function GearboxFramework.GearboxMind.SetFacingPolicy");
	}

	AGearboxMind_execSetFacingPolicy_Params SetFacingPolicy_Params;
	memset(&SetFacingPolicy_Params, 0, sizeof(SetFacingPolicy_Params));
	memcpy_s(&SetFacingPolicy_Params.NewFacingPolicy, sizeof(SetFacingPolicy_Params.NewFacingPolicy), &NewFacingPolicy, sizeof(NewFacingPolicy));
	memcpy_s(&SetFacingPolicy_Params.NewFacingActor, sizeof(SetFacingPolicy_Params.NewFacingActor), &NewFacingActor, sizeof(NewFacingActor));
	memcpy_s(&SetFacingPolicy_Params.NewFacingVector, sizeof(SetFacingPolicy_Params.NewFacingVector), &NewFacingVector, sizeof(NewFacingVector));
	memcpy_s(&SetFacingPolicy_Params.NewFacingStyle, sizeof(SetFacingPolicy_Params.NewFacingStyle), &NewFacingStyle, sizeof(NewFacingStyle));

	uFnSetFacingPolicy->iNative = 0;
	uFnSetFacingPolicy->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetFacingPolicy, &SetFacingPolicy_Params, nullptr);
	uFnSetFacingPolicy->FunctionFlags |= 0x400;
	uFnSetFacingPolicy->iNative = 35900;
};

// Function GearboxFramework.GearboxMind.GetCurrentTarget
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34072])
// Parameter Info:
// class AActor*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class AActor* AGearboxMind::GetCurrentTarget()
{
	static UFunction* uFnGetCurrentTarget = nullptr;

	if (!uFnGetCurrentTarget)
	{
		uFnGetCurrentTarget = UFunction::FindFunction("Function GearboxFramework.GearboxMind.GetCurrentTarget");
	}

	AGearboxMind_execGetCurrentTarget_Params GetCurrentTarget_Params;
	memset(&GetCurrentTarget_Params, 0, sizeof(GetCurrentTarget_Params));

	uFnGetCurrentTarget->iNative = 0;
	uFnGetCurrentTarget->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetCurrentTarget, &GetCurrentTarget_Params, nullptr);
	uFnGetCurrentTarget->FunctionFlags |= 0x400;
	uFnGetCurrentTarget->iNative = 34072;

	return GetCurrentTarget_Params.ReturnValue;
};

// Function GearboxFramework.GearboxMind.GetNavigationHandle
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34137])
// Parameter Info:
// class UGearboxNavigationHandle* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UGearboxNavigationHandle* AGearboxMind::GetNavigationHandle()
{
	static UFunction* uFnGetNavigationHandle = nullptr;

	if (!uFnGetNavigationHandle)
	{
		uFnGetNavigationHandle = UFunction::FindFunction("Function GearboxFramework.GearboxMind.GetNavigationHandle");
	}

	AGearboxMind_execGetNavigationHandle_Params GetNavigationHandle_Params;
	memset(&GetNavigationHandle_Params, 0, sizeof(GetNavigationHandle_Params));

	uFnGetNavigationHandle->iNative = 0;
	uFnGetNavigationHandle->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetNavigationHandle, &GetNavigationHandle_Params, nullptr);
	uFnGetNavigationHandle->FunctionFlags |= 0x400;
	uFnGetNavigationHandle->iNative = 34137;

	return GetNavigationHandle_Params.ReturnValue;
};

// Function GearboxFramework.GearboxNavigationHandle.GetNearestPositionOnNavMesh
// [0x00426400] (FUNC_Native | FUNC_Static | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34141])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// float                          Radius                         (CPF_Parm)
// const struct FVector&          TestLoc                        (CPF_Parm)
// bool                           bAnyHeight                     (CPF_OptionalParm | CPF_Parm)
// struct FBasedPosition          NearestPos                     (CPF_Parm | CPF_OutParm)
// struct FNavMeshPathParams      PolyUsableCheckParams          (CPF_Const | CPF_OptionalParm | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// struct FGBXNavMeshPolyRef      NearestPoly                    (CPF_OptionalParm | CPF_Parm | CPF_OutParm)

bool UGearboxNavigationHandle::GetNearestPositionOnNavMesh(float Radius, const struct FVector& TestLoc, bool bAnyHeight, struct FBasedPosition& NearestPos, struct FNavMeshPathParams& PolyUsableCheckParams, struct FGBXNavMeshPolyRef& NearestPoly)
{
	static UFunction* uFnGetNearestPositionOnNavMesh = nullptr;

	if (!uFnGetNearestPositionOnNavMesh)
	{
		uFnGetNearestPositionOnNavMesh = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.GetNearestPositionOnNavMesh");
	}

	UGearboxNavigationHandle_execGetNearestPositionOnNavMesh_Params GetNearestPositionOnNavMesh_Params;
	memset(&GetNearestPositionOnNavMesh_Params, 0, sizeof(GetNearestPositionOnNavMesh_Params));
	memcpy_s(&GetNearestPositionOnNavMesh_Params.Radius, sizeof(GetNearestPositionOnNavMesh_Params.Radius), &Radius, sizeof(Radius));
	memcpy_s(&GetNearestPositionOnNavMesh_Params.TestLoc, sizeof(GetNearestPositionOnNavMesh_Params.TestLoc), &TestLoc, sizeof(TestLoc));
	GetNearestPositionOnNavMesh_Params.bAnyHeight = bAnyHeight;
	memcpy_s(&GetNearestPositionOnNavMesh_Params.NearestPos, sizeof(GetNearestPositionOnNavMesh_Params.NearestPos), &NearestPos, sizeof(NearestPos));
	memcpy_s(&GetNearestPositionOnNavMesh_Params.PolyUsableCheckParams, sizeof(GetNearestPositionOnNavMesh_Params.PolyUsableCheckParams), &PolyUsableCheckParams, sizeof(PolyUsableCheckParams));
	memcpy_s(&GetNearestPositionOnNavMesh_Params.NearestPoly, sizeof(GetNearestPositionOnNavMesh_Params.NearestPoly), &NearestPoly, sizeof(NearestPoly));

	uFnGetNearestPositionOnNavMesh->iNative = 0;
	uFnGetNearestPositionOnNavMesh->FunctionFlags &= ~0x400;
	UGearboxNavigationHandle::StaticClass()->ProcessEvent(uFnGetNearestPositionOnNavMesh, &GetNearestPositionOnNavMesh_Params, nullptr);
	uFnGetNearestPositionOnNavMesh->FunctionFlags |= 0x400;
	uFnGetNearestPositionOnNavMesh->iNative = 34141;

	memcpy_s(&NearestPos, sizeof(NearestPos), &GetNearestPositionOnNavMesh_Params.NearestPos, sizeof(GetNearestPositionOnNavMesh_Params.NearestPos));
	memcpy_s(&PolyUsableCheckParams, sizeof(PolyUsableCheckParams), &GetNearestPositionOnNavMesh_Params.PolyUsableCheckParams, sizeof(GetNearestPositionOnNavMesh_Params.PolyUsableCheckParams));
	memcpy_s(&NearestPoly, sizeof(NearestPoly), &GetNearestPositionOnNavMesh_Params.NearestPoly, sizeof(GetNearestPositionOnNavMesh_Params.NearestPoly));

	return GetNearestPositionOnNavMesh_Params.ReturnValue;
};

// Function GearboxFramework.GearboxNavigationHandle.GetNavMeshPolyForPoint
// [0x00426400] (FUNC_Native | FUNC_Static | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34138])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FVector&          Point                          (CPF_Parm)
// struct FGBXNavMeshPolyRef      FoundPoly                      (CPF_Parm | CPF_OutParm)
// struct FNavMeshPathParams      PolyUsableCheckParams          (CPF_Const | CPF_OptionalParm | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UGearboxNavigationHandle::GetNavMeshPolyForPoint(const struct FVector& Point, struct FGBXNavMeshPolyRef& FoundPoly, struct FNavMeshPathParams& PolyUsableCheckParams)
{
	static UFunction* uFnGetNavMeshPolyForPoint = nullptr;

	if (!uFnGetNavMeshPolyForPoint)
	{
		uFnGetNavMeshPolyForPoint = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.GetNavMeshPolyForPoint");
	}

	UGearboxNavigationHandle_execGetNavMeshPolyForPoint_Params GetNavMeshPolyForPoint_Params;
	memset(&GetNavMeshPolyForPoint_Params, 0, sizeof(GetNavMeshPolyForPoint_Params));
	memcpy_s(&GetNavMeshPolyForPoint_Params.Point, sizeof(GetNavMeshPolyForPoint_Params.Point), &Point, sizeof(Point));
	memcpy_s(&GetNavMeshPolyForPoint_Params.FoundPoly, sizeof(GetNavMeshPolyForPoint_Params.FoundPoly), &FoundPoly, sizeof(FoundPoly));
	memcpy_s(&GetNavMeshPolyForPoint_Params.PolyUsableCheckParams, sizeof(GetNavMeshPolyForPoint_Params.PolyUsableCheckParams), &PolyUsableCheckParams, sizeof(PolyUsableCheckParams));

	uFnGetNavMeshPolyForPoint->iNative = 0;
	uFnGetNavMeshPolyForPoint->FunctionFlags &= ~0x400;
	UGearboxNavigationHandle::StaticClass()->ProcessEvent(uFnGetNavMeshPolyForPoint, &GetNavMeshPolyForPoint_Params, nullptr);
	uFnGetNavMeshPolyForPoint->FunctionFlags |= 0x400;
	uFnGetNavMeshPolyForPoint->iNative = 34138;

	memcpy_s(&FoundPoly, sizeof(FoundPoly), &GetNavMeshPolyForPoint_Params.FoundPoly, sizeof(GetNavMeshPolyForPoint_Params.FoundPoly));
	memcpy_s(&PolyUsableCheckParams, sizeof(PolyUsableCheckParams), &GetNavMeshPolyForPoint_Params.PolyUsableCheckParams, sizeof(GetNavMeshPolyForPoint_Params.PolyUsableCheckParams));

	return GetNavMeshPolyForPoint_Params.ReturnValue;
};

// Function GearboxFramework.GearboxNavigationHandle.GetPawnLocationOnNavMesh
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34171])
// Parameter Info:
// struct FVector                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FVector UGearboxNavigationHandle::GetPawnLocationOnNavMesh()
{
	static UFunction* uFnGetPawnLocationOnNavMesh = nullptr;

	if (!uFnGetPawnLocationOnNavMesh)
	{
		uFnGetPawnLocationOnNavMesh = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.GetPawnLocationOnNavMesh");
	}

	UGearboxNavigationHandle_execGetPawnLocationOnNavMesh_Params GetPawnLocationOnNavMesh_Params;
	memset(&GetPawnLocationOnNavMesh_Params, 0, sizeof(GetPawnLocationOnNavMesh_Params));

	uFnGetPawnLocationOnNavMesh->iNative = 0;
	uFnGetPawnLocationOnNavMesh->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetPawnLocationOnNavMesh, &GetPawnLocationOnNavMesh_Params, nullptr);
	uFnGetPawnLocationOnNavMesh->FunctionFlags |= 0x400;
	uFnGetPawnLocationOnNavMesh->iNative = 34171;

	return GetPawnLocationOnNavMesh_Params.ReturnValue;
};

// Function GearboxFramework.GearboxNavigationHandle.InFinalPoly
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34525])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FVector&          TestLoc                        (CPF_Parm)

bool UGearboxNavigationHandle::InFinalPoly(const struct FVector& TestLoc)
{
	static UFunction* uFnInFinalPoly = nullptr;

	if (!uFnInFinalPoly)
	{
		uFnInFinalPoly = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.InFinalPoly");
	}

	UGearboxNavigationHandle_execInFinalPoly_Params InFinalPoly_Params;
	memset(&InFinalPoly_Params, 0, sizeof(InFinalPoly_Params));
	memcpy_s(&InFinalPoly_Params.TestLoc, sizeof(InFinalPoly_Params.TestLoc), &TestLoc, sizeof(TestLoc));

	uFnInFinalPoly->iNative = 0;
	uFnInFinalPoly->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInFinalPoly, &InFinalPoly_Params, nullptr);
	uFnInFinalPoly->FunctionFlags |= 0x400;
	uFnInFinalPoly->iNative = 34525;

	return InFinalPoly_Params.ReturnValue;
};

// Function GearboxFramework.GearboxNavigationHandle.PopulatePathfindingParamCache
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[27567])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGearboxNavigationHandle::PopulatePathfindingParamCache()
{
	static UFunction* uFnPopulatePathfindingParamCache = nullptr;

	if (!uFnPopulatePathfindingParamCache)
	{
		uFnPopulatePathfindingParamCache = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.PopulatePathfindingParamCache");
	}

	UGearboxNavigationHandle_execPopulatePathfindingParamCache_Params PopulatePathfindingParamCache_Params;
	memset(&PopulatePathfindingParamCache_Params, 0, sizeof(PopulatePathfindingParamCache_Params));

	uFnPopulatePathfindingParamCache->iNative = 0;
	uFnPopulatePathfindingParamCache->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPopulatePathfindingParamCache, &PopulatePathfindingParamCache_Params, nullptr);
	uFnPopulatePathfindingParamCache->FunctionFlags |= 0x400;
	uFnPopulatePathfindingParamCache->iNative = 27567;

	return PopulatePathfindingParamCache_Params.ReturnValue;
};

// Function GearboxFramework.GearboxNavigationHandle.NeedsRegularWalkingPhysics
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35086])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGearboxNavigationHandle::NeedsRegularWalkingPhysics()
{
	static UFunction* uFnNeedsRegularWalkingPhysics = nullptr;

	if (!uFnNeedsRegularWalkingPhysics)
	{
		uFnNeedsRegularWalkingPhysics = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.NeedsRegularWalkingPhysics");
	}

	UGearboxNavigationHandle_execNeedsRegularWalkingPhysics_Params NeedsRegularWalkingPhysics_Params;
	memset(&NeedsRegularWalkingPhysics_Params, 0, sizeof(NeedsRegularWalkingPhysics_Params));

	uFnNeedsRegularWalkingPhysics->iNative = 0;
	uFnNeedsRegularWalkingPhysics->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnNeedsRegularWalkingPhysics, &NeedsRegularWalkingPhysics_Params, nullptr);
	uFnNeedsRegularWalkingPhysics->FunctionFlags |= 0x400;
	uFnNeedsRegularWalkingPhysics->iNative = 35086;

	return NeedsRegularWalkingPhysics_Params.ReturnValue;
};

// Function GearboxFramework.GearboxNavigationHandle.IsHardAttached
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34664])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGearboxNavigationHandle::IsHardAttached()
{
	static UFunction* uFnIsHardAttached = nullptr;

	if (!uFnIsHardAttached)
	{
		uFnIsHardAttached = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.IsHardAttached");
	}

	UGearboxNavigationHandle_execIsHardAttached_Params IsHardAttached_Params;
	memset(&IsHardAttached_Params, 0, sizeof(IsHardAttached_Params));

	uFnIsHardAttached->iNative = 0;
	uFnIsHardAttached->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsHardAttached, &IsHardAttached_Params, nullptr);
	uFnIsHardAttached->FunctionFlags |= 0x400;
	uFnIsHardAttached->iNative = 34664;

	return IsHardAttached_Params.ReturnValue;
};

// Function GearboxFramework.GearboxNavigationHandle.FixByLerping
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[33842])
// Parameter Info:

void UGearboxNavigationHandle::FixByLerping()
{
	static UFunction* uFnFixByLerping = nullptr;

	if (!uFnFixByLerping)
	{
		uFnFixByLerping = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.FixByLerping");
	}

	UGearboxNavigationHandle_execFixByLerping_Params FixByLerping_Params;
	memset(&FixByLerping_Params, 0, sizeof(FixByLerping_Params));

	uFnFixByLerping->iNative = 0;
	uFnFixByLerping->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnFixByLerping, &FixByLerping_Params, nullptr);
	uFnFixByLerping->FunctionFlags |= 0x400;
	uFnFixByLerping->iNative = 33842;
};

// Function GearboxFramework.GearboxNavigationHandle.SetFixPosition
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35901])
// Parameter Info:

void UGearboxNavigationHandle::SetFixPosition()
{
	static UFunction* uFnSetFixPosition = nullptr;

	if (!uFnSetFixPosition)
	{
		uFnSetFixPosition = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.SetFixPosition");
	}

	UGearboxNavigationHandle_execSetFixPosition_Params SetFixPosition_Params;
	memset(&SetFixPosition_Params, 0, sizeof(SetFixPosition_Params));

	uFnSetFixPosition->iNative = 0;
	uFnSetFixPosition->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetFixPosition, &SetFixPosition_Params, nullptr);
	uFnSetFixPosition->FunctionFlags |= 0x400;
	uFnSetFixPosition->iNative = 35901;
};

// Function GearboxFramework.GearboxNavigationHandle.TryToFixPathing
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36579])
// Parameter Info:

void UGearboxNavigationHandle::TryToFixPathing()
{
	static UFunction* uFnTryToFixPathing = nullptr;

	if (!uFnTryToFixPathing)
	{
		uFnTryToFixPathing = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.TryToFixPathing");
	}

	UGearboxNavigationHandle_execTryToFixPathing_Params TryToFixPathing_Params;
	memset(&TryToFixPathing_Params, 0, sizeof(TryToFixPathing_Params));

	uFnTryToFixPathing->iNative = 0;
	uFnTryToFixPathing->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnTryToFixPathing, &TryToFixPathing_Params, nullptr);
	uFnTryToFixPathing->FunctionFlags |= 0x400;
	uFnTryToFixPathing->iNative = 36579;
};

// Function GearboxFramework.GearboxNavigationHandle.CanFixPathing
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32671])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGearboxNavigationHandle::CanFixPathing()
{
	static UFunction* uFnCanFixPathing = nullptr;

	if (!uFnCanFixPathing)
	{
		uFnCanFixPathing = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.CanFixPathing");
	}

	UGearboxNavigationHandle_execCanFixPathing_Params CanFixPathing_Params;
	memset(&CanFixPathing_Params, 0, sizeof(CanFixPathing_Params));

	uFnCanFixPathing->iNative = 0;
	uFnCanFixPathing->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCanFixPathing, &CanFixPathing_Params, nullptr);
	uFnCanFixPathing->FunctionFlags |= 0x400;
	uFnCanFixPathing->iNative = 32671;

	return CanFixPathing_Params.ReturnValue;
};

// Function GearboxFramework.GearboxNavigationHandle.SetPhysicsJumpDefinition
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35921])
// Parameter Info:
// class UPhysicsJumpDefinition*  NewDef                         (CPF_Parm)

void UGearboxNavigationHandle::SetPhysicsJumpDefinition(class UPhysicsJumpDefinition* NewDef)
{
	static UFunction* uFnSetPhysicsJumpDefinition = nullptr;

	if (!uFnSetPhysicsJumpDefinition)
	{
		uFnSetPhysicsJumpDefinition = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.SetPhysicsJumpDefinition");
	}

	UGearboxNavigationHandle_execSetPhysicsJumpDefinition_Params SetPhysicsJumpDefinition_Params;
	memset(&SetPhysicsJumpDefinition_Params, 0, sizeof(SetPhysicsJumpDefinition_Params));
	memcpy_s(&SetPhysicsJumpDefinition_Params.NewDef, sizeof(SetPhysicsJumpDefinition_Params.NewDef), &NewDef, sizeof(NewDef));

	uFnSetPhysicsJumpDefinition->iNative = 0;
	uFnSetPhysicsJumpDefinition->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetPhysicsJumpDefinition, &SetPhysicsJumpDefinition_Params, nullptr);
	uFnSetPhysicsJumpDefinition->FunctionFlags |= 0x400;
	uFnSetPhysicsJumpDefinition->iNative = 35921;
};

// Function GearboxFramework.GearboxNavigationHandle.GetPhysicsJumpDefinition
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34175])
// Parameter Info:
// class UPhysicsJumpDefinition*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UPhysicsJumpDefinition* UGearboxNavigationHandle::GetPhysicsJumpDefinition()
{
	static UFunction* uFnGetPhysicsJumpDefinition = nullptr;

	if (!uFnGetPhysicsJumpDefinition)
	{
		uFnGetPhysicsJumpDefinition = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.GetPhysicsJumpDefinition");
	}

	UGearboxNavigationHandle_execGetPhysicsJumpDefinition_Params GetPhysicsJumpDefinition_Params;
	memset(&GetPhysicsJumpDefinition_Params, 0, sizeof(GetPhysicsJumpDefinition_Params));

	uFnGetPhysicsJumpDefinition->iNative = 0;
	uFnGetPhysicsJumpDefinition->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetPhysicsJumpDefinition, &GetPhysicsJumpDefinition_Params, nullptr);
	uFnGetPhysicsJumpDefinition->FunctionFlags |= 0x400;
	uFnGetPhysicsJumpDefinition->iNative = 34175;

	return GetPhysicsJumpDefinition_Params.ReturnValue;
};

// Function GearboxFramework.GearboxNavigationHandle.SetSpawnPointDefinition
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35933])
// Parameter Info:
// class USpawnPointDefinition*   NewDef                         (CPF_Parm)

void UGearboxNavigationHandle::SetSpawnPointDefinition(class USpawnPointDefinition* NewDef)
{
	static UFunction* uFnSetSpawnPointDefinition = nullptr;

	if (!uFnSetSpawnPointDefinition)
	{
		uFnSetSpawnPointDefinition = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.SetSpawnPointDefinition");
	}

	UGearboxNavigationHandle_execSetSpawnPointDefinition_Params SetSpawnPointDefinition_Params;
	memset(&SetSpawnPointDefinition_Params, 0, sizeof(SetSpawnPointDefinition_Params));
	memcpy_s(&SetSpawnPointDefinition_Params.NewDef, sizeof(SetSpawnPointDefinition_Params.NewDef), &NewDef, sizeof(NewDef));

	uFnSetSpawnPointDefinition->iNative = 0;
	uFnSetSpawnPointDefinition->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetSpawnPointDefinition, &SetSpawnPointDefinition_Params, nullptr);
	uFnSetSpawnPointDefinition->FunctionFlags |= 0x400;
	uFnSetSpawnPointDefinition->iNative = 35933;
};

// Function GearboxFramework.GearboxNavigationHandle.GetSpawnPointDefinition
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34221])
// Parameter Info:
// class USpawnPointDefinition*   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class USpawnPointDefinition* UGearboxNavigationHandle::GetSpawnPointDefinition()
{
	static UFunction* uFnGetSpawnPointDefinition = nullptr;

	if (!uFnGetSpawnPointDefinition)
	{
		uFnGetSpawnPointDefinition = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.GetSpawnPointDefinition");
	}

	UGearboxNavigationHandle_execGetSpawnPointDefinition_Params GetSpawnPointDefinition_Params;
	memset(&GetSpawnPointDefinition_Params, 0, sizeof(GetSpawnPointDefinition_Params));

	uFnGetSpawnPointDefinition->iNative = 0;
	uFnGetSpawnPointDefinition->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetSpawnPointDefinition, &GetSpawnPointDefinition_Params, nullptr);
	uFnGetSpawnPointDefinition->FunctionFlags |= 0x400;
	uFnGetSpawnPointDefinition->iNative = 34221;

	return GetSpawnPointDefinition_Params.ReturnValue;
};

// Function GearboxFramework.GearboxNavigationHandle.SetNavAnimDefinition
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35909])
// Parameter Info:
// class UNavAnimDefinition*      NewDef                         (CPF_Parm)

void UGearboxNavigationHandle::SetNavAnimDefinition(class UNavAnimDefinition* NewDef)
{
	static UFunction* uFnSetNavAnimDefinition = nullptr;

	if (!uFnSetNavAnimDefinition)
	{
		uFnSetNavAnimDefinition = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.SetNavAnimDefinition");
	}

	UGearboxNavigationHandle_execSetNavAnimDefinition_Params SetNavAnimDefinition_Params;
	memset(&SetNavAnimDefinition_Params, 0, sizeof(SetNavAnimDefinition_Params));
	memcpy_s(&SetNavAnimDefinition_Params.NewDef, sizeof(SetNavAnimDefinition_Params.NewDef), &NewDef, sizeof(NewDef));

	uFnSetNavAnimDefinition->iNative = 0;
	uFnSetNavAnimDefinition->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetNavAnimDefinition, &SetNavAnimDefinition_Params, nullptr);
	uFnSetNavAnimDefinition->FunctionFlags |= 0x400;
	uFnSetNavAnimDefinition->iNative = 35909;
};

// Function GearboxFramework.GearboxNavigationHandle.GetNavAnimDefinition
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34136])
// Parameter Info:
// class UNavAnimDefinition*      ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UNavAnimDefinition* UGearboxNavigationHandle::GetNavAnimDefinition()
{
	static UFunction* uFnGetNavAnimDefinition = nullptr;

	if (!uFnGetNavAnimDefinition)
	{
		uFnGetNavAnimDefinition = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.GetNavAnimDefinition");
	}

	UGearboxNavigationHandle_execGetNavAnimDefinition_Params GetNavAnimDefinition_Params;
	memset(&GetNavAnimDefinition_Params, 0, sizeof(GetNavAnimDefinition_Params));

	uFnGetNavAnimDefinition->iNative = 0;
	uFnGetNavAnimDefinition->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetNavAnimDefinition, &GetNavAnimDefinition_Params, nullptr);
	uFnGetNavAnimDefinition->FunctionFlags |= 0x400;
	uFnGetNavAnimDefinition->iNative = 34136;

	return GetNavAnimDefinition_Params.ReturnValue;
};

// Function GearboxFramework.GearboxNavigationHandle.SetPerchDefinition
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35919])
// Parameter Info:
// class UPerchDefinition*        NewDef                         (CPF_Parm)

void UGearboxNavigationHandle::SetPerchDefinition(class UPerchDefinition* NewDef)
{
	static UFunction* uFnSetPerchDefinition = nullptr;

	if (!uFnSetPerchDefinition)
	{
		uFnSetPerchDefinition = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.SetPerchDefinition");
	}

	UGearboxNavigationHandle_execSetPerchDefinition_Params SetPerchDefinition_Params;
	memset(&SetPerchDefinition_Params, 0, sizeof(SetPerchDefinition_Params));
	memcpy_s(&SetPerchDefinition_Params.NewDef, sizeof(SetPerchDefinition_Params.NewDef), &NewDef, sizeof(NewDef));

	uFnSetPerchDefinition->iNative = 0;
	uFnSetPerchDefinition->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetPerchDefinition, &SetPerchDefinition_Params, nullptr);
	uFnSetPerchDefinition->FunctionFlags |= 0x400;
	uFnSetPerchDefinition->iNative = 35919;
};

// Function GearboxFramework.GearboxNavigationHandle.GetPerchDefinition
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34173])
// Parameter Info:
// class UPerchDefinition*        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UPerchDefinition* UGearboxNavigationHandle::GetPerchDefinition()
{
	static UFunction* uFnGetPerchDefinition = nullptr;

	if (!uFnGetPerchDefinition)
	{
		uFnGetPerchDefinition = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.GetPerchDefinition");
	}

	UGearboxNavigationHandle_execGetPerchDefinition_Params GetPerchDefinition_Params;
	memset(&GetPerchDefinition_Params, 0, sizeof(GetPerchDefinition_Params));

	uFnGetPerchDefinition->iNative = 0;
	uFnGetPerchDefinition->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetPerchDefinition, &GetPerchDefinition_Params, nullptr);
	uFnGetPerchDefinition->FunctionFlags |= 0x400;
	uFnGetPerchDefinition->iNative = 34173;

	return GetPerchDefinition_Params.ReturnValue;
};

// Function GearboxFramework.GearboxNavigationHandle.UpdateAnchor
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[36608])
// Parameter Info:
// bool                           bCanDoFullSearch               (CPF_OptionalParm | CPF_Parm)

void UGearboxNavigationHandle::UpdateAnchor(bool bCanDoFullSearch)
{
	static UFunction* uFnUpdateAnchor = nullptr;

	if (!uFnUpdateAnchor)
	{
		uFnUpdateAnchor = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.UpdateAnchor");
	}

	UGearboxNavigationHandle_execUpdateAnchor_Params UpdateAnchor_Params;
	memset(&UpdateAnchor_Params, 0, sizeof(UpdateAnchor_Params));
	UpdateAnchor_Params.bCanDoFullSearch = bCanDoFullSearch;

	uFnUpdateAnchor->iNative = 0;
	uFnUpdateAnchor->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnUpdateAnchor, &UpdateAnchor_Params, nullptr);
	uFnUpdateAnchor->FunctionFlags |= 0x400;
	uFnUpdateAnchor->iNative = 36608;
};

// Function GearboxFramework.GearboxNavigationHandle.ClearAnchor
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32746])
// Parameter Info:

void UGearboxNavigationHandle::ClearAnchor()
{
	static UFunction* uFnClearAnchor = nullptr;

	if (!uFnClearAnchor)
	{
		uFnClearAnchor = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.ClearAnchor");
	}

	UGearboxNavigationHandle_execClearAnchor_Params ClearAnchor_Params;
	memset(&ClearAnchor_Params, 0, sizeof(ClearAnchor_Params));

	uFnClearAnchor->iNative = 0;
	uFnClearAnchor->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnClearAnchor, &ClearAnchor_Params, nullptr);
	uFnClearAnchor->FunctionFlags |= 0x400;
	uFnClearAnchor->iNative = 32746;
};

// Function GearboxFramework.GearboxNavigationHandle.GetPathCost
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[34167])
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// bool                           bReset                         (CPF_OptionalParm | CPF_Parm)

int32_t UGearboxNavigationHandle::GetPathCost(bool bReset)
{
	static UFunction* uFnGetPathCost = nullptr;

	if (!uFnGetPathCost)
	{
		uFnGetPathCost = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.GetPathCost");
	}

	UGearboxNavigationHandle_execGetPathCost_Params GetPathCost_Params;
	memset(&GetPathCost_Params, 0, sizeof(GetPathCost_Params));
	GetPathCost_Params.bReset = bReset;

	uFnGetPathCost->iNative = 0;
	uFnGetPathCost->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetPathCost, &GetPathCost_Params, nullptr);
	uFnGetPathCost->FunctionFlags |= 0x400;
	uFnGetPathCost->iNative = 34167;

	return GetPathCost_Params.ReturnValue;
};

// Function GearboxFramework.GearboxNavigationHandle.InsertCurrentLocationIntoPath
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34571])
// Parameter Info:
// struct FGBXNavMeshPath         Path                           (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UGearboxNavigationHandle::InsertCurrentLocationIntoPath(struct FGBXNavMeshPath& Path)
{
	static UFunction* uFnInsertCurrentLocationIntoPath = nullptr;

	if (!uFnInsertCurrentLocationIntoPath)
	{
		uFnInsertCurrentLocationIntoPath = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.InsertCurrentLocationIntoPath");
	}

	UGearboxNavigationHandle_execInsertCurrentLocationIntoPath_Params InsertCurrentLocationIntoPath_Params;
	memset(&InsertCurrentLocationIntoPath_Params, 0, sizeof(InsertCurrentLocationIntoPath_Params));
	memcpy_s(&InsertCurrentLocationIntoPath_Params.Path, sizeof(InsertCurrentLocationIntoPath_Params.Path), &Path, sizeof(Path));

	uFnInsertCurrentLocationIntoPath->iNative = 0;
	uFnInsertCurrentLocationIntoPath->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInsertCurrentLocationIntoPath, &InsertCurrentLocationIntoPath_Params, nullptr);
	uFnInsertCurrentLocationIntoPath->FunctionFlags |= 0x400;
	uFnInsertCurrentLocationIntoPath->iNative = 34571;

	memcpy_s(&Path, sizeof(Path), &InsertCurrentLocationIntoPath_Params.Path, sizeof(InsertCurrentLocationIntoPath_Params.Path));
};

// Function GearboxFramework.GearboxNavigationHandle.CreateConstrainedPath
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[32911])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FPathRequestData        Request                        (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UGearboxNavigationHandle::CreateConstrainedPath(struct FPathRequestData& Request)
{
	static UFunction* uFnCreateConstrainedPath = nullptr;

	if (!uFnCreateConstrainedPath)
	{
		uFnCreateConstrainedPath = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.CreateConstrainedPath");
	}

	UGearboxNavigationHandle_execCreateConstrainedPath_Params CreateConstrainedPath_Params;
	memset(&CreateConstrainedPath_Params, 0, sizeof(CreateConstrainedPath_Params));
	memcpy_s(&CreateConstrainedPath_Params.Request, sizeof(CreateConstrainedPath_Params.Request), &Request, sizeof(Request));

	uFnCreateConstrainedPath->iNative = 0;
	uFnCreateConstrainedPath->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCreateConstrainedPath, &CreateConstrainedPath_Params, nullptr);
	uFnCreateConstrainedPath->FunctionFlags |= 0x400;
	uFnCreateConstrainedPath->iNative = 32911;

	memcpy_s(&Request, sizeof(Request), &CreateConstrainedPath_Params.Request, sizeof(CreateConstrainedPath_Params.Request));

	return CreateConstrainedPath_Params.ReturnValue;
};

// Function GearboxFramework.GearboxNavigationHandle.CreatePathToLocation
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[32915])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FPathRequestData        Request                        (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UGearboxNavigationHandle::CreatePathToLocation(struct FPathRequestData& Request)
{
	static UFunction* uFnCreatePathToLocation = nullptr;

	if (!uFnCreatePathToLocation)
	{
		uFnCreatePathToLocation = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.CreatePathToLocation");
	}

	UGearboxNavigationHandle_execCreatePathToLocation_Params CreatePathToLocation_Params;
	memset(&CreatePathToLocation_Params, 0, sizeof(CreatePathToLocation_Params));
	memcpy_s(&CreatePathToLocation_Params.Request, sizeof(CreatePathToLocation_Params.Request), &Request, sizeof(Request));

	uFnCreatePathToLocation->iNative = 0;
	uFnCreatePathToLocation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCreatePathToLocation, &CreatePathToLocation_Params, nullptr);
	uFnCreatePathToLocation->FunctionFlags |= 0x400;
	uFnCreatePathToLocation->iNative = 32915;

	memcpy_s(&Request, sizeof(Request), &CreatePathToLocation_Params.Request, sizeof(CreatePathToLocation_Params.Request));

	return CreatePathToLocation_Params.ReturnValue;
};

// Function GearboxFramework.GearboxNavigationHandle.CreateDirectPath
// [0x00424401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[32912])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// EPathType                      Type                           (CPF_OptionalParm | CPF_Parm)
// struct FPathRequestData        Request                        (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UGearboxNavigationHandle::CreateDirectPath(EPathType Type, struct FPathRequestData& Request)
{
	static UFunction* uFnCreateDirectPath = nullptr;

	if (!uFnCreateDirectPath)
	{
		uFnCreateDirectPath = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.CreateDirectPath");
	}

	UGearboxNavigationHandle_execCreateDirectPath_Params CreateDirectPath_Params;
	memset(&CreateDirectPath_Params, 0, sizeof(CreateDirectPath_Params));
	memcpy_s(&CreateDirectPath_Params.Type, sizeof(CreateDirectPath_Params.Type), &Type, sizeof(Type));
	memcpy_s(&CreateDirectPath_Params.Request, sizeof(CreateDirectPath_Params.Request), &Request, sizeof(Request));

	uFnCreateDirectPath->iNative = 0;
	uFnCreateDirectPath->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCreateDirectPath, &CreateDirectPath_Params, nullptr);
	uFnCreateDirectPath->FunctionFlags |= 0x400;
	uFnCreateDirectPath->iNative = 32912;

	memcpy_s(&Request, sizeof(Request), &CreateDirectPath_Params.Request, sizeof(CreateDirectPath_Params.Request));

	return CreateDirectPath_Params.ReturnValue;
};

// Function GearboxFramework.GearboxNavigationHandle.CanPathFind
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32678])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGearboxNavigationHandle::CanPathFind()
{
	static UFunction* uFnCanPathFind = nullptr;

	if (!uFnCanPathFind)
	{
		uFnCanPathFind = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.CanPathFind");
	}

	UGearboxNavigationHandle_execCanPathFind_Params CanPathFind_Params;
	memset(&CanPathFind_Params, 0, sizeof(CanPathFind_Params));

	uFnCanPathFind->iNative = 0;
	uFnCanPathFind->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCanPathFind, &CanPathFind_Params, nullptr);
	uFnCanPathFind->FunctionFlags |= 0x400;
	uFnCanPathFind->iNative = 32678;

	return CanPathFind_Params.ReturnValue;
};

// Function GearboxFramework.GearboxNavigationHandle.SetPawnPhysics
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35918])
// Parameter Info:

void UGearboxNavigationHandle::SetPawnPhysics()
{
	static UFunction* uFnSetPawnPhysics = nullptr;

	if (!uFnSetPawnPhysics)
	{
		uFnSetPawnPhysics = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.SetPawnPhysics");
	}

	UGearboxNavigationHandle_execSetPawnPhysics_Params SetPawnPhysics_Params;
	memset(&SetPawnPhysics_Params, 0, sizeof(SetPawnPhysics_Params));

	uFnSetPawnPhysics->iNative = 0;
	uFnSetPawnPhysics->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetPawnPhysics, &SetPawnPhysics_Params, nullptr);
	uFnSetPawnPhysics->FunctionFlags |= 0x400;
	uFnSetPawnPhysics->iNative = 35918;
};

// Function GearboxFramework.GearboxNavigationHandle.ClearSpecialMovement
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32761])
// Parameter Info:

void UGearboxNavigationHandle::ClearSpecialMovement()
{
	static UFunction* uFnClearSpecialMovement = nullptr;

	if (!uFnClearSpecialMovement)
	{
		uFnClearSpecialMovement = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.ClearSpecialMovement");
	}

	UGearboxNavigationHandle_execClearSpecialMovement_Params ClearSpecialMovement_Params;
	memset(&ClearSpecialMovement_Params, 0, sizeof(ClearSpecialMovement_Params));

	uFnClearSpecialMovement->iNative = 0;
	uFnClearSpecialMovement->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnClearSpecialMovement, &ClearSpecialMovement_Params, nullptr);
	uFnClearSpecialMovement->FunctionFlags |= 0x400;
	uFnClearSpecialMovement->iNative = 32761;
};

// Function GearboxFramework.GearboxNavigationHandle.CanMoveTo
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[32676])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FVector                 GoalLoc                        (CPF_Const | CPF_Parm | CPF_OutParm)

bool UGearboxNavigationHandle::CanMoveTo(struct FVector& GoalLoc)
{
	static UFunction* uFnCanMoveTo = nullptr;

	if (!uFnCanMoveTo)
	{
		uFnCanMoveTo = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.CanMoveTo");
	}

	UGearboxNavigationHandle_execCanMoveTo_Params CanMoveTo_Params;
	memset(&CanMoveTo_Params, 0, sizeof(CanMoveTo_Params));
	memcpy_s(&CanMoveTo_Params.GoalLoc, sizeof(CanMoveTo_Params.GoalLoc), &GoalLoc, sizeof(GoalLoc));

	uFnCanMoveTo->iNative = 0;
	uFnCanMoveTo->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCanMoveTo, &CanMoveTo_Params, nullptr);
	uFnCanMoveTo->FunctionFlags |= 0x400;
	uFnCanMoveTo->iNative = 32676;

	memcpy_s(&GoalLoc, sizeof(GoalLoc), &CanMoveTo_Params.GoalLoc, sizeof(CanMoveTo_Params.GoalLoc));

	return CanMoveTo_Params.ReturnValue;
};

// Function GearboxFramework.GearboxNavigationHandle.CanAvoidObstacles
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32668])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGearboxNavigationHandle::CanAvoidObstacles()
{
	static UFunction* uFnCanAvoidObstacles = nullptr;

	if (!uFnCanAvoidObstacles)
	{
		uFnCanAvoidObstacles = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.CanAvoidObstacles");
	}

	UGearboxNavigationHandle_execCanAvoidObstacles_Params CanAvoidObstacles_Params;
	memset(&CanAvoidObstacles_Params, 0, sizeof(CanAvoidObstacles_Params));

	uFnCanAvoidObstacles->iNative = 0;
	uFnCanAvoidObstacles->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCanAvoidObstacles, &CanAvoidObstacles_Params, nullptr);
	uFnCanAvoidObstacles->FunctionFlags |= 0x400;
	uFnCanAvoidObstacles->iNative = 32668;

	return CanAvoidObstacles_Params.ReturnValue;
};

// Function GearboxFramework.GearboxNavigationHandle.AbortPath
// [0x00024400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[31583])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// bool                           bAllowDelayedAbort             (CPF_OptionalParm | CPF_Parm)

bool UGearboxNavigationHandle::AbortPath(bool bAllowDelayedAbort)
{
	static UFunction* uFnAbortPath = nullptr;

	if (!uFnAbortPath)
	{
		uFnAbortPath = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.AbortPath");
	}

	UGearboxNavigationHandle_execAbortPath_Params AbortPath_Params;
	memset(&AbortPath_Params, 0, sizeof(AbortPath_Params));
	AbortPath_Params.bAllowDelayedAbort = bAllowDelayedAbort;

	uFnAbortPath->iNative = 0;
	uFnAbortPath->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnAbortPath, &AbortPath_Params, nullptr);
	uFnAbortPath->FunctionFlags |= 0x400;
	uFnAbortPath->iNative = 31583;

	return AbortPath_Params.ReturnValue;
};

// Function GearboxFramework.GearboxNavigationHandle.PathIsValid
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35368])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FPathFindData           Data                           (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UGearboxNavigationHandle::PathIsValid(struct FPathFindData& Data)
{
	static UFunction* uFnPathIsValid = nullptr;

	if (!uFnPathIsValid)
	{
		uFnPathIsValid = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.PathIsValid");
	}

	UGearboxNavigationHandle_execPathIsValid_Params PathIsValid_Params;
	memset(&PathIsValid_Params, 0, sizeof(PathIsValid_Params));
	memcpy_s(&PathIsValid_Params.Data, sizeof(PathIsValid_Params.Data), &Data, sizeof(Data));

	uFnPathIsValid->iNative = 0;
	uFnPathIsValid->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPathIsValid, &PathIsValid_Params, nullptr);
	uFnPathIsValid->FunctionFlags |= 0x400;
	uFnPathIsValid->iNative = 35368;

	memcpy_s(&Data, sizeof(Data), &PathIsValid_Params.Data, sizeof(PathIsValid_Params.Data));

	return PathIsValid_Params.ReturnValue;
};

// Function GearboxFramework.GearboxNavigationHandle.IsFollowingActionPath
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34660])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UActionSequencePawn*     Action                         (CPF_Parm)

bool UGearboxNavigationHandle::IsFollowingActionPath(class UActionSequencePawn* Action)
{
	static UFunction* uFnIsFollowingActionPath = nullptr;

	if (!uFnIsFollowingActionPath)
	{
		uFnIsFollowingActionPath = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.IsFollowingActionPath");
	}

	UGearboxNavigationHandle_execIsFollowingActionPath_Params IsFollowingActionPath_Params;
	memset(&IsFollowingActionPath_Params, 0, sizeof(IsFollowingActionPath_Params));
	memcpy_s(&IsFollowingActionPath_Params.Action, sizeof(IsFollowingActionPath_Params.Action), &Action, sizeof(Action));

	uFnIsFollowingActionPath->iNative = 0;
	uFnIsFollowingActionPath->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsFollowingActionPath, &IsFollowingActionPath_Params, nullptr);
	uFnIsFollowingActionPath->FunctionFlags |= 0x400;
	uFnIsFollowingActionPath->iNative = 34660;

	return IsFollowingActionPath_Params.ReturnValue;
};

// Function GearboxFramework.GearboxNavigationHandle.SetPath
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35914])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FPathFindData           Data                           (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UGearboxNavigationHandle::SetPath(struct FPathFindData& Data)
{
	static UFunction* uFnSetPath = nullptr;

	if (!uFnSetPath)
	{
		uFnSetPath = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.SetPath");
	}

	UGearboxNavigationHandle_execSetPath_Params SetPath_Params;
	memset(&SetPath_Params, 0, sizeof(SetPath_Params));
	memcpy_s(&SetPath_Params.Data, sizeof(SetPath_Params.Data), &Data, sizeof(Data));

	uFnSetPath->iNative = 0;
	uFnSetPath->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetPath, &SetPath_Params, nullptr);
	uFnSetPath->FunctionFlags |= 0x400;
	uFnSetPath->iNative = 35914;

	memcpy_s(&Data, sizeof(Data), &SetPath_Params.Data, sizeof(SetPath_Params.Data));

	return SetPath_Params.ReturnValue;
};

// Function GearboxFramework.GearboxNavigationHandle.IsFollowingPath
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34661])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGearboxNavigationHandle::IsFollowingPath()
{
	static UFunction* uFnIsFollowingPath = nullptr;

	if (!uFnIsFollowingPath)
	{
		uFnIsFollowingPath = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.IsFollowingPath");
	}

	UGearboxNavigationHandle_execIsFollowingPath_Params IsFollowingPath_Params;
	memset(&IsFollowingPath_Params, 0, sizeof(IsFollowingPath_Params));

	uFnIsFollowingPath->iNative = 0;
	uFnIsFollowingPath->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsFollowingPath, &IsFollowingPath_Params, nullptr);
	uFnIsFollowingPath->FunctionFlags |= 0x400;
	uFnIsFollowingPath->iNative = 34661;

	return IsFollowingPath_Params.ReturnValue;
};

// Function GearboxFramework.GearboxNavigationHandle.CanMoveToGoal
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32677])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGearboxNavigationHandle::CanMoveToGoal()
{
	static UFunction* uFnCanMoveToGoal = nullptr;

	if (!uFnCanMoveToGoal)
	{
		uFnCanMoveToGoal = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.CanMoveToGoal");
	}

	UGearboxNavigationHandle_execCanMoveToGoal_Params CanMoveToGoal_Params;
	memset(&CanMoveToGoal_Params, 0, sizeof(CanMoveToGoal_Params));

	uFnCanMoveToGoal->iNative = 0;
	uFnCanMoveToGoal->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCanMoveToGoal, &CanMoveToGoal_Params, nullptr);
	uFnCanMoveToGoal->FunctionFlags |= 0x400;
	uFnCanMoveToGoal->iNative = 32677;

	return CanMoveToGoal_Params.ReturnValue;
};

// Function GearboxFramework.GearboxNavigationHandle.CanFollowPath
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32672])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGearboxNavigationHandle::CanFollowPath()
{
	static UFunction* uFnCanFollowPath = nullptr;

	if (!uFnCanFollowPath)
	{
		uFnCanFollowPath = UFunction::FindFunction("Function GearboxFramework.GearboxNavigationHandle.CanFollowPath");
	}

	UGearboxNavigationHandle_execCanFollowPath_Params CanFollowPath_Params;
	memset(&CanFollowPath_Params, 0, sizeof(CanFollowPath_Params));

	uFnCanFollowPath->iNative = 0;
	uFnCanFollowPath->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCanFollowPath, &CanFollowPath_Params, nullptr);
	uFnCanFollowPath->FunctionFlags |= 0x400;
	uFnCanFollowPath->iNative = 32672;

	return CanFollowPath_Params.ReturnValue;
};

// Function GearboxFramework.GearboxPawn.GetFirstPersonMeshComponent
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34099])
// Parameter Info:
// class USkeletalMeshComponent*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline)

class USkeletalMeshComponent* AGearboxPawn::GetFirstPersonMeshComponent()
{
	static UFunction* uFnGetFirstPersonMeshComponent = nullptr;

	if (!uFnGetFirstPersonMeshComponent)
	{
		uFnGetFirstPersonMeshComponent = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.GetFirstPersonMeshComponent");
	}

	AGearboxPawn_execGetFirstPersonMeshComponent_Params GetFirstPersonMeshComponent_Params;
	memset(&GetFirstPersonMeshComponent_Params, 0, sizeof(GetFirstPersonMeshComponent_Params));

	uFnGetFirstPersonMeshComponent->iNative = 0;
	uFnGetFirstPersonMeshComponent->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetFirstPersonMeshComponent, &GetFirstPersonMeshComponent_Params, nullptr);
	uFnGetFirstPersonMeshComponent->FunctionFlags |= 0x400;
	uFnGetFirstPersonMeshComponent->iNative = 34099;

	return GetFirstPersonMeshComponent_Params.ReturnValue;
};

// Function GearboxFramework.GearboxPawn.SetReplicatedCloak
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35925])
// Parameter Info:
// bool                           bInReplicatedCloak             (CPF_Parm)

void AGearboxPawn::SetReplicatedCloak(bool bInReplicatedCloak)
{
	static UFunction* uFnSetReplicatedCloak = nullptr;

	if (!uFnSetReplicatedCloak)
	{
		uFnSetReplicatedCloak = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.SetReplicatedCloak");
	}

	AGearboxPawn_execSetReplicatedCloak_Params SetReplicatedCloak_Params;
	memset(&SetReplicatedCloak_Params, 0, sizeof(SetReplicatedCloak_Params));
	SetReplicatedCloak_Params.bInReplicatedCloak = bInReplicatedCloak;

	uFnSetReplicatedCloak->iNative = 0;
	uFnSetReplicatedCloak->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetReplicatedCloak, &SetReplicatedCloak_Params, nullptr);
	uFnSetReplicatedCloak->FunctionFlags |= 0x400;
	uFnSetReplicatedCloak->iNative = 35925;
};

// Function GearboxFramework.GearboxPawn.SetCloakComponent
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35889])
// Parameter Info:
// class UCloakComponent*         InComponent                    (CPF_Parm | CPF_EditInline)

void AGearboxPawn::SetCloakComponent(class UCloakComponent* InComponent)
{
	static UFunction* uFnSetCloakComponent = nullptr;

	if (!uFnSetCloakComponent)
	{
		uFnSetCloakComponent = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.SetCloakComponent");
	}

	AGearboxPawn_execSetCloakComponent_Params SetCloakComponent_Params;
	memset(&SetCloakComponent_Params, 0, sizeof(SetCloakComponent_Params));
	memcpy_s(&SetCloakComponent_Params.InComponent, sizeof(SetCloakComponent_Params.InComponent), &InComponent, sizeof(InComponent));

	uFnSetCloakComponent->iNative = 0;
	uFnSetCloakComponent->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetCloakComponent, &SetCloakComponent_Params, nullptr);
	uFnSetCloakComponent->FunctionFlags |= 0x400;
	uFnSetCloakComponent->iNative = 35889;
};

// Function GearboxFramework.GearboxPawn.GetCloakComponent
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34060])
// Parameter Info:
// class UCloakComponent*         ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline)

class UCloakComponent* AGearboxPawn::GetCloakComponent()
{
	static UFunction* uFnGetCloakComponent = nullptr;

	if (!uFnGetCloakComponent)
	{
		uFnGetCloakComponent = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.GetCloakComponent");
	}

	AGearboxPawn_execGetCloakComponent_Params GetCloakComponent_Params;
	memset(&GetCloakComponent_Params, 0, sizeof(GetCloakComponent_Params));

	uFnGetCloakComponent->iNative = 0;
	uFnGetCloakComponent->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetCloakComponent, &GetCloakComponent_Params, nullptr);
	uFnGetCloakComponent->FunctionFlags |= 0x400;
	uFnGetCloakComponent->iNative = 34060;

	return GetCloakComponent_Params.ReturnValue;
};

// Function GearboxFramework.GearboxPawn.SetDefaultStance
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[35893])
// Parameter Info:
// const struct FName&            StanceName                     (CPF_OptionalParm | CPF_Parm)

void AGearboxPawn::SetDefaultStance(const struct FName& StanceName)
{
	static UFunction* uFnSetDefaultStance = nullptr;

	if (!uFnSetDefaultStance)
	{
		uFnSetDefaultStance = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.SetDefaultStance");
	}

	AGearboxPawn_execSetDefaultStance_Params SetDefaultStance_Params;
	memset(&SetDefaultStance_Params, 0, sizeof(SetDefaultStance_Params));
	memcpy_s(&SetDefaultStance_Params.StanceName, sizeof(SetDefaultStance_Params.StanceName), &StanceName, sizeof(StanceName));

	uFnSetDefaultStance->iNative = 0;
	uFnSetDefaultStance->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetDefaultStance, &SetDefaultStance_Params, nullptr);
	uFnSetDefaultStance->FunctionFlags |= 0x400;
	uFnSetDefaultStance->iNative = 35893;
};

// Function GearboxFramework.GearboxPawn.ClearStance
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32762])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// EStanceSystem                  System                         (CPF_Parm)

bool AGearboxPawn::ClearStance(EStanceSystem System)
{
	static UFunction* uFnClearStance = nullptr;

	if (!uFnClearStance)
	{
		uFnClearStance = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.ClearStance");
	}

	AGearboxPawn_execClearStance_Params ClearStance_Params;
	memset(&ClearStance_Params, 0, sizeof(ClearStance_Params));
	memcpy_s(&ClearStance_Params.System, sizeof(ClearStance_Params.System), &System, sizeof(System));

	uFnClearStance->iNative = 0;
	uFnClearStance->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnClearStance, &ClearStance_Params, nullptr);
	uFnClearStance->FunctionFlags |= 0x400;
	uFnClearStance->iNative = 32762;

	return ClearStance_Params.ReturnValue;
};

// Function GearboxFramework.GearboxPawn.SetStance
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35934])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// EStanceSystem                  System                         (CPF_Parm)
// class UStanceDefinition*       NewStance                      (CPF_Parm)

bool AGearboxPawn::SetStance(EStanceSystem System, class UStanceDefinition* NewStance)
{
	static UFunction* uFnSetStance = nullptr;

	if (!uFnSetStance)
	{
		uFnSetStance = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.SetStance");
	}

	AGearboxPawn_execSetStance_Params SetStance_Params;
	memset(&SetStance_Params, 0, sizeof(SetStance_Params));
	memcpy_s(&SetStance_Params.System, sizeof(SetStance_Params.System), &System, sizeof(System));
	memcpy_s(&SetStance_Params.NewStance, sizeof(SetStance_Params.NewStance), &NewStance, sizeof(NewStance));

	uFnSetStance->iNative = 0;
	uFnSetStance->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetStance, &SetStance_Params, nullptr);
	uFnSetStance->FunctionFlags |= 0x400;
	uFnSetStance->iNative = 35934;

	return SetStance_Params.ReturnValue;
};

// Function GearboxFramework.GearboxPawn.GetStance
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34225])
// Parameter Info:
// class UStanceDefinition*       ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UStanceDefinition* AGearboxPawn::GetStance()
{
	static UFunction* uFnGetStance = nullptr;

	if (!uFnGetStance)
	{
		uFnGetStance = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.GetStance");
	}

	AGearboxPawn_execGetStance_Params GetStance_Params;
	memset(&GetStance_Params, 0, sizeof(GetStance_Params));

	uFnGetStance->iNative = 0;
	uFnGetStance->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetStance, &GetStance_Params, nullptr);
	uFnGetStance->FunctionFlags |= 0x400;
	uFnGetStance->iNative = 34225;

	return GetStance_Params.ReturnValue;
};

// Function GearboxFramework.GearboxPawn.GetStanceComponent
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34226])
// Parameter Info:
// class UStanceComponent*        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline)

class UStanceComponent* AGearboxPawn::GetStanceComponent()
{
	static UFunction* uFnGetStanceComponent = nullptr;

	if (!uFnGetStanceComponent)
	{
		uFnGetStanceComponent = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.GetStanceComponent");
	}

	AGearboxPawn_execGetStanceComponent_Params GetStanceComponent_Params;
	memset(&GetStanceComponent_Params, 0, sizeof(GetStanceComponent_Params));

	uFnGetStanceComponent->iNative = 0;
	uFnGetStanceComponent->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetStanceComponent, &GetStanceComponent_Params, nullptr);
	uFnGetStanceComponent->FunctionFlags |= 0x400;
	uFnGetStanceComponent->iNative = 34226;

	return GetStanceComponent_Params.ReturnValue;
};

// Function GearboxFramework.GearboxPawn.Landed
// [0x16020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Call | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FVector&          HitNormal                      (CPF_Parm)
// class AActor*                  FloorActor                     (CPF_Parm)

void AGearboxPawn::eventLanded(const struct FVector& HitNormal, class AActor* FloorActor)
{
	static UFunction* uFnLanded = nullptr;

	if (!uFnLanded)
	{
		uFnLanded = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.Landed");
	}

	AGearboxPawn_eventLanded_Params Landed_Params;
	memset(&Landed_Params, 0, sizeof(Landed_Params));
	memcpy_s(&Landed_Params.HitNormal, sizeof(Landed_Params.HitNormal), &HitNormal, sizeof(HitNormal));
	memcpy_s(&Landed_Params.FloorActor, sizeof(Landed_Params.FloorActor), &FloorActor, sizeof(FloorActor));

	this->ProcessEvent(uFnLanded, &Landed_Params, nullptr);
};

// Function GearboxFramework.GearboxPawn.PlayFootStepSound
// [0x00020500] (FUNC_Simulated | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[27477])
// Parameter Info:
// int32_t                        FootDown                       (CPF_Parm)
// bool                           bFirstPerson                   (CPF_Parm)

void AGearboxPawn::PlayFootStepSound(int32_t FootDown, bool bFirstPerson)
{
	static UFunction* uFnPlayFootStepSound = nullptr;

	if (!uFnPlayFootStepSound)
	{
		uFnPlayFootStepSound = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.PlayFootStepSound");
	}

	AGearboxPawn_execPlayFootStepSound_Params PlayFootStepSound_Params;
	memset(&PlayFootStepSound_Params, 0, sizeof(PlayFootStepSound_Params));
	memcpy_s(&PlayFootStepSound_Params.FootDown, sizeof(PlayFootStepSound_Params.FootDown), &FootDown, sizeof(FootDown));
	PlayFootStepSound_Params.bFirstPerson = bFirstPerson;

	uFnPlayFootStepSound->iNative = 0;
	uFnPlayFootStepSound->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPlayFootStepSound, &PlayFootStepSound_Params, nullptr);
	uFnPlayFootStepSound->FunctionFlags |= 0x400;
	uFnPlayFootStepSound->iNative = 27477;
};

// Function GearboxFramework.GearboxPawn.GetStealthAwareness
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34229])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float AGearboxPawn::GetStealthAwareness()
{
	static UFunction* uFnGetStealthAwareness = nullptr;

	if (!uFnGetStealthAwareness)
	{
		uFnGetStealthAwareness = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.GetStealthAwareness");
	}

	AGearboxPawn_execGetStealthAwareness_Params GetStealthAwareness_Params;
	memset(&GetStealthAwareness_Params, 0, sizeof(GetStealthAwareness_Params));

	uFnGetStealthAwareness->iNative = 0;
	uFnGetStealthAwareness->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetStealthAwareness, &GetStealthAwareness_Params, nullptr);
	uFnGetStealthAwareness->FunctionFlags |= 0x400;
	uFnGetStealthAwareness->iNative = 34229;

	return GetStealthAwareness_Params.ReturnValue;
};

// Function GearboxFramework.GearboxPawn.GetSpeedAwareness
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34224])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float AGearboxPawn::GetSpeedAwareness()
{
	static UFunction* uFnGetSpeedAwareness = nullptr;

	if (!uFnGetSpeedAwareness)
	{
		uFnGetSpeedAwareness = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.GetSpeedAwareness");
	}

	AGearboxPawn_execGetSpeedAwareness_Params GetSpeedAwareness_Params;
	memset(&GetSpeedAwareness_Params, 0, sizeof(GetSpeedAwareness_Params));

	uFnGetSpeedAwareness->iNative = 0;
	uFnGetSpeedAwareness->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetSpeedAwareness, &GetSpeedAwareness_Params, nullptr);
	uFnGetSpeedAwareness->FunctionFlags |= 0x400;
	uFnGetSpeedAwareness->iNative = 34224;

	return GetSpeedAwareness_Params.ReturnValue;
};

// Function GearboxFramework.GearboxPawn.GetAudibility
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[23564])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float AGearboxPawn::GetAudibility()
{
	static UFunction* uFnGetAudibility = nullptr;

	if (!uFnGetAudibility)
	{
		uFnGetAudibility = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.GetAudibility");
	}

	AGearboxPawn_execGetAudibility_Params GetAudibility_Params;
	memset(&GetAudibility_Params, 0, sizeof(GetAudibility_Params));

	uFnGetAudibility->iNative = 0;
	uFnGetAudibility->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAudibility, &GetAudibility_Params, nullptr);
	uFnGetAudibility->FunctionFlags |= 0x400;
	uFnGetAudibility->iNative = 23564;

	return GetAudibility_Params.ReturnValue;
};

// Function GearboxFramework.GearboxPawn.GetVisibility
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[24027])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float AGearboxPawn::GetVisibility()
{
	static UFunction* uFnGetVisibility = nullptr;

	if (!uFnGetVisibility)
	{
		uFnGetVisibility = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.GetVisibility");
	}

	AGearboxPawn_execGetVisibility_Params GetVisibility_Params;
	memset(&GetVisibility_Params, 0, sizeof(GetVisibility_Params));

	uFnGetVisibility->iNative = 0;
	uFnGetVisibility->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetVisibility, &GetVisibility_Params, nullptr);
	uFnGetVisibility->FunctionFlags |= 0x400;
	uFnGetVisibility->iNative = 24027;

	return GetVisibility_Params.ReturnValue;
};

// Function GearboxFramework.GearboxPawn.InterpRelativeRotation
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34606])
// Parameter Info:
// const struct FRotator&         NewRelRot                      (CPF_Parm)
// float                          InterpTime                     (CPF_Parm)
// bool                           bLinear                        (CPF_Parm)

void AGearboxPawn::InterpRelativeRotation(const struct FRotator& NewRelRot, float InterpTime, bool bLinear)
{
	static UFunction* uFnInterpRelativeRotation = nullptr;

	if (!uFnInterpRelativeRotation)
	{
		uFnInterpRelativeRotation = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.InterpRelativeRotation");
	}

	AGearboxPawn_execInterpRelativeRotation_Params InterpRelativeRotation_Params;
	memset(&InterpRelativeRotation_Params, 0, sizeof(InterpRelativeRotation_Params));
	memcpy_s(&InterpRelativeRotation_Params.NewRelRot, sizeof(InterpRelativeRotation_Params.NewRelRot), &NewRelRot, sizeof(NewRelRot));
	memcpy_s(&InterpRelativeRotation_Params.InterpTime, sizeof(InterpRelativeRotation_Params.InterpTime), &InterpTime, sizeof(InterpTime));
	InterpRelativeRotation_Params.bLinear = bLinear;

	uFnInterpRelativeRotation->iNative = 0;
	uFnInterpRelativeRotation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInterpRelativeRotation, &InterpRelativeRotation_Params, nullptr);
	uFnInterpRelativeRotation->FunctionFlags |= 0x400;
	uFnInterpRelativeRotation->iNative = 34606;
};

// Function GearboxFramework.GearboxPawn.InterpRelativeLocation
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34605])
// Parameter Info:
// const struct FVector&          NewRelLoc                      (CPF_Parm)
// float                          InterpTime                     (CPF_Parm)
// bool                           bLinear                        (CPF_Parm)

void AGearboxPawn::InterpRelativeLocation(const struct FVector& NewRelLoc, float InterpTime, bool bLinear)
{
	static UFunction* uFnInterpRelativeLocation = nullptr;

	if (!uFnInterpRelativeLocation)
	{
		uFnInterpRelativeLocation = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.InterpRelativeLocation");
	}

	AGearboxPawn_execInterpRelativeLocation_Params InterpRelativeLocation_Params;
	memset(&InterpRelativeLocation_Params, 0, sizeof(InterpRelativeLocation_Params));
	memcpy_s(&InterpRelativeLocation_Params.NewRelLoc, sizeof(InterpRelativeLocation_Params.NewRelLoc), &NewRelLoc, sizeof(NewRelLoc));
	memcpy_s(&InterpRelativeLocation_Params.InterpTime, sizeof(InterpRelativeLocation_Params.InterpTime), &InterpTime, sizeof(InterpTime));
	InterpRelativeLocation_Params.bLinear = bLinear;

	uFnInterpRelativeLocation->iNative = 0;
	uFnInterpRelativeLocation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInterpRelativeLocation, &InterpRelativeLocation_Params, nullptr);
	uFnInterpRelativeLocation->FunctionFlags |= 0x400;
	uFnInterpRelativeLocation->iNative = 34605;
};

// Function GearboxFramework.GearboxPawn.InterpControllerRotation
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34591])
// Parameter Info:
// const struct FRotator&         NewRot                         (CPF_Parm)
// float                          InterpTime                     (CPF_Parm)
// bool                           bLinear                        (CPF_Parm)

void AGearboxPawn::InterpControllerRotation(const struct FRotator& NewRot, float InterpTime, bool bLinear)
{
	static UFunction* uFnInterpControllerRotation = nullptr;

	if (!uFnInterpControllerRotation)
	{
		uFnInterpControllerRotation = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.InterpControllerRotation");
	}

	AGearboxPawn_execInterpControllerRotation_Params InterpControllerRotation_Params;
	memset(&InterpControllerRotation_Params, 0, sizeof(InterpControllerRotation_Params));
	memcpy_s(&InterpControllerRotation_Params.NewRot, sizeof(InterpControllerRotation_Params.NewRot), &NewRot, sizeof(NewRot));
	memcpy_s(&InterpControllerRotation_Params.InterpTime, sizeof(InterpControllerRotation_Params.InterpTime), &InterpTime, sizeof(InterpTime));
	InterpControllerRotation_Params.bLinear = bLinear;

	uFnInterpControllerRotation->iNative = 0;
	uFnInterpControllerRotation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInterpControllerRotation, &InterpControllerRotation_Params, nullptr);
	uFnInterpControllerRotation->FunctionFlags |= 0x400;
	uFnInterpControllerRotation->iNative = 34591;
};

// Function GearboxFramework.GearboxPawn.InterpRotation
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[34617])
// Parameter Info:
// const struct FRotator&         NewRot                         (CPF_Parm)
// float                          InterpTime                     (CPF_Parm)
// bool                           bLinear                        (CPF_OptionalParm | CPF_Parm)
// bool                           bYawOnly                       (CPF_OptionalParm | CPF_Parm)

void AGearboxPawn::InterpRotation(const struct FRotator& NewRot, float InterpTime, bool bLinear, bool bYawOnly)
{
	static UFunction* uFnInterpRotation = nullptr;

	if (!uFnInterpRotation)
	{
		uFnInterpRotation = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.InterpRotation");
	}

	AGearboxPawn_execInterpRotation_Params InterpRotation_Params;
	memset(&InterpRotation_Params, 0, sizeof(InterpRotation_Params));
	memcpy_s(&InterpRotation_Params.NewRot, sizeof(InterpRotation_Params.NewRot), &NewRot, sizeof(NewRot));
	memcpy_s(&InterpRotation_Params.InterpTime, sizeof(InterpRotation_Params.InterpTime), &InterpTime, sizeof(InterpTime));
	InterpRotation_Params.bLinear = bLinear;
	InterpRotation_Params.bYawOnly = bYawOnly;

	uFnInterpRotation->iNative = 0;
	uFnInterpRotation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInterpRotation, &InterpRotation_Params, nullptr);
	uFnInterpRotation->FunctionFlags |= 0x400;
	uFnInterpRotation->iNative = 34617;
};

// Function GearboxFramework.GearboxPawn.InterpLocation
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[34598])
// Parameter Info:
// const struct FVector&          NewLoc                         (CPF_Parm)
// float                          InterpTime                     (CPF_Parm)
// bool                           bLinear                        (CPF_OptionalParm | CPF_Parm)
// bool                           bNoZ                           (CPF_OptionalParm | CPF_Parm)

void AGearboxPawn::InterpLocation(const struct FVector& NewLoc, float InterpTime, bool bLinear, bool bNoZ)
{
	static UFunction* uFnInterpLocation = nullptr;

	if (!uFnInterpLocation)
	{
		uFnInterpLocation = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.InterpLocation");
	}

	AGearboxPawn_execInterpLocation_Params InterpLocation_Params;
	memset(&InterpLocation_Params, 0, sizeof(InterpLocation_Params));
	memcpy_s(&InterpLocation_Params.NewLoc, sizeof(InterpLocation_Params.NewLoc), &NewLoc, sizeof(NewLoc));
	memcpy_s(&InterpLocation_Params.InterpTime, sizeof(InterpLocation_Params.InterpTime), &InterpTime, sizeof(InterpTime));
	InterpLocation_Params.bLinear = bLinear;
	InterpLocation_Params.bNoZ = bNoZ;

	uFnInterpLocation->iNative = 0;
	uFnInterpLocation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInterpLocation, &InterpLocation_Params, nullptr);
	uFnInterpLocation->FunctionFlags |= 0x400;
	uFnInterpLocation->iNative = 34598;
};

// Function GearboxFramework.GearboxPawn.IsInterpolating
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34671])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool AGearboxPawn::IsInterpolating()
{
	static UFunction* uFnIsInterpolating = nullptr;

	if (!uFnIsInterpolating)
	{
		uFnIsInterpolating = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.IsInterpolating");
	}

	AGearboxPawn_execIsInterpolating_Params IsInterpolating_Params;
	memset(&IsInterpolating_Params, 0, sizeof(IsInterpolating_Params));

	uFnIsInterpolating->iNative = 0;
	uFnIsInterpolating->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsInterpolating, &IsInterpolating_Params, nullptr);
	uFnIsInterpolating->FunctionFlags |= 0x400;
	uFnIsInterpolating->iNative = 34671;

	return IsInterpolating_Params.ReturnValue;
};

// Function GearboxFramework.GearboxPawn.AttachObstacleDebugComponent
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void AGearboxPawn::AttachObstacleDebugComponent()
{
	static UFunction* uFnAttachObstacleDebugComponent = nullptr;

	if (!uFnAttachObstacleDebugComponent)
	{
		uFnAttachObstacleDebugComponent = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.AttachObstacleDebugComponent");
	}

	AGearboxPawn_execAttachObstacleDebugComponent_Params AttachObstacleDebugComponent_Params;
	memset(&AttachObstacleDebugComponent_Params, 0, sizeof(AttachObstacleDebugComponent_Params));

	this->ProcessEvent(uFnAttachObstacleDebugComponent, &AttachObstacleDebugComponent_Params, nullptr);
};

// Function GearboxFramework.GearboxPawn.PossessedBy
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AController*             C                              (CPF_Parm)
// bool                           bVehicleTransition             (CPF_Parm)

void AGearboxPawn::PossessedBy(class AController* C, bool bVehicleTransition)
{
	static UFunction* uFnPossessedBy = nullptr;

	if (!uFnPossessedBy)
	{
		uFnPossessedBy = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.PossessedBy");
	}

	AGearboxPawn_execPossessedBy_Params PossessedBy_Params;
	memset(&PossessedBy_Params, 0, sizeof(PossessedBy_Params));
	memcpy_s(&PossessedBy_Params.C, sizeof(PossessedBy_Params.C), &C, sizeof(C));
	PossessedBy_Params.bVehicleTransition = bVehicleTransition;

	this->ProcessEvent(uFnPossessedBy, &PossessedBy_Params, nullptr);
};

// Function GearboxFramework.GearboxPawn.GetObstacleInfo
// [0x00024400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[34160])
// Parameter Info:
// class UPathingObstacleInfo*    ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// bool                           bFillInfo                      (CPF_OptionalParm | CPF_Parm)

class UPathingObstacleInfo* AGearboxPawn::GetObstacleInfo(bool bFillInfo)
{
	static UFunction* uFnGetObstacleInfo = nullptr;

	if (!uFnGetObstacleInfo)
	{
		uFnGetObstacleInfo = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.GetObstacleInfo");
	}

	AGearboxPawn_execGetObstacleInfo_Params GetObstacleInfo_Params;
	memset(&GetObstacleInfo_Params, 0, sizeof(GetObstacleInfo_Params));
	GetObstacleInfo_Params.bFillInfo = bFillInfo;

	uFnGetObstacleInfo->iNative = 0;
	uFnGetObstacleInfo->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetObstacleInfo, &GetObstacleInfo_Params, nullptr);
	uFnGetObstacleInfo->FunctionFlags |= 0x400;
	uFnGetObstacleInfo->iNative = 34160;

	return GetObstacleInfo_Params.ReturnValue;
};

// Function GearboxFramework.GearboxPawn.SetObstacleInfo
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35913])
// Parameter Info:
// class UPathingObstacleInfo*    Info                           (CPF_Parm)

void AGearboxPawn::SetObstacleInfo(class UPathingObstacleInfo* Info)
{
	static UFunction* uFnSetObstacleInfo = nullptr;

	if (!uFnSetObstacleInfo)
	{
		uFnSetObstacleInfo = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.SetObstacleInfo");
	}

	AGearboxPawn_execSetObstacleInfo_Params SetObstacleInfo_Params;
	memset(&SetObstacleInfo_Params, 0, sizeof(SetObstacleInfo_Params));
	memcpy_s(&SetObstacleInfo_Params.Info, sizeof(SetObstacleInfo_Params.Info), &Info, sizeof(Info));

	uFnSetObstacleInfo->iNative = 0;
	uFnSetObstacleInfo->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetObstacleInfo, &SetObstacleInfo_Params, nullptr);
	uFnSetObstacleInfo->FunctionFlags |= 0x400;
	uFnSetObstacleInfo->iNative = 35913;
};

// Function GearboxFramework.GearboxPawn.GetObstacleActor
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34159])
// Parameter Info:
// class AActor*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class AActor* AGearboxPawn::GetObstacleActor()
{
	static UFunction* uFnGetObstacleActor = nullptr;

	if (!uFnGetObstacleActor)
	{
		uFnGetObstacleActor = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.GetObstacleActor");
	}

	AGearboxPawn_execGetObstacleActor_Params GetObstacleActor_Params;
	memset(&GetObstacleActor_Params, 0, sizeof(GetObstacleActor_Params));

	uFnGetObstacleActor->iNative = 0;
	uFnGetObstacleActor->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetObstacleActor, &GetObstacleActor_Params, nullptr);
	uFnGetObstacleActor->FunctionFlags |= 0x400;
	uFnGetObstacleActor->iNative = 34159;

	return GetObstacleActor_Params.ReturnValue;
};

// Function GearboxFramework.GearboxPawn.GetPivotPoint
// [0x00024400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[34177])
// Parameter Info:
// struct FVector                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// bool                           bForFiring                     (CPF_OptionalParm | CPF_Parm)

struct FVector AGearboxPawn::GetPivotPoint(bool bForFiring)
{
	static UFunction* uFnGetPivotPoint = nullptr;

	if (!uFnGetPivotPoint)
	{
		uFnGetPivotPoint = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.GetPivotPoint");
	}

	AGearboxPawn_execGetPivotPoint_Params GetPivotPoint_Params;
	memset(&GetPivotPoint_Params, 0, sizeof(GetPivotPoint_Params));
	GetPivotPoint_Params.bForFiring = bForFiring;

	uFnGetPivotPoint->iNative = 0;
	uFnGetPivotPoint->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetPivotPoint, &GetPivotPoint_Params, nullptr);
	uFnGetPivotPoint->FunctionFlags |= 0x400;
	uFnGetPivotPoint->iNative = 34177;

	return GetPivotPoint_Params.ReturnValue;
};

// Function GearboxFramework.GearboxPawn.GetAimDirection
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34036])
// Parameter Info:
// struct FVector                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FVector AGearboxPawn::GetAimDirection()
{
	static UFunction* uFnGetAimDirection = nullptr;

	if (!uFnGetAimDirection)
	{
		uFnGetAimDirection = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.GetAimDirection");
	}

	AGearboxPawn_execGetAimDirection_Params GetAimDirection_Params;
	memset(&GetAimDirection_Params, 0, sizeof(GetAimDirection_Params));

	uFnGetAimDirection->iNative = 0;
	uFnGetAimDirection->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAimDirection, &GetAimDirection_Params, nullptr);
	uFnGetAimDirection->FunctionFlags |= 0x400;
	uFnGetAimDirection->iNative = 34036;

	return GetAimDirection_Params.ReturnValue;
};

// Function GearboxFramework.GearboxPawn.GetSpotOthersShouldLookAt
// [0x12020900] (FUNC_Simulated | FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// struct FVector                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FVector AGearboxPawn::eventGetSpotOthersShouldLookAt()
{
	static UFunction* uFnGetSpotOthersShouldLookAt = nullptr;

	if (!uFnGetSpotOthersShouldLookAt)
	{
		uFnGetSpotOthersShouldLookAt = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.GetSpotOthersShouldLookAt");
	}

	AGearboxPawn_eventGetSpotOthersShouldLookAt_Params GetSpotOthersShouldLookAt_Params;
	memset(&GetSpotOthersShouldLookAt_Params, 0, sizeof(GetSpotOthersShouldLookAt_Params));

	this->ProcessEvent(uFnGetSpotOthersShouldLookAt, &GetSpotOthersShouldLookAt_Params, nullptr);

	return GetSpotOthersShouldLookAt_Params.ReturnValue;
};

// Function GearboxFramework.GearboxPawn.SetReplicatedSMData
// [0x00424500] (FUNC_Simulated | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35926])
// Parameter Info:
// bool                           bInterrupted                   (CPF_OptionalParm | CPF_Parm)
// struct FSpecialMoveData        NewSMData                      (CPF_Parm | CPF_OutParm)

void AGearboxPawn::SetReplicatedSMData(bool bInterrupted, struct FSpecialMoveData& NewSMData)
{
	static UFunction* uFnSetReplicatedSMData = nullptr;

	if (!uFnSetReplicatedSMData)
	{
		uFnSetReplicatedSMData = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.SetReplicatedSMData");
	}

	AGearboxPawn_execSetReplicatedSMData_Params SetReplicatedSMData_Params;
	memset(&SetReplicatedSMData_Params, 0, sizeof(SetReplicatedSMData_Params));
	SetReplicatedSMData_Params.bInterrupted = bInterrupted;
	memcpy_s(&SetReplicatedSMData_Params.NewSMData, sizeof(SetReplicatedSMData_Params.NewSMData), &NewSMData, sizeof(NewSMData));

	uFnSetReplicatedSMData->iNative = 0;
	uFnSetReplicatedSMData->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetReplicatedSMData, &SetReplicatedSMData_Params, nullptr);
	uFnSetReplicatedSMData->FunctionFlags |= 0x400;
	uFnSetReplicatedSMData->iNative = 35926;

	memcpy_s(&NewSMData, sizeof(NewSMData), &SetReplicatedSMData_Params.NewSMData, sizeof(SetReplicatedSMData_Params.NewSMData));
};

// Function GearboxFramework.GearboxPawn.ServerSpecialMove_StopAny
// [0xFFFF0000122248C0] (FUNC_Net | FUNC_NetReliable | FUNC_Event | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_NetServer | FUNC_DLLImport | FUNC_K2Pure | FUNC_NetValidate | FUNC_AllFlags)
// Parameter Info:
// bool                           bClearQueue                    (CPF_OptionalParm | CPF_Parm)
// bool                           bInterrupted                   (CPF_OptionalParm | CPF_Parm)

void AGearboxPawn::eventServerSpecialMove_StopAny(bool bClearQueue, bool bInterrupted)
{
	static UFunction* uFnServerSpecialMove_StopAny = nullptr;

	if (!uFnServerSpecialMove_StopAny)
	{
		uFnServerSpecialMove_StopAny = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.ServerSpecialMove_StopAny");
	}

	AGearboxPawn_eventServerSpecialMove_StopAny_Params ServerSpecialMove_StopAny_Params;
	memset(&ServerSpecialMove_StopAny_Params, 0, sizeof(ServerSpecialMove_StopAny_Params));
	ServerSpecialMove_StopAny_Params.bClearQueue = bClearQueue;
	ServerSpecialMove_StopAny_Params.bInterrupted = bInterrupted;

	this->ProcessEvent(uFnServerSpecialMove_StopAny, &ServerSpecialMove_StopAny_Params, nullptr);
};

// Function GearboxFramework.GearboxPawn.ServerSpecialMove_Stop
// [0xFFFF0000122248C0] (FUNC_Net | FUNC_NetReliable | FUNC_Event | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_NetServer | FUNC_DLLImport | FUNC_K2Pure | FUNC_NetValidate | FUNC_AllFlags)
// Parameter Info:
// class USpecialMoveDefinition*  OldSMD                         (CPF_Parm)
// bool                           bClearQueue                    (CPF_OptionalParm | CPF_Parm)
// bool                           bInterrupted                   (CPF_OptionalParm | CPF_Parm)

void AGearboxPawn::eventServerSpecialMove_Stop(class USpecialMoveDefinition* OldSMD, bool bClearQueue, bool bInterrupted)
{
	static UFunction* uFnServerSpecialMove_Stop = nullptr;

	if (!uFnServerSpecialMove_Stop)
	{
		uFnServerSpecialMove_Stop = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.ServerSpecialMove_Stop");
	}

	AGearboxPawn_eventServerSpecialMove_Stop_Params ServerSpecialMove_Stop_Params;
	memset(&ServerSpecialMove_Stop_Params, 0, sizeof(ServerSpecialMove_Stop_Params));
	memcpy_s(&ServerSpecialMove_Stop_Params.OldSMD, sizeof(ServerSpecialMove_Stop_Params.OldSMD), &OldSMD, sizeof(OldSMD));
	ServerSpecialMove_Stop_Params.bClearQueue = bClearQueue;
	ServerSpecialMove_Stop_Params.bInterrupted = bInterrupted;

	this->ProcessEvent(uFnServerSpecialMove_Stop, &ServerSpecialMove_Stop_Params, nullptr);
};

// Function GearboxFramework.GearboxPawn.ServerSpecialMove_Queue
// [0xFFFF0000122248C0] (FUNC_Net | FUNC_NetReliable | FUNC_Event | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_NetServer | FUNC_DLLImport | FUNC_K2Pure | FUNC_NetValidate | FUNC_AllFlags)
// Parameter Info:
// class USpecialMoveDefinition*  NewSMD                         (CPF_Parm)
// float                          PlayRateScale                  (CPF_OptionalParm | CPF_Parm)
// float                          Duration                       (CPF_OptionalParm | CPF_Parm)
// const struct FName&            CallbackName                   (CPF_OptionalParm | CPF_Parm)
// class UObject*                 CallbackObject                 (CPF_OptionalParm | CPF_Parm)
// class UObject*                 Data                           (CPF_OptionalParm | CPF_Parm)
// bool                           bSendCallbackAtEndOfSequence   (CPF_OptionalParm | CPF_Parm)
// bool                           bStartOfSequence               (CPF_OptionalParm | CPF_Parm)

void AGearboxPawn::eventServerSpecialMove_Queue(class USpecialMoveDefinition* NewSMD, float PlayRateScale, float Duration, const struct FName& CallbackName, class UObject* CallbackObject, class UObject* Data, bool bSendCallbackAtEndOfSequence, bool bStartOfSequence)
{
	static UFunction* uFnServerSpecialMove_Queue = nullptr;

	if (!uFnServerSpecialMove_Queue)
	{
		uFnServerSpecialMove_Queue = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.ServerSpecialMove_Queue");
	}

	AGearboxPawn_eventServerSpecialMove_Queue_Params ServerSpecialMove_Queue_Params;
	memset(&ServerSpecialMove_Queue_Params, 0, sizeof(ServerSpecialMove_Queue_Params));
	memcpy_s(&ServerSpecialMove_Queue_Params.NewSMD, sizeof(ServerSpecialMove_Queue_Params.NewSMD), &NewSMD, sizeof(NewSMD));
	memcpy_s(&ServerSpecialMove_Queue_Params.PlayRateScale, sizeof(ServerSpecialMove_Queue_Params.PlayRateScale), &PlayRateScale, sizeof(PlayRateScale));
	memcpy_s(&ServerSpecialMove_Queue_Params.Duration, sizeof(ServerSpecialMove_Queue_Params.Duration), &Duration, sizeof(Duration));
	memcpy_s(&ServerSpecialMove_Queue_Params.CallbackName, sizeof(ServerSpecialMove_Queue_Params.CallbackName), &CallbackName, sizeof(CallbackName));
	memcpy_s(&ServerSpecialMove_Queue_Params.CallbackObject, sizeof(ServerSpecialMove_Queue_Params.CallbackObject), &CallbackObject, sizeof(CallbackObject));
	memcpy_s(&ServerSpecialMove_Queue_Params.Data, sizeof(ServerSpecialMove_Queue_Params.Data), &Data, sizeof(Data));
	ServerSpecialMove_Queue_Params.bSendCallbackAtEndOfSequence = bSendCallbackAtEndOfSequence;
	ServerSpecialMove_Queue_Params.bStartOfSequence = bStartOfSequence;

	this->ProcessEvent(uFnServerSpecialMove_Queue, &ServerSpecialMove_Queue_Params, nullptr);
};

// Function GearboxFramework.GearboxPawn.ServerSpecialMove_Play
// [0xFFFF0000122248C0] (FUNC_Net | FUNC_NetReliable | FUNC_Event | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_NetServer | FUNC_DLLImport | FUNC_K2Pure | FUNC_NetValidate | FUNC_AllFlags)
// Parameter Info:
// class USpecialMoveDefinition*  NewSMD                         (CPF_Parm)
// float                          PlayRateScale                  (CPF_OptionalParm | CPF_Parm)
// float                          Duration                       (CPF_OptionalParm | CPF_Parm)
// const struct FName&            CallbackName                   (CPF_OptionalParm | CPF_Parm)
// class UObject*                 CallbackObject                 (CPF_OptionalParm | CPF_Parm)
// class UObject*                 Data                           (CPF_OptionalParm | CPF_Parm)
// bool                           bSendCallbackAtEndOfSequence   (CPF_OptionalParm | CPF_Parm)

void AGearboxPawn::eventServerSpecialMove_Play(class USpecialMoveDefinition* NewSMD, float PlayRateScale, float Duration, const struct FName& CallbackName, class UObject* CallbackObject, class UObject* Data, bool bSendCallbackAtEndOfSequence)
{
	static UFunction* uFnServerSpecialMove_Play = nullptr;

	if (!uFnServerSpecialMove_Play)
	{
		uFnServerSpecialMove_Play = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.ServerSpecialMove_Play");
	}

	AGearboxPawn_eventServerSpecialMove_Play_Params ServerSpecialMove_Play_Params;
	memset(&ServerSpecialMove_Play_Params, 0, sizeof(ServerSpecialMove_Play_Params));
	memcpy_s(&ServerSpecialMove_Play_Params.NewSMD, sizeof(ServerSpecialMove_Play_Params.NewSMD), &NewSMD, sizeof(NewSMD));
	memcpy_s(&ServerSpecialMove_Play_Params.PlayRateScale, sizeof(ServerSpecialMove_Play_Params.PlayRateScale), &PlayRateScale, sizeof(PlayRateScale));
	memcpy_s(&ServerSpecialMove_Play_Params.Duration, sizeof(ServerSpecialMove_Play_Params.Duration), &Duration, sizeof(Duration));
	memcpy_s(&ServerSpecialMove_Play_Params.CallbackName, sizeof(ServerSpecialMove_Play_Params.CallbackName), &CallbackName, sizeof(CallbackName));
	memcpy_s(&ServerSpecialMove_Play_Params.CallbackObject, sizeof(ServerSpecialMove_Play_Params.CallbackObject), &CallbackObject, sizeof(CallbackObject));
	memcpy_s(&ServerSpecialMove_Play_Params.Data, sizeof(ServerSpecialMove_Play_Params.Data), &Data, sizeof(Data));
	ServerSpecialMove_Play_Params.bSendCallbackAtEndOfSequence = bSendCallbackAtEndOfSequence;

	this->ProcessEvent(uFnServerSpecialMove_Play, &ServerSpecialMove_Play_Params, nullptr);
};

// Function GearboxFramework.GearboxPawn.GetDefaultRootMotionRotationMode
// [0x00020500] (FUNC_Simulated | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[23677])
// Parameter Info:
// ERootMotionRotationMode        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

ERootMotionRotationMode AGearboxPawn::GetDefaultRootMotionRotationMode()
{
	static UFunction* uFnGetDefaultRootMotionRotationMode = nullptr;

	if (!uFnGetDefaultRootMotionRotationMode)
	{
		uFnGetDefaultRootMotionRotationMode = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.GetDefaultRootMotionRotationMode");
	}

	AGearboxPawn_execGetDefaultRootMotionRotationMode_Params GetDefaultRootMotionRotationMode_Params;
	memset(&GetDefaultRootMotionRotationMode_Params, 0, sizeof(GetDefaultRootMotionRotationMode_Params));

	uFnGetDefaultRootMotionRotationMode->iNative = 0;
	uFnGetDefaultRootMotionRotationMode->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetDefaultRootMotionRotationMode, &GetDefaultRootMotionRotationMode_Params, nullptr);
	uFnGetDefaultRootMotionRotationMode->FunctionFlags |= 0x400;
	uFnGetDefaultRootMotionRotationMode->iNative = 23677;

	return GetDefaultRootMotionRotationMode_Params.ReturnValue;
};

// Function GearboxFramework.GearboxPawn.GetDefaultRootMotionMode
// [0x00020500] (FUNC_Simulated | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[23676])
// Parameter Info:
// ERootMotionMode                ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

ERootMotionMode AGearboxPawn::GetDefaultRootMotionMode()
{
	static UFunction* uFnGetDefaultRootMotionMode = nullptr;

	if (!uFnGetDefaultRootMotionMode)
	{
		uFnGetDefaultRootMotionMode = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.GetDefaultRootMotionMode");
	}

	AGearboxPawn_execGetDefaultRootMotionMode_Params GetDefaultRootMotionMode_Params;
	memset(&GetDefaultRootMotionMode_Params, 0, sizeof(GetDefaultRootMotionMode_Params));

	uFnGetDefaultRootMotionMode->iNative = 0;
	uFnGetDefaultRootMotionMode->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetDefaultRootMotionMode, &GetDefaultRootMotionMode_Params, nullptr);
	uFnGetDefaultRootMotionMode->FunctionFlags |= 0x400;
	uFnGetDefaultRootMotionMode->iNative = 23676;

	return GetDefaultRootMotionMode_Params.ReturnValue;
};

// Function GearboxFramework.GearboxPawn.GetSkelMesh
// [0x00020500] (FUNC_Simulated | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34208])
// Parameter Info:
// class USkeletalMeshComponent*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline)

class USkeletalMeshComponent* AGearboxPawn::GetSkelMesh()
{
	static UFunction* uFnGetSkelMesh = nullptr;

	if (!uFnGetSkelMesh)
	{
		uFnGetSkelMesh = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.GetSkelMesh");
	}

	AGearboxPawn_execGetSkelMesh_Params GetSkelMesh_Params;
	memset(&GetSkelMesh_Params, 0, sizeof(GetSkelMesh_Params));

	uFnGetSkelMesh->iNative = 0;
	uFnGetSkelMesh->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetSkelMesh, &GetSkelMesh_Params, nullptr);
	uFnGetSkelMesh->FunctionFlags |= 0x400;
	uFnGetSkelMesh->iNative = 34208;

	return GetSkelMesh_Params.ReturnValue;
};

// Function GearboxFramework.GearboxPawn.GetSMComponent
// [0x00020500] (FUNC_Simulated | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34209])
// Parameter Info:
// class USpecialMoveComponent*   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline)

class USpecialMoveComponent* AGearboxPawn::GetSMComponent()
{
	static UFunction* uFnGetSMComponent = nullptr;

	if (!uFnGetSMComponent)
	{
		uFnGetSMComponent = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.GetSMComponent");
	}

	AGearboxPawn_execGetSMComponent_Params GetSMComponent_Params;
	memset(&GetSMComponent_Params, 0, sizeof(GetSMComponent_Params));

	uFnGetSMComponent->iNative = 0;
	uFnGetSMComponent->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetSMComponent, &GetSMComponent_Params, nullptr);
	uFnGetSMComponent->FunctionFlags |= 0x400;
	uFnGetSMComponent->iNative = 34209;

	return GetSMComponent_Params.ReturnValue;
};

// Function GearboxFramework.GearboxPawn.GetActor
// [0x00020500] (FUNC_Simulated | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34025])
// Parameter Info:
// class AActor*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class AActor* AGearboxPawn::GetActor()
{
	static UFunction* uFnGetActor = nullptr;

	if (!uFnGetActor)
	{
		uFnGetActor = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.GetActor");
	}

	AGearboxPawn_execGetActor_Params GetActor_Params;
	memset(&GetActor_Params, 0, sizeof(GetActor_Params));

	uFnGetActor->iNative = 0;
	uFnGetActor->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetActor, &GetActor_Params, nullptr);
	uFnGetActor->FunctionFlags |= 0x400;
	uFnGetActor->iNative = 34025;

	return GetActor_Params.ReturnValue;
};

// Function GearboxFramework.GearboxPawn.GetNavigationHandle
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34137])
// Parameter Info:
// class UGearboxNavigationHandle* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UGearboxNavigationHandle* AGearboxPawn::GetNavigationHandle()
{
	static UFunction* uFnGetNavigationHandle = nullptr;

	if (!uFnGetNavigationHandle)
	{
		uFnGetNavigationHandle = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.GetNavigationHandle");
	}

	AGearboxPawn_execGetNavigationHandle_Params GetNavigationHandle_Params;
	memset(&GetNavigationHandle_Params, 0, sizeof(GetNavigationHandle_Params));

	uFnGetNavigationHandle->iNative = 0;
	uFnGetNavigationHandle->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetNavigationHandle, &GetNavigationHandle_Params, nullptr);
	uFnGetNavigationHandle->FunctionFlags |= 0x400;
	uFnGetNavigationHandle->iNative = 34137;

	return GetNavigationHandle_Params.ReturnValue;
};

// Function GearboxFramework.GearboxPawn.Touch
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AActor*                  Other                          (CPF_Parm)
// class UPrimitiveComponent*     OtherComp                      (CPF_Parm | CPF_EditInline)
// const struct FVector&          HitLocation                    (CPF_Parm)
// const struct FVector&          HitNormal                      (CPF_Parm)

void AGearboxPawn::eventTouch(class AActor* Other, class UPrimitiveComponent* OtherComp, const struct FVector& HitLocation, const struct FVector& HitNormal)
{
	static UFunction* uFnTouch = nullptr;

	if (!uFnTouch)
	{
		uFnTouch = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.Touch");
	}

	AGearboxPawn_eventTouch_Params Touch_Params;
	memset(&Touch_Params, 0, sizeof(Touch_Params));
	memcpy_s(&Touch_Params.Other, sizeof(Touch_Params.Other), &Other, sizeof(Other));
	memcpy_s(&Touch_Params.OtherComp, sizeof(Touch_Params.OtherComp), &OtherComp, sizeof(OtherComp));
	memcpy_s(&Touch_Params.HitLocation, sizeof(Touch_Params.HitLocation), &HitLocation, sizeof(HitLocation));
	memcpy_s(&Touch_Params.HitNormal, sizeof(Touch_Params.HitNormal), &HitNormal, sizeof(HitNormal));

	this->ProcessEvent(uFnTouch, &Touch_Params, nullptr);
};

// Function GearboxFramework.GearboxPawn.PlayHit
// [0x12024000] (FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class APawn*                   SomePawn                       (CPF_Parm)
// const struct FVector&          HitLocation                    (CPF_Parm)
// class UClass*                  DamageType                     (CPF_Parm)
// const struct FVector&          Momentum                       (CPF_Parm)
// const struct FTraceHitInfo&    HitInfo                        (CPF_Parm)
// class UDamagePipeline*         Pipeline                       (CPF_OptionalParm | CPF_Parm)
// bool                           bFriendlyNoDamage              (CPF_OptionalParm | CPF_Parm)

void AGearboxPawn::PlayHit(class APawn* SomePawn, const struct FVector& HitLocation, class UClass* DamageType, const struct FVector& Momentum, const struct FTraceHitInfo& HitInfo, class UDamagePipeline* Pipeline, bool bFriendlyNoDamage)
{
	static UFunction* uFnPlayHit = nullptr;

	if (!uFnPlayHit)
	{
		uFnPlayHit = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.PlayHit");
	}

	AGearboxPawn_execPlayHit_Params PlayHit_Params;
	memset(&PlayHit_Params, 0, sizeof(PlayHit_Params));
	memcpy_s(&PlayHit_Params.SomePawn, sizeof(PlayHit_Params.SomePawn), &SomePawn, sizeof(SomePawn));
	memcpy_s(&PlayHit_Params.HitLocation, sizeof(PlayHit_Params.HitLocation), &HitLocation, sizeof(HitLocation));
	memcpy_s(&PlayHit_Params.DamageType, sizeof(PlayHit_Params.DamageType), &DamageType, sizeof(DamageType));
	memcpy_s(&PlayHit_Params.Momentum, sizeof(PlayHit_Params.Momentum), &Momentum, sizeof(Momentum));
	memcpy_s(&PlayHit_Params.HitInfo, sizeof(PlayHit_Params.HitInfo), &HitInfo, sizeof(HitInfo));
	memcpy_s(&PlayHit_Params.Pipeline, sizeof(PlayHit_Params.Pipeline), &Pipeline, sizeof(Pipeline));
	PlayHit_Params.bFriendlyNoDamage = bFriendlyNoDamage;

	this->ProcessEvent(uFnPlayHit, &PlayHit_Params, nullptr);
};

// Function GearboxFramework.GearboxPawn.ReplicatedEvent
// [0x12020900] (FUNC_Simulated | FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FName&            VarName                        (CPF_Parm)

void AGearboxPawn::eventReplicatedEvent(const struct FName& VarName)
{
	static UFunction* uFnReplicatedEvent = nullptr;

	if (!uFnReplicatedEvent)
	{
		uFnReplicatedEvent = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.ReplicatedEvent");
	}

	AGearboxPawn_eventReplicatedEvent_Params ReplicatedEvent_Params;
	memset(&ReplicatedEvent_Params, 0, sizeof(ReplicatedEvent_Params));
	memcpy_s(&ReplicatedEvent_Params.VarName, sizeof(ReplicatedEvent_Params.VarName), &VarName, sizeof(VarName));

	this->ProcessEvent(uFnReplicatedEvent, &ReplicatedEvent_Params, nullptr);
};

// Function GearboxFramework.GearboxPawn.Died
// [0x16024000] (FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_DLLImport | FUNC_K2Call | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AController*             Killer                         (CPF_Parm)
// class UClass*                  DamageType                     (CPF_Parm)
// const struct FVector&          HitLocation                    (CPF_Parm)
// class UDamagePipeline*         Pipeline                       (CPF_OptionalParm | CPF_Parm)

bool AGearboxPawn::Died(class AController* Killer, class UClass* DamageType, const struct FVector& HitLocation, class UDamagePipeline* Pipeline)
{
	static UFunction* uFnDied = nullptr;

	if (!uFnDied)
	{
		uFnDied = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.Died");
	}

	AGearboxPawn_execDied_Params Died_Params;
	memset(&Died_Params, 0, sizeof(Died_Params));
	memcpy_s(&Died_Params.Killer, sizeof(Died_Params.Killer), &Killer, sizeof(Killer));
	memcpy_s(&Died_Params.DamageType, sizeof(Died_Params.DamageType), &DamageType, sizeof(DamageType));
	memcpy_s(&Died_Params.HitLocation, sizeof(Died_Params.HitLocation), &HitLocation, sizeof(HitLocation));
	memcpy_s(&Died_Params.Pipeline, sizeof(Died_Params.Pipeline), &Pipeline, sizeof(Pipeline));

	this->ProcessEvent(uFnDied, &Died_Params, nullptr);

	return Died_Params.ReturnValue;
};

// Function GearboxFramework.GearboxPawn.Destroyed
// [0x12020900] (FUNC_Simulated | FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void AGearboxPawn::eventDestroyed()
{
	static UFunction* uFnDestroyed = nullptr;

	if (!uFnDestroyed)
	{
		uFnDestroyed = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.Destroyed");
	}

	AGearboxPawn_eventDestroyed_Params Destroyed_Params;
	memset(&Destroyed_Params, 0, sizeof(Destroyed_Params));

	this->ProcessEvent(uFnDestroyed, &Destroyed_Params, nullptr);
};

// Function GearboxFramework.GearboxPawn.SetMovementPhysics
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void AGearboxPawn::SetMovementPhysics()
{
	static UFunction* uFnSetMovementPhysics = nullptr;

	if (!uFnSetMovementPhysics)
	{
		uFnSetMovementPhysics = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.SetMovementPhysics");
	}

	AGearboxPawn_execSetMovementPhysics_Params SetMovementPhysics_Params;
	memset(&SetMovementPhysics_Params, 0, sizeof(SetMovementPhysics_Params));

	this->ProcessEvent(uFnSetMovementPhysics, &SetMovementPhysics_Params, nullptr);
};

// Function GearboxFramework.GearboxPawn.PostBeginPlay
// [0x12020900] (FUNC_Simulated | FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void AGearboxPawn::eventPostBeginPlay()
{
	static UFunction* uFnPostBeginPlay = nullptr;

	if (!uFnPostBeginPlay)
	{
		uFnPostBeginPlay = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.PostBeginPlay");
	}

	AGearboxPawn_eventPostBeginPlay_Params PostBeginPlay_Params;
	memset(&PostBeginPlay_Params, 0, sizeof(PostBeginPlay_Params));

	this->ProcessEvent(uFnPostBeginPlay, &PostBeginPlay_Params, nullptr);
};

// Function GearboxFramework.GearboxPawn.NotifyShotAtBy
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35184])
// Parameter Info:
// class AGearboxPawn*            ShootingPawn                   (CPF_Parm)

void AGearboxPawn::NotifyShotAtBy(class AGearboxPawn* ShootingPawn)
{
	static UFunction* uFnNotifyShotAtBy = nullptr;

	if (!uFnNotifyShotAtBy)
	{
		uFnNotifyShotAtBy = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.NotifyShotAtBy");
	}

	AGearboxPawn_execNotifyShotAtBy_Params NotifyShotAtBy_Params;
	memset(&NotifyShotAtBy_Params, 0, sizeof(NotifyShotAtBy_Params));
	memcpy_s(&NotifyShotAtBy_Params.ShootingPawn, sizeof(NotifyShotAtBy_Params.ShootingPawn), &ShootingPawn, sizeof(ShootingPawn));

	uFnNotifyShotAtBy->iNative = 0;
	uFnNotifyShotAtBy->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnNotifyShotAtBy, &NotifyShotAtBy_Params, nullptr);
	uFnNotifyShotAtBy->FunctionFlags |= 0x400;
	uFnNotifyShotAtBy->iNative = 35184;
};

// Function GearboxFramework.GearboxPawn.HaveIBeenShotAtRecently
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34326])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool AGearboxPawn::HaveIBeenShotAtRecently()
{
	static UFunction* uFnHaveIBeenShotAtRecently = nullptr;

	if (!uFnHaveIBeenShotAtRecently)
	{
		uFnHaveIBeenShotAtRecently = UFunction::FindFunction("Function GearboxFramework.GearboxPawn.HaveIBeenShotAtRecently");
	}

	AGearboxPawn_execHaveIBeenShotAtRecently_Params HaveIBeenShotAtRecently_Params;
	memset(&HaveIBeenShotAtRecently_Params, 0, sizeof(HaveIBeenShotAtRecently_Params));

	uFnHaveIBeenShotAtRecently->iNative = 0;
	uFnHaveIBeenShotAtRecently->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnHaveIBeenShotAtRecently, &HaveIBeenShotAtRecently_Params, nullptr);
	uFnHaveIBeenShotAtRecently->FunctionFlags |= 0x400;
	uFnHaveIBeenShotAtRecently->iNative = 34326;

	return HaveIBeenShotAtRecently_Params.ReturnValue;
};

// Function GearboxFramework.GearboxProcess.IsProcessActive
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34686])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGearboxProcess::IsProcessActive()
{
	static UFunction* uFnIsProcessActive = nullptr;

	if (!uFnIsProcessActive)
	{
		uFnIsProcessActive = UFunction::FindFunction("Function GearboxFramework.GearboxProcess.IsProcessActive");
	}

	UGearboxProcess_execIsProcessActive_Params IsProcessActive_Params;
	memset(&IsProcessActive_Params, 0, sizeof(IsProcessActive_Params));

	uFnIsProcessActive->iNative = 0;
	uFnIsProcessActive->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsProcessActive, &IsProcessActive_Params, nullptr);
	uFnIsProcessActive->FunctionFlags |= 0x400;
	uFnIsProcessActive->iNative = 34686;

	return IsProcessActive_Params.ReturnValue;
};

// Function GearboxFramework.GearboxProcess.ProcessFailed
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35552])
// Parameter Info:

void UGearboxProcess::ProcessFailed()
{
	static UFunction* uFnProcessFailed = nullptr;

	if (!uFnProcessFailed)
	{
		uFnProcessFailed = UFunction::FindFunction("Function GearboxFramework.GearboxProcess.ProcessFailed");
	}

	UGearboxProcess_execProcessFailed_Params ProcessFailed_Params;
	memset(&ProcessFailed_Params, 0, sizeof(ProcessFailed_Params));

	uFnProcessFailed->iNative = 0;
	uFnProcessFailed->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnProcessFailed, &ProcessFailed_Params, nullptr);
	uFnProcessFailed->FunctionFlags |= 0x400;
	uFnProcessFailed->iNative = 35552;
};

// Function GearboxFramework.GearboxProcess.ProcessComplete
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35549])
// Parameter Info:

void UGearboxProcess::ProcessComplete()
{
	static UFunction* uFnProcessComplete = nullptr;

	if (!uFnProcessComplete)
	{
		uFnProcessComplete = UFunction::FindFunction("Function GearboxFramework.GearboxProcess.ProcessComplete");
	}

	UGearboxProcess_execProcessComplete_Params ProcessComplete_Params;
	memset(&ProcessComplete_Params, 0, sizeof(ProcessComplete_Params));

	uFnProcessComplete->iNative = 0;
	uFnProcessComplete->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnProcessComplete, &ProcessComplete_Params, nullptr);
	uFnProcessComplete->FunctionFlags |= 0x400;
	uFnProcessComplete->iNative = 35549;
};

// Function GearboxFramework.GearboxProcess.StepWaiting
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36296])
// Parameter Info:

void UGearboxProcess::StepWaiting()
{
	static UFunction* uFnStepWaiting = nullptr;

	if (!uFnStepWaiting)
	{
		uFnStepWaiting = UFunction::FindFunction("Function GearboxFramework.GearboxProcess.StepWaiting");
	}

	UGearboxProcess_execStepWaiting_Params StepWaiting_Params;
	memset(&StepWaiting_Params, 0, sizeof(StepWaiting_Params));

	uFnStepWaiting->iNative = 0;
	uFnStepWaiting->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnStepWaiting, &StepWaiting_Params, nullptr);
	uFnStepWaiting->FunctionFlags |= 0x400;
	uFnStepWaiting->iNative = 36296;
};

// Function GearboxFramework.GearboxProcess.StepFailed
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36294])
// Parameter Info:

void UGearboxProcess::StepFailed()
{
	static UFunction* uFnStepFailed = nullptr;

	if (!uFnStepFailed)
	{
		uFnStepFailed = UFunction::FindFunction("Function GearboxFramework.GearboxProcess.StepFailed");
	}

	UGearboxProcess_execStepFailed_Params StepFailed_Params;
	memset(&StepFailed_Params, 0, sizeof(StepFailed_Params));

	uFnStepFailed->iNative = 0;
	uFnStepFailed->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnStepFailed, &StepFailed_Params, nullptr);
	uFnStepFailed->FunctionFlags |= 0x400;
	uFnStepFailed->iNative = 36294;
};

// Function GearboxFramework.GearboxProcess.StepSucceeded
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36295])
// Parameter Info:

void UGearboxProcess::StepSucceeded()
{
	static UFunction* uFnStepSucceeded = nullptr;

	if (!uFnStepSucceeded)
	{
		uFnStepSucceeded = UFunction::FindFunction("Function GearboxFramework.GearboxProcess.StepSucceeded");
	}

	UGearboxProcess_execStepSucceeded_Params StepSucceeded_Params;
	memset(&StepSucceeded_Params, 0, sizeof(StepSucceeded_Params));

	uFnStepSucceeded->iNative = 0;
	uFnStepSucceeded->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnStepSucceeded, &StepSucceeded_Params, nullptr);
	uFnStepSucceeded->FunctionFlags |= 0x400;
	uFnStepSucceeded->iNative = 36295;
};

// Function GearboxFramework.GearboxProcess.GetStepConfiguration
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34230])
// Parameter Info:
// struct FStepConfiguration      ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FStepConfiguration UGearboxProcess::GetStepConfiguration()
{
	static UFunction* uFnGetStepConfiguration = nullptr;

	if (!uFnGetStepConfiguration)
	{
		uFnGetStepConfiguration = UFunction::FindFunction("Function GearboxFramework.GearboxProcess.GetStepConfiguration");
	}

	UGearboxProcess_execGetStepConfiguration_Params GetStepConfiguration_Params;
	memset(&GetStepConfiguration_Params, 0, sizeof(GetStepConfiguration_Params));

	uFnGetStepConfiguration->iNative = 0;
	uFnGetStepConfiguration->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetStepConfiguration, &GetStepConfiguration_Params, nullptr);
	uFnGetStepConfiguration->FunctionFlags |= 0x400;
	uFnGetStepConfiguration->iNative = 34230;

	return GetStepConfiguration_Params.ReturnValue;
};

// Function GearboxFramework.GearboxProcess.PerformStep
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void UGearboxProcess::eventPerformStep()
{
	static UFunction* uFnPerformStep = nullptr;

	if (!uFnPerformStep)
	{
		uFnPerformStep = UFunction::FindFunction("Function GearboxFramework.GearboxProcess.PerformStep");
	}

	UGearboxProcess_eventPerformStep_Params PerformStep_Params;
	memset(&PerformStep_Params, 0, sizeof(PerformStep_Params));

	this->ProcessEvent(uFnPerformStep, &PerformStep_Params, nullptr);
};

// Function GearboxFramework.GearboxProcess.StopProcess
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36307])
// Parameter Info:

void UGearboxProcess::StopProcess()
{
	static UFunction* uFnStopProcess = nullptr;

	if (!uFnStopProcess)
	{
		uFnStopProcess = UFunction::FindFunction("Function GearboxFramework.GearboxProcess.StopProcess");
	}

	UGearboxProcess_execStopProcess_Params StopProcess_Params;
	memset(&StopProcess_Params, 0, sizeof(StopProcess_Params));

	uFnStopProcess->iNative = 0;
	uFnStopProcess->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnStopProcess, &StopProcess_Params, nullptr);
	uFnStopProcess->FunctionFlags |= 0x400;
	uFnStopProcess->iNative = 36307;
};

// Function GearboxFramework.GearboxProcess.StartProcess
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36257])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGearboxProcess::StartProcess()
{
	static UFunction* uFnStartProcess = nullptr;

	if (!uFnStartProcess)
	{
		uFnStartProcess = UFunction::FindFunction("Function GearboxFramework.GearboxProcess.StartProcess");
	}

	UGearboxProcess_execStartProcess_Params StartProcess_Params;
	memset(&StartProcess_Params, 0, sizeof(StartProcess_Params));

	uFnStartProcess->iNative = 0;
	uFnStartProcess->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnStartProcess, &StartProcess_Params, nullptr);
	uFnStartProcess->FunctionFlags |= 0x400;
	uFnStartProcess->iNative = 36257;

	return StartProcess_Params.ReturnValue;
};

// Function GearboxFramework.GearboxProcess.Init
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[762])
// Parameter Info:

void UGearboxProcess::Init()
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function GearboxFramework.GearboxProcess.Init");
	}

	UGearboxProcess_execInit_Params Init_Params;
	memset(&Init_Params, 0, sizeof(Init_Params));

	uFnInit->iNative = 0;
	uFnInit->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInit, &Init_Params, nullptr);
	uFnInit->FunctionFlags |= 0x400;
	uFnInit->iNative = 762;
};

// Function GearboxFramework.SparkInitializationProcess.HandleReadDiscoveryReceived
// [0x00420402] (FUNC_Defined | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[2437])
// Parameter Info:
// struct FSparkResult            Result                         (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void USparkInitializationProcess::HandleReadDiscoveryReceived(struct FSparkResult& Result)
{
	static UFunction* uFnHandleReadDiscoveryReceived = nullptr;

	if (!uFnHandleReadDiscoveryReceived)
	{
		uFnHandleReadDiscoveryReceived = UFunction::FindFunction("Function GearboxFramework.SparkInitializationProcess.HandleReadDiscoveryReceived");
	}

	USparkInitializationProcess_execHandleReadDiscoveryReceived_Params HandleReadDiscoveryReceived_Params;
	memset(&HandleReadDiscoveryReceived_Params, 0, sizeof(HandleReadDiscoveryReceived_Params));
	memcpy_s(&HandleReadDiscoveryReceived_Params.Result, sizeof(HandleReadDiscoveryReceived_Params.Result), &Result, sizeof(Result));

	uFnHandleReadDiscoveryReceived->iNative = 0;
	uFnHandleReadDiscoveryReceived->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnHandleReadDiscoveryReceived, &HandleReadDiscoveryReceived_Params, nullptr);
	uFnHandleReadDiscoveryReceived->FunctionFlags |= 0x400;
	uFnHandleReadDiscoveryReceived->iNative = 2437;

	memcpy_s(&Result, sizeof(Result), &HandleReadDiscoveryReceived_Params.Result, sizeof(HandleReadDiscoveryReceived_Params.Result));
};

// Function GearboxFramework.SparkInitializationProcess.TriggerSparkInitializedDelegates
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// EInitializedResult             InitializeResult               (CPF_Parm)

void USparkInitializationProcess::eventTriggerSparkInitializedDelegates(EInitializedResult InitializeResult)
{
	static UFunction* uFnTriggerSparkInitializedDelegates = nullptr;

	if (!uFnTriggerSparkInitializedDelegates)
	{
		uFnTriggerSparkInitializedDelegates = UFunction::FindFunction("Function GearboxFramework.SparkInitializationProcess.TriggerSparkInitializedDelegates");
	}

	USparkInitializationProcess_eventTriggerSparkInitializedDelegates_Params TriggerSparkInitializedDelegates_Params;
	memset(&TriggerSparkInitializedDelegates_Params, 0, sizeof(TriggerSparkInitializedDelegates_Params));
	memcpy_s(&TriggerSparkInitializedDelegates_Params.InitializeResult, sizeof(TriggerSparkInitializedDelegates_Params.InitializeResult), &InitializeResult, sizeof(InitializeResult));

	this->ProcessEvent(uFnTriggerSparkInitializedDelegates, &TriggerSparkInitializedDelegates_Params, nullptr);
};

// Function GearboxFramework.SparkInitializationProcess.GetPlatformTicketFallback
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool USparkInitializationProcess::GetPlatformTicketFallback()
{
	static UFunction* uFnGetPlatformTicketFallback = nullptr;

	if (!uFnGetPlatformTicketFallback)
	{
		uFnGetPlatformTicketFallback = UFunction::FindFunction("Function GearboxFramework.SparkInitializationProcess.GetPlatformTicketFallback");
	}

	USparkInitializationProcess_execGetPlatformTicketFallback_Params GetPlatformTicketFallback_Params;
	memset(&GetPlatformTicketFallback_Params, 0, sizeof(GetPlatformTicketFallback_Params));

	this->ProcessEvent(uFnGetPlatformTicketFallback, &GetPlatformTicketFallback_Params, nullptr);

	return GetPlatformTicketFallback_Params.ReturnValue;
};

// Function GearboxFramework.SparkInitializationProcess.ClearGetPlatformTicketCompleteDelegate
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FScriptDelegate&  GetPlatformTicketCompleteDelegate (CPF_Parm | CPF_NeedCtorLink)

void USparkInitializationProcess::ClearGetPlatformTicketCompleteDelegate(const struct FScriptDelegate& GetPlatformTicketCompleteDelegate)
{
	static UFunction* uFnClearGetPlatformTicketCompleteDelegate = nullptr;

	if (!uFnClearGetPlatformTicketCompleteDelegate)
	{
		uFnClearGetPlatformTicketCompleteDelegate = UFunction::FindFunction("Function GearboxFramework.SparkInitializationProcess.ClearGetPlatformTicketCompleteDelegate");
	}

	USparkInitializationProcess_execClearGetPlatformTicketCompleteDelegate_Params ClearGetPlatformTicketCompleteDelegate_Params;
	memset(&ClearGetPlatformTicketCompleteDelegate_Params, 0, sizeof(ClearGetPlatformTicketCompleteDelegate_Params));
	memcpy_s(&ClearGetPlatformTicketCompleteDelegate_Params.GetPlatformTicketCompleteDelegate, sizeof(ClearGetPlatformTicketCompleteDelegate_Params.GetPlatformTicketCompleteDelegate), &GetPlatformTicketCompleteDelegate, sizeof(GetPlatformTicketCompleteDelegate));

	this->ProcessEvent(uFnClearGetPlatformTicketCompleteDelegate, &ClearGetPlatformTicketCompleteDelegate_Params, nullptr);
};

// Function GearboxFramework.SparkInitializationProcess.AddGetPlatformTicketCompleteDelegate
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FScriptDelegate&  GetPlatformTicketCompleteDelegate (CPF_Parm | CPF_NeedCtorLink)

void USparkInitializationProcess::AddGetPlatformTicketCompleteDelegate(const struct FScriptDelegate& GetPlatformTicketCompleteDelegate)
{
	static UFunction* uFnAddGetPlatformTicketCompleteDelegate = nullptr;

	if (!uFnAddGetPlatformTicketCompleteDelegate)
	{
		uFnAddGetPlatformTicketCompleteDelegate = UFunction::FindFunction("Function GearboxFramework.SparkInitializationProcess.AddGetPlatformTicketCompleteDelegate");
	}

	USparkInitializationProcess_execAddGetPlatformTicketCompleteDelegate_Params AddGetPlatformTicketCompleteDelegate_Params;
	memset(&AddGetPlatformTicketCompleteDelegate_Params, 0, sizeof(AddGetPlatformTicketCompleteDelegate_Params));
	memcpy_s(&AddGetPlatformTicketCompleteDelegate_Params.GetPlatformTicketCompleteDelegate, sizeof(AddGetPlatformTicketCompleteDelegate_Params.GetPlatformTicketCompleteDelegate), &GetPlatformTicketCompleteDelegate, sizeof(GetPlatformTicketCompleteDelegate));

	this->ProcessEvent(uFnAddGetPlatformTicketCompleteDelegate, &AddGetPlatformTicketCompleteDelegate_Params, nullptr);
};

// Function GearboxFramework.SparkInitializationProcess.OnGetPlatformTicketComplete
// [0x00120000] (FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter Info:
// const struct FPlatformUserId&  TicketUserId                   (CPF_Parm)
// bool                           bWasSuccessful                 (CPF_Parm)
// const class FString&           Ticket                         (CPF_Parm | CPF_NeedCtorLink)

void USparkInitializationProcess::OnGetPlatformTicketComplete(const struct FPlatformUserId& TicketUserId, bool bWasSuccessful, const class FString& Ticket)
{
	static UFunction* uFnOnGetPlatformTicketComplete = nullptr;

	if (!uFnOnGetPlatformTicketComplete)
	{
		uFnOnGetPlatformTicketComplete = UFunction::FindFunction("Function GearboxFramework.SparkInitializationProcess.OnGetPlatformTicketComplete");
	}

	USparkInitializationProcess_execOnGetPlatformTicketComplete_Params OnGetPlatformTicketComplete_Params;
	memset(&OnGetPlatformTicketComplete_Params, 0, sizeof(OnGetPlatformTicketComplete_Params));
	memcpy_s(&OnGetPlatformTicketComplete_Params.TicketUserId, sizeof(OnGetPlatformTicketComplete_Params.TicketUserId), &TicketUserId, sizeof(TicketUserId));
	OnGetPlatformTicketComplete_Params.bWasSuccessful = bWasSuccessful;
	memcpy_s(&OnGetPlatformTicketComplete_Params.Ticket, sizeof(OnGetPlatformTicketComplete_Params.Ticket), &Ticket, sizeof(Ticket));

	this->ProcessEvent(uFnOnGetPlatformTicketComplete, &OnGetPlatformTicketComplete_Params, nullptr);
};

// Function GearboxFramework.SparkInitializationProcess.ClearSparkInitializedDelegate
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FScriptDelegate&  SparkInitializedDelegate       (CPF_Parm | CPF_NeedCtorLink)

void USparkInitializationProcess::ClearSparkInitializedDelegate(const struct FScriptDelegate& SparkInitializedDelegate)
{
	static UFunction* uFnClearSparkInitializedDelegate = nullptr;

	if (!uFnClearSparkInitializedDelegate)
	{
		uFnClearSparkInitializedDelegate = UFunction::FindFunction("Function GearboxFramework.SparkInitializationProcess.ClearSparkInitializedDelegate");
	}

	USparkInitializationProcess_execClearSparkInitializedDelegate_Params ClearSparkInitializedDelegate_Params;
	memset(&ClearSparkInitializedDelegate_Params, 0, sizeof(ClearSparkInitializedDelegate_Params));
	memcpy_s(&ClearSparkInitializedDelegate_Params.SparkInitializedDelegate, sizeof(ClearSparkInitializedDelegate_Params.SparkInitializedDelegate), &SparkInitializedDelegate, sizeof(SparkInitializedDelegate));

	this->ProcessEvent(uFnClearSparkInitializedDelegate, &ClearSparkInitializedDelegate_Params, nullptr);
};

// Function GearboxFramework.SparkInitializationProcess.AddSparkInitializedDelegate
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FScriptDelegate&  SparkInitializedDelegate       (CPF_Parm | CPF_NeedCtorLink)

void USparkInitializationProcess::AddSparkInitializedDelegate(const struct FScriptDelegate& SparkInitializedDelegate)
{
	static UFunction* uFnAddSparkInitializedDelegate = nullptr;

	if (!uFnAddSparkInitializedDelegate)
	{
		uFnAddSparkInitializedDelegate = UFunction::FindFunction("Function GearboxFramework.SparkInitializationProcess.AddSparkInitializedDelegate");
	}

	USparkInitializationProcess_execAddSparkInitializedDelegate_Params AddSparkInitializedDelegate_Params;
	memset(&AddSparkInitializedDelegate_Params, 0, sizeof(AddSparkInitializedDelegate_Params));
	memcpy_s(&AddSparkInitializedDelegate_Params.SparkInitializedDelegate, sizeof(AddSparkInitializedDelegate_Params.SparkInitializedDelegate), &SparkInitializedDelegate, sizeof(SparkInitializedDelegate));

	this->ProcessEvent(uFnAddSparkInitializedDelegate, &AddSparkInitializedDelegate_Params, nullptr);
};

// Function GearboxFramework.SparkInitializationProcess.GetStepName
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34231])
// Parameter Info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString USparkInitializationProcess::GetStepName()
{
	static UFunction* uFnGetStepName = nullptr;

	if (!uFnGetStepName)
	{
		uFnGetStepName = UFunction::FindFunction("Function GearboxFramework.SparkInitializationProcess.GetStepName");
	}

	USparkInitializationProcess_execGetStepName_Params GetStepName_Params;
	memset(&GetStepName_Params, 0, sizeof(GetStepName_Params));

	uFnGetStepName->iNative = 0;
	uFnGetStepName->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetStepName, &GetStepName_Params, nullptr);
	uFnGetStepName->FunctionFlags |= 0x400;
	uFnGetStepName->iNative = 34231;

	return GetStepName_Params.ReturnValue;
};

// Function GearboxFramework.SparkInitializationProcess.GetStepConfiguration
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34230])
// Parameter Info:
// struct FStepConfiguration      ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FStepConfiguration USparkInitializationProcess::GetStepConfiguration()
{
	static UFunction* uFnGetStepConfiguration = nullptr;

	if (!uFnGetStepConfiguration)
	{
		uFnGetStepConfiguration = UFunction::FindFunction("Function GearboxFramework.SparkInitializationProcess.GetStepConfiguration");
	}

	USparkInitializationProcess_execGetStepConfiguration_Params GetStepConfiguration_Params;
	memset(&GetStepConfiguration_Params, 0, sizeof(GetStepConfiguration_Params));

	uFnGetStepConfiguration->iNative = 0;
	uFnGetStepConfiguration->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetStepConfiguration, &GetStepConfiguration_Params, nullptr);
	uFnGetStepConfiguration->FunctionFlags |= 0x400;
	uFnGetStepConfiguration->iNative = 34230;

	return GetStepConfiguration_Params.ReturnValue;
};

// Function GearboxFramework.SparkInitializationProcess.IsInitialized
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool USparkInitializationProcess::IsInitialized()
{
	static UFunction* uFnIsInitialized = nullptr;

	if (!uFnIsInitialized)
	{
		uFnIsInitialized = UFunction::FindFunction("Function GearboxFramework.SparkInitializationProcess.IsInitialized");
	}

	USparkInitializationProcess_execIsInitialized_Params IsInitialized_Params;
	memset(&IsInitialized_Params, 0, sizeof(IsInitialized_Params));

	this->ProcessEvent(uFnIsInitialized, &IsInitialized_Params, nullptr);

	return IsInitialized_Params.ReturnValue;
};

// Function GearboxFramework.SparkInitializationProcess.IsDisabled
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool USparkInitializationProcess::IsDisabled()
{
	static UFunction* uFnIsDisabled = nullptr;

	if (!uFnIsDisabled)
	{
		uFnIsDisabled = UFunction::FindFunction("Function GearboxFramework.SparkInitializationProcess.IsDisabled");
	}

	USparkInitializationProcess_execIsDisabled_Params IsDisabled_Params;
	memset(&IsDisabled_Params, 0, sizeof(IsDisabled_Params));

	this->ProcessEvent(uFnIsDisabled, &IsDisabled_Params, nullptr);

	return IsDisabled_Params.ReturnValue;
};

// Function GearboxFramework.SparkInitializationProcess.IsInitializing
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool USparkInitializationProcess::IsInitializing()
{
	static UFunction* uFnIsInitializing = nullptr;

	if (!uFnIsInitializing)
	{
		uFnIsInitializing = UFunction::FindFunction("Function GearboxFramework.SparkInitializationProcess.IsInitializing");
	}

	USparkInitializationProcess_execIsInitializing_Params IsInitializing_Params;
	memset(&IsInitializing_Params, 0, sizeof(IsInitializing_Params));

	this->ProcessEvent(uFnIsInitializing, &IsInitializing_Params, nullptr);

	return IsInitializing_Params.ReturnValue;
};

// Function GearboxFramework.SparkInitializationProcess.HandleVerificationReceived
// [0x12420002] (FUNC_Defined | FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// struct FSparkResult            Result                         (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void USparkInitializationProcess::HandleVerificationReceived(struct FSparkResult& Result)
{
	static UFunction* uFnHandleVerificationReceived = nullptr;

	if (!uFnHandleVerificationReceived)
	{
		uFnHandleVerificationReceived = UFunction::FindFunction("Function GearboxFramework.SparkInitializationProcess.HandleVerificationReceived");
	}

	USparkInitializationProcess_execHandleVerificationReceived_Params HandleVerificationReceived_Params;
	memset(&HandleVerificationReceived_Params, 0, sizeof(HandleVerificationReceived_Params));
	memcpy_s(&HandleVerificationReceived_Params.Result, sizeof(HandleVerificationReceived_Params.Result), &Result, sizeof(Result));

	this->ProcessEvent(uFnHandleVerificationReceived, &HandleVerificationReceived_Params, nullptr);

	memcpy_s(&Result, sizeof(Result), &HandleVerificationReceived_Params.Result, sizeof(HandleVerificationReceived_Params.Result));
};

// Function GearboxFramework.SparkInitializationProcess.VerifyAuthentication
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void USparkInitializationProcess::eventVerifyAuthentication()
{
	static UFunction* uFnVerifyAuthentication = nullptr;

	if (!uFnVerifyAuthentication)
	{
		uFnVerifyAuthentication = UFunction::FindFunction("Function GearboxFramework.SparkInitializationProcess.VerifyAuthentication");
	}

	USparkInitializationProcess_eventVerifyAuthentication_Params VerifyAuthentication_Params;
	memset(&VerifyAuthentication_Params, 0, sizeof(VerifyAuthentication_Params));

	this->ProcessEvent(uFnVerifyAuthentication, &VerifyAuthentication_Params, nullptr);
};

// Function GearboxFramework.SparkInitializationProcess.AuthenticateTicketString
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void USparkInitializationProcess::eventAuthenticateTicketString()
{
	static UFunction* uFnAuthenticateTicketString = nullptr;

	if (!uFnAuthenticateTicketString)
	{
		uFnAuthenticateTicketString = UFunction::FindFunction("Function GearboxFramework.SparkInitializationProcess.AuthenticateTicketString");
	}

	USparkInitializationProcess_eventAuthenticateTicketString_Params AuthenticateTicketString_Params;
	memset(&AuthenticateTicketString_Params, 0, sizeof(AuthenticateTicketString_Params));

	this->ProcessEvent(uFnAuthenticateTicketString, &AuthenticateTicketString_Params, nullptr);
};

// Function GearboxFramework.SparkInitializationProcess.HandleAuthenticationReceived
// [0x12420002] (FUNC_Defined | FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// struct FSparkResult            Result                         (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void USparkInitializationProcess::HandleAuthenticationReceived(struct FSparkResult& Result)
{
	static UFunction* uFnHandleAuthenticationReceived = nullptr;

	if (!uFnHandleAuthenticationReceived)
	{
		uFnHandleAuthenticationReceived = UFunction::FindFunction("Function GearboxFramework.SparkInitializationProcess.HandleAuthenticationReceived");
	}

	USparkInitializationProcess_execHandleAuthenticationReceived_Params HandleAuthenticationReceived_Params;
	memset(&HandleAuthenticationReceived_Params, 0, sizeof(HandleAuthenticationReceived_Params));
	memcpy_s(&HandleAuthenticationReceived_Params.Result, sizeof(HandleAuthenticationReceived_Params.Result), &Result, sizeof(Result));

	this->ProcessEvent(uFnHandleAuthenticationReceived, &HandleAuthenticationReceived_Params, nullptr);

	memcpy_s(&Result, sizeof(Result), &HandleAuthenticationReceived_Params.Result, sizeof(HandleAuthenticationReceived_Params.Result));
};

// Function GearboxFramework.SparkInitializationProcess.GetPlatformTicketComplete
// [0x12020002] (FUNC_Defined | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FPlatformUserId&  InUserId                       (CPF_Parm)
// bool                           bWasSuccessful                 (CPF_Parm)
// const class FString&           Ticket                         (CPF_Parm | CPF_NeedCtorLink)

void USparkInitializationProcess::GetPlatformTicketComplete(const struct FPlatformUserId& InUserId, bool bWasSuccessful, const class FString& Ticket)
{
	static UFunction* uFnGetPlatformTicketComplete = nullptr;

	if (!uFnGetPlatformTicketComplete)
	{
		uFnGetPlatformTicketComplete = UFunction::FindFunction("Function GearboxFramework.SparkInitializationProcess.GetPlatformTicketComplete");
	}

	USparkInitializationProcess_execGetPlatformTicketComplete_Params GetPlatformTicketComplete_Params;
	memset(&GetPlatformTicketComplete_Params, 0, sizeof(GetPlatformTicketComplete_Params));
	memcpy_s(&GetPlatformTicketComplete_Params.InUserId, sizeof(GetPlatformTicketComplete_Params.InUserId), &InUserId, sizeof(InUserId));
	GetPlatformTicketComplete_Params.bWasSuccessful = bWasSuccessful;
	memcpy_s(&GetPlatformTicketComplete_Params.Ticket, sizeof(GetPlatformTicketComplete_Params.Ticket), &Ticket, sizeof(Ticket));

	this->ProcessEvent(uFnGetPlatformTicketComplete, &GetPlatformTicketComplete_Params, nullptr);
};

// Function GearboxFramework.SparkInitializationProcess.GetServerTicketComplete
// [0x12020002] (FUNC_Defined | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           bWasSuccessful                 (CPF_Parm)
// const class FString&           Ticket                         (CPF_Parm | CPF_NeedCtorLink)

void USparkInitializationProcess::GetServerTicketComplete(bool bWasSuccessful, const class FString& Ticket)
{
	static UFunction* uFnGetServerTicketComplete = nullptr;

	if (!uFnGetServerTicketComplete)
	{
		uFnGetServerTicketComplete = UFunction::FindFunction("Function GearboxFramework.SparkInitializationProcess.GetServerTicketComplete");
	}

	USparkInitializationProcess_execGetServerTicketComplete_Params GetServerTicketComplete_Params;
	memset(&GetServerTicketComplete_Params, 0, sizeof(GetServerTicketComplete_Params));
	GetServerTicketComplete_Params.bWasSuccessful = bWasSuccessful;
	memcpy_s(&GetServerTicketComplete_Params.Ticket, sizeof(GetServerTicketComplete_Params.Ticket), &Ticket, sizeof(Ticket));

	this->ProcessEvent(uFnGetServerTicketComplete, &GetServerTicketComplete_Params, nullptr);
};

// Function GearboxFramework.SparkInitializationProcess.GetTicketComplete
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           bWasSuccessful                 (CPF_Parm)
// const class FString&           Ticket                         (CPF_Parm | CPF_NeedCtorLink)

void USparkInitializationProcess::GetTicketComplete(bool bWasSuccessful, const class FString& Ticket)
{
	static UFunction* uFnGetTicketComplete = nullptr;

	if (!uFnGetTicketComplete)
	{
		uFnGetTicketComplete = UFunction::FindFunction("Function GearboxFramework.SparkInitializationProcess.GetTicketComplete");
	}

	USparkInitializationProcess_execGetTicketComplete_Params GetTicketComplete_Params;
	memset(&GetTicketComplete_Params, 0, sizeof(GetTicketComplete_Params));
	GetTicketComplete_Params.bWasSuccessful = bWasSuccessful;
	memcpy_s(&GetTicketComplete_Params.Ticket, sizeof(GetTicketComplete_Params.Ticket), &Ticket, sizeof(Ticket));

	this->ProcessEvent(uFnGetTicketComplete, &GetTicketComplete_Params, nullptr);
};

// Function GearboxFramework.SparkInitializationProcess.GetPlatformTicket
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void USparkInitializationProcess::eventGetPlatformTicket()
{
	static UFunction* uFnGetPlatformTicket = nullptr;

	if (!uFnGetPlatformTicket)
	{
		uFnGetPlatformTicket = UFunction::FindFunction("Function GearboxFramework.SparkInitializationProcess.GetPlatformTicket");
	}

	USparkInitializationProcess_eventGetPlatformTicket_Params GetPlatformTicket_Params;
	memset(&GetPlatformTicket_Params, 0, sizeof(GetPlatformTicket_Params));

	this->ProcessEvent(uFnGetPlatformTicket, &GetPlatformTicket_Params, nullptr);
};

// Function GearboxFramework.SparkInitializationProcess.ProcessFailed
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35552])
// Parameter Info:

void USparkInitializationProcess::ProcessFailed()
{
	static UFunction* uFnProcessFailed = nullptr;

	if (!uFnProcessFailed)
	{
		uFnProcessFailed = UFunction::FindFunction("Function GearboxFramework.SparkInitializationProcess.ProcessFailed");
	}

	USparkInitializationProcess_execProcessFailed_Params ProcessFailed_Params;
	memset(&ProcessFailed_Params, 0, sizeof(ProcessFailed_Params));

	uFnProcessFailed->iNative = 0;
	uFnProcessFailed->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnProcessFailed, &ProcessFailed_Params, nullptr);
	uFnProcessFailed->FunctionFlags |= 0x400;
	uFnProcessFailed->iNative = 35552;
};

// Function GearboxFramework.SparkInitializationProcess.ProcessComplete
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35549])
// Parameter Info:

void USparkInitializationProcess::ProcessComplete()
{
	static UFunction* uFnProcessComplete = nullptr;

	if (!uFnProcessComplete)
	{
		uFnProcessComplete = UFunction::FindFunction("Function GearboxFramework.SparkInitializationProcess.ProcessComplete");
	}

	USparkInitializationProcess_execProcessComplete_Params ProcessComplete_Params;
	memset(&ProcessComplete_Params, 0, sizeof(ProcessComplete_Params));

	uFnProcessComplete->iNative = 0;
	uFnProcessComplete->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnProcessComplete, &ProcessComplete_Params, nullptr);
	uFnProcessComplete->FunctionFlags |= 0x400;
	uFnProcessComplete->iNative = 35549;
};

// Function GearboxFramework.SparkInitializationProcess.GetConfigQuery
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34061])
// Parameter Info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString USparkInitializationProcess::GetConfigQuery()
{
	static UFunction* uFnGetConfigQuery = nullptr;

	if (!uFnGetConfigQuery)
	{
		uFnGetConfigQuery = UFunction::FindFunction("Function GearboxFramework.SparkInitializationProcess.GetConfigQuery");
	}

	USparkInitializationProcess_execGetConfigQuery_Params GetConfigQuery_Params;
	memset(&GetConfigQuery_Params, 0, sizeof(GetConfigQuery_Params));

	uFnGetConfigQuery->iNative = 0;
	uFnGetConfigQuery->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetConfigQuery, &GetConfigQuery_Params, nullptr);
	uFnGetConfigQuery->FunctionFlags |= 0x400;
	uFnGetConfigQuery->iNative = 34061;

	return GetConfigQuery_Params.ReturnValue;
};

// Function GearboxFramework.SparkInitializationProcess.CompleteInitialization
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32833])
// Parameter Info:

void USparkInitializationProcess::CompleteInitialization()
{
	static UFunction* uFnCompleteInitialization = nullptr;

	if (!uFnCompleteInitialization)
	{
		uFnCompleteInitialization = UFunction::FindFunction("Function GearboxFramework.SparkInitializationProcess.CompleteInitialization");
	}

	USparkInitializationProcess_execCompleteInitialization_Params CompleteInitialization_Params;
	memset(&CompleteInitialization_Params, 0, sizeof(CompleteInitialization_Params));

	uFnCompleteInitialization->iNative = 0;
	uFnCompleteInitialization->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCompleteInitialization, &CompleteInitialization_Params, nullptr);
	uFnCompleteInitialization->FunctionFlags |= 0x400;
	uFnCompleteInitialization->iNative = 32833;
};

// Function GearboxFramework.SparkInitializationProcess.PerformStep
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[14853])
// Parameter Info:

void USparkInitializationProcess::PerformStep()
{
	static UFunction* uFnPerformStep = nullptr;

	if (!uFnPerformStep)
	{
		uFnPerformStep = UFunction::FindFunction("Function GearboxFramework.SparkInitializationProcess.PerformStep");
	}

	USparkInitializationProcess_execPerformStep_Params PerformStep_Params;
	memset(&PerformStep_Params, 0, sizeof(PerformStep_Params));

	uFnPerformStep->iNative = 0;
	uFnPerformStep->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPerformStep, &PerformStep_Params, nullptr);
	uFnPerformStep->FunctionFlags |= 0x400;
	uFnPerformStep->iNative = 14853;
};

// Function GearboxFramework.SparkInitializationProcess.StartProcess
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36257])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool USparkInitializationProcess::StartProcess()
{
	static UFunction* uFnStartProcess = nullptr;

	if (!uFnStartProcess)
	{
		uFnStartProcess = UFunction::FindFunction("Function GearboxFramework.SparkInitializationProcess.StartProcess");
	}

	USparkInitializationProcess_execStartProcess_Params StartProcess_Params;
	memset(&StartProcess_Params, 0, sizeof(StartProcess_Params));

	uFnStartProcess->iNative = 0;
	uFnStartProcess->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnStartProcess, &StartProcess_Params, nullptr);
	uFnStartProcess->FunctionFlags |= 0x400;
	uFnStartProcess->iNative = 36257;

	return StartProcess_Params.ReturnValue;
};

// Function GearboxFramework.SparkInitializationProcess.InitFromServer
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FScriptDelegate&  SparkInitializedDelegate       (CPF_Parm | CPF_NeedCtorLink)

void USparkInitializationProcess::eventInitFromServer(const struct FScriptDelegate& SparkInitializedDelegate)
{
	static UFunction* uFnInitFromServer = nullptr;

	if (!uFnInitFromServer)
	{
		uFnInitFromServer = UFunction::FindFunction("Function GearboxFramework.SparkInitializationProcess.InitFromServer");
	}

	USparkInitializationProcess_eventInitFromServer_Params InitFromServer_Params;
	memset(&InitFromServer_Params, 0, sizeof(InitFromServer_Params));
	memcpy_s(&InitFromServer_Params.SparkInitializedDelegate, sizeof(InitFromServer_Params.SparkInitializedDelegate), &SparkInitializedDelegate, sizeof(SparkInitializedDelegate));

	this->ProcessEvent(uFnInitFromServer, &InitFromServer_Params, nullptr);
};

// Function GearboxFramework.SparkInitializationProcess.InitWithUser
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FPlatformUserId&  InUserId                       (CPF_Parm)
// const struct FScriptDelegate&  SparkInitializedDelegate       (CPF_Parm | CPF_NeedCtorLink)

void USparkInitializationProcess::InitWithUser(const struct FPlatformUserId& InUserId, const struct FScriptDelegate& SparkInitializedDelegate)
{
	static UFunction* uFnInitWithUser = nullptr;

	if (!uFnInitWithUser)
	{
		uFnInitWithUser = UFunction::FindFunction("Function GearboxFramework.SparkInitializationProcess.InitWithUser");
	}

	USparkInitializationProcess_execInitWithUser_Params InitWithUser_Params;
	memset(&InitWithUser_Params, 0, sizeof(InitWithUser_Params));
	memcpy_s(&InitWithUser_Params.InUserId, sizeof(InitWithUser_Params.InUserId), &InUserId, sizeof(InUserId));
	memcpy_s(&InitWithUser_Params.SparkInitializedDelegate, sizeof(InitWithUser_Params.SparkInitializedDelegate), &SparkInitializedDelegate, sizeof(SparkInitializedDelegate));

	this->ProcessEvent(uFnInitWithUser, &InitWithUser_Params, nullptr);
};

// Function GearboxFramework.GearboxRenderTextureManager.SetThumbnailMesh
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35936])
// Parameter Info:
// class UTexture*                Texture                        (CPF_Parm)
// class UMeshComponent*          Mesh                           (CPF_Parm | CPF_EditInline)

void UGearboxRenderTextureManager::SetThumbnailMesh(class UTexture* Texture, class UMeshComponent* Mesh)
{
	static UFunction* uFnSetThumbnailMesh = nullptr;

	if (!uFnSetThumbnailMesh)
	{
		uFnSetThumbnailMesh = UFunction::FindFunction("Function GearboxFramework.GearboxRenderTextureManager.SetThumbnailMesh");
	}

	UGearboxRenderTextureManager_execSetThumbnailMesh_Params SetThumbnailMesh_Params;
	memset(&SetThumbnailMesh_Params, 0, sizeof(SetThumbnailMesh_Params));
	memcpy_s(&SetThumbnailMesh_Params.Texture, sizeof(SetThumbnailMesh_Params.Texture), &Texture, sizeof(Texture));
	memcpy_s(&SetThumbnailMesh_Params.Mesh, sizeof(SetThumbnailMesh_Params.Mesh), &Mesh, sizeof(Mesh));

	uFnSetThumbnailMesh->iNative = 0;
	uFnSetThumbnailMesh->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetThumbnailMesh, &SetThumbnailMesh_Params, nullptr);
	uFnSetThumbnailMesh->FunctionFlags |= 0x400;
	uFnSetThumbnailMesh->iNative = 35936;
};

// Function GearboxFramework.GearboxRenderTextureManager.FreeContext
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[33911])
// Parameter Info:
// const struct FName&            Context                        (CPF_Parm)

void UGearboxRenderTextureManager::FreeContext(const struct FName& Context)
{
	static UFunction* uFnFreeContext = nullptr;

	if (!uFnFreeContext)
	{
		uFnFreeContext = UFunction::FindFunction("Function GearboxFramework.GearboxRenderTextureManager.FreeContext");
	}

	UGearboxRenderTextureManager_execFreeContext_Params FreeContext_Params;
	memset(&FreeContext_Params, 0, sizeof(FreeContext_Params));
	memcpy_s(&FreeContext_Params.Context, sizeof(FreeContext_Params.Context), &Context, sizeof(Context));

	uFnFreeContext->iNative = 0;
	uFnFreeContext->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnFreeContext, &FreeContext_Params, nullptr);
	uFnFreeContext->FunctionFlags |= 0x400;
	uFnFreeContext->iNative = 33911;
};

// Function GearboxFramework.GearboxRenderTextureManager.FreeThumbnail
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[33917])
// Parameter Info:
// class UTexture*                Texture                        (CPF_Parm)

void UGearboxRenderTextureManager::FreeThumbnail(class UTexture* Texture)
{
	static UFunction* uFnFreeThumbnail = nullptr;

	if (!uFnFreeThumbnail)
	{
		uFnFreeThumbnail = UFunction::FindFunction("Function GearboxFramework.GearboxRenderTextureManager.FreeThumbnail");
	}

	UGearboxRenderTextureManager_execFreeThumbnail_Params FreeThumbnail_Params;
	memset(&FreeThumbnail_Params, 0, sizeof(FreeThumbnail_Params));
	memcpy_s(&FreeThumbnail_Params.Texture, sizeof(FreeThumbnail_Params.Texture), &Texture, sizeof(Texture));

	uFnFreeThumbnail->iNative = 0;
	uFnFreeThumbnail->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnFreeThumbnail, &FreeThumbnail_Params, nullptr);
	uFnFreeThumbnail->FunctionFlags |= 0x400;
	uFnFreeThumbnail->iNative = 33917;
};

// Function GearboxFramework.GearboxRenderTextureManager.GetThumbnail
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[34243])
// Parameter Info:
// class UTexture*                ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FName&            Context                        (CPF_Parm)
// int32_t                        TextureSizeX                   (CPF_Parm)
// int32_t                        TextureSizeY                   (CPF_Parm)
// EThumbnailUpdate               UpdateType                     (CPF_Parm)
// int32_t                        SizeX                          (CPF_OptionalParm | CPF_Parm)
// int32_t                        SizeY                          (CPF_OptionalParm | CPF_Parm)

class UTexture* UGearboxRenderTextureManager::GetThumbnail(const struct FName& Context, int32_t TextureSizeX, int32_t TextureSizeY, EThumbnailUpdate UpdateType, int32_t SizeX, int32_t SizeY)
{
	static UFunction* uFnGetThumbnail = nullptr;

	if (!uFnGetThumbnail)
	{
		uFnGetThumbnail = UFunction::FindFunction("Function GearboxFramework.GearboxRenderTextureManager.GetThumbnail");
	}

	UGearboxRenderTextureManager_execGetThumbnail_Params GetThumbnail_Params;
	memset(&GetThumbnail_Params, 0, sizeof(GetThumbnail_Params));
	memcpy_s(&GetThumbnail_Params.Context, sizeof(GetThumbnail_Params.Context), &Context, sizeof(Context));
	memcpy_s(&GetThumbnail_Params.TextureSizeX, sizeof(GetThumbnail_Params.TextureSizeX), &TextureSizeX, sizeof(TextureSizeX));
	memcpy_s(&GetThumbnail_Params.TextureSizeY, sizeof(GetThumbnail_Params.TextureSizeY), &TextureSizeY, sizeof(TextureSizeY));
	memcpy_s(&GetThumbnail_Params.UpdateType, sizeof(GetThumbnail_Params.UpdateType), &UpdateType, sizeof(UpdateType));
	memcpy_s(&GetThumbnail_Params.SizeX, sizeof(GetThumbnail_Params.SizeX), &SizeX, sizeof(SizeX));
	memcpy_s(&GetThumbnail_Params.SizeY, sizeof(GetThumbnail_Params.SizeY), &SizeY, sizeof(SizeY));

	uFnGetThumbnail->iNative = 0;
	uFnGetThumbnail->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetThumbnail, &GetThumbnail_Params, nullptr);
	uFnGetThumbnail->FunctionFlags |= 0x400;
	uFnGetThumbnail->iNative = 34243;

	return GetThumbnail_Params.ReturnValue;
};

// Function GearboxFramework.GearboxRenderTextureManager.FreeTexture2D
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[23365])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UTexture2D*              Texture                        (CPF_Parm)

bool UGearboxRenderTextureManager::FreeTexture2D(class UTexture2D* Texture)
{
	static UFunction* uFnFreeTexture2D = nullptr;

	if (!uFnFreeTexture2D)
	{
		uFnFreeTexture2D = UFunction::FindFunction("Function GearboxFramework.GearboxRenderTextureManager.FreeTexture2D");
	}

	UGearboxRenderTextureManager_execFreeTexture2D_Params FreeTexture2D_Params;
	memset(&FreeTexture2D_Params, 0, sizeof(FreeTexture2D_Params));
	memcpy_s(&FreeTexture2D_Params.Texture, sizeof(FreeTexture2D_Params.Texture), &Texture, sizeof(Texture));

	uFnFreeTexture2D->iNative = 0;
	uFnFreeTexture2D->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnFreeTexture2D, &FreeTexture2D_Params, nullptr);
	uFnFreeTexture2D->FunctionFlags |= 0x400;
	uFnFreeTexture2D->iNative = 23365;

	return FreeTexture2D_Params.ReturnValue;
};

// Function GearboxFramework.GearboxRenderTextureManager.GetTexture2D
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[23989])
// Parameter Info:
// class UTexture2D*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UTexture2D* UGearboxRenderTextureManager::GetTexture2D()
{
	static UFunction* uFnGetTexture2D = nullptr;

	if (!uFnGetTexture2D)
	{
		uFnGetTexture2D = UFunction::FindFunction("Function GearboxFramework.GearboxRenderTextureManager.GetTexture2D");
	}

	UGearboxRenderTextureManager_execGetTexture2D_Params GetTexture2D_Params;
	memset(&GetTexture2D_Params, 0, sizeof(GetTexture2D_Params));

	uFnGetTexture2D->iNative = 0;
	uFnGetTexture2D->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetTexture2D, &GetTexture2D_Params, nullptr);
	uFnGetTexture2D->FunctionFlags |= 0x400;
	uFnGetTexture2D->iNative = 23989;

	return GetTexture2D_Params.ReturnValue;
};

// Function GearboxFramework.GearboxRenderTextureManager.FreeRenderTextureDepth
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[33916])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UTextureRenderTarget2D*  Texture                        (CPF_Parm)

bool UGearboxRenderTextureManager::FreeRenderTextureDepth(class UTextureRenderTarget2D* Texture)
{
	static UFunction* uFnFreeRenderTextureDepth = nullptr;

	if (!uFnFreeRenderTextureDepth)
	{
		uFnFreeRenderTextureDepth = UFunction::FindFunction("Function GearboxFramework.GearboxRenderTextureManager.FreeRenderTextureDepth");
	}

	UGearboxRenderTextureManager_execFreeRenderTextureDepth_Params FreeRenderTextureDepth_Params;
	memset(&FreeRenderTextureDepth_Params, 0, sizeof(FreeRenderTextureDepth_Params));
	memcpy_s(&FreeRenderTextureDepth_Params.Texture, sizeof(FreeRenderTextureDepth_Params.Texture), &Texture, sizeof(Texture));

	uFnFreeRenderTextureDepth->iNative = 0;
	uFnFreeRenderTextureDepth->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnFreeRenderTextureDepth, &FreeRenderTextureDepth_Params, nullptr);
	uFnFreeRenderTextureDepth->FunctionFlags |= 0x400;
	uFnFreeRenderTextureDepth->iNative = 33916;

	return FreeRenderTextureDepth_Params.ReturnValue;
};

// Function GearboxFramework.GearboxRenderTextureManager.GetRenderTextureDepth
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34194])
// Parameter Info:
// class UTextureRenderTarget2D*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        InSizeX                        (CPF_Parm)
// int32_t                        InSizeY                        (CPF_Parm)

class UTextureRenderTarget2D* UGearboxRenderTextureManager::GetRenderTextureDepth(int32_t InSizeX, int32_t InSizeY)
{
	static UFunction* uFnGetRenderTextureDepth = nullptr;

	if (!uFnGetRenderTextureDepth)
	{
		uFnGetRenderTextureDepth = UFunction::FindFunction("Function GearboxFramework.GearboxRenderTextureManager.GetRenderTextureDepth");
	}

	UGearboxRenderTextureManager_execGetRenderTextureDepth_Params GetRenderTextureDepth_Params;
	memset(&GetRenderTextureDepth_Params, 0, sizeof(GetRenderTextureDepth_Params));
	memcpy_s(&GetRenderTextureDepth_Params.InSizeX, sizeof(GetRenderTextureDepth_Params.InSizeX), &InSizeX, sizeof(InSizeX));
	memcpy_s(&GetRenderTextureDepth_Params.InSizeY, sizeof(GetRenderTextureDepth_Params.InSizeY), &InSizeY, sizeof(InSizeY));

	uFnGetRenderTextureDepth->iNative = 0;
	uFnGetRenderTextureDepth->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetRenderTextureDepth, &GetRenderTextureDepth_Params, nullptr);
	uFnGetRenderTextureDepth->FunctionFlags |= 0x400;
	uFnGetRenderTextureDepth->iNative = 34194;

	return GetRenderTextureDepth_Params.ReturnValue;
};

// Function GearboxFramework.GearboxRenderTextureManager.FreeRenderTexture
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[33915])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UTextureRenderTarget2D*  Texture                        (CPF_Parm)

bool UGearboxRenderTextureManager::FreeRenderTexture(class UTextureRenderTarget2D* Texture)
{
	static UFunction* uFnFreeRenderTexture = nullptr;

	if (!uFnFreeRenderTexture)
	{
		uFnFreeRenderTexture = UFunction::FindFunction("Function GearboxFramework.GearboxRenderTextureManager.FreeRenderTexture");
	}

	UGearboxRenderTextureManager_execFreeRenderTexture_Params FreeRenderTexture_Params;
	memset(&FreeRenderTexture_Params, 0, sizeof(FreeRenderTexture_Params));
	memcpy_s(&FreeRenderTexture_Params.Texture, sizeof(FreeRenderTexture_Params.Texture), &Texture, sizeof(Texture));

	uFnFreeRenderTexture->iNative = 0;
	uFnFreeRenderTexture->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnFreeRenderTexture, &FreeRenderTexture_Params, nullptr);
	uFnFreeRenderTexture->FunctionFlags |= 0x400;
	uFnFreeRenderTexture->iNative = 33915;

	return FreeRenderTexture_Params.ReturnValue;
};

// Function GearboxFramework.GearboxRenderTextureManager.GetRenderTexture
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34193])
// Parameter Info:
// class UTextureRenderTarget2D*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        InSizeX                        (CPF_Parm)
// int32_t                        InSizeY                        (CPF_Parm)

class UTextureRenderTarget2D* UGearboxRenderTextureManager::GetRenderTexture(int32_t InSizeX, int32_t InSizeY)
{
	static UFunction* uFnGetRenderTexture = nullptr;

	if (!uFnGetRenderTexture)
	{
		uFnGetRenderTexture = UFunction::FindFunction("Function GearboxFramework.GearboxRenderTextureManager.GetRenderTexture");
	}

	UGearboxRenderTextureManager_execGetRenderTexture_Params GetRenderTexture_Params;
	memset(&GetRenderTexture_Params, 0, sizeof(GetRenderTexture_Params));
	memcpy_s(&GetRenderTexture_Params.InSizeX, sizeof(GetRenderTexture_Params.InSizeX), &InSizeX, sizeof(InSizeX));
	memcpy_s(&GetRenderTexture_Params.InSizeY, sizeof(GetRenderTexture_Params.InSizeY), &InSizeY, sizeof(InSizeY));

	uFnGetRenderTexture->iNative = 0;
	uFnGetRenderTexture->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetRenderTexture, &GetRenderTexture_Params, nullptr);
	uFnGetRenderTexture->FunctionFlags |= 0x400;
	uFnGetRenderTexture->iNative = 34193;

	return GetRenderTexture_Params.ReturnValue;
};

// Function GearboxFramework.GearboxSkeletalMeshComponent.SetFOV
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[28825])
// Parameter Info:
// float                          NewFOV                         (CPF_Parm)

void UGearboxSkeletalMeshComponent::SetFOV(float NewFOV)
{
	static UFunction* uFnSetFOV = nullptr;

	if (!uFnSetFOV)
	{
		uFnSetFOV = UFunction::FindFunction("Function GearboxFramework.GearboxSkeletalMeshComponent.SetFOV");
	}

	UGearboxSkeletalMeshComponent_execSetFOV_Params SetFOV_Params;
	memset(&SetFOV_Params, 0, sizeof(SetFOV_Params));
	memcpy_s(&SetFOV_Params.NewFOV, sizeof(SetFOV_Params.NewFOV), &NewFOV, sizeof(NewFOV));

	uFnSetFOV->iNative = 0;
	uFnSetFOV->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetFOV, &SetFOV_Params, nullptr);
	uFnSetFOV->FunctionFlags |= 0x400;
	uFnSetFOV->iNative = 28825;
};

// Function GearboxFramework.GestaltSkeletalMeshDefinition.InitGestaltAccessoryMeshDataFromParts
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34534])
// Parameter Info:
// class USkeletalMesh*           MeshToBorrowBonesFrom          (CPF_Parm)
// class UGestaltPartMatrices*    AccessoryMatrices              (CPF_Parm)
// class USkeletalMeshComponent*  TargetComponent                (CPF_Parm | CPF_EditInline)
// class TArray<struct FGestaltPartPermutation> PermutationConfiguration       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UGestaltSkeletalMeshDefinition::InitGestaltAccessoryMeshDataFromParts(class USkeletalMesh* MeshToBorrowBonesFrom, class UGestaltPartMatrices* AccessoryMatrices, class USkeletalMeshComponent* TargetComponent, class TArray<struct FGestaltPartPermutation>& PermutationConfiguration)
{
	static UFunction* uFnInitGestaltAccessoryMeshDataFromParts = nullptr;

	if (!uFnInitGestaltAccessoryMeshDataFromParts)
	{
		uFnInitGestaltAccessoryMeshDataFromParts = UFunction::FindFunction("Function GearboxFramework.GestaltSkeletalMeshDefinition.InitGestaltAccessoryMeshDataFromParts");
	}

	UGestaltSkeletalMeshDefinition_execInitGestaltAccessoryMeshDataFromParts_Params InitGestaltAccessoryMeshDataFromParts_Params;
	memset(&InitGestaltAccessoryMeshDataFromParts_Params, 0, sizeof(InitGestaltAccessoryMeshDataFromParts_Params));
	memcpy_s(&InitGestaltAccessoryMeshDataFromParts_Params.MeshToBorrowBonesFrom, sizeof(InitGestaltAccessoryMeshDataFromParts_Params.MeshToBorrowBonesFrom), &MeshToBorrowBonesFrom, sizeof(MeshToBorrowBonesFrom));
	memcpy_s(&InitGestaltAccessoryMeshDataFromParts_Params.AccessoryMatrices, sizeof(InitGestaltAccessoryMeshDataFromParts_Params.AccessoryMatrices), &AccessoryMatrices, sizeof(AccessoryMatrices));
	memcpy_s(&InitGestaltAccessoryMeshDataFromParts_Params.TargetComponent, sizeof(InitGestaltAccessoryMeshDataFromParts_Params.TargetComponent), &TargetComponent, sizeof(TargetComponent));
	memcpy_s(&InitGestaltAccessoryMeshDataFromParts_Params.PermutationConfiguration, sizeof(InitGestaltAccessoryMeshDataFromParts_Params.PermutationConfiguration), &PermutationConfiguration, sizeof(PermutationConfiguration));

	uFnInitGestaltAccessoryMeshDataFromParts->iNative = 0;
	uFnInitGestaltAccessoryMeshDataFromParts->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInitGestaltAccessoryMeshDataFromParts, &InitGestaltAccessoryMeshDataFromParts_Params, nullptr);
	uFnInitGestaltAccessoryMeshDataFromParts->FunctionFlags |= 0x400;
	uFnInitGestaltAccessoryMeshDataFromParts->iNative = 34534;

	memcpy_s(&PermutationConfiguration, sizeof(PermutationConfiguration), &InitGestaltAccessoryMeshDataFromParts_Params.PermutationConfiguration, sizeof(InitGestaltAccessoryMeshDataFromParts_Params.PermutationConfiguration));
};

// Function GearboxFramework.GestaltSkeletalMeshDefinition.InitGestaltMeshDataFromParts
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34535])
// Parameter Info:
// class USkeletalMeshComponent*  TargetComponent                (CPF_Parm | CPF_EditInline)
// class TArray<struct FName>     PartMeshNames                  (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UGestaltSkeletalMeshDefinition::InitGestaltMeshDataFromParts(class USkeletalMeshComponent* TargetComponent, class TArray<struct FName>& PartMeshNames)
{
	static UFunction* uFnInitGestaltMeshDataFromParts = nullptr;

	if (!uFnInitGestaltMeshDataFromParts)
	{
		uFnInitGestaltMeshDataFromParts = UFunction::FindFunction("Function GearboxFramework.GestaltSkeletalMeshDefinition.InitGestaltMeshDataFromParts");
	}

	UGestaltSkeletalMeshDefinition_execInitGestaltMeshDataFromParts_Params InitGestaltMeshDataFromParts_Params;
	memset(&InitGestaltMeshDataFromParts_Params, 0, sizeof(InitGestaltMeshDataFromParts_Params));
	memcpy_s(&InitGestaltMeshDataFromParts_Params.TargetComponent, sizeof(InitGestaltMeshDataFromParts_Params.TargetComponent), &TargetComponent, sizeof(TargetComponent));
	memcpy_s(&InitGestaltMeshDataFromParts_Params.PartMeshNames, sizeof(InitGestaltMeshDataFromParts_Params.PartMeshNames), &PartMeshNames, sizeof(PartMeshNames));

	uFnInitGestaltMeshDataFromParts->iNative = 0;
	uFnInitGestaltMeshDataFromParts->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInitGestaltMeshDataFromParts, &InitGestaltMeshDataFromParts_Params, nullptr);
	uFnInitGestaltMeshDataFromParts->FunctionFlags |= 0x400;
	uFnInitGestaltMeshDataFromParts->iNative = 34535;

	memcpy_s(&PartMeshNames, sizeof(PartMeshNames), &InitGestaltMeshDataFromParts_Params.PartMeshNames, sizeof(InitGestaltMeshDataFromParts_Params.PartMeshNames));
};

// Function GearboxFramework.GFxActorMoviePool.DisplayDebug
// [0x12420000] (FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AHUD*                    HUD                            (CPF_Parm)
// float                          X                              (CPF_Parm)
// float                          out_YL                         (CPF_Parm | CPF_OutParm)
// float                          out_YPos                       (CPF_Parm | CPF_OutParm)

void UGFxActorMoviePool::DisplayDebug(class AHUD* HUD, float X, float& out_YL, float& out_YPos)
{
	static UFunction* uFnDisplayDebug = nullptr;

	if (!uFnDisplayDebug)
	{
		uFnDisplayDebug = UFunction::FindFunction("Function GearboxFramework.GFxActorMoviePool.DisplayDebug");
	}

	UGFxActorMoviePool_execDisplayDebug_Params DisplayDebug_Params;
	memset(&DisplayDebug_Params, 0, sizeof(DisplayDebug_Params));
	memcpy_s(&DisplayDebug_Params.HUD, sizeof(DisplayDebug_Params.HUD), &HUD, sizeof(HUD));
	memcpy_s(&DisplayDebug_Params.X, sizeof(DisplayDebug_Params.X), &X, sizeof(X));
	memcpy_s(&DisplayDebug_Params.out_YL, sizeof(DisplayDebug_Params.out_YL), &out_YL, sizeof(out_YL));
	memcpy_s(&DisplayDebug_Params.out_YPos, sizeof(DisplayDebug_Params.out_YPos), &out_YPos, sizeof(out_YPos));

	this->ProcessEvent(uFnDisplayDebug, &DisplayDebug_Params, nullptr);

	memcpy_s(&out_YL, sizeof(out_YL), &DisplayDebug_Params.out_YL, sizeof(DisplayDebug_Params.out_YL));
	memcpy_s(&out_YPos, sizeof(out_YPos), &DisplayDebug_Params.out_YPos, sizeof(DisplayDebug_Params.out_YPos));
};

// Function GearboxFramework.GFxActorMoviePool.GetPoolName
// [0x12020001] (FUNC_Final | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// int32_t                        Index                          (CPF_Parm)

class FString UGFxActorMoviePool::GetPoolName(int32_t Index)
{
	static UFunction* uFnGetPoolName = nullptr;

	if (!uFnGetPoolName)
	{
		uFnGetPoolName = UFunction::FindFunction("Function GearboxFramework.GFxActorMoviePool.GetPoolName");
	}

	UGFxActorMoviePool_execGetPoolName_Params GetPoolName_Params;
	memset(&GetPoolName_Params, 0, sizeof(GetPoolName_Params));
	memcpy_s(&GetPoolName_Params.Index, sizeof(GetPoolName_Params.Index), &Index, sizeof(Index));

	this->ProcessEvent(uFnGetPoolName, &GetPoolName_Params, nullptr);

	return GetPoolName_Params.ReturnValue;
};

// Function GearboxFramework.GFxActorMoviePool.PoolStyleString
// [0x12020001] (FUNC_Final | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// EGFxMoviePooling               Pooling                        (CPF_Parm)

class FString UGFxActorMoviePool::PoolStyleString(EGFxMoviePooling Pooling)
{
	static UFunction* uFnPoolStyleString = nullptr;

	if (!uFnPoolStyleString)
	{
		uFnPoolStyleString = UFunction::FindFunction("Function GearboxFramework.GFxActorMoviePool.PoolStyleString");
	}

	UGFxActorMoviePool_execPoolStyleString_Params PoolStyleString_Params;
	memset(&PoolStyleString_Params, 0, sizeof(PoolStyleString_Params));
	memcpy_s(&PoolStyleString_Params.Pooling, sizeof(PoolStyleString_Params.Pooling), &Pooling, sizeof(Pooling));

	this->ProcessEvent(uFnPoolStyleString, &PoolStyleString_Params, nullptr);

	return PoolStyleString_Params.ReturnValue;
};

// Function GearboxFramework.GFxActorMoviePool.MovieStateChanged
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35032])
// Parameter Info:
// class UGearboxGFxMovie*        Movie                          (CPF_Parm)

void UGFxActorMoviePool::MovieStateChanged(class UGearboxGFxMovie* Movie)
{
	static UFunction* uFnMovieStateChanged = nullptr;

	if (!uFnMovieStateChanged)
	{
		uFnMovieStateChanged = UFunction::FindFunction("Function GearboxFramework.GFxActorMoviePool.MovieStateChanged");
	}

	UGFxActorMoviePool_execMovieStateChanged_Params MovieStateChanged_Params;
	memset(&MovieStateChanged_Params, 0, sizeof(MovieStateChanged_Params));
	memcpy_s(&MovieStateChanged_Params.Movie, sizeof(MovieStateChanged_Params.Movie), &Movie, sizeof(Movie));

	uFnMovieStateChanged->iNative = 0;
	uFnMovieStateChanged->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnMovieStateChanged, &MovieStateChanged_Params, nullptr);
	uFnMovieStateChanged->FunctionFlags |= 0x400;
	uFnMovieStateChanged->iNative = 35032;
};

// Function GearboxFramework.GFxMovieDefinition.OnSetViewport
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2554])
// Parameter Info:
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UGFxMovieDefinition::OnSetViewport(struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnSetViewport = nullptr;

	if (!uFnOnSetViewport)
	{
		uFnOnSetViewport = UFunction::FindFunction("Function GearboxFramework.GFxMovieDefinition.OnSetViewport");
	}

	UGFxMovieDefinition_execOnSetViewport_Params OnSetViewport_Params;
	memset(&OnSetViewport_Params, 0, sizeof(OnSetViewport_Params));
	memcpy_s(&OnSetViewport_Params.ConsumerHandle, sizeof(OnSetViewport_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnSetViewport->iNative = 0;
	uFnOnSetViewport->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnSetViewport, &OnSetViewport_Params, nullptr);
	uFnOnSetViewport->FunctionFlags |= 0x400;
	uFnOnSetViewport->iNative = 2554;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnSetViewport_Params.ConsumerHandle, sizeof(OnSetViewport_Params.ConsumerHandle));
};

// Function GearboxFramework.GFxMovieDefinition.OnClipUnloaded
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2555])
// Parameter Info:
// class UObject*                 Clip                           (CPF_Parm)
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UGFxMovieDefinition::OnClipUnloaded(class UObject* Clip, struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnClipUnloaded = nullptr;

	if (!uFnOnClipUnloaded)
	{
		uFnOnClipUnloaded = UFunction::FindFunction("Function GearboxFramework.GFxMovieDefinition.OnClipUnloaded");
	}

	UGFxMovieDefinition_execOnClipUnloaded_Params OnClipUnloaded_Params;
	memset(&OnClipUnloaded_Params, 0, sizeof(OnClipUnloaded_Params));
	memcpy_s(&OnClipUnloaded_Params.Clip, sizeof(OnClipUnloaded_Params.Clip), &Clip, sizeof(Clip));
	memcpy_s(&OnClipUnloaded_Params.ConsumerHandle, sizeof(OnClipUnloaded_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnClipUnloaded->iNative = 0;
	uFnOnClipUnloaded->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnClipUnloaded, &OnClipUnloaded_Params, nullptr);
	uFnOnClipUnloaded->FunctionFlags |= 0x400;
	uFnOnClipUnloaded->iNative = 2555;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnClipUnloaded_Params.ConsumerHandle, sizeof(OnClipUnloaded_Params.ConsumerHandle));
};

// Function GearboxFramework.GFxMovieDefinition.OnClipLoaded
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2556])
// Parameter Info:
// class UObject*                 Clip                           (CPF_Parm)
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UGFxMovieDefinition::OnClipLoaded(class UObject* Clip, struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnClipLoaded = nullptr;

	if (!uFnOnClipLoaded)
	{
		uFnOnClipLoaded = UFunction::FindFunction("Function GearboxFramework.GFxMovieDefinition.OnClipLoaded");
	}

	UGFxMovieDefinition_execOnClipLoaded_Params OnClipLoaded_Params;
	memset(&OnClipLoaded_Params, 0, sizeof(OnClipLoaded_Params));
	memcpy_s(&OnClipLoaded_Params.Clip, sizeof(OnClipLoaded_Params.Clip), &Clip, sizeof(Clip));
	memcpy_s(&OnClipLoaded_Params.ConsumerHandle, sizeof(OnClipLoaded_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnClipLoaded->iNative = 0;
	uFnOnClipLoaded->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnClipLoaded, &OnClipLoaded_Params, nullptr);
	uFnOnClipLoaded->FunctionFlags |= 0x400;
	uFnOnClipLoaded->iNative = 2556;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnClipLoaded_Params.ConsumerHandle, sizeof(OnClipLoaded_Params.ConsumerHandle));
};

// Function GearboxFramework.GFxMovieDefinition.OnClose
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2557])
// Parameter Info:
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UGFxMovieDefinition::OnClose(struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnClose = nullptr;

	if (!uFnOnClose)
	{
		uFnOnClose = UFunction::FindFunction("Function GearboxFramework.GFxMovieDefinition.OnClose");
	}

	UGFxMovieDefinition_execOnClose_Params OnClose_Params;
	memset(&OnClose_Params, 0, sizeof(OnClose_Params));
	memcpy_s(&OnClose_Params.ConsumerHandle, sizeof(OnClose_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnClose->iNative = 0;
	uFnOnClose->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnClose, &OnClose_Params, nullptr);
	uFnOnClose->FunctionFlags |= 0x400;
	uFnOnClose->iNative = 2557;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnClose_Params.ConsumerHandle, sizeof(OnClose_Params.ConsumerHandle));
};

// Function GearboxFramework.GFxMovieDefinition.OnStart
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2544])
// Parameter Info:
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UGFxMovieDefinition::OnStart(struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnStart = nullptr;

	if (!uFnOnStart)
	{
		uFnOnStart = UFunction::FindFunction("Function GearboxFramework.GFxMovieDefinition.OnStart");
	}

	UGFxMovieDefinition_execOnStart_Params OnStart_Params;
	memset(&OnStart_Params, 0, sizeof(OnStart_Params));
	memcpy_s(&OnStart_Params.ConsumerHandle, sizeof(OnStart_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnStart->iNative = 0;
	uFnOnStart->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnStart, &OnStart_Params, nullptr);
	uFnOnStart->FunctionFlags |= 0x400;
	uFnOnStart->iNative = 2544;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnStart_Params.ConsumerHandle, sizeof(OnStart_Params.ConsumerHandle));
};

// Function GearboxFramework.GFxMovieDefinition.FindMovieLink
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UGFxMovieDefinition*     ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FName&            MovieName                      (CPF_Parm)

class UGFxMovieDefinition* UGFxMovieDefinition::FindMovieLink(const struct FName& MovieName)
{
	static UFunction* uFnFindMovieLink = nullptr;

	if (!uFnFindMovieLink)
	{
		uFnFindMovieLink = UFunction::FindFunction("Function GearboxFramework.GFxMovieDefinition.FindMovieLink");
	}

	UGFxMovieDefinition_execFindMovieLink_Params FindMovieLink_Params;
	memset(&FindMovieLink_Params, 0, sizeof(FindMovieLink_Params));
	memcpy_s(&FindMovieLink_Params.MovieName, sizeof(FindMovieLink_Params.MovieName), &MovieName, sizeof(MovieName));

	this->ProcessEvent(uFnFindMovieLink, &FindMovieLink_Params, nullptr);

	return FindMovieLink_Params.ReturnValue;
};

// Function GearboxFramework.GFxMovieDefinition.PostMovieStart
// [0x12020001] (FUNC_Final | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UGearboxGFxMovie*        StartedMovie                   (CPF_Parm)

void UGFxMovieDefinition::PostMovieStart(class UGearboxGFxMovie* StartedMovie)
{
	static UFunction* uFnPostMovieStart = nullptr;

	if (!uFnPostMovieStart)
	{
		uFnPostMovieStart = UFunction::FindFunction("Function GearboxFramework.GFxMovieDefinition.PostMovieStart");
	}

	UGFxMovieDefinition_execPostMovieStart_Params PostMovieStart_Params;
	memset(&PostMovieStart_Params, 0, sizeof(PostMovieStart_Params));
	memcpy_s(&PostMovieStart_Params.StartedMovie, sizeof(PostMovieStart_Params.StartedMovie), &StartedMovie, sizeof(StartedMovie));

	this->ProcessEvent(uFnPostMovieStart, &PostMovieStart_Params, nullptr);
};

// Function GearboxFramework.GFxMovieDefinition.SpawnPlayerMovie
// [0x00024400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[36145])
// Parameter Info:
// class UGearboxGFxMovie*        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AGearboxPlayerController* Owner                          (CPF_Parm)
// class UIGFxActorMovie*         TargetActor                    (CPF_Parm)
// class UObject*                 ContextObject                  (CPF_OptionalParm | CPF_Parm)

class UGearboxGFxMovie* UGFxMovieDefinition::SpawnPlayerMovie(class AGearboxPlayerController* Owner, class UIGFxActorMovie* TargetActor, class UObject* ContextObject)
{
	static UFunction* uFnSpawnPlayerMovie = nullptr;

	if (!uFnSpawnPlayerMovie)
	{
		uFnSpawnPlayerMovie = UFunction::FindFunction("Function GearboxFramework.GFxMovieDefinition.SpawnPlayerMovie");
	}

	UGFxMovieDefinition_execSpawnPlayerMovie_Params SpawnPlayerMovie_Params;
	memset(&SpawnPlayerMovie_Params, 0, sizeof(SpawnPlayerMovie_Params));
	memcpy_s(&SpawnPlayerMovie_Params.Owner, sizeof(SpawnPlayerMovie_Params.Owner), &Owner, sizeof(Owner));
	memcpy_s(&SpawnPlayerMovie_Params.TargetActor, sizeof(SpawnPlayerMovie_Params.TargetActor), &TargetActor, sizeof(TargetActor));
	memcpy_s(&SpawnPlayerMovie_Params.ContextObject, sizeof(SpawnPlayerMovie_Params.ContextObject), &ContextObject, sizeof(ContextObject));

	uFnSpawnPlayerMovie->iNative = 0;
	uFnSpawnPlayerMovie->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSpawnPlayerMovie, &SpawnPlayerMovie_Params, nullptr);
	uFnSpawnPlayerMovie->FunctionFlags |= 0x400;
	uFnSpawnPlayerMovie->iNative = 36145;

	return SpawnPlayerMovie_Params.ReturnValue;
};

// Function GearboxFramework.GFxMovieDefinition.SupportsStatePooling
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36347])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGFxMovieDefinition::SupportsStatePooling()
{
	static UFunction* uFnSupportsStatePooling = nullptr;

	if (!uFnSupportsStatePooling)
	{
		uFnSupportsStatePooling = UFunction::FindFunction("Function GearboxFramework.GFxMovieDefinition.SupportsStatePooling");
	}

	UGFxMovieDefinition_execSupportsStatePooling_Params SupportsStatePooling_Params;
	memset(&SupportsStatePooling_Params, 0, sizeof(SupportsStatePooling_Params));

	uFnSupportsStatePooling->iNative = 0;
	uFnSupportsStatePooling->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSupportsStatePooling, &SupportsStatePooling_Params, nullptr);
	uFnSupportsStatePooling->FunctionFlags |= 0x400;
	uFnSupportsStatePooling->iNative = 36347;

	return SupportsStatePooling_Params.ReturnValue;
};

// Function GearboxFramework.GFxMovieDefinition.GetPoolStyle
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34184])
// Parameter Info:
// EGFxMoviePooling               ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

EGFxMoviePooling UGFxMovieDefinition::GetPoolStyle()
{
	static UFunction* uFnGetPoolStyle = nullptr;

	if (!uFnGetPoolStyle)
	{
		uFnGetPoolStyle = UFunction::FindFunction("Function GearboxFramework.GFxMovieDefinition.GetPoolStyle");
	}

	UGFxMovieDefinition_execGetPoolStyle_Params GetPoolStyle_Params;
	memset(&GetPoolStyle_Params, 0, sizeof(GetPoolStyle_Params));

	uFnGetPoolStyle->iNative = 0;
	uFnGetPoolStyle->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetPoolStyle, &GetPoolStyle_Params, nullptr);
	uFnGetPoolStyle->FunctionFlags |= 0x400;
	uFnGetPoolStyle->iNative = 34184;

	return GetPoolStyle_Params.ReturnValue;
};

// Function GearboxFramework.GFxMovieDrawStyle.GetStyleDebugString
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UGFxMovieDrawStyle::GetStyleDebugString()
{
	static UFunction* uFnGetStyleDebugString = nullptr;

	if (!uFnGetStyleDebugString)
	{
		uFnGetStyleDebugString = UFunction::FindFunction("Function GearboxFramework.GFxMovieDrawStyle.GetStyleDebugString");
	}

	UGFxMovieDrawStyle_execGetStyleDebugString_Params GetStyleDebugString_Params;
	memset(&GetStyleDebugString_Params, 0, sizeof(GetStyleDebugString_Params));

	this->ProcessEvent(uFnGetStyleDebugString, &GetStyleDebugString_Params, nullptr);

	return GetStyleDebugString_Params.ReturnValue;
};

// Function GearboxFramework.GFxMovieDrawStyleHUD.RequiresClientInstance
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGFxMovieDrawStyleHUD::eventRequiresClientInstance()
{
	static UFunction* uFnRequiresClientInstance = nullptr;

	if (!uFnRequiresClientInstance)
	{
		uFnRequiresClientInstance = UFunction::FindFunction("Function GearboxFramework.GFxMovieDrawStyleHUD.RequiresClientInstance");
	}

	UGFxMovieDrawStyleHUD_eventRequiresClientInstance_Params RequiresClientInstance_Params;
	memset(&RequiresClientInstance_Params, 0, sizeof(RequiresClientInstance_Params));

	this->ProcessEvent(uFnRequiresClientInstance, &RequiresClientInstance_Params, nullptr);

	return RequiresClientInstance_Params.ReturnValue;
};

// Function GearboxFramework.GFxMovieDrawStyleMesh.GetStyleDebugString
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UGFxMovieDrawStyleMesh::GetStyleDebugString()
{
	static UFunction* uFnGetStyleDebugString = nullptr;

	if (!uFnGetStyleDebugString)
	{
		uFnGetStyleDebugString = UFunction::FindFunction("Function GearboxFramework.GFxMovieDrawStyleMesh.GetStyleDebugString");
	}

	UGFxMovieDrawStyleMesh_execGetStyleDebugString_Params GetStyleDebugString_Params;
	memset(&GetStyleDebugString_Params, 0, sizeof(GetStyleDebugString_Params));

	this->ProcessEvent(uFnGetStyleDebugString, &GetStyleDebugString_Params, nullptr);

	return GetStyleDebugString_Params.ReturnValue;
};

// Function GearboxFramework.GFxMovieDrawStyleMesh.RequiresClientInstance
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGFxMovieDrawStyleMesh::eventRequiresClientInstance()
{
	static UFunction* uFnRequiresClientInstance = nullptr;

	if (!uFnRequiresClientInstance)
	{
		uFnRequiresClientInstance = UFunction::FindFunction("Function GearboxFramework.GFxMovieDrawStyleMesh.RequiresClientInstance");
	}

	UGFxMovieDrawStyleMesh_eventRequiresClientInstance_Params RequiresClientInstance_Params;
	memset(&RequiresClientInstance_Params, 0, sizeof(RequiresClientInstance_Params));

	this->ProcessEvent(uFnRequiresClientInstance, &RequiresClientInstance_Params, nullptr);

	return RequiresClientInstance_Params.ReturnValue;
};

// Function GearboxFramework.GFxMovieDrawStyleInstanceData.RequiresClientInstance
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGFxMovieDrawStyleInstanceData::eventRequiresClientInstance()
{
	static UFunction* uFnRequiresClientInstance = nullptr;

	if (!uFnRequiresClientInstance)
	{
		uFnRequiresClientInstance = UFunction::FindFunction("Function GearboxFramework.GFxMovieDrawStyleInstanceData.RequiresClientInstance");
	}

	UGFxMovieDrawStyleInstanceData_eventRequiresClientInstance_Params RequiresClientInstance_Params;
	memset(&RequiresClientInstance_Params, 0, sizeof(RequiresClientInstance_Params));

	this->ProcessEvent(uFnRequiresClientInstance, &RequiresClientInstance_Params, nullptr);

	return RequiresClientInstance_Params.ReturnValue;
};

// Function GearboxFramework.GFxMovieDrawStyleSplitscreen.RequiresClientInstance
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGFxMovieDrawStyleSplitscreen::eventRequiresClientInstance()
{
	static UFunction* uFnRequiresClientInstance = nullptr;

	if (!uFnRequiresClientInstance)
	{
		uFnRequiresClientInstance = UFunction::FindFunction("Function GearboxFramework.GFxMovieDrawStyleSplitscreen.RequiresClientInstance");
	}

	UGFxMovieDrawStyleSplitscreen_eventRequiresClientInstance_Params RequiresClientInstance_Params;
	memset(&RequiresClientInstance_Params, 0, sizeof(RequiresClientInstance_Params));

	this->ProcessEvent(uFnRequiresClientInstance, &RequiresClientInstance_Params, nullptr);

	return RequiresClientInstance_Params.ReturnValue;
};

// Function GearboxFramework.GFxMovieManager.DisplayDebug
// [0x12420000] (FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AHUD*                    HUD                            (CPF_Parm)
// float                          out_YL                         (CPF_Parm | CPF_OutParm)
// float                          out_YPos                       (CPF_Parm | CPF_OutParm)

void UGFxMovieManager::DisplayDebug(class AHUD* HUD, float& out_YL, float& out_YPos)
{
	static UFunction* uFnDisplayDebug = nullptr;

	if (!uFnDisplayDebug)
	{
		uFnDisplayDebug = UFunction::FindFunction("Function GearboxFramework.GFxMovieManager.DisplayDebug");
	}

	UGFxMovieManager_execDisplayDebug_Params DisplayDebug_Params;
	memset(&DisplayDebug_Params, 0, sizeof(DisplayDebug_Params));
	memcpy_s(&DisplayDebug_Params.HUD, sizeof(DisplayDebug_Params.HUD), &HUD, sizeof(HUD));
	memcpy_s(&DisplayDebug_Params.out_YL, sizeof(DisplayDebug_Params.out_YL), &out_YL, sizeof(out_YL));
	memcpy_s(&DisplayDebug_Params.out_YPos, sizeof(DisplayDebug_Params.out_YPos), &out_YPos, sizeof(out_YPos));

	this->ProcessEvent(uFnDisplayDebug, &DisplayDebug_Params, nullptr);

	memcpy_s(&out_YL, sizeof(out_YL), &DisplayDebug_Params.out_YL, sizeof(DisplayDebug_Params.out_YL));
	memcpy_s(&out_YPos, sizeof(out_YPos), &DisplayDebug_Params.out_YPos, sizeof(DisplayDebug_Params.out_YPos));
};

// Function GearboxFramework.GFxMovieManager.ChangeMovieState
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[32715])
// Parameter Info:
// class UIGFxActorMovie*         TargetActor                    (CPF_Parm)
// const struct FName&            State                          (CPF_Parm)
// EChangeStatus                  Change                         (CPF_Parm)
// class AGearboxPlayerController* PC                             (CPF_OptionalParm | CPF_Parm)

void UGFxMovieManager::ChangeMovieState(class UIGFxActorMovie* TargetActor, const struct FName& State, EChangeStatus Change, class AGearboxPlayerController* PC)
{
	static UFunction* uFnChangeMovieState = nullptr;

	if (!uFnChangeMovieState)
	{
		uFnChangeMovieState = UFunction::FindFunction("Function GearboxFramework.GFxMovieManager.ChangeMovieState");
	}

	UGFxMovieManager_execChangeMovieState_Params ChangeMovieState_Params;
	memset(&ChangeMovieState_Params, 0, sizeof(ChangeMovieState_Params));
	memcpy_s(&ChangeMovieState_Params.TargetActor, sizeof(ChangeMovieState_Params.TargetActor), &TargetActor, sizeof(TargetActor));
	memcpy_s(&ChangeMovieState_Params.State, sizeof(ChangeMovieState_Params.State), &State, sizeof(State));
	memcpy_s(&ChangeMovieState_Params.Change, sizeof(ChangeMovieState_Params.Change), &Change, sizeof(Change));
	memcpy_s(&ChangeMovieState_Params.PC, sizeof(ChangeMovieState_Params.PC), &PC, sizeof(PC));

	uFnChangeMovieState->iNative = 0;
	uFnChangeMovieState->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnChangeMovieState, &ChangeMovieState_Params, nullptr);
	uFnChangeMovieState->FunctionFlags |= 0x400;
	uFnChangeMovieState->iNative = 32715;
};

// Function GearboxFramework.GFxMovieManager.Unsubscribe
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36607])
// Parameter Info:
// class AGearboxPlayerController* PC                             (CPF_Parm)

void UGFxMovieManager::Unsubscribe(class AGearboxPlayerController* PC)
{
	static UFunction* uFnUnsubscribe = nullptr;

	if (!uFnUnsubscribe)
	{
		uFnUnsubscribe = UFunction::FindFunction("Function GearboxFramework.GFxMovieManager.Unsubscribe");
	}

	UGFxMovieManager_execUnsubscribe_Params Unsubscribe_Params;
	memset(&Unsubscribe_Params, 0, sizeof(Unsubscribe_Params));
	memcpy_s(&Unsubscribe_Params.PC, sizeof(Unsubscribe_Params.PC), &PC, sizeof(PC));

	uFnUnsubscribe->iNative = 0;
	uFnUnsubscribe->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnUnsubscribe, &Unsubscribe_Params, nullptr);
	uFnUnsubscribe->FunctionFlags |= 0x400;
	uFnUnsubscribe->iNative = 36607;
};

// Function GearboxFramework.GFxMovieManager.Subscribe
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36332])
// Parameter Info:
// class AGearboxPlayerController* PC                             (CPF_Parm)

void UGFxMovieManager::Subscribe(class AGearboxPlayerController* PC)
{
	static UFunction* uFnSubscribe = nullptr;

	if (!uFnSubscribe)
	{
		uFnSubscribe = UFunction::FindFunction("Function GearboxFramework.GFxMovieManager.Subscribe");
	}

	UGFxMovieManager_execSubscribe_Params Subscribe_Params;
	memset(&Subscribe_Params, 0, sizeof(Subscribe_Params));
	memcpy_s(&Subscribe_Params.PC, sizeof(Subscribe_Params.PC), &PC, sizeof(PC));

	uFnSubscribe->iNative = 0;
	uFnSubscribe->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSubscribe, &Subscribe_Params, nullptr);
	uFnSubscribe->FunctionFlags |= 0x400;
	uFnSubscribe->iNative = 36332;
};

// Function GearboxFramework.GFxMovieManager.UnregisterMoviesDrawnTo
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36604])
// Parameter Info:
// class UPrimitiveComponent*     PrimComp                       (CPF_Parm | CPF_EditInline)
// class UIGFxActorMovie*         TargetActor                    (CPF_Parm)

void UGFxMovieManager::UnregisterMoviesDrawnTo(class UPrimitiveComponent* PrimComp, class UIGFxActorMovie* TargetActor)
{
	static UFunction* uFnUnregisterMoviesDrawnTo = nullptr;

	if (!uFnUnregisterMoviesDrawnTo)
	{
		uFnUnregisterMoviesDrawnTo = UFunction::FindFunction("Function GearboxFramework.GFxMovieManager.UnregisterMoviesDrawnTo");
	}

	UGFxMovieManager_execUnregisterMoviesDrawnTo_Params UnregisterMoviesDrawnTo_Params;
	memset(&UnregisterMoviesDrawnTo_Params, 0, sizeof(UnregisterMoviesDrawnTo_Params));
	memcpy_s(&UnregisterMoviesDrawnTo_Params.PrimComp, sizeof(UnregisterMoviesDrawnTo_Params.PrimComp), &PrimComp, sizeof(PrimComp));
	memcpy_s(&UnregisterMoviesDrawnTo_Params.TargetActor, sizeof(UnregisterMoviesDrawnTo_Params.TargetActor), &TargetActor, sizeof(TargetActor));

	uFnUnregisterMoviesDrawnTo->iNative = 0;
	uFnUnregisterMoviesDrawnTo->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnUnregisterMoviesDrawnTo, &UnregisterMoviesDrawnTo_Params, nullptr);
	uFnUnregisterMoviesDrawnTo->FunctionFlags |= 0x400;
	uFnUnregisterMoviesDrawnTo->iNative = 36604;
};

// Function GearboxFramework.GFxMovieManager.UnregisterTarget
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36606])
// Parameter Info:
// class UIGFxActorMovie*         TargetActor                    (CPF_Parm)

void UGFxMovieManager::UnregisterTarget(class UIGFxActorMovie* TargetActor)
{
	static UFunction* uFnUnregisterTarget = nullptr;

	if (!uFnUnregisterTarget)
	{
		uFnUnregisterTarget = UFunction::FindFunction("Function GearboxFramework.GFxMovieManager.UnregisterTarget");
	}

	UGFxMovieManager_execUnregisterTarget_Params UnregisterTarget_Params;
	memset(&UnregisterTarget_Params, 0, sizeof(UnregisterTarget_Params));
	memcpy_s(&UnregisterTarget_Params.TargetActor, sizeof(UnregisterTarget_Params.TargetActor), &TargetActor, sizeof(TargetActor));

	uFnUnregisterTarget->iNative = 0;
	uFnUnregisterTarget->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnUnregisterTarget, &UnregisterTarget_Params, nullptr);
	uFnUnregisterTarget->FunctionFlags |= 0x400;
	uFnUnregisterTarget->iNative = 36606;
};

// Function GearboxFramework.GFxMovieManager.UnregisterMovie
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36603])
// Parameter Info:
// class UGFxMovieDefinition*     Definition                     (CPF_Parm)
// class UIGFxActorMovie*         TargetActor                    (CPF_Parm)

void UGFxMovieManager::UnregisterMovie(class UGFxMovieDefinition* Definition, class UIGFxActorMovie* TargetActor)
{
	static UFunction* uFnUnregisterMovie = nullptr;

	if (!uFnUnregisterMovie)
	{
		uFnUnregisterMovie = UFunction::FindFunction("Function GearboxFramework.GFxMovieManager.UnregisterMovie");
	}

	UGFxMovieManager_execUnregisterMovie_Params UnregisterMovie_Params;
	memset(&UnregisterMovie_Params, 0, sizeof(UnregisterMovie_Params));
	memcpy_s(&UnregisterMovie_Params.Definition, sizeof(UnregisterMovie_Params.Definition), &Definition, sizeof(Definition));
	memcpy_s(&UnregisterMovie_Params.TargetActor, sizeof(UnregisterMovie_Params.TargetActor), &TargetActor, sizeof(TargetActor));

	uFnUnregisterMovie->iNative = 0;
	uFnUnregisterMovie->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnUnregisterMovie, &UnregisterMovie_Params, nullptr);
	uFnUnregisterMovie->FunctionFlags |= 0x400;
	uFnUnregisterMovie->iNative = 36603;
};

// Function GearboxFramework.GFxMovieManager.RegisterMovie
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35639])
// Parameter Info:
// class UGFxMovieDefinition*     Definition                     (CPF_Parm)
// class UIGFxActorMovie*         TargetActor                    (CPF_Parm)

void UGFxMovieManager::RegisterMovie(class UGFxMovieDefinition* Definition, class UIGFxActorMovie* TargetActor)
{
	static UFunction* uFnRegisterMovie = nullptr;

	if (!uFnRegisterMovie)
	{
		uFnRegisterMovie = UFunction::FindFunction("Function GearboxFramework.GFxMovieManager.RegisterMovie");
	}

	UGFxMovieManager_execRegisterMovie_Params RegisterMovie_Params;
	memset(&RegisterMovie_Params, 0, sizeof(RegisterMovie_Params));
	memcpy_s(&RegisterMovie_Params.Definition, sizeof(RegisterMovie_Params.Definition), &Definition, sizeof(Definition));
	memcpy_s(&RegisterMovie_Params.TargetActor, sizeof(RegisterMovie_Params.TargetActor), &TargetActor, sizeof(TargetActor));

	uFnRegisterMovie->iNative = 0;
	uFnRegisterMovie->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRegisterMovie, &RegisterMovie_Params, nullptr);
	uFnRegisterMovie->FunctionFlags |= 0x400;
	uFnRegisterMovie->iNative = 35639;
};

// Function GearboxFramework.GFxMovieState.GetDebugString
// [0x12024000] (FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class UGearboxGFxMovie*        Movie                          (CPF_Parm)
// bool                           bIncludeFlags                  (CPF_OptionalParm | CPF_Parm)

class FString UGFxMovieState::GetDebugString(class UGearboxGFxMovie* Movie, bool bIncludeFlags)
{
	static UFunction* uFnGetDebugString = nullptr;

	if (!uFnGetDebugString)
	{
		uFnGetDebugString = UFunction::FindFunction("Function GearboxFramework.GFxMovieState.GetDebugString");
	}

	UGFxMovieState_execGetDebugString_Params GetDebugString_Params;
	memset(&GetDebugString_Params, 0, sizeof(GetDebugString_Params));
	memcpy_s(&GetDebugString_Params.Movie, sizeof(GetDebugString_Params.Movie), &Movie, sizeof(Movie));
	GetDebugString_Params.bIncludeFlags = bIncludeFlags;

	this->ProcessEvent(uFnGetDebugString, &GetDebugString_Params, nullptr);

	return GetDebugString_Params.ReturnValue;
};

// Function GearboxFramework.GFxMovieState.ApplyMovieState
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UGearboxGFxMovie*        Movie                          (CPF_Parm)
// class UClass*                  HandlerClass                   (CPF_Parm)

void UGFxMovieState::ApplyMovieState(class UGearboxGFxMovie* Movie, class UClass* HandlerClass)
{
	static UFunction* uFnApplyMovieState = nullptr;

	if (!uFnApplyMovieState)
	{
		uFnApplyMovieState = UFunction::FindFunction("Function GearboxFramework.GFxMovieState.ApplyMovieState");
	}

	UGFxMovieState_execApplyMovieState_Params ApplyMovieState_Params;
	memset(&ApplyMovieState_Params, 0, sizeof(ApplyMovieState_Params));
	memcpy_s(&ApplyMovieState_Params.Movie, sizeof(ApplyMovieState_Params.Movie), &Movie, sizeof(Movie));
	memcpy_s(&ApplyMovieState_Params.HandlerClass, sizeof(ApplyMovieState_Params.HandlerClass), &HandlerClass, sizeof(HandlerClass));

	this->ProcessEvent(uFnApplyMovieState, &ApplyMovieState_Params, nullptr);
};

// Function GearboxFramework.GFxMovieState.FindMovieState
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[33814])
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FName&            TheState                       (CPF_Parm)

int32_t UGFxMovieState::FindMovieState(const struct FName& TheState)
{
	static UFunction* uFnFindMovieState = nullptr;

	if (!uFnFindMovieState)
	{
		uFnFindMovieState = UFunction::FindFunction("Function GearboxFramework.GFxMovieState.FindMovieState");
	}

	UGFxMovieState_execFindMovieState_Params FindMovieState_Params;
	memset(&FindMovieState_Params, 0, sizeof(FindMovieState_Params));
	memcpy_s(&FindMovieState_Params.TheState, sizeof(FindMovieState_Params.TheState), &TheState, sizeof(TheState));

	uFnFindMovieState->iNative = 0;
	uFnFindMovieState->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnFindMovieState, &FindMovieState_Params, nullptr);
	uFnFindMovieState->FunctionFlags |= 0x400;
	uFnFindMovieState->iNative = 33814;

	return FindMovieState_Params.ReturnValue;
};

// Function GearboxFramework.GFxMovieState.TestState
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[16618])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FName&            TheState                       (CPF_Parm)
// struct FMovieStateStruct       MovieState                     (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UGFxMovieState::TestState(const struct FName& TheState, struct FMovieStateStruct& MovieState)
{
	static UFunction* uFnTestState = nullptr;

	if (!uFnTestState)
	{
		uFnTestState = UFunction::FindFunction("Function GearboxFramework.GFxMovieState.TestState");
	}

	UGFxMovieState_execTestState_Params TestState_Params;
	memset(&TestState_Params, 0, sizeof(TestState_Params));
	memcpy_s(&TestState_Params.TheState, sizeof(TestState_Params.TheState), &TheState, sizeof(TheState));
	memcpy_s(&TestState_Params.MovieState, sizeof(TestState_Params.MovieState), &MovieState, sizeof(MovieState));

	uFnTestState->iNative = 0;
	uFnTestState->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnTestState, &TestState_Params, nullptr);
	uFnTestState->FunctionFlags |= 0x400;
	uFnTestState->iNative = 16618;

	memcpy_s(&MovieState, sizeof(MovieState), &TestState_Params.MovieState, sizeof(TestState_Params.MovieState));

	return TestState_Params.ReturnValue;
};

// Function GearboxFramework.GFxMovieState.ToggleState
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[36537])
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FName&            TheState                       (CPF_Parm)
// struct FMovieStateStruct       MovieState                     (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

int32_t UGFxMovieState::ToggleState(const struct FName& TheState, struct FMovieStateStruct& MovieState)
{
	static UFunction* uFnToggleState = nullptr;

	if (!uFnToggleState)
	{
		uFnToggleState = UFunction::FindFunction("Function GearboxFramework.GFxMovieState.ToggleState");
	}

	UGFxMovieState_execToggleState_Params ToggleState_Params;
	memset(&ToggleState_Params, 0, sizeof(ToggleState_Params));
	memcpy_s(&ToggleState_Params.TheState, sizeof(ToggleState_Params.TheState), &TheState, sizeof(TheState));
	memcpy_s(&ToggleState_Params.MovieState, sizeof(ToggleState_Params.MovieState), &MovieState, sizeof(MovieState));

	uFnToggleState->iNative = 0;
	uFnToggleState->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnToggleState, &ToggleState_Params, nullptr);
	uFnToggleState->FunctionFlags |= 0x400;
	uFnToggleState->iNative = 36537;

	memcpy_s(&MovieState, sizeof(MovieState), &ToggleState_Params.MovieState, sizeof(ToggleState_Params.MovieState));

	return ToggleState_Params.ReturnValue;
};

// Function GearboxFramework.GFxMovieState.EnableState
// [0x00424400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[33541])
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FName&            TheState                       (CPF_Parm)
// bool                           bEnable                        (CPF_OptionalParm | CPF_Parm)
// struct FMovieStateStruct       MovieState                     (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

int32_t UGFxMovieState::EnableState(const struct FName& TheState, bool bEnable, struct FMovieStateStruct& MovieState)
{
	static UFunction* uFnEnableState = nullptr;

	if (!uFnEnableState)
	{
		uFnEnableState = UFunction::FindFunction("Function GearboxFramework.GFxMovieState.EnableState");
	}

	UGFxMovieState_execEnableState_Params EnableState_Params;
	memset(&EnableState_Params, 0, sizeof(EnableState_Params));
	memcpy_s(&EnableState_Params.TheState, sizeof(EnableState_Params.TheState), &TheState, sizeof(TheState));
	EnableState_Params.bEnable = bEnable;
	memcpy_s(&EnableState_Params.MovieState, sizeof(EnableState_Params.MovieState), &MovieState, sizeof(MovieState));

	uFnEnableState->iNative = 0;
	uFnEnableState->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnEnableState, &EnableState_Params, nullptr);
	uFnEnableState->FunctionFlags |= 0x400;
	uFnEnableState->iNative = 33541;

	memcpy_s(&MovieState, sizeof(MovieState), &EnableState_Params.MovieState, sizeof(EnableState_Params.MovieState));

	return EnableState_Params.ReturnValue;
};

// Function GearboxFramework.GFxMovieStatePlayerAware.EnableState
// [0x00424400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[33541])
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FName&            TheState                       (CPF_Parm)
// bool                           bEnable                        (CPF_OptionalParm | CPF_Parm)
// struct FMovieStateStruct       MovieState                     (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

int32_t UGFxMovieStatePlayerAware::EnableState(const struct FName& TheState, bool bEnable, struct FMovieStateStruct& MovieState)
{
	static UFunction* uFnEnableState = nullptr;

	if (!uFnEnableState)
	{
		uFnEnableState = UFunction::FindFunction("Function GearboxFramework.GFxMovieStatePlayerAware.EnableState");
	}

	UGFxMovieStatePlayerAware_execEnableState_Params EnableState_Params;
	memset(&EnableState_Params, 0, sizeof(EnableState_Params));
	memcpy_s(&EnableState_Params.TheState, sizeof(EnableState_Params.TheState), &TheState, sizeof(TheState));
	EnableState_Params.bEnable = bEnable;
	memcpy_s(&EnableState_Params.MovieState, sizeof(EnableState_Params.MovieState), &MovieState, sizeof(MovieState));

	uFnEnableState->iNative = 0;
	uFnEnableState->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnEnableState, &EnableState_Params, nullptr);
	uFnEnableState->FunctionFlags |= 0x400;
	uFnEnableState->iNative = 33541;

	memcpy_s(&MovieState, sizeof(MovieState), &EnableState_Params.MovieState, sizeof(EnableState_Params.MovieState));

	return EnableState_Params.ReturnValue;
};

// Function GearboxFramework.GFxUIAction_Base.RunAction
// [0x00024400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[35793])
// Parameter Info:
// class UGFxObject*              Target                         (CPF_Parm)
// const class TArray<struct FGFxUIActionParam>& OptParams                      (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UGFxUIAction_Base::RunAction(class UGFxObject* Target, const class TArray<struct FGFxUIActionParam>& OptParams)
{
	static UFunction* uFnRunAction = nullptr;

	if (!uFnRunAction)
	{
		uFnRunAction = UFunction::FindFunction("Function GearboxFramework.GFxUIAction_Base.RunAction");
	}

	UGFxUIAction_Base_execRunAction_Params RunAction_Params;
	memset(&RunAction_Params, 0, sizeof(RunAction_Params));
	memcpy_s(&RunAction_Params.Target, sizeof(RunAction_Params.Target), &Target, sizeof(Target));
	memcpy_s(&RunAction_Params.OptParams, sizeof(RunAction_Params.OptParams), &OptParams, sizeof(OptParams));

	uFnRunAction->iNative = 0;
	uFnRunAction->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRunAction, &RunAction_Params, nullptr);
	uFnRunAction->FunctionFlags |= 0x400;
	uFnRunAction->iNative = 35793;
};

// Function GearboxFramework.GFxUIAction_ApplyLayout.RunAction
// [0x00024400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[35793])
// Parameter Info:
// class UGFxObject*              Target                         (CPF_Parm)
// const class TArray<struct FGFxUIActionParam>& OptParams                      (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UGFxUIAction_ApplyLayout::RunAction(class UGFxObject* Target, const class TArray<struct FGFxUIActionParam>& OptParams)
{
	static UFunction* uFnRunAction = nullptr;

	if (!uFnRunAction)
	{
		uFnRunAction = UFunction::FindFunction("Function GearboxFramework.GFxUIAction_ApplyLayout.RunAction");
	}

	UGFxUIAction_ApplyLayout_execRunAction_Params RunAction_Params;
	memset(&RunAction_Params, 0, sizeof(RunAction_Params));
	memcpy_s(&RunAction_Params.Target, sizeof(RunAction_Params.Target), &Target, sizeof(Target));
	memcpy_s(&RunAction_Params.OptParams, sizeof(RunAction_Params.OptParams), &OptParams, sizeof(OptParams));

	uFnRunAction->iNative = 0;
	uFnRunAction->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRunAction, &RunAction_Params, nullptr);
	uFnRunAction->FunctionFlags |= 0x400;
	uFnRunAction->iNative = 35793;
};

// Function GearboxFramework.GFxUIAction_ApplyLayoutToAll.RunAction
// [0x00024400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[35793])
// Parameter Info:
// class UGFxObject*              Target                         (CPF_Parm)
// const class TArray<struct FGFxUIActionParam>& OptParams                      (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UGFxUIAction_ApplyLayoutToAll::RunAction(class UGFxObject* Target, const class TArray<struct FGFxUIActionParam>& OptParams)
{
	static UFunction* uFnRunAction = nullptr;

	if (!uFnRunAction)
	{
		uFnRunAction = UFunction::FindFunction("Function GearboxFramework.GFxUIAction_ApplyLayoutToAll.RunAction");
	}

	UGFxUIAction_ApplyLayoutToAll_execRunAction_Params RunAction_Params;
	memset(&RunAction_Params, 0, sizeof(RunAction_Params));
	memcpy_s(&RunAction_Params.Target, sizeof(RunAction_Params.Target), &Target, sizeof(Target));
	memcpy_s(&RunAction_Params.OptParams, sizeof(RunAction_Params.OptParams), &OptParams, sizeof(OptParams));

	uFnRunAction->iNative = 0;
	uFnRunAction->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRunAction, &RunAction_Params, nullptr);
	uFnRunAction->FunctionFlags |= 0x400;
	uFnRunAction->iNative = 35793;
};

// Function GearboxFramework.GFxUIAction_Attach.ClearAttachedClip
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32747])
// Parameter Info:

void UGFxUIAction_Attach::ClearAttachedClip()
{
	static UFunction* uFnClearAttachedClip = nullptr;

	if (!uFnClearAttachedClip)
	{
		uFnClearAttachedClip = UFunction::FindFunction("Function GearboxFramework.GFxUIAction_Attach.ClearAttachedClip");
	}

	UGFxUIAction_Attach_execClearAttachedClip_Params ClearAttachedClip_Params;
	memset(&ClearAttachedClip_Params, 0, sizeof(ClearAttachedClip_Params));

	uFnClearAttachedClip->iNative = 0;
	uFnClearAttachedClip->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnClearAttachedClip, &ClearAttachedClip_Params, nullptr);
	uFnClearAttachedClip->FunctionFlags |= 0x400;
	uFnClearAttachedClip->iNative = 32747;
};

// Function GearboxFramework.GFxUIAction_Attach.GetAttachedClip
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34046])
// Parameter Info:
// class UGFxObject*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UGFxObject* UGFxUIAction_Attach::GetAttachedClip()
{
	static UFunction* uFnGetAttachedClip = nullptr;

	if (!uFnGetAttachedClip)
	{
		uFnGetAttachedClip = UFunction::FindFunction("Function GearboxFramework.GFxUIAction_Attach.GetAttachedClip");
	}

	UGFxUIAction_Attach_execGetAttachedClip_Params GetAttachedClip_Params;
	memset(&GetAttachedClip_Params, 0, sizeof(GetAttachedClip_Params));

	uFnGetAttachedClip->iNative = 0;
	uFnGetAttachedClip->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAttachedClip, &GetAttachedClip_Params, nullptr);
	uFnGetAttachedClip->FunctionFlags |= 0x400;
	uFnGetAttachedClip->iNative = 34046;

	return GetAttachedClip_Params.ReturnValue;
};

// Function GearboxFramework.GFxUIAction_Attach.RunAction
// [0x00024400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[35793])
// Parameter Info:
// class UGFxObject*              Target                         (CPF_Parm)
// const class TArray<struct FGFxUIActionParam>& OptParams                      (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UGFxUIAction_Attach::RunAction(class UGFxObject* Target, const class TArray<struct FGFxUIActionParam>& OptParams)
{
	static UFunction* uFnRunAction = nullptr;

	if (!uFnRunAction)
	{
		uFnRunAction = UFunction::FindFunction("Function GearboxFramework.GFxUIAction_Attach.RunAction");
	}

	UGFxUIAction_Attach_execRunAction_Params RunAction_Params;
	memset(&RunAction_Params, 0, sizeof(RunAction_Params));
	memcpy_s(&RunAction_Params.Target, sizeof(RunAction_Params.Target), &Target, sizeof(Target));
	memcpy_s(&RunAction_Params.OptParams, sizeof(RunAction_Params.OptParams), &OptParams, sizeof(OptParams));

	uFnRunAction->iNative = 0;
	uFnRunAction->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRunAction, &RunAction_Params, nullptr);
	uFnRunAction->FunctionFlags |= 0x400;
	uFnRunAction->iNative = 35793;
};

// Function GearboxFramework.GFxUIAction_Move.RunAction
// [0x00024400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[35793])
// Parameter Info:
// class UGFxObject*              Target                         (CPF_Parm)
// const class TArray<struct FGFxUIActionParam>& OptParams                      (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UGFxUIAction_Move::RunAction(class UGFxObject* Target, const class TArray<struct FGFxUIActionParam>& OptParams)
{
	static UFunction* uFnRunAction = nullptr;

	if (!uFnRunAction)
	{
		uFnRunAction = UFunction::FindFunction("Function GearboxFramework.GFxUIAction_Move.RunAction");
	}

	UGFxUIAction_Move_execRunAction_Params RunAction_Params;
	memset(&RunAction_Params, 0, sizeof(RunAction_Params));
	memcpy_s(&RunAction_Params.Target, sizeof(RunAction_Params.Target), &Target, sizeof(Target));
	memcpy_s(&RunAction_Params.OptParams, sizeof(RunAction_Params.OptParams), &OptParams, sizeof(OptParams));

	uFnRunAction->iNative = 0;
	uFnRunAction->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRunAction, &RunAction_Params, nullptr);
	uFnRunAction->FunctionFlags |= 0x400;
	uFnRunAction->iNative = 35793;
};

// Function GearboxFramework.GFxUIAction_Remove.RunAction
// [0x00024400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[35793])
// Parameter Info:
// class UGFxObject*              Target                         (CPF_Parm)
// const class TArray<struct FGFxUIActionParam>& OptParams                      (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UGFxUIAction_Remove::RunAction(class UGFxObject* Target, const class TArray<struct FGFxUIActionParam>& OptParams)
{
	static UFunction* uFnRunAction = nullptr;

	if (!uFnRunAction)
	{
		uFnRunAction = UFunction::FindFunction("Function GearboxFramework.GFxUIAction_Remove.RunAction");
	}

	UGFxUIAction_Remove_execRunAction_Params RunAction_Params;
	memset(&RunAction_Params, 0, sizeof(RunAction_Params));
	memcpy_s(&RunAction_Params.Target, sizeof(RunAction_Params.Target), &Target, sizeof(Target));
	memcpy_s(&RunAction_Params.OptParams, sizeof(RunAction_Params.OptParams), &OptParams, sizeof(OptParams));

	uFnRunAction->iNative = 0;
	uFnRunAction->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRunAction, &RunAction_Params, nullptr);
	uFnRunAction->FunctionFlags |= 0x400;
	uFnRunAction->iNative = 35793;
};

// Function GearboxFramework.GFxUIAction_RemoveAll.RunAction
// [0x00024400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[35793])
// Parameter Info:
// class UGFxObject*              Target                         (CPF_Parm)
// const class TArray<struct FGFxUIActionParam>& OptParams                      (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UGFxUIAction_RemoveAll::RunAction(class UGFxObject* Target, const class TArray<struct FGFxUIActionParam>& OptParams)
{
	static UFunction* uFnRunAction = nullptr;

	if (!uFnRunAction)
	{
		uFnRunAction = UFunction::FindFunction("Function GearboxFramework.GFxUIAction_RemoveAll.RunAction");
	}

	UGFxUIAction_RemoveAll_execRunAction_Params RunAction_Params;
	memset(&RunAction_Params, 0, sizeof(RunAction_Params));
	memcpy_s(&RunAction_Params.Target, sizeof(RunAction_Params.Target), &Target, sizeof(Target));
	memcpy_s(&RunAction_Params.OptParams, sizeof(RunAction_Params.OptParams), &OptParams, sizeof(OptParams));

	uFnRunAction->iNative = 0;
	uFnRunAction->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRunAction, &RunAction_Params, nullptr);
	uFnRunAction->FunctionFlags |= 0x400;
	uFnRunAction->iNative = 35793;
};

// Function GearboxFramework.GFxUIAction_SetString.RunAction
// [0x00024400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[35793])
// Parameter Info:
// class UGFxObject*              Target                         (CPF_Parm)
// const class TArray<struct FGFxUIActionParam>& OptParams                      (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UGFxUIAction_SetString::RunAction(class UGFxObject* Target, const class TArray<struct FGFxUIActionParam>& OptParams)
{
	static UFunction* uFnRunAction = nullptr;

	if (!uFnRunAction)
	{
		uFnRunAction = UFunction::FindFunction("Function GearboxFramework.GFxUIAction_SetString.RunAction");
	}

	UGFxUIAction_SetString_execRunAction_Params RunAction_Params;
	memset(&RunAction_Params, 0, sizeof(RunAction_Params));
	memcpy_s(&RunAction_Params.Target, sizeof(RunAction_Params.Target), &Target, sizeof(Target));
	memcpy_s(&RunAction_Params.OptParams, sizeof(RunAction_Params.OptParams), &OptParams, sizeof(OptParams));

	uFnRunAction->iNative = 0;
	uFnRunAction->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRunAction, &RunAction_Params, nullptr);
	uFnRunAction->FunctionFlags |= 0x400;
	uFnRunAction->iNative = 35793;
};

// Function GearboxFramework.GFxUIAction_TargetGFxTagBase.RunAction
// [0x00024400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[35793])
// Parameter Info:
// class UGFxObject*              Target                         (CPF_Parm)
// const class TArray<struct FGFxUIActionParam>& OptParams                      (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UGFxUIAction_TargetGFxTagBase::RunAction(class UGFxObject* Target, const class TArray<struct FGFxUIActionParam>& OptParams)
{
	static UFunction* uFnRunAction = nullptr;

	if (!uFnRunAction)
	{
		uFnRunAction = UFunction::FindFunction("Function GearboxFramework.GFxUIAction_TargetGFxTagBase.RunAction");
	}

	UGFxUIAction_TargetGFxTagBase_execRunAction_Params RunAction_Params;
	memset(&RunAction_Params, 0, sizeof(RunAction_Params));
	memcpy_s(&RunAction_Params.Target, sizeof(RunAction_Params.Target), &Target, sizeof(Target));
	memcpy_s(&RunAction_Params.OptParams, sizeof(RunAction_Params.OptParams), &OptParams, sizeof(OptParams));

	uFnRunAction->iNative = 0;
	uFnRunAction->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRunAction, &RunAction_Params, nullptr);
	uFnRunAction->FunctionFlags |= 0x400;
	uFnRunAction->iNative = 35793;
};

// Function GearboxFramework.GFxUIAction_ToggleGFxTagVisibility.RunAction
// [0x00024400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[35793])
// Parameter Info:
// class UGFxObject*              Target                         (CPF_Parm)
// const class TArray<struct FGFxUIActionParam>& OptParams                      (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UGFxUIAction_ToggleGFxTagVisibility::RunAction(class UGFxObject* Target, const class TArray<struct FGFxUIActionParam>& OptParams)
{
	static UFunction* uFnRunAction = nullptr;

	if (!uFnRunAction)
	{
		uFnRunAction = UFunction::FindFunction("Function GearboxFramework.GFxUIAction_ToggleGFxTagVisibility.RunAction");
	}

	UGFxUIAction_ToggleGFxTagVisibility_execRunAction_Params RunAction_Params;
	memset(&RunAction_Params, 0, sizeof(RunAction_Params));
	memcpy_s(&RunAction_Params.Target, sizeof(RunAction_Params.Target), &Target, sizeof(Target));
	memcpy_s(&RunAction_Params.OptParams, sizeof(RunAction_Params.OptParams), &OptParams, sizeof(OptParams));

	uFnRunAction->iNative = 0;
	uFnRunAction->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRunAction, &RunAction_Params, nullptr);
	uFnRunAction->FunctionFlags |= 0x400;
	uFnRunAction->iNative = 35793;
};

// Function GearboxFramework.IAIInterface.GetAIChild
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34032])
// Parameter Info:
// class UIAIInterface*           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        ChildIdx                       (CPF_Const | CPF_Parm)

class UIAIInterface* UIAIInterface::GetAIChild(int32_t ChildIdx)
{
	static UFunction* uFnGetAIChild = nullptr;

	if (!uFnGetAIChild)
	{
		uFnGetAIChild = UFunction::FindFunction("Function GearboxFramework.IAIInterface.GetAIChild");
	}

	UIAIInterface_execGetAIChild_Params GetAIChild_Params;
	memset(&GetAIChild_Params, 0, sizeof(GetAIChild_Params));
	memcpy_s(&GetAIChild_Params.ChildIdx, sizeof(GetAIChild_Params.ChildIdx), &ChildIdx, sizeof(ChildIdx));

	uFnGetAIChild->iNative = 0;
	uFnGetAIChild->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAIChild, &GetAIChild_Params, nullptr);
	uFnGetAIChild->FunctionFlags |= 0x400;
	uFnGetAIChild->iNative = 34032;

	return GetAIChild_Params.ReturnValue;
};

// Function GearboxFramework.IAIInterface.GetNumAIChildren
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34150])
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

int32_t UIAIInterface::GetNumAIChildren()
{
	static UFunction* uFnGetNumAIChildren = nullptr;

	if (!uFnGetNumAIChildren)
	{
		uFnGetNumAIChildren = UFunction::FindFunction("Function GearboxFramework.IAIInterface.GetNumAIChildren");
	}

	UIAIInterface_execGetNumAIChildren_Params GetNumAIChildren_Params;
	memset(&GetNumAIChildren_Params, 0, sizeof(GetNumAIChildren_Params));

	uFnGetNumAIChildren->iNative = 0;
	uFnGetNumAIChildren->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetNumAIChildren, &GetNumAIChildren_Params, nullptr);
	uFnGetNumAIChildren->FunctionFlags |= 0x400;
	uFnGetNumAIChildren->iNative = 34150;

	return GetNumAIChildren_Params.ReturnValue;
};

// Function GearboxFramework.IAIInterface.InitSequence
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34561])
// Parameter Info:
// class UActionSequence*         NewSequence                    (CPF_Parm)

void UIAIInterface::InitSequence(class UActionSequence* NewSequence)
{
	static UFunction* uFnInitSequence = nullptr;

	if (!uFnInitSequence)
	{
		uFnInitSequence = UFunction::FindFunction("Function GearboxFramework.IAIInterface.InitSequence");
	}

	UIAIInterface_execInitSequence_Params InitSequence_Params;
	memset(&InitSequence_Params, 0, sizeof(InitSequence_Params));
	memcpy_s(&InitSequence_Params.NewSequence, sizeof(InitSequence_Params.NewSequence), &NewSequence, sizeof(NewSequence));

	uFnInitSequence->iNative = 0;
	uFnInitSequence->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInitSequence, &InitSequence_Params, nullptr);
	uFnInitSequence->FunctionFlags |= 0x400;
	uFnInitSequence->iNative = 34561;
};

// Function GearboxFramework.IAIInterface.GetAllegiance
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34040])
// Parameter Info:
// class UPawnAllegiance*         ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UPawnAllegiance* UIAIInterface::GetAllegiance()
{
	static UFunction* uFnGetAllegiance = nullptr;

	if (!uFnGetAllegiance)
	{
		uFnGetAllegiance = UFunction::FindFunction("Function GearboxFramework.IAIInterface.GetAllegiance");
	}

	UIAIInterface_execGetAllegiance_Params GetAllegiance_Params;
	memset(&GetAllegiance_Params, 0, sizeof(GetAllegiance_Params));

	uFnGetAllegiance->iNative = 0;
	uFnGetAllegiance->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAllegiance, &GetAllegiance_Params, nullptr);
	uFnGetAllegiance->FunctionFlags |= 0x400;
	uFnGetAllegiance->iNative = 34040;

	return GetAllegiance_Params.ReturnValue;
};

// Function GearboxFramework.IAIInterface.GetAIDefinition
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34034])
// Parameter Info:
// class UAIDefinition*           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UAIDefinition* UIAIInterface::GetAIDefinition()
{
	static UFunction* uFnGetAIDefinition = nullptr;

	if (!uFnGetAIDefinition)
	{
		uFnGetAIDefinition = UFunction::FindFunction("Function GearboxFramework.IAIInterface.GetAIDefinition");
	}

	UIAIInterface_execGetAIDefinition_Params GetAIDefinition_Params;
	memset(&GetAIDefinition_Params, 0, sizeof(GetAIDefinition_Params));

	uFnGetAIDefinition->iNative = 0;
	uFnGetAIDefinition->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAIDefinition, &GetAIDefinition_Params, nullptr);
	uFnGetAIDefinition->FunctionFlags |= 0x400;
	uFnGetAIDefinition->iNative = 34034;

	return GetAIDefinition_Params.ReturnValue;
};

// Function GearboxFramework.IAIInterface.SetAIComponent
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35883])
// Parameter Info:
// class UAIComponent*            NewAIComp                      (CPF_Parm | CPF_EditInline)

void UIAIInterface::SetAIComponent(class UAIComponent* NewAIComp)
{
	static UFunction* uFnSetAIComponent = nullptr;

	if (!uFnSetAIComponent)
	{
		uFnSetAIComponent = UFunction::FindFunction("Function GearboxFramework.IAIInterface.SetAIComponent");
	}

	UIAIInterface_execSetAIComponent_Params SetAIComponent_Params;
	memset(&SetAIComponent_Params, 0, sizeof(SetAIComponent_Params));
	memcpy_s(&SetAIComponent_Params.NewAIComp, sizeof(SetAIComponent_Params.NewAIComp), &NewAIComp, sizeof(NewAIComp));

	uFnSetAIComponent->iNative = 0;
	uFnSetAIComponent->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetAIComponent, &SetAIComponent_Params, nullptr);
	uFnSetAIComponent->FunctionFlags |= 0x400;
	uFnSetAIComponent->iNative = 35883;
};

// Function GearboxFramework.IAIInterface.GetAIComponent
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34033])
// Parameter Info:
// class UAIComponent*            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline)

class UAIComponent* UIAIInterface::GetAIComponent()
{
	static UFunction* uFnGetAIComponent = nullptr;

	if (!uFnGetAIComponent)
	{
		uFnGetAIComponent = UFunction::FindFunction("Function GearboxFramework.IAIInterface.GetAIComponent");
	}

	UIAIInterface_execGetAIComponent_Params GetAIComponent_Params;
	memset(&GetAIComponent_Params, 0, sizeof(GetAIComponent_Params));

	uFnGetAIComponent->iNative = 0;
	uFnGetAIComponent->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAIComponent, &GetAIComponent_Params, nullptr);
	uFnGetAIComponent->FunctionFlags |= 0x400;
	uFnGetAIComponent->iNative = 34033;

	return GetAIComponent_Params.ReturnValue;
};

// Function GearboxFramework.IAIInterface.GetAIParent
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34038])
// Parameter Info:
// class UIAIInterface*           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UIAIInterface* UIAIInterface::GetAIParent()
{
	static UFunction* uFnGetAIParent = nullptr;

	if (!uFnGetAIParent)
	{
		uFnGetAIParent = UFunction::FindFunction("Function GearboxFramework.IAIInterface.GetAIParent");
	}

	UIAIInterface_execGetAIParent_Params GetAIParent_Params;
	memset(&GetAIParent_Params, 0, sizeof(GetAIParent_Params));

	uFnGetAIParent->iNative = 0;
	uFnGetAIParent->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAIParent, &GetAIParent_Params, nullptr);
	uFnGetAIParent->FunctionFlags |= 0x400;
	uFnGetAIParent->iNative = 34038;

	return GetAIParent_Params.ReturnValue;
};

// Function GearboxFramework.IAIInterface.GetAILocation
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34035])
// Parameter Info:
// struct FVector                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FVector UIAIInterface::GetAILocation()
{
	static UFunction* uFnGetAILocation = nullptr;

	if (!uFnGetAILocation)
	{
		uFnGetAILocation = UFunction::FindFunction("Function GearboxFramework.IAIInterface.GetAILocation");
	}

	UIAIInterface_execGetAILocation_Params GetAILocation_Params;
	memset(&GetAILocation_Params, 0, sizeof(GetAILocation_Params));

	uFnGetAILocation->iNative = 0;
	uFnGetAILocation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAILocation, &GetAILocation_Params, nullptr);
	uFnGetAILocation->FunctionFlags |= 0x400;
	uFnGetAILocation->iNative = 34035;

	return GetAILocation_Params.ReturnValue;
};

// Function GearboxFramework.IAIInterface.GetAIActor
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34031])
// Parameter Info:
// class AActor*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class AActor* UIAIInterface::GetAIActor()
{
	static UFunction* uFnGetAIActor = nullptr;

	if (!uFnGetAIActor)
	{
		uFnGetAIActor = UFunction::FindFunction("Function GearboxFramework.IAIInterface.GetAIActor");
	}

	UIAIInterface_execGetAIActor_Params GetAIActor_Params;
	memset(&GetAIActor_Params, 0, sizeof(GetAIActor_Params));

	uFnGetAIActor->iNative = 0;
	uFnGetAIActor->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAIActor, &GetAIActor_Params, nullptr);
	uFnGetAIActor->FunctionFlags |= 0x400;
	uFnGetAIActor->iNative = 34031;

	return GetAIActor_Params.ReturnValue;
};

// Function GearboxFramework.IAIInterface.CanTickAI
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32687])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UIAIInterface::CanTickAI()
{
	static UFunction* uFnCanTickAI = nullptr;

	if (!uFnCanTickAI)
	{
		uFnCanTickAI = UFunction::FindFunction("Function GearboxFramework.IAIInterface.CanTickAI");
	}

	UIAIInterface_execCanTickAI_Params CanTickAI_Params;
	memset(&CanTickAI_Params, 0, sizeof(CanTickAI_Params));

	uFnCanTickAI->iNative = 0;
	uFnCanTickAI->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCanTickAI, &CanTickAI_Params, nullptr);
	uFnCanTickAI->FunctionFlags |= 0x400;
	uFnCanTickAI->iNative = 32687;

	return CanTickAI_Params.ReturnValue;
};

// Function GearboxFramework.IBehaviorConsumer.GetBehaviorConsumerHandle
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34051])
// Parameter Info:
// struct FBehaviorConsumerHandle ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FBehaviorConsumerHandle UIBehaviorConsumer::GetBehaviorConsumerHandle()
{
	static UFunction* uFnGetBehaviorConsumerHandle = nullptr;

	if (!uFnGetBehaviorConsumerHandle)
	{
		uFnGetBehaviorConsumerHandle = UFunction::FindFunction("Function GearboxFramework.IBehaviorConsumer.GetBehaviorConsumerHandle");
	}

	UIBehaviorConsumer_execGetBehaviorConsumerHandle_Params GetBehaviorConsumerHandle_Params;
	memset(&GetBehaviorConsumerHandle_Params, 0, sizeof(GetBehaviorConsumerHandle_Params));

	uFnGetBehaviorConsumerHandle->iNative = 0;
	uFnGetBehaviorConsumerHandle->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetBehaviorConsumerHandle, &GetBehaviorConsumerHandle_Params, nullptr);
	uFnGetBehaviorConsumerHandle->FunctionFlags |= 0x400;
	uFnGetBehaviorConsumerHandle->iNative = 34051;

	return GetBehaviorConsumerHandle_Params.ReturnValue;
};

// Function GearboxFramework.ICloak.SetReplicatedCloak
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35925])
// Parameter Info:
// bool                           bInReplicatedCloak             (CPF_Parm)

void UICloak::SetReplicatedCloak(bool bInReplicatedCloak)
{
	static UFunction* uFnSetReplicatedCloak = nullptr;

	if (!uFnSetReplicatedCloak)
	{
		uFnSetReplicatedCloak = UFunction::FindFunction("Function GearboxFramework.ICloak.SetReplicatedCloak");
	}

	UICloak_execSetReplicatedCloak_Params SetReplicatedCloak_Params;
	memset(&SetReplicatedCloak_Params, 0, sizeof(SetReplicatedCloak_Params));
	SetReplicatedCloak_Params.bInReplicatedCloak = bInReplicatedCloak;

	uFnSetReplicatedCloak->iNative = 0;
	uFnSetReplicatedCloak->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetReplicatedCloak, &SetReplicatedCloak_Params, nullptr);
	uFnSetReplicatedCloak->FunctionFlags |= 0x400;
	uFnSetReplicatedCloak->iNative = 35925;
};

// Function GearboxFramework.ICloak.SetCloakComponent
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35889])
// Parameter Info:
// class UCloakComponent*         InComponent                    (CPF_Parm | CPF_EditInline)

void UICloak::SetCloakComponent(class UCloakComponent* InComponent)
{
	static UFunction* uFnSetCloakComponent = nullptr;

	if (!uFnSetCloakComponent)
	{
		uFnSetCloakComponent = UFunction::FindFunction("Function GearboxFramework.ICloak.SetCloakComponent");
	}

	UICloak_execSetCloakComponent_Params SetCloakComponent_Params;
	memset(&SetCloakComponent_Params, 0, sizeof(SetCloakComponent_Params));
	memcpy_s(&SetCloakComponent_Params.InComponent, sizeof(SetCloakComponent_Params.InComponent), &InComponent, sizeof(InComponent));

	uFnSetCloakComponent->iNative = 0;
	uFnSetCloakComponent->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetCloakComponent, &SetCloakComponent_Params, nullptr);
	uFnSetCloakComponent->FunctionFlags |= 0x400;
	uFnSetCloakComponent->iNative = 35889;
};

// Function GearboxFramework.ICloak.GetCloakComponent
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34060])
// Parameter Info:
// class UCloakComponent*         ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline)

class UCloakComponent* UICloak::GetCloakComponent()
{
	static UFunction* uFnGetCloakComponent = nullptr;

	if (!uFnGetCloakComponent)
	{
		uFnGetCloakComponent = UFunction::FindFunction("Function GearboxFramework.ICloak.GetCloakComponent");
	}

	UICloak_execGetCloakComponent_Params GetCloakComponent_Params;
	memset(&GetCloakComponent_Params, 0, sizeof(GetCloakComponent_Params));

	uFnGetCloakComponent->iNative = 0;
	uFnGetCloakComponent->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetCloakComponent, &GetCloakComponent_Params, nullptr);
	uFnGetCloakComponent->FunctionFlags |= 0x400;
	uFnGetCloakComponent->iNative = 34060;

	return GetCloakComponent_Params.ReturnValue;
};

// Function GearboxFramework.ICustomEvent.RunCustomEvent
// [0x12024800] (FUNC_Event | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FName&            EventName                      (CPF_Parm)
// class UObject*                 EventInstigator                (CPF_OptionalParm | CPF_Parm)
// class UObject*                 OtherEventParticipantObject    (CPF_OptionalParm | CPF_Parm)
// const struct FBehaviorParameters& EventData                      (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UICustomEvent::eventRunCustomEvent(const struct FName& EventName, class UObject* EventInstigator, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData)
{
	static UFunction* uFnRunCustomEvent = nullptr;

	if (!uFnRunCustomEvent)
	{
		uFnRunCustomEvent = UFunction::FindFunction("Function GearboxFramework.ICustomEvent.RunCustomEvent");
	}

	UICustomEvent_eventRunCustomEvent_Params RunCustomEvent_Params;
	memset(&RunCustomEvent_Params, 0, sizeof(RunCustomEvent_Params));
	memcpy_s(&RunCustomEvent_Params.EventName, sizeof(RunCustomEvent_Params.EventName), &EventName, sizeof(EventName));
	memcpy_s(&RunCustomEvent_Params.EventInstigator, sizeof(RunCustomEvent_Params.EventInstigator), &EventInstigator, sizeof(EventInstigator));
	memcpy_s(&RunCustomEvent_Params.OtherEventParticipantObject, sizeof(RunCustomEvent_Params.OtherEventParticipantObject), &OtherEventParticipantObject, sizeof(OtherEventParticipantObject));
	memcpy_s(&RunCustomEvent_Params.EventData, sizeof(RunCustomEvent_Params.EventData), &EventData, sizeof(EventData));

	this->ProcessEvent(uFnRunCustomEvent, &RunCustomEvent_Params, nullptr);
};

// Function GearboxFramework.IExpandableListEntry.GetCategoryPair
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34059])
// Parameter Info:
// struct FCategoryPair           OutCategoryPair                (CPF_Parm | CPF_OutParm)

void UIExpandableListEntry::GetCategoryPair(struct FCategoryPair& OutCategoryPair)
{
	static UFunction* uFnGetCategoryPair = nullptr;

	if (!uFnGetCategoryPair)
	{
		uFnGetCategoryPair = UFunction::FindFunction("Function GearboxFramework.IExpandableListEntry.GetCategoryPair");
	}

	UIExpandableListEntry_execGetCategoryPair_Params GetCategoryPair_Params;
	memset(&GetCategoryPair_Params, 0, sizeof(GetCategoryPair_Params));
	memcpy_s(&GetCategoryPair_Params.OutCategoryPair, sizeof(GetCategoryPair_Params.OutCategoryPair), &OutCategoryPair, sizeof(OutCategoryPair));

	uFnGetCategoryPair->iNative = 0;
	uFnGetCategoryPair->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetCategoryPair, &GetCategoryPair_Params, nullptr);
	uFnGetCategoryPair->FunctionFlags |= 0x400;
	uFnGetCategoryPair->iNative = 34059;

	memcpy_s(&OutCategoryPair, sizeof(OutCategoryPair), &GetCategoryPair_Params.OutCategoryPair, sizeof(GetCategoryPair_Params.OutCategoryPair));
};

// Function GearboxFramework.IExpandableListEntry.GetEntryName
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34096])
// Parameter Info:
// class FString                  OutEntryName                   (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UIExpandableListEntry::GetEntryName(class FString& OutEntryName)
{
	static UFunction* uFnGetEntryName = nullptr;

	if (!uFnGetEntryName)
	{
		uFnGetEntryName = UFunction::FindFunction("Function GearboxFramework.IExpandableListEntry.GetEntryName");
	}

	UIExpandableListEntry_execGetEntryName_Params GetEntryName_Params;
	memset(&GetEntryName_Params, 0, sizeof(GetEntryName_Params));
	memcpy_s(&GetEntryName_Params.OutEntryName, sizeof(GetEntryName_Params.OutEntryName), &OutEntryName, sizeof(OutEntryName));

	uFnGetEntryName->iNative = 0;
	uFnGetEntryName->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetEntryName, &GetEntryName_Params, nullptr);
	uFnGetEntryName->FunctionFlags |= 0x400;
	uFnGetEntryName->iNative = 34096;

	memcpy_s(&OutEntryName, sizeof(OutEntryName), &GetEntryName_Params.OutEntryName, sizeof(GetEntryName_Params.OutEntryName));
};

// Function GearboxFramework.IGBXTargetSearch.GetTargetSearchDefaultTarget
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34240])
// Parameter Info:
// class AActor*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class AActor* UIGBXTargetSearch::GetTargetSearchDefaultTarget()
{
	static UFunction* uFnGetTargetSearchDefaultTarget = nullptr;

	if (!uFnGetTargetSearchDefaultTarget)
	{
		uFnGetTargetSearchDefaultTarget = UFunction::FindFunction("Function GearboxFramework.IGBXTargetSearch.GetTargetSearchDefaultTarget");
	}

	UIGBXTargetSearch_execGetTargetSearchDefaultTarget_Params GetTargetSearchDefaultTarget_Params;
	memset(&GetTargetSearchDefaultTarget_Params, 0, sizeof(GetTargetSearchDefaultTarget_Params));

	uFnGetTargetSearchDefaultTarget->iNative = 0;
	uFnGetTargetSearchDefaultTarget->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetTargetSearchDefaultTarget, &GetTargetSearchDefaultTarget_Params, nullptr);
	uFnGetTargetSearchDefaultTarget->FunctionFlags |= 0x400;
	uFnGetTargetSearchDefaultTarget->iNative = 34240;

	return GetTargetSearchDefaultTarget_Params.ReturnValue;
};

// Function GearboxFramework.IGBXTargetSearch.GetTargetSearchSourceLocationAndRotation
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34242])
// Parameter Info:
// struct FVector                 OutLocation                    (CPF_Parm | CPF_OutParm)
// struct FRotator                OutRotation                    (CPF_Parm | CPF_OutParm)

void UIGBXTargetSearch::GetTargetSearchSourceLocationAndRotation(struct FVector& OutLocation, struct FRotator& OutRotation)
{
	static UFunction* uFnGetTargetSearchSourceLocationAndRotation = nullptr;

	if (!uFnGetTargetSearchSourceLocationAndRotation)
	{
		uFnGetTargetSearchSourceLocationAndRotation = UFunction::FindFunction("Function GearboxFramework.IGBXTargetSearch.GetTargetSearchSourceLocationAndRotation");
	}

	UIGBXTargetSearch_execGetTargetSearchSourceLocationAndRotation_Params GetTargetSearchSourceLocationAndRotation_Params;
	memset(&GetTargetSearchSourceLocationAndRotation_Params, 0, sizeof(GetTargetSearchSourceLocationAndRotation_Params));
	memcpy_s(&GetTargetSearchSourceLocationAndRotation_Params.OutLocation, sizeof(GetTargetSearchSourceLocationAndRotation_Params.OutLocation), &OutLocation, sizeof(OutLocation));
	memcpy_s(&GetTargetSearchSourceLocationAndRotation_Params.OutRotation, sizeof(GetTargetSearchSourceLocationAndRotation_Params.OutRotation), &OutRotation, sizeof(OutRotation));

	uFnGetTargetSearchSourceLocationAndRotation->iNative = 0;
	uFnGetTargetSearchSourceLocationAndRotation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetTargetSearchSourceLocationAndRotation, &GetTargetSearchSourceLocationAndRotation_Params, nullptr);
	uFnGetTargetSearchSourceLocationAndRotation->FunctionFlags |= 0x400;
	uFnGetTargetSearchSourceLocationAndRotation->iNative = 34242;

	memcpy_s(&OutLocation, sizeof(OutLocation), &GetTargetSearchSourceLocationAndRotation_Params.OutLocation, sizeof(GetTargetSearchSourceLocationAndRotation_Params.OutLocation));
	memcpy_s(&OutRotation, sizeof(OutRotation), &GetTargetSearchSourceLocationAndRotation_Params.OutRotation, sizeof(GetTargetSearchSourceLocationAndRotation_Params.OutRotation));
};

// Function GearboxFramework.IGBXTargetSearch.GetTargetSearchSourceActor
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34241])
// Parameter Info:
// class AActor*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class AActor* UIGBXTargetSearch::GetTargetSearchSourceActor()
{
	static UFunction* uFnGetTargetSearchSourceActor = nullptr;

	if (!uFnGetTargetSearchSourceActor)
	{
		uFnGetTargetSearchSourceActor = UFunction::FindFunction("Function GearboxFramework.IGBXTargetSearch.GetTargetSearchSourceActor");
	}

	UIGBXTargetSearch_execGetTargetSearchSourceActor_Params GetTargetSearchSourceActor_Params;
	memset(&GetTargetSearchSourceActor_Params, 0, sizeof(GetTargetSearchSourceActor_Params));

	uFnGetTargetSearchSourceActor->iNative = 0;
	uFnGetTargetSearchSourceActor->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetTargetSearchSourceActor, &GetTargetSearchSourceActor_Params, nullptr);
	uFnGetTargetSearchSourceActor->FunctionFlags |= 0x400;
	uFnGetTargetSearchSourceActor->iNative = 34241;

	return GetTargetSearchSourceActor_Params.ReturnValue;
};

// Function GearboxFramework.IGFxActorMovie.GFx_NotifyMovieDestroy
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34259])
// Parameter Info:
// class UGearboxGFxMovie*        Movie                          (CPF_Parm)

void UIGFxActorMovie::GFx_NotifyMovieDestroy(class UGearboxGFxMovie* Movie)
{
	static UFunction* uFnGFx_NotifyMovieDestroy = nullptr;

	if (!uFnGFx_NotifyMovieDestroy)
	{
		uFnGFx_NotifyMovieDestroy = UFunction::FindFunction("Function GearboxFramework.IGFxActorMovie.GFx_NotifyMovieDestroy");
	}

	UIGFxActorMovie_execGFx_NotifyMovieDestroy_Params GFx_NotifyMovieDestroy_Params;
	memset(&GFx_NotifyMovieDestroy_Params, 0, sizeof(GFx_NotifyMovieDestroy_Params));
	memcpy_s(&GFx_NotifyMovieDestroy_Params.Movie, sizeof(GFx_NotifyMovieDestroy_Params.Movie), &Movie, sizeof(Movie));

	uFnGFx_NotifyMovieDestroy->iNative = 0;
	uFnGFx_NotifyMovieDestroy->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGFx_NotifyMovieDestroy, &GFx_NotifyMovieDestroy_Params, nullptr);
	uFnGFx_NotifyMovieDestroy->FunctionFlags |= 0x400;
	uFnGFx_NotifyMovieDestroy->iNative = 34259;
};

// Function GearboxFramework.IGFxActorMovie.GFx_NotifyMovieCreate
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34258])
// Parameter Info:
// class UGearboxGFxMovie*        Movie                          (CPF_Parm)

void UIGFxActorMovie::GFx_NotifyMovieCreate(class UGearboxGFxMovie* Movie)
{
	static UFunction* uFnGFx_NotifyMovieCreate = nullptr;

	if (!uFnGFx_NotifyMovieCreate)
	{
		uFnGFx_NotifyMovieCreate = UFunction::FindFunction("Function GearboxFramework.IGFxActorMovie.GFx_NotifyMovieCreate");
	}

	UIGFxActorMovie_execGFx_NotifyMovieCreate_Params GFx_NotifyMovieCreate_Params;
	memset(&GFx_NotifyMovieCreate_Params, 0, sizeof(GFx_NotifyMovieCreate_Params));
	memcpy_s(&GFx_NotifyMovieCreate_Params.Movie, sizeof(GFx_NotifyMovieCreate_Params.Movie), &Movie, sizeof(Movie));

	uFnGFx_NotifyMovieCreate->iNative = 0;
	uFnGFx_NotifyMovieCreate->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGFx_NotifyMovieCreate, &GFx_NotifyMovieCreate_Params, nullptr);
	uFnGFx_NotifyMovieCreate->FunctionFlags |= 0x400;
	uFnGFx_NotifyMovieCreate->iNative = 34258;
};

// Function GearboxFramework.IGFxActorMovie.GFx_GetMovieActor
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34257])
// Parameter Info:
// class AActor*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class AActor* UIGFxActorMovie::GFx_GetMovieActor()
{
	static UFunction* uFnGFx_GetMovieActor = nullptr;

	if (!uFnGFx_GetMovieActor)
	{
		uFnGFx_GetMovieActor = UFunction::FindFunction("Function GearboxFramework.IGFxActorMovie.GFx_GetMovieActor");
	}

	UIGFxActorMovie_execGFx_GetMovieActor_Params GFx_GetMovieActor_Params;
	memset(&GFx_GetMovieActor_Params, 0, sizeof(GFx_GetMovieActor_Params));

	uFnGFx_GetMovieActor->iNative = 0;
	uFnGFx_GetMovieActor->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGFx_GetMovieActor, &GFx_GetMovieActor_Params, nullptr);
	uFnGFx_GetMovieActor->FunctionFlags |= 0x400;
	uFnGFx_GetMovieActor->iNative = 34257;

	return GFx_GetMovieActor_Params.ReturnValue;
};

// Function GearboxFramework.IGFxMovieLocator.GetAGFxMovie
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34029])
// Parameter Info:
// class UGFxMoviePlayer*         ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UGFxMoviePlayer* UIGFxMovieLocator::GetAGFxMovie()
{
	static UFunction* uFnGetAGFxMovie = nullptr;

	if (!uFnGetAGFxMovie)
	{
		uFnGetAGFxMovie = UFunction::FindFunction("Function GearboxFramework.IGFxMovieLocator.GetAGFxMovie");
	}

	UIGFxMovieLocator_execGetAGFxMovie_Params GetAGFxMovie_Params;
	memset(&GetAGFxMovie_Params, 0, sizeof(GetAGFxMovie_Params));

	uFnGetAGFxMovie->iNative = 0;
	uFnGetAGFxMovie->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAGFxMovie, &GetAGFxMovie_Params, nullptr);
	uFnGetAGFxMovie->FunctionFlags |= 0x400;
	uFnGetAGFxMovie->iNative = 34029;

	return GetAGFxMovie_Params.ReturnValue;
};

// Function GearboxFramework.IGFxMovieLocator.GetAGFxUIManager
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34030])
// Parameter Info:
// class UIGFxUIManager*          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UIGFxUIManager* UIGFxMovieLocator::GetAGFxUIManager()
{
	static UFunction* uFnGetAGFxUIManager = nullptr;

	if (!uFnGetAGFxUIManager)
	{
		uFnGetAGFxUIManager = UFunction::FindFunction("Function GearboxFramework.IGFxMovieLocator.GetAGFxUIManager");
	}

	UIGFxMovieLocator_execGetAGFxUIManager_Params GetAGFxUIManager_Params;
	memset(&GetAGFxUIManager_Params, 0, sizeof(GetAGFxUIManager_Params));

	uFnGetAGFxUIManager->iNative = 0;
	uFnGetAGFxUIManager->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAGFxUIManager, &GetAGFxUIManager_Params, nullptr);
	uFnGetAGFxUIManager->FunctionFlags |= 0x400;
	uFnGetAGFxUIManager->iNative = 34030;

	return GetAGFxUIManager_Params.ReturnValue;
};

// Function GearboxFramework.IGFxObjectManager.extOnClipUnloaded
// [0x12020002] (FUNC_Defined | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UGFxObject*              Clip                           (CPF_Parm)

void UIGFxObjectManager::extOnClipUnloaded(class UGFxObject* Clip)
{
	static UFunction* uFnextOnClipUnloaded = nullptr;

	if (!uFnextOnClipUnloaded)
	{
		uFnextOnClipUnloaded = UFunction::FindFunction("Function GearboxFramework.IGFxObjectManager.extOnClipUnloaded");
	}

	UIGFxObjectManager_execextOnClipUnloaded_Params extOnClipUnloaded_Params;
	memset(&extOnClipUnloaded_Params, 0, sizeof(extOnClipUnloaded_Params));
	memcpy_s(&extOnClipUnloaded_Params.Clip, sizeof(extOnClipUnloaded_Params.Clip), &Clip, sizeof(Clip));

	this->ProcessEvent(uFnextOnClipUnloaded, &extOnClipUnloaded_Params, nullptr);
};

// Function GearboxFramework.IGFxObjectManager.extOnClipLoaded
// [0x12020002] (FUNC_Defined | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UGFxObject*              Clip                           (CPF_Parm)

void UIGFxObjectManager::extOnClipLoaded(class UGFxObject* Clip)
{
	static UFunction* uFnextOnClipLoaded = nullptr;

	if (!uFnextOnClipLoaded)
	{
		uFnextOnClipLoaded = UFunction::FindFunction("Function GearboxFramework.IGFxObjectManager.extOnClipLoaded");
	}

	UIGFxObjectManager_execextOnClipLoaded_Params extOnClipLoaded_Params;
	memset(&extOnClipLoaded_Params, 0, sizeof(extOnClipLoaded_Params));
	memcpy_s(&extOnClipLoaded_Params.Clip, sizeof(extOnClipLoaded_Params.Clip), &Clip, sizeof(Clip));

	this->ProcessEvent(uFnextOnClipLoaded, &extOnClipLoaded_Params, nullptr);
};

// Function GearboxFramework.IGFxObjectManager.GetIsSpectatorMode
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34122])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UIGFxObjectManager::GetIsSpectatorMode()
{
	static UFunction* uFnGetIsSpectatorMode = nullptr;

	if (!uFnGetIsSpectatorMode)
	{
		uFnGetIsSpectatorMode = UFunction::FindFunction("Function GearboxFramework.IGFxObjectManager.GetIsSpectatorMode");
	}

	UIGFxObjectManager_execGetIsSpectatorMode_Params GetIsSpectatorMode_Params;
	memset(&GetIsSpectatorMode_Params, 0, sizeof(GetIsSpectatorMode_Params));

	uFnGetIsSpectatorMode->iNative = 0;
	uFnGetIsSpectatorMode->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetIsSpectatorMode, &GetIsSpectatorMode_Params, nullptr);
	uFnGetIsSpectatorMode->FunctionFlags |= 0x400;
	uFnGetIsSpectatorMode->iNative = 34122;

	return GetIsSpectatorMode_Params.ReturnValue;
};

// Function GearboxFramework.IGFxObjectManager.GetLayoutDefinition
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34126])
// Parameter Info:
// class UGFxLayoutDefinition*    ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UGFxLayoutDefinition* UIGFxObjectManager::GetLayoutDefinition()
{
	static UFunction* uFnGetLayoutDefinition = nullptr;

	if (!uFnGetLayoutDefinition)
	{
		uFnGetLayoutDefinition = UFunction::FindFunction("Function GearboxFramework.IGFxObjectManager.GetLayoutDefinition");
	}

	UIGFxObjectManager_execGetLayoutDefinition_Params GetLayoutDefinition_Params;
	memset(&GetLayoutDefinition_Params, 0, sizeof(GetLayoutDefinition_Params));

	uFnGetLayoutDefinition->iNative = 0;
	uFnGetLayoutDefinition->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetLayoutDefinition, &GetLayoutDefinition_Params, nullptr);
	uFnGetLayoutDefinition->FunctionFlags |= 0x400;
	uFnGetLayoutDefinition->iNative = 34126;

	return GetLayoutDefinition_Params.ReturnValue;
};

// Function GearboxFramework.IGFxObjectManager.GetGFxObjectManager
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34108])
// Parameter Info:
// class UGearboxGFxObjectManager* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UGearboxGFxObjectManager* UIGFxObjectManager::GetGFxObjectManager()
{
	static UFunction* uFnGetGFxObjectManager = nullptr;

	if (!uFnGetGFxObjectManager)
	{
		uFnGetGFxObjectManager = UFunction::FindFunction("Function GearboxFramework.IGFxObjectManager.GetGFxObjectManager");
	}

	UIGFxObjectManager_execGetGFxObjectManager_Params GetGFxObjectManager_Params;
	memset(&GetGFxObjectManager_Params, 0, sizeof(GetGFxObjectManager_Params));

	uFnGetGFxObjectManager->iNative = 0;
	uFnGetGFxObjectManager->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetGFxObjectManager, &GetGFxObjectManager_Params, nullptr);
	uFnGetGFxObjectManager->FunctionFlags |= 0x400;
	uFnGetGFxObjectManager->iNative = 34108;

	return GetGFxObjectManager_Params.ReturnValue;
};

// Function GearboxFramework.IGFxUIManager.ResolveTargetObjectsForAction
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35738])
// Parameter Info:
// class TArray<class UGFxObject*> ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class UGFxUIAction_Base*       Action                         (CPF_Parm)
// class UGFxMoviePlayer*         Movie                          (CPF_Parm)

class TArray<class UGFxObject*> UIGFxUIManager::ResolveTargetObjectsForAction(class UGFxUIAction_Base* Action, class UGFxMoviePlayer* Movie)
{
	static UFunction* uFnResolveTargetObjectsForAction = nullptr;

	if (!uFnResolveTargetObjectsForAction)
	{
		uFnResolveTargetObjectsForAction = UFunction::FindFunction("Function GearboxFramework.IGFxUIManager.ResolveTargetObjectsForAction");
	}

	UIGFxUIManager_execResolveTargetObjectsForAction_Params ResolveTargetObjectsForAction_Params;
	memset(&ResolveTargetObjectsForAction_Params, 0, sizeof(ResolveTargetObjectsForAction_Params));
	memcpy_s(&ResolveTargetObjectsForAction_Params.Action, sizeof(ResolveTargetObjectsForAction_Params.Action), &Action, sizeof(Action));
	memcpy_s(&ResolveTargetObjectsForAction_Params.Movie, sizeof(ResolveTargetObjectsForAction_Params.Movie), &Movie, sizeof(Movie));

	uFnResolveTargetObjectsForAction->iNative = 0;
	uFnResolveTargetObjectsForAction->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnResolveTargetObjectsForAction, &ResolveTargetObjectsForAction_Params, nullptr);
	uFnResolveTargetObjectsForAction->FunctionFlags |= 0x400;
	uFnResolveTargetObjectsForAction->iNative = 35738;

	return ResolveTargetObjectsForAction_Params.ReturnValue;
};

// Function GearboxFramework.IGFxUIManager.ResolveTargetMovie
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35735])
// Parameter Info:
// class UGFxMoviePlayer*         ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USwfMovie*               Movie                          (CPF_Parm)

class UGFxMoviePlayer* UIGFxUIManager::ResolveTargetMovie(class USwfMovie* Movie)
{
	static UFunction* uFnResolveTargetMovie = nullptr;

	if (!uFnResolveTargetMovie)
	{
		uFnResolveTargetMovie = UFunction::FindFunction("Function GearboxFramework.IGFxUIManager.ResolveTargetMovie");
	}

	UIGFxUIManager_execResolveTargetMovie_Params ResolveTargetMovie_Params;
	memset(&ResolveTargetMovie_Params, 0, sizeof(ResolveTargetMovie_Params));
	memcpy_s(&ResolveTargetMovie_Params.Movie, sizeof(ResolveTargetMovie_Params.Movie), &Movie, sizeof(Movie));

	uFnResolveTargetMovie->iNative = 0;
	uFnResolveTargetMovie->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnResolveTargetMovie, &ResolveTargetMovie_Params, nullptr);
	uFnResolveTargetMovie->FunctionFlags |= 0x400;
	uFnResolveTargetMovie->iNative = 35735;

	return ResolveTargetMovie_Params.ReturnValue;
};

// Function GearboxFramework.IGFxUIManager.ResolveTargetMovieForAction
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35736])
// Parameter Info:
// class UGFxMoviePlayer*         ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UGFxUIAction_Base*       Action                         (CPF_Parm)

class UGFxMoviePlayer* UIGFxUIManager::ResolveTargetMovieForAction(class UGFxUIAction_Base* Action)
{
	static UFunction* uFnResolveTargetMovieForAction = nullptr;

	if (!uFnResolveTargetMovieForAction)
	{
		uFnResolveTargetMovieForAction = UFunction::FindFunction("Function GearboxFramework.IGFxUIManager.ResolveTargetMovieForAction");
	}

	UIGFxUIManager_execResolveTargetMovieForAction_Params ResolveTargetMovieForAction_Params;
	memset(&ResolveTargetMovieForAction_Params, 0, sizeof(ResolveTargetMovieForAction_Params));
	memcpy_s(&ResolveTargetMovieForAction_Params.Action, sizeof(ResolveTargetMovieForAction_Params.Action), &Action, sizeof(Action));

	uFnResolveTargetMovieForAction->iNative = 0;
	uFnResolveTargetMovieForAction->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnResolveTargetMovieForAction, &ResolveTargetMovieForAction_Params, nullptr);
	uFnResolveTargetMovieForAction->FunctionFlags |= 0x400;
	uFnResolveTargetMovieForAction->iNative = 35736;

	return ResolveTargetMovieForAction_Params.ReturnValue;
};

// Function GearboxFramework.IGFxUIManager.RunGFxUIAction
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35795])
// Parameter Info:
// struct FQueuedGFxUIAction      Action                         (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UIGFxUIManager::RunGFxUIAction(struct FQueuedGFxUIAction& Action)
{
	static UFunction* uFnRunGFxUIAction = nullptr;

	if (!uFnRunGFxUIAction)
	{
		uFnRunGFxUIAction = UFunction::FindFunction("Function GearboxFramework.IGFxUIManager.RunGFxUIAction");
	}

	UIGFxUIManager_execRunGFxUIAction_Params RunGFxUIAction_Params;
	memset(&RunGFxUIAction_Params, 0, sizeof(RunGFxUIAction_Params));
	memcpy_s(&RunGFxUIAction_Params.Action, sizeof(RunGFxUIAction_Params.Action), &Action, sizeof(Action));

	uFnRunGFxUIAction->iNative = 0;
	uFnRunGFxUIAction->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRunGFxUIAction, &RunGFxUIAction_Params, nullptr);
	uFnRunGFxUIAction->FunctionFlags |= 0x400;
	uFnRunGFxUIAction->iNative = 35795;

	memcpy_s(&Action, sizeof(Action), &RunGFxUIAction_Params.Action, sizeof(RunGFxUIAction_Params.Action));
};

// Function GearboxFramework.IGFxUIManager.RunGFxUIActions
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35796])
// Parameter Info:

void UIGFxUIManager::RunGFxUIActions()
{
	static UFunction* uFnRunGFxUIActions = nullptr;

	if (!uFnRunGFxUIActions)
	{
		uFnRunGFxUIActions = UFunction::FindFunction("Function GearboxFramework.IGFxUIManager.RunGFxUIActions");
	}

	UIGFxUIManager_execRunGFxUIActions_Params RunGFxUIActions_Params;
	memset(&RunGFxUIActions_Params, 0, sizeof(RunGFxUIActions_Params));

	uFnRunGFxUIActions->iNative = 0;
	uFnRunGFxUIActions->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRunGFxUIActions, &RunGFxUIActions_Params, nullptr);
	uFnRunGFxUIActions->FunctionFlags |= 0x400;
	uFnRunGFxUIActions->iNative = 35796;
};

// Function GearboxFramework.IGFxUIManager.QueueGFxUIAction
// [0x00024400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[35589])
// Parameter Info:
// class UGFxUIAction_Base*       inAction                       (CPF_Parm)
// class UGFxMoviePlayer*         KnownTargetMovie               (CPF_OptionalParm | CPF_Parm)
// const class TArray<struct FGFxUIActionParam>& OptParams                      (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)
// bool                           bRunImmediately                (CPF_OptionalParm | CPF_Parm)

void UIGFxUIManager::QueueGFxUIAction(class UGFxUIAction_Base* inAction, class UGFxMoviePlayer* KnownTargetMovie, const class TArray<struct FGFxUIActionParam>& OptParams, bool bRunImmediately)
{
	static UFunction* uFnQueueGFxUIAction = nullptr;

	if (!uFnQueueGFxUIAction)
	{
		uFnQueueGFxUIAction = UFunction::FindFunction("Function GearboxFramework.IGFxUIManager.QueueGFxUIAction");
	}

	UIGFxUIManager_execQueueGFxUIAction_Params QueueGFxUIAction_Params;
	memset(&QueueGFxUIAction_Params, 0, sizeof(QueueGFxUIAction_Params));
	memcpy_s(&QueueGFxUIAction_Params.inAction, sizeof(QueueGFxUIAction_Params.inAction), &inAction, sizeof(inAction));
	memcpy_s(&QueueGFxUIAction_Params.KnownTargetMovie, sizeof(QueueGFxUIAction_Params.KnownTargetMovie), &KnownTargetMovie, sizeof(KnownTargetMovie));
	memcpy_s(&QueueGFxUIAction_Params.OptParams, sizeof(QueueGFxUIAction_Params.OptParams), &OptParams, sizeof(OptParams));
	QueueGFxUIAction_Params.bRunImmediately = bRunImmediately;

	uFnQueueGFxUIAction->iNative = 0;
	uFnQueueGFxUIAction->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnQueueGFxUIAction, &QueueGFxUIAction_Params, nullptr);
	uFnQueueGFxUIAction->FunctionFlags |= 0x400;
	uFnQueueGFxUIAction->iNative = 35589;
};

// Function GearboxFramework.InterpComponent.InterpBallisticsByTime
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34588])
// Parameter Info:
// struct FVector                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FVector&          StartLoc                       (CPF_Parm)
// const struct FVector&          EndLoc                         (CPF_Parm)
// float                          LeapTime                       (CPF_Parm)
// float                          LeapGravity                    (CPF_Parm)

struct FVector UInterpComponent::InterpBallisticsByTime(const struct FVector& StartLoc, const struct FVector& EndLoc, float LeapTime, float LeapGravity)
{
	static UFunction* uFnInterpBallisticsByTime = nullptr;

	if (!uFnInterpBallisticsByTime)
	{
		uFnInterpBallisticsByTime = UFunction::FindFunction("Function GearboxFramework.InterpComponent.InterpBallisticsByTime");
	}

	UInterpComponent_execInterpBallisticsByTime_Params InterpBallisticsByTime_Params;
	memset(&InterpBallisticsByTime_Params, 0, sizeof(InterpBallisticsByTime_Params));
	memcpy_s(&InterpBallisticsByTime_Params.StartLoc, sizeof(InterpBallisticsByTime_Params.StartLoc), &StartLoc, sizeof(StartLoc));
	memcpy_s(&InterpBallisticsByTime_Params.EndLoc, sizeof(InterpBallisticsByTime_Params.EndLoc), &EndLoc, sizeof(EndLoc));
	memcpy_s(&InterpBallisticsByTime_Params.LeapTime, sizeof(InterpBallisticsByTime_Params.LeapTime), &LeapTime, sizeof(LeapTime));
	memcpy_s(&InterpBallisticsByTime_Params.LeapGravity, sizeof(InterpBallisticsByTime_Params.LeapGravity), &LeapGravity, sizeof(LeapGravity));

	uFnInterpBallisticsByTime->iNative = 0;
	uFnInterpBallisticsByTime->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInterpBallisticsByTime, &InterpBallisticsByTime_Params, nullptr);
	uFnInterpBallisticsByTime->FunctionFlags |= 0x400;
	uFnInterpBallisticsByTime->iNative = 34588;

	return InterpBallisticsByTime_Params.ReturnValue;
};

// Function GearboxFramework.InterpComponent.InterpBallistics
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34587])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FVector&          StartLoc                       (CPF_Parm)
// const struct FVector&          EndLoc                         (CPF_Parm)
// float                          LeapSpeed                      (CPF_Parm)
// float                          LeapAngle                      (CPF_Parm)

float UInterpComponent::InterpBallistics(const struct FVector& StartLoc, const struct FVector& EndLoc, float LeapSpeed, float LeapAngle)
{
	static UFunction* uFnInterpBallistics = nullptr;

	if (!uFnInterpBallistics)
	{
		uFnInterpBallistics = UFunction::FindFunction("Function GearboxFramework.InterpComponent.InterpBallistics");
	}

	UInterpComponent_execInterpBallistics_Params InterpBallistics_Params;
	memset(&InterpBallistics_Params, 0, sizeof(InterpBallistics_Params));
	memcpy_s(&InterpBallistics_Params.StartLoc, sizeof(InterpBallistics_Params.StartLoc), &StartLoc, sizeof(StartLoc));
	memcpy_s(&InterpBallistics_Params.EndLoc, sizeof(InterpBallistics_Params.EndLoc), &EndLoc, sizeof(EndLoc));
	memcpy_s(&InterpBallistics_Params.LeapSpeed, sizeof(InterpBallistics_Params.LeapSpeed), &LeapSpeed, sizeof(LeapSpeed));
	memcpy_s(&InterpBallistics_Params.LeapAngle, sizeof(InterpBallistics_Params.LeapAngle), &LeapAngle, sizeof(LeapAngle));

	uFnInterpBallistics->iNative = 0;
	uFnInterpBallistics->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInterpBallistics, &InterpBallistics_Params, nullptr);
	uFnInterpBallistics->FunctionFlags |= 0x400;
	uFnInterpBallistics->iNative = 34587;

	return InterpBallistics_Params.ReturnValue;
};

// Function GearboxFramework.InterpComponent.InterpRelativeRotation
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34606])
// Parameter Info:
// const struct FRotator&         NewRelRot                      (CPF_Parm)
// float                          InterpTime                     (CPF_Parm)
// bool                           bLinear                        (CPF_Parm)

void UInterpComponent::InterpRelativeRotation(const struct FRotator& NewRelRot, float InterpTime, bool bLinear)
{
	static UFunction* uFnInterpRelativeRotation = nullptr;

	if (!uFnInterpRelativeRotation)
	{
		uFnInterpRelativeRotation = UFunction::FindFunction("Function GearboxFramework.InterpComponent.InterpRelativeRotation");
	}

	UInterpComponent_execInterpRelativeRotation_Params InterpRelativeRotation_Params;
	memset(&InterpRelativeRotation_Params, 0, sizeof(InterpRelativeRotation_Params));
	memcpy_s(&InterpRelativeRotation_Params.NewRelRot, sizeof(InterpRelativeRotation_Params.NewRelRot), &NewRelRot, sizeof(NewRelRot));
	memcpy_s(&InterpRelativeRotation_Params.InterpTime, sizeof(InterpRelativeRotation_Params.InterpTime), &InterpTime, sizeof(InterpTime));
	InterpRelativeRotation_Params.bLinear = bLinear;

	uFnInterpRelativeRotation->iNative = 0;
	uFnInterpRelativeRotation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInterpRelativeRotation, &InterpRelativeRotation_Params, nullptr);
	uFnInterpRelativeRotation->FunctionFlags |= 0x400;
	uFnInterpRelativeRotation->iNative = 34606;
};

// Function GearboxFramework.InterpComponent.InterpRelativeLocation
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34605])
// Parameter Info:
// const struct FVector&          NewRelLoc                      (CPF_Parm)
// float                          InterpTime                     (CPF_Parm)
// bool                           bLinear                        (CPF_Parm)

void UInterpComponent::InterpRelativeLocation(const struct FVector& NewRelLoc, float InterpTime, bool bLinear)
{
	static UFunction* uFnInterpRelativeLocation = nullptr;

	if (!uFnInterpRelativeLocation)
	{
		uFnInterpRelativeLocation = UFunction::FindFunction("Function GearboxFramework.InterpComponent.InterpRelativeLocation");
	}

	UInterpComponent_execInterpRelativeLocation_Params InterpRelativeLocation_Params;
	memset(&InterpRelativeLocation_Params, 0, sizeof(InterpRelativeLocation_Params));
	memcpy_s(&InterpRelativeLocation_Params.NewRelLoc, sizeof(InterpRelativeLocation_Params.NewRelLoc), &NewRelLoc, sizeof(NewRelLoc));
	memcpy_s(&InterpRelativeLocation_Params.InterpTime, sizeof(InterpRelativeLocation_Params.InterpTime), &InterpTime, sizeof(InterpTime));
	InterpRelativeLocation_Params.bLinear = bLinear;

	uFnInterpRelativeLocation->iNative = 0;
	uFnInterpRelativeLocation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInterpRelativeLocation, &InterpRelativeLocation_Params, nullptr);
	uFnInterpRelativeLocation->FunctionFlags |= 0x400;
	uFnInterpRelativeLocation->iNative = 34605;
};

// Function GearboxFramework.InterpComponent.InterpControllerRotation
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34591])
// Parameter Info:
// const struct FRotator&         NewRot                         (CPF_Parm)
// float                          InterpTime                     (CPF_Parm)
// bool                           bLinear                        (CPF_Parm)

void UInterpComponent::InterpControllerRotation(const struct FRotator& NewRot, float InterpTime, bool bLinear)
{
	static UFunction* uFnInterpControllerRotation = nullptr;

	if (!uFnInterpControllerRotation)
	{
		uFnInterpControllerRotation = UFunction::FindFunction("Function GearboxFramework.InterpComponent.InterpControllerRotation");
	}

	UInterpComponent_execInterpControllerRotation_Params InterpControllerRotation_Params;
	memset(&InterpControllerRotation_Params, 0, sizeof(InterpControllerRotation_Params));
	memcpy_s(&InterpControllerRotation_Params.NewRot, sizeof(InterpControllerRotation_Params.NewRot), &NewRot, sizeof(NewRot));
	memcpy_s(&InterpControllerRotation_Params.InterpTime, sizeof(InterpControllerRotation_Params.InterpTime), &InterpTime, sizeof(InterpTime));
	InterpControllerRotation_Params.bLinear = bLinear;

	uFnInterpControllerRotation->iNative = 0;
	uFnInterpControllerRotation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInterpControllerRotation, &InterpControllerRotation_Params, nullptr);
	uFnInterpControllerRotation->FunctionFlags |= 0x400;
	uFnInterpControllerRotation->iNative = 34591;
};

// Function GearboxFramework.InterpComponent.InterpDeltaRotation
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[34597])
// Parameter Info:
// const struct FRotator&         DeltaRot                       (CPF_Parm)
// float                          InterpTime                     (CPF_Parm)
// bool                           bLinear                        (CPF_OptionalParm | CPF_Parm)
// bool                           bYawOnly                       (CPF_OptionalParm | CPF_Parm)

void UInterpComponent::InterpDeltaRotation(const struct FRotator& DeltaRot, float InterpTime, bool bLinear, bool bYawOnly)
{
	static UFunction* uFnInterpDeltaRotation = nullptr;

	if (!uFnInterpDeltaRotation)
	{
		uFnInterpDeltaRotation = UFunction::FindFunction("Function GearboxFramework.InterpComponent.InterpDeltaRotation");
	}

	UInterpComponent_execInterpDeltaRotation_Params InterpDeltaRotation_Params;
	memset(&InterpDeltaRotation_Params, 0, sizeof(InterpDeltaRotation_Params));
	memcpy_s(&InterpDeltaRotation_Params.DeltaRot, sizeof(InterpDeltaRotation_Params.DeltaRot), &DeltaRot, sizeof(DeltaRot));
	memcpy_s(&InterpDeltaRotation_Params.InterpTime, sizeof(InterpDeltaRotation_Params.InterpTime), &InterpTime, sizeof(InterpTime));
	InterpDeltaRotation_Params.bLinear = bLinear;
	InterpDeltaRotation_Params.bYawOnly = bYawOnly;

	uFnInterpDeltaRotation->iNative = 0;
	uFnInterpDeltaRotation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInterpDeltaRotation, &InterpDeltaRotation_Params, nullptr);
	uFnInterpDeltaRotation->FunctionFlags |= 0x400;
	uFnInterpDeltaRotation->iNative = 34597;
};

// Function GearboxFramework.InterpComponent.InterpRotation
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[34617])
// Parameter Info:
// const struct FRotator&         NewRot                         (CPF_Parm)
// float                          InterpTime                     (CPF_Parm)
// bool                           bLinear                        (CPF_OptionalParm | CPF_Parm)
// bool                           bYawOnly                       (CPF_OptionalParm | CPF_Parm)

void UInterpComponent::InterpRotation(const struct FRotator& NewRot, float InterpTime, bool bLinear, bool bYawOnly)
{
	static UFunction* uFnInterpRotation = nullptr;

	if (!uFnInterpRotation)
	{
		uFnInterpRotation = UFunction::FindFunction("Function GearboxFramework.InterpComponent.InterpRotation");
	}

	UInterpComponent_execInterpRotation_Params InterpRotation_Params;
	memset(&InterpRotation_Params, 0, sizeof(InterpRotation_Params));
	memcpy_s(&InterpRotation_Params.NewRot, sizeof(InterpRotation_Params.NewRot), &NewRot, sizeof(NewRot));
	memcpy_s(&InterpRotation_Params.InterpTime, sizeof(InterpRotation_Params.InterpTime), &InterpTime, sizeof(InterpTime));
	InterpRotation_Params.bLinear = bLinear;
	InterpRotation_Params.bYawOnly = bYawOnly;

	uFnInterpRotation->iNative = 0;
	uFnInterpRotation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInterpRotation, &InterpRotation_Params, nullptr);
	uFnInterpRotation->FunctionFlags |= 0x400;
	uFnInterpRotation->iNative = 34617;
};

// Function GearboxFramework.InterpComponent.InterpDeltaLocation
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[34596])
// Parameter Info:
// const struct FVector&          DeltaLoc                       (CPF_Parm)
// float                          InterpTime                     (CPF_Parm)
// bool                           bLinear                        (CPF_OptionalParm | CPF_Parm)
// bool                           bNoZ                           (CPF_OptionalParm | CPF_Parm)

void UInterpComponent::InterpDeltaLocation(const struct FVector& DeltaLoc, float InterpTime, bool bLinear, bool bNoZ)
{
	static UFunction* uFnInterpDeltaLocation = nullptr;

	if (!uFnInterpDeltaLocation)
	{
		uFnInterpDeltaLocation = UFunction::FindFunction("Function GearboxFramework.InterpComponent.InterpDeltaLocation");
	}

	UInterpComponent_execInterpDeltaLocation_Params InterpDeltaLocation_Params;
	memset(&InterpDeltaLocation_Params, 0, sizeof(InterpDeltaLocation_Params));
	memcpy_s(&InterpDeltaLocation_Params.DeltaLoc, sizeof(InterpDeltaLocation_Params.DeltaLoc), &DeltaLoc, sizeof(DeltaLoc));
	memcpy_s(&InterpDeltaLocation_Params.InterpTime, sizeof(InterpDeltaLocation_Params.InterpTime), &InterpTime, sizeof(InterpTime));
	InterpDeltaLocation_Params.bLinear = bLinear;
	InterpDeltaLocation_Params.bNoZ = bNoZ;

	uFnInterpDeltaLocation->iNative = 0;
	uFnInterpDeltaLocation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInterpDeltaLocation, &InterpDeltaLocation_Params, nullptr);
	uFnInterpDeltaLocation->FunctionFlags |= 0x400;
	uFnInterpDeltaLocation->iNative = 34596;
};

// Function GearboxFramework.InterpComponent.InterpLocation
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[34598])
// Parameter Info:
// const struct FVector&          NewLoc                         (CPF_Parm)
// float                          InterpTime                     (CPF_Parm)
// bool                           bLinear                        (CPF_OptionalParm | CPF_Parm)
// bool                           bNoZ                           (CPF_OptionalParm | CPF_Parm)

void UInterpComponent::InterpLocation(const struct FVector& NewLoc, float InterpTime, bool bLinear, bool bNoZ)
{
	static UFunction* uFnInterpLocation = nullptr;

	if (!uFnInterpLocation)
	{
		uFnInterpLocation = UFunction::FindFunction("Function GearboxFramework.InterpComponent.InterpLocation");
	}

	UInterpComponent_execInterpLocation_Params InterpLocation_Params;
	memset(&InterpLocation_Params, 0, sizeof(InterpLocation_Params));
	memcpy_s(&InterpLocation_Params.NewLoc, sizeof(InterpLocation_Params.NewLoc), &NewLoc, sizeof(NewLoc));
	memcpy_s(&InterpLocation_Params.InterpTime, sizeof(InterpLocation_Params.InterpTime), &InterpTime, sizeof(InterpTime));
	InterpLocation_Params.bLinear = bLinear;
	InterpLocation_Params.bNoZ = bNoZ;

	uFnInterpLocation->iNative = 0;
	uFnInterpLocation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInterpLocation, &InterpLocation_Params, nullptr);
	uFnInterpLocation->FunctionFlags |= 0x400;
	uFnInterpLocation->iNative = 34598;
};

// Function GearboxFramework.InterpComponent.Stop
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[623])
// Parameter Info:

void UInterpComponent::Stop()
{
	static UFunction* uFnStop = nullptr;

	if (!uFnStop)
	{
		uFnStop = UFunction::FindFunction("Function GearboxFramework.InterpComponent.Stop");
	}

	UInterpComponent_execStop_Params Stop_Params;
	memset(&Stop_Params, 0, sizeof(Stop_Params));

	uFnStop->iNative = 0;
	uFnStop->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnStop, &Stop_Params, nullptr);
	uFnStop->FunctionFlags |= 0x400;
	uFnStop->iNative = 623;
};

// Function GearboxFramework.InterpComponent.Get
// [0x00022400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[34022])
// Parameter Info:
// class UInterpComponent*        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline)
// class AActor*                  Actor                          (CPF_Parm)

class UInterpComponent* UInterpComponent::Get(class AActor* Actor)
{
	static UFunction* uFnGet = nullptr;

	if (!uFnGet)
	{
		uFnGet = UFunction::FindFunction("Function GearboxFramework.InterpComponent.Get");
	}

	UInterpComponent_execGet_Params Get_Params;
	memset(&Get_Params, 0, sizeof(Get_Params));
	memcpy_s(&Get_Params.Actor, sizeof(Get_Params.Actor), &Actor, sizeof(Actor));

	uFnGet->iNative = 0;
	uFnGet->FunctionFlags &= ~0x400;
	UInterpComponent::StaticClass()->ProcessEvent(uFnGet, &Get_Params, nullptr);
	uFnGet->FunctionFlags |= 0x400;
	uFnGet->iNative = 34022;

	return Get_Params.ReturnValue;
};

// Function GearboxFramework.IPathingObstacle.GetObstacleInfo
// [0x00024400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[34160])
// Parameter Info:
// class UPathingObstacleInfo*    ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// bool                           bFillInfo                      (CPF_OptionalParm | CPF_Parm)

class UPathingObstacleInfo* UIPathingObstacle::GetObstacleInfo(bool bFillInfo)
{
	static UFunction* uFnGetObstacleInfo = nullptr;

	if (!uFnGetObstacleInfo)
	{
		uFnGetObstacleInfo = UFunction::FindFunction("Function GearboxFramework.IPathingObstacle.GetObstacleInfo");
	}

	UIPathingObstacle_execGetObstacleInfo_Params GetObstacleInfo_Params;
	memset(&GetObstacleInfo_Params, 0, sizeof(GetObstacleInfo_Params));
	GetObstacleInfo_Params.bFillInfo = bFillInfo;

	uFnGetObstacleInfo->iNative = 0;
	uFnGetObstacleInfo->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetObstacleInfo, &GetObstacleInfo_Params, nullptr);
	uFnGetObstacleInfo->FunctionFlags |= 0x400;
	uFnGetObstacleInfo->iNative = 34160;

	return GetObstacleInfo_Params.ReturnValue;
};

// Function GearboxFramework.IPathingObstacle.SetObstacleInfo
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35913])
// Parameter Info:
// class UPathingObstacleInfo*    Info                           (CPF_Parm)

void UIPathingObstacle::SetObstacleInfo(class UPathingObstacleInfo* Info)
{
	static UFunction* uFnSetObstacleInfo = nullptr;

	if (!uFnSetObstacleInfo)
	{
		uFnSetObstacleInfo = UFunction::FindFunction("Function GearboxFramework.IPathingObstacle.SetObstacleInfo");
	}

	UIPathingObstacle_execSetObstacleInfo_Params SetObstacleInfo_Params;
	memset(&SetObstacleInfo_Params, 0, sizeof(SetObstacleInfo_Params));
	memcpy_s(&SetObstacleInfo_Params.Info, sizeof(SetObstacleInfo_Params.Info), &Info, sizeof(Info));

	uFnSetObstacleInfo->iNative = 0;
	uFnSetObstacleInfo->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetObstacleInfo, &SetObstacleInfo_Params, nullptr);
	uFnSetObstacleInfo->FunctionFlags |= 0x400;
	uFnSetObstacleInfo->iNative = 35913;
};

// Function GearboxFramework.IPathingObstacle.GetObstacleActor
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34159])
// Parameter Info:
// class AActor*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class AActor* UIPathingObstacle::GetObstacleActor()
{
	static UFunction* uFnGetObstacleActor = nullptr;

	if (!uFnGetObstacleActor)
	{
		uFnGetObstacleActor = UFunction::FindFunction("Function GearboxFramework.IPathingObstacle.GetObstacleActor");
	}

	UIPathingObstacle_execGetObstacleActor_Params GetObstacleActor_Params;
	memset(&GetObstacleActor_Params, 0, sizeof(GetObstacleActor_Params));

	uFnGetObstacleActor->iNative = 0;
	uFnGetObstacleActor->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetObstacleActor, &GetObstacleActor_Params, nullptr);
	uFnGetObstacleActor->FunctionFlags |= 0x400;
	uFnGetObstacleActor->iNative = 34159;

	return GetObstacleActor_Params.ReturnValue;
};

// Function GearboxFramework.ISpawnPoint.GetInitialAction
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// EInitialActionType             ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

EInitialActionType UISpawnPoint::GetInitialAction()
{
	static UFunction* uFnGetInitialAction = nullptr;

	if (!uFnGetInitialAction)
	{
		uFnGetInitialAction = UFunction::FindFunction("Function GearboxFramework.ISpawnPoint.GetInitialAction");
	}

	UISpawnPoint_execGetInitialAction_Params GetInitialAction_Params;
	memset(&GetInitialAction_Params, 0, sizeof(GetInitialAction_Params));

	this->ProcessEvent(uFnGetInitialAction, &GetInitialAction_Params, nullptr);

	return GetInitialAction_Params.ReturnValue;
};

// Function GearboxFramework.ISpawnPoint.GetInitialDestination
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AActor*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class AActor* UISpawnPoint::GetInitialDestination()
{
	static UFunction* uFnGetInitialDestination = nullptr;

	if (!uFnGetInitialDestination)
	{
		uFnGetInitialDestination = UFunction::FindFunction("Function GearboxFramework.ISpawnPoint.GetInitialDestination");
	}

	UISpawnPoint_execGetInitialDestination_Params GetInitialDestination_Params;
	memset(&GetInitialDestination_Params, 0, sizeof(GetInitialDestination_Params));

	this->ProcessEvent(uFnGetInitialDestination, &GetInitialDestination_Params, nullptr);

	return GetInitialDestination_Params.ReturnValue;
};

// Function GearboxFramework.IStanceInterface.GetStanceComponent
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34226])
// Parameter Info:
// class UStanceComponent*        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline)

class UStanceComponent* UIStanceInterface::GetStanceComponent()
{
	static UFunction* uFnGetStanceComponent = nullptr;

	if (!uFnGetStanceComponent)
	{
		uFnGetStanceComponent = UFunction::FindFunction("Function GearboxFramework.IStanceInterface.GetStanceComponent");
	}

	UIStanceInterface_execGetStanceComponent_Params GetStanceComponent_Params;
	memset(&GetStanceComponent_Params, 0, sizeof(GetStanceComponent_Params));

	uFnGetStanceComponent->iNative = 0;
	uFnGetStanceComponent->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetStanceComponent, &GetStanceComponent_Params, nullptr);
	uFnGetStanceComponent->FunctionFlags |= 0x400;
	uFnGetStanceComponent->iNative = 34226;

	return GetStanceComponent_Params.ReturnValue;
};

// Function GearboxFramework.ITimerBehavior.SetTimerState
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// EBehaviorTimerID               TimerId                        (CPF_Parm)
// const struct FBehaviorTimerState& TimerState                     (CPF_Parm)

bool UITimerBehavior::SetTimerState(EBehaviorTimerID TimerId, const struct FBehaviorTimerState& TimerState)
{
	static UFunction* uFnSetTimerState = nullptr;

	if (!uFnSetTimerState)
	{
		uFnSetTimerState = UFunction::FindFunction("Function GearboxFramework.ITimerBehavior.SetTimerState");
	}

	UITimerBehavior_execSetTimerState_Params SetTimerState_Params;
	memset(&SetTimerState_Params, 0, sizeof(SetTimerState_Params));
	memcpy_s(&SetTimerState_Params.TimerId, sizeof(SetTimerState_Params.TimerId), &TimerId, sizeof(TimerId));
	memcpy_s(&SetTimerState_Params.TimerState, sizeof(SetTimerState_Params.TimerState), &TimerState, sizeof(TimerState));

	this->ProcessEvent(uFnSetTimerState, &SetTimerState_Params, nullptr);

	return SetTimerState_Params.ReturnValue;
};

// Function GearboxFramework.ITimerBehavior.GetTimerState
// [0x12420000] (FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// EBehaviorTimerID               TimerId                        (CPF_Parm)
// struct FBehaviorTimerState     TimerState                     (CPF_Parm | CPF_OutParm)

bool UITimerBehavior::GetTimerState(EBehaviorTimerID TimerId, struct FBehaviorTimerState& TimerState)
{
	static UFunction* uFnGetTimerState = nullptr;

	if (!uFnGetTimerState)
	{
		uFnGetTimerState = UFunction::FindFunction("Function GearboxFramework.ITimerBehavior.GetTimerState");
	}

	UITimerBehavior_execGetTimerState_Params GetTimerState_Params;
	memset(&GetTimerState_Params, 0, sizeof(GetTimerState_Params));
	memcpy_s(&GetTimerState_Params.TimerId, sizeof(GetTimerState_Params.TimerId), &TimerId, sizeof(TimerId));
	memcpy_s(&GetTimerState_Params.TimerState, sizeof(GetTimerState_Params.TimerState), &TimerState, sizeof(TimerState));

	this->ProcessEvent(uFnGetTimerState, &GetTimerState_Params, nullptr);

	memcpy_s(&TimerState, sizeof(TimerState), &GetTimerState_Params.TimerState, sizeof(GetTimerState_Params.TimerState));

	return GetTimerState_Params.ReturnValue;
};

// Function GearboxFramework.ITimerBehavior.GetTimeSeconds
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float UITimerBehavior::GetTimeSeconds()
{
	static UFunction* uFnGetTimeSeconds = nullptr;

	if (!uFnGetTimeSeconds)
	{
		uFnGetTimeSeconds = UFunction::FindFunction("Function GearboxFramework.ITimerBehavior.GetTimeSeconds");
	}

	UITimerBehavior_execGetTimeSeconds_Params GetTimeSeconds_Params;
	memset(&GetTimeSeconds_Params, 0, sizeof(GetTimeSeconds_Params));

	this->ProcessEvent(uFnGetTimeSeconds, &GetTimeSeconds_Params, nullptr);

	return GetTimeSeconds_Params.ReturnValue;
};

// Function GearboxFramework.LeviathanService.OnExternalUIChanged
// [0x00020402] (FUNC_Defined | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2263])
// Parameter Info:
// bool                           bIsOpening                     (CPF_Parm)

void ULeviathanService::OnExternalUIChanged(bool bIsOpening)
{
	static UFunction* uFnOnExternalUIChanged = nullptr;

	if (!uFnOnExternalUIChanged)
	{
		uFnOnExternalUIChanged = UFunction::FindFunction("Function GearboxFramework.LeviathanService.OnExternalUIChanged");
	}

	ULeviathanService_execOnExternalUIChanged_Params OnExternalUIChanged_Params;
	memset(&OnExternalUIChanged_Params, 0, sizeof(OnExternalUIChanged_Params));
	OnExternalUIChanged_Params.bIsOpening = bIsOpening;

	uFnOnExternalUIChanged->iNative = 0;
	uFnOnExternalUIChanged->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnExternalUIChanged, &OnExternalUIChanged_Params, nullptr);
	uFnOnExternalUIChanged->FunctionFlags |= 0x400;
	uFnOnExternalUIChanged->iNative = 2263;
};

// Function GearboxFramework.LeviathanService.GetLeviathanService
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[34127])
// Parameter Info:
// class ULeviathanService*       ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class ULeviathanService* ULeviathanService::GetLeviathanService()
{
	static UFunction* uFnGetLeviathanService = nullptr;

	if (!uFnGetLeviathanService)
	{
		uFnGetLeviathanService = UFunction::FindFunction("Function GearboxFramework.LeviathanService.GetLeviathanService");
	}

	ULeviathanService_execGetLeviathanService_Params GetLeviathanService_Params;
	memset(&GetLeviathanService_Params, 0, sizeof(GetLeviathanService_Params));

	uFnGetLeviathanService->iNative = 0;
	uFnGetLeviathanService->FunctionFlags &= ~0x400;
	ULeviathanService::StaticClass()->ProcessEvent(uFnGetLeviathanService, &GetLeviathanService_Params, nullptr);
	uFnGetLeviathanService->FunctionFlags |= 0x400;
	uFnGetLeviathanService->iNative = 34127;

	return GetLeviathanService_Params.ReturnValue;
};

// Function GearboxFramework.MindTargetInfo.IsTargetingMe
// [0x00020402] (FUNC_Defined | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2498])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UMindTargetInfo::IsTargetingMe()
{
	static UFunction* uFnIsTargetingMe = nullptr;

	if (!uFnIsTargetingMe)
	{
		uFnIsTargetingMe = UFunction::FindFunction("Function GearboxFramework.MindTargetInfo.IsTargetingMe");
	}

	UMindTargetInfo_execIsTargetingMe_Params IsTargetingMe_Params;
	memset(&IsTargetingMe_Params, 0, sizeof(IsTargetingMe_Params));

	uFnIsTargetingMe->iNative = 0;
	uFnIsTargetingMe->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsTargetingMe, &IsTargetingMe_Params, nullptr);
	uFnIsTargetingMe->FunctionFlags |= 0x400;
	uFnIsTargetingMe->iNative = 2498;

	return IsTargetingMe_Params.ReturnValue;
};

// Function GearboxFramework.PerchTag.RequiresEnd
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35711])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UPerchTag::RequiresEnd()
{
	static UFunction* uFnRequiresEnd = nullptr;

	if (!uFnRequiresEnd)
	{
		uFnRequiresEnd = UFunction::FindFunction("Function GearboxFramework.PerchTag.RequiresEnd");
	}

	UPerchTag_execRequiresEnd_Params RequiresEnd_Params;
	memset(&RequiresEnd_Params, 0, sizeof(RequiresEnd_Params));

	uFnRequiresEnd->iNative = 0;
	uFnRequiresEnd->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRequiresEnd, &RequiresEnd_Params, nullptr);
	uFnRequiresEnd->FunctionFlags |= 0x400;
	uFnRequiresEnd->iNative = 35711;

	return RequiresEnd_Params.ReturnValue;
};

// Function GearboxFramework.PerchTag.RequiresIdle
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35712])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UPerchTag::RequiresIdle()
{
	static UFunction* uFnRequiresIdle = nullptr;

	if (!uFnRequiresIdle)
	{
		uFnRequiresIdle = UFunction::FindFunction("Function GearboxFramework.PerchTag.RequiresIdle");
	}

	UPerchTag_execRequiresIdle_Params RequiresIdle_Params;
	memset(&RequiresIdle_Params, 0, sizeof(RequiresIdle_Params));

	uFnRequiresIdle->iNative = 0;
	uFnRequiresIdle->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRequiresIdle, &RequiresIdle_Params, nullptr);
	uFnRequiresIdle->FunctionFlags |= 0x400;
	uFnRequiresIdle->iNative = 35712;

	return RequiresIdle_Params.ReturnValue;
};

// Function GearboxFramework.PerchTag.RequiresStart
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35713])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UPerchTag::RequiresStart()
{
	static UFunction* uFnRequiresStart = nullptr;

	if (!uFnRequiresStart)
	{
		uFnRequiresStart = UFunction::FindFunction("Function GearboxFramework.PerchTag.RequiresStart");
	}

	UPerchTag_execRequiresStart_Params RequiresStart_Params;
	memset(&RequiresStart_Params, 0, sizeof(RequiresStart_Params));

	uFnRequiresStart->iNative = 0;
	uFnRequiresStart->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRequiresStart, &RequiresStart_Params, nullptr);
	uFnRequiresStart->FunctionFlags |= 0x400;
	uFnRequiresStart->iNative = 35713;

	return RequiresStart_Params.ReturnValue;
};

// Function GearboxFramework.PerchTag.RotateToPerch
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35776])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UPerchTag::RotateToPerch()
{
	static UFunction* uFnRotateToPerch = nullptr;

	if (!uFnRotateToPerch)
	{
		uFnRotateToPerch = UFunction::FindFunction("Function GearboxFramework.PerchTag.RotateToPerch");
	}

	UPerchTag_execRotateToPerch_Params RotateToPerch_Params;
	memset(&RotateToPerch_Params, 0, sizeof(RotateToPerch_Params));

	uFnRotateToPerch->iNative = 0;
	uFnRotateToPerch->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRotateToPerch, &RotateToPerch_Params, nullptr);
	uFnRotateToPerch->FunctionFlags |= 0x400;
	uFnRotateToPerch->iNative = 35776;

	return RotateToPerch_Params.ReturnValue;
};

// Function GearboxFramework.PerchTag.AlignToPerch
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[31835])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UPerchTag::AlignToPerch()
{
	static UFunction* uFnAlignToPerch = nullptr;

	if (!uFnAlignToPerch)
	{
		uFnAlignToPerch = UFunction::FindFunction("Function GearboxFramework.PerchTag.AlignToPerch");
	}

	UPerchTag_execAlignToPerch_Params AlignToPerch_Params;
	memset(&AlignToPerch_Params, 0, sizeof(AlignToPerch_Params));

	uFnAlignToPerch->iNative = 0;
	uFnAlignToPerch->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnAlignToPerch, &AlignToPerch_Params, nullptr);
	uFnAlignToPerch->FunctionFlags |= 0x400;
	uFnAlignToPerch->iNative = 31835;

	return AlignToPerch_Params.ReturnValue;
};

// Function GearboxFramework.PerchTag.GetIdleType
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34111])
// Parameter Info:
// EPerchIdleType                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

EPerchIdleType UPerchTag::GetIdleType()
{
	static UFunction* uFnGetIdleType = nullptr;

	if (!uFnGetIdleType)
	{
		uFnGetIdleType = UFunction::FindFunction("Function GearboxFramework.PerchTag.GetIdleType");
	}

	UPerchTag_execGetIdleType_Params GetIdleType_Params;
	memset(&GetIdleType_Params, 0, sizeof(GetIdleType_Params));

	uFnGetIdleType->iNative = 0;
	uFnGetIdleType->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetIdleType, &GetIdleType_Params, nullptr);
	uFnGetIdleType->FunctionFlags |= 0x400;
	uFnGetIdleType->iNative = 34111;

	return GetIdleType_Params.ReturnValue;
};

// Function GearboxFramework.NavAnimConnection.GetNode
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34147])
// Parameter Info:
// class ANavAnimNode*            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class ANavAnimNode* UNavAnimConnection::GetNode()
{
	static UFunction* uFnGetNode = nullptr;

	if (!uFnGetNode)
	{
		uFnGetNode = UFunction::FindFunction("Function GearboxFramework.NavAnimConnection.GetNode");
	}

	UNavAnimConnection_execGetNode_Params GetNode_Params;
	memset(&GetNode_Params, 0, sizeof(GetNode_Params));

	uFnGetNode->iNative = 0;
	uFnGetNode->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetNode, &GetNode_Params, nullptr);
	uFnGetNode->FunctionFlags |= 0x400;
	uFnGetNode->iNative = 34147;

	return GetNode_Params.ReturnValue;
};

// Function GearboxFramework.PathingObstacleActor.GetObstacleInfo
// [0x00024400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[34160])
// Parameter Info:
// class UPathingObstacleInfo*    ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// bool                           bFillInfo                      (CPF_OptionalParm | CPF_Parm)

class UPathingObstacleInfo* APathingObstacleActor::GetObstacleInfo(bool bFillInfo)
{
	static UFunction* uFnGetObstacleInfo = nullptr;

	if (!uFnGetObstacleInfo)
	{
		uFnGetObstacleInfo = UFunction::FindFunction("Function GearboxFramework.PathingObstacleActor.GetObstacleInfo");
	}

	APathingObstacleActor_execGetObstacleInfo_Params GetObstacleInfo_Params;
	memset(&GetObstacleInfo_Params, 0, sizeof(GetObstacleInfo_Params));
	GetObstacleInfo_Params.bFillInfo = bFillInfo;

	uFnGetObstacleInfo->iNative = 0;
	uFnGetObstacleInfo->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetObstacleInfo, &GetObstacleInfo_Params, nullptr);
	uFnGetObstacleInfo->FunctionFlags |= 0x400;
	uFnGetObstacleInfo->iNative = 34160;

	return GetObstacleInfo_Params.ReturnValue;
};

// Function GearboxFramework.PathingObstacleActor.SetObstacleInfo
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35913])
// Parameter Info:
// class UPathingObstacleInfo*    Info                           (CPF_Parm)

void APathingObstacleActor::SetObstacleInfo(class UPathingObstacleInfo* Info)
{
	static UFunction* uFnSetObstacleInfo = nullptr;

	if (!uFnSetObstacleInfo)
	{
		uFnSetObstacleInfo = UFunction::FindFunction("Function GearboxFramework.PathingObstacleActor.SetObstacleInfo");
	}

	APathingObstacleActor_execSetObstacleInfo_Params SetObstacleInfo_Params;
	memset(&SetObstacleInfo_Params, 0, sizeof(SetObstacleInfo_Params));
	memcpy_s(&SetObstacleInfo_Params.Info, sizeof(SetObstacleInfo_Params.Info), &Info, sizeof(Info));

	uFnSetObstacleInfo->iNative = 0;
	uFnSetObstacleInfo->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetObstacleInfo, &SetObstacleInfo_Params, nullptr);
	uFnSetObstacleInfo->FunctionFlags |= 0x400;
	uFnSetObstacleInfo->iNative = 35913;
};

// Function GearboxFramework.PathingObstacleActor.OnToggle
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2212])
// Parameter Info:
// class USeqAct_Toggle*          ToggleAction                   (CPF_Parm)

void APathingObstacleActor::OnToggle(class USeqAct_Toggle* ToggleAction)
{
	static UFunction* uFnOnToggle = nullptr;

	if (!uFnOnToggle)
	{
		uFnOnToggle = UFunction::FindFunction("Function GearboxFramework.PathingObstacleActor.OnToggle");
	}

	APathingObstacleActor_execOnToggle_Params OnToggle_Params;
	memset(&OnToggle_Params, 0, sizeof(OnToggle_Params));
	memcpy_s(&OnToggle_Params.ToggleAction, sizeof(OnToggle_Params.ToggleAction), &ToggleAction, sizeof(ToggleAction));

	uFnOnToggle->iNative = 0;
	uFnOnToggle->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnToggle, &OnToggle_Params, nullptr);
	uFnOnToggle->FunctionFlags |= 0x400;
	uFnOnToggle->iNative = 2212;
};

// Function GearboxFramework.PathingObstacleActor.GetObstacleActor
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34159])
// Parameter Info:
// class AActor*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class AActor* APathingObstacleActor::GetObstacleActor()
{
	static UFunction* uFnGetObstacleActor = nullptr;

	if (!uFnGetObstacleActor)
	{
		uFnGetObstacleActor = UFunction::FindFunction("Function GearboxFramework.PathingObstacleActor.GetObstacleActor");
	}

	APathingObstacleActor_execGetObstacleActor_Params GetObstacleActor_Params;
	memset(&GetObstacleActor_Params, 0, sizeof(GetObstacleActor_Params));

	uFnGetObstacleActor->iNative = 0;
	uFnGetObstacleActor->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetObstacleActor, &GetObstacleActor_Params, nullptr);
	uFnGetObstacleActor->FunctionFlags |= 0x400;
	uFnGetObstacleActor->iNative = 34159;

	return GetObstacleActor_Params.ReturnValue;
};

// Function GearboxFramework.PawnRelevanceUtilityFixedCost.SetMaxLineChecks
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35905])
// Parameter Info:
// int32_t                        CheckCount                     (CPF_Parm)

void UPawnRelevanceUtilityFixedCost::SetMaxLineChecks(int32_t CheckCount)
{
	static UFunction* uFnSetMaxLineChecks = nullptr;

	if (!uFnSetMaxLineChecks)
	{
		uFnSetMaxLineChecks = UFunction::FindFunction("Function GearboxFramework.PawnRelevanceUtilityFixedCost.SetMaxLineChecks");
	}

	UPawnRelevanceUtilityFixedCost_execSetMaxLineChecks_Params SetMaxLineChecks_Params;
	memset(&SetMaxLineChecks_Params, 0, sizeof(SetMaxLineChecks_Params));
	memcpy_s(&SetMaxLineChecks_Params.CheckCount, sizeof(SetMaxLineChecks_Params.CheckCount), &CheckCount, sizeof(CheckCount));

	uFnSetMaxLineChecks->iNative = 0;
	uFnSetMaxLineChecks->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetMaxLineChecks, &SetMaxLineChecks_Params, nullptr);
	uFnSetMaxLineChecks->FunctionFlags |= 0x400;
	uFnSetMaxLineChecks->iNative = 35905;
};

// Function GearboxFramework.PawnRelevanceUtilityFixedCost.SetBucket
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35887])
// Parameter Info:
// int32_t                        BucketNum                      (CPF_Parm)
// float                          BucketDistance                 (CPF_Parm)
// int32_t                        MaxLineChecks                  (CPF_Parm)
// int32_t                        MaxIterations                  (CPF_Parm)

void UPawnRelevanceUtilityFixedCost::SetBucket(int32_t BucketNum, float BucketDistance, int32_t MaxLineChecks, int32_t MaxIterations)
{
	static UFunction* uFnSetBucket = nullptr;

	if (!uFnSetBucket)
	{
		uFnSetBucket = UFunction::FindFunction("Function GearboxFramework.PawnRelevanceUtilityFixedCost.SetBucket");
	}

	UPawnRelevanceUtilityFixedCost_execSetBucket_Params SetBucket_Params;
	memset(&SetBucket_Params, 0, sizeof(SetBucket_Params));
	memcpy_s(&SetBucket_Params.BucketNum, sizeof(SetBucket_Params.BucketNum), &BucketNum, sizeof(BucketNum));
	memcpy_s(&SetBucket_Params.BucketDistance, sizeof(SetBucket_Params.BucketDistance), &BucketDistance, sizeof(BucketDistance));
	memcpy_s(&SetBucket_Params.MaxLineChecks, sizeof(SetBucket_Params.MaxLineChecks), &MaxLineChecks, sizeof(MaxLineChecks));
	memcpy_s(&SetBucket_Params.MaxIterations, sizeof(SetBucket_Params.MaxIterations), &MaxIterations, sizeof(MaxIterations));

	uFnSetBucket->iNative = 0;
	uFnSetBucket->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetBucket, &SetBucket_Params, nullptr);
	uFnSetBucket->FunctionFlags |= 0x400;
	uFnSetBucket->iNative = 35887;
};

// Function GearboxFramework.PawnRelevanceUtilityFixedCost.ShowBucketSettings
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35957])
// Parameter Info:

void UPawnRelevanceUtilityFixedCost::ShowBucketSettings()
{
	static UFunction* uFnShowBucketSettings = nullptr;

	if (!uFnShowBucketSettings)
	{
		uFnShowBucketSettings = UFunction::FindFunction("Function GearboxFramework.PawnRelevanceUtilityFixedCost.ShowBucketSettings");
	}

	UPawnRelevanceUtilityFixedCost_execShowBucketSettings_Params ShowBucketSettings_Params;
	memset(&ShowBucketSettings_Params, 0, sizeof(ShowBucketSettings_Params));

	uFnShowBucketSettings->iNative = 0;
	uFnShowBucketSettings->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnShowBucketSettings, &ShowBucketSettings_Params, nullptr);
	uFnShowBucketSettings->FunctionFlags |= 0x400;
	uFnShowBucketSettings->iNative = 35957;
};

// Function GearboxFramework.PawnRelevanceUtilityFixedCost.PrintBuckets
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35538])
// Parameter Info:

void UPawnRelevanceUtilityFixedCost::PrintBuckets()
{
	static UFunction* uFnPrintBuckets = nullptr;

	if (!uFnPrintBuckets)
	{
		uFnPrintBuckets = UFunction::FindFunction("Function GearboxFramework.PawnRelevanceUtilityFixedCost.PrintBuckets");
	}

	UPawnRelevanceUtilityFixedCost_execPrintBuckets_Params PrintBuckets_Params;
	memset(&PrintBuckets_Params, 0, sizeof(PrintBuckets_Params));

	uFnPrintBuckets->iNative = 0;
	uFnPrintBuckets->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPrintBuckets, &PrintBuckets_Params, nullptr);
	uFnPrintBuckets->FunctionFlags |= 0x400;
	uFnPrintBuckets->iNative = 35538;
};

// Function GearboxFramework.PhysicsJumpConnection.GetNode
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34147])
// Parameter Info:
// class APhysicsJumpNode*        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class APhysicsJumpNode* UPhysicsJumpConnection::GetNode()
{
	static UFunction* uFnGetNode = nullptr;

	if (!uFnGetNode)
	{
		uFnGetNode = UFunction::FindFunction("Function GearboxFramework.PhysicsJumpConnection.GetNode");
	}

	UPhysicsJumpConnection_execGetNode_Params GetNode_Params;
	memset(&GetNode_Params, 0, sizeof(GetNode_Params));

	uFnGetNode->iNative = 0;
	uFnGetNode->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetNode, &GetNode_Params, nullptr);
	uFnGetNode->FunctionFlags |= 0x400;
	uFnGetNode->iNative = 34147;

	return GetNode_Params.ReturnValue;
};

// Function GearboxFramework.PhysicsStateExpressionEvaluator.Evaluate
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[22809])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 ContextSource                  (CPF_Parm)

bool UPhysicsStateExpressionEvaluator::Evaluate(class UObject* ContextSource)
{
	static UFunction* uFnEvaluate = nullptr;

	if (!uFnEvaluate)
	{
		uFnEvaluate = UFunction::FindFunction("Function GearboxFramework.PhysicsStateExpressionEvaluator.Evaluate");
	}

	UPhysicsStateExpressionEvaluator_execEvaluate_Params Evaluate_Params;
	memset(&Evaluate_Params, 0, sizeof(Evaluate_Params));
	memcpy_s(&Evaluate_Params.ContextSource, sizeof(Evaluate_Params.ContextSource), &ContextSource, sizeof(ContextSource));

	uFnEvaluate->iNative = 0;
	uFnEvaluate->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnEvaluate, &Evaluate_Params, nullptr);
	uFnEvaluate->FunctionFlags |= 0x400;
	uFnEvaluate->iNative = 22809;

	return Evaluate_Params.ReturnValue;
};

// Function GearboxFramework.PopUpDebugBarGraph.Display
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[7436])
// Parameter Info:
// float                          DeltaSeconds                   (CPF_Parm)
// class UCanvas*                 Canvas                         (CPF_Parm)

void UPopUpDebugBarGraph::Display(float DeltaSeconds, class UCanvas* Canvas)
{
	static UFunction* uFnDisplay = nullptr;

	if (!uFnDisplay)
	{
		uFnDisplay = UFunction::FindFunction("Function GearboxFramework.PopUpDebugBarGraph.Display");
	}

	UPopUpDebugBarGraph_execDisplay_Params Display_Params;
	memset(&Display_Params, 0, sizeof(Display_Params));
	memcpy_s(&Display_Params.DeltaSeconds, sizeof(Display_Params.DeltaSeconds), &DeltaSeconds, sizeof(DeltaSeconds));
	memcpy_s(&Display_Params.Canvas, sizeof(Display_Params.Canvas), &Canvas, sizeof(Canvas));

	uFnDisplay->iNative = 0;
	uFnDisplay->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnDisplay, &Display_Params, nullptr);
	uFnDisplay->FunctionFlags |= 0x400;
	uFnDisplay->iNative = 7436;
};

// Function GearboxFramework.PopUpDebugBarGraph.GetValue
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[24017])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        ColumnNdx                      (CPF_Parm)

float UPopUpDebugBarGraph::GetValue(int32_t ColumnNdx)
{
	static UFunction* uFnGetValue = nullptr;

	if (!uFnGetValue)
	{
		uFnGetValue = UFunction::FindFunction("Function GearboxFramework.PopUpDebugBarGraph.GetValue");
	}

	UPopUpDebugBarGraph_execGetValue_Params GetValue_Params;
	memset(&GetValue_Params, 0, sizeof(GetValue_Params));
	memcpy_s(&GetValue_Params.ColumnNdx, sizeof(GetValue_Params.ColumnNdx), &ColumnNdx, sizeof(ColumnNdx));

	uFnGetValue->iNative = 0;
	uFnGetValue->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetValue, &GetValue_Params, nullptr);
	uFnGetValue->FunctionFlags |= 0x400;
	uFnGetValue->iNative = 24017;

	return GetValue_Params.ReturnValue;
};

// Function GearboxFramework.PopUpDebugBarGraph.SetValue
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35941])
// Parameter Info:
// int32_t                        ColumnNdx                      (CPF_Parm)
// float                          NewValue                       (CPF_Parm)

void UPopUpDebugBarGraph::SetValue(int32_t ColumnNdx, float NewValue)
{
	static UFunction* uFnSetValue = nullptr;

	if (!uFnSetValue)
	{
		uFnSetValue = UFunction::FindFunction("Function GearboxFramework.PopUpDebugBarGraph.SetValue");
	}

	UPopUpDebugBarGraph_execSetValue_Params SetValue_Params;
	memset(&SetValue_Params, 0, sizeof(SetValue_Params));
	memcpy_s(&SetValue_Params.ColumnNdx, sizeof(SetValue_Params.ColumnNdx), &ColumnNdx, sizeof(ColumnNdx));
	memcpy_s(&SetValue_Params.NewValue, sizeof(SetValue_Params.NewValue), &NewValue, sizeof(NewValue));

	uFnSetValue->iNative = 0;
	uFnSetValue->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetValue, &SetValue_Params, nullptr);
	uFnSetValue->FunctionFlags |= 0x400;
	uFnSetValue->iNative = 35941;
};

// Function GearboxFramework.PopUpDebugBarGraph.AddNewColumn
// [0x00024400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[31675])
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FColor&           ColumnColor                    (CPF_Parm)
// const class FString&           HeaderText                     (CPF_Parm | CPF_NeedCtorLink)
// float                          Value                          (CPF_OptionalParm | CPF_Parm)

int32_t UPopUpDebugBarGraph::AddNewColumn(const struct FColor& ColumnColor, const class FString& HeaderText, float Value)
{
	static UFunction* uFnAddNewColumn = nullptr;

	if (!uFnAddNewColumn)
	{
		uFnAddNewColumn = UFunction::FindFunction("Function GearboxFramework.PopUpDebugBarGraph.AddNewColumn");
	}

	UPopUpDebugBarGraph_execAddNewColumn_Params AddNewColumn_Params;
	memset(&AddNewColumn_Params, 0, sizeof(AddNewColumn_Params));
	memcpy_s(&AddNewColumn_Params.ColumnColor, sizeof(AddNewColumn_Params.ColumnColor), &ColumnColor, sizeof(ColumnColor));
	memcpy_s(&AddNewColumn_Params.HeaderText, sizeof(AddNewColumn_Params.HeaderText), &HeaderText, sizeof(HeaderText));
	memcpy_s(&AddNewColumn_Params.Value, sizeof(AddNewColumn_Params.Value), &Value, sizeof(Value));

	uFnAddNewColumn->iNative = 0;
	uFnAddNewColumn->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnAddNewColumn, &AddNewColumn_Params, nullptr);
	uFnAddNewColumn->FunctionFlags |= 0x400;
	uFnAddNewColumn->iNative = 31675;

	return AddNewColumn_Params.ReturnValue;
};

// Function GearboxFramework.PopUpDebugBarGraph.AddTitleText
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[31683])
// Parameter Info:
// const class FString&           NewTitleText                   (CPF_Parm | CPF_NeedCtorLink)

void UPopUpDebugBarGraph::AddTitleText(const class FString& NewTitleText)
{
	static UFunction* uFnAddTitleText = nullptr;

	if (!uFnAddTitleText)
	{
		uFnAddTitleText = UFunction::FindFunction("Function GearboxFramework.PopUpDebugBarGraph.AddTitleText");
	}

	UPopUpDebugBarGraph_execAddTitleText_Params AddTitleText_Params;
	memset(&AddTitleText_Params, 0, sizeof(AddTitleText_Params));
	memcpy_s(&AddTitleText_Params.NewTitleText, sizeof(AddTitleText_Params.NewTitleText), &NewTitleText, sizeof(NewTitleText));

	uFnAddTitleText->iNative = 0;
	uFnAddTitleText->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnAddTitleText, &AddTitleText_Params, nullptr);
	uFnAddTitleText->FunctionFlags |= 0x400;
	uFnAddTitleText->iNative = 31683;
};

// Function GearboxFramework.RegionDefinition.GetDefaultRegionGameStage
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34079])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        MinGameStage                   (CPF_Parm | CPF_OutParm)
// int32_t                        MaxGameStage                   (CPF_Parm | CPF_OutParm)
// int32_t                        AwesomeLevel                   (CPF_Parm | CPF_OutParm)
// int32_t                        GameStageIncreaseOverPlayerLevel (CPF_Parm | CPF_OutParm)

bool URegionDefinition::GetDefaultRegionGameStage(int32_t& MinGameStage, int32_t& MaxGameStage, int32_t& AwesomeLevel, int32_t& GameStageIncreaseOverPlayerLevel)
{
	static UFunction* uFnGetDefaultRegionGameStage = nullptr;

	if (!uFnGetDefaultRegionGameStage)
	{
		uFnGetDefaultRegionGameStage = UFunction::FindFunction("Function GearboxFramework.RegionDefinition.GetDefaultRegionGameStage");
	}

	URegionDefinition_execGetDefaultRegionGameStage_Params GetDefaultRegionGameStage_Params;
	memset(&GetDefaultRegionGameStage_Params, 0, sizeof(GetDefaultRegionGameStage_Params));
	memcpy_s(&GetDefaultRegionGameStage_Params.MinGameStage, sizeof(GetDefaultRegionGameStage_Params.MinGameStage), &MinGameStage, sizeof(MinGameStage));
	memcpy_s(&GetDefaultRegionGameStage_Params.MaxGameStage, sizeof(GetDefaultRegionGameStage_Params.MaxGameStage), &MaxGameStage, sizeof(MaxGameStage));
	memcpy_s(&GetDefaultRegionGameStage_Params.AwesomeLevel, sizeof(GetDefaultRegionGameStage_Params.AwesomeLevel), &AwesomeLevel, sizeof(AwesomeLevel));
	memcpy_s(&GetDefaultRegionGameStage_Params.GameStageIncreaseOverPlayerLevel, sizeof(GetDefaultRegionGameStage_Params.GameStageIncreaseOverPlayerLevel), &GameStageIncreaseOverPlayerLevel, sizeof(GameStageIncreaseOverPlayerLevel));

	uFnGetDefaultRegionGameStage->iNative = 0;
	uFnGetDefaultRegionGameStage->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetDefaultRegionGameStage, &GetDefaultRegionGameStage_Params, nullptr);
	uFnGetDefaultRegionGameStage->FunctionFlags |= 0x400;
	uFnGetDefaultRegionGameStage->iNative = 34079;

	memcpy_s(&MinGameStage, sizeof(MinGameStage), &GetDefaultRegionGameStage_Params.MinGameStage, sizeof(GetDefaultRegionGameStage_Params.MinGameStage));
	memcpy_s(&MaxGameStage, sizeof(MaxGameStage), &GetDefaultRegionGameStage_Params.MaxGameStage, sizeof(GetDefaultRegionGameStage_Params.MaxGameStage));
	memcpy_s(&AwesomeLevel, sizeof(AwesomeLevel), &GetDefaultRegionGameStage_Params.AwesomeLevel, sizeof(GetDefaultRegionGameStage_Params.AwesomeLevel));
	memcpy_s(&GameStageIncreaseOverPlayerLevel, sizeof(GameStageIncreaseOverPlayerLevel), &GetDefaultRegionGameStage_Params.GameStageIncreaseOverPlayerLevel, sizeof(GetDefaultRegionGameStage_Params.GameStageIncreaseOverPlayerLevel));

	return GetDefaultRegionGameStage_Params.ReturnValue;
};

// Function GearboxFramework.RegionDefinition.TestRegionGameStage
// [0x00424400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[36428])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// bool                           bDefaultGameStage              (CPF_OptionalParm | CPF_Parm)
// int32_t                        GameStage                      (CPF_Parm | CPF_OutParm)
// int32_t                        AwesomeLevel                   (CPF_Parm | CPF_OutParm)

bool URegionDefinition::TestRegionGameStage(bool bDefaultGameStage, int32_t& GameStage, int32_t& AwesomeLevel)
{
	static UFunction* uFnTestRegionGameStage = nullptr;

	if (!uFnTestRegionGameStage)
	{
		uFnTestRegionGameStage = UFunction::FindFunction("Function GearboxFramework.RegionDefinition.TestRegionGameStage");
	}

	URegionDefinition_execTestRegionGameStage_Params TestRegionGameStage_Params;
	memset(&TestRegionGameStage_Params, 0, sizeof(TestRegionGameStage_Params));
	TestRegionGameStage_Params.bDefaultGameStage = bDefaultGameStage;
	memcpy_s(&TestRegionGameStage_Params.GameStage, sizeof(TestRegionGameStage_Params.GameStage), &GameStage, sizeof(GameStage));
	memcpy_s(&TestRegionGameStage_Params.AwesomeLevel, sizeof(TestRegionGameStage_Params.AwesomeLevel), &AwesomeLevel, sizeof(AwesomeLevel));

	uFnTestRegionGameStage->iNative = 0;
	uFnTestRegionGameStage->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnTestRegionGameStage, &TestRegionGameStage_Params, nullptr);
	uFnTestRegionGameStage->FunctionFlags |= 0x400;
	uFnTestRegionGameStage->iNative = 36428;

	memcpy_s(&GameStage, sizeof(GameStage), &TestRegionGameStage_Params.GameStage, sizeof(TestRegionGameStage_Params.GameStage));
	memcpy_s(&AwesomeLevel, sizeof(AwesomeLevel), &TestRegionGameStage_Params.AwesomeLevel, sizeof(TestRegionGameStage_Params.AwesomeLevel));

	return TestRegionGameStage_Params.ReturnValue;
};

// Function GearboxFramework.RegionDefinition.GetRegionGameStage
// [0x00424400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34191])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// bool                           bDefaultGameStage              (CPF_OptionalParm | CPF_Parm)
// int32_t                        GameStage                      (CPF_Parm | CPF_OutParm)
// int32_t                        AwesomeLevel                   (CPF_Parm | CPF_OutParm)

bool URegionDefinition::GetRegionGameStage(bool bDefaultGameStage, int32_t& GameStage, int32_t& AwesomeLevel)
{
	static UFunction* uFnGetRegionGameStage = nullptr;

	if (!uFnGetRegionGameStage)
	{
		uFnGetRegionGameStage = UFunction::FindFunction("Function GearboxFramework.RegionDefinition.GetRegionGameStage");
	}

	URegionDefinition_execGetRegionGameStage_Params GetRegionGameStage_Params;
	memset(&GetRegionGameStage_Params, 0, sizeof(GetRegionGameStage_Params));
	GetRegionGameStage_Params.bDefaultGameStage = bDefaultGameStage;
	memcpy_s(&GetRegionGameStage_Params.GameStage, sizeof(GetRegionGameStage_Params.GameStage), &GameStage, sizeof(GameStage));
	memcpy_s(&GetRegionGameStage_Params.AwesomeLevel, sizeof(GetRegionGameStage_Params.AwesomeLevel), &AwesomeLevel, sizeof(AwesomeLevel));

	uFnGetRegionGameStage->iNative = 0;
	uFnGetRegionGameStage->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetRegionGameStage, &GetRegionGameStage_Params, nullptr);
	uFnGetRegionGameStage->FunctionFlags |= 0x400;
	uFnGetRegionGameStage->iNative = 34191;

	memcpy_s(&GameStage, sizeof(GameStage), &GetRegionGameStage_Params.GameStage, sizeof(GetRegionGameStage_Params.GameStage));
	memcpy_s(&AwesomeLevel, sizeof(AwesomeLevel), &GetRegionGameStage_Params.AwesomeLevel, sizeof(GetRegionGameStage_Params.AwesomeLevel));

	return GetRegionGameStage_Params.ReturnValue;
};

// Function GearboxFramework.RootMotionDefinition.CausesRootMotion
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32696])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool URootMotionDefinition::CausesRootMotion()
{
	static UFunction* uFnCausesRootMotion = nullptr;

	if (!uFnCausesRootMotion)
	{
		uFnCausesRootMotion = UFunction::FindFunction("Function GearboxFramework.RootMotionDefinition.CausesRootMotion");
	}

	URootMotionDefinition_execCausesRootMotion_Params CausesRootMotion_Params;
	memset(&CausesRootMotion_Params, 0, sizeof(CausesRootMotion_Params));

	uFnCausesRootMotion->iNative = 0;
	uFnCausesRootMotion->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCausesRootMotion, &CausesRootMotion_Params, nullptr);
	uFnCausesRootMotion->FunctionFlags |= 0x400;
	uFnCausesRootMotion->iNative = 32696;

	return CausesRootMotion_Params.ReturnValue;
};

// Function GearboxFramework.RotationComponent.IsHumanRotationDebugEnabled
// [0x00022400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[34665])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool URotationComponent::IsHumanRotationDebugEnabled()
{
	static UFunction* uFnIsHumanRotationDebugEnabled = nullptr;

	if (!uFnIsHumanRotationDebugEnabled)
	{
		uFnIsHumanRotationDebugEnabled = UFunction::FindFunction("Function GearboxFramework.RotationComponent.IsHumanRotationDebugEnabled");
	}

	URotationComponent_execIsHumanRotationDebugEnabled_Params IsHumanRotationDebugEnabled_Params;
	memset(&IsHumanRotationDebugEnabled_Params, 0, sizeof(IsHumanRotationDebugEnabled_Params));

	uFnIsHumanRotationDebugEnabled->iNative = 0;
	uFnIsHumanRotationDebugEnabled->FunctionFlags &= ~0x400;
	URotationComponent::StaticClass()->ProcessEvent(uFnIsHumanRotationDebugEnabled, &IsHumanRotationDebugEnabled_Params, nullptr);
	uFnIsHumanRotationDebugEnabled->FunctionFlags |= 0x400;
	uFnIsHumanRotationDebugEnabled->iNative = 34665;

	return IsHumanRotationDebugEnabled_Params.ReturnValue;
};

// Function GearboxFramework.RotationComponent.ToggleHumanRotationDebug
// [0x00022400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[36534])
// Parameter Info:

void URotationComponent::ToggleHumanRotationDebug()
{
	static UFunction* uFnToggleHumanRotationDebug = nullptr;

	if (!uFnToggleHumanRotationDebug)
	{
		uFnToggleHumanRotationDebug = UFunction::FindFunction("Function GearboxFramework.RotationComponent.ToggleHumanRotationDebug");
	}

	URotationComponent_execToggleHumanRotationDebug_Params ToggleHumanRotationDebug_Params;
	memset(&ToggleHumanRotationDebug_Params, 0, sizeof(ToggleHumanRotationDebug_Params));

	uFnToggleHumanRotationDebug->iNative = 0;
	uFnToggleHumanRotationDebug->FunctionFlags &= ~0x400;
	URotationComponent::StaticClass()->ProcessEvent(uFnToggleHumanRotationDebug, &ToggleHumanRotationDebug_Params, nullptr);
	uFnToggleHumanRotationDebug->FunctionFlags |= 0x400;
	uFnToggleHumanRotationDebug->iNative = 36534;
};

// Function GearboxFramework.RotationComponent.IsAIRotationDebugEnabled
// [0x00022400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[34645])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool URotationComponent::IsAIRotationDebugEnabled()
{
	static UFunction* uFnIsAIRotationDebugEnabled = nullptr;

	if (!uFnIsAIRotationDebugEnabled)
	{
		uFnIsAIRotationDebugEnabled = UFunction::FindFunction("Function GearboxFramework.RotationComponent.IsAIRotationDebugEnabled");
	}

	URotationComponent_execIsAIRotationDebugEnabled_Params IsAIRotationDebugEnabled_Params;
	memset(&IsAIRotationDebugEnabled_Params, 0, sizeof(IsAIRotationDebugEnabled_Params));

	uFnIsAIRotationDebugEnabled->iNative = 0;
	uFnIsAIRotationDebugEnabled->FunctionFlags &= ~0x400;
	URotationComponent::StaticClass()->ProcessEvent(uFnIsAIRotationDebugEnabled, &IsAIRotationDebugEnabled_Params, nullptr);
	uFnIsAIRotationDebugEnabled->FunctionFlags |= 0x400;
	uFnIsAIRotationDebugEnabled->iNative = 34645;

	return IsAIRotationDebugEnabled_Params.ReturnValue;
};

// Function GearboxFramework.RotationComponent.ToggleAIRotationDebug
// [0x00022400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[36521])
// Parameter Info:

void URotationComponent::ToggleAIRotationDebug()
{
	static UFunction* uFnToggleAIRotationDebug = nullptr;

	if (!uFnToggleAIRotationDebug)
	{
		uFnToggleAIRotationDebug = UFunction::FindFunction("Function GearboxFramework.RotationComponent.ToggleAIRotationDebug");
	}

	URotationComponent_execToggleAIRotationDebug_Params ToggleAIRotationDebug_Params;
	memset(&ToggleAIRotationDebug_Params, 0, sizeof(ToggleAIRotationDebug_Params));

	uFnToggleAIRotationDebug->iNative = 0;
	uFnToggleAIRotationDebug->FunctionFlags &= ~0x400;
	URotationComponent::StaticClass()->ProcessEvent(uFnToggleAIRotationDebug, &ToggleAIRotationDebug_Params, nullptr);
	uFnToggleAIRotationDebug->FunctionFlags |= 0x400;
	uFnToggleAIRotationDebug->iNative = 36521;
};

// Function GearboxFramework.RotationComponent.DrawRotationDebug
// [0x00022400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[33311])
// Parameter Info:

void URotationComponent::DrawRotationDebug()
{
	static UFunction* uFnDrawRotationDebug = nullptr;

	if (!uFnDrawRotationDebug)
	{
		uFnDrawRotationDebug = UFunction::FindFunction("Function GearboxFramework.RotationComponent.DrawRotationDebug");
	}

	URotationComponent_execDrawRotationDebug_Params DrawRotationDebug_Params;
	memset(&DrawRotationDebug_Params, 0, sizeof(DrawRotationDebug_Params));

	uFnDrawRotationDebug->iNative = 0;
	uFnDrawRotationDebug->FunctionFlags &= ~0x400;
	URotationComponent::StaticClass()->ProcessEvent(uFnDrawRotationDebug, &DrawRotationDebug_Params, nullptr);
	uFnDrawRotationDebug->FunctionFlags |= 0x400;
	uFnDrawRotationDebug->iNative = 33311;
};

// Function GearboxFramework.RotationComponent.TurnAnimFinished
// [0x00020402] (FUNC_Defined | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2566])
// Parameter Info:

void URotationComponent::TurnAnimFinished()
{
	static UFunction* uFnTurnAnimFinished = nullptr;

	if (!uFnTurnAnimFinished)
	{
		uFnTurnAnimFinished = UFunction::FindFunction("Function GearboxFramework.RotationComponent.TurnAnimFinished");
	}

	URotationComponent_execTurnAnimFinished_Params TurnAnimFinished_Params;
	memset(&TurnAnimFinished_Params, 0, sizeof(TurnAnimFinished_Params));

	uFnTurnAnimFinished->iNative = 0;
	uFnTurnAnimFinished->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnTurnAnimFinished, &TurnAnimFinished_Params, nullptr);
	uFnTurnAnimFinished->FunctionFlags |= 0x400;
	uFnTurnAnimFinished->iNative = 2566;
};

// Function GearboxFramework.RotationComponent.Initialize
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[14833])
// Parameter Info:

void URotationComponent::Initialize()
{
	static UFunction* uFnInitialize = nullptr;

	if (!uFnInitialize)
	{
		uFnInitialize = UFunction::FindFunction("Function GearboxFramework.RotationComponent.Initialize");
	}

	URotationComponent_execInitialize_Params Initialize_Params;
	memset(&Initialize_Params, 0, sizeof(Initialize_Params));

	uFnInitialize->iNative = 0;
	uFnInitialize->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInitialize, &Initialize_Params, nullptr);
	uFnInitialize->FunctionFlags |= 0x400;
	uFnInitialize->iNative = 14833;
};

// Function GearboxFramework.SeqAct_AIScripted.GetScriptedStateName
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// struct FName                   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FName USeqAct_AIScripted::GetScriptedStateName()
{
	static UFunction* uFnGetScriptedStateName = nullptr;

	if (!uFnGetScriptedStateName)
	{
		uFnGetScriptedStateName = UFunction::FindFunction("Function GearboxFramework.SeqAct_AIScripted.GetScriptedStateName");
	}

	USeqAct_AIScripted_execGetScriptedStateName_Params GetScriptedStateName_Params;
	memset(&GetScriptedStateName_Params, 0, sizeof(GetScriptedStateName_Params));

	this->ProcessEvent(uFnGetScriptedStateName, &GetScriptedStateName_Params, nullptr);

	return GetScriptedStateName_Params.ReturnValue;
};

// Function GearboxFramework.SeqAct_AIScripted.Deactivate
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[14975])
// Parameter Info:
// class UIAIInterface*           AIInterface                    (CPF_Parm)
// bool                           bInterrupted                   (CPF_Parm)

void USeqAct_AIScripted::Deactivate(class UIAIInterface* AIInterface, bool bInterrupted)
{
	static UFunction* uFnDeactivate = nullptr;

	if (!uFnDeactivate)
	{
		uFnDeactivate = UFunction::FindFunction("Function GearboxFramework.SeqAct_AIScripted.Deactivate");
	}

	USeqAct_AIScripted_execDeactivate_Params Deactivate_Params;
	memset(&Deactivate_Params, 0, sizeof(Deactivate_Params));
	memcpy_s(&Deactivate_Params.AIInterface, sizeof(Deactivate_Params.AIInterface), &AIInterface, sizeof(AIInterface));
	Deactivate_Params.bInterrupted = bInterrupted;

	uFnDeactivate->iNative = 0;
	uFnDeactivate->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnDeactivate, &Deactivate_Params, nullptr);
	uFnDeactivate->FunctionFlags |= 0x400;
	uFnDeactivate->iNative = 14975;
};

// Function GearboxFramework.SeqAct_AIScripted.Activate
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2290])
// Parameter Info:
// class UIAIInterface*           AIInterface                    (CPF_Parm)

void USeqAct_AIScripted::Activate(class UIAIInterface* AIInterface)
{
	static UFunction* uFnActivate = nullptr;

	if (!uFnActivate)
	{
		uFnActivate = UFunction::FindFunction("Function GearboxFramework.SeqAct_AIScripted.Activate");
	}

	USeqAct_AIScripted_execActivate_Params Activate_Params;
	memset(&Activate_Params, 0, sizeof(Activate_Params));
	memcpy_s(&Activate_Params.AIInterface, sizeof(Activate_Params.AIInterface), &AIInterface, sizeof(AIInterface));

	uFnActivate->iNative = 0;
	uFnActivate->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnActivate, &Activate_Params, nullptr);
	uFnActivate->FunctionFlags |= 0x400;
	uFnActivate->iNative = 2290;
};

// Function GearboxFramework.SeqAct_AICombatVolume.Activate
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2290])
// Parameter Info:
// class UIAIInterface*           AIInterface                    (CPF_Parm)

void USeqAct_AICombatVolume::Activate(class UIAIInterface* AIInterface)
{
	static UFunction* uFnActivate = nullptr;

	if (!uFnActivate)
	{
		uFnActivate = UFunction::FindFunction("Function GearboxFramework.SeqAct_AICombatVolume.Activate");
	}

	USeqAct_AICombatVolume_execActivate_Params Activate_Params;
	memset(&Activate_Params, 0, sizeof(Activate_Params));
	memcpy_s(&Activate_Params.AIInterface, sizeof(Activate_Params.AIInterface), &AIInterface, sizeof(AIInterface));

	uFnActivate->iNative = 0;
	uFnActivate->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnActivate, &Activate_Params, nullptr);
	uFnActivate->FunctionFlags |= 0x400;
	uFnActivate->iNative = 2290;
};

// Function GearboxFramework.SeqAct_AIScriptedAbort.Activate
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2290])
// Parameter Info:
// class UIAIInterface*           AIInterface                    (CPF_Parm)

void USeqAct_AIScriptedAbort::Activate(class UIAIInterface* AIInterface)
{
	static UFunction* uFnActivate = nullptr;

	if (!uFnActivate)
	{
		uFnActivate = UFunction::FindFunction("Function GearboxFramework.SeqAct_AIScriptedAbort.Activate");
	}

	USeqAct_AIScriptedAbort_execActivate_Params Activate_Params;
	memset(&Activate_Params, 0, sizeof(Activate_Params));
	memcpy_s(&Activate_Params.AIInterface, sizeof(Activate_Params.AIInterface), &AIInterface, sizeof(AIInterface));

	uFnActivate->iNative = 0;
	uFnActivate->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnActivate, &Activate_Params, nullptr);
	uFnActivate->FunctionFlags |= 0x400;
	uFnActivate->iNative = 2290;
};

// Function GearboxFramework.SeqAct_AIScriptedAction.Activate
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2290])
// Parameter Info:
// class UIAIInterface*           AIInterface                    (CPF_Parm)

void USeqAct_AIScriptedAction::Activate(class UIAIInterface* AIInterface)
{
	static UFunction* uFnActivate = nullptr;

	if (!uFnActivate)
	{
		uFnActivate = UFunction::FindFunction("Function GearboxFramework.SeqAct_AIScriptedAction.Activate");
	}

	USeqAct_AIScriptedAction_execActivate_Params Activate_Params;
	memset(&Activate_Params, 0, sizeof(Activate_Params));
	memcpy_s(&Activate_Params.AIInterface, sizeof(Activate_Params.AIInterface), &AIInterface, sizeof(AIInterface));

	uFnActivate->iNative = 0;
	uFnActivate->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnActivate, &Activate_Params, nullptr);
	uFnActivate->FunctionFlags |= 0x400;
	uFnActivate->iNative = 2290;
};

// Function GearboxFramework.SeqAct_AIScriptedMove.Activate
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2290])
// Parameter Info:
// class UIAIInterface*           AIInterface                    (CPF_Parm)

void USeqAct_AIScriptedMove::Activate(class UIAIInterface* AIInterface)
{
	static UFunction* uFnActivate = nullptr;

	if (!uFnActivate)
	{
		uFnActivate = UFunction::FindFunction("Function GearboxFramework.SeqAct_AIScriptedMove.Activate");
	}

	USeqAct_AIScriptedMove_execActivate_Params Activate_Params;
	memset(&Activate_Params, 0, sizeof(Activate_Params));
	memcpy_s(&Activate_Params.AIInterface, sizeof(Activate_Params.AIInterface), &AIInterface, sizeof(AIInterface));

	uFnActivate->iNative = 0;
	uFnActivate->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnActivate, &Activate_Params, nullptr);
	uFnActivate->FunctionFlags |= 0x400;
	uFnActivate->iNative = 2290;
};

// Function GearboxFramework.SeqAct_AIScriptedProvoke.Activate
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2290])
// Parameter Info:
// class UIAIInterface*           AIInterface                    (CPF_Parm)

void USeqAct_AIScriptedProvoke::Activate(class UIAIInterface* AIInterface)
{
	static UFunction* uFnActivate = nullptr;

	if (!uFnActivate)
	{
		uFnActivate = UFunction::FindFunction("Function GearboxFramework.SeqAct_AIScriptedProvoke.Activate");
	}

	USeqAct_AIScriptedProvoke_execActivate_Params Activate_Params;
	memset(&Activate_Params, 0, sizeof(Activate_Params));
	memcpy_s(&Activate_Params.AIInterface, sizeof(Activate_Params.AIInterface), &AIInterface, sizeof(AIInterface));

	uFnActivate->iNative = 0;
	uFnActivate->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnActivate, &Activate_Params, nullptr);
	uFnActivate->FunctionFlags |= 0x400;
	uFnActivate->iNative = 2290;
};

// Function GearboxFramework.SeqAct_AllPlayersInVolume.AllPlayersInVolumes
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[31851])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool USeqAct_AllPlayersInVolume::AllPlayersInVolumes()
{
	static UFunction* uFnAllPlayersInVolumes = nullptr;

	if (!uFnAllPlayersInVolumes)
	{
		uFnAllPlayersInVolumes = UFunction::FindFunction("Function GearboxFramework.SeqAct_AllPlayersInVolume.AllPlayersInVolumes");
	}

	USeqAct_AllPlayersInVolume_execAllPlayersInVolumes_Params AllPlayersInVolumes_Params;
	memset(&AllPlayersInVolumes_Params, 0, sizeof(AllPlayersInVolumes_Params));

	uFnAllPlayersInVolumes->iNative = 0;
	uFnAllPlayersInVolumes->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnAllPlayersInVolumes, &AllPlayersInVolumes_Params, nullptr);
	uFnAllPlayersInVolumes->FunctionFlags |= 0x400;
	uFnAllPlayersInVolumes->iNative = 31851;

	return AllPlayersInVolumes_Params.ReturnValue;
};

// Function GearboxFramework.SeqAct_AllPlayersInVolume.PlayerIsInAVolume
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35456])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class APlayerController*       PC                             (CPF_Parm)

bool USeqAct_AllPlayersInVolume::PlayerIsInAVolume(class APlayerController* PC)
{
	static UFunction* uFnPlayerIsInAVolume = nullptr;

	if (!uFnPlayerIsInAVolume)
	{
		uFnPlayerIsInAVolume = UFunction::FindFunction("Function GearboxFramework.SeqAct_AllPlayersInVolume.PlayerIsInAVolume");
	}

	USeqAct_AllPlayersInVolume_execPlayerIsInAVolume_Params PlayerIsInAVolume_Params;
	memset(&PlayerIsInAVolume_Params, 0, sizeof(PlayerIsInAVolume_Params));
	memcpy_s(&PlayerIsInAVolume_Params.PC, sizeof(PlayerIsInAVolume_Params.PC), &PC, sizeof(PC));

	uFnPlayerIsInAVolume->iNative = 0;
	uFnPlayerIsInAVolume->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPlayerIsInAVolume, &PlayerIsInAVolume_Params, nullptr);
	uFnPlayerIsInAVolume->FunctionFlags |= 0x400;
	uFnPlayerIsInAVolume->iNative = 35456;

	return PlayerIsInAVolume_Params.ReturnValue;
};

// Function GearboxFramework.SeqEvent_EncounterWaveComplete.NotifyWaveComplete
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35185])
// Parameter Info:
// int32_t                        nWave                          (CPF_Parm)

void USeqEvent_EncounterWaveComplete::NotifyWaveComplete(int32_t nWave)
{
	static UFunction* uFnNotifyWaveComplete = nullptr;

	if (!uFnNotifyWaveComplete)
	{
		uFnNotifyWaveComplete = UFunction::FindFunction("Function GearboxFramework.SeqEvent_EncounterWaveComplete.NotifyWaveComplete");
	}

	USeqEvent_EncounterWaveComplete_execNotifyWaveComplete_Params NotifyWaveComplete_Params;
	memset(&NotifyWaveComplete_Params, 0, sizeof(NotifyWaveComplete_Params));
	memcpy_s(&NotifyWaveComplete_Params.nWave, sizeof(NotifyWaveComplete_Params.nWave), &nWave, sizeof(nWave));

	uFnNotifyWaveComplete->iNative = 0;
	uFnNotifyWaveComplete->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnNotifyWaveComplete, &NotifyWaveComplete_Params, nullptr);
	uFnNotifyWaveComplete->FunctionFlags |= 0x400;
	uFnNotifyWaveComplete->iNative = 35185;
};

// Function GearboxFramework.SeqEvent_SpawnedActor.NotifySpawnedActor
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AActor*                  SpawnedActor                   (CPF_Parm)
// class ASpawner*                InDestSpawner                  (CPF_Parm)
// class AActor*                  InSpawnPoint                   (CPF_Parm)
// class AWorldInfo*              InOriginator                   (CPF_Parm)

void USeqEvent_SpawnedActor::eventNotifySpawnedActor(class AActor* SpawnedActor, class ASpawner* InDestSpawner, class AActor* InSpawnPoint, class AWorldInfo* InOriginator)
{
	static UFunction* uFnNotifySpawnedActor = nullptr;

	if (!uFnNotifySpawnedActor)
	{
		uFnNotifySpawnedActor = UFunction::FindFunction("Function GearboxFramework.SeqEvent_SpawnedActor.NotifySpawnedActor");
	}

	USeqEvent_SpawnedActor_eventNotifySpawnedActor_Params NotifySpawnedActor_Params;
	memset(&NotifySpawnedActor_Params, 0, sizeof(NotifySpawnedActor_Params));
	memcpy_s(&NotifySpawnedActor_Params.SpawnedActor, sizeof(NotifySpawnedActor_Params.SpawnedActor), &SpawnedActor, sizeof(SpawnedActor));
	memcpy_s(&NotifySpawnedActor_Params.InDestSpawner, sizeof(NotifySpawnedActor_Params.InDestSpawner), &InDestSpawner, sizeof(InDestSpawner));
	memcpy_s(&NotifySpawnedActor_Params.InSpawnPoint, sizeof(NotifySpawnedActor_Params.InSpawnPoint), &InSpawnPoint, sizeof(InSpawnPoint));
	memcpy_s(&NotifySpawnedActor_Params.InOriginator, sizeof(NotifySpawnedActor_Params.InOriginator), &InOriginator, sizeof(InOriginator));

	this->ProcessEvent(uFnNotifySpawnedActor, &NotifySpawnedActor_Params, nullptr);
};

// Function GearboxFramework.ShowDebugHelpers.DisplayMultiColumnDebugOutput
// [0x12422000] (FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AHUD*                    HUD                            (CPF_Parm)
// class TArray<struct FDebugEntryData> DebugInfo                      (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// float                          out_YL                         (CPF_Parm | CPF_OutParm)
// float                          out_YPos                       (CPF_Parm | CPF_OutParm)

void UShowDebugHelpers::DisplayMultiColumnDebugOutput(class AHUD* HUD, class TArray<struct FDebugEntryData>& DebugInfo, float& out_YL, float& out_YPos)
{
	static UFunction* uFnDisplayMultiColumnDebugOutput = nullptr;

	if (!uFnDisplayMultiColumnDebugOutput)
	{
		uFnDisplayMultiColumnDebugOutput = UFunction::FindFunction("Function GearboxFramework.ShowDebugHelpers.DisplayMultiColumnDebugOutput");
	}

	UShowDebugHelpers_execDisplayMultiColumnDebugOutput_Params DisplayMultiColumnDebugOutput_Params;
	memset(&DisplayMultiColumnDebugOutput_Params, 0, sizeof(DisplayMultiColumnDebugOutput_Params));
	memcpy_s(&DisplayMultiColumnDebugOutput_Params.HUD, sizeof(DisplayMultiColumnDebugOutput_Params.HUD), &HUD, sizeof(HUD));
	memcpy_s(&DisplayMultiColumnDebugOutput_Params.DebugInfo, sizeof(DisplayMultiColumnDebugOutput_Params.DebugInfo), &DebugInfo, sizeof(DebugInfo));
	memcpy_s(&DisplayMultiColumnDebugOutput_Params.out_YL, sizeof(DisplayMultiColumnDebugOutput_Params.out_YL), &out_YL, sizeof(out_YL));
	memcpy_s(&DisplayMultiColumnDebugOutput_Params.out_YPos, sizeof(DisplayMultiColumnDebugOutput_Params.out_YPos), &out_YPos, sizeof(out_YPos));

	UShowDebugHelpers::StaticClass()->ProcessEvent(uFnDisplayMultiColumnDebugOutput, &DisplayMultiColumnDebugOutput_Params, nullptr);

	memcpy_s(&DebugInfo, sizeof(DebugInfo), &DisplayMultiColumnDebugOutput_Params.DebugInfo, sizeof(DisplayMultiColumnDebugOutput_Params.DebugInfo));
	memcpy_s(&out_YL, sizeof(out_YL), &DisplayMultiColumnDebugOutput_Params.out_YL, sizeof(DisplayMultiColumnDebugOutput_Params.out_YL));
	memcpy_s(&out_YPos, sizeof(out_YPos), &DisplayMultiColumnDebugOutput_Params.out_YPos, sizeof(DisplayMultiColumnDebugOutput_Params.out_YPos));
};

// Function GearboxFramework.SparkInterface.ClearSparkRestartAuthenticationCompleteDelegate
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FScriptDelegate&  AuthCompleteDelegate           (CPF_Parm | CPF_NeedCtorLink)

void USparkInterface::ClearSparkRestartAuthenticationCompleteDelegate(const struct FScriptDelegate& AuthCompleteDelegate)
{
	static UFunction* uFnClearSparkRestartAuthenticationCompleteDelegate = nullptr;

	if (!uFnClearSparkRestartAuthenticationCompleteDelegate)
	{
		uFnClearSparkRestartAuthenticationCompleteDelegate = UFunction::FindFunction("Function GearboxFramework.SparkInterface.ClearSparkRestartAuthenticationCompleteDelegate");
	}

	USparkInterface_execClearSparkRestartAuthenticationCompleteDelegate_Params ClearSparkRestartAuthenticationCompleteDelegate_Params;
	memset(&ClearSparkRestartAuthenticationCompleteDelegate_Params, 0, sizeof(ClearSparkRestartAuthenticationCompleteDelegate_Params));
	memcpy_s(&ClearSparkRestartAuthenticationCompleteDelegate_Params.AuthCompleteDelegate, sizeof(ClearSparkRestartAuthenticationCompleteDelegate_Params.AuthCompleteDelegate), &AuthCompleteDelegate, sizeof(AuthCompleteDelegate));

	this->ProcessEvent(uFnClearSparkRestartAuthenticationCompleteDelegate, &ClearSparkRestartAuthenticationCompleteDelegate_Params, nullptr);
};

// Function GearboxFramework.SparkInterface.AddSparkRestartAuthenticationCompleteDelegate
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FScriptDelegate&  AuthCompleteDelegate           (CPF_Parm | CPF_NeedCtorLink)

void USparkInterface::AddSparkRestartAuthenticationCompleteDelegate(const struct FScriptDelegate& AuthCompleteDelegate)
{
	static UFunction* uFnAddSparkRestartAuthenticationCompleteDelegate = nullptr;

	if (!uFnAddSparkRestartAuthenticationCompleteDelegate)
	{
		uFnAddSparkRestartAuthenticationCompleteDelegate = UFunction::FindFunction("Function GearboxFramework.SparkInterface.AddSparkRestartAuthenticationCompleteDelegate");
	}

	USparkInterface_execAddSparkRestartAuthenticationCompleteDelegate_Params AddSparkRestartAuthenticationCompleteDelegate_Params;
	memset(&AddSparkRestartAuthenticationCompleteDelegate_Params, 0, sizeof(AddSparkRestartAuthenticationCompleteDelegate_Params));
	memcpy_s(&AddSparkRestartAuthenticationCompleteDelegate_Params.AuthCompleteDelegate, sizeof(AddSparkRestartAuthenticationCompleteDelegate_Params.AuthCompleteDelegate), &AuthCompleteDelegate, sizeof(AuthCompleteDelegate));

	this->ProcessEvent(uFnAddSparkRestartAuthenticationCompleteDelegate, &AddSparkRestartAuthenticationCompleteDelegate_Params, nullptr);
};

// Function GearboxFramework.SparkInterface.GetDiscoveryService
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34089])
// Parameter Info:
// class USparkServiceConfiguration* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class USparkServiceConfiguration* USparkInterface::GetDiscoveryService()
{
	static UFunction* uFnGetDiscoveryService = nullptr;

	if (!uFnGetDiscoveryService)
	{
		uFnGetDiscoveryService = UFunction::FindFunction("Function GearboxFramework.SparkInterface.GetDiscoveryService");
	}

	USparkInterface_execGetDiscoveryService_Params GetDiscoveryService_Params;
	memset(&GetDiscoveryService_Params, 0, sizeof(GetDiscoveryService_Params));

	uFnGetDiscoveryService->iNative = 0;
	uFnGetDiscoveryService->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetDiscoveryService, &GetDiscoveryService_Params, nullptr);
	uFnGetDiscoveryService->FunctionFlags |= 0x400;
	uFnGetDiscoveryService->iNative = 34089;

	return GetDiscoveryService_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterface.GetArchwayService
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34044])
// Parameter Info:
// class USparkServiceConfiguration* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class USparkServiceConfiguration* USparkInterface::GetArchwayService()
{
	static UFunction* uFnGetArchwayService = nullptr;

	if (!uFnGetArchwayService)
	{
		uFnGetArchwayService = UFunction::FindFunction("Function GearboxFramework.SparkInterface.GetArchwayService");
	}

	USparkInterface_execGetArchwayService_Params GetArchwayService_Params;
	memset(&GetArchwayService_Params, 0, sizeof(GetArchwayService_Params));

	uFnGetArchwayService->iNative = 0;
	uFnGetArchwayService->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetArchwayService, &GetArchwayService_Params, nullptr);
	uFnGetArchwayService->FunctionFlags |= 0x400;
	uFnGetArchwayService->iNative = 34044;

	return GetArchwayService_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterface.GetDebug
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34075])
// Parameter Info:
// class TArray<class FString>    out_DebugStrings               (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void USparkInterface::GetDebug(class TArray<class FString>& out_DebugStrings)
{
	static UFunction* uFnGetDebug = nullptr;

	if (!uFnGetDebug)
	{
		uFnGetDebug = UFunction::FindFunction("Function GearboxFramework.SparkInterface.GetDebug");
	}

	USparkInterface_execGetDebug_Params GetDebug_Params;
	memset(&GetDebug_Params, 0, sizeof(GetDebug_Params));
	memcpy_s(&GetDebug_Params.out_DebugStrings, sizeof(GetDebug_Params.out_DebugStrings), &out_DebugStrings, sizeof(out_DebugStrings));

	uFnGetDebug->iNative = 0;
	uFnGetDebug->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetDebug, &GetDebug_Params, nullptr);
	uFnGetDebug->FunctionFlags |= 0x400;
	uFnGetDebug->iNative = 34075;

	memcpy_s(&out_DebugStrings, sizeof(out_DebugStrings), &GetDebug_Params.out_DebugStrings, sizeof(GetDebug_Params.out_DebugStrings));
};

// Function GearboxFramework.SparkInterface.GetNewsService
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class USparkNews*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class USparkNews* USparkInterface::GetNewsService()
{
	static UFunction* uFnGetNewsService = nullptr;

	if (!uFnGetNewsService)
	{
		uFnGetNewsService = UFunction::FindFunction("Function GearboxFramework.SparkInterface.GetNewsService");
	}

	USparkInterface_execGetNewsService_Params GetNewsService_Params;
	memset(&GetNewsService_Params, 0, sizeof(GetNewsService_Params));

	this->ProcessEvent(uFnGetNewsService, &GetNewsService_Params, nullptr);

	return GetNewsService_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterface.GetJson
// [0x00022400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[34123])
// Parameter Info:
// class UJsonObject*             ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FSparkResult&     RequestResult                  (CPF_Parm | CPF_NeedCtorLink)

class UJsonObject* USparkInterface::GetJson(const struct FSparkResult& RequestResult)
{
	static UFunction* uFnGetJson = nullptr;

	if (!uFnGetJson)
	{
		uFnGetJson = UFunction::FindFunction("Function GearboxFramework.SparkInterface.GetJson");
	}

	USparkInterface_execGetJson_Params GetJson_Params;
	memset(&GetJson_Params, 0, sizeof(GetJson_Params));
	memcpy_s(&GetJson_Params.RequestResult, sizeof(GetJson_Params.RequestResult), &RequestResult, sizeof(RequestResult));

	uFnGetJson->iNative = 0;
	uFnGetJson->FunctionFlags &= ~0x400;
	USparkInterface::StaticClass()->ProcessEvent(uFnGetJson, &GetJson_Params, nullptr);
	uFnGetJson->FunctionFlags |= 0x400;
	uFnGetJson->iNative = 34123;

	return GetJson_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterface.GetTitleStorageServiceConfiguration
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34246])
// Parameter Info:
// class USparkServiceConfiguration* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class USparkServiceConfiguration* USparkInterface::GetTitleStorageServiceConfiguration()
{
	static UFunction* uFnGetTitleStorageServiceConfiguration = nullptr;

	if (!uFnGetTitleStorageServiceConfiguration)
	{
		uFnGetTitleStorageServiceConfiguration = UFunction::FindFunction("Function GearboxFramework.SparkInterface.GetTitleStorageServiceConfiguration");
	}

	USparkInterface_execGetTitleStorageServiceConfiguration_Params GetTitleStorageServiceConfiguration_Params;
	memset(&GetTitleStorageServiceConfiguration_Params, 0, sizeof(GetTitleStorageServiceConfiguration_Params));

	uFnGetTitleStorageServiceConfiguration->iNative = 0;
	uFnGetTitleStorageServiceConfiguration->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetTitleStorageServiceConfiguration, &GetTitleStorageServiceConfiguration_Params, nullptr);
	uFnGetTitleStorageServiceConfiguration->FunctionFlags |= 0x400;
	uFnGetTitleStorageServiceConfiguration->iNative = 34246;

	return GetTitleStorageServiceConfiguration_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterface.GetTitleStorageUrl
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34247])
// Parameter Info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString USparkInterface::GetTitleStorageUrl()
{
	static UFunction* uFnGetTitleStorageUrl = nullptr;

	if (!uFnGetTitleStorageUrl)
	{
		uFnGetTitleStorageUrl = UFunction::FindFunction("Function GearboxFramework.SparkInterface.GetTitleStorageUrl");
	}

	USparkInterface_execGetTitleStorageUrl_Params GetTitleStorageUrl_Params;
	memset(&GetTitleStorageUrl_Params, 0, sizeof(GetTitleStorageUrl_Params));

	uFnGetTitleStorageUrl->iNative = 0;
	uFnGetTitleStorageUrl->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetTitleStorageUrl, &GetTitleStorageUrl_Params, nullptr);
	uFnGetTitleStorageUrl->FunctionFlags |= 0x400;
	uFnGetTitleStorageUrl->iNative = 34247;

	return GetTitleStorageUrl_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterface.CreateGearboxServerData
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UGearboxServerData*      ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UGearboxServerData* USparkInterface::eventCreateGearboxServerData()
{
	static UFunction* uFnCreateGearboxServerData = nullptr;

	if (!uFnCreateGearboxServerData)
	{
		uFnCreateGearboxServerData = UFunction::FindFunction("Function GearboxFramework.SparkInterface.CreateGearboxServerData");
	}

	USparkInterface_eventCreateGearboxServerData_Params CreateGearboxServerData_Params;
	memset(&CreateGearboxServerData_Params, 0, sizeof(CreateGearboxServerData_Params));

	this->ProcessEvent(uFnCreateGearboxServerData, &CreateGearboxServerData_Params, nullptr);

	return CreateGearboxServerData_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterface.GetGearboxServerData
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UGearboxServerData*      ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UGearboxServerData* USparkInterface::eventGetGearboxServerData()
{
	static UFunction* uFnGetGearboxServerData = nullptr;

	if (!uFnGetGearboxServerData)
	{
		uFnGetGearboxServerData = UFunction::FindFunction("Function GearboxFramework.SparkInterface.GetGearboxServerData");
	}

	USparkInterface_eventGetGearboxServerData_Params GetGearboxServerData_Params;
	memset(&GetGearboxServerData_Params, 0, sizeof(GetGearboxServerData_Params));

	this->ProcessEvent(uFnGetGearboxServerData, &GetGearboxServerData_Params, nullptr);

	return GetGearboxServerData_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterface.SignOutGearboxAccount
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FPlatformUserId&  UserId                         (CPF_Parm)

void USparkInterface::SignOutGearboxAccount(const struct FPlatformUserId& UserId)
{
	static UFunction* uFnSignOutGearboxAccount = nullptr;

	if (!uFnSignOutGearboxAccount)
	{
		uFnSignOutGearboxAccount = UFunction::FindFunction("Function GearboxFramework.SparkInterface.SignOutGearboxAccount");
	}

	USparkInterface_execSignOutGearboxAccount_Params SignOutGearboxAccount_Params;
	memset(&SignOutGearboxAccount_Params, 0, sizeof(SignOutGearboxAccount_Params));
	memcpy_s(&SignOutGearboxAccount_Params.UserId, sizeof(SignOutGearboxAccount_Params.UserId), &UserId, sizeof(UserId));

	this->ProcessEvent(uFnSignOutGearboxAccount, &SignOutGearboxAccount_Params, nullptr);
};

// Function GearboxFramework.SparkInterface.SignInGearboxAccount
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FPlatformUserId&  UserId                         (CPF_Parm)

void USparkInterface::SignInGearboxAccount(const struct FPlatformUserId& UserId)
{
	static UFunction* uFnSignInGearboxAccount = nullptr;

	if (!uFnSignInGearboxAccount)
	{
		uFnSignInGearboxAccount = UFunction::FindFunction("Function GearboxFramework.SparkInterface.SignInGearboxAccount");
	}

	USparkInterface_execSignInGearboxAccount_Params SignInGearboxAccount_Params;
	memset(&SignInGearboxAccount_Params, 0, sizeof(SignInGearboxAccount_Params));
	memcpy_s(&SignInGearboxAccount_Params.UserId, sizeof(SignInGearboxAccount_Params.UserId), &UserId, sizeof(UserId));

	this->ProcessEvent(uFnSignInGearboxAccount, &SignInGearboxAccount_Params, nullptr);
};

// Function GearboxFramework.SparkInterface.GetGearboxAccountData
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UGearboxAccountData*     ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FPlatformUserId&  UserId                         (CPF_Parm)

class UGearboxAccountData* USparkInterface::eventGetGearboxAccountData(const struct FPlatformUserId& UserId)
{
	static UFunction* uFnGetGearboxAccountData = nullptr;

	if (!uFnGetGearboxAccountData)
	{
		uFnGetGearboxAccountData = UFunction::FindFunction("Function GearboxFramework.SparkInterface.GetGearboxAccountData");
	}

	USparkInterface_eventGetGearboxAccountData_Params GetGearboxAccountData_Params;
	memset(&GetGearboxAccountData_Params, 0, sizeof(GetGearboxAccountData_Params));
	memcpy_s(&GetGearboxAccountData_Params.UserId, sizeof(GetGearboxAccountData_Params.UserId), &UserId, sizeof(UserId));

	this->ProcessEvent(uFnGetGearboxAccountData, &GetGearboxAccountData_Params, nullptr);

	return GetGearboxAccountData_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterface.IsGearboxAccountAuthenticated
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FPlatformUserId&  UserId                         (CPF_Parm)

bool USparkInterface::eventIsGearboxAccountAuthenticated(const struct FPlatformUserId& UserId)
{
	static UFunction* uFnIsGearboxAccountAuthenticated = nullptr;

	if (!uFnIsGearboxAccountAuthenticated)
	{
		uFnIsGearboxAccountAuthenticated = UFunction::FindFunction("Function GearboxFramework.SparkInterface.IsGearboxAccountAuthenticated");
	}

	USparkInterface_eventIsGearboxAccountAuthenticated_Params IsGearboxAccountAuthenticated_Params;
	memset(&IsGearboxAccountAuthenticated_Params, 0, sizeof(IsGearboxAccountAuthenticated_Params));
	memcpy_s(&IsGearboxAccountAuthenticated_Params.UserId, sizeof(IsGearboxAccountAuthenticated_Params.UserId), &UserId, sizeof(UserId));

	this->ProcessEvent(uFnIsGearboxAccountAuthenticated, &IsGearboxAccountAuthenticated_Params, nullptr);

	return IsGearboxAccountAuthenticated_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterface.IsGearboxAccountSignedIn
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FPlatformUserId&  UserId                         (CPF_Parm)

bool USparkInterface::IsGearboxAccountSignedIn(const struct FPlatformUserId& UserId)
{
	static UFunction* uFnIsGearboxAccountSignedIn = nullptr;

	if (!uFnIsGearboxAccountSignedIn)
	{
		uFnIsGearboxAccountSignedIn = UFunction::FindFunction("Function GearboxFramework.SparkInterface.IsGearboxAccountSignedIn");
	}

	USparkInterface_execIsGearboxAccountSignedIn_Params IsGearboxAccountSignedIn_Params;
	memset(&IsGearboxAccountSignedIn_Params, 0, sizeof(IsGearboxAccountSignedIn_Params));
	memcpy_s(&IsGearboxAccountSignedIn_Params.UserId, sizeof(IsGearboxAccountSignedIn_Params.UserId), &UserId, sizeof(UserId));

	this->ProcessEvent(uFnIsGearboxAccountSignedIn, &IsGearboxAccountSignedIn_Params, nullptr);

	return IsGearboxAccountSignedIn_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterface.ClearCachedMessages
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32748])
// Parameter Info:

void USparkInterface::ClearCachedMessages()
{
	static UFunction* uFnClearCachedMessages = nullptr;

	if (!uFnClearCachedMessages)
	{
		uFnClearCachedMessages = UFunction::FindFunction("Function GearboxFramework.SparkInterface.ClearCachedMessages");
	}

	USparkInterface_execClearCachedMessages_Params ClearCachedMessages_Params;
	memset(&ClearCachedMessages_Params, 0, sizeof(ClearCachedMessages_Params));

	uFnClearCachedMessages->iNative = 0;
	uFnClearCachedMessages->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnClearCachedMessages, &ClearCachedMessages_Params, nullptr);
	uFnClearCachedMessages->FunctionFlags |= 0x400;
	uFnClearCachedMessages->iNative = 32748;
};

// Function GearboxFramework.SparkInterface.GetUserMessage
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34253])
// Parameter Info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString USparkInterface::GetUserMessage()
{
	static UFunction* uFnGetUserMessage = nullptr;

	if (!uFnGetUserMessage)
	{
		uFnGetUserMessage = UFunction::FindFunction("Function GearboxFramework.SparkInterface.GetUserMessage");
	}

	USparkInterface_execGetUserMessage_Params GetUserMessage_Params;
	memset(&GetUserMessage_Params, 0, sizeof(GetUserMessage_Params));

	uFnGetUserMessage->iNative = 0;
	uFnGetUserMessage->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetUserMessage, &GetUserMessage_Params, nullptr);
	uFnGetUserMessage->FunctionFlags |= 0x400;
	uFnGetUserMessage->iNative = 34253;

	return GetUserMessage_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterface.GetEmergencyMessage
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34093])
// Parameter Info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString USparkInterface::GetEmergencyMessage()
{
	static UFunction* uFnGetEmergencyMessage = nullptr;

	if (!uFnGetEmergencyMessage)
	{
		uFnGetEmergencyMessage = UFunction::FindFunction("Function GearboxFramework.SparkInterface.GetEmergencyMessage");
	}

	USparkInterface_execGetEmergencyMessage_Params GetEmergencyMessage_Params;
	memset(&GetEmergencyMessage_Params, 0, sizeof(GetEmergencyMessage_Params));

	uFnGetEmergencyMessage->iNative = 0;
	uFnGetEmergencyMessage->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetEmergencyMessage, &GetEmergencyMessage_Params, nullptr);
	uFnGetEmergencyMessage->FunctionFlags |= 0x400;
	uFnGetEmergencyMessage->iNative = 34093;

	return GetEmergencyMessage_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterface.SetUserMessage
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35940])
// Parameter Info:
// const class FString&           Message                        (CPF_Parm | CPF_NeedCtorLink)

void USparkInterface::SetUserMessage(const class FString& Message)
{
	static UFunction* uFnSetUserMessage = nullptr;

	if (!uFnSetUserMessage)
	{
		uFnSetUserMessage = UFunction::FindFunction("Function GearboxFramework.SparkInterface.SetUserMessage");
	}

	USparkInterface_execSetUserMessage_Params SetUserMessage_Params;
	memset(&SetUserMessage_Params, 0, sizeof(SetUserMessage_Params));
	memcpy_s(&SetUserMessage_Params.Message, sizeof(SetUserMessage_Params.Message), &Message, sizeof(Message));

	uFnSetUserMessage->iNative = 0;
	uFnSetUserMessage->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetUserMessage, &SetUserMessage_Params, nullptr);
	uFnSetUserMessage->FunctionFlags |= 0x400;
	uFnSetUserMessage->iNative = 35940;
};

// Function GearboxFramework.SparkInterface.SetEmergencyMessage
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35897])
// Parameter Info:
// const class FString&           Message                        (CPF_Parm | CPF_NeedCtorLink)

void USparkInterface::SetEmergencyMessage(const class FString& Message)
{
	static UFunction* uFnSetEmergencyMessage = nullptr;

	if (!uFnSetEmergencyMessage)
	{
		uFnSetEmergencyMessage = UFunction::FindFunction("Function GearboxFramework.SparkInterface.SetEmergencyMessage");
	}

	USparkInterface_execSetEmergencyMessage_Params SetEmergencyMessage_Params;
	memset(&SetEmergencyMessage_Params, 0, sizeof(SetEmergencyMessage_Params));
	memcpy_s(&SetEmergencyMessage_Params.Message, sizeof(SetEmergencyMessage_Params.Message), &Message, sizeof(Message));

	uFnSetEmergencyMessage->iNative = 0;
	uFnSetEmergencyMessage->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetEmergencyMessage, &SetEmergencyMessage_Params, nullptr);
	uFnSetEmergencyMessage->FunctionFlags |= 0x400;
	uFnSetEmergencyMessage->iNative = 35897;
};

// Function GearboxFramework.SparkInterface.GetPlatformLoginNameFromUser
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// const struct FPlatformUserId&  UserId                         (CPF_Parm)

class FString USparkInterface::eventGetPlatformLoginNameFromUser(const struct FPlatformUserId& UserId)
{
	static UFunction* uFnGetPlatformLoginNameFromUser = nullptr;

	if (!uFnGetPlatformLoginNameFromUser)
	{
		uFnGetPlatformLoginNameFromUser = UFunction::FindFunction("Function GearboxFramework.SparkInterface.GetPlatformLoginNameFromUser");
	}

	USparkInterface_eventGetPlatformLoginNameFromUser_Params GetPlatformLoginNameFromUser_Params;
	memset(&GetPlatformLoginNameFromUser_Params, 0, sizeof(GetPlatformLoginNameFromUser_Params));
	memcpy_s(&GetPlatformLoginNameFromUser_Params.UserId, sizeof(GetPlatformLoginNameFromUser_Params.UserId), &UserId, sizeof(UserId));

	this->ProcessEvent(uFnGetPlatformLoginNameFromUser, &GetPlatformLoginNameFromUser_Params, nullptr);

	return GetPlatformLoginNameFromUser_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterface.IncreaseInteractionTries
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void USparkInterface::IncreaseInteractionTries()
{
	static UFunction* uFnIncreaseInteractionTries = nullptr;

	if (!uFnIncreaseInteractionTries)
	{
		uFnIncreaseInteractionTries = UFunction::FindFunction("Function GearboxFramework.SparkInterface.IncreaseInteractionTries");
	}

	USparkInterface_execIncreaseInteractionTries_Params IncreaseInteractionTries_Params;
	memset(&IncreaseInteractionTries_Params, 0, sizeof(IncreaseInteractionTries_Params));

	this->ProcessEvent(uFnIncreaseInteractionTries, &IncreaseInteractionTries_Params, nullptr);
};

// Function GearboxFramework.SparkInterface.GetInteractionTries
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

int32_t USparkInterface::GetInteractionTries()
{
	static UFunction* uFnGetInteractionTries = nullptr;

	if (!uFnGetInteractionTries)
	{
		uFnGetInteractionTries = UFunction::FindFunction("Function GearboxFramework.SparkInterface.GetInteractionTries");
	}

	USparkInterface_execGetInteractionTries_Params GetInteractionTries_Params;
	memset(&GetInteractionTries_Params, 0, sizeof(GetInteractionTries_Params));

	this->ProcessEvent(uFnGetInteractionTries, &GetInteractionTries_Params, nullptr);

	return GetInteractionTries_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterface.GetInteractionGraceTries
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

int32_t USparkInterface::GetInteractionGraceTries()
{
	static UFunction* uFnGetInteractionGraceTries = nullptr;

	if (!uFnGetInteractionGraceTries)
	{
		uFnGetInteractionGraceTries = UFunction::FindFunction("Function GearboxFramework.SparkInterface.GetInteractionGraceTries");
	}

	USparkInterface_execGetInteractionGraceTries_Params GetInteractionGraceTries_Params;
	memset(&GetInteractionGraceTries_Params, 0, sizeof(GetInteractionGraceTries_Params));

	this->ProcessEvent(uFnGetInteractionGraceTries, &GetInteractionGraceTries_Params, nullptr);

	return GetInteractionGraceTries_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterface.GetInteractionPunishmentMinWaitSeconds
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

int32_t USparkInterface::GetInteractionPunishmentMinWaitSeconds()
{
	static UFunction* uFnGetInteractionPunishmentMinWaitSeconds = nullptr;

	if (!uFnGetInteractionPunishmentMinWaitSeconds)
	{
		uFnGetInteractionPunishmentMinWaitSeconds = UFunction::FindFunction("Function GearboxFramework.SparkInterface.GetInteractionPunishmentMinWaitSeconds");
	}

	USparkInterface_execGetInteractionPunishmentMinWaitSeconds_Params GetInteractionPunishmentMinWaitSeconds_Params;
	memset(&GetInteractionPunishmentMinWaitSeconds_Params, 0, sizeof(GetInteractionPunishmentMinWaitSeconds_Params));

	this->ProcessEvent(uFnGetInteractionPunishmentMinWaitSeconds, &GetInteractionPunishmentMinWaitSeconds_Params, nullptr);

	return GetInteractionPunishmentMinWaitSeconds_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterface.GetInteractionMinWaitSeconds
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

int32_t USparkInterface::GetInteractionMinWaitSeconds()
{
	static UFunction* uFnGetInteractionMinWaitSeconds = nullptr;

	if (!uFnGetInteractionMinWaitSeconds)
	{
		uFnGetInteractionMinWaitSeconds = UFunction::FindFunction("Function GearboxFramework.SparkInterface.GetInteractionMinWaitSeconds");
	}

	USparkInterface_execGetInteractionMinWaitSeconds_Params GetInteractionMinWaitSeconds_Params;
	memset(&GetInteractionMinWaitSeconds_Params, 0, sizeof(GetInteractionMinWaitSeconds_Params));

	this->ProcessEvent(uFnGetInteractionMinWaitSeconds, &GetInteractionMinWaitSeconds_Params, nullptr);

	return GetInteractionMinWaitSeconds_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterface.IsTmsComplete
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34698])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool USparkInterface::IsTmsComplete()
{
	static UFunction* uFnIsTmsComplete = nullptr;

	if (!uFnIsTmsComplete)
	{
		uFnIsTmsComplete = UFunction::FindFunction("Function GearboxFramework.SparkInterface.IsTmsComplete");
	}

	USparkInterface_execIsTmsComplete_Params IsTmsComplete_Params;
	memset(&IsTmsComplete_Params, 0, sizeof(IsTmsComplete_Params));

	uFnIsTmsComplete->iNative = 0;
	uFnIsTmsComplete->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsTmsComplete, &IsTmsComplete_Params, nullptr);
	uFnIsTmsComplete->FunctionFlags |= 0x400;
	uFnIsTmsComplete->iNative = 34698;

	return IsTmsComplete_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterface.SetTmsComplete
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void USparkInterface::SetTmsComplete()
{
	static UFunction* uFnSetTmsComplete = nullptr;

	if (!uFnSetTmsComplete)
	{
		uFnSetTmsComplete = UFunction::FindFunction("Function GearboxFramework.SparkInterface.SetTmsComplete");
	}

	USparkInterface_execSetTmsComplete_Params SetTmsComplete_Params;
	memset(&SetTmsComplete_Params, 0, sizeof(SetTmsComplete_Params));

	this->ProcessEvent(uFnSetTmsComplete, &SetTmsComplete_Params, nullptr);
};

// Function GearboxFramework.SparkInterface.CreateServerInitProcess
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class USparkInitializationProcess* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class USparkInitializationProcess* USparkInterface::CreateServerInitProcess()
{
	static UFunction* uFnCreateServerInitProcess = nullptr;

	if (!uFnCreateServerInitProcess)
	{
		uFnCreateServerInitProcess = UFunction::FindFunction("Function GearboxFramework.SparkInterface.CreateServerInitProcess");
	}

	USparkInterface_execCreateServerInitProcess_Params CreateServerInitProcess_Params;
	memset(&CreateServerInitProcess_Params, 0, sizeof(CreateServerInitProcess_Params));

	this->ProcessEvent(uFnCreateServerInitProcess, &CreateServerInitProcess_Params, nullptr);

	return CreateServerInitProcess_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterface.GetInitProcess
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class USparkInitializationProcess* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FPlatformUserId&  UserId                         (CPF_Parm)

class USparkInitializationProcess* USparkInterface::GetInitProcess(const struct FPlatformUserId& UserId)
{
	static UFunction* uFnGetInitProcess = nullptr;

	if (!uFnGetInitProcess)
	{
		uFnGetInitProcess = UFunction::FindFunction("Function GearboxFramework.SparkInterface.GetInitProcess");
	}

	USparkInterface_execGetInitProcess_Params GetInitProcess_Params;
	memset(&GetInitProcess_Params, 0, sizeof(GetInitProcess_Params));
	memcpy_s(&GetInitProcess_Params.UserId, sizeof(GetInitProcess_Params.UserId), &UserId, sizeof(UserId));

	this->ProcessEvent(uFnGetInitProcess, &GetInitProcess_Params, nullptr);

	return GetInitProcess_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterface.StartSparkInitialization
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FPlatformUserId&  UserId                         (CPF_Parm)
// const struct FScriptDelegate&  SparkInitializedDelegate       (CPF_Parm | CPF_NeedCtorLink)
// const struct FScriptDelegate&  EntitlementsUpdatedDelegate    (CPF_Parm | CPF_NeedCtorLink)

void USparkInterface::StartSparkInitialization(const struct FPlatformUserId& UserId, const struct FScriptDelegate& SparkInitializedDelegate, const struct FScriptDelegate& EntitlementsUpdatedDelegate)
{
	static UFunction* uFnStartSparkInitialization = nullptr;

	if (!uFnStartSparkInitialization)
	{
		uFnStartSparkInitialization = UFunction::FindFunction("Function GearboxFramework.SparkInterface.StartSparkInitialization");
	}

	USparkInterface_execStartSparkInitialization_Params StartSparkInitialization_Params;
	memset(&StartSparkInitialization_Params, 0, sizeof(StartSparkInitialization_Params));
	memcpy_s(&StartSparkInitialization_Params.UserId, sizeof(StartSparkInitialization_Params.UserId), &UserId, sizeof(UserId));
	memcpy_s(&StartSparkInitialization_Params.SparkInitializedDelegate, sizeof(StartSparkInitialization_Params.SparkInitializedDelegate), &SparkInitializedDelegate, sizeof(SparkInitializedDelegate));
	memcpy_s(&StartSparkInitialization_Params.EntitlementsUpdatedDelegate, sizeof(StartSparkInitialization_Params.EntitlementsUpdatedDelegate), &EntitlementsUpdatedDelegate, sizeof(EntitlementsUpdatedDelegate));

	this->ProcessEvent(uFnStartSparkInitialization, &StartSparkInitialization_Params, nullptr);
};

// Function GearboxFramework.SparkInterface.IsSparkEnabled
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool USparkInterface::eventIsSparkEnabled()
{
	static UFunction* uFnIsSparkEnabled = nullptr;

	if (!uFnIsSparkEnabled)
	{
		uFnIsSparkEnabled = UFunction::FindFunction("Function GearboxFramework.SparkInterface.IsSparkEnabled");
	}

	USparkInterface_eventIsSparkEnabled_Params IsSparkEnabled_Params;
	memset(&IsSparkEnabled_Params, 0, sizeof(IsSparkEnabled_Params));

	this->ProcessEvent(uFnIsSparkEnabled, &IsSparkEnabled_Params, nullptr);

	return IsSparkEnabled_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterface.CleanupRequests
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void USparkInterface::CleanupRequests()
{
	static UFunction* uFnCleanupRequests = nullptr;

	if (!uFnCleanupRequests)
	{
		uFnCleanupRequests = UFunction::FindFunction("Function GearboxFramework.SparkInterface.CleanupRequests");
	}

	USparkInterface_execCleanupRequests_Params CleanupRequests_Params;
	memset(&CleanupRequests_Params, 0, sizeof(CleanupRequests_Params));

	this->ProcessEvent(uFnCleanupRequests, &CleanupRequests_Params, nullptr);
};

// Function GearboxFramework.SparkInterface.IssueSparkStringRequestWithAuth
// [0x12420000] (FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const class FString&           URL                            (CPF_Parm | CPF_NeedCtorLink)
// const class FString&           RequestData                    (CPF_Const | CPF_Parm | CPF_NeedCtorLink)
// const class FString&           AuthToken                      (CPF_Parm | CPF_NeedCtorLink)
// const struct FScriptDelegate&  SparkRequestCompleteDelegate   (CPF_Parm | CPF_NeedCtorLink)
// struct FHttpParameters         HttpRequestParameters          (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

int32_t USparkInterface::IssueSparkStringRequestWithAuth(const class FString& URL, const class FString& RequestData, const class FString& AuthToken, const struct FScriptDelegate& SparkRequestCompleteDelegate, struct FHttpParameters& HttpRequestParameters)
{
	static UFunction* uFnIssueSparkStringRequestWithAuth = nullptr;

	if (!uFnIssueSparkStringRequestWithAuth)
	{
		uFnIssueSparkStringRequestWithAuth = UFunction::FindFunction("Function GearboxFramework.SparkInterface.IssueSparkStringRequestWithAuth");
	}

	USparkInterface_execIssueSparkStringRequestWithAuth_Params IssueSparkStringRequestWithAuth_Params;
	memset(&IssueSparkStringRequestWithAuth_Params, 0, sizeof(IssueSparkStringRequestWithAuth_Params));
	memcpy_s(&IssueSparkStringRequestWithAuth_Params.URL, sizeof(IssueSparkStringRequestWithAuth_Params.URL), &URL, sizeof(URL));
	memcpy_s(&IssueSparkStringRequestWithAuth_Params.RequestData, sizeof(IssueSparkStringRequestWithAuth_Params.RequestData), &RequestData, sizeof(RequestData));
	memcpy_s(&IssueSparkStringRequestWithAuth_Params.AuthToken, sizeof(IssueSparkStringRequestWithAuth_Params.AuthToken), &AuthToken, sizeof(AuthToken));
	memcpy_s(&IssueSparkStringRequestWithAuth_Params.SparkRequestCompleteDelegate, sizeof(IssueSparkStringRequestWithAuth_Params.SparkRequestCompleteDelegate), &SparkRequestCompleteDelegate, sizeof(SparkRequestCompleteDelegate));
	memcpy_s(&IssueSparkStringRequestWithAuth_Params.HttpRequestParameters, sizeof(IssueSparkStringRequestWithAuth_Params.HttpRequestParameters), &HttpRequestParameters, sizeof(HttpRequestParameters));

	this->ProcessEvent(uFnIssueSparkStringRequestWithAuth, &IssueSparkStringRequestWithAuth_Params, nullptr);

	memcpy_s(&HttpRequestParameters, sizeof(HttpRequestParameters), &IssueSparkStringRequestWithAuth_Params.HttpRequestParameters, sizeof(IssueSparkStringRequestWithAuth_Params.HttpRequestParameters));

	return IssueSparkStringRequestWithAuth_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterface.IssueSparkStringRequest
// [0x12420000] (FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const class FString&           URL                            (CPF_Parm | CPF_NeedCtorLink)
// const class FString&           RequestData                    (CPF_Const | CPF_Parm | CPF_NeedCtorLink)
// const struct FScriptDelegate&  SparkRequestCompleteDelegate   (CPF_Parm | CPF_NeedCtorLink)
// struct FHttpParameters         HttpRequestParameters          (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

int32_t USparkInterface::IssueSparkStringRequest(const class FString& URL, const class FString& RequestData, const struct FScriptDelegate& SparkRequestCompleteDelegate, struct FHttpParameters& HttpRequestParameters)
{
	static UFunction* uFnIssueSparkStringRequest = nullptr;

	if (!uFnIssueSparkStringRequest)
	{
		uFnIssueSparkStringRequest = UFunction::FindFunction("Function GearboxFramework.SparkInterface.IssueSparkStringRequest");
	}

	USparkInterface_execIssueSparkStringRequest_Params IssueSparkStringRequest_Params;
	memset(&IssueSparkStringRequest_Params, 0, sizeof(IssueSparkStringRequest_Params));
	memcpy_s(&IssueSparkStringRequest_Params.URL, sizeof(IssueSparkStringRequest_Params.URL), &URL, sizeof(URL));
	memcpy_s(&IssueSparkStringRequest_Params.RequestData, sizeof(IssueSparkStringRequest_Params.RequestData), &RequestData, sizeof(RequestData));
	memcpy_s(&IssueSparkStringRequest_Params.SparkRequestCompleteDelegate, sizeof(IssueSparkStringRequest_Params.SparkRequestCompleteDelegate), &SparkRequestCompleteDelegate, sizeof(SparkRequestCompleteDelegate));
	memcpy_s(&IssueSparkStringRequest_Params.HttpRequestParameters, sizeof(IssueSparkStringRequest_Params.HttpRequestParameters), &HttpRequestParameters, sizeof(HttpRequestParameters));

	this->ProcessEvent(uFnIssueSparkStringRequest, &IssueSparkStringRequest_Params, nullptr);

	memcpy_s(&HttpRequestParameters, sizeof(HttpRequestParameters), &IssueSparkStringRequest_Params.HttpRequestParameters, sizeof(IssueSparkStringRequest_Params.HttpRequestParameters));

	return IssueSparkStringRequest_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterface.IssueSparkRequestWithAuth
// [0x12420000] (FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const class FString&           URL                            (CPF_Parm | CPF_NeedCtorLink)
// const class FString&           AuthToken                      (CPF_Parm | CPF_NeedCtorLink)
// const struct FScriptDelegate&  SparkRequestCompleteDelegate   (CPF_Parm | CPF_NeedCtorLink)
// struct FHttpParameters         HttpRequestParameters          (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// class TArray<uint8_t>          RequestData                    (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

int32_t USparkInterface::IssueSparkRequestWithAuth(const class FString& URL, const class FString& AuthToken, const struct FScriptDelegate& SparkRequestCompleteDelegate, struct FHttpParameters& HttpRequestParameters, class TArray<uint8_t>& RequestData)
{
	static UFunction* uFnIssueSparkRequestWithAuth = nullptr;

	if (!uFnIssueSparkRequestWithAuth)
	{
		uFnIssueSparkRequestWithAuth = UFunction::FindFunction("Function GearboxFramework.SparkInterface.IssueSparkRequestWithAuth");
	}

	USparkInterface_execIssueSparkRequestWithAuth_Params IssueSparkRequestWithAuth_Params;
	memset(&IssueSparkRequestWithAuth_Params, 0, sizeof(IssueSparkRequestWithAuth_Params));
	memcpy_s(&IssueSparkRequestWithAuth_Params.URL, sizeof(IssueSparkRequestWithAuth_Params.URL), &URL, sizeof(URL));
	memcpy_s(&IssueSparkRequestWithAuth_Params.AuthToken, sizeof(IssueSparkRequestWithAuth_Params.AuthToken), &AuthToken, sizeof(AuthToken));
	memcpy_s(&IssueSparkRequestWithAuth_Params.SparkRequestCompleteDelegate, sizeof(IssueSparkRequestWithAuth_Params.SparkRequestCompleteDelegate), &SparkRequestCompleteDelegate, sizeof(SparkRequestCompleteDelegate));
	memcpy_s(&IssueSparkRequestWithAuth_Params.HttpRequestParameters, sizeof(IssueSparkRequestWithAuth_Params.HttpRequestParameters), &HttpRequestParameters, sizeof(HttpRequestParameters));
	memcpy_s(&IssueSparkRequestWithAuth_Params.RequestData, sizeof(IssueSparkRequestWithAuth_Params.RequestData), &RequestData, sizeof(RequestData));

	this->ProcessEvent(uFnIssueSparkRequestWithAuth, &IssueSparkRequestWithAuth_Params, nullptr);

	memcpy_s(&HttpRequestParameters, sizeof(HttpRequestParameters), &IssueSparkRequestWithAuth_Params.HttpRequestParameters, sizeof(IssueSparkRequestWithAuth_Params.HttpRequestParameters));
	memcpy_s(&RequestData, sizeof(RequestData), &IssueSparkRequestWithAuth_Params.RequestData, sizeof(IssueSparkRequestWithAuth_Params.RequestData));

	return IssueSparkRequestWithAuth_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterface.IssueSparkRequest
// [0x12420000] (FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const class FString&           URL                            (CPF_Parm | CPF_NeedCtorLink)
// const struct FScriptDelegate&  SparkRequestCompleteDelegate   (CPF_Parm | CPF_NeedCtorLink)
// struct FHttpParameters         HttpRequestParameters          (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// class TArray<uint8_t>          RequestData                    (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

int32_t USparkInterface::IssueSparkRequest(const class FString& URL, const struct FScriptDelegate& SparkRequestCompleteDelegate, struct FHttpParameters& HttpRequestParameters, class TArray<uint8_t>& RequestData)
{
	static UFunction* uFnIssueSparkRequest = nullptr;

	if (!uFnIssueSparkRequest)
	{
		uFnIssueSparkRequest = UFunction::FindFunction("Function GearboxFramework.SparkInterface.IssueSparkRequest");
	}

	USparkInterface_execIssueSparkRequest_Params IssueSparkRequest_Params;
	memset(&IssueSparkRequest_Params, 0, sizeof(IssueSparkRequest_Params));
	memcpy_s(&IssueSparkRequest_Params.URL, sizeof(IssueSparkRequest_Params.URL), &URL, sizeof(URL));
	memcpy_s(&IssueSparkRequest_Params.SparkRequestCompleteDelegate, sizeof(IssueSparkRequest_Params.SparkRequestCompleteDelegate), &SparkRequestCompleteDelegate, sizeof(SparkRequestCompleteDelegate));
	memcpy_s(&IssueSparkRequest_Params.HttpRequestParameters, sizeof(IssueSparkRequest_Params.HttpRequestParameters), &HttpRequestParameters, sizeof(HttpRequestParameters));
	memcpy_s(&IssueSparkRequest_Params.RequestData, sizeof(IssueSparkRequest_Params.RequestData), &RequestData, sizeof(RequestData));

	this->ProcessEvent(uFnIssueSparkRequest, &IssueSparkRequest_Params, nullptr);

	memcpy_s(&HttpRequestParameters, sizeof(HttpRequestParameters), &IssueSparkRequest_Params.HttpRequestParameters, sizeof(IssueSparkRequest_Params.HttpRequestParameters));
	memcpy_s(&RequestData, sizeof(RequestData), &IssueSparkRequest_Params.RequestData, sizeof(IssueSparkRequest_Params.RequestData));

	return IssueSparkRequest_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterfaceImpl.DumpServices
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void USparkInterfaceImpl::DumpServices()
{
	static UFunction* uFnDumpServices = nullptr;

	if (!uFnDumpServices)
	{
		uFnDumpServices = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.DumpServices");
	}

	USparkInterfaceImpl_execDumpServices_Params DumpServices_Params;
	memset(&DumpServices_Params, 0, sizeof(DumpServices_Params));

	this->ProcessEvent(uFnDumpServices, &DumpServices_Params, nullptr);
};

// Function GearboxFramework.SparkInterfaceImpl.GetRapidJson
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34187])
// Parameter Info:
// struct FPointer                ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FSparkResult&     RequestResult                  (CPF_Parm | CPF_NeedCtorLink)
// const struct FPointer&         Allocator                      (CPF_Parm)

struct FPointer USparkInterfaceImpl::GetRapidJson(const struct FSparkResult& RequestResult, const struct FPointer& Allocator)
{
	static UFunction* uFnGetRapidJson = nullptr;

	if (!uFnGetRapidJson)
	{
		uFnGetRapidJson = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.GetRapidJson");
	}

	USparkInterfaceImpl_execGetRapidJson_Params GetRapidJson_Params;
	memset(&GetRapidJson_Params, 0, sizeof(GetRapidJson_Params));
	memcpy_s(&GetRapidJson_Params.RequestResult, sizeof(GetRapidJson_Params.RequestResult), &RequestResult, sizeof(RequestResult));
	memcpy_s(&GetRapidJson_Params.Allocator, sizeof(GetRapidJson_Params.Allocator), &Allocator, sizeof(Allocator));

	uFnGetRapidJson->iNative = 0;
	uFnGetRapidJson->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetRapidJson, &GetRapidJson_Params, nullptr);
	uFnGetRapidJson->FunctionFlags |= 0x400;
	uFnGetRapidJson->iNative = 34187;

	return GetRapidJson_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterfaceImpl.GetJson
// [0x00022400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[34123])
// Parameter Info:
// class UJsonObject*             ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FSparkResult&     RequestResult                  (CPF_Parm | CPF_NeedCtorLink)

class UJsonObject* USparkInterfaceImpl::GetJson(const struct FSparkResult& RequestResult)
{
	static UFunction* uFnGetJson = nullptr;

	if (!uFnGetJson)
	{
		uFnGetJson = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.GetJson");
	}

	USparkInterfaceImpl_execGetJson_Params GetJson_Params;
	memset(&GetJson_Params, 0, sizeof(GetJson_Params));
	memcpy_s(&GetJson_Params.RequestResult, sizeof(GetJson_Params.RequestResult), &RequestResult, sizeof(RequestResult));

	uFnGetJson->iNative = 0;
	uFnGetJson->FunctionFlags &= ~0x400;
	USparkInterfaceImpl::StaticClass()->ProcessEvent(uFnGetJson, &GetJson_Params, nullptr);
	uFnGetJson->FunctionFlags |= 0x400;
	uFnGetJson->iNative = 34123;

	return GetJson_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterfaceImpl.GetDebug
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34075])
// Parameter Info:
// class TArray<class FString>    out_DebugStrings               (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void USparkInterfaceImpl::GetDebug(class TArray<class FString>& out_DebugStrings)
{
	static UFunction* uFnGetDebug = nullptr;

	if (!uFnGetDebug)
	{
		uFnGetDebug = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.GetDebug");
	}

	USparkInterfaceImpl_execGetDebug_Params GetDebug_Params;
	memset(&GetDebug_Params, 0, sizeof(GetDebug_Params));
	memcpy_s(&GetDebug_Params.out_DebugStrings, sizeof(GetDebug_Params.out_DebugStrings), &out_DebugStrings, sizeof(out_DebugStrings));

	uFnGetDebug->iNative = 0;
	uFnGetDebug->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetDebug, &GetDebug_Params, nullptr);
	uFnGetDebug->FunctionFlags |= 0x400;
	uFnGetDebug->iNative = 34075;

	memcpy_s(&out_DebugStrings, sizeof(out_DebugStrings), &GetDebug_Params.out_DebugStrings, sizeof(GetDebug_Params.out_DebugStrings));
};

// Function GearboxFramework.SparkInterfaceImpl.GetNewsService
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class USparkNews*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class USparkNews* USparkInterfaceImpl::GetNewsService()
{
	static UFunction* uFnGetNewsService = nullptr;

	if (!uFnGetNewsService)
	{
		uFnGetNewsService = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.GetNewsService");
	}

	USparkInterfaceImpl_execGetNewsService_Params GetNewsService_Params;
	memset(&GetNewsService_Params, 0, sizeof(GetNewsService_Params));

	this->ProcessEvent(uFnGetNewsService, &GetNewsService_Params, nullptr);

	return GetNewsService_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterfaceImpl.GetTitleStorageServiceConfiguration
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34246])
// Parameter Info:
// class USparkServiceConfiguration* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class USparkServiceConfiguration* USparkInterfaceImpl::GetTitleStorageServiceConfiguration()
{
	static UFunction* uFnGetTitleStorageServiceConfiguration = nullptr;

	if (!uFnGetTitleStorageServiceConfiguration)
	{
		uFnGetTitleStorageServiceConfiguration = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.GetTitleStorageServiceConfiguration");
	}

	USparkInterfaceImpl_execGetTitleStorageServiceConfiguration_Params GetTitleStorageServiceConfiguration_Params;
	memset(&GetTitleStorageServiceConfiguration_Params, 0, sizeof(GetTitleStorageServiceConfiguration_Params));

	uFnGetTitleStorageServiceConfiguration->iNative = 0;
	uFnGetTitleStorageServiceConfiguration->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetTitleStorageServiceConfiguration, &GetTitleStorageServiceConfiguration_Params, nullptr);
	uFnGetTitleStorageServiceConfiguration->FunctionFlags |= 0x400;
	uFnGetTitleStorageServiceConfiguration->iNative = 34246;

	return GetTitleStorageServiceConfiguration_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterfaceImpl.GetTitleStorageUrl
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34247])
// Parameter Info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString USparkInterfaceImpl::GetTitleStorageUrl()
{
	static UFunction* uFnGetTitleStorageUrl = nullptr;

	if (!uFnGetTitleStorageUrl)
	{
		uFnGetTitleStorageUrl = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.GetTitleStorageUrl");
	}

	USparkInterfaceImpl_execGetTitleStorageUrl_Params GetTitleStorageUrl_Params;
	memset(&GetTitleStorageUrl_Params, 0, sizeof(GetTitleStorageUrl_Params));

	uFnGetTitleStorageUrl->iNative = 0;
	uFnGetTitleStorageUrl->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetTitleStorageUrl, &GetTitleStorageUrl_Params, nullptr);
	uFnGetTitleStorageUrl->FunctionFlags |= 0x400;
	uFnGetTitleStorageUrl->iNative = 34247;

	return GetTitleStorageUrl_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterfaceImpl.OnSparkInitialized
// [0x12020002] (FUNC_Defined | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FPlatformUserId&  UserId                         (CPF_Parm)
// EInitializedResult             InitializedResult              (CPF_Parm)
// class UGearboxData*            Data                           (CPF_Parm)

void USparkInterfaceImpl::OnSparkInitialized(const struct FPlatformUserId& UserId, EInitializedResult InitializedResult, class UGearboxData* Data)
{
	static UFunction* uFnOnSparkInitialized = nullptr;

	if (!uFnOnSparkInitialized)
	{
		uFnOnSparkInitialized = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.OnSparkInitialized");
	}

	USparkInterfaceImpl_execOnSparkInitialized_Params OnSparkInitialized_Params;
	memset(&OnSparkInitialized_Params, 0, sizeof(OnSparkInitialized_Params));
	memcpy_s(&OnSparkInitialized_Params.UserId, sizeof(OnSparkInitialized_Params.UserId), &UserId, sizeof(UserId));
	memcpy_s(&OnSparkInitialized_Params.InitializedResult, sizeof(OnSparkInitialized_Params.InitializedResult), &InitializedResult, sizeof(InitializedResult));
	memcpy_s(&OnSparkInitialized_Params.Data, sizeof(OnSparkInitialized_Params.Data), &Data, sizeof(Data));

	this->ProcessEvent(uFnOnSparkInitialized, &OnSparkInitialized_Params, nullptr);
};

// Function GearboxFramework.SparkInterfaceImpl.IsPrimaryPlayer
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FPlatformUserId&  UserId                         (CPF_Parm)

bool USparkInterfaceImpl::IsPrimaryPlayer(const struct FPlatformUserId& UserId)
{
	static UFunction* uFnIsPrimaryPlayer = nullptr;

	if (!uFnIsPrimaryPlayer)
	{
		uFnIsPrimaryPlayer = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.IsPrimaryPlayer");
	}

	USparkInterfaceImpl_execIsPrimaryPlayer_Params IsPrimaryPlayer_Params;
	memset(&IsPrimaryPlayer_Params, 0, sizeof(IsPrimaryPlayer_Params));
	memcpy_s(&IsPrimaryPlayer_Params.UserId, sizeof(IsPrimaryPlayer_Params.UserId), &UserId, sizeof(UserId));

	this->ProcessEvent(uFnIsPrimaryPlayer, &IsPrimaryPlayer_Params, nullptr);

	return IsPrimaryPlayer_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterfaceImpl.IncreaseInteractionTries
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void USparkInterfaceImpl::IncreaseInteractionTries()
{
	static UFunction* uFnIncreaseInteractionTries = nullptr;

	if (!uFnIncreaseInteractionTries)
	{
		uFnIncreaseInteractionTries = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.IncreaseInteractionTries");
	}

	USparkInterfaceImpl_execIncreaseInteractionTries_Params IncreaseInteractionTries_Params;
	memset(&IncreaseInteractionTries_Params, 0, sizeof(IncreaseInteractionTries_Params));

	this->ProcessEvent(uFnIncreaseInteractionTries, &IncreaseInteractionTries_Params, nullptr);
};

// Function GearboxFramework.SparkInterfaceImpl.GetInteractionTries
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

int32_t USparkInterfaceImpl::GetInteractionTries()
{
	static UFunction* uFnGetInteractionTries = nullptr;

	if (!uFnGetInteractionTries)
	{
		uFnGetInteractionTries = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.GetInteractionTries");
	}

	USparkInterfaceImpl_execGetInteractionTries_Params GetInteractionTries_Params;
	memset(&GetInteractionTries_Params, 0, sizeof(GetInteractionTries_Params));

	this->ProcessEvent(uFnGetInteractionTries, &GetInteractionTries_Params, nullptr);

	return GetInteractionTries_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterfaceImpl.GetInteractionGraceTries
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

int32_t USparkInterfaceImpl::GetInteractionGraceTries()
{
	static UFunction* uFnGetInteractionGraceTries = nullptr;

	if (!uFnGetInteractionGraceTries)
	{
		uFnGetInteractionGraceTries = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.GetInteractionGraceTries");
	}

	USparkInterfaceImpl_execGetInteractionGraceTries_Params GetInteractionGraceTries_Params;
	memset(&GetInteractionGraceTries_Params, 0, sizeof(GetInteractionGraceTries_Params));

	this->ProcessEvent(uFnGetInteractionGraceTries, &GetInteractionGraceTries_Params, nullptr);

	return GetInteractionGraceTries_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterfaceImpl.GetInteractionPunishmentMinWaitSeconds
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

int32_t USparkInterfaceImpl::GetInteractionPunishmentMinWaitSeconds()
{
	static UFunction* uFnGetInteractionPunishmentMinWaitSeconds = nullptr;

	if (!uFnGetInteractionPunishmentMinWaitSeconds)
	{
		uFnGetInteractionPunishmentMinWaitSeconds = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.GetInteractionPunishmentMinWaitSeconds");
	}

	USparkInterfaceImpl_execGetInteractionPunishmentMinWaitSeconds_Params GetInteractionPunishmentMinWaitSeconds_Params;
	memset(&GetInteractionPunishmentMinWaitSeconds_Params, 0, sizeof(GetInteractionPunishmentMinWaitSeconds_Params));

	this->ProcessEvent(uFnGetInteractionPunishmentMinWaitSeconds, &GetInteractionPunishmentMinWaitSeconds_Params, nullptr);

	return GetInteractionPunishmentMinWaitSeconds_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterfaceImpl.GetInteractionMinWaitSeconds
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

int32_t USparkInterfaceImpl::GetInteractionMinWaitSeconds()
{
	static UFunction* uFnGetInteractionMinWaitSeconds = nullptr;

	if (!uFnGetInteractionMinWaitSeconds)
	{
		uFnGetInteractionMinWaitSeconds = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.GetInteractionMinWaitSeconds");
	}

	USparkInterfaceImpl_execGetInteractionMinWaitSeconds_Params GetInteractionMinWaitSeconds_Params;
	memset(&GetInteractionMinWaitSeconds_Params, 0, sizeof(GetInteractionMinWaitSeconds_Params));

	this->ProcessEvent(uFnGetInteractionMinWaitSeconds, &GetInteractionMinWaitSeconds_Params, nullptr);

	return GetInteractionMinWaitSeconds_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterfaceImpl.ClearCachedMessages
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32748])
// Parameter Info:

void USparkInterfaceImpl::ClearCachedMessages()
{
	static UFunction* uFnClearCachedMessages = nullptr;

	if (!uFnClearCachedMessages)
	{
		uFnClearCachedMessages = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.ClearCachedMessages");
	}

	USparkInterfaceImpl_execClearCachedMessages_Params ClearCachedMessages_Params;
	memset(&ClearCachedMessages_Params, 0, sizeof(ClearCachedMessages_Params));

	uFnClearCachedMessages->iNative = 0;
	uFnClearCachedMessages->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnClearCachedMessages, &ClearCachedMessages_Params, nullptr);
	uFnClearCachedMessages->FunctionFlags |= 0x400;
	uFnClearCachedMessages->iNative = 32748;
};

// Function GearboxFramework.SparkInterfaceImpl.GetUserMessage
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34253])
// Parameter Info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString USparkInterfaceImpl::GetUserMessage()
{
	static UFunction* uFnGetUserMessage = nullptr;

	if (!uFnGetUserMessage)
	{
		uFnGetUserMessage = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.GetUserMessage");
	}

	USparkInterfaceImpl_execGetUserMessage_Params GetUserMessage_Params;
	memset(&GetUserMessage_Params, 0, sizeof(GetUserMessage_Params));

	uFnGetUserMessage->iNative = 0;
	uFnGetUserMessage->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetUserMessage, &GetUserMessage_Params, nullptr);
	uFnGetUserMessage->FunctionFlags |= 0x400;
	uFnGetUserMessage->iNative = 34253;

	return GetUserMessage_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterfaceImpl.GetEmergencyMessage
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34093])
// Parameter Info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString USparkInterfaceImpl::GetEmergencyMessage()
{
	static UFunction* uFnGetEmergencyMessage = nullptr;

	if (!uFnGetEmergencyMessage)
	{
		uFnGetEmergencyMessage = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.GetEmergencyMessage");
	}

	USparkInterfaceImpl_execGetEmergencyMessage_Params GetEmergencyMessage_Params;
	memset(&GetEmergencyMessage_Params, 0, sizeof(GetEmergencyMessage_Params));

	uFnGetEmergencyMessage->iNative = 0;
	uFnGetEmergencyMessage->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetEmergencyMessage, &GetEmergencyMessage_Params, nullptr);
	uFnGetEmergencyMessage->FunctionFlags |= 0x400;
	uFnGetEmergencyMessage->iNative = 34093;

	return GetEmergencyMessage_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterfaceImpl.SetUserMessage
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35940])
// Parameter Info:
// const class FString&           Message                        (CPF_Parm | CPF_NeedCtorLink)

void USparkInterfaceImpl::SetUserMessage(const class FString& Message)
{
	static UFunction* uFnSetUserMessage = nullptr;

	if (!uFnSetUserMessage)
	{
		uFnSetUserMessage = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.SetUserMessage");
	}

	USparkInterfaceImpl_execSetUserMessage_Params SetUserMessage_Params;
	memset(&SetUserMessage_Params, 0, sizeof(SetUserMessage_Params));
	memcpy_s(&SetUserMessage_Params.Message, sizeof(SetUserMessage_Params.Message), &Message, sizeof(Message));

	uFnSetUserMessage->iNative = 0;
	uFnSetUserMessage->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetUserMessage, &SetUserMessage_Params, nullptr);
	uFnSetUserMessage->FunctionFlags |= 0x400;
	uFnSetUserMessage->iNative = 35940;
};

// Function GearboxFramework.SparkInterfaceImpl.SetEmergencyMessage
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35897])
// Parameter Info:
// const class FString&           Message                        (CPF_Parm | CPF_NeedCtorLink)

void USparkInterfaceImpl::SetEmergencyMessage(const class FString& Message)
{
	static UFunction* uFnSetEmergencyMessage = nullptr;

	if (!uFnSetEmergencyMessage)
	{
		uFnSetEmergencyMessage = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.SetEmergencyMessage");
	}

	USparkInterfaceImpl_execSetEmergencyMessage_Params SetEmergencyMessage_Params;
	memset(&SetEmergencyMessage_Params, 0, sizeof(SetEmergencyMessage_Params));
	memcpy_s(&SetEmergencyMessage_Params.Message, sizeof(SetEmergencyMessage_Params.Message), &Message, sizeof(Message));

	uFnSetEmergencyMessage->iNative = 0;
	uFnSetEmergencyMessage->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetEmergencyMessage, &SetEmergencyMessage_Params, nullptr);
	uFnSetEmergencyMessage->FunctionFlags |= 0x400;
	uFnSetEmergencyMessage->iNative = 35897;
};

// Function GearboxFramework.SparkInterfaceImpl.GetDiscoveryService
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34089])
// Parameter Info:
// class USparkServiceConfiguration* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class USparkServiceConfiguration* USparkInterfaceImpl::GetDiscoveryService()
{
	static UFunction* uFnGetDiscoveryService = nullptr;

	if (!uFnGetDiscoveryService)
	{
		uFnGetDiscoveryService = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.GetDiscoveryService");
	}

	USparkInterfaceImpl_execGetDiscoveryService_Params GetDiscoveryService_Params;
	memset(&GetDiscoveryService_Params, 0, sizeof(GetDiscoveryService_Params));

	uFnGetDiscoveryService->iNative = 0;
	uFnGetDiscoveryService->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetDiscoveryService, &GetDiscoveryService_Params, nullptr);
	uFnGetDiscoveryService->FunctionFlags |= 0x400;
	uFnGetDiscoveryService->iNative = 34089;

	return GetDiscoveryService_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterfaceImpl.GetArchwayService
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34044])
// Parameter Info:
// class USparkServiceConfiguration* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class USparkServiceConfiguration* USparkInterfaceImpl::GetArchwayService()
{
	static UFunction* uFnGetArchwayService = nullptr;

	if (!uFnGetArchwayService)
	{
		uFnGetArchwayService = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.GetArchwayService");
	}

	USparkInterfaceImpl_execGetArchwayService_Params GetArchwayService_Params;
	memset(&GetArchwayService_Params, 0, sizeof(GetArchwayService_Params));

	uFnGetArchwayService->iNative = 0;
	uFnGetArchwayService->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetArchwayService, &GetArchwayService_Params, nullptr);
	uFnGetArchwayService->FunctionFlags |= 0x400;
	uFnGetArchwayService->iNative = 34044;

	return GetArchwayService_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterfaceImpl.IsTmsComplete
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34698])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool USparkInterfaceImpl::IsTmsComplete()
{
	static UFunction* uFnIsTmsComplete = nullptr;

	if (!uFnIsTmsComplete)
	{
		uFnIsTmsComplete = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.IsTmsComplete");
	}

	USparkInterfaceImpl_execIsTmsComplete_Params IsTmsComplete_Params;
	memset(&IsTmsComplete_Params, 0, sizeof(IsTmsComplete_Params));

	uFnIsTmsComplete->iNative = 0;
	uFnIsTmsComplete->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsTmsComplete, &IsTmsComplete_Params, nullptr);
	uFnIsTmsComplete->FunctionFlags |= 0x400;
	uFnIsTmsComplete->iNative = 34698;

	return IsTmsComplete_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterfaceImpl.SetTmsComplete
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void USparkInterfaceImpl::SetTmsComplete()
{
	static UFunction* uFnSetTmsComplete = nullptr;

	if (!uFnSetTmsComplete)
	{
		uFnSetTmsComplete = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.SetTmsComplete");
	}

	USparkInterfaceImpl_execSetTmsComplete_Params SetTmsComplete_Params;
	memset(&SetTmsComplete_Params, 0, sizeof(SetTmsComplete_Params));

	this->ProcessEvent(uFnSetTmsComplete, &SetTmsComplete_Params, nullptr);
};

// Function GearboxFramework.SparkInterfaceImpl.ClearSparkRestartAuthenticationCompleteDelegate
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FScriptDelegate&  AuthCompleteDelegate           (CPF_Parm | CPF_NeedCtorLink)

void USparkInterfaceImpl::ClearSparkRestartAuthenticationCompleteDelegate(const struct FScriptDelegate& AuthCompleteDelegate)
{
	static UFunction* uFnClearSparkRestartAuthenticationCompleteDelegate = nullptr;

	if (!uFnClearSparkRestartAuthenticationCompleteDelegate)
	{
		uFnClearSparkRestartAuthenticationCompleteDelegate = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.ClearSparkRestartAuthenticationCompleteDelegate");
	}

	USparkInterfaceImpl_execClearSparkRestartAuthenticationCompleteDelegate_Params ClearSparkRestartAuthenticationCompleteDelegate_Params;
	memset(&ClearSparkRestartAuthenticationCompleteDelegate_Params, 0, sizeof(ClearSparkRestartAuthenticationCompleteDelegate_Params));
	memcpy_s(&ClearSparkRestartAuthenticationCompleteDelegate_Params.AuthCompleteDelegate, sizeof(ClearSparkRestartAuthenticationCompleteDelegate_Params.AuthCompleteDelegate), &AuthCompleteDelegate, sizeof(AuthCompleteDelegate));

	this->ProcessEvent(uFnClearSparkRestartAuthenticationCompleteDelegate, &ClearSparkRestartAuthenticationCompleteDelegate_Params, nullptr);
};

// Function GearboxFramework.SparkInterfaceImpl.AddSparkRestartAuthenticationCompleteDelegate
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FScriptDelegate&  AuthCompleteDelegate           (CPF_Parm | CPF_NeedCtorLink)

void USparkInterfaceImpl::AddSparkRestartAuthenticationCompleteDelegate(const struct FScriptDelegate& AuthCompleteDelegate)
{
	static UFunction* uFnAddSparkRestartAuthenticationCompleteDelegate = nullptr;

	if (!uFnAddSparkRestartAuthenticationCompleteDelegate)
	{
		uFnAddSparkRestartAuthenticationCompleteDelegate = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.AddSparkRestartAuthenticationCompleteDelegate");
	}

	USparkInterfaceImpl_execAddSparkRestartAuthenticationCompleteDelegate_Params AddSparkRestartAuthenticationCompleteDelegate_Params;
	memset(&AddSparkRestartAuthenticationCompleteDelegate_Params, 0, sizeof(AddSparkRestartAuthenticationCompleteDelegate_Params));
	memcpy_s(&AddSparkRestartAuthenticationCompleteDelegate_Params.AuthCompleteDelegate, sizeof(AddSparkRestartAuthenticationCompleteDelegate_Params.AuthCompleteDelegate), &AuthCompleteDelegate, sizeof(AuthCompleteDelegate));

	this->ProcessEvent(uFnAddSparkRestartAuthenticationCompleteDelegate, &AddSparkRestartAuthenticationCompleteDelegate_Params, nullptr);
};

// Function GearboxFramework.SparkInterfaceImpl.OnRestartSparkInitialized
// [0x12020002] (FUNC_Defined | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FPlatformUserId&  UserId                         (CPF_Parm)
// EInitializedResult             InitializedResult              (CPF_Parm)
// class UGearboxData*            Data                           (CPF_Parm)

void USparkInterfaceImpl::OnRestartSparkInitialized(const struct FPlatformUserId& UserId, EInitializedResult InitializedResult, class UGearboxData* Data)
{
	static UFunction* uFnOnRestartSparkInitialized = nullptr;

	if (!uFnOnRestartSparkInitialized)
	{
		uFnOnRestartSparkInitialized = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.OnRestartSparkInitialized");
	}

	USparkInterfaceImpl_execOnRestartSparkInitialized_Params OnRestartSparkInitialized_Params;
	memset(&OnRestartSparkInitialized_Params, 0, sizeof(OnRestartSparkInitialized_Params));
	memcpy_s(&OnRestartSparkInitialized_Params.UserId, sizeof(OnRestartSparkInitialized_Params.UserId), &UserId, sizeof(UserId));
	memcpy_s(&OnRestartSparkInitialized_Params.InitializedResult, sizeof(OnRestartSparkInitialized_Params.InitializedResult), &InitializedResult, sizeof(InitializedResult));
	memcpy_s(&OnRestartSparkInitialized_Params.Data, sizeof(OnRestartSparkInitialized_Params.Data), &Data, sizeof(Data));

	this->ProcessEvent(uFnOnRestartSparkInitialized, &OnRestartSparkInitialized_Params, nullptr);
};

// Function GearboxFramework.SparkInterfaceImpl.UpdateRequestsAfterRestart
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36619])
// Parameter Info:
// EInitializedResult             InitializedResult              (CPF_Parm)
// class UGearboxData*            Data                           (CPF_Parm)

void USparkInterfaceImpl::UpdateRequestsAfterRestart(EInitializedResult InitializedResult, class UGearboxData* Data)
{
	static UFunction* uFnUpdateRequestsAfterRestart = nullptr;

	if (!uFnUpdateRequestsAfterRestart)
	{
		uFnUpdateRequestsAfterRestart = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.UpdateRequestsAfterRestart");
	}

	USparkInterfaceImpl_execUpdateRequestsAfterRestart_Params UpdateRequestsAfterRestart_Params;
	memset(&UpdateRequestsAfterRestart_Params, 0, sizeof(UpdateRequestsAfterRestart_Params));
	memcpy_s(&UpdateRequestsAfterRestart_Params.InitializedResult, sizeof(UpdateRequestsAfterRestart_Params.InitializedResult), &InitializedResult, sizeof(InitializedResult));
	memcpy_s(&UpdateRequestsAfterRestart_Params.Data, sizeof(UpdateRequestsAfterRestart_Params.Data), &Data, sizeof(Data));

	uFnUpdateRequestsAfterRestart->iNative = 0;
	uFnUpdateRequestsAfterRestart->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnUpdateRequestsAfterRestart, &UpdateRequestsAfterRestart_Params, nullptr);
	uFnUpdateRequestsAfterRestart->FunctionFlags |= 0x400;
	uFnUpdateRequestsAfterRestart->iNative = 36619;
};

// Function GearboxFramework.SparkInterfaceImpl.RestartSparkInitialization
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FPlatformUserId&  UserId                         (CPF_Parm)

void USparkInterfaceImpl::eventRestartSparkInitialization(const struct FPlatformUserId& UserId)
{
	static UFunction* uFnRestartSparkInitialization = nullptr;

	if (!uFnRestartSparkInitialization)
	{
		uFnRestartSparkInitialization = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.RestartSparkInitialization");
	}

	USparkInterfaceImpl_eventRestartSparkInitialization_Params RestartSparkInitialization_Params;
	memset(&RestartSparkInitialization_Params, 0, sizeof(RestartSparkInitialization_Params));
	memcpy_s(&RestartSparkInitialization_Params.UserId, sizeof(RestartSparkInitialization_Params.UserId), &UserId, sizeof(UserId));

	this->ProcessEvent(uFnRestartSparkInitialization, &RestartSparkInitialization_Params, nullptr);
};

// Function GearboxFramework.SparkInterfaceImpl.RestartServerSparkInitialization
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void USparkInterfaceImpl::eventRestartServerSparkInitialization()
{
	static UFunction* uFnRestartServerSparkInitialization = nullptr;

	if (!uFnRestartServerSparkInitialization)
	{
		uFnRestartServerSparkInitialization = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.RestartServerSparkInitialization");
	}

	USparkInterfaceImpl_eventRestartServerSparkInitialization_Params RestartServerSparkInitialization_Params;
	memset(&RestartServerSparkInitialization_Params, 0, sizeof(RestartServerSparkInitialization_Params));

	this->ProcessEvent(uFnRestartServerSparkInitialization, &RestartServerSparkInitialization_Params, nullptr);
};

// Function GearboxFramework.SparkInterfaceImpl.StartSparkInitialization
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FPlatformUserId&  UserId                         (CPF_Parm)
// const struct FScriptDelegate&  SparkInitializedDelegate       (CPF_Parm | CPF_NeedCtorLink)
// const struct FScriptDelegate&  EntitlementsUpdatedDelegate    (CPF_Parm | CPF_NeedCtorLink)

void USparkInterfaceImpl::StartSparkInitialization(const struct FPlatformUserId& UserId, const struct FScriptDelegate& SparkInitializedDelegate, const struct FScriptDelegate& EntitlementsUpdatedDelegate)
{
	static UFunction* uFnStartSparkInitialization = nullptr;

	if (!uFnStartSparkInitialization)
	{
		uFnStartSparkInitialization = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.StartSparkInitialization");
	}

	USparkInterfaceImpl_execStartSparkInitialization_Params StartSparkInitialization_Params;
	memset(&StartSparkInitialization_Params, 0, sizeof(StartSparkInitialization_Params));
	memcpy_s(&StartSparkInitialization_Params.UserId, sizeof(StartSparkInitialization_Params.UserId), &UserId, sizeof(UserId));
	memcpy_s(&StartSparkInitialization_Params.SparkInitializedDelegate, sizeof(StartSparkInitialization_Params.SparkInitializedDelegate), &SparkInitializedDelegate, sizeof(SparkInitializedDelegate));
	memcpy_s(&StartSparkInitialization_Params.EntitlementsUpdatedDelegate, sizeof(StartSparkInitialization_Params.EntitlementsUpdatedDelegate), &EntitlementsUpdatedDelegate, sizeof(EntitlementsUpdatedDelegate));

	this->ProcessEvent(uFnStartSparkInitialization, &StartSparkInitialization_Params, nullptr);
};

// Function GearboxFramework.SparkInterfaceImpl.ResetInitializationStatus
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FPlatformUserId&  UserId                         (CPF_Parm)

void USparkInterfaceImpl::ResetInitializationStatus(const struct FPlatformUserId& UserId)
{
	static UFunction* uFnResetInitializationStatus = nullptr;

	if (!uFnResetInitializationStatus)
	{
		uFnResetInitializationStatus = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.ResetInitializationStatus");
	}

	USparkInterfaceImpl_execResetInitializationStatus_Params ResetInitializationStatus_Params;
	memset(&ResetInitializationStatus_Params, 0, sizeof(ResetInitializationStatus_Params));
	memcpy_s(&ResetInitializationStatus_Params.UserId, sizeof(ResetInitializationStatus_Params.UserId), &UserId, sizeof(UserId));

	this->ProcessEvent(uFnResetInitializationStatus, &ResetInitializationStatus_Params, nullptr);
};

// Function GearboxFramework.SparkInterfaceImpl.RemoveInitProcess
// [0x12040001] (FUNC_Final | FUNC_Private | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FPlatformUserId&  UserId                         (CPF_Parm)

void USparkInterfaceImpl::RemoveInitProcess(const struct FPlatformUserId& UserId)
{
	static UFunction* uFnRemoveInitProcess = nullptr;

	if (!uFnRemoveInitProcess)
	{
		uFnRemoveInitProcess = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.RemoveInitProcess");
	}

	USparkInterfaceImpl_execRemoveInitProcess_Params RemoveInitProcess_Params;
	memset(&RemoveInitProcess_Params, 0, sizeof(RemoveInitProcess_Params));
	memcpy_s(&RemoveInitProcess_Params.UserId, sizeof(RemoveInitProcess_Params.UserId), &UserId, sizeof(UserId));

	this->ProcessEvent(uFnRemoveInitProcess, &RemoveInitProcess_Params, nullptr);
};

// Function GearboxFramework.SparkInterfaceImpl.CreateInitProcess
// [0x12040001] (FUNC_Final | FUNC_Private | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class USparkInitializationProcess* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FPlatformUserId&  UserId                         (CPF_Parm)

class USparkInitializationProcess* USparkInterfaceImpl::CreateInitProcess(const struct FPlatformUserId& UserId)
{
	static UFunction* uFnCreateInitProcess = nullptr;

	if (!uFnCreateInitProcess)
	{
		uFnCreateInitProcess = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.CreateInitProcess");
	}

	USparkInterfaceImpl_execCreateInitProcess_Params CreateInitProcess_Params;
	memset(&CreateInitProcess_Params, 0, sizeof(CreateInitProcess_Params));
	memcpy_s(&CreateInitProcess_Params.UserId, sizeof(CreateInitProcess_Params.UserId), &UserId, sizeof(UserId));

	this->ProcessEvent(uFnCreateInitProcess, &CreateInitProcess_Params, nullptr);

	return CreateInitProcess_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterfaceImpl.CreateServerInitProcess
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class USparkInitializationProcess* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class USparkInitializationProcess* USparkInterfaceImpl::CreateServerInitProcess()
{
	static UFunction* uFnCreateServerInitProcess = nullptr;

	if (!uFnCreateServerInitProcess)
	{
		uFnCreateServerInitProcess = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.CreateServerInitProcess");
	}

	USparkInterfaceImpl_execCreateServerInitProcess_Params CreateServerInitProcess_Params;
	memset(&CreateServerInitProcess_Params, 0, sizeof(CreateServerInitProcess_Params));

	this->ProcessEvent(uFnCreateServerInitProcess, &CreateServerInitProcess_Params, nullptr);

	return CreateServerInitProcess_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterfaceImpl.GetServerInitProcess
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class USparkInitializationProcess* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class USparkInitializationProcess* USparkInterfaceImpl::GetServerInitProcess()
{
	static UFunction* uFnGetServerInitProcess = nullptr;

	if (!uFnGetServerInitProcess)
	{
		uFnGetServerInitProcess = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.GetServerInitProcess");
	}

	USparkInterfaceImpl_execGetServerInitProcess_Params GetServerInitProcess_Params;
	memset(&GetServerInitProcess_Params, 0, sizeof(GetServerInitProcess_Params));

	this->ProcessEvent(uFnGetServerInitProcess, &GetServerInitProcess_Params, nullptr);

	return GetServerInitProcess_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterfaceImpl.GetInitProcess
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class USparkInitializationProcess* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FPlatformUserId&  UserId                         (CPF_Parm)

class USparkInitializationProcess* USparkInterfaceImpl::GetInitProcess(const struct FPlatformUserId& UserId)
{
	static UFunction* uFnGetInitProcess = nullptr;

	if (!uFnGetInitProcess)
	{
		uFnGetInitProcess = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.GetInitProcess");
	}

	USparkInterfaceImpl_execGetInitProcess_Params GetInitProcess_Params;
	memset(&GetInitProcess_Params, 0, sizeof(GetInitProcess_Params));
	memcpy_s(&GetInitProcess_Params.UserId, sizeof(GetInitProcess_Params.UserId), &UserId, sizeof(UserId));

	this->ProcessEvent(uFnGetInitProcess, &GetInitProcess_Params, nullptr);

	return GetInitProcess_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterfaceImpl.SignInGearboxAccount
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FPlatformUserId&  UserId                         (CPF_Parm)

void USparkInterfaceImpl::SignInGearboxAccount(const struct FPlatformUserId& UserId)
{
	static UFunction* uFnSignInGearboxAccount = nullptr;

	if (!uFnSignInGearboxAccount)
	{
		uFnSignInGearboxAccount = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.SignInGearboxAccount");
	}

	USparkInterfaceImpl_execSignInGearboxAccount_Params SignInGearboxAccount_Params;
	memset(&SignInGearboxAccount_Params, 0, sizeof(SignInGearboxAccount_Params));
	memcpy_s(&SignInGearboxAccount_Params.UserId, sizeof(SignInGearboxAccount_Params.UserId), &UserId, sizeof(UserId));

	this->ProcessEvent(uFnSignInGearboxAccount, &SignInGearboxAccount_Params, nullptr);
};

// Function GearboxFramework.SparkInterfaceImpl.CreateGearboxAccountData
// [0x12040001] (FUNC_Final | FUNC_Private | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UGearboxAccountData*     ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FPlatformUserId&  UserId                         (CPF_Parm)

class UGearboxAccountData* USparkInterfaceImpl::CreateGearboxAccountData(const struct FPlatformUserId& UserId)
{
	static UFunction* uFnCreateGearboxAccountData = nullptr;

	if (!uFnCreateGearboxAccountData)
	{
		uFnCreateGearboxAccountData = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.CreateGearboxAccountData");
	}

	USparkInterfaceImpl_execCreateGearboxAccountData_Params CreateGearboxAccountData_Params;
	memset(&CreateGearboxAccountData_Params, 0, sizeof(CreateGearboxAccountData_Params));
	memcpy_s(&CreateGearboxAccountData_Params.UserId, sizeof(CreateGearboxAccountData_Params.UserId), &UserId, sizeof(UserId));

	this->ProcessEvent(uFnCreateGearboxAccountData, &CreateGearboxAccountData_Params, nullptr);

	return CreateGearboxAccountData_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterfaceImpl.GetGearboxAccountData
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UGearboxAccountData*     ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FPlatformUserId&  UserId                         (CPF_Parm)

class UGearboxAccountData* USparkInterfaceImpl::eventGetGearboxAccountData(const struct FPlatformUserId& UserId)
{
	static UFunction* uFnGetGearboxAccountData = nullptr;

	if (!uFnGetGearboxAccountData)
	{
		uFnGetGearboxAccountData = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.GetGearboxAccountData");
	}

	USparkInterfaceImpl_eventGetGearboxAccountData_Params GetGearboxAccountData_Params;
	memset(&GetGearboxAccountData_Params, 0, sizeof(GetGearboxAccountData_Params));
	memcpy_s(&GetGearboxAccountData_Params.UserId, sizeof(GetGearboxAccountData_Params.UserId), &UserId, sizeof(UserId));

	this->ProcessEvent(uFnGetGearboxAccountData, &GetGearboxAccountData_Params, nullptr);

	return GetGearboxAccountData_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterfaceImpl.CreateGearboxServerData
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UGearboxServerData*      ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UGearboxServerData* USparkInterfaceImpl::eventCreateGearboxServerData()
{
	static UFunction* uFnCreateGearboxServerData = nullptr;

	if (!uFnCreateGearboxServerData)
	{
		uFnCreateGearboxServerData = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.CreateGearboxServerData");
	}

	USparkInterfaceImpl_eventCreateGearboxServerData_Params CreateGearboxServerData_Params;
	memset(&CreateGearboxServerData_Params, 0, sizeof(CreateGearboxServerData_Params));

	this->ProcessEvent(uFnCreateGearboxServerData, &CreateGearboxServerData_Params, nullptr);

	return CreateGearboxServerData_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterfaceImpl.GetGearboxServerData
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UGearboxServerData*      ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UGearboxServerData* USparkInterfaceImpl::eventGetGearboxServerData()
{
	static UFunction* uFnGetGearboxServerData = nullptr;

	if (!uFnGetGearboxServerData)
	{
		uFnGetGearboxServerData = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.GetGearboxServerData");
	}

	USparkInterfaceImpl_eventGetGearboxServerData_Params GetGearboxServerData_Params;
	memset(&GetGearboxServerData_Params, 0, sizeof(GetGearboxServerData_Params));

	this->ProcessEvent(uFnGetGearboxServerData, &GetGearboxServerData_Params, nullptr);

	return GetGearboxServerData_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterfaceImpl.GetAccountIndex
// [0x12440001] (FUNC_Final | FUNC_Private | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FPlatformUserId&  UserId                         (CPF_Parm)
// int32_t                        Index                          (CPF_Parm | CPF_OutParm)

bool USparkInterfaceImpl::GetAccountIndex(const struct FPlatformUserId& UserId, int32_t& Index)
{
	static UFunction* uFnGetAccountIndex = nullptr;

	if (!uFnGetAccountIndex)
	{
		uFnGetAccountIndex = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.GetAccountIndex");
	}

	USparkInterfaceImpl_execGetAccountIndex_Params GetAccountIndex_Params;
	memset(&GetAccountIndex_Params, 0, sizeof(GetAccountIndex_Params));
	memcpy_s(&GetAccountIndex_Params.UserId, sizeof(GetAccountIndex_Params.UserId), &UserId, sizeof(UserId));
	memcpy_s(&GetAccountIndex_Params.Index, sizeof(GetAccountIndex_Params.Index), &Index, sizeof(Index));

	this->ProcessEvent(uFnGetAccountIndex, &GetAccountIndex_Params, nullptr);

	memcpy_s(&Index, sizeof(Index), &GetAccountIndex_Params.Index, sizeof(GetAccountIndex_Params.Index));

	return GetAccountIndex_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterfaceImpl.SignOutGearboxAccount
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FPlatformUserId&  UserId                         (CPF_Parm)

void USparkInterfaceImpl::SignOutGearboxAccount(const struct FPlatformUserId& UserId)
{
	static UFunction* uFnSignOutGearboxAccount = nullptr;

	if (!uFnSignOutGearboxAccount)
	{
		uFnSignOutGearboxAccount = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.SignOutGearboxAccount");
	}

	USparkInterfaceImpl_execSignOutGearboxAccount_Params SignOutGearboxAccount_Params;
	memset(&SignOutGearboxAccount_Params, 0, sizeof(SignOutGearboxAccount_Params));
	memcpy_s(&SignOutGearboxAccount_Params.UserId, sizeof(SignOutGearboxAccount_Params.UserId), &UserId, sizeof(UserId));

	this->ProcessEvent(uFnSignOutGearboxAccount, &SignOutGearboxAccount_Params, nullptr);
};

// Function GearboxFramework.SparkInterfaceImpl.ClearGearboxAccountData
// [0x12040001] (FUNC_Final | FUNC_Private | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// const struct FPlatformUserId&  UserId                         (CPF_Parm)

void USparkInterfaceImpl::ClearGearboxAccountData(const struct FPlatformUserId& UserId)
{
	static UFunction* uFnClearGearboxAccountData = nullptr;

	if (!uFnClearGearboxAccountData)
	{
		uFnClearGearboxAccountData = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.ClearGearboxAccountData");
	}

	USparkInterfaceImpl_execClearGearboxAccountData_Params ClearGearboxAccountData_Params;
	memset(&ClearGearboxAccountData_Params, 0, sizeof(ClearGearboxAccountData_Params));
	memcpy_s(&ClearGearboxAccountData_Params.UserId, sizeof(ClearGearboxAccountData_Params.UserId), &UserId, sizeof(UserId));

	this->ProcessEvent(uFnClearGearboxAccountData, &ClearGearboxAccountData_Params, nullptr);
};

// Function GearboxFramework.SparkInterfaceImpl.IsGearboxAccountSignedIn
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FPlatformUserId&  UserId                         (CPF_Parm)

bool USparkInterfaceImpl::IsGearboxAccountSignedIn(const struct FPlatformUserId& UserId)
{
	static UFunction* uFnIsGearboxAccountSignedIn = nullptr;

	if (!uFnIsGearboxAccountSignedIn)
	{
		uFnIsGearboxAccountSignedIn = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.IsGearboxAccountSignedIn");
	}

	USparkInterfaceImpl_execIsGearboxAccountSignedIn_Params IsGearboxAccountSignedIn_Params;
	memset(&IsGearboxAccountSignedIn_Params, 0, sizeof(IsGearboxAccountSignedIn_Params));
	memcpy_s(&IsGearboxAccountSignedIn_Params.UserId, sizeof(IsGearboxAccountSignedIn_Params.UserId), &UserId, sizeof(UserId));

	this->ProcessEvent(uFnIsGearboxAccountSignedIn, &IsGearboxAccountSignedIn_Params, nullptr);

	return IsGearboxAccountSignedIn_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterfaceImpl.IsGearboxAccountAuthenticated
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const struct FPlatformUserId&  UserId                         (CPF_Parm)

bool USparkInterfaceImpl::eventIsGearboxAccountAuthenticated(const struct FPlatformUserId& UserId)
{
	static UFunction* uFnIsGearboxAccountAuthenticated = nullptr;

	if (!uFnIsGearboxAccountAuthenticated)
	{
		uFnIsGearboxAccountAuthenticated = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.IsGearboxAccountAuthenticated");
	}

	USparkInterfaceImpl_eventIsGearboxAccountAuthenticated_Params IsGearboxAccountAuthenticated_Params;
	memset(&IsGearboxAccountAuthenticated_Params, 0, sizeof(IsGearboxAccountAuthenticated_Params));
	memcpy_s(&IsGearboxAccountAuthenticated_Params.UserId, sizeof(IsGearboxAccountAuthenticated_Params.UserId), &UserId, sizeof(UserId));

	this->ProcessEvent(uFnIsGearboxAccountAuthenticated, &IsGearboxAccountAuthenticated_Params, nullptr);

	return IsGearboxAccountAuthenticated_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterfaceImpl.GetPlatformLoginNameFromUser
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// const struct FPlatformUserId&  UserId                         (CPF_Parm)

class FString USparkInterfaceImpl::eventGetPlatformLoginNameFromUser(const struct FPlatformUserId& UserId)
{
	static UFunction* uFnGetPlatformLoginNameFromUser = nullptr;

	if (!uFnGetPlatformLoginNameFromUser)
	{
		uFnGetPlatformLoginNameFromUser = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.GetPlatformLoginNameFromUser");
	}

	USparkInterfaceImpl_eventGetPlatformLoginNameFromUser_Params GetPlatformLoginNameFromUser_Params;
	memset(&GetPlatformLoginNameFromUser_Params, 0, sizeof(GetPlatformLoginNameFromUser_Params));
	memcpy_s(&GetPlatformLoginNameFromUser_Params.UserId, sizeof(GetPlatformLoginNameFromUser_Params.UserId), &UserId, sizeof(UserId));

	this->ProcessEvent(uFnGetPlatformLoginNameFromUser, &GetPlatformLoginNameFromUser_Params, nullptr);

	return GetPlatformLoginNameFromUser_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterfaceImpl.IsShiftEnabled
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool USparkInterfaceImpl::eventIsShiftEnabled()
{
	static UFunction* uFnIsShiftEnabled = nullptr;

	if (!uFnIsShiftEnabled)
	{
		uFnIsShiftEnabled = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.IsShiftEnabled");
	}

	USparkInterfaceImpl_eventIsShiftEnabled_Params IsShiftEnabled_Params;
	memset(&IsShiftEnabled_Params, 0, sizeof(IsShiftEnabled_Params));

	this->ProcessEvent(uFnIsShiftEnabled, &IsShiftEnabled_Params, nullptr);

	return IsShiftEnabled_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterfaceImpl.IsSparkEnabled
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool USparkInterfaceImpl::eventIsSparkEnabled()
{
	static UFunction* uFnIsSparkEnabled = nullptr;

	if (!uFnIsSparkEnabled)
	{
		uFnIsSparkEnabled = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.IsSparkEnabled");
	}

	USparkInterfaceImpl_eventIsSparkEnabled_Params IsSparkEnabled_Params;
	memset(&IsSparkEnabled_Params, 0, sizeof(IsSparkEnabled_Params));

	this->ProcessEvent(uFnIsSparkEnabled, &IsSparkEnabled_Params, nullptr);

	return IsSparkEnabled_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterfaceImpl.WithShift
// [0x00022400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[36752])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool USparkInterfaceImpl::WithShift()
{
	static UFunction* uFnWithShift = nullptr;

	if (!uFnWithShift)
	{
		uFnWithShift = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.WithShift");
	}

	USparkInterfaceImpl_execWithShift_Params WithShift_Params;
	memset(&WithShift_Params, 0, sizeof(WithShift_Params));

	uFnWithShift->iNative = 0;
	uFnWithShift->FunctionFlags &= ~0x400;
	USparkInterfaceImpl::StaticClass()->ProcessEvent(uFnWithShift, &WithShift_Params, nullptr);
	uFnWithShift->FunctionFlags |= 0x400;
	uFnWithShift->iNative = 36752;

	return WithShift_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterfaceImpl.WithSpark
// [0x00022400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[36753])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool USparkInterfaceImpl::WithSpark()
{
	static UFunction* uFnWithSpark = nullptr;

	if (!uFnWithSpark)
	{
		uFnWithSpark = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.WithSpark");
	}

	USparkInterfaceImpl_execWithSpark_Params WithSpark_Params;
	memset(&WithSpark_Params, 0, sizeof(WithSpark_Params));

	uFnWithSpark->iNative = 0;
	uFnWithSpark->FunctionFlags &= ~0x400;
	USparkInterfaceImpl::StaticClass()->ProcessEvent(uFnWithSpark, &WithSpark_Params, nullptr);
	uFnWithSpark->FunctionFlags |= 0x400;
	uFnWithSpark->iNative = 36753;

	return WithSpark_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterfaceImpl.CleanupRequests
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32745])
// Parameter Info:

void USparkInterfaceImpl::CleanupRequests()
{
	static UFunction* uFnCleanupRequests = nullptr;

	if (!uFnCleanupRequests)
	{
		uFnCleanupRequests = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.CleanupRequests");
	}

	USparkInterfaceImpl_execCleanupRequests_Params CleanupRequests_Params;
	memset(&CleanupRequests_Params, 0, sizeof(CleanupRequests_Params));

	uFnCleanupRequests->iNative = 0;
	uFnCleanupRequests->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCleanupRequests, &CleanupRequests_Params, nullptr);
	uFnCleanupRequests->FunctionFlags |= 0x400;
	uFnCleanupRequests->iNative = 32745;
};

// Function GearboxFramework.SparkInterfaceImpl.IssueSparkStringRequestWithAuth
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34696])
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const class FString&           URL                            (CPF_Parm | CPF_NeedCtorLink)
// const class FString&           RequestData                    (CPF_Const | CPF_Parm | CPF_NeedCtorLink)
// const class FString&           AuthToken                      (CPF_Parm | CPF_NeedCtorLink)
// const struct FScriptDelegate&  SparkRequestCompleteDelegate   (CPF_Parm | CPF_NeedCtorLink)
// struct FHttpParameters         HttpRequestParameters          (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

int32_t USparkInterfaceImpl::IssueSparkStringRequestWithAuth(const class FString& URL, const class FString& RequestData, const class FString& AuthToken, const struct FScriptDelegate& SparkRequestCompleteDelegate, struct FHttpParameters& HttpRequestParameters)
{
	static UFunction* uFnIssueSparkStringRequestWithAuth = nullptr;

	if (!uFnIssueSparkStringRequestWithAuth)
	{
		uFnIssueSparkStringRequestWithAuth = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.IssueSparkStringRequestWithAuth");
	}

	USparkInterfaceImpl_execIssueSparkStringRequestWithAuth_Params IssueSparkStringRequestWithAuth_Params;
	memset(&IssueSparkStringRequestWithAuth_Params, 0, sizeof(IssueSparkStringRequestWithAuth_Params));
	memcpy_s(&IssueSparkStringRequestWithAuth_Params.URL, sizeof(IssueSparkStringRequestWithAuth_Params.URL), &URL, sizeof(URL));
	memcpy_s(&IssueSparkStringRequestWithAuth_Params.RequestData, sizeof(IssueSparkStringRequestWithAuth_Params.RequestData), &RequestData, sizeof(RequestData));
	memcpy_s(&IssueSparkStringRequestWithAuth_Params.AuthToken, sizeof(IssueSparkStringRequestWithAuth_Params.AuthToken), &AuthToken, sizeof(AuthToken));
	memcpy_s(&IssueSparkStringRequestWithAuth_Params.SparkRequestCompleteDelegate, sizeof(IssueSparkStringRequestWithAuth_Params.SparkRequestCompleteDelegate), &SparkRequestCompleteDelegate, sizeof(SparkRequestCompleteDelegate));
	memcpy_s(&IssueSparkStringRequestWithAuth_Params.HttpRequestParameters, sizeof(IssueSparkStringRequestWithAuth_Params.HttpRequestParameters), &HttpRequestParameters, sizeof(HttpRequestParameters));

	uFnIssueSparkStringRequestWithAuth->iNative = 0;
	uFnIssueSparkStringRequestWithAuth->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIssueSparkStringRequestWithAuth, &IssueSparkStringRequestWithAuth_Params, nullptr);
	uFnIssueSparkStringRequestWithAuth->FunctionFlags |= 0x400;
	uFnIssueSparkStringRequestWithAuth->iNative = 34696;

	memcpy_s(&HttpRequestParameters, sizeof(HttpRequestParameters), &IssueSparkStringRequestWithAuth_Params.HttpRequestParameters, sizeof(IssueSparkStringRequestWithAuth_Params.HttpRequestParameters));

	return IssueSparkStringRequestWithAuth_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterfaceImpl.IssueSparkStringRequest
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34695])
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const class FString&           URL                            (CPF_Parm | CPF_NeedCtorLink)
// const class FString&           RequestData                    (CPF_Const | CPF_Parm | CPF_NeedCtorLink)
// const struct FScriptDelegate&  SparkRequestCompleteDelegate   (CPF_Parm | CPF_NeedCtorLink)
// struct FHttpParameters         HttpRequestParameters          (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

int32_t USparkInterfaceImpl::IssueSparkStringRequest(const class FString& URL, const class FString& RequestData, const struct FScriptDelegate& SparkRequestCompleteDelegate, struct FHttpParameters& HttpRequestParameters)
{
	static UFunction* uFnIssueSparkStringRequest = nullptr;

	if (!uFnIssueSparkStringRequest)
	{
		uFnIssueSparkStringRequest = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.IssueSparkStringRequest");
	}

	USparkInterfaceImpl_execIssueSparkStringRequest_Params IssueSparkStringRequest_Params;
	memset(&IssueSparkStringRequest_Params, 0, sizeof(IssueSparkStringRequest_Params));
	memcpy_s(&IssueSparkStringRequest_Params.URL, sizeof(IssueSparkStringRequest_Params.URL), &URL, sizeof(URL));
	memcpy_s(&IssueSparkStringRequest_Params.RequestData, sizeof(IssueSparkStringRequest_Params.RequestData), &RequestData, sizeof(RequestData));
	memcpy_s(&IssueSparkStringRequest_Params.SparkRequestCompleteDelegate, sizeof(IssueSparkStringRequest_Params.SparkRequestCompleteDelegate), &SparkRequestCompleteDelegate, sizeof(SparkRequestCompleteDelegate));
	memcpy_s(&IssueSparkStringRequest_Params.HttpRequestParameters, sizeof(IssueSparkStringRequest_Params.HttpRequestParameters), &HttpRequestParameters, sizeof(HttpRequestParameters));

	uFnIssueSparkStringRequest->iNative = 0;
	uFnIssueSparkStringRequest->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIssueSparkStringRequest, &IssueSparkStringRequest_Params, nullptr);
	uFnIssueSparkStringRequest->FunctionFlags |= 0x400;
	uFnIssueSparkStringRequest->iNative = 34695;

	memcpy_s(&HttpRequestParameters, sizeof(HttpRequestParameters), &IssueSparkStringRequest_Params.HttpRequestParameters, sizeof(IssueSparkStringRequest_Params.HttpRequestParameters));

	return IssueSparkStringRequest_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterfaceImpl.IssueSparkRequestWithAuth
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34694])
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const class FString&           URL                            (CPF_Parm | CPF_NeedCtorLink)
// const class FString&           AuthToken                      (CPF_Parm | CPF_NeedCtorLink)
// const struct FScriptDelegate&  SparkRequestCompleteDelegate   (CPF_Parm | CPF_NeedCtorLink)
// struct FHttpParameters         HttpParameters                 (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// class TArray<uint8_t>          RequestData                    (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

int32_t USparkInterfaceImpl::IssueSparkRequestWithAuth(const class FString& URL, const class FString& AuthToken, const struct FScriptDelegate& SparkRequestCompleteDelegate, struct FHttpParameters& HttpParameters, class TArray<uint8_t>& RequestData)
{
	static UFunction* uFnIssueSparkRequestWithAuth = nullptr;

	if (!uFnIssueSparkRequestWithAuth)
	{
		uFnIssueSparkRequestWithAuth = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.IssueSparkRequestWithAuth");
	}

	USparkInterfaceImpl_execIssueSparkRequestWithAuth_Params IssueSparkRequestWithAuth_Params;
	memset(&IssueSparkRequestWithAuth_Params, 0, sizeof(IssueSparkRequestWithAuth_Params));
	memcpy_s(&IssueSparkRequestWithAuth_Params.URL, sizeof(IssueSparkRequestWithAuth_Params.URL), &URL, sizeof(URL));
	memcpy_s(&IssueSparkRequestWithAuth_Params.AuthToken, sizeof(IssueSparkRequestWithAuth_Params.AuthToken), &AuthToken, sizeof(AuthToken));
	memcpy_s(&IssueSparkRequestWithAuth_Params.SparkRequestCompleteDelegate, sizeof(IssueSparkRequestWithAuth_Params.SparkRequestCompleteDelegate), &SparkRequestCompleteDelegate, sizeof(SparkRequestCompleteDelegate));
	memcpy_s(&IssueSparkRequestWithAuth_Params.HttpParameters, sizeof(IssueSparkRequestWithAuth_Params.HttpParameters), &HttpParameters, sizeof(HttpParameters));
	memcpy_s(&IssueSparkRequestWithAuth_Params.RequestData, sizeof(IssueSparkRequestWithAuth_Params.RequestData), &RequestData, sizeof(RequestData));

	uFnIssueSparkRequestWithAuth->iNative = 0;
	uFnIssueSparkRequestWithAuth->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIssueSparkRequestWithAuth, &IssueSparkRequestWithAuth_Params, nullptr);
	uFnIssueSparkRequestWithAuth->FunctionFlags |= 0x400;
	uFnIssueSparkRequestWithAuth->iNative = 34694;

	memcpy_s(&HttpParameters, sizeof(HttpParameters), &IssueSparkRequestWithAuth_Params.HttpParameters, sizeof(IssueSparkRequestWithAuth_Params.HttpParameters));
	memcpy_s(&RequestData, sizeof(RequestData), &IssueSparkRequestWithAuth_Params.RequestData, sizeof(IssueSparkRequestWithAuth_Params.RequestData));

	return IssueSparkRequestWithAuth_Params.ReturnValue;
};

// Function GearboxFramework.SparkInterfaceImpl.IssueSparkRequest
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34693])
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const class FString&           URL                            (CPF_Parm | CPF_NeedCtorLink)
// const struct FScriptDelegate&  SparkRequestCompleteDelegate   (CPF_Parm | CPF_NeedCtorLink)
// struct FHttpParameters         HttpParameters                 (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// class TArray<uint8_t>          RequestData                    (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

int32_t USparkInterfaceImpl::IssueSparkRequest(const class FString& URL, const struct FScriptDelegate& SparkRequestCompleteDelegate, struct FHttpParameters& HttpParameters, class TArray<uint8_t>& RequestData)
{
	static UFunction* uFnIssueSparkRequest = nullptr;

	if (!uFnIssueSparkRequest)
	{
		uFnIssueSparkRequest = UFunction::FindFunction("Function GearboxFramework.SparkInterfaceImpl.IssueSparkRequest");
	}

	USparkInterfaceImpl_execIssueSparkRequest_Params IssueSparkRequest_Params;
	memset(&IssueSparkRequest_Params, 0, sizeof(IssueSparkRequest_Params));
	memcpy_s(&IssueSparkRequest_Params.URL, sizeof(IssueSparkRequest_Params.URL), &URL, sizeof(URL));
	memcpy_s(&IssueSparkRequest_Params.SparkRequestCompleteDelegate, sizeof(IssueSparkRequest_Params.SparkRequestCompleteDelegate), &SparkRequestCompleteDelegate, sizeof(SparkRequestCompleteDelegate));
	memcpy_s(&IssueSparkRequest_Params.HttpParameters, sizeof(IssueSparkRequest_Params.HttpParameters), &HttpParameters, sizeof(HttpParameters));
	memcpy_s(&IssueSparkRequest_Params.RequestData, sizeof(IssueSparkRequest_Params.RequestData), &RequestData, sizeof(RequestData));

	uFnIssueSparkRequest->iNative = 0;
	uFnIssueSparkRequest->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIssueSparkRequest, &IssueSparkRequest_Params, nullptr);
	uFnIssueSparkRequest->FunctionFlags |= 0x400;
	uFnIssueSparkRequest->iNative = 34693;

	memcpy_s(&HttpParameters, sizeof(HttpParameters), &IssueSparkRequest_Params.HttpParameters, sizeof(IssueSparkRequest_Params.HttpParameters));
	memcpy_s(&RequestData, sizeof(RequestData), &IssueSparkRequest_Params.RequestData, sizeof(IssueSparkRequest_Params.RequestData));

	return IssueSparkRequest_Params.ReturnValue;
};

// Function GearboxFramework.SparkNews.HandleNewsRetrievalResponse
// [0x00480402] (FUNC_Defined | FUNC_Native | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags) (iNative[2567])
// Parameter Info:
// struct FSparkResult            Result                         (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void USparkNews::HandleNewsRetrievalResponse(struct FSparkResult& Result)
{
	static UFunction* uFnHandleNewsRetrievalResponse = nullptr;

	if (!uFnHandleNewsRetrievalResponse)
	{
		uFnHandleNewsRetrievalResponse = UFunction::FindFunction("Function GearboxFramework.SparkNews.HandleNewsRetrievalResponse");
	}

	USparkNews_execHandleNewsRetrievalResponse_Params HandleNewsRetrievalResponse_Params;
	memset(&HandleNewsRetrievalResponse_Params, 0, sizeof(HandleNewsRetrievalResponse_Params));
	memcpy_s(&HandleNewsRetrievalResponse_Params.Result, sizeof(HandleNewsRetrievalResponse_Params.Result), &Result, sizeof(Result));

	uFnHandleNewsRetrievalResponse->iNative = 0;
	uFnHandleNewsRetrievalResponse->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnHandleNewsRetrievalResponse, &HandleNewsRetrievalResponse_Params, nullptr);
	uFnHandleNewsRetrievalResponse->FunctionFlags |= 0x400;
	uFnHandleNewsRetrievalResponse->iNative = 2567;

	memcpy_s(&Result, sizeof(Result), &HandleNewsRetrievalResponse_Params.Result, sizeof(HandleNewsRetrievalResponse_Params.Result));
};

// Function GearboxFramework.SparkNews.OnNewsRequestComplete
// [0x00120000] (FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter Info:
// ENewsRetrievalResult           Result                         (CPF_Parm)

void USparkNews::OnNewsRequestComplete(ENewsRetrievalResult Result)
{
	static UFunction* uFnOnNewsRequestComplete = nullptr;

	if (!uFnOnNewsRequestComplete)
	{
		uFnOnNewsRequestComplete = UFunction::FindFunction("Function GearboxFramework.SparkNews.OnNewsRequestComplete");
	}

	USparkNews_execOnNewsRequestComplete_Params OnNewsRequestComplete_Params;
	memset(&OnNewsRequestComplete_Params, 0, sizeof(OnNewsRequestComplete_Params));
	memcpy_s(&OnNewsRequestComplete_Params.Result, sizeof(OnNewsRequestComplete_Params.Result), &Result, sizeof(Result));

	this->ProcessEvent(uFnOnNewsRequestComplete, &OnNewsRequestComplete_Params, nullptr);
};

// Function GearboxFramework.SparkServiceConfiguration.DumpParameters
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void USparkServiceConfiguration::DumpParameters()
{
	static UFunction* uFnDumpParameters = nullptr;

	if (!uFnDumpParameters)
	{
		uFnDumpParameters = UFunction::FindFunction("Function GearboxFramework.SparkServiceConfiguration.DumpParameters");
	}

	USparkServiceConfiguration_execDumpParameters_Params DumpParameters_Params;
	memset(&DumpParameters_Params, 0, sizeof(DumpParameters_Params));

	this->ProcessEvent(uFnDumpParameters, &DumpParameters_Params, nullptr);
};

// Function GearboxFramework.SparkServiceConfiguration.GetParameters
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// struct FServiceResult          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

struct FServiceResult USparkServiceConfiguration::GetParameters()
{
	static UFunction* uFnGetParameters = nullptr;

	if (!uFnGetParameters)
	{
		uFnGetParameters = UFunction::FindFunction("Function GearboxFramework.SparkServiceConfiguration.GetParameters");
	}

	USparkServiceConfiguration_execGetParameters_Params GetParameters_Params;
	memset(&GetParameters_Params, 0, sizeof(GetParameters_Params));

	this->ProcessEvent(uFnGetParameters, &GetParameters_Params, nullptr);

	return GetParameters_Params.ReturnValue;
};

// Function GearboxFramework.SparkServiceConfiguration.ReplaceParameters
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class USparkServiceConfiguration* Service                        (CPF_Parm)

void USparkServiceConfiguration::ReplaceParameters(class USparkServiceConfiguration* Service)
{
	static UFunction* uFnReplaceParameters = nullptr;

	if (!uFnReplaceParameters)
	{
		uFnReplaceParameters = UFunction::FindFunction("Function GearboxFramework.SparkServiceConfiguration.ReplaceParameters");
	}

	USparkServiceConfiguration_execReplaceParameters_Params ReplaceParameters_Params;
	memset(&ReplaceParameters_Params, 0, sizeof(ReplaceParameters_Params));
	memcpy_s(&ReplaceParameters_Params.Service, sizeof(ReplaceParameters_Params.Service), &Service, sizeof(Service));

	this->ProcessEvent(uFnReplaceParameters, &ReplaceParameters_Params, nullptr);
};

// Function GearboxFramework.SparkServiceConfiguration.CanIssueRequest
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32674])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool USparkServiceConfiguration::CanIssueRequest()
{
	static UFunction* uFnCanIssueRequest = nullptr;

	if (!uFnCanIssueRequest)
	{
		uFnCanIssueRequest = UFunction::FindFunction("Function GearboxFramework.SparkServiceConfiguration.CanIssueRequest");
	}

	USparkServiceConfiguration_execCanIssueRequest_Params CanIssueRequest_Params;
	memset(&CanIssueRequest_Params, 0, sizeof(CanIssueRequest_Params));

	uFnCanIssueRequest->iNative = 0;
	uFnCanIssueRequest->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCanIssueRequest, &CanIssueRequest_Params, nullptr);
	uFnCanIssueRequest->FunctionFlags |= 0x400;
	uFnCanIssueRequest->iNative = 32674;

	return CanIssueRequest_Params.ReturnValue;
};

// Function GearboxFramework.SparkServiceConfiguration.ScheduleRetry
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35821])
// Parameter Info:

void USparkServiceConfiguration::ScheduleRetry()
{
	static UFunction* uFnScheduleRetry = nullptr;

	if (!uFnScheduleRetry)
	{
		uFnScheduleRetry = UFunction::FindFunction("Function GearboxFramework.SparkServiceConfiguration.ScheduleRetry");
	}

	USparkServiceConfiguration_execScheduleRetry_Params ScheduleRetry_Params;
	memset(&ScheduleRetry_Params, 0, sizeof(ScheduleRetry_Params));

	uFnScheduleRetry->iNative = 0;
	uFnScheduleRetry->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnScheduleRetry, &ScheduleRetry_Params, nullptr);
	uFnScheduleRetry->FunctionFlags |= 0x400;
	uFnScheduleRetry->iNative = 35821;
};

// Function GearboxFramework.SparkServiceConfiguration.ResetRetries
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35731])
// Parameter Info:

void USparkServiceConfiguration::ResetRetries()
{
	static UFunction* uFnResetRetries = nullptr;

	if (!uFnResetRetries)
	{
		uFnResetRetries = UFunction::FindFunction("Function GearboxFramework.SparkServiceConfiguration.ResetRetries");
	}

	USparkServiceConfiguration_execResetRetries_Params ResetRetries_Params;
	memset(&ResetRetries_Params, 0, sizeof(ResetRetries_Params));

	uFnResetRetries->iNative = 0;
	uFnResetRetries->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnResetRetries, &ResetRetries_Params, nullptr);
	uFnResetRetries->FunctionFlags |= 0x400;
	uFnResetRetries->iNative = 35731;
};

// Function GearboxFramework.SparkServiceConfiguration.GetFloatParameter
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[23720])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const class FString&           KeyName                        (CPF_Parm | CPF_NeedCtorLink)
// float                          DefaultValue                   (CPF_Parm)
// float                          MinimumValue                   (CPF_Parm)
// float                          MaximumValue                   (CPF_Parm)

float USparkServiceConfiguration::GetFloatParameter(const class FString& KeyName, float DefaultValue, float MinimumValue, float MaximumValue)
{
	static UFunction* uFnGetFloatParameter = nullptr;

	if (!uFnGetFloatParameter)
	{
		uFnGetFloatParameter = UFunction::FindFunction("Function GearboxFramework.SparkServiceConfiguration.GetFloatParameter");
	}

	USparkServiceConfiguration_execGetFloatParameter_Params GetFloatParameter_Params;
	memset(&GetFloatParameter_Params, 0, sizeof(GetFloatParameter_Params));
	memcpy_s(&GetFloatParameter_Params.KeyName, sizeof(GetFloatParameter_Params.KeyName), &KeyName, sizeof(KeyName));
	memcpy_s(&GetFloatParameter_Params.DefaultValue, sizeof(GetFloatParameter_Params.DefaultValue), &DefaultValue, sizeof(DefaultValue));
	memcpy_s(&GetFloatParameter_Params.MinimumValue, sizeof(GetFloatParameter_Params.MinimumValue), &MinimumValue, sizeof(MinimumValue));
	memcpy_s(&GetFloatParameter_Params.MaximumValue, sizeof(GetFloatParameter_Params.MaximumValue), &MaximumValue, sizeof(MaximumValue));

	uFnGetFloatParameter->iNative = 0;
	uFnGetFloatParameter->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetFloatParameter, &GetFloatParameter_Params, nullptr);
	uFnGetFloatParameter->FunctionFlags |= 0x400;
	uFnGetFloatParameter->iNative = 23720;

	return GetFloatParameter_Params.ReturnValue;
};

// Function GearboxFramework.SparkServiceConfiguration.GetIntParameter
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34121])
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// const class FString&           KeyName                        (CPF_Parm | CPF_NeedCtorLink)
// int32_t                        DefaultValue                   (CPF_Parm)
// int32_t                        MinimumValue                   (CPF_Parm)
// int32_t                        MaximumValue                   (CPF_Parm)

int32_t USparkServiceConfiguration::GetIntParameter(const class FString& KeyName, int32_t DefaultValue, int32_t MinimumValue, int32_t MaximumValue)
{
	static UFunction* uFnGetIntParameter = nullptr;

	if (!uFnGetIntParameter)
	{
		uFnGetIntParameter = UFunction::FindFunction("Function GearboxFramework.SparkServiceConfiguration.GetIntParameter");
	}

	USparkServiceConfiguration_execGetIntParameter_Params GetIntParameter_Params;
	memset(&GetIntParameter_Params, 0, sizeof(GetIntParameter_Params));
	memcpy_s(&GetIntParameter_Params.KeyName, sizeof(GetIntParameter_Params.KeyName), &KeyName, sizeof(KeyName));
	memcpy_s(&GetIntParameter_Params.DefaultValue, sizeof(GetIntParameter_Params.DefaultValue), &DefaultValue, sizeof(DefaultValue));
	memcpy_s(&GetIntParameter_Params.MinimumValue, sizeof(GetIntParameter_Params.MinimumValue), &MinimumValue, sizeof(MinimumValue));
	memcpy_s(&GetIntParameter_Params.MaximumValue, sizeof(GetIntParameter_Params.MaximumValue), &MaximumValue, sizeof(MaximumValue));

	uFnGetIntParameter->iNative = 0;
	uFnGetIntParameter->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetIntParameter, &GetIntParameter_Params, nullptr);
	uFnGetIntParameter->FunctionFlags |= 0x400;
	uFnGetIntParameter->iNative = 34121;

	return GetIntParameter_Params.ReturnValue;
};

// Function GearboxFramework.SparkServiceConfiguration.GetStringParameter
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34233])
// Parameter Info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// const class FString&           KeyName                        (CPF_Parm | CPF_NeedCtorLink)
// const class FString&           Default                        (CPF_Parm | CPF_NeedCtorLink)

class FString USparkServiceConfiguration::GetStringParameter(const class FString& KeyName, const class FString& Default)
{
	static UFunction* uFnGetStringParameter = nullptr;

	if (!uFnGetStringParameter)
	{
		uFnGetStringParameter = UFunction::FindFunction("Function GearboxFramework.SparkServiceConfiguration.GetStringParameter");
	}

	USparkServiceConfiguration_execGetStringParameter_Params GetStringParameter_Params;
	memset(&GetStringParameter_Params, 0, sizeof(GetStringParameter_Params));
	memcpy_s(&GetStringParameter_Params.KeyName, sizeof(GetStringParameter_Params.KeyName), &KeyName, sizeof(KeyName));
	memcpy_s(&GetStringParameter_Params.Default, sizeof(GetStringParameter_Params.Default), &Default, sizeof(Default));

	uFnGetStringParameter->iNative = 0;
	uFnGetStringParameter->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetStringParameter, &GetStringParameter_Params, nullptr);
	uFnGetStringParameter->FunctionFlags |= 0x400;
	uFnGetStringParameter->iNative = 34233;

	return GetStringParameter_Params.ReturnValue;
};

// Function GearboxFramework.SparkServiceConfiguration.GetParameter
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34164])
// Parameter Info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// const class FString&           KeyNameToSearchFor             (CPF_Parm | CPF_NeedCtorLink)

class FString USparkServiceConfiguration::GetParameter(const class FString& KeyNameToSearchFor)
{
	static UFunction* uFnGetParameter = nullptr;

	if (!uFnGetParameter)
	{
		uFnGetParameter = UFunction::FindFunction("Function GearboxFramework.SparkServiceConfiguration.GetParameter");
	}

	USparkServiceConfiguration_execGetParameter_Params GetParameter_Params;
	memset(&GetParameter_Params, 0, sizeof(GetParameter_Params));
	memcpy_s(&GetParameter_Params.KeyNameToSearchFor, sizeof(GetParameter_Params.KeyNameToSearchFor), &KeyNameToSearchFor, sizeof(KeyNameToSearchFor));

	uFnGetParameter->iNative = 0;
	uFnGetParameter->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetParameter, &GetParameter_Params, nullptr);
	uFnGetParameter->FunctionFlags |= 0x400;
	uFnGetParameter->iNative = 34164;

	return GetParameter_Params.ReturnValue;
};

// Function GearboxFramework.SparkServiceConfiguration.LoadService
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34847])
// Parameter Info:
// struct FServiceResult          Service                        (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void USparkServiceConfiguration::LoadService(struct FServiceResult& Service)
{
	static UFunction* uFnLoadService = nullptr;

	if (!uFnLoadService)
	{
		uFnLoadService = UFunction::FindFunction("Function GearboxFramework.SparkServiceConfiguration.LoadService");
	}

	USparkServiceConfiguration_execLoadService_Params LoadService_Params;
	memset(&LoadService_Params, 0, sizeof(LoadService_Params));
	memcpy_s(&LoadService_Params.Service, sizeof(LoadService_Params.Service), &Service, sizeof(Service));

	uFnLoadService->iNative = 0;
	uFnLoadService->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnLoadService, &LoadService_Params, nullptr);
	uFnLoadService->FunctionFlags |= 0x400;
	uFnLoadService->iNative = 34847;

	memcpy_s(&Service, sizeof(Service), &LoadService_Params.Service, sizeof(LoadService_Params.Service));
};

// Function GearboxFramework.SparkServiceConfiguration.LoadOverrides
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34846])
// Parameter Info:

void USparkServiceConfiguration::LoadOverrides()
{
	static UFunction* uFnLoadOverrides = nullptr;

	if (!uFnLoadOverrides)
	{
		uFnLoadOverrides = UFunction::FindFunction("Function GearboxFramework.SparkServiceConfiguration.LoadOverrides");
	}

	USparkServiceConfiguration_execLoadOverrides_Params LoadOverrides_Params;
	memset(&LoadOverrides_Params, 0, sizeof(LoadOverrides_Params));

	uFnLoadOverrides->iNative = 0;
	uFnLoadOverrides->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnLoadOverrides, &LoadOverrides_Params, nullptr);
	uFnLoadOverrides->FunctionFlags |= 0x400;
	uFnLoadOverrides->iNative = 34846;
};

// Function GearboxFramework.SparkTypes.UTF8toString
// [0x00022400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[36652])
// Parameter Info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// const class TArray<uint8_t>&   inputBytes                     (CPF_Parm | CPF_NeedCtorLink)

class FString USparkTypes::UTF8toString(const class TArray<uint8_t>& inputBytes)
{
	static UFunction* uFnUTF8toString = nullptr;

	if (!uFnUTF8toString)
	{
		uFnUTF8toString = UFunction::FindFunction("Function GearboxFramework.SparkTypes.UTF8toString");
	}

	USparkTypes_execUTF8toString_Params UTF8toString_Params;
	memset(&UTF8toString_Params, 0, sizeof(UTF8toString_Params));
	memcpy_s(&UTF8toString_Params.inputBytes, sizeof(UTF8toString_Params.inputBytes), &inputBytes, sizeof(inputBytes));

	uFnUTF8toString->iNative = 0;
	uFnUTF8toString->FunctionFlags &= ~0x400;
	USparkTypes::StaticClass()->ProcessEvent(uFnUTF8toString, &UTF8toString_Params, nullptr);
	uFnUTF8toString->FunctionFlags |= 0x400;
	uFnUTF8toString->iNative = 36652;

	return UTF8toString_Params.ReturnValue;
};

// Function GearboxFramework.SparkTypes.OnQueueUpdated
// [0x00120000] (FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter Info:
// class UGearboxAccountData*     GbxAccount                     (CPF_Parm)

void USparkTypes::OnQueueUpdated(class UGearboxAccountData* GbxAccount)
{
	static UFunction* uFnOnQueueUpdated = nullptr;

	if (!uFnOnQueueUpdated)
	{
		uFnOnQueueUpdated = UFunction::FindFunction("Function GearboxFramework.SparkTypes.OnQueueUpdated");
	}

	USparkTypes_execOnQueueUpdated_Params OnQueueUpdated_Params;
	memset(&OnQueueUpdated_Params, 0, sizeof(OnQueueUpdated_Params));
	memcpy_s(&OnQueueUpdated_Params.GbxAccount, sizeof(OnQueueUpdated_Params.GbxAccount), &GbxAccount, sizeof(GbxAccount));

	this->ProcessEvent(uFnOnQueueUpdated, &OnQueueUpdated_Params, nullptr);
};

// Function GearboxFramework.SparkTypes.OnQueueStatusUpdated
// [0x00120000] (FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter Info:
// class UGearboxAccountData*     GbxAccount                     (CPF_Parm)

void USparkTypes::OnQueueStatusUpdated(class UGearboxAccountData* GbxAccount)
{
	static UFunction* uFnOnQueueStatusUpdated = nullptr;

	if (!uFnOnQueueStatusUpdated)
	{
		uFnOnQueueStatusUpdated = UFunction::FindFunction("Function GearboxFramework.SparkTypes.OnQueueStatusUpdated");
	}

	USparkTypes_execOnQueueStatusUpdated_Params OnQueueStatusUpdated_Params;
	memset(&OnQueueStatusUpdated_Params, 0, sizeof(OnQueueStatusUpdated_Params));
	memcpy_s(&OnQueueStatusUpdated_Params.GbxAccount, sizeof(OnQueueStatusUpdated_Params.GbxAccount), &GbxAccount, sizeof(GbxAccount));

	this->ProcessEvent(uFnOnQueueStatusUpdated, &OnQueueStatusUpdated_Params, nullptr);
};

// Function GearboxFramework.SparkTypes.OnSparkRestartAuthenticationComplete
// [0x00120000] (FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter Info:
// const struct FPlatformUserId&  UserId                         (CPF_Parm)
// EInitializedResult             InitializedResult              (CPF_Parm)

void USparkTypes::OnSparkRestartAuthenticationComplete(const struct FPlatformUserId& UserId, EInitializedResult InitializedResult)
{
	static UFunction* uFnOnSparkRestartAuthenticationComplete = nullptr;

	if (!uFnOnSparkRestartAuthenticationComplete)
	{
		uFnOnSparkRestartAuthenticationComplete = UFunction::FindFunction("Function GearboxFramework.SparkTypes.OnSparkRestartAuthenticationComplete");
	}

	USparkTypes_execOnSparkRestartAuthenticationComplete_Params OnSparkRestartAuthenticationComplete_Params;
	memset(&OnSparkRestartAuthenticationComplete_Params, 0, sizeof(OnSparkRestartAuthenticationComplete_Params));
	memcpy_s(&OnSparkRestartAuthenticationComplete_Params.UserId, sizeof(OnSparkRestartAuthenticationComplete_Params.UserId), &UserId, sizeof(UserId));
	memcpy_s(&OnSparkRestartAuthenticationComplete_Params.InitializedResult, sizeof(OnSparkRestartAuthenticationComplete_Params.InitializedResult), &InitializedResult, sizeof(InitializedResult));

	this->ProcessEvent(uFnOnSparkRestartAuthenticationComplete, &OnSparkRestartAuthenticationComplete_Params, nullptr);
};

// Function GearboxFramework.SparkTypes.OnEntitlementsUpdated
// [0x00120000] (FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter Info:
// class UGearboxAccountData*     GbxAccount                     (CPF_Parm)

void USparkTypes::OnEntitlementsUpdated(class UGearboxAccountData* GbxAccount)
{
	static UFunction* uFnOnEntitlementsUpdated = nullptr;

	if (!uFnOnEntitlementsUpdated)
	{
		uFnOnEntitlementsUpdated = UFunction::FindFunction("Function GearboxFramework.SparkTypes.OnEntitlementsUpdated");
	}

	USparkTypes_execOnEntitlementsUpdated_Params OnEntitlementsUpdated_Params;
	memset(&OnEntitlementsUpdated_Params, 0, sizeof(OnEntitlementsUpdated_Params));
	memcpy_s(&OnEntitlementsUpdated_Params.GbxAccount, sizeof(OnEntitlementsUpdated_Params.GbxAccount), &GbxAccount, sizeof(GbxAccount));

	this->ProcessEvent(uFnOnEntitlementsUpdated, &OnEntitlementsUpdated_Params, nullptr);
};

// Function GearboxFramework.SparkTypes.OnSparkInitialized
// [0x00120000] (FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter Info:
// const struct FPlatformUserId&  UserId                         (CPF_Parm)
// EInitializedResult             InitializedResult              (CPF_Parm)
// class UGearboxData*            Data                           (CPF_Parm)

void USparkTypes::OnSparkInitialized(const struct FPlatformUserId& UserId, EInitializedResult InitializedResult, class UGearboxData* Data)
{
	static UFunction* uFnOnSparkInitialized = nullptr;

	if (!uFnOnSparkInitialized)
	{
		uFnOnSparkInitialized = UFunction::FindFunction("Function GearboxFramework.SparkTypes.OnSparkInitialized");
	}

	USparkTypes_execOnSparkInitialized_Params OnSparkInitialized_Params;
	memset(&OnSparkInitialized_Params, 0, sizeof(OnSparkInitialized_Params));
	memcpy_s(&OnSparkInitialized_Params.UserId, sizeof(OnSparkInitialized_Params.UserId), &UserId, sizeof(UserId));
	memcpy_s(&OnSparkInitialized_Params.InitializedResult, sizeof(OnSparkInitialized_Params.InitializedResult), &InitializedResult, sizeof(InitializedResult));
	memcpy_s(&OnSparkInitialized_Params.Data, sizeof(OnSparkInitialized_Params.Data), &Data, sizeof(Data));

	this->ProcessEvent(uFnOnSparkInitialized, &OnSparkInitialized_Params, nullptr);
};

// Function GearboxFramework.SparkTypes.OnSparkRequestComplete
// [0x00520000] (FUNC_Public | FUNC_Delegate | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter Info:
// struct FSparkResult            Result                         (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void USparkTypes::OnSparkRequestComplete(struct FSparkResult& Result)
{
	static UFunction* uFnOnSparkRequestComplete = nullptr;

	if (!uFnOnSparkRequestComplete)
	{
		uFnOnSparkRequestComplete = UFunction::FindFunction("Function GearboxFramework.SparkTypes.OnSparkRequestComplete");
	}

	USparkTypes_execOnSparkRequestComplete_Params OnSparkRequestComplete_Params;
	memset(&OnSparkRequestComplete_Params, 0, sizeof(OnSparkRequestComplete_Params));
	memcpy_s(&OnSparkRequestComplete_Params.Result, sizeof(OnSparkRequestComplete_Params.Result), &Result, sizeof(Result));

	this->ProcessEvent(uFnOnSparkRequestComplete, &OnSparkRequestComplete_Params, nullptr);

	memcpy_s(&Result, sizeof(Result), &OnSparkRequestComplete_Params.Result, sizeof(OnSparkRequestComplete_Params.Result));
};

// Function GearboxFramework.SpawnDefinition.IsAllSpawnTypesDebugEnabled
// [0x00022400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[34646])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool USpawnDefinition::IsAllSpawnTypesDebugEnabled()
{
	static UFunction* uFnIsAllSpawnTypesDebugEnabled = nullptr;

	if (!uFnIsAllSpawnTypesDebugEnabled)
	{
		uFnIsAllSpawnTypesDebugEnabled = UFunction::FindFunction("Function GearboxFramework.SpawnDefinition.IsAllSpawnTypesDebugEnabled");
	}

	USpawnDefinition_execIsAllSpawnTypesDebugEnabled_Params IsAllSpawnTypesDebugEnabled_Params;
	memset(&IsAllSpawnTypesDebugEnabled_Params, 0, sizeof(IsAllSpawnTypesDebugEnabled_Params));

	uFnIsAllSpawnTypesDebugEnabled->iNative = 0;
	uFnIsAllSpawnTypesDebugEnabled->FunctionFlags &= ~0x400;
	USpawnDefinition::StaticClass()->ProcessEvent(uFnIsAllSpawnTypesDebugEnabled, &IsAllSpawnTypesDebugEnabled_Params, nullptr);
	uFnIsAllSpawnTypesDebugEnabled->FunctionFlags |= 0x400;
	uFnIsAllSpawnTypesDebugEnabled->iNative = 34646;

	return IsAllSpawnTypesDebugEnabled_Params.ReturnValue;
};

// Function GearboxFramework.SpawnDefinition.ToggleAllSpawnTypesDebug
// [0x00022400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[36524])
// Parameter Info:

void USpawnDefinition::ToggleAllSpawnTypesDebug()
{
	static UFunction* uFnToggleAllSpawnTypesDebug = nullptr;

	if (!uFnToggleAllSpawnTypesDebug)
	{
		uFnToggleAllSpawnTypesDebug = UFunction::FindFunction("Function GearboxFramework.SpawnDefinition.ToggleAllSpawnTypesDebug");
	}

	USpawnDefinition_execToggleAllSpawnTypesDebug_Params ToggleAllSpawnTypesDebug_Params;
	memset(&ToggleAllSpawnTypesDebug_Params, 0, sizeof(ToggleAllSpawnTypesDebug_Params));

	uFnToggleAllSpawnTypesDebug->iNative = 0;
	uFnToggleAllSpawnTypesDebug->FunctionFlags &= ~0x400;
	USpawnDefinition::StaticClass()->ProcessEvent(uFnToggleAllSpawnTypesDebug, &ToggleAllSpawnTypesDebug_Params, nullptr);
	uFnToggleAllSpawnTypesDebug->FunctionFlags |= 0x400;
	uFnToggleAllSpawnTypesDebug->iNative = 36524;
};

// Function GearboxFramework.SpawnDefinition.GetRandomFactory
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34186])
// Parameter Info:
// class USpawnFactory*           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class ASpawner*                Spawner                        (CPF_Parm)
// int32_t                        GameStage                      (CPF_Parm)
// int32_t                        Rarity                         (CPF_Parm)

class USpawnFactory* USpawnDefinition::GetRandomFactory(class ASpawner* Spawner, int32_t GameStage, int32_t Rarity)
{
	static UFunction* uFnGetRandomFactory = nullptr;

	if (!uFnGetRandomFactory)
	{
		uFnGetRandomFactory = UFunction::FindFunction("Function GearboxFramework.SpawnDefinition.GetRandomFactory");
	}

	USpawnDefinition_execGetRandomFactory_Params GetRandomFactory_Params;
	memset(&GetRandomFactory_Params, 0, sizeof(GetRandomFactory_Params));
	memcpy_s(&GetRandomFactory_Params.Spawner, sizeof(GetRandomFactory_Params.Spawner), &Spawner, sizeof(Spawner));
	memcpy_s(&GetRandomFactory_Params.GameStage, sizeof(GetRandomFactory_Params.GameStage), &GameStage, sizeof(GameStage));
	memcpy_s(&GetRandomFactory_Params.Rarity, sizeof(GetRandomFactory_Params.Rarity), &Rarity, sizeof(Rarity));

	uFnGetRandomFactory->iNative = 0;
	uFnGetRandomFactory->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetRandomFactory, &GetRandomFactory_Params, nullptr);
	uFnGetRandomFactory->FunctionFlags |= 0x400;
	uFnGetRandomFactory->iNative = 34186;

	return GetRandomFactory_Params.ReturnValue;
};

// Function GearboxFramework.SpawnEncounter.GetDebugSpawnData
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34077])
// Parameter Info:
// int32_t                        Wave                           (CPF_Parm)
// int32_t                        NumSpawned                     (CPF_Parm | CPF_OutParm)
// int32_t                        NumTotalToSpawn                (CPF_Parm | CPF_OutParm)
// int32_t                        NumDead                        (CPF_Parm | CPF_OutParm)

void ASpawnEncounter::GetDebugSpawnData(int32_t Wave, int32_t& NumSpawned, int32_t& NumTotalToSpawn, int32_t& NumDead)
{
	static UFunction* uFnGetDebugSpawnData = nullptr;

	if (!uFnGetDebugSpawnData)
	{
		uFnGetDebugSpawnData = UFunction::FindFunction("Function GearboxFramework.SpawnEncounter.GetDebugSpawnData");
	}

	ASpawnEncounter_execGetDebugSpawnData_Params GetDebugSpawnData_Params;
	memset(&GetDebugSpawnData_Params, 0, sizeof(GetDebugSpawnData_Params));
	memcpy_s(&GetDebugSpawnData_Params.Wave, sizeof(GetDebugSpawnData_Params.Wave), &Wave, sizeof(Wave));
	memcpy_s(&GetDebugSpawnData_Params.NumSpawned, sizeof(GetDebugSpawnData_Params.NumSpawned), &NumSpawned, sizeof(NumSpawned));
	memcpy_s(&GetDebugSpawnData_Params.NumTotalToSpawn, sizeof(GetDebugSpawnData_Params.NumTotalToSpawn), &NumTotalToSpawn, sizeof(NumTotalToSpawn));
	memcpy_s(&GetDebugSpawnData_Params.NumDead, sizeof(GetDebugSpawnData_Params.NumDead), &NumDead, sizeof(NumDead));

	uFnGetDebugSpawnData->iNative = 0;
	uFnGetDebugSpawnData->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetDebugSpawnData, &GetDebugSpawnData_Params, nullptr);
	uFnGetDebugSpawnData->FunctionFlags |= 0x400;
	uFnGetDebugSpawnData->iNative = 34077;

	memcpy_s(&NumSpawned, sizeof(NumSpawned), &GetDebugSpawnData_Params.NumSpawned, sizeof(GetDebugSpawnData_Params.NumSpawned));
	memcpy_s(&NumTotalToSpawn, sizeof(NumTotalToSpawn), &GetDebugSpawnData_Params.NumTotalToSpawn, sizeof(GetDebugSpawnData_Params.NumTotalToSpawn));
	memcpy_s(&NumDead, sizeof(NumDead), &GetDebugSpawnData_Params.NumDead, sizeof(GetDebugSpawnData_Params.NumDead));
};

// Function GearboxFramework.SpawnEncounter.TriggerKismetAllSpawnedEvent
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void ASpawnEncounter::eventTriggerKismetAllSpawnedEvent()
{
	static UFunction* uFnTriggerKismetAllSpawnedEvent = nullptr;

	if (!uFnTriggerKismetAllSpawnedEvent)
	{
		uFnTriggerKismetAllSpawnedEvent = UFunction::FindFunction("Function GearboxFramework.SpawnEncounter.TriggerKismetAllSpawnedEvent");
	}

	ASpawnEncounter_eventTriggerKismetAllSpawnedEvent_Params TriggerKismetAllSpawnedEvent_Params;
	memset(&TriggerKismetAllSpawnedEvent_Params, 0, sizeof(TriggerKismetAllSpawnedEvent_Params));

	this->ProcessEvent(uFnTriggerKismetAllSpawnedEvent, &TriggerKismetAllSpawnedEvent_Params, nullptr);
};

// Function GearboxFramework.SpawnEncounter.TriggerKismetDeathEvent
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void ASpawnEncounter::eventTriggerKismetDeathEvent()
{
	static UFunction* uFnTriggerKismetDeathEvent = nullptr;

	if (!uFnTriggerKismetDeathEvent)
	{
		uFnTriggerKismetDeathEvent = UFunction::FindFunction("Function GearboxFramework.SpawnEncounter.TriggerKismetDeathEvent");
	}

	ASpawnEncounter_eventTriggerKismetDeathEvent_Params TriggerKismetDeathEvent_Params;
	memset(&TriggerKismetDeathEvent_Params, 0, sizeof(TriggerKismetDeathEvent_Params));

	this->ProcessEvent(uFnTriggerKismetDeathEvent, &TriggerKismetDeathEvent_Params, nullptr);
};

// Function GearboxFramework.SpawnEncounter.OnToggle
// [0x12020102] (FUNC_Defined | FUNC_Simulated | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class USeqAct_Toggle*          Action                         (CPF_Parm)

void ASpawnEncounter::OnToggle(class USeqAct_Toggle* Action)
{
	static UFunction* uFnOnToggle = nullptr;

	if (!uFnOnToggle)
	{
		uFnOnToggle = UFunction::FindFunction("Function GearboxFramework.SpawnEncounter.OnToggle");
	}

	ASpawnEncounter_execOnToggle_Params OnToggle_Params;
	memset(&OnToggle_Params, 0, sizeof(OnToggle_Params));
	memcpy_s(&OnToggle_Params.Action, sizeof(OnToggle_Params.Action), &Action, sizeof(Action));

	this->ProcessEvent(uFnOnToggle, &OnToggle_Params, nullptr);
};

// Function GearboxFramework.SpawnEncounter.UpdateSpawnerEnabledStates
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36621])
// Parameter Info:
// int32_t                        nWave                          (CPF_Parm)
// bool                           bUpdateIfOnlyOneWave           (CPF_Parm)

void ASpawnEncounter::UpdateSpawnerEnabledStates(int32_t nWave, bool bUpdateIfOnlyOneWave)
{
	static UFunction* uFnUpdateSpawnerEnabledStates = nullptr;

	if (!uFnUpdateSpawnerEnabledStates)
	{
		uFnUpdateSpawnerEnabledStates = UFunction::FindFunction("Function GearboxFramework.SpawnEncounter.UpdateSpawnerEnabledStates");
	}

	ASpawnEncounter_execUpdateSpawnerEnabledStates_Params UpdateSpawnerEnabledStates_Params;
	memset(&UpdateSpawnerEnabledStates_Params, 0, sizeof(UpdateSpawnerEnabledStates_Params));
	memcpy_s(&UpdateSpawnerEnabledStates_Params.nWave, sizeof(UpdateSpawnerEnabledStates_Params.nWave), &nWave, sizeof(nWave));
	UpdateSpawnerEnabledStates_Params.bUpdateIfOnlyOneWave = bUpdateIfOnlyOneWave;

	uFnUpdateSpawnerEnabledStates->iNative = 0;
	uFnUpdateSpawnerEnabledStates->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnUpdateSpawnerEnabledStates, &UpdateSpawnerEnabledStates_Params, nullptr);
	uFnUpdateSpawnerEnabledStates->FunctionFlags |= 0x400;
	uFnUpdateSpawnerEnabledStates->iNative = 36621;
};

// Function GearboxFramework.SpawnEncounter.UpdateKismetNotifications
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36618])
// Parameter Info:

void ASpawnEncounter::UpdateKismetNotifications()
{
	static UFunction* uFnUpdateKismetNotifications = nullptr;

	if (!uFnUpdateKismetNotifications)
	{
		uFnUpdateKismetNotifications = UFunction::FindFunction("Function GearboxFramework.SpawnEncounter.UpdateKismetNotifications");
	}

	ASpawnEncounter_execUpdateKismetNotifications_Params UpdateKismetNotifications_Params;
	memset(&UpdateKismetNotifications_Params, 0, sizeof(UpdateKismetNotifications_Params));

	uFnUpdateKismetNotifications->iNative = 0;
	uFnUpdateKismetNotifications->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnUpdateKismetNotifications, &UpdateKismetNotifications_Params, nullptr);
	uFnUpdateKismetNotifications->FunctionFlags |= 0x400;
	uFnUpdateKismetNotifications->iNative = 36618;
};

// Function GearboxFramework.Spawner.GetActiveActor
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34024])
// Parameter Info:
// class AActor*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        Idx                            (CPF_Parm)

class AActor* ASpawner::GetActiveActor(int32_t Idx)
{
	static UFunction* uFnGetActiveActor = nullptr;

	if (!uFnGetActiveActor)
	{
		uFnGetActiveActor = UFunction::FindFunction("Function GearboxFramework.Spawner.GetActiveActor");
	}

	ASpawner_execGetActiveActor_Params GetActiveActor_Params;
	memset(&GetActiveActor_Params, 0, sizeof(GetActiveActor_Params));
	memcpy_s(&GetActiveActor_Params.Idx, sizeof(GetActiveActor_Params.Idx), &Idx, sizeof(Idx));

	uFnGetActiveActor->iNative = 0;
	uFnGetActiveActor->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetActiveActor, &GetActiveActor_Params, nullptr);
	uFnGetActiveActor->FunctionFlags |= 0x400;
	uFnGetActiveActor->iNative = 34024;

	return GetActiveActor_Params.ReturnValue;
};

// Function GearboxFramework.Spawner.GetNumActiveActors
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34149])
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

int32_t ASpawner::GetNumActiveActors()
{
	static UFunction* uFnGetNumActiveActors = nullptr;

	if (!uFnGetNumActiveActors)
	{
		uFnGetNumActiveActors = UFunction::FindFunction("Function GearboxFramework.Spawner.GetNumActiveActors");
	}

	ASpawner_execGetNumActiveActors_Params GetNumActiveActors_Params;
	memset(&GetNumActiveActors_Params, 0, sizeof(GetNumActiveActors_Params));

	uFnGetNumActiveActors->iNative = 0;
	uFnGetNumActiveActors->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetNumActiveActors, &GetNumActiveActors_Params, nullptr);
	uFnGetNumActiveActors->FunctionFlags |= 0x400;
	uFnGetNumActiveActors->iNative = 34149;

	return GetNumActiveActors_Params.ReturnValue;
};

// Function GearboxFramework.Spawner.GetNumSpawned
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float ASpawner::GetNumSpawned()
{
	static UFunction* uFnGetNumSpawned = nullptr;

	if (!uFnGetNumSpawned)
	{
		uFnGetNumSpawned = UFunction::FindFunction("Function GearboxFramework.Spawner.GetNumSpawned");
	}

	ASpawner_execGetNumSpawned_Params GetNumSpawned_Params;
	memset(&GetNumSpawned_Params, 0, sizeof(GetNumSpawned_Params));

	this->ProcessEvent(uFnGetNumSpawned, &GetNumSpawned_Params, nullptr);

	return GetNumSpawned_Params.ReturnValue;
};

// Function GearboxFramework.Spawner.GetNumAlive
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float ASpawner::GetNumAlive()
{
	static UFunction* uFnGetNumAlive = nullptr;

	if (!uFnGetNumAlive)
	{
		uFnGetNumAlive = UFunction::FindFunction("Function GearboxFramework.Spawner.GetNumAlive");
	}

	ASpawner_execGetNumAlive_Params GetNumAlive_Params;
	memset(&GetNumAlive_Params, 0, sizeof(GetNumAlive_Params));

	this->ProcessEvent(uFnGetNumAlive, &GetNumAlive_Params, nullptr);

	return GetNumAlive_Params.ReturnValue;
};

// Function GearboxFramework.Spawner.GetNumDied
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float ASpawner::GetNumDied()
{
	static UFunction* uFnGetNumDied = nullptr;

	if (!uFnGetNumDied)
	{
		uFnGetNumDied = UFunction::FindFunction("Function GearboxFramework.Spawner.GetNumDied");
	}

	ASpawner_execGetNumDied_Params GetNumDied_Params;
	memset(&GetNumDied_Params, 0, sizeof(GetNumDied_Params));

	this->ProcessEvent(uFnGetNumDied, &GetNumDied_Params, nullptr);

	return GetNumDied_Params.ReturnValue;
};

// Function GearboxFramework.Spawner.DisplayDebug
// [0x12420100] (FUNC_Simulated | FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AHUD*                    HUD                            (CPF_Parm)
// float                          out_YL                         (CPF_Parm | CPF_OutParm)
// float                          out_YPos                       (CPF_Parm | CPF_OutParm)

void ASpawner::DisplayDebug(class AHUD* HUD, float& out_YL, float& out_YPos)
{
	static UFunction* uFnDisplayDebug = nullptr;

	if (!uFnDisplayDebug)
	{
		uFnDisplayDebug = UFunction::FindFunction("Function GearboxFramework.Spawner.DisplayDebug");
	}

	ASpawner_execDisplayDebug_Params DisplayDebug_Params;
	memset(&DisplayDebug_Params, 0, sizeof(DisplayDebug_Params));
	memcpy_s(&DisplayDebug_Params.HUD, sizeof(DisplayDebug_Params.HUD), &HUD, sizeof(HUD));
	memcpy_s(&DisplayDebug_Params.out_YL, sizeof(DisplayDebug_Params.out_YL), &out_YL, sizeof(out_YL));
	memcpy_s(&DisplayDebug_Params.out_YPos, sizeof(DisplayDebug_Params.out_YPos), &out_YPos, sizeof(out_YPos));

	this->ProcessEvent(uFnDisplayDebug, &DisplayDebug_Params, nullptr);

	memcpy_s(&out_YL, sizeof(out_YL), &DisplayDebug_Params.out_YL, sizeof(DisplayDebug_Params.out_YL));
	memcpy_s(&out_YPos, sizeof(out_YPos), &DisplayDebug_Params.out_YPos, sizeof(DisplayDebug_Params.out_YPos));
};

// Function GearboxFramework.Spawner.Destroyed
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void ASpawner::eventDestroyed()
{
	static UFunction* uFnDestroyed = nullptr;

	if (!uFnDestroyed)
	{
		uFnDestroyed = UFunction::FindFunction("Function GearboxFramework.Spawner.Destroyed");
	}

	ASpawner_eventDestroyed_Params Destroyed_Params;
	memset(&Destroyed_Params, 0, sizeof(Destroyed_Params));

	this->ProcessEvent(uFnDestroyed, &Destroyed_Params, nullptr);
};

// Function GearboxFramework.Spawner.GetRarity
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34188])
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

int32_t ASpawner::GetRarity()
{
	static UFunction* uFnGetRarity = nullptr;

	if (!uFnGetRarity)
	{
		uFnGetRarity = UFunction::FindFunction("Function GearboxFramework.Spawner.GetRarity");
	}

	ASpawner_execGetRarity_Params GetRarity_Params;
	memset(&GetRarity_Params, 0, sizeof(GetRarity_Params));

	uFnGetRarity->iNative = 0;
	uFnGetRarity->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetRarity, &GetRarity_Params, nullptr);
	uFnGetRarity->FunctionFlags |= 0x400;
	uFnGetRarity->iNative = 34188;

	return GetRarity_Params.ReturnValue;
};

// Function GearboxFramework.Spawner.GetGameStage
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[23730])
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

int32_t ASpawner::GetGameStage()
{
	static UFunction* uFnGetGameStage = nullptr;

	if (!uFnGetGameStage)
	{
		uFnGetGameStage = UFunction::FindFunction("Function GearboxFramework.Spawner.GetGameStage");
	}

	ASpawner_execGetGameStage_Params GetGameStage_Params;
	memset(&GetGameStage_Params, 0, sizeof(GetGameStage_Params));

	uFnGetGameStage->iNative = 0;
	uFnGetGameStage->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetGameStage, &GetGameStage_Params, nullptr);
	uFnGetGameStage->FunctionFlags |= 0x400;
	uFnGetGameStage->iNative = 23730;

	return GetGameStage_Params.ReturnValue;
};

// Function GearboxFramework.Spawner.GetSpawnerGameStage
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34215])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        GameStage                      (CPF_Parm | CPF_OutParm)
// int32_t                        Rarity                         (CPF_Parm | CPF_OutParm)

bool ASpawner::GetSpawnerGameStage(int32_t& GameStage, int32_t& Rarity)
{
	static UFunction* uFnGetSpawnerGameStage = nullptr;

	if (!uFnGetSpawnerGameStage)
	{
		uFnGetSpawnerGameStage = UFunction::FindFunction("Function GearboxFramework.Spawner.GetSpawnerGameStage");
	}

	ASpawner_execGetSpawnerGameStage_Params GetSpawnerGameStage_Params;
	memset(&GetSpawnerGameStage_Params, 0, sizeof(GetSpawnerGameStage_Params));
	memcpy_s(&GetSpawnerGameStage_Params.GameStage, sizeof(GetSpawnerGameStage_Params.GameStage), &GameStage, sizeof(GameStage));
	memcpy_s(&GetSpawnerGameStage_Params.Rarity, sizeof(GetSpawnerGameStage_Params.Rarity), &Rarity, sizeof(Rarity));

	uFnGetSpawnerGameStage->iNative = 0;
	uFnGetSpawnerGameStage->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetSpawnerGameStage, &GetSpawnerGameStage_Params, nullptr);
	uFnGetSpawnerGameStage->FunctionFlags |= 0x400;
	uFnGetSpawnerGameStage->iNative = 34215;

	memcpy_s(&GameStage, sizeof(GameStage), &GetSpawnerGameStage_Params.GameStage, sizeof(GetSpawnerGameStage_Params.GameStage));
	memcpy_s(&Rarity, sizeof(Rarity), &GetSpawnerGameStage_Params.Rarity, sizeof(GetSpawnerGameStage_Params.Rarity));

	return GetSpawnerGameStage_Params.ReturnValue;
};

// Function GearboxFramework.Spawner.TriggerKismetAllSpawnedEvent
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void ASpawner::eventTriggerKismetAllSpawnedEvent()
{
	static UFunction* uFnTriggerKismetAllSpawnedEvent = nullptr;

	if (!uFnTriggerKismetAllSpawnedEvent)
	{
		uFnTriggerKismetAllSpawnedEvent = UFunction::FindFunction("Function GearboxFramework.Spawner.TriggerKismetAllSpawnedEvent");
	}

	ASpawner_eventTriggerKismetAllSpawnedEvent_Params TriggerKismetAllSpawnedEvent_Params;
	memset(&TriggerKismetAllSpawnedEvent_Params, 0, sizeof(TriggerKismetAllSpawnedEvent_Params));

	this->ProcessEvent(uFnTriggerKismetAllSpawnedEvent, &TriggerKismetAllSpawnedEvent_Params, nullptr);
};

// Function GearboxFramework.Spawner.ClearSequenceActionLink
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void ASpawner::eventClearSequenceActionLink()
{
	static UFunction* uFnClearSequenceActionLink = nullptr;

	if (!uFnClearSequenceActionLink)
	{
		uFnClearSequenceActionLink = UFunction::FindFunction("Function GearboxFramework.Spawner.ClearSequenceActionLink");
	}

	ASpawner_eventClearSequenceActionLink_Params ClearSequenceActionLink_Params;
	memset(&ClearSequenceActionLink_Params, 0, sizeof(ClearSequenceActionLink_Params));

	this->ProcessEvent(uFnClearSequenceActionLink, &ClearSequenceActionLink_Params, nullptr);
};

// Function GearboxFramework.Spawner.SetSequenceActionLink
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UGearboxSeqAct_SpawnerLink* Link                           (CPF_Parm)

void ASpawner::eventSetSequenceActionLink(class UGearboxSeqAct_SpawnerLink* Link)
{
	static UFunction* uFnSetSequenceActionLink = nullptr;

	if (!uFnSetSequenceActionLink)
	{
		uFnSetSequenceActionLink = UFunction::FindFunction("Function GearboxFramework.Spawner.SetSequenceActionLink");
	}

	ASpawner_eventSetSequenceActionLink_Params SetSequenceActionLink_Params;
	memset(&SetSequenceActionLink_Params, 0, sizeof(SetSequenceActionLink_Params));
	memcpy_s(&SetSequenceActionLink_Params.Link, sizeof(SetSequenceActionLink_Params.Link), &Link, sizeof(Link));

	this->ProcessEvent(uFnSetSequenceActionLink, &SetSequenceActionLink_Params, nullptr);
};

// Function GearboxFramework.Spawner.SetEnabledStatus
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35898])
// Parameter Info:
// bool                           bEnable                        (CPF_Parm)

void ASpawner::SetEnabledStatus(bool bEnable)
{
	static UFunction* uFnSetEnabledStatus = nullptr;

	if (!uFnSetEnabledStatus)
	{
		uFnSetEnabledStatus = UFunction::FindFunction("Function GearboxFramework.Spawner.SetEnabledStatus");
	}

	ASpawner_execSetEnabledStatus_Params SetEnabledStatus_Params;
	memset(&SetEnabledStatus_Params, 0, sizeof(SetEnabledStatus_Params));
	SetEnabledStatus_Params.bEnable = bEnable;

	uFnSetEnabledStatus->iNative = 0;
	uFnSetEnabledStatus->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetEnabledStatus, &SetEnabledStatus_Params, nullptr);
	uFnSetEnabledStatus->FunctionFlags |= 0x400;
	uFnSetEnabledStatus->iNative = 35898;
};

// Function GearboxFramework.Spawner.OnToggle
// [0x12020102] (FUNC_Defined | FUNC_Simulated | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class USeqAct_Toggle*          Action                         (CPF_Parm)

void ASpawner::OnToggle(class USeqAct_Toggle* Action)
{
	static UFunction* uFnOnToggle = nullptr;

	if (!uFnOnToggle)
	{
		uFnOnToggle = UFunction::FindFunction("Function GearboxFramework.Spawner.OnToggle");
	}

	ASpawner_execOnToggle_Params OnToggle_Params;
	memset(&OnToggle_Params, 0, sizeof(OnToggle_Params));
	memcpy_s(&OnToggle_Params.Action, sizeof(OnToggle_Params.Action), &Action, sizeof(Action));

	this->ProcessEvent(uFnOnToggle, &OnToggle_Params, nullptr);
};

// Function GearboxFramework.Spawner.GetNumLeftToSpawnAndStillAlive
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34154])
// Parameter Info:
// int32_t                        NumLeftToSpawn                 (CPF_Parm | CPF_OutParm)
// int32_t                        NumStillAlive                  (CPF_Parm | CPF_OutParm)

void ASpawner::GetNumLeftToSpawnAndStillAlive(int32_t& NumLeftToSpawn, int32_t& NumStillAlive)
{
	static UFunction* uFnGetNumLeftToSpawnAndStillAlive = nullptr;

	if (!uFnGetNumLeftToSpawnAndStillAlive)
	{
		uFnGetNumLeftToSpawnAndStillAlive = UFunction::FindFunction("Function GearboxFramework.Spawner.GetNumLeftToSpawnAndStillAlive");
	}

	ASpawner_execGetNumLeftToSpawnAndStillAlive_Params GetNumLeftToSpawnAndStillAlive_Params;
	memset(&GetNumLeftToSpawnAndStillAlive_Params, 0, sizeof(GetNumLeftToSpawnAndStillAlive_Params));
	memcpy_s(&GetNumLeftToSpawnAndStillAlive_Params.NumLeftToSpawn, sizeof(GetNumLeftToSpawnAndStillAlive_Params.NumLeftToSpawn), &NumLeftToSpawn, sizeof(NumLeftToSpawn));
	memcpy_s(&GetNumLeftToSpawnAndStillAlive_Params.NumStillAlive, sizeof(GetNumLeftToSpawnAndStillAlive_Params.NumStillAlive), &NumStillAlive, sizeof(NumStillAlive));

	uFnGetNumLeftToSpawnAndStillAlive->iNative = 0;
	uFnGetNumLeftToSpawnAndStillAlive->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetNumLeftToSpawnAndStillAlive, &GetNumLeftToSpawnAndStillAlive_Params, nullptr);
	uFnGetNumLeftToSpawnAndStillAlive->FunctionFlags |= 0x400;
	uFnGetNumLeftToSpawnAndStillAlive->iNative = 34154;

	memcpy_s(&NumLeftToSpawn, sizeof(NumLeftToSpawn), &GetNumLeftToSpawnAndStillAlive_Params.NumLeftToSpawn, sizeof(GetNumLeftToSpawnAndStillAlive_Params.NumLeftToSpawn));
	memcpy_s(&NumStillAlive, sizeof(NumStillAlive), &GetNumLeftToSpawnAndStillAlive_Params.NumStillAlive, sizeof(GetNumLeftToSpawnAndStillAlive_Params.NumStillAlive));
};

// Function GearboxFramework.Spawner.GetNextSpawnTime
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34146])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float ASpawner::GetNextSpawnTime()
{
	static UFunction* uFnGetNextSpawnTime = nullptr;

	if (!uFnGetNextSpawnTime)
	{
		uFnGetNextSpawnTime = UFunction::FindFunction("Function GearboxFramework.Spawner.GetNextSpawnTime");
	}

	ASpawner_execGetNextSpawnTime_Params GetNextSpawnTime_Params;
	memset(&GetNextSpawnTime_Params, 0, sizeof(GetNextSpawnTime_Params));

	uFnGetNextSpawnTime->iNative = 0;
	uFnGetNextSpawnTime->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetNextSpawnTime, &GetNextSpawnTime_Params, nullptr);
	uFnGetNextSpawnTime->FunctionFlags |= 0x400;
	uFnGetNextSpawnTime->iNative = 34146;

	return GetNextSpawnTime_Params.ReturnValue;
};

// Function GearboxFramework.Spawner.RespawnKilledActors
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35746])
// Parameter Info:
// float                          PercentageOfKilledActorsToRespawn (CPF_Parm)

void ASpawner::RespawnKilledActors(float PercentageOfKilledActorsToRespawn)
{
	static UFunction* uFnRespawnKilledActors = nullptr;

	if (!uFnRespawnKilledActors)
	{
		uFnRespawnKilledActors = UFunction::FindFunction("Function GearboxFramework.Spawner.RespawnKilledActors");
	}

	ASpawner_execRespawnKilledActors_Params RespawnKilledActors_Params;
	memset(&RespawnKilledActors_Params, 0, sizeof(RespawnKilledActors_Params));
	memcpy_s(&RespawnKilledActors_Params.PercentageOfKilledActorsToRespawn, sizeof(RespawnKilledActors_Params.PercentageOfKilledActorsToRespawn), &PercentageOfKilledActorsToRespawn, sizeof(PercentageOfKilledActorsToRespawn));

	uFnRespawnKilledActors->iNative = 0;
	uFnRespawnKilledActors->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRespawnKilledActors, &RespawnKilledActors_Params, nullptr);
	uFnRespawnKilledActors->FunctionFlags |= 0x400;
	uFnRespawnKilledActors->iNative = 35746;
};

// Function GearboxFramework.Spawner.DoSpawning
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[33306])
// Parameter Info:
// class USpawnMaster*            SpawnMaster                    (CPF_Parm)

void ASpawner::DoSpawning(class USpawnMaster* SpawnMaster)
{
	static UFunction* uFnDoSpawning = nullptr;

	if (!uFnDoSpawning)
	{
		uFnDoSpawning = UFunction::FindFunction("Function GearboxFramework.Spawner.DoSpawning");
	}

	ASpawner_execDoSpawning_Params DoSpawning_Params;
	memset(&DoSpawning_Params, 0, sizeof(DoSpawning_Params));
	memcpy_s(&DoSpawning_Params.SpawnMaster, sizeof(DoSpawning_Params.SpawnMaster), &SpawnMaster, sizeof(SpawnMaster));

	uFnDoSpawning->iNative = 0;
	uFnDoSpawning->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnDoSpawning, &DoSpawning_Params, nullptr);
	uFnDoSpawning->FunctionFlags |= 0x400;
	uFnDoSpawning->iNative = 33306;
};

// Function GearboxFramework.AreaSpawner.DisplayDebug
// [0x12420100] (FUNC_Simulated | FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AHUD*                    HUD                            (CPF_Parm)
// float                          out_YL                         (CPF_Parm | CPF_OutParm)
// float                          out_YPos                       (CPF_Parm | CPF_OutParm)

void AAreaSpawner::DisplayDebug(class AHUD* HUD, float& out_YL, float& out_YPos)
{
	static UFunction* uFnDisplayDebug = nullptr;

	if (!uFnDisplayDebug)
	{
		uFnDisplayDebug = UFunction::FindFunction("Function GearboxFramework.AreaSpawner.DisplayDebug");
	}

	AAreaSpawner_execDisplayDebug_Params DisplayDebug_Params;
	memset(&DisplayDebug_Params, 0, sizeof(DisplayDebug_Params));
	memcpy_s(&DisplayDebug_Params.HUD, sizeof(DisplayDebug_Params.HUD), &HUD, sizeof(HUD));
	memcpy_s(&DisplayDebug_Params.out_YL, sizeof(DisplayDebug_Params.out_YL), &out_YL, sizeof(out_YL));
	memcpy_s(&DisplayDebug_Params.out_YPos, sizeof(DisplayDebug_Params.out_YPos), &out_YPos, sizeof(out_YPos));

	this->ProcessEvent(uFnDisplayDebug, &DisplayDebug_Params, nullptr);

	memcpy_s(&out_YL, sizeof(out_YL), &DisplayDebug_Params.out_YL, sizeof(DisplayDebug_Params.out_YL));
	memcpy_s(&out_YPos, sizeof(out_YPos), &DisplayDebug_Params.out_YPos, sizeof(DisplayDebug_Params.out_YPos));
};

// Function GearboxFramework.AreaSpawner.RespawnKilledActors
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35746])
// Parameter Info:
// float                          PercentageOfKilledActorsToRespawn (CPF_Parm)

void AAreaSpawner::RespawnKilledActors(float PercentageOfKilledActorsToRespawn)
{
	static UFunction* uFnRespawnKilledActors = nullptr;

	if (!uFnRespawnKilledActors)
	{
		uFnRespawnKilledActors = UFunction::FindFunction("Function GearboxFramework.AreaSpawner.RespawnKilledActors");
	}

	AAreaSpawner_execRespawnKilledActors_Params RespawnKilledActors_Params;
	memset(&RespawnKilledActors_Params, 0, sizeof(RespawnKilledActors_Params));
	memcpy_s(&RespawnKilledActors_Params.PercentageOfKilledActorsToRespawn, sizeof(RespawnKilledActors_Params.PercentageOfKilledActorsToRespawn), &PercentageOfKilledActorsToRespawn, sizeof(PercentageOfKilledActorsToRespawn));

	uFnRespawnKilledActors->iNative = 0;
	uFnRespawnKilledActors->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRespawnKilledActors, &RespawnKilledActors_Params, nullptr);
	uFnRespawnKilledActors->FunctionFlags |= 0x400;
	uFnRespawnKilledActors->iNative = 35746;
};

// Function GearboxFramework.AreaSpawner.DoSpawning
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[33306])
// Parameter Info:
// class USpawnMaster*            SpawnMaster                    (CPF_Parm)

void AAreaSpawner::DoSpawning(class USpawnMaster* SpawnMaster)
{
	static UFunction* uFnDoSpawning = nullptr;

	if (!uFnDoSpawning)
	{
		uFnDoSpawning = UFunction::FindFunction("Function GearboxFramework.AreaSpawner.DoSpawning");
	}

	AAreaSpawner_execDoSpawning_Params DoSpawning_Params;
	memset(&DoSpawning_Params, 0, sizeof(DoSpawning_Params));
	memcpy_s(&DoSpawning_Params.SpawnMaster, sizeof(DoSpawning_Params.SpawnMaster), &SpawnMaster, sizeof(SpawnMaster));

	uFnDoSpawning->iNative = 0;
	uFnDoSpawning->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnDoSpawning, &DoSpawning_Params, nullptr);
	uFnDoSpawning->FunctionFlags |= 0x400;
	uFnDoSpawning->iNative = 33306;
};

// Function GearboxFramework.DenSpawner.GetAIChild
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34032])
// Parameter Info:
// class UIAIInterface*           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        ChildIdx                       (CPF_Const | CPF_Parm)

class UIAIInterface* ADenSpawner::GetAIChild(int32_t ChildIdx)
{
	static UFunction* uFnGetAIChild = nullptr;

	if (!uFnGetAIChild)
	{
		uFnGetAIChild = UFunction::FindFunction("Function GearboxFramework.DenSpawner.GetAIChild");
	}

	ADenSpawner_execGetAIChild_Params GetAIChild_Params;
	memset(&GetAIChild_Params, 0, sizeof(GetAIChild_Params));
	memcpy_s(&GetAIChild_Params.ChildIdx, sizeof(GetAIChild_Params.ChildIdx), &ChildIdx, sizeof(ChildIdx));

	uFnGetAIChild->iNative = 0;
	uFnGetAIChild->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAIChild, &GetAIChild_Params, nullptr);
	uFnGetAIChild->FunctionFlags |= 0x400;
	uFnGetAIChild->iNative = 34032;

	return GetAIChild_Params.ReturnValue;
};

// Function GearboxFramework.DenSpawner.GetNumAIChildren
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34150])
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

int32_t ADenSpawner::GetNumAIChildren()
{
	static UFunction* uFnGetNumAIChildren = nullptr;

	if (!uFnGetNumAIChildren)
	{
		uFnGetNumAIChildren = UFunction::FindFunction("Function GearboxFramework.DenSpawner.GetNumAIChildren");
	}

	ADenSpawner_execGetNumAIChildren_Params GetNumAIChildren_Params;
	memset(&GetNumAIChildren_Params, 0, sizeof(GetNumAIChildren_Params));

	uFnGetNumAIChildren->iNative = 0;
	uFnGetNumAIChildren->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetNumAIChildren, &GetNumAIChildren_Params, nullptr);
	uFnGetNumAIChildren->FunctionFlags |= 0x400;
	uFnGetNumAIChildren->iNative = 34150;

	return GetNumAIChildren_Params.ReturnValue;
};

// Function GearboxFramework.DenSpawner.InitSequence
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34561])
// Parameter Info:
// class UActionSequence*         NewSequence                    (CPF_Parm)

void ADenSpawner::InitSequence(class UActionSequence* NewSequence)
{
	static UFunction* uFnInitSequence = nullptr;

	if (!uFnInitSequence)
	{
		uFnInitSequence = UFunction::FindFunction("Function GearboxFramework.DenSpawner.InitSequence");
	}

	ADenSpawner_execInitSequence_Params InitSequence_Params;
	memset(&InitSequence_Params, 0, sizeof(InitSequence_Params));
	memcpy_s(&InitSequence_Params.NewSequence, sizeof(InitSequence_Params.NewSequence), &NewSequence, sizeof(NewSequence));

	uFnInitSequence->iNative = 0;
	uFnInitSequence->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnInitSequence, &InitSequence_Params, nullptr);
	uFnInitSequence->FunctionFlags |= 0x400;
	uFnInitSequence->iNative = 34561;
};

// Function GearboxFramework.DenSpawner.GetAIDefinition
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34034])
// Parameter Info:
// class UAIDefinition*           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UAIDefinition* ADenSpawner::GetAIDefinition()
{
	static UFunction* uFnGetAIDefinition = nullptr;

	if (!uFnGetAIDefinition)
	{
		uFnGetAIDefinition = UFunction::FindFunction("Function GearboxFramework.DenSpawner.GetAIDefinition");
	}

	ADenSpawner_execGetAIDefinition_Params GetAIDefinition_Params;
	memset(&GetAIDefinition_Params, 0, sizeof(GetAIDefinition_Params));

	uFnGetAIDefinition->iNative = 0;
	uFnGetAIDefinition->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAIDefinition, &GetAIDefinition_Params, nullptr);
	uFnGetAIDefinition->FunctionFlags |= 0x400;
	uFnGetAIDefinition->iNative = 34034;

	return GetAIDefinition_Params.ReturnValue;
};

// Function GearboxFramework.DenSpawner.SetAIComponent
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35883])
// Parameter Info:
// class UAIComponent*            NewAIComp                      (CPF_Parm | CPF_EditInline)

void ADenSpawner::SetAIComponent(class UAIComponent* NewAIComp)
{
	static UFunction* uFnSetAIComponent = nullptr;

	if (!uFnSetAIComponent)
	{
		uFnSetAIComponent = UFunction::FindFunction("Function GearboxFramework.DenSpawner.SetAIComponent");
	}

	ADenSpawner_execSetAIComponent_Params SetAIComponent_Params;
	memset(&SetAIComponent_Params, 0, sizeof(SetAIComponent_Params));
	memcpy_s(&SetAIComponent_Params.NewAIComp, sizeof(SetAIComponent_Params.NewAIComp), &NewAIComp, sizeof(NewAIComp));

	uFnSetAIComponent->iNative = 0;
	uFnSetAIComponent->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetAIComponent, &SetAIComponent_Params, nullptr);
	uFnSetAIComponent->FunctionFlags |= 0x400;
	uFnSetAIComponent->iNative = 35883;
};

// Function GearboxFramework.DenSpawner.GetAIComponent
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34033])
// Parameter Info:
// class UAIComponent*            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline)

class UAIComponent* ADenSpawner::GetAIComponent()
{
	static UFunction* uFnGetAIComponent = nullptr;

	if (!uFnGetAIComponent)
	{
		uFnGetAIComponent = UFunction::FindFunction("Function GearboxFramework.DenSpawner.GetAIComponent");
	}

	ADenSpawner_execGetAIComponent_Params GetAIComponent_Params;
	memset(&GetAIComponent_Params, 0, sizeof(GetAIComponent_Params));

	uFnGetAIComponent->iNative = 0;
	uFnGetAIComponent->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAIComponent, &GetAIComponent_Params, nullptr);
	uFnGetAIComponent->FunctionFlags |= 0x400;
	uFnGetAIComponent->iNative = 34033;

	return GetAIComponent_Params.ReturnValue;
};

// Function GearboxFramework.DenSpawner.GetAIParent
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34038])
// Parameter Info:
// class UIAIInterface*           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UIAIInterface* ADenSpawner::GetAIParent()
{
	static UFunction* uFnGetAIParent = nullptr;

	if (!uFnGetAIParent)
	{
		uFnGetAIParent = UFunction::FindFunction("Function GearboxFramework.DenSpawner.GetAIParent");
	}

	ADenSpawner_execGetAIParent_Params GetAIParent_Params;
	memset(&GetAIParent_Params, 0, sizeof(GetAIParent_Params));

	uFnGetAIParent->iNative = 0;
	uFnGetAIParent->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAIParent, &GetAIParent_Params, nullptr);
	uFnGetAIParent->FunctionFlags |= 0x400;
	uFnGetAIParent->iNative = 34038;

	return GetAIParent_Params.ReturnValue;
};

// Function GearboxFramework.DenSpawner.GetAILocation
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34035])
// Parameter Info:
// struct FVector                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FVector ADenSpawner::GetAILocation()
{
	static UFunction* uFnGetAILocation = nullptr;

	if (!uFnGetAILocation)
	{
		uFnGetAILocation = UFunction::FindFunction("Function GearboxFramework.DenSpawner.GetAILocation");
	}

	ADenSpawner_execGetAILocation_Params GetAILocation_Params;
	memset(&GetAILocation_Params, 0, sizeof(GetAILocation_Params));

	uFnGetAILocation->iNative = 0;
	uFnGetAILocation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAILocation, &GetAILocation_Params, nullptr);
	uFnGetAILocation->FunctionFlags |= 0x400;
	uFnGetAILocation->iNative = 34035;

	return GetAILocation_Params.ReturnValue;
};

// Function GearboxFramework.DenSpawner.GetAIActor
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34031])
// Parameter Info:
// class AActor*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class AActor* ADenSpawner::GetAIActor()
{
	static UFunction* uFnGetAIActor = nullptr;

	if (!uFnGetAIActor)
	{
		uFnGetAIActor = UFunction::FindFunction("Function GearboxFramework.DenSpawner.GetAIActor");
	}

	ADenSpawner_execGetAIActor_Params GetAIActor_Params;
	memset(&GetAIActor_Params, 0, sizeof(GetAIActor_Params));

	uFnGetAIActor->iNative = 0;
	uFnGetAIActor->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAIActor, &GetAIActor_Params, nullptr);
	uFnGetAIActor->FunctionFlags |= 0x400;
	uFnGetAIActor->iNative = 34031;

	return GetAIActor_Params.ReturnValue;
};

// Function GearboxFramework.DenSpawner.CanTickAI
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32687])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool ADenSpawner::CanTickAI()
{
	static UFunction* uFnCanTickAI = nullptr;

	if (!uFnCanTickAI)
	{
		uFnCanTickAI = UFunction::FindFunction("Function GearboxFramework.DenSpawner.CanTickAI");
	}

	ADenSpawner_execCanTickAI_Params CanTickAI_Params;
	memset(&CanTickAI_Params, 0, sizeof(CanTickAI_Params));

	uFnCanTickAI->iNative = 0;
	uFnCanTickAI->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCanTickAI, &CanTickAI_Params, nullptr);
	uFnCanTickAI->FunctionFlags |= 0x400;
	uFnCanTickAI->iNative = 32687;

	return CanTickAI_Params.ReturnValue;
};

// Function GearboxFramework.DenSpawner.SetAllegiance
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[28695])
// Parameter Info:
// class UPawnAllegiance*         NewAllegiance                  (CPF_Parm)

void ADenSpawner::SetAllegiance(class UPawnAllegiance* NewAllegiance)
{
	static UFunction* uFnSetAllegiance = nullptr;

	if (!uFnSetAllegiance)
	{
		uFnSetAllegiance = UFunction::FindFunction("Function GearboxFramework.DenSpawner.SetAllegiance");
	}

	ADenSpawner_execSetAllegiance_Params SetAllegiance_Params;
	memset(&SetAllegiance_Params, 0, sizeof(SetAllegiance_Params));
	memcpy_s(&SetAllegiance_Params.NewAllegiance, sizeof(SetAllegiance_Params.NewAllegiance), &NewAllegiance, sizeof(NewAllegiance));

	uFnSetAllegiance->iNative = 0;
	uFnSetAllegiance->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetAllegiance, &SetAllegiance_Params, nullptr);
	uFnSetAllegiance->FunctionFlags |= 0x400;
	uFnSetAllegiance->iNative = 28695;
};

// Function GearboxFramework.DenSpawner.GetAllegiance
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34040])
// Parameter Info:
// class UPawnAllegiance*         ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UPawnAllegiance* ADenSpawner::GetAllegiance()
{
	static UFunction* uFnGetAllegiance = nullptr;

	if (!uFnGetAllegiance)
	{
		uFnGetAllegiance = UFunction::FindFunction("Function GearboxFramework.DenSpawner.GetAllegiance");
	}

	ADenSpawner_execGetAllegiance_Params GetAllegiance_Params;
	memset(&GetAllegiance_Params, 0, sizeof(GetAllegiance_Params));

	uFnGetAllegiance->iNative = 0;
	uFnGetAllegiance->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAllegiance, &GetAllegiance_Params, nullptr);
	uFnGetAllegiance->FunctionFlags |= 0x400;
	uFnGetAllegiance->iNative = 34040;

	return GetAllegiance_Params.ReturnValue;
};

// Function GearboxFramework.DenSpawner.OnEndDenWarmup
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35273])
// Parameter Info:
// class UGearboxSeqAct_EndDenWarmup* Action                         (CPF_Parm)

void ADenSpawner::OnEndDenWarmup(class UGearboxSeqAct_EndDenWarmup* Action)
{
	static UFunction* uFnOnEndDenWarmup = nullptr;

	if (!uFnOnEndDenWarmup)
	{
		uFnOnEndDenWarmup = UFunction::FindFunction("Function GearboxFramework.DenSpawner.OnEndDenWarmup");
	}

	ADenSpawner_execOnEndDenWarmup_Params OnEndDenWarmup_Params;
	memset(&OnEndDenWarmup_Params, 0, sizeof(OnEndDenWarmup_Params));
	memcpy_s(&OnEndDenWarmup_Params.Action, sizeof(OnEndDenWarmup_Params.Action), &Action, sizeof(Action));

	uFnOnEndDenWarmup->iNative = 0;
	uFnOnEndDenWarmup->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnEndDenWarmup, &OnEndDenWarmup_Params, nullptr);
	uFnOnEndDenWarmup->FunctionFlags |= 0x400;
	uFnOnEndDenWarmup->iNative = 35273;
};

// Function GearboxFramework.DenSpawner.NotifyWarmupFinished
// [0x00020402] (FUNC_Defined | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[2444])
// Parameter Info:

void ADenSpawner::NotifyWarmupFinished()
{
	static UFunction* uFnNotifyWarmupFinished = nullptr;

	if (!uFnNotifyWarmupFinished)
	{
		uFnNotifyWarmupFinished = UFunction::FindFunction("Function GearboxFramework.DenSpawner.NotifyWarmupFinished");
	}

	ADenSpawner_execNotifyWarmupFinished_Params NotifyWarmupFinished_Params;
	memset(&NotifyWarmupFinished_Params, 0, sizeof(NotifyWarmupFinished_Params));

	uFnNotifyWarmupFinished->iNative = 0;
	uFnNotifyWarmupFinished->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnNotifyWarmupFinished, &NotifyWarmupFinished_Params, nullptr);
	uFnNotifyWarmupFinished->FunctionFlags |= 0x400;
	uFnNotifyWarmupFinished->iNative = 2444;
};

// Function GearboxFramework.DenSpawner.GetDenMembers
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34080])
// Parameter Info:
// class TArray<class AActor*>    Members                        (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void ADenSpawner::GetDenMembers(class TArray<class AActor*>& Members)
{
	static UFunction* uFnGetDenMembers = nullptr;

	if (!uFnGetDenMembers)
	{
		uFnGetDenMembers = UFunction::FindFunction("Function GearboxFramework.DenSpawner.GetDenMembers");
	}

	ADenSpawner_execGetDenMembers_Params GetDenMembers_Params;
	memset(&GetDenMembers_Params, 0, sizeof(GetDenMembers_Params));
	memcpy_s(&GetDenMembers_Params.Members, sizeof(GetDenMembers_Params.Members), &Members, sizeof(Members));

	uFnGetDenMembers->iNative = 0;
	uFnGetDenMembers->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetDenMembers, &GetDenMembers_Params, nullptr);
	uFnGetDenMembers->FunctionFlags |= 0x400;
	uFnGetDenMembers->iNative = 34080;

	memcpy_s(&Members, sizeof(Members), &GetDenMembers_Params.Members, sizeof(GetDenMembers_Params.Members));
};

// Function GearboxFramework.DenSpawner.TriggerKismetDeathEvent
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void ADenSpawner::eventTriggerKismetDeathEvent()
{
	static UFunction* uFnTriggerKismetDeathEvent = nullptr;

	if (!uFnTriggerKismetDeathEvent)
	{
		uFnTriggerKismetDeathEvent = UFunction::FindFunction("Function GearboxFramework.DenSpawner.TriggerKismetDeathEvent");
	}

	ADenSpawner_eventTriggerKismetDeathEvent_Params TriggerKismetDeathEvent_Params;
	memset(&TriggerKismetDeathEvent_Params, 0, sizeof(TriggerKismetDeathEvent_Params));

	this->ProcessEvent(uFnTriggerKismetDeathEvent, &TriggerKismetDeathEvent_Params, nullptr);
};

// Function GearboxFramework.DenSpawner.SpawnedCanAttackVehicles
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float ADenSpawner::SpawnedCanAttackVehicles()
{
	static UFunction* uFnSpawnedCanAttackVehicles = nullptr;

	if (!uFnSpawnedCanAttackVehicles)
	{
		uFnSpawnedCanAttackVehicles = UFunction::FindFunction("Function GearboxFramework.DenSpawner.SpawnedCanAttackVehicles");
	}

	ADenSpawner_execSpawnedCanAttackVehicles_Params SpawnedCanAttackVehicles_Params;
	memset(&SpawnedCanAttackVehicles_Params, 0, sizeof(SpawnedCanAttackVehicles_Params));

	this->ProcessEvent(uFnSpawnedCanAttackVehicles, &SpawnedCanAttackVehicles_Params, nullptr);

	return SpawnedCanAttackVehicles_Params.ReturnValue;
};

// Function GearboxFramework.DenSpawner.GetNumSpawned
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float ADenSpawner::GetNumSpawned()
{
	static UFunction* uFnGetNumSpawned = nullptr;

	if (!uFnGetNumSpawned)
	{
		uFnGetNumSpawned = UFunction::FindFunction("Function GearboxFramework.DenSpawner.GetNumSpawned");
	}

	ADenSpawner_execGetNumSpawned_Params GetNumSpawned_Params;
	memset(&GetNumSpawned_Params, 0, sizeof(GetNumSpawned_Params));

	this->ProcessEvent(uFnGetNumSpawned, &GetNumSpawned_Params, nullptr);

	return GetNumSpawned_Params.ReturnValue;
};

// Function GearboxFramework.DenSpawner.GetNumAlive
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float ADenSpawner::GetNumAlive()
{
	static UFunction* uFnGetNumAlive = nullptr;

	if (!uFnGetNumAlive)
	{
		uFnGetNumAlive = UFunction::FindFunction("Function GearboxFramework.DenSpawner.GetNumAlive");
	}

	ADenSpawner_execGetNumAlive_Params GetNumAlive_Params;
	memset(&GetNumAlive_Params, 0, sizeof(GetNumAlive_Params));

	this->ProcessEvent(uFnGetNumAlive, &GetNumAlive_Params, nullptr);

	return GetNumAlive_Params.ReturnValue;
};

// Function GearboxFramework.DenSpawner.GetNumDied
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float ADenSpawner::GetNumDied()
{
	static UFunction* uFnGetNumDied = nullptr;

	if (!uFnGetNumDied)
	{
		uFnGetNumDied = UFunction::FindFunction("Function GearboxFramework.DenSpawner.GetNumDied");
	}

	ADenSpawner_execGetNumDied_Params GetNumDied_Params;
	memset(&GetNumDied_Params, 0, sizeof(GetNumDied_Params));

	this->ProcessEvent(uFnGetNumDied, &GetNumDied_Params, nullptr);

	return GetNumDied_Params.ReturnValue;
};

// Function GearboxFramework.DenSpawner.PostRenderFor
// [0x12020900] (FUNC_Simulated | FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class APlayerController*       PC                             (CPF_Parm)
// class UCanvas*                 Canvas                         (CPF_Parm)
// const struct FVector&          CameraPosition                 (CPF_Parm)
// const struct FVector&          CameraDir                      (CPF_Parm)

void ADenSpawner::eventPostRenderFor(class APlayerController* PC, class UCanvas* Canvas, const struct FVector& CameraPosition, const struct FVector& CameraDir)
{
	static UFunction* uFnPostRenderFor = nullptr;

	if (!uFnPostRenderFor)
	{
		uFnPostRenderFor = UFunction::FindFunction("Function GearboxFramework.DenSpawner.PostRenderFor");
	}

	ADenSpawner_eventPostRenderFor_Params PostRenderFor_Params;
	memset(&PostRenderFor_Params, 0, sizeof(PostRenderFor_Params));
	memcpy_s(&PostRenderFor_Params.PC, sizeof(PostRenderFor_Params.PC), &PC, sizeof(PC));
	memcpy_s(&PostRenderFor_Params.Canvas, sizeof(PostRenderFor_Params.Canvas), &Canvas, sizeof(Canvas));
	memcpy_s(&PostRenderFor_Params.CameraPosition, sizeof(PostRenderFor_Params.CameraPosition), &CameraPosition, sizeof(CameraPosition));
	memcpy_s(&PostRenderFor_Params.CameraDir, sizeof(PostRenderFor_Params.CameraDir), &CameraDir, sizeof(CameraDir));

	this->ProcessEvent(uFnPostRenderFor, &PostRenderFor_Params, nullptr);
};

// Function GearboxFramework.DenSpawner.DisplayDebug
// [0x12420100] (FUNC_Simulated | FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AHUD*                    HUD                            (CPF_Parm)
// float                          out_YL                         (CPF_Parm | CPF_OutParm)
// float                          out_YPos                       (CPF_Parm | CPF_OutParm)

void ADenSpawner::DisplayDebug(class AHUD* HUD, float& out_YL, float& out_YPos)
{
	static UFunction* uFnDisplayDebug = nullptr;

	if (!uFnDisplayDebug)
	{
		uFnDisplayDebug = UFunction::FindFunction("Function GearboxFramework.DenSpawner.DisplayDebug");
	}

	ADenSpawner_execDisplayDebug_Params DisplayDebug_Params;
	memset(&DisplayDebug_Params, 0, sizeof(DisplayDebug_Params));
	memcpy_s(&DisplayDebug_Params.HUD, sizeof(DisplayDebug_Params.HUD), &HUD, sizeof(HUD));
	memcpy_s(&DisplayDebug_Params.out_YL, sizeof(DisplayDebug_Params.out_YL), &out_YL, sizeof(out_YL));
	memcpy_s(&DisplayDebug_Params.out_YPos, sizeof(DisplayDebug_Params.out_YPos), &out_YPos, sizeof(out_YPos));

	this->ProcessEvent(uFnDisplayDebug, &DisplayDebug_Params, nullptr);

	memcpy_s(&out_YL, sizeof(out_YL), &DisplayDebug_Params.out_YL, sizeof(DisplayDebug_Params.out_YL));
	memcpy_s(&out_YPos, sizeof(out_YPos), &DisplayDebug_Params.out_YPos, sizeof(DisplayDebug_Params.out_YPos));
};

// Function GearboxFramework.DenSpawner.EnableDebugging
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[33540])
// Parameter Info:
// bool                           bEnabled                       (CPF_Parm)

void ADenSpawner::EnableDebugging(bool bEnabled)
{
	static UFunction* uFnEnableDebugging = nullptr;

	if (!uFnEnableDebugging)
	{
		uFnEnableDebugging = UFunction::FindFunction("Function GearboxFramework.DenSpawner.EnableDebugging");
	}

	ADenSpawner_execEnableDebugging_Params EnableDebugging_Params;
	memset(&EnableDebugging_Params, 0, sizeof(EnableDebugging_Params));
	EnableDebugging_Params.bEnabled = bEnabled;

	uFnEnableDebugging->iNative = 0;
	uFnEnableDebugging->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnEnableDebugging, &EnableDebugging_Params, nullptr);
	uFnEnableDebugging->FunctionFlags |= 0x400;
	uFnEnableDebugging->iNative = 33540;
};

// Function GearboxFramework.DenSpawner.RespawnKilledActors
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35746])
// Parameter Info:
// float                          PercentageOfKilledActorsToRespawn (CPF_Parm)

void ADenSpawner::RespawnKilledActors(float PercentageOfKilledActorsToRespawn)
{
	static UFunction* uFnRespawnKilledActors = nullptr;

	if (!uFnRespawnKilledActors)
	{
		uFnRespawnKilledActors = UFunction::FindFunction("Function GearboxFramework.DenSpawner.RespawnKilledActors");
	}

	ADenSpawner_execRespawnKilledActors_Params RespawnKilledActors_Params;
	memset(&RespawnKilledActors_Params, 0, sizeof(RespawnKilledActors_Params));
	memcpy_s(&RespawnKilledActors_Params.PercentageOfKilledActorsToRespawn, sizeof(RespawnKilledActors_Params.PercentageOfKilledActorsToRespawn), &PercentageOfKilledActorsToRespawn, sizeof(PercentageOfKilledActorsToRespawn));

	uFnRespawnKilledActors->iNative = 0;
	uFnRespawnKilledActors->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRespawnKilledActors, &RespawnKilledActors_Params, nullptr);
	uFnRespawnKilledActors->FunctionFlags |= 0x400;
	uFnRespawnKilledActors->iNative = 35746;
};

// Function GearboxFramework.DenSpawner.DoSpawning
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[33306])
// Parameter Info:
// class USpawnMaster*            SpawnMaster                    (CPF_Parm)

void ADenSpawner::DoSpawning(class USpawnMaster* SpawnMaster)
{
	static UFunction* uFnDoSpawning = nullptr;

	if (!uFnDoSpawning)
	{
		uFnDoSpawning = UFunction::FindFunction("Function GearboxFramework.DenSpawner.DoSpawning");
	}

	ADenSpawner_execDoSpawning_Params DoSpawning_Params;
	memset(&DoSpawning_Params, 0, sizeof(DoSpawning_Params));
	memcpy_s(&DoSpawning_Params.SpawnMaster, sizeof(DoSpawning_Params.SpawnMaster), &SpawnMaster, sizeof(SpawnMaster));

	uFnDoSpawning->iNative = 0;
	uFnDoSpawning->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnDoSpawning, &DoSpawning_Params, nullptr);
	uFnDoSpawning->FunctionFlags |= 0x400;
	uFnDoSpawning->iNative = 33306;
};

// Function GearboxFramework.DenSpawner.PostBeginPlay
// [0x12020100] (FUNC_Simulated | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void ADenSpawner::PostBeginPlay()
{
	static UFunction* uFnPostBeginPlay = nullptr;

	if (!uFnPostBeginPlay)
	{
		uFnPostBeginPlay = UFunction::FindFunction("Function GearboxFramework.DenSpawner.PostBeginPlay");
	}

	ADenSpawner_execPostBeginPlay_Params PostBeginPlay_Params;
	memset(&PostBeginPlay_Params, 0, sizeof(PostBeginPlay_Params));

	this->ProcessEvent(uFnPostBeginPlay, &PostBeginPlay_Params, nullptr);
};

// Function GearboxFramework.DenSpawner_Dynamic.Destroyed
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void ADenSpawner_Dynamic::eventDestroyed()
{
	static UFunction* uFnDestroyed = nullptr;

	if (!uFnDestroyed)
	{
		uFnDestroyed = UFunction::FindFunction("Function GearboxFramework.DenSpawner_Dynamic.Destroyed");
	}

	ADenSpawner_Dynamic_eventDestroyed_Params Destroyed_Params;
	memset(&Destroyed_Params, 0, sizeof(Destroyed_Params));

	this->ProcessEvent(uFnDestroyed, &Destroyed_Params, nullptr);
};

// Function GearboxFramework.DenSpawner_Dynamic.GetSpawnerGameStage
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34215])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        GameStage                      (CPF_Parm | CPF_OutParm)
// int32_t                        AwesomeLevel                   (CPF_Parm | CPF_OutParm)

bool ADenSpawner_Dynamic::GetSpawnerGameStage(int32_t& GameStage, int32_t& AwesomeLevel)
{
	static UFunction* uFnGetSpawnerGameStage = nullptr;

	if (!uFnGetSpawnerGameStage)
	{
		uFnGetSpawnerGameStage = UFunction::FindFunction("Function GearboxFramework.DenSpawner_Dynamic.GetSpawnerGameStage");
	}

	ADenSpawner_Dynamic_execGetSpawnerGameStage_Params GetSpawnerGameStage_Params;
	memset(&GetSpawnerGameStage_Params, 0, sizeof(GetSpawnerGameStage_Params));
	memcpy_s(&GetSpawnerGameStage_Params.GameStage, sizeof(GetSpawnerGameStage_Params.GameStage), &GameStage, sizeof(GameStage));
	memcpy_s(&GetSpawnerGameStage_Params.AwesomeLevel, sizeof(GetSpawnerGameStage_Params.AwesomeLevel), &AwesomeLevel, sizeof(AwesomeLevel));

	uFnGetSpawnerGameStage->iNative = 0;
	uFnGetSpawnerGameStage->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetSpawnerGameStage, &GetSpawnerGameStage_Params, nullptr);
	uFnGetSpawnerGameStage->FunctionFlags |= 0x400;
	uFnGetSpawnerGameStage->iNative = 34215;

	memcpy_s(&GameStage, sizeof(GameStage), &GetSpawnerGameStage_Params.GameStage, sizeof(GetSpawnerGameStage_Params.GameStage));
	memcpy_s(&AwesomeLevel, sizeof(AwesomeLevel), &GetSpawnerGameStage_Params.AwesomeLevel, sizeof(GetSpawnerGameStage_Params.AwesomeLevel));

	return GetSpawnerGameStage_Params.ReturnValue;
};

// Function GearboxFramework.PointSpawner.GetInitialDestination
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AActor*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class AActor* APointSpawner::GetInitialDestination()
{
	static UFunction* uFnGetInitialDestination = nullptr;

	if (!uFnGetInitialDestination)
	{
		uFnGetInitialDestination = UFunction::FindFunction("Function GearboxFramework.PointSpawner.GetInitialDestination");
	}

	APointSpawner_execGetInitialDestination_Params GetInitialDestination_Params;
	memset(&GetInitialDestination_Params, 0, sizeof(GetInitialDestination_Params));

	this->ProcessEvent(uFnGetInitialDestination, &GetInitialDestination_Params, nullptr);

	return GetInitialDestination_Params.ReturnValue;
};

// Function GearboxFramework.PointSpawner.GetInitialAction
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// EInitialActionType             ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

EInitialActionType APointSpawner::GetInitialAction()
{
	static UFunction* uFnGetInitialAction = nullptr;

	if (!uFnGetInitialAction)
	{
		uFnGetInitialAction = UFunction::FindFunction("Function GearboxFramework.PointSpawner.GetInitialAction");
	}

	APointSpawner_execGetInitialAction_Params GetInitialAction_Params;
	memset(&GetInitialAction_Params, 0, sizeof(GetInitialAction_Params));

	this->ProcessEvent(uFnGetInitialAction, &GetInitialAction_Params, nullptr);

	return GetInitialAction_Params.ReturnValue;
};

// Function GearboxFramework.PointSpawner.RespawnKilledActors
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35746])
// Parameter Info:
// float                          PercentageOfKilledActorsToRespawn (CPF_Parm)

void APointSpawner::RespawnKilledActors(float PercentageOfKilledActorsToRespawn)
{
	static UFunction* uFnRespawnKilledActors = nullptr;

	if (!uFnRespawnKilledActors)
	{
		uFnRespawnKilledActors = UFunction::FindFunction("Function GearboxFramework.PointSpawner.RespawnKilledActors");
	}

	APointSpawner_execRespawnKilledActors_Params RespawnKilledActors_Params;
	memset(&RespawnKilledActors_Params, 0, sizeof(RespawnKilledActors_Params));
	memcpy_s(&RespawnKilledActors_Params.PercentageOfKilledActorsToRespawn, sizeof(RespawnKilledActors_Params.PercentageOfKilledActorsToRespawn), &PercentageOfKilledActorsToRespawn, sizeof(PercentageOfKilledActorsToRespawn));

	uFnRespawnKilledActors->iNative = 0;
	uFnRespawnKilledActors->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRespawnKilledActors, &RespawnKilledActors_Params, nullptr);
	uFnRespawnKilledActors->FunctionFlags |= 0x400;
	uFnRespawnKilledActors->iNative = 35746;
};

// Function GearboxFramework.PointSpawner.DoSpawning
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[33306])
// Parameter Info:
// class USpawnMaster*            SpawnMaster                    (CPF_Parm)

void APointSpawner::DoSpawning(class USpawnMaster* SpawnMaster)
{
	static UFunction* uFnDoSpawning = nullptr;

	if (!uFnDoSpawning)
	{
		uFnDoSpawning = UFunction::FindFunction("Function GearboxFramework.PointSpawner.DoSpawning");
	}

	APointSpawner_execDoSpawning_Params DoSpawning_Params;
	memset(&DoSpawning_Params, 0, sizeof(DoSpawning_Params));
	memcpy_s(&DoSpawning_Params.SpawnMaster, sizeof(DoSpawning_Params.SpawnMaster), &SpawnMaster, sizeof(SpawnMaster));

	uFnDoSpawning->iNative = 0;
	uFnDoSpawning->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnDoSpawning, &DoSpawning_Params, nullptr);
	uFnDoSpawning->FunctionFlags |= 0x400;
	uFnDoSpawning->iNative = 33306;
};

// Function GearboxFramework.SpawnerAspect.DenStatRemoved
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class APawn*                   DenPawn                        (CPF_Parm)

void USpawnerAspect::eventDenStatRemoved(class APawn* DenPawn)
{
	static UFunction* uFnDenStatRemoved = nullptr;

	if (!uFnDenStatRemoved)
	{
		uFnDenStatRemoved = UFunction::FindFunction("Function GearboxFramework.SpawnerAspect.DenStatRemoved");
	}

	USpawnerAspect_eventDenStatRemoved_Params DenStatRemoved_Params;
	memset(&DenStatRemoved_Params, 0, sizeof(DenStatRemoved_Params));
	memcpy_s(&DenStatRemoved_Params.DenPawn, sizeof(DenStatRemoved_Params.DenPawn), &DenPawn, sizeof(DenPawn));

	this->ProcessEvent(uFnDenStatRemoved, &DenStatRemoved_Params, nullptr);
};

// Function GearboxFramework.SpawnerAspect.DenStatAdded
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class APawn*                   DenPawn                        (CPF_Parm)

void USpawnerAspect::eventDenStatAdded(class APawn* DenPawn)
{
	static UFunction* uFnDenStatAdded = nullptr;

	if (!uFnDenStatAdded)
	{
		uFnDenStatAdded = UFunction::FindFunction("Function GearboxFramework.SpawnerAspect.DenStatAdded");
	}

	USpawnerAspect_eventDenStatAdded_Params DenStatAdded_Params;
	memset(&DenStatAdded_Params, 0, sizeof(DenStatAdded_Params));
	memcpy_s(&DenStatAdded_Params.DenPawn, sizeof(DenStatAdded_Params.DenPawn), &DenPawn, sizeof(DenPawn));

	this->ProcessEvent(uFnDenStatAdded, &DenStatAdded_Params, nullptr);
};

// Function GearboxFramework.SpawnerAspect.EnabledStatusChanged
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           bIsEnabled                     (CPF_Parm)
// bool                           bHasActiveActors               (CPF_Parm)

void USpawnerAspect::eventEnabledStatusChanged(bool bIsEnabled, bool bHasActiveActors)
{
	static UFunction* uFnEnabledStatusChanged = nullptr;

	if (!uFnEnabledStatusChanged)
	{
		uFnEnabledStatusChanged = UFunction::FindFunction("Function GearboxFramework.SpawnerAspect.EnabledStatusChanged");
	}

	USpawnerAspect_eventEnabledStatusChanged_Params EnabledStatusChanged_Params;
	memset(&EnabledStatusChanged_Params, 0, sizeof(EnabledStatusChanged_Params));
	EnabledStatusChanged_Params.bIsEnabled = bIsEnabled;
	EnabledStatusChanged_Params.bHasActiveActors = bHasActiveActors;

	this->ProcessEvent(uFnEnabledStatusChanged, &EnabledStatusChanged_Params, nullptr);
};

// Function GearboxFramework.SpawnerAspect.AllActorsRemoved
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           bFinishedSpawning              (CPF_Parm)

void USpawnerAspect::eventAllActorsRemoved(bool bFinishedSpawning)
{
	static UFunction* uFnAllActorsRemoved = nullptr;

	if (!uFnAllActorsRemoved)
	{
		uFnAllActorsRemoved = UFunction::FindFunction("Function GearboxFramework.SpawnerAspect.AllActorsRemoved");
	}

	USpawnerAspect_eventAllActorsRemoved_Params AllActorsRemoved_Params;
	memset(&AllActorsRemoved_Params, 0, sizeof(AllActorsRemoved_Params));
	AllActorsRemoved_Params.bFinishedSpawning = bFinishedSpawning;

	this->ProcessEvent(uFnAllActorsRemoved, &AllActorsRemoved_Params, nullptr);
};

// Function GearboxFramework.SpawnerAspect.OnActorDeath
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AActor*                  DeadActor                      (CPF_Parm)

void USpawnerAspect::eventOnActorDeath(class AActor* DeadActor)
{
	static UFunction* uFnOnActorDeath = nullptr;

	if (!uFnOnActorDeath)
	{
		uFnOnActorDeath = UFunction::FindFunction("Function GearboxFramework.SpawnerAspect.OnActorDeath");
	}

	USpawnerAspect_eventOnActorDeath_Params OnActorDeath_Params;
	memset(&OnActorDeath_Params, 0, sizeof(OnActorDeath_Params));
	memcpy_s(&OnActorDeath_Params.DeadActor, sizeof(OnActorDeath_Params.DeadActor), &DeadActor, sizeof(DeadActor));

	this->ProcessEvent(uFnOnActorDeath, &OnActorDeath_Params, nullptr);
};

// Function GearboxFramework.SpawnerAspect.OnSpawnActor
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AActor*                  SpawnedActor                   (CPF_Parm)

void USpawnerAspect::eventOnSpawnActor(class AActor* SpawnedActor)
{
	static UFunction* uFnOnSpawnActor = nullptr;

	if (!uFnOnSpawnActor)
	{
		uFnOnSpawnActor = UFunction::FindFunction("Function GearboxFramework.SpawnerAspect.OnSpawnActor");
	}

	USpawnerAspect_eventOnSpawnActor_Params OnSpawnActor_Params;
	memset(&OnSpawnActor_Params, 0, sizeof(OnSpawnActor_Params));
	memcpy_s(&OnSpawnActor_Params.SpawnedActor, sizeof(OnSpawnActor_Params.SpawnedActor), &SpawnedActor, sizeof(SpawnedActor));

	this->ProcessEvent(uFnOnSpawnActor, &OnSpawnActor_Params, nullptr);
};

// Function GearboxFramework.SpawnerAspect.Initialize
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void USpawnerAspect::eventInitialize()
{
	static UFunction* uFnInitialize = nullptr;

	if (!uFnInitialize)
	{
		uFnInitialize = UFunction::FindFunction("Function GearboxFramework.SpawnerAspect.Initialize");
	}

	USpawnerAspect_eventInitialize_Params Initialize_Params;
	memset(&Initialize_Params, 0, sizeof(Initialize_Params));

	this->ProcessEvent(uFnInitialize, &Initialize_Params, nullptr);
};

// Function GearboxFramework.SpawnFactory.GetDescriptionOfFactoryOutput
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString USpawnFactory::eventGetDescriptionOfFactoryOutput()
{
	static UFunction* uFnGetDescriptionOfFactoryOutput = nullptr;

	if (!uFnGetDescriptionOfFactoryOutput)
	{
		uFnGetDescriptionOfFactoryOutput = UFunction::FindFunction("Function GearboxFramework.SpawnFactory.GetDescriptionOfFactoryOutput");
	}

	USpawnFactory_eventGetDescriptionOfFactoryOutput_Params GetDescriptionOfFactoryOutput_Params;
	memset(&GetDescriptionOfFactoryOutput_Params, 0, sizeof(GetDescriptionOfFactoryOutput_Params));

	this->ProcessEvent(uFnGetDescriptionOfFactoryOutput, &GetDescriptionOfFactoryOutput_Params, nullptr);

	return GetDescriptionOfFactoryOutput_Params.ReturnValue;
};

// Function GearboxFramework.SpawnFactory.ShouldSaveSpawnedActor
// [0x12022800] (FUNC_Event | FUNC_Static | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpawnMaster*            Master                         (CPF_Parm)
// class AActor*                  ActorToSave                    (CPF_Parm)

bool USpawnFactory::eventShouldSaveSpawnedActor(class USpawnMaster* Master, class AActor* ActorToSave)
{
	static UFunction* uFnShouldSaveSpawnedActor = nullptr;

	if (!uFnShouldSaveSpawnedActor)
	{
		uFnShouldSaveSpawnedActor = UFunction::FindFunction("Function GearboxFramework.SpawnFactory.ShouldSaveSpawnedActor");
	}

	USpawnFactory_eventShouldSaveSpawnedActor_Params ShouldSaveSpawnedActor_Params;
	memset(&ShouldSaveSpawnedActor_Params, 0, sizeof(ShouldSaveSpawnedActor_Params));
	memcpy_s(&ShouldSaveSpawnedActor_Params.Master, sizeof(ShouldSaveSpawnedActor_Params.Master), &Master, sizeof(Master));
	memcpy_s(&ShouldSaveSpawnedActor_Params.ActorToSave, sizeof(ShouldSaveSpawnedActor_Params.ActorToSave), &ActorToSave, sizeof(ActorToSave));

	USpawnFactory::StaticClass()->ProcessEvent(uFnShouldSaveSpawnedActor, &ShouldSaveSpawnedActor_Params, nullptr);

	return ShouldSaveSpawnedActor_Params.ReturnValue;
};

// Function GearboxFramework.SpawnFactory.DestroySpawnedActor
// [0x12026800] (FUNC_Event | FUNC_Static | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpawnMaster*            Master                         (CPF_Parm)
// int32_t                        SpawnerIdx                     (CPF_Parm)
// class AActor*                  ActorToDestroy                 (CPF_Parm)
// class USpawnFactory*           SpawnFactory                   (CPF_Parm)
// int32_t                        CreationFlags                  (CPF_Parm)
// bool                           bDontSaveActor                 (CPF_OptionalParm | CPF_Parm)

bool USpawnFactory::eventDestroySpawnedActor(class USpawnMaster* Master, int32_t SpawnerIdx, class AActor* ActorToDestroy, class USpawnFactory* SpawnFactory, int32_t CreationFlags, bool bDontSaveActor)
{
	static UFunction* uFnDestroySpawnedActor = nullptr;

	if (!uFnDestroySpawnedActor)
	{
		uFnDestroySpawnedActor = UFunction::FindFunction("Function GearboxFramework.SpawnFactory.DestroySpawnedActor");
	}

	USpawnFactory_eventDestroySpawnedActor_Params DestroySpawnedActor_Params;
	memset(&DestroySpawnedActor_Params, 0, sizeof(DestroySpawnedActor_Params));
	memcpy_s(&DestroySpawnedActor_Params.Master, sizeof(DestroySpawnedActor_Params.Master), &Master, sizeof(Master));
	memcpy_s(&DestroySpawnedActor_Params.SpawnerIdx, sizeof(DestroySpawnedActor_Params.SpawnerIdx), &SpawnerIdx, sizeof(SpawnerIdx));
	memcpy_s(&DestroySpawnedActor_Params.ActorToDestroy, sizeof(DestroySpawnedActor_Params.ActorToDestroy), &ActorToDestroy, sizeof(ActorToDestroy));
	memcpy_s(&DestroySpawnedActor_Params.SpawnFactory, sizeof(DestroySpawnedActor_Params.SpawnFactory), &SpawnFactory, sizeof(SpawnFactory));
	memcpy_s(&DestroySpawnedActor_Params.CreationFlags, sizeof(DestroySpawnedActor_Params.CreationFlags), &CreationFlags, sizeof(CreationFlags));
	DestroySpawnedActor_Params.bDontSaveActor = bDontSaveActor;

	USpawnFactory::StaticClass()->ProcessEvent(uFnDestroySpawnedActor, &DestroySpawnedActor_Params, nullptr);

	return DestroySpawnedActor_Params.ReturnValue;
};

// Function GearboxFramework.SpawnFactory.SpawnActor
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AActor*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpawnMaster*            Master                         (CPF_Parm)
// class ASpawner*                Spawner                        (CPF_Parm)
// class UObject*                 SpawnLocationContextObject     (CPF_Parm)
// const struct FVector&          SpawnLocation                  (CPF_Parm)
// const struct FRotator&         SpawnRotation                  (CPF_Parm)
// int32_t                        GameStage                      (CPF_Parm)
// int32_t                        Rarity                         (CPF_Parm)
// class UObject*                 SkinSource                     (CPF_Parm)

class AActor* USpawnFactory::eventSpawnActor(class USpawnMaster* Master, class ASpawner* Spawner, class UObject* SpawnLocationContextObject, const struct FVector& SpawnLocation, const struct FRotator& SpawnRotation, int32_t GameStage, int32_t Rarity, class UObject* SkinSource)
{
	static UFunction* uFnSpawnActor = nullptr;

	if (!uFnSpawnActor)
	{
		uFnSpawnActor = UFunction::FindFunction("Function GearboxFramework.SpawnFactory.SpawnActor");
	}

	USpawnFactory_eventSpawnActor_Params SpawnActor_Params;
	memset(&SpawnActor_Params, 0, sizeof(SpawnActor_Params));
	memcpy_s(&SpawnActor_Params.Master, sizeof(SpawnActor_Params.Master), &Master, sizeof(Master));
	memcpy_s(&SpawnActor_Params.Spawner, sizeof(SpawnActor_Params.Spawner), &Spawner, sizeof(Spawner));
	memcpy_s(&SpawnActor_Params.SpawnLocationContextObject, sizeof(SpawnActor_Params.SpawnLocationContextObject), &SpawnLocationContextObject, sizeof(SpawnLocationContextObject));
	memcpy_s(&SpawnActor_Params.SpawnLocation, sizeof(SpawnActor_Params.SpawnLocation), &SpawnLocation, sizeof(SpawnLocation));
	memcpy_s(&SpawnActor_Params.SpawnRotation, sizeof(SpawnActor_Params.SpawnRotation), &SpawnRotation, sizeof(SpawnRotation));
	memcpy_s(&SpawnActor_Params.GameStage, sizeof(SpawnActor_Params.GameStage), &GameStage, sizeof(GameStage));
	memcpy_s(&SpawnActor_Params.Rarity, sizeof(SpawnActor_Params.Rarity), &Rarity, sizeof(Rarity));
	memcpy_s(&SpawnActor_Params.SkinSource, sizeof(SpawnActor_Params.SkinSource), &SkinSource, sizeof(SkinSource));

	this->ProcessEvent(uFnSpawnActor, &SpawnActor_Params, nullptr);

	return SpawnActor_Params.ReturnValue;
};

// Function GearboxFramework.SpawnFactory.GetSpawnVisibilityBounds
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// struct FBoxSphereBounds        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        GameStage                      (CPF_Parm)
// int32_t                        Rarity                         (CPF_Parm)

struct FBoxSphereBounds USpawnFactory::eventGetSpawnVisibilityBounds(int32_t GameStage, int32_t Rarity)
{
	static UFunction* uFnGetSpawnVisibilityBounds = nullptr;

	if (!uFnGetSpawnVisibilityBounds)
	{
		uFnGetSpawnVisibilityBounds = UFunction::FindFunction("Function GearboxFramework.SpawnFactory.GetSpawnVisibilityBounds");
	}

	USpawnFactory_eventGetSpawnVisibilityBounds_Params GetSpawnVisibilityBounds_Params;
	memset(&GetSpawnVisibilityBounds_Params, 0, sizeof(GetSpawnVisibilityBounds_Params));
	memcpy_s(&GetSpawnVisibilityBounds_Params.GameStage, sizeof(GetSpawnVisibilityBounds_Params.GameStage), &GameStage, sizeof(GameStage));
	memcpy_s(&GetSpawnVisibilityBounds_Params.Rarity, sizeof(GetSpawnVisibilityBounds_Params.Rarity), &Rarity, sizeof(Rarity));

	this->ProcessEvent(uFnGetSpawnVisibilityBounds, &GetSpawnVisibilityBounds_Params, nullptr);

	return GetSpawnVisibilityBounds_Params.ReturnValue;
};

// Function GearboxFramework.SpawnFactory.GetActorAllegiance
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34026])
// Parameter Info:
// class UPawnAllegiance*         ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        GameStage                      (CPF_Parm)
// int32_t                        Rarity                         (CPF_Parm)

class UPawnAllegiance* USpawnFactory::GetActorAllegiance(int32_t GameStage, int32_t Rarity)
{
	static UFunction* uFnGetActorAllegiance = nullptr;

	if (!uFnGetActorAllegiance)
	{
		uFnGetActorAllegiance = UFunction::FindFunction("Function GearboxFramework.SpawnFactory.GetActorAllegiance");
	}

	USpawnFactory_execGetActorAllegiance_Params GetActorAllegiance_Params;
	memset(&GetActorAllegiance_Params, 0, sizeof(GetActorAllegiance_Params));
	memcpy_s(&GetActorAllegiance_Params.GameStage, sizeof(GetActorAllegiance_Params.GameStage), &GameStage, sizeof(GameStage));
	memcpy_s(&GetActorAllegiance_Params.Rarity, sizeof(GetActorAllegiance_Params.Rarity), &Rarity, sizeof(Rarity));

	uFnGetActorAllegiance->iNative = 0;
	uFnGetActorAllegiance->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetActorAllegiance, &GetActorAllegiance_Params, nullptr);
	uFnGetActorAllegiance->FunctionFlags |= 0x400;
	uFnGetActorAllegiance->iNative = 34026;

	return GetActorAllegiance_Params.ReturnValue;
};

// Function GearboxFramework.SpawnFactory.GetActorSpawnCost
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        GameStage                      (CPF_Parm)
// int32_t                        Rarity                         (CPF_Parm)
// bool                           bCanSpawnTest                  (CPF_Parm)

int32_t USpawnFactory::eventGetActorSpawnCost(int32_t GameStage, int32_t Rarity, bool bCanSpawnTest)
{
	static UFunction* uFnGetActorSpawnCost = nullptr;

	if (!uFnGetActorSpawnCost)
	{
		uFnGetActorSpawnCost = UFunction::FindFunction("Function GearboxFramework.SpawnFactory.GetActorSpawnCost");
	}

	USpawnFactory_eventGetActorSpawnCost_Params GetActorSpawnCost_Params;
	memset(&GetActorSpawnCost_Params, 0, sizeof(GetActorSpawnCost_Params));
	memcpy_s(&GetActorSpawnCost_Params.GameStage, sizeof(GetActorSpawnCost_Params.GameStage), &GameStage, sizeof(GameStage));
	memcpy_s(&GetActorSpawnCost_Params.Rarity, sizeof(GetActorSpawnCost_Params.Rarity), &Rarity, sizeof(Rarity));
	GetActorSpawnCost_Params.bCanSpawnTest = bCanSpawnTest;

	this->ProcessEvent(uFnGetActorSpawnCost, &GetActorSpawnCost_Params, nullptr);

	return GetActorSpawnCost_Params.ReturnValue;
};

// Function GearboxFramework.SpawnFactory.OnSpawnActor
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AActor*                  aNewActor                      (CPF_Parm)

void USpawnFactory::eventOnSpawnActor(class AActor* aNewActor)
{
	static UFunction* uFnOnSpawnActor = nullptr;

	if (!uFnOnSpawnActor)
	{
		uFnOnSpawnActor = UFunction::FindFunction("Function GearboxFramework.SpawnFactory.OnSpawnActor");
	}

	USpawnFactory_eventOnSpawnActor_Params OnSpawnActor_Params;
	memset(&OnSpawnActor_Params, 0, sizeof(OnSpawnActor_Params));
	memcpy_s(&OnSpawnActor_Params.aNewActor, sizeof(OnSpawnActor_Params.aNewActor), &aNewActor, sizeof(aNewActor));

	this->ProcessEvent(uFnOnSpawnActor, &OnSpawnActor_Params, nullptr);
};

// Function GearboxFramework.SpawnFactory.SetupMatineeForActor
// [0x12022800] (FUNC_Event | FUNC_Static | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AActor*                  aNewActor                      (CPF_Parm)

void USpawnFactory::eventSetupMatineeForActor(class AActor* aNewActor)
{
	static UFunction* uFnSetupMatineeForActor = nullptr;

	if (!uFnSetupMatineeForActor)
	{
		uFnSetupMatineeForActor = UFunction::FindFunction("Function GearboxFramework.SpawnFactory.SetupMatineeForActor");
	}

	USpawnFactory_eventSetupMatineeForActor_Params SetupMatineeForActor_Params;
	memset(&SetupMatineeForActor_Params, 0, sizeof(SetupMatineeForActor_Params));
	memcpy_s(&SetupMatineeForActor_Params.aNewActor, sizeof(SetupMatineeForActor_Params.aNewActor), &aNewActor, sizeof(aNewActor));

	USpawnFactory::StaticClass()->ProcessEvent(uFnSetupMatineeForActor, &SetupMatineeForActor_Params, nullptr);
};

// Function GearboxFramework.SpawnFactory.GetSpawnFactory
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34218])
// Parameter Info:
// class USpawnFactory*           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class ASpawner*                Spawner                        (CPF_Parm)
// int32_t                        GameStage                      (CPF_Parm)
// int32_t                        Rarity                         (CPF_Parm)

class USpawnFactory* USpawnFactory::GetSpawnFactory(class ASpawner* Spawner, int32_t GameStage, int32_t Rarity)
{
	static UFunction* uFnGetSpawnFactory = nullptr;

	if (!uFnGetSpawnFactory)
	{
		uFnGetSpawnFactory = UFunction::FindFunction("Function GearboxFramework.SpawnFactory.GetSpawnFactory");
	}

	USpawnFactory_execGetSpawnFactory_Params GetSpawnFactory_Params;
	memset(&GetSpawnFactory_Params, 0, sizeof(GetSpawnFactory_Params));
	memcpy_s(&GetSpawnFactory_Params.Spawner, sizeof(GetSpawnFactory_Params.Spawner), &Spawner, sizeof(Spawner));
	memcpy_s(&GetSpawnFactory_Params.GameStage, sizeof(GetSpawnFactory_Params.GameStage), &GameStage, sizeof(GameStage));
	memcpy_s(&GetSpawnFactory_Params.Rarity, sizeof(GetSpawnFactory_Params.Rarity), &Rarity, sizeof(Rarity));

	uFnGetSpawnFactory->iNative = 0;
	uFnGetSpawnFactory->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetSpawnFactory, &GetSpawnFactory_Params, nullptr);
	uFnGetSpawnFactory->FunctionFlags |= 0x400;
	uFnGetSpawnFactory->iNative = 34218;

	return GetSpawnFactory_Params.ReturnValue;
};

// Function GearboxFramework.SpawnFactory.GetSpawnProbabilityAtThisGameStage
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34222])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        GameStage                      (CPF_Parm)
// int32_t                        Rarity                         (CPF_Parm)

float USpawnFactory::GetSpawnProbabilityAtThisGameStage(int32_t GameStage, int32_t Rarity)
{
	static UFunction* uFnGetSpawnProbabilityAtThisGameStage = nullptr;

	if (!uFnGetSpawnProbabilityAtThisGameStage)
	{
		uFnGetSpawnProbabilityAtThisGameStage = UFunction::FindFunction("Function GearboxFramework.SpawnFactory.GetSpawnProbabilityAtThisGameStage");
	}

	USpawnFactory_execGetSpawnProbabilityAtThisGameStage_Params GetSpawnProbabilityAtThisGameStage_Params;
	memset(&GetSpawnProbabilityAtThisGameStage_Params, 0, sizeof(GetSpawnProbabilityAtThisGameStage_Params));
	memcpy_s(&GetSpawnProbabilityAtThisGameStage_Params.GameStage, sizeof(GetSpawnProbabilityAtThisGameStage_Params.GameStage), &GameStage, sizeof(GameStage));
	memcpy_s(&GetSpawnProbabilityAtThisGameStage_Params.Rarity, sizeof(GetSpawnProbabilityAtThisGameStage_Params.Rarity), &Rarity, sizeof(Rarity));

	uFnGetSpawnProbabilityAtThisGameStage->iNative = 0;
	uFnGetSpawnProbabilityAtThisGameStage->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetSpawnProbabilityAtThisGameStage, &GetSpawnProbabilityAtThisGameStage_Params, nullptr);
	uFnGetSpawnProbabilityAtThisGameStage->FunctionFlags |= 0x400;
	uFnGetSpawnProbabilityAtThisGameStage->iNative = 34222;

	return GetSpawnProbabilityAtThisGameStage_Params.ReturnValue;
};

// Function GearboxFramework.SpawnFactory.IsFactoryWithin
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34659])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpawnFactory*           TestFactory                    (CPF_Parm)

bool USpawnFactory::IsFactoryWithin(class USpawnFactory* TestFactory)
{
	static UFunction* uFnIsFactoryWithin = nullptr;

	if (!uFnIsFactoryWithin)
	{
		uFnIsFactoryWithin = UFunction::FindFunction("Function GearboxFramework.SpawnFactory.IsFactoryWithin");
	}

	USpawnFactory_execIsFactoryWithin_Params IsFactoryWithin_Params;
	memset(&IsFactoryWithin_Params, 0, sizeof(IsFactoryWithin_Params));
	memcpy_s(&IsFactoryWithin_Params.TestFactory, sizeof(IsFactoryWithin_Params.TestFactory), &TestFactory, sizeof(TestFactory));

	uFnIsFactoryWithin->iNative = 0;
	uFnIsFactoryWithin->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsFactoryWithin, &IsFactoryWithin_Params, nullptr);
	uFnIsFactoryWithin->FunctionFlags |= 0x400;
	uFnIsFactoryWithin->iNative = 34659;

	return IsFactoryWithin_Params.ReturnValue;
};

// Function GearboxFramework.SpawnFactory.CanSpawn
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32683])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class ASpawner*                TestSpawner                    (CPF_Parm)

bool USpawnFactory::CanSpawn(class ASpawner* TestSpawner)
{
	static UFunction* uFnCanSpawn = nullptr;

	if (!uFnCanSpawn)
	{
		uFnCanSpawn = UFunction::FindFunction("Function GearboxFramework.SpawnFactory.CanSpawn");
	}

	USpawnFactory_execCanSpawn_Params CanSpawn_Params;
	memset(&CanSpawn_Params, 0, sizeof(CanSpawn_Params));
	memcpy_s(&CanSpawn_Params.TestSpawner, sizeof(CanSpawn_Params.TestSpawner), &TestSpawner, sizeof(TestSpawner));

	uFnCanSpawn->iNative = 0;
	uFnCanSpawn->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCanSpawn, &CanSpawn_Params, nullptr);
	uFnCanSpawn->FunctionFlags |= 0x400;
	uFnCanSpawn->iNative = 32683;

	return CanSpawn_Params.ReturnValue;
};

// Function GearboxFramework.SpawnFactoryGeneric.SpawnActor
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AActor*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpawnMaster*            Master                         (CPF_Parm)
// class ASpawner*                Spawner                        (CPF_Parm)
// class UObject*                 SpawnLocationContextObject     (CPF_Parm)
// const struct FVector&          SpawnLocation                  (CPF_Parm)
// const struct FRotator&         SpawnRotation                  (CPF_Parm)
// int32_t                        GameStage                      (CPF_Parm)
// int32_t                        Rarity                         (CPF_Parm)
// class UObject*                 SkinSource                     (CPF_Parm)

class AActor* USpawnFactoryGeneric::eventSpawnActor(class USpawnMaster* Master, class ASpawner* Spawner, class UObject* SpawnLocationContextObject, const struct FVector& SpawnLocation, const struct FRotator& SpawnRotation, int32_t GameStage, int32_t Rarity, class UObject* SkinSource)
{
	static UFunction* uFnSpawnActor = nullptr;

	if (!uFnSpawnActor)
	{
		uFnSpawnActor = UFunction::FindFunction("Function GearboxFramework.SpawnFactoryGeneric.SpawnActor");
	}

	USpawnFactoryGeneric_eventSpawnActor_Params SpawnActor_Params;
	memset(&SpawnActor_Params, 0, sizeof(SpawnActor_Params));
	memcpy_s(&SpawnActor_Params.Master, sizeof(SpawnActor_Params.Master), &Master, sizeof(Master));
	memcpy_s(&SpawnActor_Params.Spawner, sizeof(SpawnActor_Params.Spawner), &Spawner, sizeof(Spawner));
	memcpy_s(&SpawnActor_Params.SpawnLocationContextObject, sizeof(SpawnActor_Params.SpawnLocationContextObject), &SpawnLocationContextObject, sizeof(SpawnLocationContextObject));
	memcpy_s(&SpawnActor_Params.SpawnLocation, sizeof(SpawnActor_Params.SpawnLocation), &SpawnLocation, sizeof(SpawnLocation));
	memcpy_s(&SpawnActor_Params.SpawnRotation, sizeof(SpawnActor_Params.SpawnRotation), &SpawnRotation, sizeof(SpawnRotation));
	memcpy_s(&SpawnActor_Params.GameStage, sizeof(SpawnActor_Params.GameStage), &GameStage, sizeof(GameStage));
	memcpy_s(&SpawnActor_Params.Rarity, sizeof(SpawnActor_Params.Rarity), &Rarity, sizeof(Rarity));
	memcpy_s(&SpawnActor_Params.SkinSource, sizeof(SpawnActor_Params.SkinSource), &SkinSource, sizeof(SkinSource));

	this->ProcessEvent(uFnSpawnActor, &SpawnActor_Params, nullptr);

	return SpawnActor_Params.ReturnValue;
};

// Function GearboxFramework.SpawnFactoryGeneric.GetSpawnVisibilityBounds
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// struct FBoxSphereBounds        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        GameStage                      (CPF_Parm)
// int32_t                        Rarity                         (CPF_Parm)

struct FBoxSphereBounds USpawnFactoryGeneric::eventGetSpawnVisibilityBounds(int32_t GameStage, int32_t Rarity)
{
	static UFunction* uFnGetSpawnVisibilityBounds = nullptr;

	if (!uFnGetSpawnVisibilityBounds)
	{
		uFnGetSpawnVisibilityBounds = UFunction::FindFunction("Function GearboxFramework.SpawnFactoryGeneric.GetSpawnVisibilityBounds");
	}

	USpawnFactoryGeneric_eventGetSpawnVisibilityBounds_Params GetSpawnVisibilityBounds_Params;
	memset(&GetSpawnVisibilityBounds_Params, 0, sizeof(GetSpawnVisibilityBounds_Params));
	memcpy_s(&GetSpawnVisibilityBounds_Params.GameStage, sizeof(GetSpawnVisibilityBounds_Params.GameStage), &GameStage, sizeof(GameStage));
	memcpy_s(&GetSpawnVisibilityBounds_Params.Rarity, sizeof(GetSpawnVisibilityBounds_Params.Rarity), &Rarity, sizeof(Rarity));

	this->ProcessEvent(uFnGetSpawnVisibilityBounds, &GetSpawnVisibilityBounds_Params, nullptr);

	return GetSpawnVisibilityBounds_Params.ReturnValue;
};

// Function GearboxFramework.SpawnFactorySpawnDefinition.GetSpawnFactory
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34218])
// Parameter Info:
// class USpawnFactory*           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class ASpawner*                Spawner                        (CPF_Parm)
// int32_t                        GameStage                      (CPF_Parm)
// int32_t                        Rarity                         (CPF_Parm)

class USpawnFactory* USpawnFactorySpawnDefinition::GetSpawnFactory(class ASpawner* Spawner, int32_t GameStage, int32_t Rarity)
{
	static UFunction* uFnGetSpawnFactory = nullptr;

	if (!uFnGetSpawnFactory)
	{
		uFnGetSpawnFactory = UFunction::FindFunction("Function GearboxFramework.SpawnFactorySpawnDefinition.GetSpawnFactory");
	}

	USpawnFactorySpawnDefinition_execGetSpawnFactory_Params GetSpawnFactory_Params;
	memset(&GetSpawnFactory_Params, 0, sizeof(GetSpawnFactory_Params));
	memcpy_s(&GetSpawnFactory_Params.Spawner, sizeof(GetSpawnFactory_Params.Spawner), &Spawner, sizeof(Spawner));
	memcpy_s(&GetSpawnFactory_Params.GameStage, sizeof(GetSpawnFactory_Params.GameStage), &GameStage, sizeof(GameStage));
	memcpy_s(&GetSpawnFactory_Params.Rarity, sizeof(GetSpawnFactory_Params.Rarity), &Rarity, sizeof(Rarity));

	uFnGetSpawnFactory->iNative = 0;
	uFnGetSpawnFactory->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetSpawnFactory, &GetSpawnFactory_Params, nullptr);
	uFnGetSpawnFactory->FunctionFlags |= 0x400;
	uFnGetSpawnFactory->iNative = 34218;

	return GetSpawnFactory_Params.ReturnValue;
};

// Function GearboxFramework.SpawnFactorySpawnDefinition.GetActorAllegiance
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34026])
// Parameter Info:
// class UPawnAllegiance*         ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        GameStage                      (CPF_Parm)
// int32_t                        AwesomeLevel                   (CPF_Parm)

class UPawnAllegiance* USpawnFactorySpawnDefinition::GetActorAllegiance(int32_t GameStage, int32_t AwesomeLevel)
{
	static UFunction* uFnGetActorAllegiance = nullptr;

	if (!uFnGetActorAllegiance)
	{
		uFnGetActorAllegiance = UFunction::FindFunction("Function GearboxFramework.SpawnFactorySpawnDefinition.GetActorAllegiance");
	}

	USpawnFactorySpawnDefinition_execGetActorAllegiance_Params GetActorAllegiance_Params;
	memset(&GetActorAllegiance_Params, 0, sizeof(GetActorAllegiance_Params));
	memcpy_s(&GetActorAllegiance_Params.GameStage, sizeof(GetActorAllegiance_Params.GameStage), &GameStage, sizeof(GameStage));
	memcpy_s(&GetActorAllegiance_Params.AwesomeLevel, sizeof(GetActorAllegiance_Params.AwesomeLevel), &AwesomeLevel, sizeof(AwesomeLevel));

	uFnGetActorAllegiance->iNative = 0;
	uFnGetActorAllegiance->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetActorAllegiance, &GetActorAllegiance_Params, nullptr);
	uFnGetActorAllegiance->FunctionFlags |= 0x400;
	uFnGetActorAllegiance->iNative = 34026;

	return GetActorAllegiance_Params.ReturnValue;
};

// Function GearboxFramework.SpawnFactorySpawnDefinition.IsFactoryWithin
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34659])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpawnFactory*           TestFactory                    (CPF_Parm)

bool USpawnFactorySpawnDefinition::IsFactoryWithin(class USpawnFactory* TestFactory)
{
	static UFunction* uFnIsFactoryWithin = nullptr;

	if (!uFnIsFactoryWithin)
	{
		uFnIsFactoryWithin = UFunction::FindFunction("Function GearboxFramework.SpawnFactorySpawnDefinition.IsFactoryWithin");
	}

	USpawnFactorySpawnDefinition_execIsFactoryWithin_Params IsFactoryWithin_Params;
	memset(&IsFactoryWithin_Params, 0, sizeof(IsFactoryWithin_Params));
	memcpy_s(&IsFactoryWithin_Params.TestFactory, sizeof(IsFactoryWithin_Params.TestFactory), &TestFactory, sizeof(TestFactory));

	uFnIsFactoryWithin->iNative = 0;
	uFnIsFactoryWithin->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsFactoryWithin, &IsFactoryWithin_Params, nullptr);
	uFnIsFactoryWithin->FunctionFlags |= 0x400;
	uFnIsFactoryWithin->iNative = 34659;

	return IsFactoryWithin_Params.ReturnValue;
};

// Function GearboxFramework.SpawnMaster.GetActorSpawnedFromSpawner
// [0x00024400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[34027])
// Parameter Info:
// class AActor*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class ASpawner*                Spawner                        (CPF_Parm)
// int32_t                        ActorIndex                     (CPF_OptionalParm | CPF_Parm)

class AActor* USpawnMaster::GetActorSpawnedFromSpawner(class ASpawner* Spawner, int32_t ActorIndex)
{
	static UFunction* uFnGetActorSpawnedFromSpawner = nullptr;

	if (!uFnGetActorSpawnedFromSpawner)
	{
		uFnGetActorSpawnedFromSpawner = UFunction::FindFunction("Function GearboxFramework.SpawnMaster.GetActorSpawnedFromSpawner");
	}

	USpawnMaster_execGetActorSpawnedFromSpawner_Params GetActorSpawnedFromSpawner_Params;
	memset(&GetActorSpawnedFromSpawner_Params, 0, sizeof(GetActorSpawnedFromSpawner_Params));
	memcpy_s(&GetActorSpawnedFromSpawner_Params.Spawner, sizeof(GetActorSpawnedFromSpawner_Params.Spawner), &Spawner, sizeof(Spawner));
	memcpy_s(&GetActorSpawnedFromSpawner_Params.ActorIndex, sizeof(GetActorSpawnedFromSpawner_Params.ActorIndex), &ActorIndex, sizeof(ActorIndex));

	uFnGetActorSpawnedFromSpawner->iNative = 0;
	uFnGetActorSpawnedFromSpawner->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetActorSpawnedFromSpawner, &GetActorSpawnedFromSpawner_Params, nullptr);
	uFnGetActorSpawnedFromSpawner->FunctionFlags |= 0x400;
	uFnGetActorSpawnedFromSpawner->iNative = 34027;

	return GetActorSpawnedFromSpawner_Params.ReturnValue;
};

// Function GearboxFramework.SpawnMaster.DisplayDebugSpawnerRespawn
// [0x12420000] (FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AHUD*                    HUD                            (CPF_Parm)
// float                          out_YL                         (CPF_Parm | CPF_OutParm)
// float                          out_YPos                       (CPF_Parm | CPF_OutParm)

void USpawnMaster::DisplayDebugSpawnerRespawn(class AHUD* HUD, float& out_YL, float& out_YPos)
{
	static UFunction* uFnDisplayDebugSpawnerRespawn = nullptr;

	if (!uFnDisplayDebugSpawnerRespawn)
	{
		uFnDisplayDebugSpawnerRespawn = UFunction::FindFunction("Function GearboxFramework.SpawnMaster.DisplayDebugSpawnerRespawn");
	}

	USpawnMaster_execDisplayDebugSpawnerRespawn_Params DisplayDebugSpawnerRespawn_Params;
	memset(&DisplayDebugSpawnerRespawn_Params, 0, sizeof(DisplayDebugSpawnerRespawn_Params));
	memcpy_s(&DisplayDebugSpawnerRespawn_Params.HUD, sizeof(DisplayDebugSpawnerRespawn_Params.HUD), &HUD, sizeof(HUD));
	memcpy_s(&DisplayDebugSpawnerRespawn_Params.out_YL, sizeof(DisplayDebugSpawnerRespawn_Params.out_YL), &out_YL, sizeof(out_YL));
	memcpy_s(&DisplayDebugSpawnerRespawn_Params.out_YPos, sizeof(DisplayDebugSpawnerRespawn_Params.out_YPos), &out_YPos, sizeof(out_YPos));

	this->ProcessEvent(uFnDisplayDebugSpawnerRespawn, &DisplayDebugSpawnerRespawn_Params, nullptr);

	memcpy_s(&out_YL, sizeof(out_YL), &DisplayDebugSpawnerRespawn_Params.out_YL, sizeof(DisplayDebugSpawnerRespawn_Params.out_YL));
	memcpy_s(&out_YPos, sizeof(out_YPos), &DisplayDebugSpawnerRespawn_Params.out_YPos, sizeof(DisplayDebugSpawnerRespawn_Params.out_YPos));
};

// Function GearboxFramework.SpawnMaster.DisplayDebugEncounters
// [0x12420000] (FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AHUD*                    HUD                            (CPF_Parm)
// float                          out_YL                         (CPF_Parm | CPF_OutParm)
// float                          out_YPos                       (CPF_Parm | CPF_OutParm)

void USpawnMaster::DisplayDebugEncounters(class AHUD* HUD, float& out_YL, float& out_YPos)
{
	static UFunction* uFnDisplayDebugEncounters = nullptr;

	if (!uFnDisplayDebugEncounters)
	{
		uFnDisplayDebugEncounters = UFunction::FindFunction("Function GearboxFramework.SpawnMaster.DisplayDebugEncounters");
	}

	USpawnMaster_execDisplayDebugEncounters_Params DisplayDebugEncounters_Params;
	memset(&DisplayDebugEncounters_Params, 0, sizeof(DisplayDebugEncounters_Params));
	memcpy_s(&DisplayDebugEncounters_Params.HUD, sizeof(DisplayDebugEncounters_Params.HUD), &HUD, sizeof(HUD));
	memcpy_s(&DisplayDebugEncounters_Params.out_YL, sizeof(DisplayDebugEncounters_Params.out_YL), &out_YL, sizeof(out_YL));
	memcpy_s(&DisplayDebugEncounters_Params.out_YPos, sizeof(DisplayDebugEncounters_Params.out_YPos), &out_YPos, sizeof(out_YPos));

	this->ProcessEvent(uFnDisplayDebugEncounters, &DisplayDebugEncounters_Params, nullptr);

	memcpy_s(&out_YL, sizeof(out_YL), &DisplayDebugEncounters_Params.out_YL, sizeof(DisplayDebugEncounters_Params.out_YL));
	memcpy_s(&out_YPos, sizeof(out_YPos), &DisplayDebugEncounters_Params.out_YPos, sizeof(DisplayDebugEncounters_Params.out_YPos));
};

// Function GearboxFramework.SpawnMaster.DisplayDebug
// [0x12420100] (FUNC_Simulated | FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AHUD*                    HUD                            (CPF_Parm)
// float                          out_YL                         (CPF_Parm | CPF_OutParm)
// float                          out_YPos                       (CPF_Parm | CPF_OutParm)

void USpawnMaster::DisplayDebug(class AHUD* HUD, float& out_YL, float& out_YPos)
{
	static UFunction* uFnDisplayDebug = nullptr;

	if (!uFnDisplayDebug)
	{
		uFnDisplayDebug = UFunction::FindFunction("Function GearboxFramework.SpawnMaster.DisplayDebug");
	}

	USpawnMaster_execDisplayDebug_Params DisplayDebug_Params;
	memset(&DisplayDebug_Params, 0, sizeof(DisplayDebug_Params));
	memcpy_s(&DisplayDebug_Params.HUD, sizeof(DisplayDebug_Params.HUD), &HUD, sizeof(HUD));
	memcpy_s(&DisplayDebug_Params.out_YL, sizeof(DisplayDebug_Params.out_YL), &out_YL, sizeof(out_YL));
	memcpy_s(&DisplayDebug_Params.out_YPos, sizeof(DisplayDebug_Params.out_YPos), &out_YPos, sizeof(out_YPos));

	this->ProcessEvent(uFnDisplayDebug, &DisplayDebug_Params, nullptr);

	memcpy_s(&out_YL, sizeof(out_YL), &DisplayDebug_Params.out_YL, sizeof(DisplayDebug_Params.out_YL));
	memcpy_s(&out_YPos, sizeof(out_YPos), &DisplayDebug_Params.out_YPos, sizeof(DisplayDebug_Params.out_YPos));
};

// Function GearboxFramework.SpawnMaster.DisplaySpawnDebug
// [0x12422000] (FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class AHUD*                    HUD                            (CPF_Parm)
// float                          out_YL                         (CPF_Parm | CPF_OutParm)
// float                          out_YPos                       (CPF_Parm | CPF_OutParm)

void USpawnMaster::DisplaySpawnDebug(class AHUD* HUD, float& out_YL, float& out_YPos)
{
	static UFunction* uFnDisplaySpawnDebug = nullptr;

	if (!uFnDisplaySpawnDebug)
	{
		uFnDisplaySpawnDebug = UFunction::FindFunction("Function GearboxFramework.SpawnMaster.DisplaySpawnDebug");
	}

	USpawnMaster_execDisplaySpawnDebug_Params DisplaySpawnDebug_Params;
	memset(&DisplaySpawnDebug_Params, 0, sizeof(DisplaySpawnDebug_Params));
	memcpy_s(&DisplaySpawnDebug_Params.HUD, sizeof(DisplaySpawnDebug_Params.HUD), &HUD, sizeof(HUD));
	memcpy_s(&DisplaySpawnDebug_Params.out_YL, sizeof(DisplaySpawnDebug_Params.out_YL), &out_YL, sizeof(out_YL));
	memcpy_s(&DisplaySpawnDebug_Params.out_YPos, sizeof(DisplaySpawnDebug_Params.out_YPos), &out_YPos, sizeof(out_YPos));

	USpawnMaster::StaticClass()->ProcessEvent(uFnDisplaySpawnDebug, &DisplaySpawnDebug_Params, nullptr);

	memcpy_s(&out_YL, sizeof(out_YL), &DisplaySpawnDebug_Params.out_YL, sizeof(DisplaySpawnDebug_Params.out_YL));
	memcpy_s(&out_YPos, sizeof(out_YPos), &DisplaySpawnDebug_Params.out_YPos, sizeof(DisplaySpawnDebug_Params.out_YPos));
};

// Function GearboxFramework.SpawnMaster.GetSavedActorDebugInfoForSpawner
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34197])
// Parameter Info:
// int32_t                        SpawnerIdx                     (CPF_Parm)
// class TArray<class FString>    SavedActorsDebugInfo           (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void USpawnMaster::GetSavedActorDebugInfoForSpawner(int32_t SpawnerIdx, class TArray<class FString>& SavedActorsDebugInfo)
{
	static UFunction* uFnGetSavedActorDebugInfoForSpawner = nullptr;

	if (!uFnGetSavedActorDebugInfoForSpawner)
	{
		uFnGetSavedActorDebugInfoForSpawner = UFunction::FindFunction("Function GearboxFramework.SpawnMaster.GetSavedActorDebugInfoForSpawner");
	}

	USpawnMaster_execGetSavedActorDebugInfoForSpawner_Params GetSavedActorDebugInfoForSpawner_Params;
	memset(&GetSavedActorDebugInfoForSpawner_Params, 0, sizeof(GetSavedActorDebugInfoForSpawner_Params));
	memcpy_s(&GetSavedActorDebugInfoForSpawner_Params.SpawnerIdx, sizeof(GetSavedActorDebugInfoForSpawner_Params.SpawnerIdx), &SpawnerIdx, sizeof(SpawnerIdx));
	memcpy_s(&GetSavedActorDebugInfoForSpawner_Params.SavedActorsDebugInfo, sizeof(GetSavedActorDebugInfoForSpawner_Params.SavedActorsDebugInfo), &SavedActorsDebugInfo, sizeof(SavedActorsDebugInfo));

	uFnGetSavedActorDebugInfoForSpawner->iNative = 0;
	uFnGetSavedActorDebugInfoForSpawner->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetSavedActorDebugInfoForSpawner, &GetSavedActorDebugInfoForSpawner_Params, nullptr);
	uFnGetSavedActorDebugInfoForSpawner->FunctionFlags |= 0x400;
	uFnGetSavedActorDebugInfoForSpawner->iNative = 34197;

	memcpy_s(&SavedActorsDebugInfo, sizeof(SavedActorsDebugInfo), &GetSavedActorDebugInfoForSpawner_Params.SavedActorsDebugInfo, sizeof(GetSavedActorDebugInfoForSpawner_Params.SavedActorsDebugInfo));
};

// Function GearboxFramework.SpawnMaster.GetNumberOfSavedActorsForSpawner
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34152])
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        SpawnerIdx                     (CPF_Parm)

int32_t USpawnMaster::GetNumberOfSavedActorsForSpawner(int32_t SpawnerIdx)
{
	static UFunction* uFnGetNumberOfSavedActorsForSpawner = nullptr;

	if (!uFnGetNumberOfSavedActorsForSpawner)
	{
		uFnGetNumberOfSavedActorsForSpawner = UFunction::FindFunction("Function GearboxFramework.SpawnMaster.GetNumberOfSavedActorsForSpawner");
	}

	USpawnMaster_execGetNumberOfSavedActorsForSpawner_Params GetNumberOfSavedActorsForSpawner_Params;
	memset(&GetNumberOfSavedActorsForSpawner_Params, 0, sizeof(GetNumberOfSavedActorsForSpawner_Params));
	memcpy_s(&GetNumberOfSavedActorsForSpawner_Params.SpawnerIdx, sizeof(GetNumberOfSavedActorsForSpawner_Params.SpawnerIdx), &SpawnerIdx, sizeof(SpawnerIdx));

	uFnGetNumberOfSavedActorsForSpawner->iNative = 0;
	uFnGetNumberOfSavedActorsForSpawner->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetNumberOfSavedActorsForSpawner, &GetNumberOfSavedActorsForSpawner_Params, nullptr);
	uFnGetNumberOfSavedActorsForSpawner->FunctionFlags |= 0x400;
	uFnGetNumberOfSavedActorsForSpawner->iNative = 34152;

	return GetNumberOfSavedActorsForSpawner_Params.ReturnValue;
};

// Function GearboxFramework.SpawnMaster.WillActorsSpawnerBeResetOnLevelLoad
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36745])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AActor*                  TestActor                      (CPF_Parm)

bool USpawnMaster::WillActorsSpawnerBeResetOnLevelLoad(class AActor* TestActor)
{
	static UFunction* uFnWillActorsSpawnerBeResetOnLevelLoad = nullptr;

	if (!uFnWillActorsSpawnerBeResetOnLevelLoad)
	{
		uFnWillActorsSpawnerBeResetOnLevelLoad = UFunction::FindFunction("Function GearboxFramework.SpawnMaster.WillActorsSpawnerBeResetOnLevelLoad");
	}

	USpawnMaster_execWillActorsSpawnerBeResetOnLevelLoad_Params WillActorsSpawnerBeResetOnLevelLoad_Params;
	memset(&WillActorsSpawnerBeResetOnLevelLoad_Params, 0, sizeof(WillActorsSpawnerBeResetOnLevelLoad_Params));
	memcpy_s(&WillActorsSpawnerBeResetOnLevelLoad_Params.TestActor, sizeof(WillActorsSpawnerBeResetOnLevelLoad_Params.TestActor), &TestActor, sizeof(TestActor));

	uFnWillActorsSpawnerBeResetOnLevelLoad->iNative = 0;
	uFnWillActorsSpawnerBeResetOnLevelLoad->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnWillActorsSpawnerBeResetOnLevelLoad, &WillActorsSpawnerBeResetOnLevelLoad_Params, nullptr);
	uFnWillActorsSpawnerBeResetOnLevelLoad->FunctionFlags |= 0x400;
	uFnWillActorsSpawnerBeResetOnLevelLoad->iNative = 36745;

	return WillActorsSpawnerBeResetOnLevelLoad_Params.ReturnValue;
};

// Function GearboxFramework.SpawnMaster.ResetRespawn
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35729])
// Parameter Info:

void USpawnMaster::ResetRespawn()
{
	static UFunction* uFnResetRespawn = nullptr;

	if (!uFnResetRespawn)
	{
		uFnResetRespawn = UFunction::FindFunction("Function GearboxFramework.SpawnMaster.ResetRespawn");
	}

	USpawnMaster_execResetRespawn_Params ResetRespawn_Params;
	memset(&ResetRespawn_Params, 0, sizeof(ResetRespawn_Params));

	uFnResetRespawn->iNative = 0;
	uFnResetRespawn->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnResetRespawn, &ResetRespawn_Params, nullptr);
	uFnResetRespawn->FunctionFlags |= 0x400;
	uFnResetRespawn->iNative = 35729;
};

// Function GearboxFramework.SpawnMaster.GetStreamingLevelForActor
// [0x00022400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[34232])
// Parameter Info:
// class ULevelStreaming*         ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AActor*                  ActorInLevel                   (CPF_Parm)

class ULevelStreaming* USpawnMaster::GetStreamingLevelForActor(class AActor* ActorInLevel)
{
	static UFunction* uFnGetStreamingLevelForActor = nullptr;

	if (!uFnGetStreamingLevelForActor)
	{
		uFnGetStreamingLevelForActor = UFunction::FindFunction("Function GearboxFramework.SpawnMaster.GetStreamingLevelForActor");
	}

	USpawnMaster_execGetStreamingLevelForActor_Params GetStreamingLevelForActor_Params;
	memset(&GetStreamingLevelForActor_Params, 0, sizeof(GetStreamingLevelForActor_Params));
	memcpy_s(&GetStreamingLevelForActor_Params.ActorInLevel, sizeof(GetStreamingLevelForActor_Params.ActorInLevel), &ActorInLevel, sizeof(ActorInLevel));

	uFnGetStreamingLevelForActor->iNative = 0;
	uFnGetStreamingLevelForActor->FunctionFlags &= ~0x400;
	USpawnMaster::StaticClass()->ProcessEvent(uFnGetStreamingLevelForActor, &GetStreamingLevelForActor_Params, nullptr);
	uFnGetStreamingLevelForActor->FunctionFlags |= 0x400;
	uFnGetStreamingLevelForActor->iNative = 34232;

	return GetStreamingLevelForActor_Params.ReturnValue;
};

// Function GearboxFramework.SpawnMaster.HasCapacityToSpawnFromFactories
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34315])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        GameStage                      (CPF_Parm)
// int32_t                        Rarity                         (CPF_Parm)
// class TArray<class USpawnFactory*> TheFactories                   (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool USpawnMaster::HasCapacityToSpawnFromFactories(int32_t GameStage, int32_t Rarity, class TArray<class USpawnFactory*>& TheFactories)
{
	static UFunction* uFnHasCapacityToSpawnFromFactories = nullptr;

	if (!uFnHasCapacityToSpawnFromFactories)
	{
		uFnHasCapacityToSpawnFromFactories = UFunction::FindFunction("Function GearboxFramework.SpawnMaster.HasCapacityToSpawnFromFactories");
	}

	USpawnMaster_execHasCapacityToSpawnFromFactories_Params HasCapacityToSpawnFromFactories_Params;
	memset(&HasCapacityToSpawnFromFactories_Params, 0, sizeof(HasCapacityToSpawnFromFactories_Params));
	memcpy_s(&HasCapacityToSpawnFromFactories_Params.GameStage, sizeof(HasCapacityToSpawnFromFactories_Params.GameStage), &GameStage, sizeof(GameStage));
	memcpy_s(&HasCapacityToSpawnFromFactories_Params.Rarity, sizeof(HasCapacityToSpawnFromFactories_Params.Rarity), &Rarity, sizeof(Rarity));
	memcpy_s(&HasCapacityToSpawnFromFactories_Params.TheFactories, sizeof(HasCapacityToSpawnFromFactories_Params.TheFactories), &TheFactories, sizeof(TheFactories));

	uFnHasCapacityToSpawnFromFactories->iNative = 0;
	uFnHasCapacityToSpawnFromFactories->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnHasCapacityToSpawnFromFactories, &HasCapacityToSpawnFromFactories_Params, nullptr);
	uFnHasCapacityToSpawnFromFactories->FunctionFlags |= 0x400;
	uFnHasCapacityToSpawnFromFactories->iNative = 34315;

	memcpy_s(&TheFactories, sizeof(TheFactories), &HasCapacityToSpawnFromFactories_Params.TheFactories, sizeof(HasCapacityToSpawnFromFactories_Params.TheFactories));

	return HasCapacityToSpawnFromFactories_Params.ReturnValue;
};

// Function GearboxFramework.SpawnMaster.HasCapacityToSpawnFromFactory
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34316])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpawnFactory*           TheFactory                     (CPF_Parm)
// int32_t                        GameStage                      (CPF_Parm)
// int32_t                        Rarity                         (CPF_Parm)

bool USpawnMaster::HasCapacityToSpawnFromFactory(class USpawnFactory* TheFactory, int32_t GameStage, int32_t Rarity)
{
	static UFunction* uFnHasCapacityToSpawnFromFactory = nullptr;

	if (!uFnHasCapacityToSpawnFromFactory)
	{
		uFnHasCapacityToSpawnFromFactory = UFunction::FindFunction("Function GearboxFramework.SpawnMaster.HasCapacityToSpawnFromFactory");
	}

	USpawnMaster_execHasCapacityToSpawnFromFactory_Params HasCapacityToSpawnFromFactory_Params;
	memset(&HasCapacityToSpawnFromFactory_Params, 0, sizeof(HasCapacityToSpawnFromFactory_Params));
	memcpy_s(&HasCapacityToSpawnFromFactory_Params.TheFactory, sizeof(HasCapacityToSpawnFromFactory_Params.TheFactory), &TheFactory, sizeof(TheFactory));
	memcpy_s(&HasCapacityToSpawnFromFactory_Params.GameStage, sizeof(HasCapacityToSpawnFromFactory_Params.GameStage), &GameStage, sizeof(GameStage));
	memcpy_s(&HasCapacityToSpawnFromFactory_Params.Rarity, sizeof(HasCapacityToSpawnFromFactory_Params.Rarity), &Rarity, sizeof(Rarity));

	uFnHasCapacityToSpawnFromFactory->iNative = 0;
	uFnHasCapacityToSpawnFromFactory->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnHasCapacityToSpawnFromFactory, &HasCapacityToSpawnFromFactory_Params, nullptr);
	uFnHasCapacityToSpawnFromFactory->FunctionFlags |= 0x400;
	uFnHasCapacityToSpawnFromFactory->iNative = 34316;

	return HasCapacityToSpawnFromFactory_Params.ReturnValue;
};

// Function GearboxFramework.SpawnMaster.IsSpawnSystemAtCapacity
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34691])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool USpawnMaster::IsSpawnSystemAtCapacity()
{
	static UFunction* uFnIsSpawnSystemAtCapacity = nullptr;

	if (!uFnIsSpawnSystemAtCapacity)
	{
		uFnIsSpawnSystemAtCapacity = UFunction::FindFunction("Function GearboxFramework.SpawnMaster.IsSpawnSystemAtCapacity");
	}

	USpawnMaster_execIsSpawnSystemAtCapacity_Params IsSpawnSystemAtCapacity_Params;
	memset(&IsSpawnSystemAtCapacity_Params, 0, sizeof(IsSpawnSystemAtCapacity_Params));

	uFnIsSpawnSystemAtCapacity->iNative = 0;
	uFnIsSpawnSystemAtCapacity->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsSpawnSystemAtCapacity, &IsSpawnSystemAtCapacity_Params, nullptr);
	uFnIsSpawnSystemAtCapacity->FunctionFlags |= 0x400;
	uFnIsSpawnSystemAtCapacity->iNative = 34691;

	return IsSpawnSystemAtCapacity_Params.ReturnValue;
};

// Function GearboxFramework.SpawnMaster.StatProfileStop
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36278])
// Parameter Info:
// int32_t                        nStat                          (CPF_Parm)

void USpawnMaster::StatProfileStop(int32_t nStat)
{
	static UFunction* uFnStatProfileStop = nullptr;

	if (!uFnStatProfileStop)
	{
		uFnStatProfileStop = UFunction::FindFunction("Function GearboxFramework.SpawnMaster.StatProfileStop");
	}

	USpawnMaster_execStatProfileStop_Params StatProfileStop_Params;
	memset(&StatProfileStop_Params, 0, sizeof(StatProfileStop_Params));
	memcpy_s(&StatProfileStop_Params.nStat, sizeof(StatProfileStop_Params.nStat), &nStat, sizeof(nStat));

	uFnStatProfileStop->iNative = 0;
	uFnStatProfileStop->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnStatProfileStop, &StatProfileStop_Params, nullptr);
	uFnStatProfileStop->FunctionFlags |= 0x400;
	uFnStatProfileStop->iNative = 36278;
};

// Function GearboxFramework.SpawnMaster.StatProfileStart
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[36277])
// Parameter Info:
// int32_t                        nStat                          (CPF_Parm)

void USpawnMaster::StatProfileStart(int32_t nStat)
{
	static UFunction* uFnStatProfileStart = nullptr;

	if (!uFnStatProfileStart)
	{
		uFnStatProfileStart = UFunction::FindFunction("Function GearboxFramework.SpawnMaster.StatProfileStart");
	}

	USpawnMaster_execStatProfileStart_Params StatProfileStart_Params;
	memset(&StatProfileStart_Params, 0, sizeof(StatProfileStart_Params));
	memcpy_s(&StatProfileStart_Params.nStat, sizeof(StatProfileStart_Params.nStat), &nStat, sizeof(nStat));

	uFnStatProfileStart->iNative = 0;
	uFnStatProfileStart->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnStatProfileStart, &StatProfileStart_Params, nullptr);
	uFnStatProfileStart->FunctionFlags |= 0x400;
	uFnStatProfileStart->iNative = 36277;
};

// Function GearboxFramework.SpawnMaster.GetStatProfileTime
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34228])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        nStat                          (CPF_Parm)

float USpawnMaster::GetStatProfileTime(int32_t nStat)
{
	static UFunction* uFnGetStatProfileTime = nullptr;

	if (!uFnGetStatProfileTime)
	{
		uFnGetStatProfileTime = UFunction::FindFunction("Function GearboxFramework.SpawnMaster.GetStatProfileTime");
	}

	USpawnMaster_execGetStatProfileTime_Params GetStatProfileTime_Params;
	memset(&GetStatProfileTime_Params, 0, sizeof(GetStatProfileTime_Params));
	memcpy_s(&GetStatProfileTime_Params.nStat, sizeof(GetStatProfileTime_Params.nStat), &nStat, sizeof(nStat));

	uFnGetStatProfileTime->iNative = 0;
	uFnGetStatProfileTime->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetStatProfileTime, &GetStatProfileTime_Params, nullptr);
	uFnGetStatProfileTime->FunctionFlags |= 0x400;
	uFnGetStatProfileTime->iNative = 34228;

	return GetStatProfileTime_Params.ReturnValue;
};

// Function GearboxFramework.SpawnMaster.AddSavedActor
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[31679])
// Parameter Info:
// int32_t                        SpawnerIdx                     (CPF_Parm)
// class AActor*                  TheActor                       (CPF_Parm)
// class USpawnFactory*           SpawnFactory                   (CPF_Parm)
// int32_t                        CreationFlags                  (CPF_Parm)

void USpawnMaster::AddSavedActor(int32_t SpawnerIdx, class AActor* TheActor, class USpawnFactory* SpawnFactory, int32_t CreationFlags)
{
	static UFunction* uFnAddSavedActor = nullptr;

	if (!uFnAddSavedActor)
	{
		uFnAddSavedActor = UFunction::FindFunction("Function GearboxFramework.SpawnMaster.AddSavedActor");
	}

	USpawnMaster_execAddSavedActor_Params AddSavedActor_Params;
	memset(&AddSavedActor_Params, 0, sizeof(AddSavedActor_Params));
	memcpy_s(&AddSavedActor_Params.SpawnerIdx, sizeof(AddSavedActor_Params.SpawnerIdx), &SpawnerIdx, sizeof(SpawnerIdx));
	memcpy_s(&AddSavedActor_Params.TheActor, sizeof(AddSavedActor_Params.TheActor), &TheActor, sizeof(TheActor));
	memcpy_s(&AddSavedActor_Params.SpawnFactory, sizeof(AddSavedActor_Params.SpawnFactory), &SpawnFactory, sizeof(SpawnFactory));
	memcpy_s(&AddSavedActor_Params.CreationFlags, sizeof(AddSavedActor_Params.CreationFlags), &CreationFlags, sizeof(CreationFlags));

	uFnAddSavedActor->iNative = 0;
	uFnAddSavedActor->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnAddSavedActor, &AddSavedActor_Params, nullptr);
	uFnAddSavedActor->FunctionFlags |= 0x400;
	uFnAddSavedActor->iNative = 31679;
};

// Function GearboxFramework.SpawnMaster.DisconnectEncounter
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[33264])
// Parameter Info:
// class ASpawnEncounter*         Encounter                      (CPF_Parm)

void USpawnMaster::DisconnectEncounter(class ASpawnEncounter* Encounter)
{
	static UFunction* uFnDisconnectEncounter = nullptr;

	if (!uFnDisconnectEncounter)
	{
		uFnDisconnectEncounter = UFunction::FindFunction("Function GearboxFramework.SpawnMaster.DisconnectEncounter");
	}

	USpawnMaster_execDisconnectEncounter_Params DisconnectEncounter_Params;
	memset(&DisconnectEncounter_Params, 0, sizeof(DisconnectEncounter_Params));
	memcpy_s(&DisconnectEncounter_Params.Encounter, sizeof(DisconnectEncounter_Params.Encounter), &Encounter, sizeof(Encounter));

	uFnDisconnectEncounter->iNative = 0;
	uFnDisconnectEncounter->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnDisconnectEncounter, &DisconnectEncounter_Params, nullptr);
	uFnDisconnectEncounter->FunctionFlags |= 0x400;
	uFnDisconnectEncounter->iNative = 33264;
};

// Function GearboxFramework.SpawnMaster.ConnectEncounter
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32854])
// Parameter Info:
// class ASpawnEncounter*         Encounter                      (CPF_Parm)

void USpawnMaster::ConnectEncounter(class ASpawnEncounter* Encounter)
{
	static UFunction* uFnConnectEncounter = nullptr;

	if (!uFnConnectEncounter)
	{
		uFnConnectEncounter = UFunction::FindFunction("Function GearboxFramework.SpawnMaster.ConnectEncounter");
	}

	USpawnMaster_execConnectEncounter_Params ConnectEncounter_Params;
	memset(&ConnectEncounter_Params, 0, sizeof(ConnectEncounter_Params));
	memcpy_s(&ConnectEncounter_Params.Encounter, sizeof(ConnectEncounter_Params.Encounter), &Encounter, sizeof(Encounter));

	uFnConnectEncounter->iNative = 0;
	uFnConnectEncounter->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnConnectEncounter, &ConnectEncounter_Params, nullptr);
	uFnConnectEncounter->FunctionFlags |= 0x400;
	uFnConnectEncounter->iNative = 32854;
};

// Function GearboxFramework.SpawnMaster.DisconnectSpawner
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[33265])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class ASpawner*                DeactivatedSpawner             (CPF_Parm)
// bool                           bSaveState                     (CPF_Parm)

bool USpawnMaster::DisconnectSpawner(class ASpawner* DeactivatedSpawner, bool bSaveState)
{
	static UFunction* uFnDisconnectSpawner = nullptr;

	if (!uFnDisconnectSpawner)
	{
		uFnDisconnectSpawner = UFunction::FindFunction("Function GearboxFramework.SpawnMaster.DisconnectSpawner");
	}

	USpawnMaster_execDisconnectSpawner_Params DisconnectSpawner_Params;
	memset(&DisconnectSpawner_Params, 0, sizeof(DisconnectSpawner_Params));
	memcpy_s(&DisconnectSpawner_Params.DeactivatedSpawner, sizeof(DisconnectSpawner_Params.DeactivatedSpawner), &DeactivatedSpawner, sizeof(DeactivatedSpawner));
	DisconnectSpawner_Params.bSaveState = bSaveState;

	uFnDisconnectSpawner->iNative = 0;
	uFnDisconnectSpawner->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnDisconnectSpawner, &DisconnectSpawner_Params, nullptr);
	uFnDisconnectSpawner->FunctionFlags |= 0x400;
	uFnDisconnectSpawner->iNative = 33265;

	return DisconnectSpawner_Params.ReturnValue;
};

// Function GearboxFramework.SpawnMaster.ConnectSpawner
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32858])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class ASpawner*                ActivatedSpawner               (CPF_Parm)

bool USpawnMaster::ConnectSpawner(class ASpawner* ActivatedSpawner)
{
	static UFunction* uFnConnectSpawner = nullptr;

	if (!uFnConnectSpawner)
	{
		uFnConnectSpawner = UFunction::FindFunction("Function GearboxFramework.SpawnMaster.ConnectSpawner");
	}

	USpawnMaster_execConnectSpawner_Params ConnectSpawner_Params;
	memset(&ConnectSpawner_Params, 0, sizeof(ConnectSpawner_Params));
	memcpy_s(&ConnectSpawner_Params.ActivatedSpawner, sizeof(ConnectSpawner_Params.ActivatedSpawner), &ActivatedSpawner, sizeof(ActivatedSpawner));

	uFnConnectSpawner->iNative = 0;
	uFnConnectSpawner->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnConnectSpawner, &ConnectSpawner_Params, nullptr);
	uFnConnectSpawner->FunctionFlags |= 0x400;
	uFnConnectSpawner->iNative = 32858;

	return ConnectSpawner_Params.ReturnValue;
};

// Function GearboxFramework.SpawnMaster.GetWorldInfo
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[24043])
// Parameter Info:
// class AWorldInfo*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class AWorldInfo* USpawnMaster::GetWorldInfo()
{
	static UFunction* uFnGetWorldInfo = nullptr;

	if (!uFnGetWorldInfo)
	{
		uFnGetWorldInfo = UFunction::FindFunction("Function GearboxFramework.SpawnMaster.GetWorldInfo");
	}

	USpawnMaster_execGetWorldInfo_Params GetWorldInfo_Params;
	memset(&GetWorldInfo_Params, 0, sizeof(GetWorldInfo_Params));

	uFnGetWorldInfo->iNative = 0;
	uFnGetWorldInfo->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetWorldInfo, &GetWorldInfo_Params, nullptr);
	uFnGetWorldInfo->FunctionFlags |= 0x400;
	uFnGetWorldInfo->iNative = 24043;

	return GetWorldInfo_Params.ReturnValue;
};

// Function GearboxFramework.SpawnMaster.DestroySpawnedActors
// [0x00024400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[33193])
// Parameter Info:
// class ASpawner*                Spawner                        (CPF_Parm)
// bool                           bDontSaveActors                (CPF_OptionalParm | CPF_Parm)

void USpawnMaster::DestroySpawnedActors(class ASpawner* Spawner, bool bDontSaveActors)
{
	static UFunction* uFnDestroySpawnedActors = nullptr;

	if (!uFnDestroySpawnedActors)
	{
		uFnDestroySpawnedActors = UFunction::FindFunction("Function GearboxFramework.SpawnMaster.DestroySpawnedActors");
	}

	USpawnMaster_execDestroySpawnedActors_Params DestroySpawnedActors_Params;
	memset(&DestroySpawnedActors_Params, 0, sizeof(DestroySpawnedActors_Params));
	memcpy_s(&DestroySpawnedActors_Params.Spawner, sizeof(DestroySpawnedActors_Params.Spawner), &Spawner, sizeof(Spawner));
	DestroySpawnedActors_Params.bDontSaveActors = bDontSaveActors;

	uFnDestroySpawnedActors->iNative = 0;
	uFnDestroySpawnedActors->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnDestroySpawnedActors, &DestroySpawnedActors_Params, nullptr);
	uFnDestroySpawnedActors->FunctionFlags |= 0x400;
	uFnDestroySpawnedActors->iNative = 33193;
};

// Function GearboxFramework.SpawnMaster.RemoveSpawnedActor
// [0x00024400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[35677])
// Parameter Info:
// class AActor*                  TheActor                       (CPF_Parm)
// bool                           bKeepBody                      (CPF_Parm)
// bool                           bActorDied                     (CPF_OptionalParm | CPF_Parm)

void USpawnMaster::RemoveSpawnedActor(class AActor* TheActor, bool bKeepBody, bool bActorDied)
{
	static UFunction* uFnRemoveSpawnedActor = nullptr;

	if (!uFnRemoveSpawnedActor)
	{
		uFnRemoveSpawnedActor = UFunction::FindFunction("Function GearboxFramework.SpawnMaster.RemoveSpawnedActor");
	}

	USpawnMaster_execRemoveSpawnedActor_Params RemoveSpawnedActor_Params;
	memset(&RemoveSpawnedActor_Params, 0, sizeof(RemoveSpawnedActor_Params));
	memcpy_s(&RemoveSpawnedActor_Params.TheActor, sizeof(RemoveSpawnedActor_Params.TheActor), &TheActor, sizeof(TheActor));
	RemoveSpawnedActor_Params.bKeepBody = bKeepBody;
	RemoveSpawnedActor_Params.bActorDied = bActorDied;

	uFnRemoveSpawnedActor->iNative = 0;
	uFnRemoveSpawnedActor->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRemoveSpawnedActor, &RemoveSpawnedActor_Params, nullptr);
	uFnRemoveSpawnedActor->FunctionFlags |= 0x400;
	uFnRemoveSpawnedActor->iNative = 35677;
};

// Function GearboxFramework.SpawnMaster.SetSpawnedActorsReuse
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35932])
// Parameter Info:
// class AActor*                  TheActor                       (CPF_Parm)
// bool                           bReuse                         (CPF_Parm)

void USpawnMaster::SetSpawnedActorsReuse(class AActor* TheActor, bool bReuse)
{
	static UFunction* uFnSetSpawnedActorsReuse = nullptr;

	if (!uFnSetSpawnedActorsReuse)
	{
		uFnSetSpawnedActorsReuse = UFunction::FindFunction("Function GearboxFramework.SpawnMaster.SetSpawnedActorsReuse");
	}

	USpawnMaster_execSetSpawnedActorsReuse_Params SetSpawnedActorsReuse_Params;
	memset(&SetSpawnedActorsReuse_Params, 0, sizeof(SetSpawnedActorsReuse_Params));
	memcpy_s(&SetSpawnedActorsReuse_Params.TheActor, sizeof(SetSpawnedActorsReuse_Params.TheActor), &TheActor, sizeof(TheActor));
	SetSpawnedActorsReuse_Params.bReuse = bReuse;

	uFnSetSpawnedActorsReuse->iNative = 0;
	uFnSetSpawnedActorsReuse->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetSpawnedActorsReuse, &SetSpawnedActorsReuse_Params, nullptr);
	uFnSetSpawnedActorsReuse->FunctionFlags |= 0x400;
	uFnSetSpawnedActorsReuse->iNative = 35932;
};

// Function GearboxFramework.SpawnMaster.AddExternalActor
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[31663])
// Parameter Info:
// class AActor*                  SpawnedActor                   (CPF_Parm)
// class UClass*                  FactoryClass                   (CPF_Parm)

void USpawnMaster::AddExternalActor(class AActor* SpawnedActor, class UClass* FactoryClass)
{
	static UFunction* uFnAddExternalActor = nullptr;

	if (!uFnAddExternalActor)
	{
		uFnAddExternalActor = UFunction::FindFunction("Function GearboxFramework.SpawnMaster.AddExternalActor");
	}

	USpawnMaster_execAddExternalActor_Params AddExternalActor_Params;
	memset(&AddExternalActor_Params, 0, sizeof(AddExternalActor_Params));
	memcpy_s(&AddExternalActor_Params.SpawnedActor, sizeof(AddExternalActor_Params.SpawnedActor), &SpawnedActor, sizeof(SpawnedActor));
	memcpy_s(&AddExternalActor_Params.FactoryClass, sizeof(AddExternalActor_Params.FactoryClass), &FactoryClass, sizeof(FactoryClass));

	uFnAddExternalActor->iNative = 0;
	uFnAddExternalActor->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnAddExternalActor, &AddExternalActor_Params, nullptr);
	uFnAddExternalActor->FunctionFlags |= 0x400;
	uFnAddExternalActor->iNative = 31663;
};

// Function GearboxFramework.SpawnMaster.SpawnActorFromSpawner
// [0x00024400] (FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[36107])
// Parameter Info:
// class AActor*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpawnFactory*           TheFactory                     (CPF_Parm)
// class UObject*                 SpawnLocationContextObject     (CPF_Parm)
// const struct FVector&          SpawnLocation                  (CPF_Parm)
// const struct FRotator&         SpawnRotation                  (CPF_Parm)
// int32_t                        GameStage                      (CPF_Parm)
// int32_t                        Rarity                         (CPF_Parm)
// int32_t                        SpawnerIdx                     (CPF_Parm)
// int32_t                        SpawnerFlags                   (CPF_Parm)
// bool                           bCanSave                       (CPF_OptionalParm | CPF_Parm)
// bool                           bForceSpawn                    (CPF_OptionalParm | CPF_Parm)
// class UObject*                 SkinSource                     (CPF_OptionalParm | CPF_Parm)

class AActor* USpawnMaster::SpawnActorFromSpawner(class USpawnFactory* TheFactory, class UObject* SpawnLocationContextObject, const struct FVector& SpawnLocation, const struct FRotator& SpawnRotation, int32_t GameStage, int32_t Rarity, int32_t SpawnerIdx, int32_t SpawnerFlags, bool bCanSave, bool bForceSpawn, class UObject* SkinSource)
{
	static UFunction* uFnSpawnActorFromSpawner = nullptr;

	if (!uFnSpawnActorFromSpawner)
	{
		uFnSpawnActorFromSpawner = UFunction::FindFunction("Function GearboxFramework.SpawnMaster.SpawnActorFromSpawner");
	}

	USpawnMaster_execSpawnActorFromSpawner_Params SpawnActorFromSpawner_Params;
	memset(&SpawnActorFromSpawner_Params, 0, sizeof(SpawnActorFromSpawner_Params));
	memcpy_s(&SpawnActorFromSpawner_Params.TheFactory, sizeof(SpawnActorFromSpawner_Params.TheFactory), &TheFactory, sizeof(TheFactory));
	memcpy_s(&SpawnActorFromSpawner_Params.SpawnLocationContextObject, sizeof(SpawnActorFromSpawner_Params.SpawnLocationContextObject), &SpawnLocationContextObject, sizeof(SpawnLocationContextObject));
	memcpy_s(&SpawnActorFromSpawner_Params.SpawnLocation, sizeof(SpawnActorFromSpawner_Params.SpawnLocation), &SpawnLocation, sizeof(SpawnLocation));
	memcpy_s(&SpawnActorFromSpawner_Params.SpawnRotation, sizeof(SpawnActorFromSpawner_Params.SpawnRotation), &SpawnRotation, sizeof(SpawnRotation));
	memcpy_s(&SpawnActorFromSpawner_Params.GameStage, sizeof(SpawnActorFromSpawner_Params.GameStage), &GameStage, sizeof(GameStage));
	memcpy_s(&SpawnActorFromSpawner_Params.Rarity, sizeof(SpawnActorFromSpawner_Params.Rarity), &Rarity, sizeof(Rarity));
	memcpy_s(&SpawnActorFromSpawner_Params.SpawnerIdx, sizeof(SpawnActorFromSpawner_Params.SpawnerIdx), &SpawnerIdx, sizeof(SpawnerIdx));
	memcpy_s(&SpawnActorFromSpawner_Params.SpawnerFlags, sizeof(SpawnActorFromSpawner_Params.SpawnerFlags), &SpawnerFlags, sizeof(SpawnerFlags));
	SpawnActorFromSpawner_Params.bCanSave = bCanSave;
	SpawnActorFromSpawner_Params.bForceSpawn = bForceSpawn;
	memcpy_s(&SpawnActorFromSpawner_Params.SkinSource, sizeof(SpawnActorFromSpawner_Params.SkinSource), &SkinSource, sizeof(SkinSource));

	uFnSpawnActorFromSpawner->iNative = 0;
	uFnSpawnActorFromSpawner->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSpawnActorFromSpawner, &SpawnActorFromSpawner_Params, nullptr);
	uFnSpawnActorFromSpawner->FunctionFlags |= 0x400;
	uFnSpawnActorFromSpawner->iNative = 36107;

	return SpawnActorFromSpawner_Params.ReturnValue;
};

// Function GearboxFramework.SpawnMaster.SpawnActor
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[14871])
// Parameter Info:
// class AActor*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpawnFactory*           TheFactory                     (CPF_Parm)
// class UObject*                 SpawnLocationContextObject     (CPF_Parm)
// const struct FVector&          SpawnLocation                  (CPF_Parm)
// const struct FRotator&         SpawnRotation                  (CPF_Parm)
// int32_t                        GameStage                      (CPF_Parm)
// int32_t                        Rarity                         (CPF_Parm)
// class UObject*                 SkinSource                     (CPF_Parm)

class AActor* USpawnMaster::SpawnActor(class USpawnFactory* TheFactory, class UObject* SpawnLocationContextObject, const struct FVector& SpawnLocation, const struct FRotator& SpawnRotation, int32_t GameStage, int32_t Rarity, class UObject* SkinSource)
{
	static UFunction* uFnSpawnActor = nullptr;

	if (!uFnSpawnActor)
	{
		uFnSpawnActor = UFunction::FindFunction("Function GearboxFramework.SpawnMaster.SpawnActor");
	}

	USpawnMaster_execSpawnActor_Params SpawnActor_Params;
	memset(&SpawnActor_Params, 0, sizeof(SpawnActor_Params));
	memcpy_s(&SpawnActor_Params.TheFactory, sizeof(SpawnActor_Params.TheFactory), &TheFactory, sizeof(TheFactory));
	memcpy_s(&SpawnActor_Params.SpawnLocationContextObject, sizeof(SpawnActor_Params.SpawnLocationContextObject), &SpawnLocationContextObject, sizeof(SpawnLocationContextObject));
	memcpy_s(&SpawnActor_Params.SpawnLocation, sizeof(SpawnActor_Params.SpawnLocation), &SpawnLocation, sizeof(SpawnLocation));
	memcpy_s(&SpawnActor_Params.SpawnRotation, sizeof(SpawnActor_Params.SpawnRotation), &SpawnRotation, sizeof(SpawnRotation));
	memcpy_s(&SpawnActor_Params.GameStage, sizeof(SpawnActor_Params.GameStage), &GameStage, sizeof(GameStage));
	memcpy_s(&SpawnActor_Params.Rarity, sizeof(SpawnActor_Params.Rarity), &Rarity, sizeof(Rarity));
	memcpy_s(&SpawnActor_Params.SkinSource, sizeof(SpawnActor_Params.SkinSource), &SkinSource, sizeof(SkinSource));

	uFnSpawnActor->iNative = 0;
	uFnSpawnActor->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSpawnActor, &SpawnActor_Params, nullptr);
	uFnSpawnActor->FunctionFlags |= 0x400;
	uFnSpawnActor->iNative = 14871;

	return SpawnActor_Params.ReturnValue;
};

// Function GearboxFramework.SpawnMaster.GetSpawnerIndex
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34216])
// Parameter Info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class ASpawner*                Spawner                        (CPF_Parm)

int32_t USpawnMaster::GetSpawnerIndex(class ASpawner* Spawner)
{
	static UFunction* uFnGetSpawnerIndex = nullptr;

	if (!uFnGetSpawnerIndex)
	{
		uFnGetSpawnerIndex = UFunction::FindFunction("Function GearboxFramework.SpawnMaster.GetSpawnerIndex");
	}

	USpawnMaster_execGetSpawnerIndex_Params GetSpawnerIndex_Params;
	memset(&GetSpawnerIndex_Params, 0, sizeof(GetSpawnerIndex_Params));
	memcpy_s(&GetSpawnerIndex_Params.Spawner, sizeof(GetSpawnerIndex_Params.Spawner), &Spawner, sizeof(Spawner));

	uFnGetSpawnerIndex->iNative = 0;
	uFnGetSpawnerIndex->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetSpawnerIndex, &GetSpawnerIndex_Params, nullptr);
	uFnGetSpawnerIndex->FunctionFlags |= 0x400;
	uFnGetSpawnerIndex->iNative = 34216;

	return GetSpawnerIndex_Params.ReturnValue;
};

// Function GearboxFramework.SpawnMaster.GetActorsSpawner
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34028])
// Parameter Info:
// class ASpawner*                ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AActor*                  SpawnedActor                   (CPF_Parm)

class ASpawner* USpawnMaster::GetActorsSpawner(class AActor* SpawnedActor)
{
	static UFunction* uFnGetActorsSpawner = nullptr;

	if (!uFnGetActorsSpawner)
	{
		uFnGetActorsSpawner = UFunction::FindFunction("Function GearboxFramework.SpawnMaster.GetActorsSpawner");
	}

	USpawnMaster_execGetActorsSpawner_Params GetActorsSpawner_Params;
	memset(&GetActorsSpawner_Params, 0, sizeof(GetActorsSpawner_Params));
	memcpy_s(&GetActorsSpawner_Params.SpawnedActor, sizeof(GetActorsSpawner_Params.SpawnedActor), &SpawnedActor, sizeof(SpawnedActor));

	uFnGetActorsSpawner->iNative = 0;
	uFnGetActorsSpawner->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetActorsSpawner, &GetActorsSpawner_Params, nullptr);
	uFnGetActorsSpawner->FunctionFlags |= 0x400;
	uFnGetActorsSpawner->iNative = 34028;

	return GetActorsSpawner_Params.ReturnValue;
};

// Function GearboxFramework.SpawnMasterAttributeContextResolver.GetAttributeContext
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UObject*                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UAttributeDefinitionBase* Attribute                      (CPF_Parm)
// class UObject*                 AttributeContextSource         (CPF_Parm)

class UObject* USpawnMasterAttributeContextResolver::GetAttributeContext(class UAttributeDefinitionBase* Attribute, class UObject* AttributeContextSource)
{
	static UFunction* uFnGetAttributeContext = nullptr;

	if (!uFnGetAttributeContext)
	{
		uFnGetAttributeContext = UFunction::FindFunction("Function GearboxFramework.SpawnMasterAttributeContextResolver.GetAttributeContext");
	}

	USpawnMasterAttributeContextResolver_execGetAttributeContext_Params GetAttributeContext_Params;
	memset(&GetAttributeContext_Params, 0, sizeof(GetAttributeContext_Params));
	memcpy_s(&GetAttributeContext_Params.Attribute, sizeof(GetAttributeContext_Params.Attribute), &Attribute, sizeof(Attribute));
	memcpy_s(&GetAttributeContext_Params.AttributeContextSource, sizeof(GetAttributeContext_Params.AttributeContextSource), &AttributeContextSource, sizeof(AttributeContextSource));

	this->ProcessEvent(uFnGetAttributeContext, &GetAttributeContext_Params, nullptr);

	return GetAttributeContext_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMoveComponent.IsOwnerAlwaysNetRelevant
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34677])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool USpecialMoveComponent::IsOwnerAlwaysNetRelevant()
{
	static UFunction* uFnIsOwnerAlwaysNetRelevant = nullptr;

	if (!uFnIsOwnerAlwaysNetRelevant)
	{
		uFnIsOwnerAlwaysNetRelevant = UFunction::FindFunction("Function GearboxFramework.SpecialMoveComponent.IsOwnerAlwaysNetRelevant");
	}

	USpecialMoveComponent_execIsOwnerAlwaysNetRelevant_Params IsOwnerAlwaysNetRelevant_Params;
	memset(&IsOwnerAlwaysNetRelevant_Params, 0, sizeof(IsOwnerAlwaysNetRelevant_Params));

	uFnIsOwnerAlwaysNetRelevant->iNative = 0;
	uFnIsOwnerAlwaysNetRelevant->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsOwnerAlwaysNetRelevant, &IsOwnerAlwaysNetRelevant_Params, nullptr);
	uFnIsOwnerAlwaysNetRelevant->FunctionFlags |= 0x400;
	uFnIsOwnerAlwaysNetRelevant->iNative = 34677;

	return IsOwnerAlwaysNetRelevant_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMoveComponent.CanPlayBehaviorData
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[32679])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FSMBehavior             Data                           (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool USpecialMoveComponent::CanPlayBehaviorData(struct FSMBehavior& Data)
{
	static UFunction* uFnCanPlayBehaviorData = nullptr;

	if (!uFnCanPlayBehaviorData)
	{
		uFnCanPlayBehaviorData = UFunction::FindFunction("Function GearboxFramework.SpecialMoveComponent.CanPlayBehaviorData");
	}

	USpecialMoveComponent_execCanPlayBehaviorData_Params CanPlayBehaviorData_Params;
	memset(&CanPlayBehaviorData_Params, 0, sizeof(CanPlayBehaviorData_Params));
	memcpy_s(&CanPlayBehaviorData_Params.Data, sizeof(CanPlayBehaviorData_Params.Data), &Data, sizeof(Data));

	uFnCanPlayBehaviorData->iNative = 0;
	uFnCanPlayBehaviorData->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnCanPlayBehaviorData, &CanPlayBehaviorData_Params, nullptr);
	uFnCanPlayBehaviorData->FunctionFlags |= 0x400;
	uFnCanPlayBehaviorData->iNative = 32679;

	memcpy_s(&Data, sizeof(Data), &CanPlayBehaviorData_Params.Data, sizeof(CanPlayBehaviorData_Params.Data));

	return CanPlayBehaviorData_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMoveComponent.RunBehaviors
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[28409])
// Parameter Info:
// class TArray<struct FSMBehavior> SMBehaviors                    (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void USpecialMoveComponent::RunBehaviors(class TArray<struct FSMBehavior>& SMBehaviors)
{
	static UFunction* uFnRunBehaviors = nullptr;

	if (!uFnRunBehaviors)
	{
		uFnRunBehaviors = UFunction::FindFunction("Function GearboxFramework.SpecialMoveComponent.RunBehaviors");
	}

	USpecialMoveComponent_execRunBehaviors_Params RunBehaviors_Params;
	memset(&RunBehaviors_Params, 0, sizeof(RunBehaviors_Params));
	memcpy_s(&RunBehaviors_Params.SMBehaviors, sizeof(RunBehaviors_Params.SMBehaviors), &SMBehaviors, sizeof(SMBehaviors));

	uFnRunBehaviors->iNative = 0;
	uFnRunBehaviors->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRunBehaviors, &RunBehaviors_Params, nullptr);
	uFnRunBehaviors->FunctionFlags |= 0x400;
	uFnRunBehaviors->iNative = 28409;

	memcpy_s(&SMBehaviors, sizeof(SMBehaviors), &RunBehaviors_Params.SMBehaviors, sizeof(RunBehaviors_Params.SMBehaviors));
};

// Function GearboxFramework.SpecialMoveComponent.GetCurrent
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34064])
// Parameter Info:
// class USpecialMoveDefinition*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class USpecialMoveDefinition* USpecialMoveComponent::GetCurrent()
{
	static UFunction* uFnGetCurrent = nullptr;

	if (!uFnGetCurrent)
	{
		uFnGetCurrent = UFunction::FindFunction("Function GearboxFramework.SpecialMoveComponent.GetCurrent");
	}

	USpecialMoveComponent_execGetCurrent_Params GetCurrent_Params;
	memset(&GetCurrent_Params, 0, sizeof(GetCurrent_Params));

	uFnGetCurrent->iNative = 0;
	uFnGetCurrent->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetCurrent, &GetCurrent_Params, nullptr);
	uFnGetCurrent->FunctionFlags |= 0x400;
	uFnGetCurrent->iNative = 34064;

	return GetCurrent_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMoveComponent.GetPlayRateScale
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34181])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float USpecialMoveComponent::GetPlayRateScale()
{
	static UFunction* uFnGetPlayRateScale = nullptr;

	if (!uFnGetPlayRateScale)
	{
		uFnGetPlayRateScale = UFunction::FindFunction("Function GearboxFramework.SpecialMoveComponent.GetPlayRateScale");
	}

	USpecialMoveComponent_execGetPlayRateScale_Params GetPlayRateScale_Params;
	memset(&GetPlayRateScale_Params, 0, sizeof(GetPlayRateScale_Params));

	uFnGetPlayRateScale->iNative = 0;
	uFnGetPlayRateScale->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetPlayRateScale, &GetPlayRateScale_Params, nullptr);
	uFnGetPlayRateScale->FunctionFlags |= 0x400;
	uFnGetPlayRateScale->iNative = 34181;

	return GetPlayRateScale_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMoveComponent.GetDuration
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34091])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float USpecialMoveComponent::GetDuration()
{
	static UFunction* uFnGetDuration = nullptr;

	if (!uFnGetDuration)
	{
		uFnGetDuration = UFunction::FindFunction("Function GearboxFramework.SpecialMoveComponent.GetDuration");
	}

	USpecialMoveComponent_execGetDuration_Params GetDuration_Params;
	memset(&GetDuration_Params, 0, sizeof(GetDuration_Params));

	uFnGetDuration->iNative = 0;
	uFnGetDuration->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetDuration, &GetDuration_Params, nullptr);
	uFnGetDuration->FunctionFlags |= 0x400;
	uFnGetDuration->iNative = 34091;

	return GetDuration_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMoveComponent.GetData
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34074])
// Parameter Info:
// class UObject*                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UObject* USpecialMoveComponent::GetData()
{
	static UFunction* uFnGetData = nullptr;

	if (!uFnGetData)
	{
		uFnGetData = UFunction::FindFunction("Function GearboxFramework.SpecialMoveComponent.GetData");
	}

	USpecialMoveComponent_execGetData_Params GetData_Params;
	memset(&GetData_Params, 0, sizeof(GetData_Params));

	uFnGetData->iNative = 0;
	uFnGetData->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetData, &GetData_Params, nullptr);
	uFnGetData->FunctionFlags |= 0x400;
	uFnGetData->iNative = 34074;

	return GetData_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMoveComponent.LocalAnimFinished
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34848])
// Parameter Info:
// class USpecialMoveDefinition*  SMD                            (CPF_Parm)
// bool                           bInterrupted                   (CPF_Parm)
// struct FSpecialMoveData        SMData                         (CPF_Parm | CPF_OutParm)

void USpecialMoveComponent::LocalAnimFinished(class USpecialMoveDefinition* SMD, bool bInterrupted, struct FSpecialMoveData& SMData)
{
	static UFunction* uFnLocalAnimFinished = nullptr;

	if (!uFnLocalAnimFinished)
	{
		uFnLocalAnimFinished = UFunction::FindFunction("Function GearboxFramework.SpecialMoveComponent.LocalAnimFinished");
	}

	USpecialMoveComponent_execLocalAnimFinished_Params LocalAnimFinished_Params;
	memset(&LocalAnimFinished_Params, 0, sizeof(LocalAnimFinished_Params));
	memcpy_s(&LocalAnimFinished_Params.SMD, sizeof(LocalAnimFinished_Params.SMD), &SMD, sizeof(SMD));
	LocalAnimFinished_Params.bInterrupted = bInterrupted;
	memcpy_s(&LocalAnimFinished_Params.SMData, sizeof(LocalAnimFinished_Params.SMData), &SMData, sizeof(SMData));

	uFnLocalAnimFinished->iNative = 0;
	uFnLocalAnimFinished->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnLocalAnimFinished, &LocalAnimFinished_Params, nullptr);
	uFnLocalAnimFinished->FunctionFlags |= 0x400;
	uFnLocalAnimFinished->iNative = 34848;

	memcpy_s(&SMData, sizeof(SMData), &LocalAnimFinished_Params.SMData, sizeof(LocalAnimFinished_Params.SMData));
};

// Function GearboxFramework.SpecialMoveComponent.ClearQueue
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[32757])
// Parameter Info:

void USpecialMoveComponent::ClearQueue()
{
	static UFunction* uFnClearQueue = nullptr;

	if (!uFnClearQueue)
	{
		uFnClearQueue = UFunction::FindFunction("Function GearboxFramework.SpecialMoveComponent.ClearQueue");
	}

	USpecialMoveComponent_execClearQueue_Params ClearQueue_Params;
	memset(&ClearQueue_Params, 0, sizeof(ClearQueue_Params));

	uFnClearQueue->iNative = 0;
	uFnClearQueue->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnClearQueue, &ClearQueue_Params, nullptr);
	uFnClearQueue->FunctionFlags |= 0x400;
	uFnClearQueue->iNative = 32757;
};

// Function GearboxFramework.SpecialMoveComponent.StopAnyLocal
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[36299])
// Parameter Info:
// const struct FName&            SMNodeName                     (CPF_OptionalParm | CPF_Parm)
// bool                           bInterrupted                   (CPF_OptionalParm | CPF_Parm)
// class USkeletalMeshComponent*  MeshComp                       (CPF_OptionalParm | CPF_Parm | CPF_EditInline)

void USpecialMoveComponent::StopAnyLocal(const struct FName& SMNodeName, bool bInterrupted, class USkeletalMeshComponent* MeshComp)
{
	static UFunction* uFnStopAnyLocal = nullptr;

	if (!uFnStopAnyLocal)
	{
		uFnStopAnyLocal = UFunction::FindFunction("Function GearboxFramework.SpecialMoveComponent.StopAnyLocal");
	}

	USpecialMoveComponent_execStopAnyLocal_Params StopAnyLocal_Params;
	memset(&StopAnyLocal_Params, 0, sizeof(StopAnyLocal_Params));
	memcpy_s(&StopAnyLocal_Params.SMNodeName, sizeof(StopAnyLocal_Params.SMNodeName), &SMNodeName, sizeof(SMNodeName));
	StopAnyLocal_Params.bInterrupted = bInterrupted;
	memcpy_s(&StopAnyLocal_Params.MeshComp, sizeof(StopAnyLocal_Params.MeshComp), &MeshComp, sizeof(MeshComp));

	uFnStopAnyLocal->iNative = 0;
	uFnStopAnyLocal->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnStopAnyLocal, &StopAnyLocal_Params, nullptr);
	uFnStopAnyLocal->FunctionFlags |= 0x400;
	uFnStopAnyLocal->iNative = 36299;
};

// Function GearboxFramework.SpecialMoveComponent.StopLocal
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[36305])
// Parameter Info:
// class USpecialMoveDefinition*  OldSMD                         (CPF_Parm)
// bool                           bInterrupted                   (CPF_OptionalParm | CPF_Parm)

void USpecialMoveComponent::StopLocal(class USpecialMoveDefinition* OldSMD, bool bInterrupted)
{
	static UFunction* uFnStopLocal = nullptr;

	if (!uFnStopLocal)
	{
		uFnStopLocal = UFunction::FindFunction("Function GearboxFramework.SpecialMoveComponent.StopLocal");
	}

	USpecialMoveComponent_execStopLocal_Params StopLocal_Params;
	memset(&StopLocal_Params, 0, sizeof(StopLocal_Params));
	memcpy_s(&StopLocal_Params.OldSMD, sizeof(StopLocal_Params.OldSMD), &OldSMD, sizeof(OldSMD));
	StopLocal_Params.bInterrupted = bInterrupted;

	uFnStopLocal->iNative = 0;
	uFnStopLocal->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnStopLocal, &StopLocal_Params, nullptr);
	uFnStopLocal->FunctionFlags |= 0x400;
	uFnStopLocal->iNative = 36305;
};

// Function GearboxFramework.SpecialMoveComponent.StopAny
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[36298])
// Parameter Info:
// bool                           bClearQueue                    (CPF_OptionalParm | CPF_Parm)
// bool                           bInterrupted                   (CPF_OptionalParm | CPF_Parm)

void USpecialMoveComponent::StopAny(bool bClearQueue, bool bInterrupted)
{
	static UFunction* uFnStopAny = nullptr;

	if (!uFnStopAny)
	{
		uFnStopAny = UFunction::FindFunction("Function GearboxFramework.SpecialMoveComponent.StopAny");
	}

	USpecialMoveComponent_execStopAny_Params StopAny_Params;
	memset(&StopAny_Params, 0, sizeof(StopAny_Params));
	StopAny_Params.bClearQueue = bClearQueue;
	StopAny_Params.bInterrupted = bInterrupted;

	uFnStopAny->iNative = 0;
	uFnStopAny->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnStopAny, &StopAny_Params, nullptr);
	uFnStopAny->FunctionFlags |= 0x400;
	uFnStopAny->iNative = 36298;
};

// Function GearboxFramework.SpecialMoveComponent.Stop
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[623])
// Parameter Info:
// class USpecialMoveDefinition*  OldSMD                         (CPF_Parm)
// bool                           bClearQueue                    (CPF_OptionalParm | CPF_Parm)
// bool                           bInterrupted                   (CPF_OptionalParm | CPF_Parm)

void USpecialMoveComponent::Stop(class USpecialMoveDefinition* OldSMD, bool bClearQueue, bool bInterrupted)
{
	static UFunction* uFnStop = nullptr;

	if (!uFnStop)
	{
		uFnStop = UFunction::FindFunction("Function GearboxFramework.SpecialMoveComponent.Stop");
	}

	USpecialMoveComponent_execStop_Params Stop_Params;
	memset(&Stop_Params, 0, sizeof(Stop_Params));
	memcpy_s(&Stop_Params.OldSMD, sizeof(Stop_Params.OldSMD), &OldSMD, sizeof(OldSMD));
	Stop_Params.bClearQueue = bClearQueue;
	Stop_Params.bInterrupted = bInterrupted;

	uFnStop->iNative = 0;
	uFnStop->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnStop, &Stop_Params, nullptr);
	uFnStop->FunctionFlags |= 0x400;
	uFnStop->iNative = 623;
};

// Function GearboxFramework.SpecialMoveComponent.PlayLocal
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[35469])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpecialMoveDefinition*  NewSMD                         (CPF_Parm)
// float                          PlayRateScale                  (CPF_OptionalParm | CPF_Parm)
// float                          Duration                       (CPF_OptionalParm | CPF_Parm)
// const struct FName&            CallbackName                   (CPF_OptionalParm | CPF_Parm)
// class UObject*                 CallbackObject                 (CPF_OptionalParm | CPF_Parm)
// class UObject*                 Data                           (CPF_OptionalParm | CPF_Parm)
// bool                           bSendCallbackAtEndOfSequence   (CPF_OptionalParm | CPF_Parm)
// float                          OverrideBlendInTime            (CPF_OptionalParm | CPF_Parm)

float USpecialMoveComponent::PlayLocal(class USpecialMoveDefinition* NewSMD, float PlayRateScale, float Duration, const struct FName& CallbackName, class UObject* CallbackObject, class UObject* Data, bool bSendCallbackAtEndOfSequence, float OverrideBlendInTime)
{
	static UFunction* uFnPlayLocal = nullptr;

	if (!uFnPlayLocal)
	{
		uFnPlayLocal = UFunction::FindFunction("Function GearboxFramework.SpecialMoveComponent.PlayLocal");
	}

	USpecialMoveComponent_execPlayLocal_Params PlayLocal_Params;
	memset(&PlayLocal_Params, 0, sizeof(PlayLocal_Params));
	memcpy_s(&PlayLocal_Params.NewSMD, sizeof(PlayLocal_Params.NewSMD), &NewSMD, sizeof(NewSMD));
	memcpy_s(&PlayLocal_Params.PlayRateScale, sizeof(PlayLocal_Params.PlayRateScale), &PlayRateScale, sizeof(PlayRateScale));
	memcpy_s(&PlayLocal_Params.Duration, sizeof(PlayLocal_Params.Duration), &Duration, sizeof(Duration));
	memcpy_s(&PlayLocal_Params.CallbackName, sizeof(PlayLocal_Params.CallbackName), &CallbackName, sizeof(CallbackName));
	memcpy_s(&PlayLocal_Params.CallbackObject, sizeof(PlayLocal_Params.CallbackObject), &CallbackObject, sizeof(CallbackObject));
	memcpy_s(&PlayLocal_Params.Data, sizeof(PlayLocal_Params.Data), &Data, sizeof(Data));
	PlayLocal_Params.bSendCallbackAtEndOfSequence = bSendCallbackAtEndOfSequence;
	memcpy_s(&PlayLocal_Params.OverrideBlendInTime, sizeof(PlayLocal_Params.OverrideBlendInTime), &OverrideBlendInTime, sizeof(OverrideBlendInTime));

	uFnPlayLocal->iNative = 0;
	uFnPlayLocal->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPlayLocal, &PlayLocal_Params, nullptr);
	uFnPlayLocal->FunctionFlags |= 0x400;
	uFnPlayLocal->iNative = 35469;

	return PlayLocal_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMoveComponent.Queue
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[35586])
// Parameter Info:
// class USpecialMoveDefinition*  NewSMD                         (CPF_Parm)
// float                          PlayRateScale                  (CPF_OptionalParm | CPF_Parm)
// float                          Duration                       (CPF_OptionalParm | CPF_Parm)
// const struct FName&            CallbackName                   (CPF_OptionalParm | CPF_Parm)
// class UObject*                 CallbackObject                 (CPF_OptionalParm | CPF_Parm)
// class UObject*                 Data                           (CPF_OptionalParm | CPF_Parm)
// bool                           bSendCallbackAtEndOfSequence   (CPF_OptionalParm | CPF_Parm)
// bool                           bStartOfSequence               (CPF_OptionalParm | CPF_Parm)

void USpecialMoveComponent::Queue(class USpecialMoveDefinition* NewSMD, float PlayRateScale, float Duration, const struct FName& CallbackName, class UObject* CallbackObject, class UObject* Data, bool bSendCallbackAtEndOfSequence, bool bStartOfSequence)
{
	static UFunction* uFnQueue = nullptr;

	if (!uFnQueue)
	{
		uFnQueue = UFunction::FindFunction("Function GearboxFramework.SpecialMoveComponent.Queue");
	}

	USpecialMoveComponent_execQueue_Params Queue_Params;
	memset(&Queue_Params, 0, sizeof(Queue_Params));
	memcpy_s(&Queue_Params.NewSMD, sizeof(Queue_Params.NewSMD), &NewSMD, sizeof(NewSMD));
	memcpy_s(&Queue_Params.PlayRateScale, sizeof(Queue_Params.PlayRateScale), &PlayRateScale, sizeof(PlayRateScale));
	memcpy_s(&Queue_Params.Duration, sizeof(Queue_Params.Duration), &Duration, sizeof(Duration));
	memcpy_s(&Queue_Params.CallbackName, sizeof(Queue_Params.CallbackName), &CallbackName, sizeof(CallbackName));
	memcpy_s(&Queue_Params.CallbackObject, sizeof(Queue_Params.CallbackObject), &CallbackObject, sizeof(CallbackObject));
	memcpy_s(&Queue_Params.Data, sizeof(Queue_Params.Data), &Data, sizeof(Data));
	Queue_Params.bSendCallbackAtEndOfSequence = bSendCallbackAtEndOfSequence;
	Queue_Params.bStartOfSequence = bStartOfSequence;

	uFnQueue->iNative = 0;
	uFnQueue->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnQueue, &Queue_Params, nullptr);
	uFnQueue->FunctionFlags |= 0x400;
	uFnQueue->iNative = 35586;
};

// Function GearboxFramework.SpecialMoveComponent.Play
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[765])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpecialMoveDefinition*  NewSMD                         (CPF_Parm)
// float                          PlayRateScale                  (CPF_OptionalParm | CPF_Parm)
// float                          Duration                       (CPF_OptionalParm | CPF_Parm)
// const struct FName&            CallbackName                   (CPF_OptionalParm | CPF_Parm)
// class UObject*                 CallbackObject                 (CPF_OptionalParm | CPF_Parm)
// class UObject*                 Data                           (CPF_OptionalParm | CPF_Parm)
// bool                           bSendCallbackAtEndOfSequence   (CPF_OptionalParm | CPF_Parm)
// bool                           bReplicateToServer             (CPF_OptionalParm | CPF_Parm)

float USpecialMoveComponent::Play(class USpecialMoveDefinition* NewSMD, float PlayRateScale, float Duration, const struct FName& CallbackName, class UObject* CallbackObject, class UObject* Data, bool bSendCallbackAtEndOfSequence, bool bReplicateToServer)
{
	static UFunction* uFnPlay = nullptr;

	if (!uFnPlay)
	{
		uFnPlay = UFunction::FindFunction("Function GearboxFramework.SpecialMoveComponent.Play");
	}

	USpecialMoveComponent_execPlay_Params Play_Params;
	memset(&Play_Params, 0, sizeof(Play_Params));
	memcpy_s(&Play_Params.NewSMD, sizeof(Play_Params.NewSMD), &NewSMD, sizeof(NewSMD));
	memcpy_s(&Play_Params.PlayRateScale, sizeof(Play_Params.PlayRateScale), &PlayRateScale, sizeof(PlayRateScale));
	memcpy_s(&Play_Params.Duration, sizeof(Play_Params.Duration), &Duration, sizeof(Duration));
	memcpy_s(&Play_Params.CallbackName, sizeof(Play_Params.CallbackName), &CallbackName, sizeof(CallbackName));
	memcpy_s(&Play_Params.CallbackObject, sizeof(Play_Params.CallbackObject), &CallbackObject, sizeof(CallbackObject));
	memcpy_s(&Play_Params.Data, sizeof(Play_Params.Data), &Data, sizeof(Data));
	Play_Params.bSendCallbackAtEndOfSequence = bSendCallbackAtEndOfSequence;
	Play_Params.bReplicateToServer = bReplicateToServer;

	uFnPlay->iNative = 0;
	uFnPlay->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPlay, &Play_Params, nullptr);
	uFnPlay->FunctionFlags |= 0x400;
	uFnPlay->iNative = 765;

	return Play_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMoveComponent.RemoveFromQueue
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35670])
// Parameter Info:
// class USpecialMoveDefinition*  SMD                            (CPF_Parm)

void USpecialMoveComponent::RemoveFromQueue(class USpecialMoveDefinition* SMD)
{
	static UFunction* uFnRemoveFromQueue = nullptr;

	if (!uFnRemoveFromQueue)
	{
		uFnRemoveFromQueue = UFunction::FindFunction("Function GearboxFramework.SpecialMoveComponent.RemoveFromQueue");
	}

	USpecialMoveComponent_execRemoveFromQueue_Params RemoveFromQueue_Params;
	memset(&RemoveFromQueue_Params, 0, sizeof(RemoveFromQueue_Params));
	memcpy_s(&RemoveFromQueue_Params.SMD, sizeof(RemoveFromQueue_Params.SMD), &SMD, sizeof(SMD));

	uFnRemoveFromQueue->iNative = 0;
	uFnRemoveFromQueue->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnRemoveFromQueue, &RemoveFromQueue_Params, nullptr);
	uFnRemoveFromQueue->FunctionFlags |= 0x400;
	uFnRemoveFromQueue->iNative = 35670;
};

// Function GearboxFramework.SpecialMoveComponent.IsQueued
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34687])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpecialMoveDefinition*  SMD                            (CPF_Parm)

bool USpecialMoveComponent::IsQueued(class USpecialMoveDefinition* SMD)
{
	static UFunction* uFnIsQueued = nullptr;

	if (!uFnIsQueued)
	{
		uFnIsQueued = UFunction::FindFunction("Function GearboxFramework.SpecialMoveComponent.IsQueued");
	}

	USpecialMoveComponent_execIsQueued_Params IsQueued_Params;
	memset(&IsQueued_Params, 0, sizeof(IsQueued_Params));
	memcpy_s(&IsQueued_Params.SMD, sizeof(IsQueued_Params.SMD), &SMD, sizeof(SMD));

	uFnIsQueued->iNative = 0;
	uFnIsQueued->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsQueued, &IsQueued_Params, nullptr);
	uFnIsQueued->FunctionFlags |= 0x400;
	uFnIsQueued->iNative = 34687;

	return IsQueued_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMoveComponent.IsPlayingClass
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34684])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UClass*                  SMClass                        (CPF_Parm)

bool USpecialMoveComponent::IsPlayingClass(class UClass* SMClass)
{
	static UFunction* uFnIsPlayingClass = nullptr;

	if (!uFnIsPlayingClass)
	{
		uFnIsPlayingClass = UFunction::FindFunction("Function GearboxFramework.SpecialMoveComponent.IsPlayingClass");
	}

	USpecialMoveComponent_execIsPlayingClass_Params IsPlayingClass_Params;
	memset(&IsPlayingClass_Params, 0, sizeof(IsPlayingClass_Params));
	memcpy_s(&IsPlayingClass_Params.SMClass, sizeof(IsPlayingClass_Params.SMClass), &SMClass, sizeof(SMClass));

	uFnIsPlayingClass->iNative = 0;
	uFnIsPlayingClass->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsPlayingClass, &IsPlayingClass_Params, nullptr);
	uFnIsPlayingClass->FunctionFlags |= 0x400;
	uFnIsPlayingClass->iNative = 34684;

	return IsPlayingClass_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMoveComponent.IsPlayingAny
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34683])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool USpecialMoveComponent::IsPlayingAny()
{
	static UFunction* uFnIsPlayingAny = nullptr;

	if (!uFnIsPlayingAny)
	{
		uFnIsPlayingAny = UFunction::FindFunction("Function GearboxFramework.SpecialMoveComponent.IsPlayingAny");
	}

	USpecialMoveComponent_execIsPlayingAny_Params IsPlayingAny_Params;
	memset(&IsPlayingAny_Params, 0, sizeof(IsPlayingAny_Params));

	uFnIsPlayingAny->iNative = 0;
	uFnIsPlayingAny->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsPlayingAny, &IsPlayingAny_Params, nullptr);
	uFnIsPlayingAny->FunctionFlags |= 0x400;
	uFnIsPlayingAny->iNative = 34683;

	return IsPlayingAny_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMoveComponent.IsPlaying
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34682])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpecialMoveDefinition*  SMD                            (CPF_Parm)

bool USpecialMoveComponent::IsPlaying(class USpecialMoveDefinition* SMD)
{
	static UFunction* uFnIsPlaying = nullptr;

	if (!uFnIsPlaying)
	{
		uFnIsPlaying = UFunction::FindFunction("Function GearboxFramework.SpecialMoveComponent.IsPlaying");
	}

	USpecialMoveComponent_execIsPlaying_Params IsPlaying_Params;
	memset(&IsPlaying_Params, 0, sizeof(IsPlaying_Params));
	memcpy_s(&IsPlaying_Params.SMD, sizeof(IsPlaying_Params.SMD), &SMD, sizeof(SMD));

	uFnIsPlaying->iNative = 0;
	uFnIsPlaying->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsPlaying, &IsPlaying_Params, nullptr);
	uFnIsPlaying->FunctionFlags |= 0x400;
	uFnIsPlaying->iNative = 34682;

	return IsPlaying_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMoveComponent.GetAnimRotation
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34043])
// Parameter Info:
// struct FRotator                ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UGearboxAnimDefinition*  CustomAnimSMD                  (CPF_Parm)

struct FRotator USpecialMoveComponent::GetAnimRotation(class UGearboxAnimDefinition* CustomAnimSMD)
{
	static UFunction* uFnGetAnimRotation = nullptr;

	if (!uFnGetAnimRotation)
	{
		uFnGetAnimRotation = UFunction::FindFunction("Function GearboxFramework.SpecialMoveComponent.GetAnimRotation");
	}

	USpecialMoveComponent_execGetAnimRotation_Params GetAnimRotation_Params;
	memset(&GetAnimRotation_Params, 0, sizeof(GetAnimRotation_Params));
	memcpy_s(&GetAnimRotation_Params.CustomAnimSMD, sizeof(GetAnimRotation_Params.CustomAnimSMD), &CustomAnimSMD, sizeof(CustomAnimSMD));

	uFnGetAnimRotation->iNative = 0;
	uFnGetAnimRotation->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAnimRotation, &GetAnimRotation_Params, nullptr);
	uFnGetAnimRotation->FunctionFlags |= 0x400;
	uFnGetAnimRotation->iNative = 34043;

	return GetAnimRotation_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMoveComponent.GetAnimDelta
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34042])
// Parameter Info:
// struct FVector                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UGearboxAnimDefinition*  CustomAnimSMD                  (CPF_Parm)

struct FVector USpecialMoveComponent::GetAnimDelta(class UGearboxAnimDefinition* CustomAnimSMD)
{
	static UFunction* uFnGetAnimDelta = nullptr;

	if (!uFnGetAnimDelta)
	{
		uFnGetAnimDelta = UFunction::FindFunction("Function GearboxFramework.SpecialMoveComponent.GetAnimDelta");
	}

	USpecialMoveComponent_execGetAnimDelta_Params GetAnimDelta_Params;
	memset(&GetAnimDelta_Params, 0, sizeof(GetAnimDelta_Params));
	memcpy_s(&GetAnimDelta_Params.CustomAnimSMD, sizeof(GetAnimDelta_Params.CustomAnimSMD), &CustomAnimSMD, sizeof(CustomAnimSMD));

	uFnGetAnimDelta->iNative = 0;
	uFnGetAnimDelta->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAnimDelta, &GetAnimDelta_Params, nullptr);
	uFnGetAnimDelta->FunctionFlags |= 0x400;
	uFnGetAnimDelta->iNative = 34042;

	return GetAnimDelta_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMoveComponent.GetSMNode
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34211])
// Parameter Info:
// class UAnimNodeSpecialMoveBlend* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UAnimNodeSpecialMoveBlend* USpecialMoveComponent::GetSMNode()
{
	static UFunction* uFnGetSMNode = nullptr;

	if (!uFnGetSMNode)
	{
		uFnGetSMNode = UFunction::FindFunction("Function GearboxFramework.SpecialMoveComponent.GetSMNode");
	}

	USpecialMoveComponent_execGetSMNode_Params GetSMNode_Params;
	memset(&GetSMNode_Params, 0, sizeof(GetSMNode_Params));

	uFnGetSMNode->iNative = 0;
	uFnGetSMNode->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetSMNode, &GetSMNode_Params, nullptr);
	uFnGetSMNode->FunctionFlags |= 0x400;
	uFnGetSMNode->iNative = 34211;

	return GetSMNode_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMoveComponent.PlayReplicated
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35478])
// Parameter Info:
// const struct FReplicatedSpecialMoveData& NewSMData                      (CPF_Parm)

void USpecialMoveComponent::PlayReplicated(const struct FReplicatedSpecialMoveData& NewSMData)
{
	static UFunction* uFnPlayReplicated = nullptr;

	if (!uFnPlayReplicated)
	{
		uFnPlayReplicated = UFunction::FindFunction("Function GearboxFramework.SpecialMoveComponent.PlayReplicated");
	}

	USpecialMoveComponent_execPlayReplicated_Params PlayReplicated_Params;
	memset(&PlayReplicated_Params, 0, sizeof(PlayReplicated_Params));
	memcpy_s(&PlayReplicated_Params.NewSMData, sizeof(PlayReplicated_Params.NewSMData), &NewSMData, sizeof(NewSMData));

	uFnPlayReplicated->iNative = 0;
	uFnPlayReplicated->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPlayReplicated, &PlayReplicated_Params, nullptr);
	uFnPlayReplicated->FunctionFlags |= 0x400;
	uFnPlayReplicated->iNative = 35478;
};

// Function GearboxFramework.SpecialMoveComponent.GetAnimLength
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[23549])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UGearboxAnimDefinition*  CustomAnimSMD                  (CPF_Parm)
// bool                           bIncludeNextSMD                (CPF_OptionalParm | CPF_Parm)
// class USkeletalMeshComponent*  SMC                            (CPF_OptionalParm | CPF_Parm | CPF_EditInline)

float USpecialMoveComponent::GetAnimLength(class UGearboxAnimDefinition* CustomAnimSMD, bool bIncludeNextSMD, class USkeletalMeshComponent* SMC)
{
	static UFunction* uFnGetAnimLength = nullptr;

	if (!uFnGetAnimLength)
	{
		uFnGetAnimLength = UFunction::FindFunction("Function GearboxFramework.SpecialMoveComponent.GetAnimLength");
	}

	USpecialMoveComponent_execGetAnimLength_Params GetAnimLength_Params;
	memset(&GetAnimLength_Params, 0, sizeof(GetAnimLength_Params));
	memcpy_s(&GetAnimLength_Params.CustomAnimSMD, sizeof(GetAnimLength_Params.CustomAnimSMD), &CustomAnimSMD, sizeof(CustomAnimSMD));
	GetAnimLength_Params.bIncludeNextSMD = bIncludeNextSMD;
	memcpy_s(&GetAnimLength_Params.SMC, sizeof(GetAnimLength_Params.SMC), &SMC, sizeof(SMC));

	uFnGetAnimLength->iNative = 0;
	uFnGetAnimLength->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAnimLength, &GetAnimLength_Params, nullptr);
	uFnGetAnimLength->FunctionFlags |= 0x400;
	uFnGetAnimLength->iNative = 23549;

	return GetAnimLength_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMoveDefinition.AllowSkelUpdateThrottling
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[31849])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool USpecialMoveDefinition::AllowSkelUpdateThrottling()
{
	static UFunction* uFnAllowSkelUpdateThrottling = nullptr;

	if (!uFnAllowSkelUpdateThrottling)
	{
		uFnAllowSkelUpdateThrottling = UFunction::FindFunction("Function GearboxFramework.SpecialMoveDefinition.AllowSkelUpdateThrottling");
	}

	USpecialMoveDefinition_execAllowSkelUpdateThrottling_Params AllowSkelUpdateThrottling_Params;
	memset(&AllowSkelUpdateThrottling_Params, 0, sizeof(AllowSkelUpdateThrottling_Params));

	uFnAllowSkelUpdateThrottling->iNative = 0;
	uFnAllowSkelUpdateThrottling->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnAllowSkelUpdateThrottling, &AllowSkelUpdateThrottling_Params, nullptr);
	uFnAllowSkelUpdateThrottling->FunctionFlags |= 0x400;
	uFnAllowSkelUpdateThrottling->iNative = 31849;

	return AllowSkelUpdateThrottling_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMoveDefinition.ShouldStopWhenDurationExpires
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35955])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool USpecialMoveDefinition::ShouldStopWhenDurationExpires()
{
	static UFunction* uFnShouldStopWhenDurationExpires = nullptr;

	if (!uFnShouldStopWhenDurationExpires)
	{
		uFnShouldStopWhenDurationExpires = UFunction::FindFunction("Function GearboxFramework.SpecialMoveDefinition.ShouldStopWhenDurationExpires");
	}

	USpecialMoveDefinition_execShouldStopWhenDurationExpires_Params ShouldStopWhenDurationExpires_Params;
	memset(&ShouldStopWhenDurationExpires_Params, 0, sizeof(ShouldStopWhenDurationExpires_Params));

	uFnShouldStopWhenDurationExpires->iNative = 0;
	uFnShouldStopWhenDurationExpires->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnShouldStopWhenDurationExpires, &ShouldStopWhenDurationExpires_Params, nullptr);
	uFnShouldStopWhenDurationExpires->FunctionFlags |= 0x400;
	uFnShouldStopWhenDurationExpires->iNative = 35955;

	return ShouldStopWhenDurationExpires_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMoveDefinition.IsPlayingLocally
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpecialMoveInterface*   SMI                            (CPF_Parm)

bool USpecialMoveDefinition::eventIsPlayingLocally(class USpecialMoveInterface* SMI)
{
	static UFunction* uFnIsPlayingLocally = nullptr;

	if (!uFnIsPlayingLocally)
	{
		uFnIsPlayingLocally = UFunction::FindFunction("Function GearboxFramework.SpecialMoveDefinition.IsPlayingLocally");
	}

	USpecialMoveDefinition_eventIsPlayingLocally_Params IsPlayingLocally_Params;
	memset(&IsPlayingLocally_Params, 0, sizeof(IsPlayingLocally_Params));
	memcpy_s(&IsPlayingLocally_Params.SMI, sizeof(IsPlayingLocally_Params.SMI), &SMI, sizeof(SMI));

	this->ProcessEvent(uFnIsPlayingLocally, &IsPlayingLocally_Params, nullptr);

	return IsPlayingLocally_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMoveDefinition.GetSMDToPlay
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34210])
// Parameter Info:
// class USpecialMoveDefinition*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpecialMoveInterface*   SMI                            (CPF_Parm)

class USpecialMoveDefinition* USpecialMoveDefinition::GetSMDToPlay(class USpecialMoveInterface* SMI)
{
	static UFunction* uFnGetSMDToPlay = nullptr;

	if (!uFnGetSMDToPlay)
	{
		uFnGetSMDToPlay = UFunction::FindFunction("Function GearboxFramework.SpecialMoveDefinition.GetSMDToPlay");
	}

	USpecialMoveDefinition_execGetSMDToPlay_Params GetSMDToPlay_Params;
	memset(&GetSMDToPlay_Params, 0, sizeof(GetSMDToPlay_Params));
	memcpy_s(&GetSMDToPlay_Params.SMI, sizeof(GetSMDToPlay_Params.SMI), &SMI, sizeof(SMI));

	uFnGetSMDToPlay->iNative = 0;
	uFnGetSMDToPlay->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetSMDToPlay, &GetSMDToPlay_Params, nullptr);
	uFnGetSMDToPlay->FunctionFlags |= 0x400;
	uFnGetSMDToPlay->iNative = 34210;

	return GetSMDToPlay_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMoveDefinition.Contains
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[21016])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpecialMoveDefinition*  SMD                            (CPF_Parm)
// class USpecialMoveInterface*   SMI                            (CPF_Parm)

bool USpecialMoveDefinition::Contains(class USpecialMoveDefinition* SMD, class USpecialMoveInterface* SMI)
{
	static UFunction* uFnContains = nullptr;

	if (!uFnContains)
	{
		uFnContains = UFunction::FindFunction("Function GearboxFramework.SpecialMoveDefinition.Contains");
	}

	USpecialMoveDefinition_execContains_Params Contains_Params;
	memset(&Contains_Params, 0, sizeof(Contains_Params));
	memcpy_s(&Contains_Params.SMD, sizeof(Contains_Params.SMD), &SMD, sizeof(SMD));
	memcpy_s(&Contains_Params.SMI, sizeof(Contains_Params.SMI), &SMI, sizeof(SMI));

	uFnContains->iNative = 0;
	uFnContains->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnContains, &Contains_Params, nullptr);
	uFnContains->FunctionFlags |= 0x400;
	uFnContains->iNative = 21016;

	return Contains_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMoveDefinition.ClientFinished
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class USpecialMoveInterface*   SMI                            (CPF_Parm)
// bool                           bInterrupted                   (CPF_Parm)

void USpecialMoveDefinition::eventClientFinished(class USpecialMoveInterface* SMI, bool bInterrupted)
{
	static UFunction* uFnClientFinished = nullptr;

	if (!uFnClientFinished)
	{
		uFnClientFinished = UFunction::FindFunction("Function GearboxFramework.SpecialMoveDefinition.ClientFinished");
	}

	USpecialMoveDefinition_eventClientFinished_Params ClientFinished_Params;
	memset(&ClientFinished_Params, 0, sizeof(ClientFinished_Params));
	memcpy_s(&ClientFinished_Params.SMI, sizeof(ClientFinished_Params.SMI), &SMI, sizeof(SMI));
	ClientFinished_Params.bInterrupted = bInterrupted;

	this->ProcessEvent(uFnClientFinished, &ClientFinished_Params, nullptr);
};

// Function GearboxFramework.SpecialMoveDefinition.ServerFinished
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class USpecialMoveInterface*   SMI                            (CPF_Parm)
// bool                           bInterrupted                   (CPF_Parm)

void USpecialMoveDefinition::eventServerFinished(class USpecialMoveInterface* SMI, bool bInterrupted)
{
	static UFunction* uFnServerFinished = nullptr;

	if (!uFnServerFinished)
	{
		uFnServerFinished = UFunction::FindFunction("Function GearboxFramework.SpecialMoveDefinition.ServerFinished");
	}

	USpecialMoveDefinition_eventServerFinished_Params ServerFinished_Params;
	memset(&ServerFinished_Params, 0, sizeof(ServerFinished_Params));
	memcpy_s(&ServerFinished_Params.SMI, sizeof(ServerFinished_Params.SMI), &SMI, sizeof(SMI));
	ServerFinished_Params.bInterrupted = bInterrupted;

	this->ProcessEvent(uFnServerFinished, &ServerFinished_Params, nullptr);
};

// Function GearboxFramework.SpecialMoveDefinition.ClientStarted
// [0x12420800] (FUNC_Event | FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpecialMoveInterface*   SMI                            (CPF_Parm)
// struct FSpecialMoveData        SMData                         (CPF_Parm | CPF_OutParm)

float USpecialMoveDefinition::eventClientStarted(class USpecialMoveInterface* SMI, struct FSpecialMoveData& SMData)
{
	static UFunction* uFnClientStarted = nullptr;

	if (!uFnClientStarted)
	{
		uFnClientStarted = UFunction::FindFunction("Function GearboxFramework.SpecialMoveDefinition.ClientStarted");
	}

	USpecialMoveDefinition_eventClientStarted_Params ClientStarted_Params;
	memset(&ClientStarted_Params, 0, sizeof(ClientStarted_Params));
	memcpy_s(&ClientStarted_Params.SMI, sizeof(ClientStarted_Params.SMI), &SMI, sizeof(SMI));
	memcpy_s(&ClientStarted_Params.SMData, sizeof(ClientStarted_Params.SMData), &SMData, sizeof(SMData));

	this->ProcessEvent(uFnClientStarted, &ClientStarted_Params, nullptr);

	memcpy_s(&SMData, sizeof(SMData), &ClientStarted_Params.SMData, sizeof(ClientStarted_Params.SMData));

	return ClientStarted_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMoveDefinition.ServerStarted
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class USpecialMoveInterface*   SMI                            (CPF_Parm)

void USpecialMoveDefinition::eventServerStarted(class USpecialMoveInterface* SMI)
{
	static UFunction* uFnServerStarted = nullptr;

	if (!uFnServerStarted)
	{
		uFnServerStarted = UFunction::FindFunction("Function GearboxFramework.SpecialMoveDefinition.ServerStarted");
	}

	USpecialMoveDefinition_eventServerStarted_Params ServerStarted_Params;
	memset(&ServerStarted_Params, 0, sizeof(ServerStarted_Params));
	memcpy_s(&ServerStarted_Params.SMI, sizeof(ServerStarted_Params.SMI), &SMI, sizeof(SMI));

	this->ProcessEvent(uFnServerStarted, &ServerStarted_Params, nullptr);
};

// Function GearboxFramework.SpecialMoveDefinition.IsLocalAuthority
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34673])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpecialMoveInterface*   SMI                            (CPF_Parm)

bool USpecialMoveDefinition::IsLocalAuthority(class USpecialMoveInterface* SMI)
{
	static UFunction* uFnIsLocalAuthority = nullptr;

	if (!uFnIsLocalAuthority)
	{
		uFnIsLocalAuthority = UFunction::FindFunction("Function GearboxFramework.SpecialMoveDefinition.IsLocalAuthority");
	}

	USpecialMoveDefinition_execIsLocalAuthority_Params IsLocalAuthority_Params;
	memset(&IsLocalAuthority_Params, 0, sizeof(IsLocalAuthority_Params));
	memcpy_s(&IsLocalAuthority_Params.SMI, sizeof(IsLocalAuthority_Params.SMI), &SMI, sizeof(SMI));

	uFnIsLocalAuthority->iNative = 0;
	uFnIsLocalAuthority->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsLocalAuthority, &IsLocalAuthority_Params, nullptr);
	uFnIsLocalAuthority->FunctionFlags |= 0x400;
	uFnIsLocalAuthority->iNative = 34673;

	return IsLocalAuthority_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMoveDefinition.AuthorityCanPlay
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpecialMoveInterface*   SMI                            (CPF_Parm)

bool USpecialMoveDefinition::eventAuthorityCanPlay(class USpecialMoveInterface* SMI)
{
	static UFunction* uFnAuthorityCanPlay = nullptr;

	if (!uFnAuthorityCanPlay)
	{
		uFnAuthorityCanPlay = UFunction::FindFunction("Function GearboxFramework.SpecialMoveDefinition.AuthorityCanPlay");
	}

	USpecialMoveDefinition_eventAuthorityCanPlay_Params AuthorityCanPlay_Params;
	memset(&AuthorityCanPlay_Params, 0, sizeof(AuthorityCanPlay_Params));
	memcpy_s(&AuthorityCanPlay_Params.SMI, sizeof(AuthorityCanPlay_Params.SMI), &SMI, sizeof(SMI));

	this->ProcessEvent(uFnAuthorityCanPlay, &AuthorityCanPlay_Params, nullptr);

	return AuthorityCanPlay_Params.ReturnValue;
};

// Function GearboxFramework.GearboxAnimDefinition.StopAnim_FP
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class USpecialMoveInterface*   SMI                            (CPF_Parm)
// bool                           bInterrupted                   (CPF_Parm)

void UGearboxAnimDefinition::StopAnim_FP(class USpecialMoveInterface* SMI, bool bInterrupted)
{
	static UFunction* uFnStopAnim_FP = nullptr;

	if (!uFnStopAnim_FP)
	{
		uFnStopAnim_FP = UFunction::FindFunction("Function GearboxFramework.GearboxAnimDefinition.StopAnim_FP");
	}

	UGearboxAnimDefinition_execStopAnim_FP_Params StopAnim_FP_Params;
	memset(&StopAnim_FP_Params, 0, sizeof(StopAnim_FP_Params));
	memcpy_s(&StopAnim_FP_Params.SMI, sizeof(StopAnim_FP_Params.SMI), &SMI, sizeof(SMI));
	StopAnim_FP_Params.bInterrupted = bInterrupted;

	this->ProcessEvent(uFnStopAnim_FP, &StopAnim_FP_Params, nullptr);
};

// Function GearboxFramework.GearboxAnimDefinition.PlayAnim_FP
// [0x12420000] (FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpecialMoveInterface*   SMI                            (CPF_Parm)
// struct FSpecialMoveData        SMData                         (CPF_Parm | CPF_OutParm)

float UGearboxAnimDefinition::PlayAnim_FP(class USpecialMoveInterface* SMI, struct FSpecialMoveData& SMData)
{
	static UFunction* uFnPlayAnim_FP = nullptr;

	if (!uFnPlayAnim_FP)
	{
		uFnPlayAnim_FP = UFunction::FindFunction("Function GearboxFramework.GearboxAnimDefinition.PlayAnim_FP");
	}

	UGearboxAnimDefinition_execPlayAnim_FP_Params PlayAnim_FP_Params;
	memset(&PlayAnim_FP_Params, 0, sizeof(PlayAnim_FP_Params));
	memcpy_s(&PlayAnim_FP_Params.SMI, sizeof(PlayAnim_FP_Params.SMI), &SMI, sizeof(SMI));
	memcpy_s(&PlayAnim_FP_Params.SMData, sizeof(PlayAnim_FP_Params.SMData), &SMData, sizeof(SMData));

	this->ProcessEvent(uFnPlayAnim_FP, &PlayAnim_FP_Params, nullptr);

	memcpy_s(&SMData, sizeof(SMData), &PlayAnim_FP_Params.SMData, sizeof(PlayAnim_FP_Params.SMData));

	return PlayAnim_FP_Params.ReturnValue;
};

// Function GearboxFramework.GearboxAnimDefinition.GetSMNode_FP
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UAnimNodeSpecialMoveBlend* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpecialMoveInterface*   SMI                            (CPF_Parm)

class UAnimNodeSpecialMoveBlend* UGearboxAnimDefinition::GetSMNode_FP(class USpecialMoveInterface* SMI)
{
	static UFunction* uFnGetSMNode_FP = nullptr;

	if (!uFnGetSMNode_FP)
	{
		uFnGetSMNode_FP = UFunction::FindFunction("Function GearboxFramework.GearboxAnimDefinition.GetSMNode_FP");
	}

	UGearboxAnimDefinition_execGetSMNode_FP_Params GetSMNode_FP_Params;
	memset(&GetSMNode_FP_Params, 0, sizeof(GetSMNode_FP_Params));
	memcpy_s(&GetSMNode_FP_Params.SMI, sizeof(GetSMNode_FP_Params.SMI), &SMI, sizeof(SMI));

	this->ProcessEvent(uFnGetSMNode_FP, &GetSMNode_FP_Params, nullptr);

	return GetSMNode_FP_Params.ReturnValue;
};

// Function GearboxFramework.GearboxAnimDefinition.ShouldStopWhenDurationExpires
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35955])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGearboxAnimDefinition::ShouldStopWhenDurationExpires()
{
	static UFunction* uFnShouldStopWhenDurationExpires = nullptr;

	if (!uFnShouldStopWhenDurationExpires)
	{
		uFnShouldStopWhenDurationExpires = UFunction::FindFunction("Function GearboxFramework.GearboxAnimDefinition.ShouldStopWhenDurationExpires");
	}

	UGearboxAnimDefinition_execShouldStopWhenDurationExpires_Params ShouldStopWhenDurationExpires_Params;
	memset(&ShouldStopWhenDurationExpires_Params, 0, sizeof(ShouldStopWhenDurationExpires_Params));

	uFnShouldStopWhenDurationExpires->iNative = 0;
	uFnShouldStopWhenDurationExpires->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnShouldStopWhenDurationExpires, &ShouldStopWhenDurationExpires_Params, nullptr);
	uFnShouldStopWhenDurationExpires->FunctionFlags |= 0x400;
	uFnShouldStopWhenDurationExpires->iNative = 35955;

	return ShouldStopWhenDurationExpires_Params.ReturnValue;
};

// Function GearboxFramework.GearboxAnimDefinition.GetAnimLength
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[23549])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USkeletalMeshComponent*  SMC                            (CPF_Parm | CPF_EditInline)

float UGearboxAnimDefinition::GetAnimLength(class USkeletalMeshComponent* SMC)
{
	static UFunction* uFnGetAnimLength = nullptr;

	if (!uFnGetAnimLength)
	{
		uFnGetAnimLength = UFunction::FindFunction("Function GearboxFramework.GearboxAnimDefinition.GetAnimLength");
	}

	UGearboxAnimDefinition_execGetAnimLength_Params GetAnimLength_Params;
	memset(&GetAnimLength_Params, 0, sizeof(GetAnimLength_Params));
	memcpy_s(&GetAnimLength_Params.SMC, sizeof(GetAnimLength_Params.SMC), &SMC, sizeof(SMC));

	uFnGetAnimLength->iNative = 0;
	uFnGetAnimLength->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetAnimLength, &GetAnimLength_Params, nullptr);
	uFnGetAnimLength->FunctionFlags |= 0x400;
	uFnGetAnimLength->iNative = 23549;

	return GetAnimLength_Params.ReturnValue;
};

// Function GearboxFramework.GearboxAnimDefinition.IsPlayingLocally
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpecialMoveInterface*   SMI                            (CPF_Parm)

bool UGearboxAnimDefinition::eventIsPlayingLocally(class USpecialMoveInterface* SMI)
{
	static UFunction* uFnIsPlayingLocally = nullptr;

	if (!uFnIsPlayingLocally)
	{
		uFnIsPlayingLocally = UFunction::FindFunction("Function GearboxFramework.GearboxAnimDefinition.IsPlayingLocally");
	}

	UGearboxAnimDefinition_eventIsPlayingLocally_Params IsPlayingLocally_Params;
	memset(&IsPlayingLocally_Params, 0, sizeof(IsPlayingLocally_Params));
	memcpy_s(&IsPlayingLocally_Params.SMI, sizeof(IsPlayingLocally_Params.SMI), &SMI, sizeof(SMI));

	this->ProcessEvent(uFnIsPlayingLocally, &IsPlayingLocally_Params, nullptr);

	return IsPlayingLocally_Params.ReturnValue;
};

// Function GearboxFramework.GearboxAnimDefinition.GetSMNode
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class UAnimNodeSpecialMoveBlend* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpecialMoveInterface*   SMI                            (CPF_Parm)

class UAnimNodeSpecialMoveBlend* UGearboxAnimDefinition::GetSMNode(class USpecialMoveInterface* SMI)
{
	static UFunction* uFnGetSMNode = nullptr;

	if (!uFnGetSMNode)
	{
		uFnGetSMNode = UFunction::FindFunction("Function GearboxFramework.GearboxAnimDefinition.GetSMNode");
	}

	UGearboxAnimDefinition_execGetSMNode_Params GetSMNode_Params;
	memset(&GetSMNode_Params, 0, sizeof(GetSMNode_Params));
	memcpy_s(&GetSMNode_Params.SMI, sizeof(GetSMNode_Params.SMI), &SMI, sizeof(SMI));

	this->ProcessEvent(uFnGetSMNode, &GetSMNode_Params, nullptr);

	return GetSMNode_Params.ReturnValue;
};

// Function GearboxFramework.GearboxAnimDefinition.PlayAnim
// [0x12420000] (FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpecialMoveInterface*   SMI                            (CPF_Parm)
// struct FSpecialMoveData        SMData                         (CPF_Parm | CPF_OutParm)

float UGearboxAnimDefinition::PlayAnim(class USpecialMoveInterface* SMI, struct FSpecialMoveData& SMData)
{
	static UFunction* uFnPlayAnim = nullptr;

	if (!uFnPlayAnim)
	{
		uFnPlayAnim = UFunction::FindFunction("Function GearboxFramework.GearboxAnimDefinition.PlayAnim");
	}

	UGearboxAnimDefinition_execPlayAnim_Params PlayAnim_Params;
	memset(&PlayAnim_Params, 0, sizeof(PlayAnim_Params));
	memcpy_s(&PlayAnim_Params.SMI, sizeof(PlayAnim_Params.SMI), &SMI, sizeof(SMI));
	memcpy_s(&PlayAnim_Params.SMData, sizeof(PlayAnim_Params.SMData), &SMData, sizeof(SMData));

	this->ProcessEvent(uFnPlayAnim, &PlayAnim_Params, nullptr);

	memcpy_s(&SMData, sizeof(SMData), &PlayAnim_Params.SMData, sizeof(PlayAnim_Params.SMData));

	return PlayAnim_Params.ReturnValue;
};

// Function GearboxFramework.GearboxAnimDefinition.AnimFinished
// [0x12420802] (FUNC_Defined | FUNC_Event | FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class USpecialMoveInterface*   SMI                            (CPF_Parm)
// class UAnimNodeSpecialMoveBlend* BlendNode                      (CPF_Parm)
// bool                           bInterrupted                   (CPF_Parm)
// struct FSpecialMoveData        SMData                         (CPF_Parm | CPF_OutParm)

void UGearboxAnimDefinition::eventAnimFinished(class USpecialMoveInterface* SMI, class UAnimNodeSpecialMoveBlend* BlendNode, bool bInterrupted, struct FSpecialMoveData& SMData)
{
	static UFunction* uFnAnimFinished = nullptr;

	if (!uFnAnimFinished)
	{
		uFnAnimFinished = UFunction::FindFunction("Function GearboxFramework.GearboxAnimDefinition.AnimFinished");
	}

	UGearboxAnimDefinition_eventAnimFinished_Params AnimFinished_Params;
	memset(&AnimFinished_Params, 0, sizeof(AnimFinished_Params));
	memcpy_s(&AnimFinished_Params.SMI, sizeof(AnimFinished_Params.SMI), &SMI, sizeof(SMI));
	memcpy_s(&AnimFinished_Params.BlendNode, sizeof(AnimFinished_Params.BlendNode), &BlendNode, sizeof(BlendNode));
	AnimFinished_Params.bInterrupted = bInterrupted;
	memcpy_s(&AnimFinished_Params.SMData, sizeof(AnimFinished_Params.SMData), &SMData, sizeof(SMData));

	this->ProcessEvent(uFnAnimFinished, &AnimFinished_Params, nullptr);

	memcpy_s(&SMData, sizeof(SMData), &AnimFinished_Params.SMData, sizeof(AnimFinished_Params.SMData));
};

// Function GearboxFramework.GearboxAnimDefinition.ClientFinished
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class USpecialMoveInterface*   SMI                            (CPF_Parm)
// bool                           bInterrupted                   (CPF_Parm)

void UGearboxAnimDefinition::eventClientFinished(class USpecialMoveInterface* SMI, bool bInterrupted)
{
	static UFunction* uFnClientFinished = nullptr;

	if (!uFnClientFinished)
	{
		uFnClientFinished = UFunction::FindFunction("Function GearboxFramework.GearboxAnimDefinition.ClientFinished");
	}

	UGearboxAnimDefinition_eventClientFinished_Params ClientFinished_Params;
	memset(&ClientFinished_Params, 0, sizeof(ClientFinished_Params));
	memcpy_s(&ClientFinished_Params.SMI, sizeof(ClientFinished_Params.SMI), &SMI, sizeof(SMI));
	ClientFinished_Params.bInterrupted = bInterrupted;

	this->ProcessEvent(uFnClientFinished, &ClientFinished_Params, nullptr);
};

// Function GearboxFramework.GearboxAnimDefinition.ClientStarted
// [0x12420800] (FUNC_Event | FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpecialMoveInterface*   SMI                            (CPF_Parm)
// struct FSpecialMoveData        SMData                         (CPF_Parm | CPF_OutParm)

float UGearboxAnimDefinition::eventClientStarted(class USpecialMoveInterface* SMI, struct FSpecialMoveData& SMData)
{
	static UFunction* uFnClientStarted = nullptr;

	if (!uFnClientStarted)
	{
		uFnClientStarted = UFunction::FindFunction("Function GearboxFramework.GearboxAnimDefinition.ClientStarted");
	}

	UGearboxAnimDefinition_eventClientStarted_Params ClientStarted_Params;
	memset(&ClientStarted_Params, 0, sizeof(ClientStarted_Params));
	memcpy_s(&ClientStarted_Params.SMI, sizeof(ClientStarted_Params.SMI), &SMI, sizeof(SMI));
	memcpy_s(&ClientStarted_Params.SMData, sizeof(ClientStarted_Params.SMData), &SMData, sizeof(SMData));

	this->ProcessEvent(uFnClientStarted, &ClientStarted_Params, nullptr);

	memcpy_s(&SMData, sizeof(SMData), &ClientStarted_Params.SMData, sizeof(ClientStarted_Params.SMData));

	return ClientStarted_Params.ReturnValue;
};

// Function GearboxFramework.GearboxAnimDefinition.ServerFinished
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class USpecialMoveInterface*   SMI                            (CPF_Parm)
// bool                           bInterrupted                   (CPF_Parm)

void UGearboxAnimDefinition::eventServerFinished(class USpecialMoveInterface* SMI, bool bInterrupted)
{
	static UFunction* uFnServerFinished = nullptr;

	if (!uFnServerFinished)
	{
		uFnServerFinished = UFunction::FindFunction("Function GearboxFramework.GearboxAnimDefinition.ServerFinished");
	}

	UGearboxAnimDefinition_eventServerFinished_Params ServerFinished_Params;
	memset(&ServerFinished_Params, 0, sizeof(ServerFinished_Params));
	memcpy_s(&ServerFinished_Params.SMI, sizeof(ServerFinished_Params.SMI), &SMI, sizeof(SMI));
	ServerFinished_Params.bInterrupted = bInterrupted;

	this->ProcessEvent(uFnServerFinished, &ServerFinished_Params, nullptr);
};

// Function GearboxFramework.GearboxAnimDefinition.ServerStarted
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class USpecialMoveInterface*   SMI                            (CPF_Parm)

void UGearboxAnimDefinition::eventServerStarted(class USpecialMoveInterface* SMI)
{
	static UFunction* uFnServerStarted = nullptr;

	if (!uFnServerStarted)
	{
		uFnServerStarted = UFunction::FindFunction("Function GearboxFramework.GearboxAnimDefinition.ServerStarted");
	}

	UGearboxAnimDefinition_eventServerStarted_Params ServerStarted_Params;
	memset(&ServerStarted_Params, 0, sizeof(ServerStarted_Params));
	memcpy_s(&ServerStarted_Params.SMI, sizeof(ServerStarted_Params.SMI), &SMI, sizeof(SMI));

	this->ProcessEvent(uFnServerStarted, &ServerStarted_Params, nullptr);
};

// Function GearboxFramework.GearboxAnimDefinition.AddAnimSet
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class USpecialMoveInterface*   SMI                            (CPF_Parm)

void UGearboxAnimDefinition::AddAnimSet(class USpecialMoveInterface* SMI)
{
	static UFunction* uFnAddAnimSet = nullptr;

	if (!uFnAddAnimSet)
	{
		uFnAddAnimSet = UFunction::FindFunction("Function GearboxFramework.GearboxAnimDefinition.AddAnimSet");
	}

	UGearboxAnimDefinition_execAddAnimSet_Params AddAnimSet_Params;
	memset(&AddAnimSet_Params, 0, sizeof(AddAnimSet_Params));
	memcpy_s(&AddAnimSet_Params.SMI, sizeof(AddAnimSet_Params.SMI), &SMI, sizeof(SMI));

	this->ProcessEvent(uFnAddAnimSet, &AddAnimSet_Params, nullptr);
};

// Function GearboxFramework.GearboxAnimDefinition.AuthorityCanPlay
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpecialMoveInterface*   SMI                            (CPF_Parm)

bool UGearboxAnimDefinition::eventAuthorityCanPlay(class USpecialMoveInterface* SMI)
{
	static UFunction* uFnAuthorityCanPlay = nullptr;

	if (!uFnAuthorityCanPlay)
	{
		uFnAuthorityCanPlay = UFunction::FindFunction("Function GearboxFramework.GearboxAnimDefinition.AuthorityCanPlay");
	}

	UGearboxAnimDefinition_eventAuthorityCanPlay_Params AuthorityCanPlay_Params;
	memset(&AuthorityCanPlay_Params, 0, sizeof(AuthorityCanPlay_Params));
	memcpy_s(&AuthorityCanPlay_Params.SMI, sizeof(AuthorityCanPlay_Params.SMI), &SMI, sizeof(SMI));

	this->ProcessEvent(uFnAuthorityCanPlay, &AuthorityCanPlay_Params, nullptr);

	return AuthorityCanPlay_Params.ReturnValue;
};

// Function GearboxFramework.GearboxAnimDefinition.OnTimedEvent
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2540])
// Parameter Info:
// const struct FName&            SpecializedEventName           (CPF_Parm)
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UGearboxAnimDefinition::OnTimedEvent(const struct FName& SpecializedEventName, struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnTimedEvent = nullptr;

	if (!uFnOnTimedEvent)
	{
		uFnOnTimedEvent = UFunction::FindFunction("Function GearboxFramework.GearboxAnimDefinition.OnTimedEvent");
	}

	UGearboxAnimDefinition_execOnTimedEvent_Params OnTimedEvent_Params;
	memset(&OnTimedEvent_Params, 0, sizeof(OnTimedEvent_Params));
	memcpy_s(&OnTimedEvent_Params.SpecializedEventName, sizeof(OnTimedEvent_Params.SpecializedEventName), &SpecializedEventName, sizeof(SpecializedEventName));
	memcpy_s(&OnTimedEvent_Params.ConsumerHandle, sizeof(OnTimedEvent_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnTimedEvent->iNative = 0;
	uFnOnTimedEvent->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnTimedEvent, &OnTimedEvent_Params, nullptr);
	uFnOnTimedEvent->FunctionFlags |= 0x400;
	uFnOnTimedEvent->iNative = 2540;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnTimedEvent_Params.ConsumerHandle, sizeof(OnTimedEvent_Params.ConsumerHandle));
};

// Function GearboxFramework.GearboxAnimDefinition.OnServerStop
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2541])
// Parameter Info:
// bool                           bInterrupted                   (CPF_Parm)
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UGearboxAnimDefinition::OnServerStop(bool bInterrupted, struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnServerStop = nullptr;

	if (!uFnOnServerStop)
	{
		uFnOnServerStop = UFunction::FindFunction("Function GearboxFramework.GearboxAnimDefinition.OnServerStop");
	}

	UGearboxAnimDefinition_execOnServerStop_Params OnServerStop_Params;
	memset(&OnServerStop_Params, 0, sizeof(OnServerStop_Params));
	OnServerStop_Params.bInterrupted = bInterrupted;
	memcpy_s(&OnServerStop_Params.ConsumerHandle, sizeof(OnServerStop_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnServerStop->iNative = 0;
	uFnOnServerStop->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnServerStop, &OnServerStop_Params, nullptr);
	uFnOnServerStop->FunctionFlags |= 0x400;
	uFnOnServerStop->iNative = 2541;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnServerStop_Params.ConsumerHandle, sizeof(OnServerStop_Params.ConsumerHandle));
};

// Function GearboxFramework.GearboxAnimDefinition.OnServerStart
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2542])
// Parameter Info:
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UGearboxAnimDefinition::OnServerStart(struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnServerStart = nullptr;

	if (!uFnOnServerStart)
	{
		uFnOnServerStart = UFunction::FindFunction("Function GearboxFramework.GearboxAnimDefinition.OnServerStart");
	}

	UGearboxAnimDefinition_execOnServerStart_Params OnServerStart_Params;
	memset(&OnServerStart_Params, 0, sizeof(OnServerStart_Params));
	memcpy_s(&OnServerStart_Params.ConsumerHandle, sizeof(OnServerStart_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnServerStart->iNative = 0;
	uFnOnServerStart->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnServerStart, &OnServerStart_Params, nullptr);
	uFnOnServerStart->FunctionFlags |= 0x400;
	uFnOnServerStart->iNative = 2542;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnServerStart_Params.ConsumerHandle, sizeof(OnServerStart_Params.ConsumerHandle));
};

// Function GearboxFramework.GearboxAnimDefinition.OnStop
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2543])
// Parameter Info:
// bool                           bInterrupted                   (CPF_Parm)
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UGearboxAnimDefinition::OnStop(bool bInterrupted, struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnStop = nullptr;

	if (!uFnOnStop)
	{
		uFnOnStop = UFunction::FindFunction("Function GearboxFramework.GearboxAnimDefinition.OnStop");
	}

	UGearboxAnimDefinition_execOnStop_Params OnStop_Params;
	memset(&OnStop_Params, 0, sizeof(OnStop_Params));
	OnStop_Params.bInterrupted = bInterrupted;
	memcpy_s(&OnStop_Params.ConsumerHandle, sizeof(OnStop_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnStop->iNative = 0;
	uFnOnStop->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnStop, &OnStop_Params, nullptr);
	uFnOnStop->FunctionFlags |= 0x400;
	uFnOnStop->iNative = 2543;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnStop_Params.ConsumerHandle, sizeof(OnStop_Params.ConsumerHandle));
};

// Function GearboxFramework.GearboxAnimDefinition.OnStart
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2544])
// Parameter Info:
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UGearboxAnimDefinition::OnStart(struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnStart = nullptr;

	if (!uFnOnStart)
	{
		uFnOnStart = UFunction::FindFunction("Function GearboxFramework.GearboxAnimDefinition.OnStart");
	}

	UGearboxAnimDefinition_execOnStart_Params OnStart_Params;
	memset(&OnStart_Params, 0, sizeof(OnStart_Params));
	memcpy_s(&OnStart_Params.ConsumerHandle, sizeof(OnStart_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnStart->iNative = 0;
	uFnOnStart->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnStart, &OnStart_Params, nullptr);
	uFnOnStart->FunctionFlags |= 0x400;
	uFnOnStart->iNative = 2544;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnStart_Params.ConsumerHandle, sizeof(OnStart_Params.ConsumerHandle));
};

// Function GearboxFramework.SpecialMove_Cloak.IsCloakAnim
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpecialMoveInterface*   SMI                            (CPF_Parm)

bool USpecialMove_Cloak::IsCloakAnim(class USpecialMoveInterface* SMI)
{
	static UFunction* uFnIsCloakAnim = nullptr;

	if (!uFnIsCloakAnim)
	{
		uFnIsCloakAnim = UFunction::FindFunction("Function GearboxFramework.SpecialMove_Cloak.IsCloakAnim");
	}

	USpecialMove_Cloak_execIsCloakAnim_Params IsCloakAnim_Params;
	memset(&IsCloakAnim_Params, 0, sizeof(IsCloakAnim_Params));
	memcpy_s(&IsCloakAnim_Params.SMI, sizeof(IsCloakAnim_Params.SMI), &SMI, sizeof(SMI));

	this->ProcessEvent(uFnIsCloakAnim, &IsCloakAnim_Params, nullptr);

	return IsCloakAnim_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMove_Cloak.ClientFinished
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class USpecialMoveInterface*   SMI                            (CPF_Parm)
// bool                           bInterrupted                   (CPF_Parm)

void USpecialMove_Cloak::eventClientFinished(class USpecialMoveInterface* SMI, bool bInterrupted)
{
	static UFunction* uFnClientFinished = nullptr;

	if (!uFnClientFinished)
	{
		uFnClientFinished = UFunction::FindFunction("Function GearboxFramework.SpecialMove_Cloak.ClientFinished");
	}

	USpecialMove_Cloak_eventClientFinished_Params ClientFinished_Params;
	memset(&ClientFinished_Params, 0, sizeof(ClientFinished_Params));
	memcpy_s(&ClientFinished_Params.SMI, sizeof(ClientFinished_Params.SMI), &SMI, sizeof(SMI));
	ClientFinished_Params.bInterrupted = bInterrupted;

	this->ProcessEvent(uFnClientFinished, &ClientFinished_Params, nullptr);
};

// Function GearboxFramework.SpecialMove_Cloak.ClientStarted
// [0x12420800] (FUNC_Event | FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpecialMoveInterface*   SMI                            (CPF_Parm)
// struct FSpecialMoveData        SMData                         (CPF_Parm | CPF_OutParm)

float USpecialMove_Cloak::eventClientStarted(class USpecialMoveInterface* SMI, struct FSpecialMoveData& SMData)
{
	static UFunction* uFnClientStarted = nullptr;

	if (!uFnClientStarted)
	{
		uFnClientStarted = UFunction::FindFunction("Function GearboxFramework.SpecialMove_Cloak.ClientStarted");
	}

	USpecialMove_Cloak_eventClientStarted_Params ClientStarted_Params;
	memset(&ClientStarted_Params, 0, sizeof(ClientStarted_Params));
	memcpy_s(&ClientStarted_Params.SMI, sizeof(ClientStarted_Params.SMI), &SMI, sizeof(SMI));
	memcpy_s(&ClientStarted_Params.SMData, sizeof(ClientStarted_Params.SMData), &SMData, sizeof(SMData));

	this->ProcessEvent(uFnClientStarted, &ClientStarted_Params, nullptr);

	memcpy_s(&SMData, sizeof(SMData), &ClientStarted_Params.SMData, sizeof(ClientStarted_Params.SMData));

	return ClientStarted_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMove_MoveNode.UpdateCloaked
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class USpecialMoveInterface*   SMI                            (CPF_Parm)

void USpecialMove_MoveNode::UpdateCloaked(class USpecialMoveInterface* SMI)
{
	static UFunction* uFnUpdateCloaked = nullptr;

	if (!uFnUpdateCloaked)
	{
		uFnUpdateCloaked = UFunction::FindFunction("Function GearboxFramework.SpecialMove_MoveNode.UpdateCloaked");
	}

	USpecialMove_MoveNode_execUpdateCloaked_Params UpdateCloaked_Params;
	memset(&UpdateCloaked_Params, 0, sizeof(UpdateCloaked_Params));
	memcpy_s(&UpdateCloaked_Params.SMI, sizeof(UpdateCloaked_Params.SMI), &SMI, sizeof(SMI));

	this->ProcessEvent(uFnUpdateCloaked, &UpdateCloaked_Params, nullptr);
};

// Function GearboxFramework.SpecialMove_MoveNode.ServerFinished
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class USpecialMoveInterface*   SMI                            (CPF_Parm)
// bool                           bInterrupted                   (CPF_Parm)

void USpecialMove_MoveNode::eventServerFinished(class USpecialMoveInterface* SMI, bool bInterrupted)
{
	static UFunction* uFnServerFinished = nullptr;

	if (!uFnServerFinished)
	{
		uFnServerFinished = UFunction::FindFunction("Function GearboxFramework.SpecialMove_MoveNode.ServerFinished");
	}

	USpecialMove_MoveNode_eventServerFinished_Params ServerFinished_Params;
	memset(&ServerFinished_Params, 0, sizeof(ServerFinished_Params));
	memcpy_s(&ServerFinished_Params.SMI, sizeof(ServerFinished_Params.SMI), &SMI, sizeof(SMI));
	ServerFinished_Params.bInterrupted = bInterrupted;

	this->ProcessEvent(uFnServerFinished, &ServerFinished_Params, nullptr);
};

// Function GearboxFramework.SpecialMove_MoveNode.ServerStarted
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class USpecialMoveInterface*   SMI                            (CPF_Parm)

void USpecialMove_MoveNode::eventServerStarted(class USpecialMoveInterface* SMI)
{
	static UFunction* uFnServerStarted = nullptr;

	if (!uFnServerStarted)
	{
		uFnServerStarted = UFunction::FindFunction("Function GearboxFramework.SpecialMove_MoveNode.ServerStarted");
	}

	USpecialMove_MoveNode_eventServerStarted_Params ServerStarted_Params;
	memset(&ServerStarted_Params, 0, sizeof(ServerStarted_Params));
	memcpy_s(&ServerStarted_Params.SMI, sizeof(ServerStarted_Params.SMI), &SMI, sizeof(SMI));

	this->ProcessEvent(uFnServerStarted, &ServerStarted_Params, nullptr);
};

// Function GearboxFramework.SpecialMove_NavAnim.ClientFinished
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class USpecialMoveInterface*   SMI                            (CPF_Parm)
// bool                           bInterrupted                   (CPF_Parm)

void USpecialMove_NavAnim::eventClientFinished(class USpecialMoveInterface* SMI, bool bInterrupted)
{
	static UFunction* uFnClientFinished = nullptr;

	if (!uFnClientFinished)
	{
		uFnClientFinished = UFunction::FindFunction("Function GearboxFramework.SpecialMove_NavAnim.ClientFinished");
	}

	USpecialMove_NavAnim_eventClientFinished_Params ClientFinished_Params;
	memset(&ClientFinished_Params, 0, sizeof(ClientFinished_Params));
	memcpy_s(&ClientFinished_Params.SMI, sizeof(ClientFinished_Params.SMI), &SMI, sizeof(SMI));
	ClientFinished_Params.bInterrupted = bInterrupted;

	this->ProcessEvent(uFnClientFinished, &ClientFinished_Params, nullptr);
};

// Function GearboxFramework.SpecialMove_NavAnim.ClientStarted
// [0x12420800] (FUNC_Event | FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpecialMoveInterface*   SMI                            (CPF_Parm)
// struct FSpecialMoveData        SMData                         (CPF_Parm | CPF_OutParm)

float USpecialMove_NavAnim::eventClientStarted(class USpecialMoveInterface* SMI, struct FSpecialMoveData& SMData)
{
	static UFunction* uFnClientStarted = nullptr;

	if (!uFnClientStarted)
	{
		uFnClientStarted = UFunction::FindFunction("Function GearboxFramework.SpecialMove_NavAnim.ClientStarted");
	}

	USpecialMove_NavAnim_eventClientStarted_Params ClientStarted_Params;
	memset(&ClientStarted_Params, 0, sizeof(ClientStarted_Params));
	memcpy_s(&ClientStarted_Params.SMI, sizeof(ClientStarted_Params.SMI), &SMI, sizeof(SMI));
	memcpy_s(&ClientStarted_Params.SMData, sizeof(ClientStarted_Params.SMData), &SMData, sizeof(SMData));

	this->ProcessEvent(uFnClientStarted, &ClientStarted_Params, nullptr);

	memcpy_s(&SMData, sizeof(SMData), &ClientStarted_Params.SMData, sizeof(ClientStarted_Params.SMData));

	return ClientStarted_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMove_Perch.PlayEnd
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpecialMoveInterface*   SMI                            (CPF_Parm)
// class APerch*                  Perch                          (CPF_Parm)

float USpecialMove_Perch::PlayEnd(class USpecialMoveInterface* SMI, class APerch* Perch)
{
	static UFunction* uFnPlayEnd = nullptr;

	if (!uFnPlayEnd)
	{
		uFnPlayEnd = UFunction::FindFunction("Function GearboxFramework.SpecialMove_Perch.PlayEnd");
	}

	USpecialMove_Perch_execPlayEnd_Params PlayEnd_Params;
	memset(&PlayEnd_Params, 0, sizeof(PlayEnd_Params));
	memcpy_s(&PlayEnd_Params.SMI, sizeof(PlayEnd_Params.SMI), &SMI, sizeof(SMI));
	memcpy_s(&PlayEnd_Params.Perch, sizeof(PlayEnd_Params.Perch), &Perch, sizeof(Perch));

	this->ProcessEvent(uFnPlayEnd, &PlayEnd_Params, nullptr);

	return PlayEnd_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMove_Perch.PlayIdle
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpecialMoveInterface*   SMI                            (CPF_Parm)
// class APerch*                  Perch                          (CPF_Parm)

float USpecialMove_Perch::PlayIdle(class USpecialMoveInterface* SMI, class APerch* Perch)
{
	static UFunction* uFnPlayIdle = nullptr;

	if (!uFnPlayIdle)
	{
		uFnPlayIdle = UFunction::FindFunction("Function GearboxFramework.SpecialMove_Perch.PlayIdle");
	}

	USpecialMove_Perch_execPlayIdle_Params PlayIdle_Params;
	memset(&PlayIdle_Params, 0, sizeof(PlayIdle_Params));
	memcpy_s(&PlayIdle_Params.SMI, sizeof(PlayIdle_Params.SMI), &SMI, sizeof(SMI));
	memcpy_s(&PlayIdle_Params.Perch, sizeof(PlayIdle_Params.Perch), &Perch, sizeof(Perch));

	this->ProcessEvent(uFnPlayIdle, &PlayIdle_Params, nullptr);

	return PlayIdle_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMove_Perch.SetRootMotionSpaceOverride
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// bool                           bUse                           (CPF_Parm)
// class USpecialMoveInterface*   SMI                            (CPF_Parm)
// class APerch*                  Perch                          (CPF_Parm)

void USpecialMove_Perch::SetRootMotionSpaceOverride(bool bUse, class USpecialMoveInterface* SMI, class APerch* Perch)
{
	static UFunction* uFnSetRootMotionSpaceOverride = nullptr;

	if (!uFnSetRootMotionSpaceOverride)
	{
		uFnSetRootMotionSpaceOverride = UFunction::FindFunction("Function GearboxFramework.SpecialMove_Perch.SetRootMotionSpaceOverride");
	}

	USpecialMove_Perch_execSetRootMotionSpaceOverride_Params SetRootMotionSpaceOverride_Params;
	memset(&SetRootMotionSpaceOverride_Params, 0, sizeof(SetRootMotionSpaceOverride_Params));
	SetRootMotionSpaceOverride_Params.bUse = bUse;
	memcpy_s(&SetRootMotionSpaceOverride_Params.SMI, sizeof(SetRootMotionSpaceOverride_Params.SMI), &SMI, sizeof(SMI));
	memcpy_s(&SetRootMotionSpaceOverride_Params.Perch, sizeof(SetRootMotionSpaceOverride_Params.Perch), &Perch, sizeof(Perch));

	this->ProcessEvent(uFnSetRootMotionSpaceOverride, &SetRootMotionSpaceOverride_Params, nullptr);
};

// Function GearboxFramework.SpecialMove_Perch.PlayStart
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpecialMoveInterface*   SMI                            (CPF_Parm)
// class APerch*                  Perch                          (CPF_Parm)

float USpecialMove_Perch::PlayStart(class USpecialMoveInterface* SMI, class APerch* Perch)
{
	static UFunction* uFnPlayStart = nullptr;

	if (!uFnPlayStart)
	{
		uFnPlayStart = UFunction::FindFunction("Function GearboxFramework.SpecialMove_Perch.PlayStart");
	}

	USpecialMove_Perch_execPlayStart_Params PlayStart_Params;
	memset(&PlayStart_Params, 0, sizeof(PlayStart_Params));
	memcpy_s(&PlayStart_Params.SMI, sizeof(PlayStart_Params.SMI), &SMI, sizeof(SMI));
	memcpy_s(&PlayStart_Params.Perch, sizeof(PlayStart_Params.Perch), &Perch, sizeof(Perch));

	this->ProcessEvent(uFnPlayStart, &PlayStart_Params, nullptr);

	return PlayStart_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMove_Perch.PlayNext
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpecialMoveInterface*   SMI                            (CPF_Parm)

float USpecialMove_Perch::PlayNext(class USpecialMoveInterface* SMI)
{
	static UFunction* uFnPlayNext = nullptr;

	if (!uFnPlayNext)
	{
		uFnPlayNext = UFunction::FindFunction("Function GearboxFramework.SpecialMove_Perch.PlayNext");
	}

	USpecialMove_Perch_execPlayNext_Params PlayNext_Params;
	memset(&PlayNext_Params, 0, sizeof(PlayNext_Params));
	memcpy_s(&PlayNext_Params.SMI, sizeof(PlayNext_Params.SMI), &SMI, sizeof(SMI));

	this->ProcessEvent(uFnPlayNext, &PlayNext_Params, nullptr);

	return PlayNext_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMove_Perch.AnimFinished
// [0x12420802] (FUNC_Defined | FUNC_Event | FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class USpecialMoveInterface*   SMI                            (CPF_Parm)
// class UAnimNodeSpecialMoveBlend* BlendNode                      (CPF_Parm)
// bool                           bInterrupted                   (CPF_Parm)
// struct FSpecialMoveData        SMData                         (CPF_Parm | CPF_OutParm)

void USpecialMove_Perch::eventAnimFinished(class USpecialMoveInterface* SMI, class UAnimNodeSpecialMoveBlend* BlendNode, bool bInterrupted, struct FSpecialMoveData& SMData)
{
	static UFunction* uFnAnimFinished = nullptr;

	if (!uFnAnimFinished)
	{
		uFnAnimFinished = UFunction::FindFunction("Function GearboxFramework.SpecialMove_Perch.AnimFinished");
	}

	USpecialMove_Perch_eventAnimFinished_Params AnimFinished_Params;
	memset(&AnimFinished_Params, 0, sizeof(AnimFinished_Params));
	memcpy_s(&AnimFinished_Params.SMI, sizeof(AnimFinished_Params.SMI), &SMI, sizeof(SMI));
	memcpy_s(&AnimFinished_Params.BlendNode, sizeof(AnimFinished_Params.BlendNode), &BlendNode, sizeof(BlendNode));
	AnimFinished_Params.bInterrupted = bInterrupted;
	memcpy_s(&AnimFinished_Params.SMData, sizeof(AnimFinished_Params.SMData), &SMData, sizeof(SMData));

	this->ProcessEvent(uFnAnimFinished, &AnimFinished_Params, nullptr);

	memcpy_s(&SMData, sizeof(SMData), &AnimFinished_Params.SMData, sizeof(AnimFinished_Params.SMData));
};

// Function GearboxFramework.SpecialMove_Perch.PlayAnim
// [0x12420000] (FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpecialMoveInterface*   SMI                            (CPF_Parm)
// struct FSpecialMoveData        SMData                         (CPF_Parm | CPF_OutParm)

float USpecialMove_Perch::PlayAnim(class USpecialMoveInterface* SMI, struct FSpecialMoveData& SMData)
{
	static UFunction* uFnPlayAnim = nullptr;

	if (!uFnPlayAnim)
	{
		uFnPlayAnim = UFunction::FindFunction("Function GearboxFramework.SpecialMove_Perch.PlayAnim");
	}

	USpecialMove_Perch_execPlayAnim_Params PlayAnim_Params;
	memset(&PlayAnim_Params, 0, sizeof(PlayAnim_Params));
	memcpy_s(&PlayAnim_Params.SMI, sizeof(PlayAnim_Params.SMI), &SMI, sizeof(SMI));
	memcpy_s(&PlayAnim_Params.SMData, sizeof(PlayAnim_Params.SMData), &SMData, sizeof(SMData));

	this->ProcessEvent(uFnPlayAnim, &PlayAnim_Params, nullptr);

	memcpy_s(&SMData, sizeof(SMData), &PlayAnim_Params.SMData, sizeof(PlayAnim_Params.SMData));

	return PlayAnim_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMove_Perch.ClientFinished
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class USpecialMoveInterface*   SMI                            (CPF_Parm)
// bool                           bInterrupted                   (CPF_Parm)

void USpecialMove_Perch::eventClientFinished(class USpecialMoveInterface* SMI, bool bInterrupted)
{
	static UFunction* uFnClientFinished = nullptr;

	if (!uFnClientFinished)
	{
		uFnClientFinished = UFunction::FindFunction("Function GearboxFramework.SpecialMove_Perch.ClientFinished");
	}

	USpecialMove_Perch_eventClientFinished_Params ClientFinished_Params;
	memset(&ClientFinished_Params, 0, sizeof(ClientFinished_Params));
	memcpy_s(&ClientFinished_Params.SMI, sizeof(ClientFinished_Params.SMI), &SMI, sizeof(SMI));
	ClientFinished_Params.bInterrupted = bInterrupted;

	this->ProcessEvent(uFnClientFinished, &ClientFinished_Params, nullptr);
};

// Function GearboxFramework.SpecialMove_Perch.ClientStarted
// [0x12420800] (FUNC_Event | FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpecialMoveInterface*   SMI                            (CPF_Parm)
// struct FSpecialMoveData        SMData                         (CPF_Parm | CPF_OutParm)

float USpecialMove_Perch::eventClientStarted(class USpecialMoveInterface* SMI, struct FSpecialMoveData& SMData)
{
	static UFunction* uFnClientStarted = nullptr;

	if (!uFnClientStarted)
	{
		uFnClientStarted = UFunction::FindFunction("Function GearboxFramework.SpecialMove_Perch.ClientStarted");
	}

	USpecialMove_Perch_eventClientStarted_Params ClientStarted_Params;
	memset(&ClientStarted_Params, 0, sizeof(ClientStarted_Params));
	memcpy_s(&ClientStarted_Params.SMI, sizeof(ClientStarted_Params.SMI), &SMI, sizeof(SMI));
	memcpy_s(&ClientStarted_Params.SMData, sizeof(ClientStarted_Params.SMData), &SMData, sizeof(SMData));

	this->ProcessEvent(uFnClientStarted, &ClientStarted_Params, nullptr);

	memcpy_s(&SMData, sizeof(SMData), &ClientStarted_Params.SMData, sizeof(ClientStarted_Params.SMData));

	return ClientStarted_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMove_Perch.SetEndingCondition
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35899])
// Parameter Info:
// EEndingCondition               NewEndingCondition             (CPF_Parm)

void USpecialMove_Perch::SetEndingCondition(EEndingCondition NewEndingCondition)
{
	static UFunction* uFnSetEndingCondition = nullptr;

	if (!uFnSetEndingCondition)
	{
		uFnSetEndingCondition = UFunction::FindFunction("Function GearboxFramework.SpecialMove_Perch.SetEndingCondition");
	}

	USpecialMove_Perch_execSetEndingCondition_Params SetEndingCondition_Params;
	memset(&SetEndingCondition_Params, 0, sizeof(SetEndingCondition_Params));
	memcpy_s(&SetEndingCondition_Params.NewEndingCondition, sizeof(SetEndingCondition_Params.NewEndingCondition), &NewEndingCondition, sizeof(NewEndingCondition));

	uFnSetEndingCondition->iNative = 0;
	uFnSetEndingCondition->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetEndingCondition, &SetEndingCondition_Params, nullptr);
	uFnSetEndingCondition->FunctionFlags |= 0x400;
	uFnSetEndingCondition->iNative = 35899;
};

// Function GearboxFramework.SpecialMove_Perch.OnEnd
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2508])
// Parameter Info:
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void USpecialMove_Perch::OnEnd(struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnEnd = nullptr;

	if (!uFnOnEnd)
	{
		uFnOnEnd = UFunction::FindFunction("Function GearboxFramework.SpecialMove_Perch.OnEnd");
	}

	USpecialMove_Perch_execOnEnd_Params OnEnd_Params;
	memset(&OnEnd_Params, 0, sizeof(OnEnd_Params));
	memcpy_s(&OnEnd_Params.ConsumerHandle, sizeof(OnEnd_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnEnd->iNative = 0;
	uFnOnEnd->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnEnd, &OnEnd_Params, nullptr);
	uFnOnEnd->FunctionFlags |= 0x400;
	uFnOnEnd->iNative = 2508;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnEnd_Params.ConsumerHandle, sizeof(OnEnd_Params.ConsumerHandle));
};

// Function GearboxFramework.SpecialMove_Perch.OnIdle
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2509])
// Parameter Info:
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void USpecialMove_Perch::OnIdle(struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnIdle = nullptr;

	if (!uFnOnIdle)
	{
		uFnOnIdle = UFunction::FindFunction("Function GearboxFramework.SpecialMove_Perch.OnIdle");
	}

	USpecialMove_Perch_execOnIdle_Params OnIdle_Params;
	memset(&OnIdle_Params, 0, sizeof(OnIdle_Params));
	memcpy_s(&OnIdle_Params.ConsumerHandle, sizeof(OnIdle_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnIdle->iNative = 0;
	uFnOnIdle->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnIdle, &OnIdle_Params, nullptr);
	uFnOnIdle->FunctionFlags |= 0x400;
	uFnOnIdle->iNative = 2509;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnIdle_Params.ConsumerHandle, sizeof(OnIdle_Params.ConsumerHandle));
};

// Function GearboxFramework.SpecialMove_PhysicsJump.PlayLand
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpecialMoveInterface*   SMI                            (CPF_Parm)

float USpecialMove_PhysicsJump::PlayLand(class USpecialMoveInterface* SMI)
{
	static UFunction* uFnPlayLand = nullptr;

	if (!uFnPlayLand)
	{
		uFnPlayLand = UFunction::FindFunction("Function GearboxFramework.SpecialMove_PhysicsJump.PlayLand");
	}

	USpecialMove_PhysicsJump_execPlayLand_Params PlayLand_Params;
	memset(&PlayLand_Params, 0, sizeof(PlayLand_Params));
	memcpy_s(&PlayLand_Params.SMI, sizeof(PlayLand_Params.SMI), &SMI, sizeof(SMI));

	this->ProcessEvent(uFnPlayLand, &PlayLand_Params, nullptr);

	return PlayLand_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMove_PhysicsJump.PlayIdle
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpecialMoveInterface*   SMI                            (CPF_Parm)
// float                          AirTime                        (CPF_Parm)

float USpecialMove_PhysicsJump::PlayIdle(class USpecialMoveInterface* SMI, float AirTime)
{
	static UFunction* uFnPlayIdle = nullptr;

	if (!uFnPlayIdle)
	{
		uFnPlayIdle = UFunction::FindFunction("Function GearboxFramework.SpecialMove_PhysicsJump.PlayIdle");
	}

	USpecialMove_PhysicsJump_execPlayIdle_Params PlayIdle_Params;
	memset(&PlayIdle_Params, 0, sizeof(PlayIdle_Params));
	memcpy_s(&PlayIdle_Params.SMI, sizeof(PlayIdle_Params.SMI), &SMI, sizeof(SMI));
	memcpy_s(&PlayIdle_Params.AirTime, sizeof(PlayIdle_Params.AirTime), &AirTime, sizeof(AirTime));

	this->ProcessEvent(uFnPlayIdle, &PlayIdle_Params, nullptr);

	return PlayIdle_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMove_PhysicsJump.GetIdleLength
// [0x12020000] (FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpecialMoveInterface*   SMI                            (CPF_Parm)

float USpecialMove_PhysicsJump::GetIdleLength(class USpecialMoveInterface* SMI)
{
	static UFunction* uFnGetIdleLength = nullptr;

	if (!uFnGetIdleLength)
	{
		uFnGetIdleLength = UFunction::FindFunction("Function GearboxFramework.SpecialMove_PhysicsJump.GetIdleLength");
	}

	USpecialMove_PhysicsJump_execGetIdleLength_Params GetIdleLength_Params;
	memset(&GetIdleLength_Params, 0, sizeof(GetIdleLength_Params));
	memcpy_s(&GetIdleLength_Params.SMI, sizeof(GetIdleLength_Params.SMI), &SMI, sizeof(SMI));

	this->ProcessEvent(uFnGetIdleLength, &GetIdleLength_Params, nullptr);

	return GetIdleLength_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMove_PhysicsJump.AnimFinished
// [0x12420802] (FUNC_Defined | FUNC_Event | FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class USpecialMoveInterface*   SMI                            (CPF_Parm)
// class UAnimNodeSpecialMoveBlend* BlendNode                      (CPF_Parm)
// bool                           bInterrupted                   (CPF_Parm)
// struct FSpecialMoveData        SMData                         (CPF_Parm | CPF_OutParm)

void USpecialMove_PhysicsJump::eventAnimFinished(class USpecialMoveInterface* SMI, class UAnimNodeSpecialMoveBlend* BlendNode, bool bInterrupted, struct FSpecialMoveData& SMData)
{
	static UFunction* uFnAnimFinished = nullptr;

	if (!uFnAnimFinished)
	{
		uFnAnimFinished = UFunction::FindFunction("Function GearboxFramework.SpecialMove_PhysicsJump.AnimFinished");
	}

	USpecialMove_PhysicsJump_eventAnimFinished_Params AnimFinished_Params;
	memset(&AnimFinished_Params, 0, sizeof(AnimFinished_Params));
	memcpy_s(&AnimFinished_Params.SMI, sizeof(AnimFinished_Params.SMI), &SMI, sizeof(SMI));
	memcpy_s(&AnimFinished_Params.BlendNode, sizeof(AnimFinished_Params.BlendNode), &BlendNode, sizeof(BlendNode));
	AnimFinished_Params.bInterrupted = bInterrupted;
	memcpy_s(&AnimFinished_Params.SMData, sizeof(AnimFinished_Params.SMData), &SMData, sizeof(SMData));

	this->ProcessEvent(uFnAnimFinished, &AnimFinished_Params, nullptr);

	memcpy_s(&SMData, sizeof(SMData), &AnimFinished_Params.SMData, sizeof(AnimFinished_Params.SMData));
};

// Function GearboxFramework.SpecialMove_PhysicsJump.ClientFinished
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class USpecialMoveInterface*   SMI                            (CPF_Parm)
// bool                           bInterrupted                   (CPF_Parm)

void USpecialMove_PhysicsJump::eventClientFinished(class USpecialMoveInterface* SMI, bool bInterrupted)
{
	static UFunction* uFnClientFinished = nullptr;

	if (!uFnClientFinished)
	{
		uFnClientFinished = UFunction::FindFunction("Function GearboxFramework.SpecialMove_PhysicsJump.ClientFinished");
	}

	USpecialMove_PhysicsJump_eventClientFinished_Params ClientFinished_Params;
	memset(&ClientFinished_Params, 0, sizeof(ClientFinished_Params));
	memcpy_s(&ClientFinished_Params.SMI, sizeof(ClientFinished_Params.SMI), &SMI, sizeof(SMI));
	ClientFinished_Params.bInterrupted = bInterrupted;

	this->ProcessEvent(uFnClientFinished, &ClientFinished_Params, nullptr);
};

// Function GearboxFramework.SpecialMove_PhysicsJump.ClientStarted
// [0x12420800] (FUNC_Event | FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpecialMoveInterface*   SMI                            (CPF_Parm)
// struct FSpecialMoveData        SMData                         (CPF_Parm | CPF_OutParm)

float USpecialMove_PhysicsJump::eventClientStarted(class USpecialMoveInterface* SMI, struct FSpecialMoveData& SMData)
{
	static UFunction* uFnClientStarted = nullptr;

	if (!uFnClientStarted)
	{
		uFnClientStarted = UFunction::FindFunction("Function GearboxFramework.SpecialMove_PhysicsJump.ClientStarted");
	}

	USpecialMove_PhysicsJump_eventClientStarted_Params ClientStarted_Params;
	memset(&ClientStarted_Params, 0, sizeof(ClientStarted_Params));
	memcpy_s(&ClientStarted_Params.SMI, sizeof(ClientStarted_Params.SMI), &SMI, sizeof(SMI));
	memcpy_s(&ClientStarted_Params.SMData, sizeof(ClientStarted_Params.SMData), &SMData, sizeof(SMData));

	this->ProcessEvent(uFnClientStarted, &ClientStarted_Params, nullptr);

	memcpy_s(&SMData, sizeof(SMData), &ClientStarted_Params.SMData, sizeof(ClientStarted_Params.SMData));

	return ClientStarted_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMove_PhysicsJump.OnStartLand
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2510])
// Parameter Info:
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void USpecialMove_PhysicsJump::OnStartLand(struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnStartLand = nullptr;

	if (!uFnOnStartLand)
	{
		uFnOnStartLand = UFunction::FindFunction("Function GearboxFramework.SpecialMove_PhysicsJump.OnStartLand");
	}

	USpecialMove_PhysicsJump_execOnStartLand_Params OnStartLand_Params;
	memset(&OnStartLand_Params, 0, sizeof(OnStartLand_Params));
	memcpy_s(&OnStartLand_Params.ConsumerHandle, sizeof(OnStartLand_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnStartLand->iNative = 0;
	uFnOnStartLand->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnStartLand, &OnStartLand_Params, nullptr);
	uFnOnStartLand->FunctionFlags |= 0x400;
	uFnOnStartLand->iNative = 2510;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnStartLand_Params.ConsumerHandle, sizeof(OnStartLand_Params.ConsumerHandle));
};

// Function GearboxFramework.SpecialMove_PhysicsJump.OnStartIdle
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2511])
// Parameter Info:
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void USpecialMove_PhysicsJump::OnStartIdle(struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnStartIdle = nullptr;

	if (!uFnOnStartIdle)
	{
		uFnOnStartIdle = UFunction::FindFunction("Function GearboxFramework.SpecialMove_PhysicsJump.OnStartIdle");
	}

	USpecialMove_PhysicsJump_execOnStartIdle_Params OnStartIdle_Params;
	memset(&OnStartIdle_Params, 0, sizeof(OnStartIdle_Params));
	memcpy_s(&OnStartIdle_Params.ConsumerHandle, sizeof(OnStartIdle_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnStartIdle->iNative = 0;
	uFnOnStartIdle->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnStartIdle, &OnStartIdle_Params, nullptr);
	uFnOnStartIdle->FunctionFlags |= 0x400;
	uFnOnStartIdle->iNative = 2511;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnStartIdle_Params.ConsumerHandle, sizeof(OnStartIdle_Params.ConsumerHandle));
};

// Function GearboxFramework.SpecialMove_LeapAttack.AnimFinished
// [0x12420802] (FUNC_Defined | FUNC_Event | FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class USpecialMoveInterface*   SMI                            (CPF_Parm)
// class UAnimNodeSpecialMoveBlend* BlendNode                      (CPF_Parm)
// bool                           bInterrupted                   (CPF_Parm)
// struct FSpecialMoveData        SMData                         (CPF_Parm | CPF_OutParm)

void USpecialMove_LeapAttack::eventAnimFinished(class USpecialMoveInterface* SMI, class UAnimNodeSpecialMoveBlend* BlendNode, bool bInterrupted, struct FSpecialMoveData& SMData)
{
	static UFunction* uFnAnimFinished = nullptr;

	if (!uFnAnimFinished)
	{
		uFnAnimFinished = UFunction::FindFunction("Function GearboxFramework.SpecialMove_LeapAttack.AnimFinished");
	}

	USpecialMove_LeapAttack_eventAnimFinished_Params AnimFinished_Params;
	memset(&AnimFinished_Params, 0, sizeof(AnimFinished_Params));
	memcpy_s(&AnimFinished_Params.SMI, sizeof(AnimFinished_Params.SMI), &SMI, sizeof(SMI));
	memcpy_s(&AnimFinished_Params.BlendNode, sizeof(AnimFinished_Params.BlendNode), &BlendNode, sizeof(BlendNode));
	AnimFinished_Params.bInterrupted = bInterrupted;
	memcpy_s(&AnimFinished_Params.SMData, sizeof(AnimFinished_Params.SMData), &SMData, sizeof(SMData));

	this->ProcessEvent(uFnAnimFinished, &AnimFinished_Params, nullptr);

	memcpy_s(&SMData, sizeof(SMData), &AnimFinished_Params.SMData, sizeof(AnimFinished_Params.SMData));
};

// Function GearboxFramework.SpecialMove_LeapAttack.ClientFinished
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class USpecialMoveInterface*   SMI                            (CPF_Parm)
// bool                           bInterrupted                   (CPF_Parm)

void USpecialMove_LeapAttack::eventClientFinished(class USpecialMoveInterface* SMI, bool bInterrupted)
{
	static UFunction* uFnClientFinished = nullptr;

	if (!uFnClientFinished)
	{
		uFnClientFinished = UFunction::FindFunction("Function GearboxFramework.SpecialMove_LeapAttack.ClientFinished");
	}

	USpecialMove_LeapAttack_eventClientFinished_Params ClientFinished_Params;
	memset(&ClientFinished_Params, 0, sizeof(ClientFinished_Params));
	memcpy_s(&ClientFinished_Params.SMI, sizeof(ClientFinished_Params.SMI), &SMI, sizeof(SMI));
	ClientFinished_Params.bInterrupted = bInterrupted;

	this->ProcessEvent(uFnClientFinished, &ClientFinished_Params, nullptr);
};

// Function GearboxFramework.SpecialMove_LeapAttack.ClientStarted
// [0x12420800] (FUNC_Event | FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpecialMoveInterface*   SMI                            (CPF_Parm)
// struct FSpecialMoveData        SMData                         (CPF_Parm | CPF_OutParm)

float USpecialMove_LeapAttack::eventClientStarted(class USpecialMoveInterface* SMI, struct FSpecialMoveData& SMData)
{
	static UFunction* uFnClientStarted = nullptr;

	if (!uFnClientStarted)
	{
		uFnClientStarted = UFunction::FindFunction("Function GearboxFramework.SpecialMove_LeapAttack.ClientStarted");
	}

	USpecialMove_LeapAttack_eventClientStarted_Params ClientStarted_Params;
	memset(&ClientStarted_Params, 0, sizeof(ClientStarted_Params));
	memcpy_s(&ClientStarted_Params.SMI, sizeof(ClientStarted_Params.SMI), &SMI, sizeof(SMI));
	memcpy_s(&ClientStarted_Params.SMData, sizeof(ClientStarted_Params.SMData), &SMData, sizeof(SMData));

	this->ProcessEvent(uFnClientStarted, &ClientStarted_Params, nullptr);

	memcpy_s(&SMData, sizeof(SMData), &ClientStarted_Params.SMData, sizeof(ClientStarted_Params.SMData));

	return ClientStarted_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMove_LeapAttack.PerformLand
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35427])
// Parameter Info:
// class AGearboxPawn*            GBXPawn                        (CPF_Parm)

void USpecialMove_LeapAttack::PerformLand(class AGearboxPawn* GBXPawn)
{
	static UFunction* uFnPerformLand = nullptr;

	if (!uFnPerformLand)
	{
		uFnPerformLand = UFunction::FindFunction("Function GearboxFramework.SpecialMove_LeapAttack.PerformLand");
	}

	USpecialMove_LeapAttack_execPerformLand_Params PerformLand_Params;
	memset(&PerformLand_Params, 0, sizeof(PerformLand_Params));
	memcpy_s(&PerformLand_Params.GBXPawn, sizeof(PerformLand_Params.GBXPawn), &GBXPawn, sizeof(GBXPawn));

	uFnPerformLand->iNative = 0;
	uFnPerformLand->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPerformLand, &PerformLand_Params, nullptr);
	uFnPerformLand->FunctionFlags |= 0x400;
	uFnPerformLand->iNative = 35427;
};

// Function GearboxFramework.SpecialMove_LeapAttack.PerformIdle
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35426])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AGearboxPawn*            GBXPawn                        (CPF_Parm)

float USpecialMove_LeapAttack::PerformIdle(class AGearboxPawn* GBXPawn)
{
	static UFunction* uFnPerformIdle = nullptr;

	if (!uFnPerformIdle)
	{
		uFnPerformIdle = UFunction::FindFunction("Function GearboxFramework.SpecialMove_LeapAttack.PerformIdle");
	}

	USpecialMove_LeapAttack_execPerformIdle_Params PerformIdle_Params;
	memset(&PerformIdle_Params, 0, sizeof(PerformIdle_Params));
	memcpy_s(&PerformIdle_Params.GBXPawn, sizeof(PerformIdle_Params.GBXPawn), &GBXPawn, sizeof(GBXPawn));

	uFnPerformIdle->iNative = 0;
	uFnPerformIdle->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnPerformIdle, &PerformIdle_Params, nullptr);
	uFnPerformIdle->FunctionFlags |= 0x400;
	uFnPerformIdle->iNative = 35426;

	return PerformIdle_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMove_Spawn.ClientFinished
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// class USpecialMoveInterface*   SMI                            (CPF_Parm)
// bool                           bInterrupted                   (CPF_Parm)

void USpecialMove_Spawn::eventClientFinished(class USpecialMoveInterface* SMI, bool bInterrupted)
{
	static UFunction* uFnClientFinished = nullptr;

	if (!uFnClientFinished)
	{
		uFnClientFinished = UFunction::FindFunction("Function GearboxFramework.SpecialMove_Spawn.ClientFinished");
	}

	USpecialMove_Spawn_eventClientFinished_Params ClientFinished_Params;
	memset(&ClientFinished_Params, 0, sizeof(ClientFinished_Params));
	memcpy_s(&ClientFinished_Params.SMI, sizeof(ClientFinished_Params.SMI), &SMI, sizeof(SMI));
	ClientFinished_Params.bInterrupted = bInterrupted;

	this->ProcessEvent(uFnClientFinished, &ClientFinished_Params, nullptr);
};

// Function GearboxFramework.SpecialMove_Spawn.ClientStarted
// [0x12420800] (FUNC_Event | FUNC_Public | FUNC_HasOutParms | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpecialMoveInterface*   SMI                            (CPF_Parm)
// struct FSpecialMoveData        SMData                         (CPF_Parm | CPF_OutParm)

float USpecialMove_Spawn::eventClientStarted(class USpecialMoveInterface* SMI, struct FSpecialMoveData& SMData)
{
	static UFunction* uFnClientStarted = nullptr;

	if (!uFnClientStarted)
	{
		uFnClientStarted = UFunction::FindFunction("Function GearboxFramework.SpecialMove_Spawn.ClientStarted");
	}

	USpecialMove_Spawn_eventClientStarted_Params ClientStarted_Params;
	memset(&ClientStarted_Params, 0, sizeof(ClientStarted_Params));
	memcpy_s(&ClientStarted_Params.SMI, sizeof(ClientStarted_Params.SMI), &SMI, sizeof(SMI));
	memcpy_s(&ClientStarted_Params.SMData, sizeof(ClientStarted_Params.SMData), &SMData, sizeof(SMData));

	this->ProcessEvent(uFnClientStarted, &ClientStarted_Params, nullptr);

	memcpy_s(&SMData, sizeof(SMData), &ClientStarted_Params.SMData, sizeof(ClientStarted_Params.SMData));

	return ClientStarted_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMoveExpressionList.Contains
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[21016])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpecialMoveDefinition*  SMD                            (CPF_Parm)
// class USpecialMoveInterface*   SMI                            (CPF_Parm)

bool USpecialMoveExpressionList::Contains(class USpecialMoveDefinition* SMD, class USpecialMoveInterface* SMI)
{
	static UFunction* uFnContains = nullptr;

	if (!uFnContains)
	{
		uFnContains = UFunction::FindFunction("Function GearboxFramework.SpecialMoveExpressionList.Contains");
	}

	USpecialMoveExpressionList_execContains_Params Contains_Params;
	memset(&Contains_Params, 0, sizeof(Contains_Params));
	memcpy_s(&Contains_Params.SMD, sizeof(Contains_Params.SMD), &SMD, sizeof(SMD));
	memcpy_s(&Contains_Params.SMI, sizeof(Contains_Params.SMI), &SMI, sizeof(SMI));

	uFnContains->iNative = 0;
	uFnContains->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnContains, &Contains_Params, nullptr);
	uFnContains->FunctionFlags |= 0x400;
	uFnContains->iNative = 21016;

	return Contains_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMoveExpressionList.GetSMDToPlay
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34210])
// Parameter Info:
// class USpecialMoveDefinition*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpecialMoveInterface*   SMI                            (CPF_Parm)

class USpecialMoveDefinition* USpecialMoveExpressionList::GetSMDToPlay(class USpecialMoveInterface* SMI)
{
	static UFunction* uFnGetSMDToPlay = nullptr;

	if (!uFnGetSMDToPlay)
	{
		uFnGetSMDToPlay = UFunction::FindFunction("Function GearboxFramework.SpecialMoveExpressionList.GetSMDToPlay");
	}

	USpecialMoveExpressionList_execGetSMDToPlay_Params GetSMDToPlay_Params;
	memset(&GetSMDToPlay_Params, 0, sizeof(GetSMDToPlay_Params));
	memcpy_s(&GetSMDToPlay_Params.SMI, sizeof(GetSMDToPlay_Params.SMI), &SMI, sizeof(SMI));

	uFnGetSMDToPlay->iNative = 0;
	uFnGetSMDToPlay->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetSMDToPlay, &GetSMDToPlay_Params, nullptr);
	uFnGetSMDToPlay->FunctionFlags |= 0x400;
	uFnGetSMDToPlay->iNative = 34210;

	return GetSMDToPlay_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMoveRandom.Contains
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[21016])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpecialMoveDefinition*  SMD                            (CPF_Parm)
// class USpecialMoveInterface*   SMI                            (CPF_Parm)

bool USpecialMoveRandom::Contains(class USpecialMoveDefinition* SMD, class USpecialMoveInterface* SMI)
{
	static UFunction* uFnContains = nullptr;

	if (!uFnContains)
	{
		uFnContains = UFunction::FindFunction("Function GearboxFramework.SpecialMoveRandom.Contains");
	}

	USpecialMoveRandom_execContains_Params Contains_Params;
	memset(&Contains_Params, 0, sizeof(Contains_Params));
	memcpy_s(&Contains_Params.SMD, sizeof(Contains_Params.SMD), &SMD, sizeof(SMD));
	memcpy_s(&Contains_Params.SMI, sizeof(Contains_Params.SMI), &SMI, sizeof(SMI));

	uFnContains->iNative = 0;
	uFnContains->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnContains, &Contains_Params, nullptr);
	uFnContains->FunctionFlags |= 0x400;
	uFnContains->iNative = 21016;

	return Contains_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMoveRandom.GetSMDToPlay
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34210])
// Parameter Info:
// class USpecialMoveDefinition*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class USpecialMoveInterface*   SMI                            (CPF_Parm)

class USpecialMoveDefinition* USpecialMoveRandom::GetSMDToPlay(class USpecialMoveInterface* SMI)
{
	static UFunction* uFnGetSMDToPlay = nullptr;

	if (!uFnGetSMDToPlay)
	{
		uFnGetSMDToPlay = UFunction::FindFunction("Function GearboxFramework.SpecialMoveRandom.GetSMDToPlay");
	}

	USpecialMoveRandom_execGetSMDToPlay_Params GetSMDToPlay_Params;
	memset(&GetSMDToPlay_Params, 0, sizeof(GetSMDToPlay_Params));
	memcpy_s(&GetSMDToPlay_Params.SMI, sizeof(GetSMDToPlay_Params.SMI), &SMI, sizeof(SMI));

	uFnGetSMDToPlay->iNative = 0;
	uFnGetSMDToPlay->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetSMDToPlay, &GetSMDToPlay_Params, nullptr);
	uFnGetSMDToPlay->FunctionFlags |= 0x400;
	uFnGetSMDToPlay->iNative = 34210;

	return GetSMDToPlay_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMoveExpressionEvaluator.Evaluate
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[22809])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 ContextSource                  (CPF_Parm)

bool USpecialMoveExpressionEvaluator::Evaluate(class UObject* ContextSource)
{
	static UFunction* uFnEvaluate = nullptr;

	if (!uFnEvaluate)
	{
		uFnEvaluate = UFunction::FindFunction("Function GearboxFramework.SpecialMoveExpressionEvaluator.Evaluate");
	}

	USpecialMoveExpressionEvaluator_execEvaluate_Params Evaluate_Params;
	memset(&Evaluate_Params, 0, sizeof(Evaluate_Params));
	memcpy_s(&Evaluate_Params.ContextSource, sizeof(Evaluate_Params.ContextSource), &ContextSource, sizeof(ContextSource));

	uFnEvaluate->iNative = 0;
	uFnEvaluate->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnEvaluate, &Evaluate_Params, nullptr);
	uFnEvaluate->FunctionFlags |= 0x400;
	uFnEvaluate->iNative = 22809;

	return Evaluate_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMoveInterface.SetReplicatedSMData
// [0x00424500] (FUNC_Simulated | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35926])
// Parameter Info:
// bool                           bInterrupted                   (CPF_OptionalParm | CPF_Parm)
// struct FSpecialMoveData        NewSMData                      (CPF_Parm | CPF_OutParm)

void USpecialMoveInterface::SetReplicatedSMData(bool bInterrupted, struct FSpecialMoveData& NewSMData)
{
	static UFunction* uFnSetReplicatedSMData = nullptr;

	if (!uFnSetReplicatedSMData)
	{
		uFnSetReplicatedSMData = UFunction::FindFunction("Function GearboxFramework.SpecialMoveInterface.SetReplicatedSMData");
	}

	USpecialMoveInterface_execSetReplicatedSMData_Params SetReplicatedSMData_Params;
	memset(&SetReplicatedSMData_Params, 0, sizeof(SetReplicatedSMData_Params));
	SetReplicatedSMData_Params.bInterrupted = bInterrupted;
	memcpy_s(&SetReplicatedSMData_Params.NewSMData, sizeof(SetReplicatedSMData_Params.NewSMData), &NewSMData, sizeof(NewSMData));

	uFnSetReplicatedSMData->iNative = 0;
	uFnSetReplicatedSMData->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetReplicatedSMData, &SetReplicatedSMData_Params, nullptr);
	uFnSetReplicatedSMData->FunctionFlags |= 0x400;
	uFnSetReplicatedSMData->iNative = 35926;

	memcpy_s(&NewSMData, sizeof(NewSMData), &SetReplicatedSMData_Params.NewSMData, sizeof(SetReplicatedSMData_Params.NewSMData));
};

// Function GearboxFramework.SpecialMoveInterface.ServerSpecialMove_StopAny
// [0xFFFF0000122248C0] (FUNC_Net | FUNC_NetReliable | FUNC_Event | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_NetServer | FUNC_DLLImport | FUNC_K2Pure | FUNC_NetValidate | FUNC_AllFlags)
// Parameter Info:
// bool                           bClearQueue                    (CPF_OptionalParm | CPF_Parm)
// bool                           bInterrupted                   (CPF_OptionalParm | CPF_Parm)

void USpecialMoveInterface::eventServerSpecialMove_StopAny(bool bClearQueue, bool bInterrupted)
{
	static UFunction* uFnServerSpecialMove_StopAny = nullptr;

	if (!uFnServerSpecialMove_StopAny)
	{
		uFnServerSpecialMove_StopAny = UFunction::FindFunction("Function GearboxFramework.SpecialMoveInterface.ServerSpecialMove_StopAny");
	}

	USpecialMoveInterface_eventServerSpecialMove_StopAny_Params ServerSpecialMove_StopAny_Params;
	memset(&ServerSpecialMove_StopAny_Params, 0, sizeof(ServerSpecialMove_StopAny_Params));
	ServerSpecialMove_StopAny_Params.bClearQueue = bClearQueue;
	ServerSpecialMove_StopAny_Params.bInterrupted = bInterrupted;

	this->ProcessEvent(uFnServerSpecialMove_StopAny, &ServerSpecialMove_StopAny_Params, nullptr);
};

// Function GearboxFramework.SpecialMoveInterface.ServerSpecialMove_Stop
// [0xFFFF0000122248C0] (FUNC_Net | FUNC_NetReliable | FUNC_Event | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_NetServer | FUNC_DLLImport | FUNC_K2Pure | FUNC_NetValidate | FUNC_AllFlags)
// Parameter Info:
// class USpecialMoveDefinition*  OldSMD                         (CPF_Parm)
// bool                           bClearQueue                    (CPF_OptionalParm | CPF_Parm)
// bool                           bInterrupted                   (CPF_OptionalParm | CPF_Parm)

void USpecialMoveInterface::eventServerSpecialMove_Stop(class USpecialMoveDefinition* OldSMD, bool bClearQueue, bool bInterrupted)
{
	static UFunction* uFnServerSpecialMove_Stop = nullptr;

	if (!uFnServerSpecialMove_Stop)
	{
		uFnServerSpecialMove_Stop = UFunction::FindFunction("Function GearboxFramework.SpecialMoveInterface.ServerSpecialMove_Stop");
	}

	USpecialMoveInterface_eventServerSpecialMove_Stop_Params ServerSpecialMove_Stop_Params;
	memset(&ServerSpecialMove_Stop_Params, 0, sizeof(ServerSpecialMove_Stop_Params));
	memcpy_s(&ServerSpecialMove_Stop_Params.OldSMD, sizeof(ServerSpecialMove_Stop_Params.OldSMD), &OldSMD, sizeof(OldSMD));
	ServerSpecialMove_Stop_Params.bClearQueue = bClearQueue;
	ServerSpecialMove_Stop_Params.bInterrupted = bInterrupted;

	this->ProcessEvent(uFnServerSpecialMove_Stop, &ServerSpecialMove_Stop_Params, nullptr);
};

// Function GearboxFramework.SpecialMoveInterface.ServerSpecialMove_Queue
// [0xFFFF0000122248C0] (FUNC_Net | FUNC_NetReliable | FUNC_Event | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_NetServer | FUNC_DLLImport | FUNC_K2Pure | FUNC_NetValidate | FUNC_AllFlags)
// Parameter Info:
// class USpecialMoveDefinition*  NewSMD                         (CPF_Parm)
// float                          PlayRateScale                  (CPF_OptionalParm | CPF_Parm)
// float                          Duration                       (CPF_OptionalParm | CPF_Parm)
// const struct FName&            CallbackName                   (CPF_OptionalParm | CPF_Parm)
// class UObject*                 CallbackObject                 (CPF_OptionalParm | CPF_Parm)
// class UObject*                 Data                           (CPF_OptionalParm | CPF_Parm)
// bool                           bSendCallbackAtEndOfSequence   (CPF_OptionalParm | CPF_Parm)
// bool                           bStartOfSequence               (CPF_OptionalParm | CPF_Parm)

void USpecialMoveInterface::eventServerSpecialMove_Queue(class USpecialMoveDefinition* NewSMD, float PlayRateScale, float Duration, const struct FName& CallbackName, class UObject* CallbackObject, class UObject* Data, bool bSendCallbackAtEndOfSequence, bool bStartOfSequence)
{
	static UFunction* uFnServerSpecialMove_Queue = nullptr;

	if (!uFnServerSpecialMove_Queue)
	{
		uFnServerSpecialMove_Queue = UFunction::FindFunction("Function GearboxFramework.SpecialMoveInterface.ServerSpecialMove_Queue");
	}

	USpecialMoveInterface_eventServerSpecialMove_Queue_Params ServerSpecialMove_Queue_Params;
	memset(&ServerSpecialMove_Queue_Params, 0, sizeof(ServerSpecialMove_Queue_Params));
	memcpy_s(&ServerSpecialMove_Queue_Params.NewSMD, sizeof(ServerSpecialMove_Queue_Params.NewSMD), &NewSMD, sizeof(NewSMD));
	memcpy_s(&ServerSpecialMove_Queue_Params.PlayRateScale, sizeof(ServerSpecialMove_Queue_Params.PlayRateScale), &PlayRateScale, sizeof(PlayRateScale));
	memcpy_s(&ServerSpecialMove_Queue_Params.Duration, sizeof(ServerSpecialMove_Queue_Params.Duration), &Duration, sizeof(Duration));
	memcpy_s(&ServerSpecialMove_Queue_Params.CallbackName, sizeof(ServerSpecialMove_Queue_Params.CallbackName), &CallbackName, sizeof(CallbackName));
	memcpy_s(&ServerSpecialMove_Queue_Params.CallbackObject, sizeof(ServerSpecialMove_Queue_Params.CallbackObject), &CallbackObject, sizeof(CallbackObject));
	memcpy_s(&ServerSpecialMove_Queue_Params.Data, sizeof(ServerSpecialMove_Queue_Params.Data), &Data, sizeof(Data));
	ServerSpecialMove_Queue_Params.bSendCallbackAtEndOfSequence = bSendCallbackAtEndOfSequence;
	ServerSpecialMove_Queue_Params.bStartOfSequence = bStartOfSequence;

	this->ProcessEvent(uFnServerSpecialMove_Queue, &ServerSpecialMove_Queue_Params, nullptr);
};

// Function GearboxFramework.SpecialMoveInterface.ServerSpecialMove_Play
// [0xFFFF0000122248C0] (FUNC_Net | FUNC_NetReliable | FUNC_Event | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_NetServer | FUNC_DLLImport | FUNC_K2Pure | FUNC_NetValidate | FUNC_AllFlags)
// Parameter Info:
// class USpecialMoveDefinition*  NewSMD                         (CPF_Parm)
// float                          PlayRateScale                  (CPF_OptionalParm | CPF_Parm)
// float                          Duration                       (CPF_OptionalParm | CPF_Parm)
// const struct FName&            CallbackName                   (CPF_OptionalParm | CPF_Parm)
// class UObject*                 CallbackObject                 (CPF_OptionalParm | CPF_Parm)
// class UObject*                 Data                           (CPF_OptionalParm | CPF_Parm)
// bool                           bSendCallbackAtEndOfSequence   (CPF_OptionalParm | CPF_Parm)

void USpecialMoveInterface::eventServerSpecialMove_Play(class USpecialMoveDefinition* NewSMD, float PlayRateScale, float Duration, const struct FName& CallbackName, class UObject* CallbackObject, class UObject* Data, bool bSendCallbackAtEndOfSequence)
{
	static UFunction* uFnServerSpecialMove_Play = nullptr;

	if (!uFnServerSpecialMove_Play)
	{
		uFnServerSpecialMove_Play = UFunction::FindFunction("Function GearboxFramework.SpecialMoveInterface.ServerSpecialMove_Play");
	}

	USpecialMoveInterface_eventServerSpecialMove_Play_Params ServerSpecialMove_Play_Params;
	memset(&ServerSpecialMove_Play_Params, 0, sizeof(ServerSpecialMove_Play_Params));
	memcpy_s(&ServerSpecialMove_Play_Params.NewSMD, sizeof(ServerSpecialMove_Play_Params.NewSMD), &NewSMD, sizeof(NewSMD));
	memcpy_s(&ServerSpecialMove_Play_Params.PlayRateScale, sizeof(ServerSpecialMove_Play_Params.PlayRateScale), &PlayRateScale, sizeof(PlayRateScale));
	memcpy_s(&ServerSpecialMove_Play_Params.Duration, sizeof(ServerSpecialMove_Play_Params.Duration), &Duration, sizeof(Duration));
	memcpy_s(&ServerSpecialMove_Play_Params.CallbackName, sizeof(ServerSpecialMove_Play_Params.CallbackName), &CallbackName, sizeof(CallbackName));
	memcpy_s(&ServerSpecialMove_Play_Params.CallbackObject, sizeof(ServerSpecialMove_Play_Params.CallbackObject), &CallbackObject, sizeof(CallbackObject));
	memcpy_s(&ServerSpecialMove_Play_Params.Data, sizeof(ServerSpecialMove_Play_Params.Data), &Data, sizeof(Data));
	ServerSpecialMove_Play_Params.bSendCallbackAtEndOfSequence = bSendCallbackAtEndOfSequence;

	this->ProcessEvent(uFnServerSpecialMove_Play, &ServerSpecialMove_Play_Params, nullptr);
};

// Function GearboxFramework.SpecialMoveInterface.GetDefaultRootMotionRotationMode
// [0x00020500] (FUNC_Simulated | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[23677])
// Parameter Info:
// ERootMotionRotationMode        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

ERootMotionRotationMode USpecialMoveInterface::GetDefaultRootMotionRotationMode()
{
	static UFunction* uFnGetDefaultRootMotionRotationMode = nullptr;

	if (!uFnGetDefaultRootMotionRotationMode)
	{
		uFnGetDefaultRootMotionRotationMode = UFunction::FindFunction("Function GearboxFramework.SpecialMoveInterface.GetDefaultRootMotionRotationMode");
	}

	USpecialMoveInterface_execGetDefaultRootMotionRotationMode_Params GetDefaultRootMotionRotationMode_Params;
	memset(&GetDefaultRootMotionRotationMode_Params, 0, sizeof(GetDefaultRootMotionRotationMode_Params));

	uFnGetDefaultRootMotionRotationMode->iNative = 0;
	uFnGetDefaultRootMotionRotationMode->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetDefaultRootMotionRotationMode, &GetDefaultRootMotionRotationMode_Params, nullptr);
	uFnGetDefaultRootMotionRotationMode->FunctionFlags |= 0x400;
	uFnGetDefaultRootMotionRotationMode->iNative = 23677;

	return GetDefaultRootMotionRotationMode_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMoveInterface.GetDefaultRootMotionMode
// [0x00020500] (FUNC_Simulated | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[23676])
// Parameter Info:
// ERootMotionMode                ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

ERootMotionMode USpecialMoveInterface::GetDefaultRootMotionMode()
{
	static UFunction* uFnGetDefaultRootMotionMode = nullptr;

	if (!uFnGetDefaultRootMotionMode)
	{
		uFnGetDefaultRootMotionMode = UFunction::FindFunction("Function GearboxFramework.SpecialMoveInterface.GetDefaultRootMotionMode");
	}

	USpecialMoveInterface_execGetDefaultRootMotionMode_Params GetDefaultRootMotionMode_Params;
	memset(&GetDefaultRootMotionMode_Params, 0, sizeof(GetDefaultRootMotionMode_Params));

	uFnGetDefaultRootMotionMode->iNative = 0;
	uFnGetDefaultRootMotionMode->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetDefaultRootMotionMode, &GetDefaultRootMotionMode_Params, nullptr);
	uFnGetDefaultRootMotionMode->FunctionFlags |= 0x400;
	uFnGetDefaultRootMotionMode->iNative = 23676;

	return GetDefaultRootMotionMode_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMoveInterface.GetSkelMesh
// [0x00020500] (FUNC_Simulated | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34208])
// Parameter Info:
// class USkeletalMeshComponent*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline)

class USkeletalMeshComponent* USpecialMoveInterface::GetSkelMesh()
{
	static UFunction* uFnGetSkelMesh = nullptr;

	if (!uFnGetSkelMesh)
	{
		uFnGetSkelMesh = UFunction::FindFunction("Function GearboxFramework.SpecialMoveInterface.GetSkelMesh");
	}

	USpecialMoveInterface_execGetSkelMesh_Params GetSkelMesh_Params;
	memset(&GetSkelMesh_Params, 0, sizeof(GetSkelMesh_Params));

	uFnGetSkelMesh->iNative = 0;
	uFnGetSkelMesh->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetSkelMesh, &GetSkelMesh_Params, nullptr);
	uFnGetSkelMesh->FunctionFlags |= 0x400;
	uFnGetSkelMesh->iNative = 34208;

	return GetSkelMesh_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMoveInterface.GetSMComponent
// [0x00020500] (FUNC_Simulated | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34209])
// Parameter Info:
// class USpecialMoveComponent*   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline)

class USpecialMoveComponent* USpecialMoveInterface::GetSMComponent()
{
	static UFunction* uFnGetSMComponent = nullptr;

	if (!uFnGetSMComponent)
	{
		uFnGetSMComponent = UFunction::FindFunction("Function GearboxFramework.SpecialMoveInterface.GetSMComponent");
	}

	USpecialMoveInterface_execGetSMComponent_Params GetSMComponent_Params;
	memset(&GetSMComponent_Params, 0, sizeof(GetSMComponent_Params));

	uFnGetSMComponent->iNative = 0;
	uFnGetSMComponent->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetSMComponent, &GetSMComponent_Params, nullptr);
	uFnGetSMComponent->FunctionFlags |= 0x400;
	uFnGetSMComponent->iNative = 34209;

	return GetSMComponent_Params.ReturnValue;
};

// Function GearboxFramework.SpecialMoveInterface.GetActor
// [0x00020500] (FUNC_Simulated | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34025])
// Parameter Info:
// class AActor*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class AActor* USpecialMoveInterface::GetActor()
{
	static UFunction* uFnGetActor = nullptr;

	if (!uFnGetActor)
	{
		uFnGetActor = UFunction::FindFunction("Function GearboxFramework.SpecialMoveInterface.GetActor");
	}

	USpecialMoveInterface_execGetActor_Params GetActor_Params;
	memset(&GetActor_Params, 0, sizeof(GetActor_Params));

	uFnGetActor->iNative = 0;
	uFnGetActor->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetActor, &GetActor_Params, nullptr);
	uFnGetActor->FunctionFlags |= 0x400;
	uFnGetActor->iNative = 34025;

	return GetActor_Params.ReturnValue;
};

// Function GearboxFramework.StanceComponent.SetDefaultStance
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[35893])
// Parameter Info:
// const struct FName&            StanceName                     (CPF_OptionalParm | CPF_Parm)

void UStanceComponent::SetDefaultStance(const struct FName& StanceName)
{
	static UFunction* uFnSetDefaultStance = nullptr;

	if (!uFnSetDefaultStance)
	{
		uFnSetDefaultStance = UFunction::FindFunction("Function GearboxFramework.StanceComponent.SetDefaultStance");
	}

	UStanceComponent_execSetDefaultStance_Params SetDefaultStance_Params;
	memset(&SetDefaultStance_Params, 0, sizeof(SetDefaultStance_Params));
	memcpy_s(&SetDefaultStance_Params.StanceName, sizeof(SetDefaultStance_Params.StanceName), &StanceName, sizeof(StanceName));

	uFnSetDefaultStance->iNative = 0;
	uFnSetDefaultStance->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetDefaultStance, &SetDefaultStance_Params, nullptr);
	uFnSetDefaultStance->FunctionFlags |= 0x400;
	uFnSetDefaultStance->iNative = 35893;
};

// Function GearboxFramework.StanceComponent.IsInDefaultStance
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34667])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UStanceComponent::IsInDefaultStance()
{
	static UFunction* uFnIsInDefaultStance = nullptr;

	if (!uFnIsInDefaultStance)
	{
		uFnIsInDefaultStance = UFunction::FindFunction("Function GearboxFramework.StanceComponent.IsInDefaultStance");
	}

	UStanceComponent_execIsInDefaultStance_Params IsInDefaultStance_Params;
	memset(&IsInDefaultStance_Params, 0, sizeof(IsInDefaultStance_Params));

	uFnIsInDefaultStance->iNative = 0;
	uFnIsInDefaultStance->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsInDefaultStance, &IsInDefaultStance_Params, nullptr);
	uFnIsInDefaultStance->FunctionFlags |= 0x400;
	uFnIsInDefaultStance->iNative = 34667;

	return IsInDefaultStance_Params.ReturnValue;
};

// Function GearboxFramework.StanceComponent.IsInStance
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34670])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UStanceDefinition*       TestStance                     (CPF_Parm)

bool UStanceComponent::IsInStance(class UStanceDefinition* TestStance)
{
	static UFunction* uFnIsInStance = nullptr;

	if (!uFnIsInStance)
	{
		uFnIsInStance = UFunction::FindFunction("Function GearboxFramework.StanceComponent.IsInStance");
	}

	UStanceComponent_execIsInStance_Params IsInStance_Params;
	memset(&IsInStance_Params, 0, sizeof(IsInStance_Params));
	memcpy_s(&IsInStance_Params.TestStance, sizeof(IsInStance_Params.TestStance), &TestStance, sizeof(TestStance));

	uFnIsInStance->iNative = 0;
	uFnIsInStance->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnIsInStance, &IsInStance_Params, nullptr);
	uFnIsInStance->FunctionFlags |= 0x400;
	uFnIsInStance->iNative = 34670;

	return IsInStance_Params.ReturnValue;
};

// Function GearboxFramework.StanceComponent.GetLastStance
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34125])
// Parameter Info:
// class UStanceDefinition*       ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UStanceDefinition* UStanceComponent::GetLastStance()
{
	static UFunction* uFnGetLastStance = nullptr;

	if (!uFnGetLastStance)
	{
		uFnGetLastStance = UFunction::FindFunction("Function GearboxFramework.StanceComponent.GetLastStance");
	}

	UStanceComponent_execGetLastStance_Params GetLastStance_Params;
	memset(&GetLastStance_Params, 0, sizeof(GetLastStance_Params));

	uFnGetLastStance->iNative = 0;
	uFnGetLastStance->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetLastStance, &GetLastStance_Params, nullptr);
	uFnGetLastStance->FunctionFlags |= 0x400;
	uFnGetLastStance->iNative = 34125;

	return GetLastStance_Params.ReturnValue;
};

// Function GearboxFramework.StanceComponent.GetStance
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34225])
// Parameter Info:
// class UStanceDefinition*       ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UStanceDefinition* UStanceComponent::GetStance()
{
	static UFunction* uFnGetStance = nullptr;

	if (!uFnGetStance)
	{
		uFnGetStance = UFunction::FindFunction("Function GearboxFramework.StanceComponent.GetStance");
	}

	UStanceComponent_execGetStance_Params GetStance_Params;
	memset(&GetStance_Params, 0, sizeof(GetStance_Params));

	uFnGetStance->iNative = 0;
	uFnGetStance->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetStance, &GetStance_Params, nullptr);
	uFnGetStance->FunctionFlags |= 0x400;
	uFnGetStance->iNative = 34225;

	return GetStance_Params.ReturnValue;
};

// Function GearboxFramework.StanceComponent.ClearStance
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NoExport | FUNC_OptionalParm | FUNC_Public | FUNC_AllFlags) (iNative[32762])
// Parameter Info:
// EStanceSystem                  System                         (CPF_Parm)
// class UStanceDefinition*       StanceToClear                  (CPF_OptionalParm | CPF_Parm)

void UStanceComponent::ClearStance(EStanceSystem System, class UStanceDefinition* StanceToClear)
{
	static UFunction* uFnClearStance = nullptr;

	if (!uFnClearStance)
	{
		uFnClearStance = UFunction::FindFunction("Function GearboxFramework.StanceComponent.ClearStance");
	}

	UStanceComponent_execClearStance_Params ClearStance_Params;
	memset(&ClearStance_Params, 0, sizeof(ClearStance_Params));
	memcpy_s(&ClearStance_Params.System, sizeof(ClearStance_Params.System), &System, sizeof(System));
	memcpy_s(&ClearStance_Params.StanceToClear, sizeof(ClearStance_Params.StanceToClear), &StanceToClear, sizeof(StanceToClear));

	uFnClearStance->iNative = 0;
	uFnClearStance->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnClearStance, &ClearStance_Params, nullptr);
	uFnClearStance->FunctionFlags |= 0x400;
	uFnClearStance->iNative = 32762;
};

// Function GearboxFramework.StanceComponent.SetReplicatedStance
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35927])
// Parameter Info:
// class UStanceDefinition*       NewStance                      (CPF_Parm)

void UStanceComponent::SetReplicatedStance(class UStanceDefinition* NewStance)
{
	static UFunction* uFnSetReplicatedStance = nullptr;

	if (!uFnSetReplicatedStance)
	{
		uFnSetReplicatedStance = UFunction::FindFunction("Function GearboxFramework.StanceComponent.SetReplicatedStance");
	}

	UStanceComponent_execSetReplicatedStance_Params SetReplicatedStance_Params;
	memset(&SetReplicatedStance_Params, 0, sizeof(SetReplicatedStance_Params));
	memcpy_s(&SetReplicatedStance_Params.NewStance, sizeof(SetReplicatedStance_Params.NewStance), &NewStance, sizeof(NewStance));

	uFnSetReplicatedStance->iNative = 0;
	uFnSetReplicatedStance->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetReplicatedStance, &SetReplicatedStance_Params, nullptr);
	uFnSetReplicatedStance->FunctionFlags |= 0x400;
	uFnSetReplicatedStance->iNative = 35927;
};

// Function GearboxFramework.StanceComponent.SetStance
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35934])
// Parameter Info:
// EStanceSystem                  System                         (CPF_Parm)
// class UStanceDefinition*       NewStance                      (CPF_Parm)

void UStanceComponent::SetStance(EStanceSystem System, class UStanceDefinition* NewStance)
{
	static UFunction* uFnSetStance = nullptr;

	if (!uFnSetStance)
	{
		uFnSetStance = UFunction::FindFunction("Function GearboxFramework.StanceComponent.SetStance");
	}

	UStanceComponent_execSetStance_Params SetStance_Params;
	memset(&SetStance_Params, 0, sizeof(SetStance_Params));
	memcpy_s(&SetStance_Params.System, sizeof(SetStance_Params.System), &System, sizeof(System));
	memcpy_s(&SetStance_Params.NewStance, sizeof(SetStance_Params.NewStance), &NewStance, sizeof(NewStance));

	uFnSetStance->iNative = 0;
	uFnSetStance->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetStance, &SetStance_Params, nullptr);
	uFnSetStance->FunctionFlags |= 0x400;
	uFnSetStance->iNative = 35934;
};

// Function GearboxFramework.StanceDefinition.TranslateDefaultStanceEnum
// [0x00022400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[36562])
// Parameter Info:
// struct FName                   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// EDefaultStance                 StanceEnum                     (CPF_Parm)

struct FName UStanceDefinition::TranslateDefaultStanceEnum(EDefaultStance StanceEnum)
{
	static UFunction* uFnTranslateDefaultStanceEnum = nullptr;

	if (!uFnTranslateDefaultStanceEnum)
	{
		uFnTranslateDefaultStanceEnum = UFunction::FindFunction("Function GearboxFramework.StanceDefinition.TranslateDefaultStanceEnum");
	}

	UStanceDefinition_execTranslateDefaultStanceEnum_Params TranslateDefaultStanceEnum_Params;
	memset(&TranslateDefaultStanceEnum_Params, 0, sizeof(TranslateDefaultStanceEnum_Params));
	memcpy_s(&TranslateDefaultStanceEnum_Params.StanceEnum, sizeof(TranslateDefaultStanceEnum_Params.StanceEnum), &StanceEnum, sizeof(StanceEnum));

	uFnTranslateDefaultStanceEnum->iNative = 0;
	uFnTranslateDefaultStanceEnum->FunctionFlags &= ~0x400;
	UStanceDefinition::StaticClass()->ProcessEvent(uFnTranslateDefaultStanceEnum, &TranslateDefaultStanceEnum_Params, nullptr);
	uFnTranslateDefaultStanceEnum->FunctionFlags |= 0x400;
	uFnTranslateDefaultStanceEnum->iNative = 36562;

	return TranslateDefaultStanceEnum_Params.ReturnValue;
};

// Function GearboxFramework.StanceDefinition.OnExitStance
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2512])
// Parameter Info:
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UStanceDefinition::OnExitStance(struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnExitStance = nullptr;

	if (!uFnOnExitStance)
	{
		uFnOnExitStance = UFunction::FindFunction("Function GearboxFramework.StanceDefinition.OnExitStance");
	}

	UStanceDefinition_execOnExitStance_Params OnExitStance_Params;
	memset(&OnExitStance_Params, 0, sizeof(OnExitStance_Params));
	memcpy_s(&OnExitStance_Params.ConsumerHandle, sizeof(OnExitStance_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnExitStance->iNative = 0;
	uFnOnExitStance->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnExitStance, &OnExitStance_Params, nullptr);
	uFnOnExitStance->FunctionFlags |= 0x400;
	uFnOnExitStance->iNative = 2512;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnExitStance_Params.ConsumerHandle, sizeof(OnExitStance_Params.ConsumerHandle));
};

// Function GearboxFramework.StanceDefinition.OnEnterStance
// [0x80420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags) (iNative[2513])
// Parameter Info:
// struct FBehaviorConsumerHandle ConsumerHandle                 (CPF_Const | CPF_Parm | CPF_OutParm)

void UStanceDefinition::OnEnterStance(struct FBehaviorConsumerHandle& ConsumerHandle)
{
	static UFunction* uFnOnEnterStance = nullptr;

	if (!uFnOnEnterStance)
	{
		uFnOnEnterStance = UFunction::FindFunction("Function GearboxFramework.StanceDefinition.OnEnterStance");
	}

	UStanceDefinition_execOnEnterStance_Params OnEnterStance_Params;
	memset(&OnEnterStance_Params, 0, sizeof(OnEnterStance_Params));
	memcpy_s(&OnEnterStance_Params.ConsumerHandle, sizeof(OnEnterStance_Params.ConsumerHandle), &ConsumerHandle, sizeof(ConsumerHandle));

	uFnOnEnterStance->iNative = 0;
	uFnOnEnterStance->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnOnEnterStance, &OnEnterStance_Params, nullptr);
	uFnOnEnterStance->FunctionFlags |= 0x400;
	uFnOnEnterStance->iNative = 2513;

	memcpy_s(&ConsumerHandle, sizeof(ConsumerHandle), &OnEnterStance_Params.ConsumerHandle, sizeof(OnEnterStance_Params.ConsumerHandle));
};

// Function GearboxFramework.StanceExpressionEvaluator.Evaluate
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[22809])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 ContextSource                  (CPF_Parm)

bool UStanceExpressionEvaluator::Evaluate(class UObject* ContextSource)
{
	static UFunction* uFnEvaluate = nullptr;

	if (!uFnEvaluate)
	{
		uFnEvaluate = UFunction::FindFunction("Function GearboxFramework.StanceExpressionEvaluator.Evaluate");
	}

	UStanceExpressionEvaluator_execEvaluate_Params Evaluate_Params;
	memset(&Evaluate_Params, 0, sizeof(Evaluate_Params));
	memcpy_s(&Evaluate_Params.ContextSource, sizeof(Evaluate_Params.ContextSource), &ContextSource, sizeof(ContextSource));

	uFnEvaluate->iNative = 0;
	uFnEvaluate->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnEvaluate, &Evaluate_Params, nullptr);
	uFnEvaluate->FunctionFlags |= 0x400;
	uFnEvaluate->iNative = 22809;

	return Evaluate_Params.ReturnValue;
};

// Function GearboxFramework.UtilityAxis.GetValue
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[24017])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUtilityContextData     ContextData                    (CPF_Const | CPF_Parm | CPF_OutParm)

float UUtilityAxis::GetValue(struct FUtilityContextData& ContextData)
{
	static UFunction* uFnGetValue = nullptr;

	if (!uFnGetValue)
	{
		uFnGetValue = UFunction::FindFunction("Function GearboxFramework.UtilityAxis.GetValue");
	}

	UUtilityAxis_execGetValue_Params GetValue_Params;
	memset(&GetValue_Params, 0, sizeof(GetValue_Params));
	memcpy_s(&GetValue_Params.ContextData, sizeof(GetValue_Params.ContextData), &ContextData, sizeof(ContextData));

	uFnGetValue->iNative = 0;
	uFnGetValue->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetValue, &GetValue_Params, nullptr);
	uFnGetValue->FunctionFlags |= 0x400;
	uFnGetValue->iNative = 24017;

	memcpy_s(&ContextData, sizeof(ContextData), &GetValue_Params.ContextData, sizeof(GetValue_Params.ContextData));

	return GetValue_Params.ReturnValue;
};

// Function GearboxFramework.UtilityAxis.GetDescription
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34082])
// Parameter Info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UUtilityAxis::GetDescription()
{
	static UFunction* uFnGetDescription = nullptr;

	if (!uFnGetDescription)
	{
		uFnGetDescription = UFunction::FindFunction("Function GearboxFramework.UtilityAxis.GetDescription");
	}

	UUtilityAxis_execGetDescription_Params GetDescription_Params;
	memset(&GetDescription_Params, 0, sizeof(GetDescription_Params));

	uFnGetDescription->iNative = 0;
	uFnGetDescription->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetDescription, &GetDescription_Params, nullptr);
	uFnGetDescription->FunctionFlags |= 0x400;
	uFnGetDescription->iNative = 34082;

	return GetDescription_Params.ReturnValue;
};

// Function GearboxFramework.UtilityAxis_Attribute.GetValue
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[24017])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUtilityContextData     ContextData                    (CPF_Const | CPF_Parm | CPF_OutParm)

float UUtilityAxis_Attribute::GetValue(struct FUtilityContextData& ContextData)
{
	static UFunction* uFnGetValue = nullptr;

	if (!uFnGetValue)
	{
		uFnGetValue = UFunction::FindFunction("Function GearboxFramework.UtilityAxis_Attribute.GetValue");
	}

	UUtilityAxis_Attribute_execGetValue_Params GetValue_Params;
	memset(&GetValue_Params, 0, sizeof(GetValue_Params));
	memcpy_s(&GetValue_Params.ContextData, sizeof(GetValue_Params.ContextData), &ContextData, sizeof(ContextData));

	uFnGetValue->iNative = 0;
	uFnGetValue->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetValue, &GetValue_Params, nullptr);
	uFnGetValue->FunctionFlags |= 0x400;
	uFnGetValue->iNative = 24017;

	memcpy_s(&ContextData, sizeof(ContextData), &GetValue_Params.ContextData, sizeof(GetValue_Params.ContextData));

	return GetValue_Params.ReturnValue;
};

// Function GearboxFramework.UtilityAxis_Attribute.GetDescription
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34082])
// Parameter Info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UUtilityAxis_Attribute::GetDescription()
{
	static UFunction* uFnGetDescription = nullptr;

	if (!uFnGetDescription)
	{
		uFnGetDescription = UFunction::FindFunction("Function GearboxFramework.UtilityAxis_Attribute.GetDescription");
	}

	UUtilityAxis_Attribute_execGetDescription_Params GetDescription_Params;
	memset(&GetDescription_Params, 0, sizeof(GetDescription_Params));

	uFnGetDescription->iNative = 0;
	uFnGetDescription->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetDescription, &GetDescription_Params, nullptr);
	uFnGetDescription->FunctionFlags |= 0x400;
	uFnGetDescription->iNative = 34082;

	return GetDescription_Params.ReturnValue;
};

// Function GearboxFramework.UtilityAxis_Condition.GetValue
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[24017])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUtilityContextData     ContextData                    (CPF_Const | CPF_Parm | CPF_OutParm)

float UUtilityAxis_Condition::GetValue(struct FUtilityContextData& ContextData)
{
	static UFunction* uFnGetValue = nullptr;

	if (!uFnGetValue)
	{
		uFnGetValue = UFunction::FindFunction("Function GearboxFramework.UtilityAxis_Condition.GetValue");
	}

	UUtilityAxis_Condition_execGetValue_Params GetValue_Params;
	memset(&GetValue_Params, 0, sizeof(GetValue_Params));
	memcpy_s(&GetValue_Params.ContextData, sizeof(GetValue_Params.ContextData), &ContextData, sizeof(ContextData));

	uFnGetValue->iNative = 0;
	uFnGetValue->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetValue, &GetValue_Params, nullptr);
	uFnGetValue->FunctionFlags |= 0x400;
	uFnGetValue->iNative = 24017;

	memcpy_s(&ContextData, sizeof(ContextData), &GetValue_Params.ContextData, sizeof(GetValue_Params.ContextData));

	return GetValue_Params.ReturnValue;
};

// Function GearboxFramework.UtilityAxis_Condition.GetDescription
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[34082])
// Parameter Info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UUtilityAxis_Condition::GetDescription()
{
	static UFunction* uFnGetDescription = nullptr;

	if (!uFnGetDescription)
	{
		uFnGetDescription = UFunction::FindFunction("Function GearboxFramework.UtilityAxis_Condition.GetDescription");
	}

	UUtilityAxis_Condition_execGetDescription_Params GetDescription_Params;
	memset(&GetDescription_Params, 0, sizeof(GetDescription_Params));

	uFnGetDescription->iNative = 0;
	uFnGetDescription->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetDescription, &GetDescription_Params, nullptr);
	uFnGetDescription->FunctionFlags |= 0x400;
	uFnGetDescription->iNative = 34082;

	return GetDescription_Params.ReturnValue;
};

// Function GearboxFramework.ViewBlockerComponent.Debug
// [0x00022400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags) (iNative[876])
// Parameter Info:

void UViewBlockerComponent::Debug()
{
	static UFunction* uFnDebug = nullptr;

	if (!uFnDebug)
	{
		uFnDebug = UFunction::FindFunction("Function GearboxFramework.ViewBlockerComponent.Debug");
	}

	UViewBlockerComponent_execDebug_Params Debug_Params;
	memset(&Debug_Params, 0, sizeof(Debug_Params));

	uFnDebug->iNative = 0;
	uFnDebug->FunctionFlags &= ~0x400;
	UViewBlockerComponent::StaticClass()->ProcessEvent(uFnDebug, &Debug_Params, nullptr);
	uFnDebug->FunctionFlags |= 0x400;
	uFnDebug->iNative = 876;
};

// Function GearboxFramework.ViewBlockerComponent.StaticGetModifier
// [0x00422400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[36273])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FVector                 EyeLoc                         (CPF_Const | CPF_Parm | CPF_OutParm)
// struct FVector                 TargetLoc                      (CPF_Const | CPF_Parm | CPF_OutParm)

float UViewBlockerComponent::StaticGetModifier(struct FVector& EyeLoc, struct FVector& TargetLoc)
{
	static UFunction* uFnStaticGetModifier = nullptr;

	if (!uFnStaticGetModifier)
	{
		uFnStaticGetModifier = UFunction::FindFunction("Function GearboxFramework.ViewBlockerComponent.StaticGetModifier");
	}

	UViewBlockerComponent_execStaticGetModifier_Params StaticGetModifier_Params;
	memset(&StaticGetModifier_Params, 0, sizeof(StaticGetModifier_Params));
	memcpy_s(&StaticGetModifier_Params.EyeLoc, sizeof(StaticGetModifier_Params.EyeLoc), &EyeLoc, sizeof(EyeLoc));
	memcpy_s(&StaticGetModifier_Params.TargetLoc, sizeof(StaticGetModifier_Params.TargetLoc), &TargetLoc, sizeof(TargetLoc));

	uFnStaticGetModifier->iNative = 0;
	uFnStaticGetModifier->FunctionFlags &= ~0x400;
	UViewBlockerComponent::StaticClass()->ProcessEvent(uFnStaticGetModifier, &StaticGetModifier_Params, nullptr);
	uFnStaticGetModifier->FunctionFlags |= 0x400;
	uFnStaticGetModifier->iNative = 36273;

	memcpy_s(&EyeLoc, sizeof(EyeLoc), &StaticGetModifier_Params.EyeLoc, sizeof(StaticGetModifier_Params.EyeLoc));
	memcpy_s(&TargetLoc, sizeof(TargetLoc), &StaticGetModifier_Params.TargetLoc, sizeof(StaticGetModifier_Params.TargetLoc));

	return StaticGetModifier_Params.ReturnValue;
};

// Function GearboxFramework.ViewBlockerComponent.GetModifier
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34132])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FVector                 EyeLoc                         (CPF_Const | CPF_Parm | CPF_OutParm)
// struct FVector                 TargetLoc                      (CPF_Const | CPF_Parm | CPF_OutParm)

float UViewBlockerComponent::GetModifier(struct FVector& EyeLoc, struct FVector& TargetLoc)
{
	static UFunction* uFnGetModifier = nullptr;

	if (!uFnGetModifier)
	{
		uFnGetModifier = UFunction::FindFunction("Function GearboxFramework.ViewBlockerComponent.GetModifier");
	}

	UViewBlockerComponent_execGetModifier_Params GetModifier_Params;
	memset(&GetModifier_Params, 0, sizeof(GetModifier_Params));
	memcpy_s(&GetModifier_Params.EyeLoc, sizeof(GetModifier_Params.EyeLoc), &EyeLoc, sizeof(EyeLoc));
	memcpy_s(&GetModifier_Params.TargetLoc, sizeof(GetModifier_Params.TargetLoc), &TargetLoc, sizeof(TargetLoc));

	uFnGetModifier->iNative = 0;
	uFnGetModifier->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetModifier, &GetModifier_Params, nullptr);
	uFnGetModifier->FunctionFlags |= 0x400;
	uFnGetModifier->iNative = 34132;

	memcpy_s(&EyeLoc, sizeof(EyeLoc), &GetModifier_Params.EyeLoc, sizeof(GetModifier_Params.EyeLoc));
	memcpy_s(&TargetLoc, sizeof(TargetLoc), &GetModifier_Params.TargetLoc, sizeof(GetModifier_Params.TargetLoc));

	return GetModifier_Params.ReturnValue;
};

// Function GearboxFramework.ViewBlockerComponent.SetBlockPercent
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[35885])
// Parameter Info:
// struct FAIRange                NewBlockPErcent                (CPF_Const | CPF_Parm | CPF_OutParm)

void UViewBlockerComponent::SetBlockPercent(struct FAIRange& NewBlockPErcent)
{
	static UFunction* uFnSetBlockPercent = nullptr;

	if (!uFnSetBlockPercent)
	{
		uFnSetBlockPercent = UFunction::FindFunction("Function GearboxFramework.ViewBlockerComponent.SetBlockPercent");
	}

	UViewBlockerComponent_execSetBlockPercent_Params SetBlockPercent_Params;
	memset(&SetBlockPercent_Params, 0, sizeof(SetBlockPercent_Params));
	memcpy_s(&SetBlockPercent_Params.NewBlockPErcent, sizeof(SetBlockPercent_Params.NewBlockPErcent), &NewBlockPErcent, sizeof(NewBlockPErcent));

	uFnSetBlockPercent->iNative = 0;
	uFnSetBlockPercent->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetBlockPercent, &SetBlockPercent_Params, nullptr);
	uFnSetBlockPercent->FunctionFlags |= 0x400;
	uFnSetBlockPercent->iNative = 35885;

	memcpy_s(&NewBlockPErcent, sizeof(NewBlockPErcent), &SetBlockPercent_Params.NewBlockPErcent, sizeof(SetBlockPercent_Params.NewBlockPErcent));
};

// Function GearboxFramework.ViewBlockerComponent.SetRadius
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35923])
// Parameter Info:
// float                          NewRadius                      (CPF_Const | CPF_Parm)

void UViewBlockerComponent::SetRadius(float NewRadius)
{
	static UFunction* uFnSetRadius = nullptr;

	if (!uFnSetRadius)
	{
		uFnSetRadius = UFunction::FindFunction("Function GearboxFramework.ViewBlockerComponent.SetRadius");
	}

	UViewBlockerComponent_execSetRadius_Params SetRadius_Params;
	memset(&SetRadius_Params, 0, sizeof(SetRadius_Params));
	memcpy_s(&SetRadius_Params.NewRadius, sizeof(SetRadius_Params.NewRadius), &NewRadius, sizeof(NewRadius));

	uFnSetRadius->iNative = 0;
	uFnSetRadius->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnSetRadius, &SetRadius_Params, nullptr);
	uFnSetRadius->FunctionFlags |= 0x400;
	uFnSetRadius->iNative = 35923;
};

// Function GearboxFramework.ViewConeComponent.StaticGetRate
// [0x00422400] (FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[36274])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AActor*                  AIOwner                        (CPF_Parm)
// EAwareness                     Awareness                      (CPF_Parm)
// struct FVector                 TargetLoc                      (CPF_Const | CPF_Parm | CPF_OutParm)

float UViewConeComponent::StaticGetRate(class AActor* AIOwner, EAwareness Awareness, struct FVector& TargetLoc)
{
	static UFunction* uFnStaticGetRate = nullptr;

	if (!uFnStaticGetRate)
	{
		uFnStaticGetRate = UFunction::FindFunction("Function GearboxFramework.ViewConeComponent.StaticGetRate");
	}

	UViewConeComponent_execStaticGetRate_Params StaticGetRate_Params;
	memset(&StaticGetRate_Params, 0, sizeof(StaticGetRate_Params));
	memcpy_s(&StaticGetRate_Params.AIOwner, sizeof(StaticGetRate_Params.AIOwner), &AIOwner, sizeof(AIOwner));
	memcpy_s(&StaticGetRate_Params.Awareness, sizeof(StaticGetRate_Params.Awareness), &Awareness, sizeof(Awareness));
	memcpy_s(&StaticGetRate_Params.TargetLoc, sizeof(StaticGetRate_Params.TargetLoc), &TargetLoc, sizeof(TargetLoc));

	uFnStaticGetRate->iNative = 0;
	uFnStaticGetRate->FunctionFlags &= ~0x400;
	UViewConeComponent::StaticClass()->ProcessEvent(uFnStaticGetRate, &StaticGetRate_Params, nullptr);
	uFnStaticGetRate->FunctionFlags |= 0x400;
	uFnStaticGetRate->iNative = 36274;

	memcpy_s(&TargetLoc, sizeof(TargetLoc), &StaticGetRate_Params.TargetLoc, sizeof(StaticGetRate_Params.TargetLoc));

	return StaticGetRate_Params.ReturnValue;
};

// Function GearboxFramework.ViewConeComponent.GetRate
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags) (iNative[34189])
// Parameter Info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// EAwareness                     Awareness                      (CPF_Parm)
// struct FVector                 TargetLoc                      (CPF_Const | CPF_Parm | CPF_OutParm)

float UViewConeComponent::GetRate(EAwareness Awareness, struct FVector& TargetLoc)
{
	static UFunction* uFnGetRate = nullptr;

	if (!uFnGetRate)
	{
		uFnGetRate = UFunction::FindFunction("Function GearboxFramework.ViewConeComponent.GetRate");
	}

	UViewConeComponent_execGetRate_Params GetRate_Params;
	memset(&GetRate_Params, 0, sizeof(GetRate_Params));
	memcpy_s(&GetRate_Params.Awareness, sizeof(GetRate_Params.Awareness), &Awareness, sizeof(Awareness));
	memcpy_s(&GetRate_Params.TargetLoc, sizeof(GetRate_Params.TargetLoc), &TargetLoc, sizeof(TargetLoc));

	uFnGetRate->iNative = 0;
	uFnGetRate->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnGetRate, &GetRate_Params, nullptr);
	uFnGetRate->FunctionFlags |= 0x400;
	uFnGetRate->iNative = 34189;

	memcpy_s(&TargetLoc, sizeof(TargetLoc), &GetRate_Params.TargetLoc, sizeof(GetRate_Params.TargetLoc));

	return GetRate_Params.ReturnValue;
};

// Function GearboxFramework.ViewConeComponent.Valid
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[30533])
// Parameter Info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// EAwareness                     Awareness                      (CPF_Parm)

bool UViewConeComponent::Valid(EAwareness Awareness)
{
	static UFunction* uFnValid = nullptr;

	if (!uFnValid)
	{
		uFnValid = UFunction::FindFunction("Function GearboxFramework.ViewConeComponent.Valid");
	}

	UViewConeComponent_execValid_Params Valid_Params;
	memset(&Valid_Params, 0, sizeof(Valid_Params));
	memcpy_s(&Valid_Params.Awareness, sizeof(Valid_Params.Awareness), &Awareness, sizeof(Awareness));

	uFnValid->iNative = 0;
	uFnValid->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnValid, &Valid_Params, nullptr);
	uFnValid->FunctionFlags |= 0x400;
	uFnValid->iNative = 30533;

	return Valid_Params.ReturnValue;
};

// Function GearboxFramework.WireTerminal.Destroyed
// [0x12020800] (FUNC_Event | FUNC_Public | FUNC_DLLImport | FUNC_K2Pure | FUNC_AllFlags)
// Parameter Info:

void AWireTerminal::eventDestroyed()
{
	static UFunction* uFnDestroyed = nullptr;

	if (!uFnDestroyed)
	{
		uFnDestroyed = UFunction::FindFunction("Function GearboxFramework.WireTerminal.Destroyed");
	}

	AWireTerminal_eventDestroyed_Params Destroyed_Params;
	memset(&Destroyed_Params, 0, sizeof(Destroyed_Params));

	this->ProcessEvent(uFnDestroyed, &Destroyed_Params, nullptr);
};

// Function GearboxFramework.WireTerminal.NotifyModifiedTerminal
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags) (iNative[35183])
// Parameter Info:

void AWireTerminal::NotifyModifiedTerminal()
{
	static UFunction* uFnNotifyModifiedTerminal = nullptr;

	if (!uFnNotifyModifiedTerminal)
	{
		uFnNotifyModifiedTerminal = UFunction::FindFunction("Function GearboxFramework.WireTerminal.NotifyModifiedTerminal");
	}

	AWireTerminal_execNotifyModifiedTerminal_Params NotifyModifiedTerminal_Params;
	memset(&NotifyModifiedTerminal_Params, 0, sizeof(NotifyModifiedTerminal_Params));

	uFnNotifyModifiedTerminal->iNative = 0;
	uFnNotifyModifiedTerminal->FunctionFlags &= ~0x400;
	this->ProcessEvent(uFnNotifyModifiedTerminal, &NotifyModifiedTerminal_Params, nullptr);
	uFnNotifyModifiedTerminal->FunctionFlags |= 0x400;
	uFnNotifyModifiedTerminal->iNative = 35183;
};

/*
# ========================================================================================= #
#
# ========================================================================================= #
*/

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
