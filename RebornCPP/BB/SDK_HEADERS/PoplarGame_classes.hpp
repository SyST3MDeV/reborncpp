/*
#############################################################################################
# BattleBorn (1.0.0.0) SDK
# Generated with the CodeRedGenerator v1.0.3
# ========================================================================================= #
# File: PoplarGame_classes.hpp
# ========================================================================================= #
# Credits: TheFeckless, ItsBranK
# Links: www.github.com/CodeRedModding/CodeRed-Generator, www.twitter.com/ItsBranK
#############################################################################################
*/
#pragma once

#ifdef _MSC_VER
	#pragma pack(push, 0x8)
#endif

/*
# ========================================================================================= #
# Constants
# ========================================================================================= #
*/

#define CONST_SCRIPT_POST_MATCH_SPECTATOR_TEAM_NUM              2
#define CONST_MAX_PLAYER_MUSIC_STATES                           3
#define CONST_MAX_NUM_REPLICATED_GLOBAL_KILL_EVENTS             1
#define CONST_PONG_RESPONSE_MATCH_IN_PROGRESS                   1
#define CONST_PONG_RESPONSE_MATCH_ENDED                         0
#define CONST_ITEM_NONE                                         0
#define CONST_VALUE_MATCHMAKING_STATE_FIND_OPPOSING_TEAM        2
#define CONST_VALUE_MATCHMAKING_STATE_FILL_TEAM                 1
#define CONST_PROPERTY_MAX_SKILL_RATING                         0
#define CONST_PROPERTY_MIN_SKILL_RATING                         0
#define CONST_PROPERTY_SKILL_RATING                             0
#define CONST_PROPERTY_AVAILABLE_SLOTS                          0
#define CONST_PROPERTY_IN_MATCHMAKING                           0
#define CONST_PROPERTY_MATCHMAKING_STATE                        0
#define CONST_PROPERTY_EXPERIENCE_VERSION_ID                    0
#define CONST_PROPERTY_EXPERIENCE_ID                            0
#define CONST_CONTEXT_PRESENCE_PLAYING                          3
#define CONST_CONTEXT_PRESENCE_MATCHMAKING                      2
#define CONST_CONTEXT_PRESENCE_LOBBY                            1
#define CONST_CONTEXT_PRESENCE_PRESS_START                      0
#define CONST_CONTEXT_GAME_MAP                                  1
#define CONST_CONTEXT_GAME_MODE                                 0
#define CONST_PLAYER_NOTIFICATION_TIME                          3
#define CONST_AUG_FAIL_EXCLUSIVE_AUG_ALREADY_PURCHASED          -
#define CONST_AUG_FAIL_INTERNAL_ERROR                           -
#define CONST_AUG_FAIL_AUGMENTATION_UNAVAILABLE                 -
#define CONST_AUG_FAIL_AUGMENTATION_MAXED                       -
#define CONST_AUG_FAIL_INSUFFICIENT_LEVEL                       -
#define CONST_AUG_FAIL_INSUFFICIENT_FUNDS                       -
#define CONST_AUG_SUCCESS                                       0
#define CONST_AUG_PENDING                                       1
#define CONST_MAX_LEVELS_PER_AUG                                5
#define CONST_MAX_CATEGORIES_PER_SHOP                           1
#define CONST_MAX_AUGS_PER_CATEGORY                             2
#define CONST_MAX_PRIVILEGE_ENTITLEMENTS                        2
#define CONST_MAX_PROGRESS_PERCENT                              1
#define CONST_UpdateInterval_CharSkills_NonFractionalCooldown   0
#define CONST_UpdateInterval_CharSkills_ButtonMap               1
#define CONST_NUM_DEAD_PLAYER_LIST_OBJECTS                      5
#define CONST_MAX_CONTROL_POINTS                                3
#define CONST_MHW_GMW_OBJECTIVE_COUNT                           5
#define CONST_UpdateInterval_GameStatus                         1
#define CONST_MINIMAP_HEIGHT                                    4
#define CONST_MINIMAP_WIDTH                                     5
#define CONST_MAX_SUB_CLIPS                                     4
#define CONST_UpdateInterval_ResourceBarLower                   0
#define CONST_UpdateInterval_SkillPointsAvail                   1
#define CONST_MAX_STAMINA                                       1
#define CONST_NUM_PREVIOUS_STAMINA_VALUES                       1
#define CONST_NUM_VOTE_CLIPS                                    5
#define CONST_TRACKED_NAMEPLATE_PAWNS                           1
#define CONST_MAX_BUFF_ICONS                                    9
#define CONST_MAX_BUILDABLES                                    3
#define CONST_ALLEGIANCE_SIZE                                   3
#define CONST_MAX_CHARACTERS_TO_INTRODUCE                       1
#define CONST_BUTTON_INDEX_YES                                  1
#define CONST_BUTTON_INDEX_NO                                   0
#define CONST_MAX_UI_PLAYERS                                    2
#define CONST_BASIC_GREEN_NO_STANDIN_BACKGROUND_TIME            2
#define CONST_MAX_UI_LORE_CHALLENGES                            5
#define CONST_NUM_COMMAND_PAGES                                 4
#define CONST_ITEM_GRID_WIDTH                                   5
#define CONST_MOTD_FADE_FAST                                    0
#define CONST_MOTD_FADE_SLOW                                    1
#define CONST_MOTD_STRUCT_KEY_DISPLAYTIME                       '\"'
#define CONST_MOTD_STRUCT_KEY_BODY                              '\"'
#define CONST_MOTD_STRUCT_KEY_HEADER                            '\"'
#define CONST_MAX_LOOT_SPAWNS_PER_FRAME                         1
#define CONST_MAX_PENDING_LOOT_REQUESTS                         1
#define CONST_MAX_STACK_LEVELS                                  3
#define CONST_MAX_EFFECT_CHANNELS                               3
#define CONST_MAX_VIEWPORTS                                     4
#define CONST_ItemCapacity                                      6
#define CONST_MAX_REPLICATED_UNITS                              2
#define CONST_MAX_AREA_WAYPOINTS                                4
#define CONST_MAX_REGISTERED_MINIMAPS                           4
#define CONST_MAX_METAGAME_ITEMS_TO_SHOW                        3
#define CONST_MAX_POPLAR_MISSION_OBJECTIVES                     1
#define CONST_MAX_REPLICATED_WAYPOINTS                          2
#define CONST_MISSION_OBJECTIVE_COMPLETE                        2
#define CONST_MISSION_OBJECTIVE_FAILED                          2
#define CONST_MISSION_OBJECTIVE_NOT_ACTIVE                      2
#define CONST_MAX_SCRIPT_CHARACTER_STATS                        4
#define CONST_PLAYER_REPORT_BUTTON_REASON_QUIT                  1
#define CONST_PLAYER_REPORT_BUTTON_REASON_ABUSIVE               1
#define CONST_PLAYER_REPORT_BUTTON_REASON_IDLE                  1
#define CONST_PLAYER_REPORT_BUTTON_REASON_CHEATING              1
#define CONST_PLAYER_DETAILS_BUTTON_ID_REPORT                   7
#define CONST_PLAYER_DETAILS_BUTTON_ID_BACK                     6
#define CONST_PLAYER_DETAILS_BUTTON_ID_KICK                     5
#define CONST_PLAYER_DETAILS_BUTTON_ID_UNMUTE                   4
#define CONST_PLAYER_DETAILS_BUTTON_ID_MUTE                     3
#define CONST_PLAYER_DETAILS_BUTTON_ID_GAMERCARD                2
#define CONST_PLAYER_DETAILS_BUTTON_ID_INVITE                   1
#define CONST_PLAYER_DETAILS_BUTTON_ID_JOIN                     0
#define CONST_MAX_PLAYER_DETAILS_BUTTONS                        7
#define CONST_WEATHER_PSC_INSTANCE_DATA_NAME                    '\''
#define CONST_MAX_REWARD_EVENT_NOTIFICATIONS                    6
#define CONST_MAX_COMBINE_REWARD_TIME                           0
#define CONST_MAX_UI_TEAM_COMPARE_STAT_ROWS                     5
#define CONST_MAX_UI_TEAM_COMPARE_STATS                         3
#define CONST_MAX_UI_STAT_COLUMNS                               8
#define CONST_EVENT_ID_BACK                                     -
#define CONST_BASE_SYSTEM_SETTING_EVENT_ID                      1
#define CONST_EVENT_ID_APPLY_CHANGES                            5
#define CONST_EVENT_ID_ACHIEVEMENTS                             7
#define CONST_EVENT_ID_SURRENDER_VOTE_NO                        6
#define CONST_EVENT_ID_SURRENDER_VOTE_YES                       5
#define CONST_EVENT_ID_SURRENDER                                4
#define CONST_EVENT_ID_EXIT                                     3
#define CONST_EVENT_ID_DEBUG                                    2
#define CONST_EVENT_ID_OPTIONS                                  1
#define CONST_EVENT_ID_RESUME                                   0
#define CONST_CLASH_SCREEN_MATINEE_TIME                         3
#define CONST_MAX_STANDIN_PLAYERS                               5
#define CONST_TotalSkillsToDisplay                              6
#define CONST_BonusSkillsToDisplay                              2
#define CONST_RealSkillsToDisplay                               4
#define CONST_NUM_PLAYER_ENTRIES                                4
#define CONST_MAX_PVE_OBJECTIVE_PIPS                            1
#define CONST_MAX_PVE_TRACKED_UNITS_NUM                         2
#define CONST_MAX_SCRIPT_DAILY_CHALLENGES_HISTORY               5
#define CONST_MAX_SCRIPT_DAILY_CHALLENGES                       3
#define CONST_HeroProgress_Char_MetaItemCount                   2

/*
# ========================================================================================= #
# Enums
# ========================================================================================= #
*/

// Enum PoplarGame.Action_BotAttack.EBotZoomMethod
enum class EBotZoomMethod : uint8_t
{
	BZM_Never                                          = 0,
	BZM_Stationary                                     = 1,
	BZM_Always                                         = 2,
	BZM_END                                            = 3
};

// Enum PoplarGame.Action_BotAttack.EBotAttackWeapon
enum class EBotAttackWeapon : uint8_t
{
	BAW_MainHand                                       = 0,
	BAW_OffHand                                        = 1,
	BAW_Melee                                          = 2,
	BAW_END                                            = 3
};

// Enum PoplarGame.PoplarActionSkillDefinition.EActionSkillSlot
enum class EActionSkillSlot : uint8_t
{
	ASS_SlotOne                                        = 0,
	ASS_SlotTwo                                        = 1,
	ASS_SlotThree                                      = 2,
	ASS_SlotFour                                       = 3,
	ASS_SlotFive                                       = 4,
	ASS_END                                            = 5
};

// Enum PoplarGame.PoplarActionSkillDefinition.EnergyRequirementAlgorithmType
enum class EnergyRequirementAlgorithmType : uint8_t
{
	ERAT_CurrentValueCheck                             = 0,
	ERAT_MinValueCheck                                 = 1,
	ERAT_MaxValueCheck                                 = 2,
	ERAT_END                                           = 3
};

// Enum PoplarGame.PoplarActionSkillDefinition.EPlayerInputRestriction
enum class EPlayerInputRestriction : uint8_t
{
	CCINPUT_Movement                                   = 0,
	CCINPUT_Sprint                                     = 1,
	CCINPUT_Look                                       = 2,
	CCINPUT_Jump                                       = 3,
	CCINPUT_Skills                                     = 4,
	CCINPUT_Weapons                                    = 5,
	CCINPUT_HUD                                        = 6,
	CCINPUT_Teleport                                   = 7,
	CCINPUT_Interaction                                = 8,
	CCINPUT_Reload                                     = 9,
	CCINPUT_END                                        = 10
};

// Enum PoplarGame.PoplarActionSkillDefinition.ESkillActivationFailedReason
enum class ESkillActivationFailedReason : uint8_t
{
	SAFR_None                                          = 0,
	SAFR_CCDebuff                                      = 1,
	SAFR_InvalidTarget                                 = 2,
	SAFR_OnCooldown                                    = 3,
	SAFR_END                                           = 4
};

// Enum PoplarGame.Action_BotUseIO.EIOAllegianceFilter
enum class EIOAllegianceFilter : uint8_t
{
	IOAllegianceFilter_Unspecified                     = 0,
	IOAllegianceFilter_Allies                          = 1,
	IOAllegianceFilter_Opponents                       = 2,
	IOAllegianceFilter_Enemies                         = 3,
	IOAllegianceFilter_END                             = 4
};

// Enum PoplarGame.CommandRingComponent.ETargetCommandRingLocationType
enum class ETargetCommandRingLocationType : uint8_t
{
	CR_TARGET_LOC_Base                                 = 0,
	CR_TARGET_LOC_Ground                               = 1,
	CR_TARGET_LOC_Feet                                 = 2,
	CR_TARGET_LOC_END                                  = 3
};

// Enum PoplarGame.CommandRingComponent.ETargetCommandRingAlignmentType
enum class ETargetCommandRingAlignmentType : uint8_t
{
	CR_TARGET_ALIGN_None                               = 0,
	CR_TARGET_ALIGN_Surface_World                      = 1,
	CR_TARGET_ALIGN_Surface_View                       = 2,
	CR_TARGET_ALIGN_View                               = 3,
	CR_TARGET_ALIGN_View2D                             = 4,
	CR_TARGET_ALIGN_Pawn                               = 5,
	CR_TARGET_ALIGN_END                                = 6
};

// Enum PoplarGame.AssistModifiersDefinition.EAssistModifier
enum class EAssistModifier : uint8_t
{
	AssistMOD_HealedKiller                             = 0,
	AssistMOD_HealedAssister                           = 1,
	AssistMOD_ShieldedKiller                           = 2,
	AssistMOD_ShieldedAssister                         = 3,
	AssistMOD_BuffedKiller                             = 4,
	AssistMOD_DamagedVictim                            = 5,
	AssistMOD_DidntDamageVictim                        = 6,
	AssistMOD_NeverDamagedByVictim                     = 7,
	AssistMOD_TopDamageDealer                          = 8,
	AssistMOD_StunnedVictim                            = 9,
	AssistMOD_BlindedVictim                            = 10,
	AssistMOD_SlowedVictim                             = 11,
	AssistMOD_DebuffedVictim                           = 12,
	AssistMOD_DoubleAssist                             = 13,
	AssistMOD_TripleAssist                             = 14,
	AssistMOD_QuadrupleAssist                          = 15,
	AssistMOD_PentaAssist                              = 16,
	AssistMOD_InsaneAssist                             = 17,
	AssistMOD_TierOneAssistStreak                      = 18,
	AssistMOD_TierTwoAssistStreak                      = 19,
	AssistMOD_TierThreeAssistStreak                    = 20,
	AssistMOD_TierFourAssistStreak                     = 21,
	AssistMOD_TierFiveAssistStreak                     = 22,
	AssistMOD_VictimMarkedWithPlayerAlert              = 23,
	AssistMOD_CrowdControlledVictim                    = 24,
	AssistMOD_MasterOfKiller                           = 25,
	AssistMOD_FromTheGrave                             = 26,
	AssistMOD_MasterOfAssister                         = 27,
	AssistMOD_END                                      = 28
};

// Enum PoplarGame.IAttackSequence.EAttackTransitionState
enum class EAttackTransitionState : uint8_t
{
	EATS_Active                                        = 0,
	EATS_Inactive                                      = 1,
	EATS_Pending                                       = 2,
	EATS_END                                           = 3
};

// Enum PoplarGame.IAttackSequence.EAttackButtonAction
enum class EAttackButtonAction : uint8_t
{
	EABA_Press                                         = 0,
	EABA_PressAndHold                                  = 1,
	EABA_Hold                                          = 2,
	EABA_Tap                                           = 3,
	EABA_Release                                       = 4,
	EABA_Auto                                          = 5,
	EABA_END                                           = 6
};

// Enum PoplarGame.IAttackSequence.EAttackButton
enum class EAttackButton : uint8_t
{
	EAB_MainHand                                       = 0,
	EAB_OffHand                                        = 1,
	EAB_Base                                           = 2,
	EAB_END                                            = 3
};

// Enum PoplarGame.ICreditsProvider.TeamCreditsType
enum class ETeamCreditsType : uint8_t
{
	TCT_DontAwardCreditsToTeam                         = 0,
	TCT_AwardCreditsToTeamGlobally                     = 1,
	TCT_AwardCreditsToTeamByDistance                   = 2,
	TCT_AwardCreditsToKillerAndAssisters               = 3,
	TCT_AwardCreditsToTeamGloballyDividedAmongTeammates = 4,
	TCT_END                                            = 5
};

// Enum PoplarGame.ICreditsProvider.CreditsType
enum class ECreditsType : uint8_t
{
	CREDITS_Kill                                       = 0,
	CREDITS_Assist                                     = 1,
	CREDITS_Trickle                                    = 2,
	CREDITS_Objective                                  = 3,
	CREDITS_Pickup                                     = 4,
	CREDITS_END                                        = 5
};

// Enum PoplarGame.PoplarTypes.EMetaBoostType
enum class EMetaBoostType : uint8_t
{
	EMBT_None                                          = 0,
	EMBT_XPBoost                                       = 1,
	EMBT_LootBoost                                     = 2,
	EMBT_LordPoplar                                    = 3,
	EMBT_TrainingPass                                  = 4,
	EMBT_KillEffect                                    = 5,
	EMBT_END                                           = 6
};

// Enum PoplarGame.PoplarTypes.ETradingAction
enum class ETradingAction : uint8_t
{
	TRADE_Request                                      = 0,
	TRADE_Confirm                                      = 1,
	TRADE_Cancel                                       = 2,
	TRADE_END                                          = 3
};

// Enum PoplarGame.PoplarTypes.ESurrenderVoteType
enum class ESurrenderVoteType : uint8_t
{
	SURRENDER_VOTE_AGAINST                             = 0,
	SURRENDER_VOTE_FOR                                 = 1,
	SURRENDER_VOTE_NONE                                = 2,
	SURRENDER_VOTE_END                                 = 3
};

// Enum PoplarGame.PoplarTypes.EPoplarMissionObjectiveEvent
enum class EPoplarMissionObjectiveEvent : uint8_t
{
	MISSIONOBJECTIVE_Activated                         = 0,
	MISSIONOBJECTIVE_Deactivated                       = 1,
	MISSIONOBJECTIVE_Incremented                       = 2,
	MISSIONOBJECTIVE_Decremented                       = 3,
	MISSIONOBJECTIVE_Completed                         = 4,
	MISSIONOBJECTIVE_Failed                            = 5,
	MISSIONOBJECTIVE_Cleared                           = 6,
	MISSIONOBJECTIVE_Tracked                           = 7,
	MISSIONOBJECTIVE_END                               = 8
};

// Enum PoplarGame.PoplarTypes.EPoplarMissionStatus
enum class EPoplarMissionStatus : uint8_t
{
	POPLARMISSION_NotStarted                           = 0,
	POPLARMISSION_Active                               = 1,
	POPLARMISSION_Complete                             = 2,
	POPLARMISSION_END                                  = 3
};

// Enum PoplarGame.PoplarTypes.eCharacterStatUIPosition
enum class EeCharacterStatUIPosition : uint8_t
{
	LeftMiddle                                         = 0,
	LeftBottom                                         = 1,
	RightTop                                           = 2,
	RightMiddle                                        = 3,
	RightBottom                                        = 4,
	eCharacterStatUIPosition_END                       = 5
};

// Enum PoplarGame.PoplarTypes.EScoreboardStatPlayerOrder
enum class EScoreboardStatPlayerOrder : uint8_t
{
	SSPO_HighestToLowest                               = 0,
	SSPO_LowestToHighest                               = 1,
	SSPO_END                                           = 2
};

// Enum PoplarGame.PoplarTypes.PlayerMatchOutcome
enum class EPlayerMatchOutcome : uint8_t
{
	PMO_Incomplete                                     = 0,
	PMO_Win                                            = 1,
	PMO_Loss                                           = 2,
	PMO_Tie                                            = 3,
	PMO_SurrenderWin                                   = 4,
	PMO_SurrenderLoss                                  = 5,
	PMO_TooFewPlayers                                  = 6,
	PMO_Abandoned                                      = 7,
	PMO_END                                            = 8
};

// Enum PoplarGame.PoplarTypes.MatchOutcome
enum class EMatchOutcome : uint8_t
{
	MATCHOUTCOME_Normal                                = 0,
	MATCHOUTCOME_Incomplete                            = 1,
	MATCHOUTCOME_Surrender                             = 2,
	MATCHOUTCOME_TooFewPlayers                         = 3,
	MATCHOUTCOME_Abandoned                             = 4,
	MATCHOUTCOME_END                                   = 5
};

// Enum PoplarGame.PoplarTypes.MatchResultDataRewardModifierType
enum class EMatchResultDataRewardModifierType : uint8_t
{
	ERMT_NONE                                          = 0,
	ERMT_CURRENCY                                      = 1,
	ERMT_XP                                            = 2,
	ERMT_CHARACTER_XP                                  = 3,
	ERMT_END                                           = 4
};

// Enum PoplarGame.PoplarTypes.EditorSparkUnlockType
enum class EditorSparkUnlockType : uint8_t
{
	SPARKUNLOCK_None                                   = 0,
	SPARKUNLOCK_Character                              = 1,
	SPARKUNLOCK_END                                    = 2
};

// Enum PoplarGame.PoplarTypes.DeferredSparkRequestType
enum class EDeferredSparkRequestType : uint8_t
{
	EDITORSPARK_AddUnlock                              = 0,
	EDITORSPARK_END                                    = 1
};

// Enum PoplarGame.PoplarTypes.ECapturePadState
enum class ECapturePadState : uint8_t
{
	ECAPTPAD_Capturing                                 = 0,
	ECAPTPAD_Neutralizing                              = 1,
	ECAPTPAD_Decaying_Capturing                        = 2,
	ECAPTPAD_Decaying_Neutralizing                     = 3,
	ECAPTPAD_Idle                                      = 4,
	ECAPTPAD_END                                       = 5
};

// Enum PoplarGame.PoplarTypes.EOnStateChangedEventOutputs
enum class EOnStateChangedEventOutputs : uint8_t
{
	ESTATE_Off                                         = 0,
	ESTATE_On                                          = 1,
	ESTATE_Disabled                                    = 2,
	ESTATE_END                                         = 3
};

// Enum PoplarGame.PoplarTypes.EBuffDefinitionTag
enum class EBuffDefinitionTag : uint8_t
{
	BUFFTAG_Good                                       = 0,
	BUFFTAG_Bad                                        = 1,
	BUFFTAG_Stun                                       = 2,
	BUFFTAG_Slow                                       = 3,
	BUFFTAG_Immobilize                                 = 4,
	BUFFTAG_Silence                                    = 5,
	BUFFTAG_Daze                                       = 6,
	BUFFTAG_Fear                                       = 7,
	BUFFTAG_HealthDrain                                = 8,
	BUFFTAG_HealthRegen                                = 9,
	BUFFTAG_ManaDrain                                  = 10,
	BUFFTAG_ManaRegen                                  = 11,
	BUFFTAG_ArmorIncrease                              = 12,
	BUFFTAG_ArmorReduce                                = 13,
	BUFFTAG_AttackPowerIncrease                        = 14,
	BUFFTAG_AttackPowerDecrease                        = 15,
	BUFFTAG_SkillPowerIncrease                         = 16,
	BUFFTAG_SkillPowerDecrease                         = 17,
	BUFFTAG_AttackSpeedIncrease                        = 18,
	BUFFTAG_AttackSpeedDecrease                        = 19,
	BUFFTAG_ReloadSpeedIncrease                        = 20,
	BUFFTAG_ReloadSpeedDecrease                        = 21,
	BUFFTAG_ElementalResistIncrease                    = 22,
	BUFFTAG_ElementalResistDecrease                    = 23,
	BUFFTAG_MaxHealthIncrease                          = 24,
	BUFFTAG_MaxManaIncrease                            = 25,
	BUFFTAG_MovementSpeedIncrease                      = 26,
	BUFFTAG_Charm                                      = 27,
	BUFFTAG_ForceMove                                  = 28,
	BUFFTAG_Provoke                                    = 29,
	BUFFTAG_Blind                                      = 30,
	BUFFTAG_Shield                                     = 31,
	BUFFTAG_Stealth                                    = 32,
	BUFFTAG_Jamming                                    = 33,
	BUFFTAG_HealingDealt                               = 34,
	BUFFTAG_HealingTaken                               = 35,
	BUFFTAG_CritDamageDealt                            = 36,
	BUFFTAG_CritDamageTaken                            = 37,
	BUFFTAG_BuildCost                                  = 38,
	BUFFTAG_MaxShieldIncrease                          = 39,
	BUFFTAG_EarnedCurrency                             = 40,
	BUFFTAG_InMatchCurrency                            = 41,
	BUFFTAG_ShieldRegenDelay                           = 42,
	BUFFTAG_ShieldRegenRate                            = 43,
	BUFFTAG_CrowdControlDuration                       = 44,
	BUFFTAG_SkillCooldown                              = 45,
	BUFFTAG_SprintMoveSpeed                            = 46,
	BUFFTAG_AllTypesDamageDealt                        = 47,
	BUFFTAG_AllTypesDamageTaken                        = 48,
	BUFFTAG_SkillDamageTaken                           = 49,
	BUFFTAG_WeaponDamageTaken                          = 50,
	BUFFTAG_WeaponRecoil                               = 51,
	BUFFTAG_ShieldPenetration                          = 52,
	BUFFTAG_ScoreBoost                                 = 53,
	BUFFTAG_JumpHeight                                 = 54,
	BUFFTAG_Lifesteal                                  = 55,
	BUFFTAG_Shieldsteal                                = 56,
	BUFFTAG_AreaEffectSize                             = 57,
	BUFFTAG_SkillDuration                              = 58,
	BUFFTAG_ProjectileSpeed                            = 59,
	BUFFTAG_PlayerMetagameLevel                        = 60,
	BUFFTAG_CharacterMetagameLevel                     = 61,
	BUFFTAG_CharacterInMatchLevel                      = 62,
	BUFFTAG_DamageDealtToThralls                       = 63,
	BUFFTAG_DamageDealtToMinions                       = 64,
	BUFFTAG_DamageDealtToVarelsi                       = 65,
	BUFFTAG_DamageDealtToLowTier                       = 66,
	BUFFTAG_DamageDealtToMidTier                       = 67,
	BUFFTAG_DamageDealtToHighTier                      = 68,
	BUFFTAG_DamageDealtToBoss                          = 69,
	BUFFTAG_BuildableHealth                            = 70,
	BUFFTAG_BuildableEffect                            = 71,
	BUFFTAG_BuildableCost                              = 72,
	BUFFTAG_ReviveSpeed                                = 73,
	BUFFTAG_DownTime                                   = 74,
	BUFFTAG_NotCombatTracked                           = 75,
	BUFFTAG_Wound                                      = 76,
	BUFFTAG_Reserved02                                 = 77,
	BUFFTAG_Reserved03                                 = 78,
	BUFFTAG_Reserved04                                 = 79,
	BUFFTAG_Reserved05                                 = 80,
	BUFFTAG_Reserved06                                 = 81,
	BUFFTAG_Reserved07                                 = 82,
	BUFFTAG_Reserved08                                 = 83,
	BUFFTAG_Reserved09                                 = 84,
	BUFFTAG_Reserved10                                 = 85,
	BUFFTAG_Reserved11                                 = 86,
	BUFFTAG_Reserved12                                 = 87,
	BUFFTAG_Reserved13                                 = 88,
	BUFFTAG_Reserved14                                 = 89,
	BUFFTAG_Reserved15                                 = 90,
	BUFFTAG_Reserved16                                 = 91,
	BUFFTAG_Reserved17                                 = 92,
	BUFFTAG_Reserved18                                 = 93,
	BUFFTAG_Reserved19                                 = 94,
	BUFFTAG_Reserved20                                 = 95,
	BUFFTAG_Reserved21                                 = 96,
	BUFFTAG_Reserved22                                 = 97,
	BUFFTAG_Reserved23                                 = 98,
	BUFFTAG_Reserved24                                 = 99,
	BUFFTAG_Reserved25                                 = 100,
	BUFFTAG_Reserved26                                 = 101,
	BUFFTAG_Reserved27                                 = 102,
	BUFFTAG_Reserved28                                 = 103,
	BUFFTAG_Reserved29                                 = 104,
	BUFFTAG_Reserved30                                 = 105,
	BUFFTAG_END                                        = 106
};

// Enum PoplarGame.PoplarTypes.ECrowdControlEventType
enum class ECrowdControlEventType : uint8_t
{
	ECCET_Begin                                        = 0,
	ECCET_Ended                                        = 1,
	ECCET_END                                          = 2
};

// Enum PoplarGame.PoplarTypes.ECrowdControlState
enum class ECrowdControlState : uint8_t
{
	ECROWDCTRL_Unaffected                              = 0,
	ECROWDCTRL_Stunned                                 = 1,
	ECROWDCTRL_Slowed                                  = 2,
	ECROWDCTRL_Immobilized                             = 3,
	ECROWDCTRL_Silenced                                = 4,
	ECROWDCTRL_Dazed                                   = 5,
	ECROWDCTRL_Feared                                  = 6,
	ECROWDCTRL_Countered                               = 7,
	ECROWDCTRL_Charm                                   = 8,
	ECROWDCTRL_ForceMove                               = 9,
	ECROWDCTRL_Provoke                                 = 10,
	ECROWDCTRL_Blind                                   = 11,
	ECROWDCTRL_Stealth                                 = 12,
	ECROWDCTRL_Jamming                                 = 13,
	ECROWDCTRL_DoT                                     = 14,
	ECROWDCTRL_NegDebuff                               = 15,
	ECROWDCTRL_Healing                                 = 16,
	ECROWDCTRL_ShieldHealing                           = 17,
	ECROWDCTRL_SpeedBoost                              = 18,
	ECROWDCTRL_DamageAmp                               = 19,
	ECROWDCTRL_DamageMitig                             = 20,
	ECROWDCTRL_CooldownReduction                       = 21,
	ECROWDCTRL_HealingReduction                        = 22,
	ECROWDCTRL_END                                     = 23
};

// Enum PoplarGame.PoplarTypes.SpawnLocationRotationInheritanceType
enum class ESpawnLocationRotationInheritanceType : uint8_t
{
	SLRIT_Context                                      = 0,
	SLRIT_Attachment                                   = 1,
	SLRIT_Self                                         = 2,
	SLRIT_END                                          = 3
};

// Enum PoplarGame.PoplarTypes.EHydraCanUse
enum class EHydraCanUse : uint8_t
{
	HCU_Unset                                          = 0,
	HCU_CanUse                                         = 1,
	HCU_CanNotUse                                      = 2,
	HCU_END                                            = 3
};

// Enum PoplarGame.PoplarTypes.EMetaItemType
enum class EMetaItemType : uint8_t
{
	MIT_Unset                                          = 0,
	MIT_Character                                      = 1,
	MIT_CharacterSkin                                  = 2,
	MIT_Loadout                                        = 3,
	MIT_Perk                                           = 4,
	MIT_RewardModifier                                 = 5,
	MIT_PremiumCurrency                                = 6,
	MIT_PerkPack                                       = 7,
	MIT_Mutation                                       = 8,
	MIT_Recipe                                         = 9,
	MIT_Taunt                                          = 10,
	MIT_MinionSkin                                     = 11,
	MIT_BankPage                                       = 12,
	MIT_Booster                                        = 13,
	MIT_ItemBundle                                     = 14,
	MIT_MetaTitle                                      = 15,
	MIT_HydraDefined                                   = 16,
	MIT_Challenge                                      = 17,
	MIT_PlayerCosmeticBooster                          = 18,
	MIT_PlayerKillCosmeticBooster                      = 19,
	MIT_PlayerTauntCosmeticBooster                     = 20,
	MIT_END                                            = 21
};

// Enum PoplarGame.PoplarTypes.PerkFunctionSlots
enum class EPerkFunctionSlots : uint8_t
{
	PFS_Common                                         = 0,
	PFS_Uncommon                                       = 1,
	PFS_Rare                                           = 2,
	PFS_VeryRare                                       = 3,
	PFS_Legendary                                      = 4,
	PFS_END                                            = 5
};

// Enum PoplarGame.PoplarTypes.PerkRarity
enum class EPerkRarity : uint8_t
{
	PERKRARITY_Undefined                               = 0,
	PERKRARITY_Common                                  = 1,
	PERKRARITY_Uncommon                                = 2,
	PERKRARITY_Rare                                    = 3,
	PERKRARITY_VeryRare                                = 4,
	PERKRARITY_Legendary                               = 5,
	PERKRARITY_END                                     = 6
};

// Enum PoplarGame.PoplarTypes.EReviveAction
enum class EReviveAction : uint8_t
{
	ReviveAction_Reviving                              = 0,
	ReviveAction_Interrupted                           = 1,
	ReviveAction_Completed                             = 2,
	ReviveAction_END                                   = 3
};

// Enum PoplarGame.PoplarTypes.EReviveState
enum class EReviveState : uint8_t
{
	ReviveState_None                                   = 0,
	ReviveState_Pending                                = 1,
	ReviveState_Waiting                                = 2,
	ReviveState_Reviving                               = 3,
	ReviveState_Revived                                = 4,
	ReviveState_BledOut                                = 5,
	ReviveState_END                                    = 6
};

// Enum PoplarGame.PoplarTypes.EPlayerStandInType
enum class EPlayerStandInType : uint8_t
{
	STANDINTYPE_CharacterSelect                        = 0,
	STANDINTYPE_CharacterIntro                         = 1,
	STANDINTYPE_END                                    = 2
};

// Enum PoplarGame.PoplarTypes.ECharacterMenuSelectionState
enum class ECharacterMenuSelectionState : uint8_t
{
	CharSelect_Initial                                 = 0,
	CharSelect_Browsing                                = 1,
	CharSelect_Selected                                = 2,
	CharSelect_Locked                                  = 3,
	CharSelect_Finished                                = 4,
	CharSelect_END                                     = 5
};

// Enum PoplarGame.PoplarTypes.EChangeWeaponAction
enum class EChangeWeaponAction : uint8_t
{
	ECWA_SwitchToDefinition                            = 0,
	ECWA_PreviousWeapon                                = 1,
	ECWA_NextWeapon                                    = 2,
	ECWA_PrimaryWeapon                                 = 3,
	ECWA_HolsterWeapon                                 = 4,
	ECWA_END                                           = 5
};

// Enum PoplarGame.PoplarTypes.EPlayerWearableAttachmentTarget
enum class EPlayerWearableAttachmentTarget : uint8_t
{
	EPWAT_PlayerMeshTarget                             = 0,
	EPWAT_WeaponMeshTarget                             = 1,
	EPWAT_END                                          = 2
};

// Enum PoplarGame.PoplarTypes.EPlayerWearableTypes
enum class EPlayerWearableTypes : uint8_t
{
	EPWT_Hat                                           = 0,
	EPWT_Ears                                          = 1,
	EPWT_Horns                                         = 2,
	EPWT_END                                           = 3
};

// Enum PoplarGame.PoplarTypes.EMatchmakingUIState
enum class EMatchmakingUIState : uint8_t
{
	MUIS_Invalid                                       = 0,
	MUIS_DelayedResume                                 = 1,
	MUIS_FindTeam_Searching                            = 2,
	MUIS_FindTeam_Creating                             = 3,
	MUIS_FindTeam_Hosting                              = 4,
	MUIS_FindTeam_SessionJoin                          = 5,
	MUIS_FindOpposingTeam_Searching                    = 6,
	MUIS_FindOpposingTeam_Creating                     = 7,
	MUIS_FindOpposingTeam_Hosting                      = 8,
	MUIS_FindOpposingTeam_SessionJoin                  = 9,
	MUIS_PrivateMatch                                  = 10,
	MUIS_ObtainingGameInformation                      = 11,
	MUIS_RegisteringWithGame                           = 12,
	MUIS_OptionVoting                                  = 13,
	MUIS_SettingUpGame                                 = 14,
	MUIS_ConnectingToDedicatedServer                   = 15,
	MUIS_END                                           = 16
};

// Enum PoplarGame.PoplarTypes.EMatchmakingState
enum class EMatchmakingState : uint8_t
{
	MMS_SyncingSkillData                               = 0,
	MMS_FindTeam_Begin                                 = 1,
	MMS_FindTeam_Searching                             = 2,
	MMS_FindTeam_Hosting                               = 3,
	MMS_FindOpposingTeam_Begin                         = 4,
	MMS_FindOpposingTeam_Searching                     = 5,
	MMS_FindOpposingTeam_Hosting                       = 6,
	MMS_OptionVoting                                   = 7,
	MMS_ConnectingToDedicatedServer                    = 8,
	MMS_Inactive                                       = 9,
	MMS_WaitingForTeamConnect                          = 10,
	MMS_WaitingForOpposingTeamConnect                  = 11,
	MMS_PostGameFound                                  = 12,
	MMS_DelayedResume                                  = 13,
	MMS_PrivateMatch                                   = 14,
	MMS_END                                            = 15
};

// Enum PoplarGame.PoplarTypes.EPoplarBroadcastFilterLocalClients
enum class EPoplarBroadcastFilterLocalClients : uint8_t
{
	PBFILTERLOCAL_None                                 = 0,
	PBFILTERLOCAL_OnlyOnePlayer                        = 1,
	PBFILTERLOCAL_END                                  = 2
};

// Enum PoplarGame.PoplarTypes.EPoplarBroadcastFilter
enum class EPoplarBroadcastFilter : uint8_t
{
	PBFILTER_None                                      = 0,
	PBFILTER_InstTeamOnly                              = 1,
	PBFILTER_InstPlayerOnly                            = 2,
	PBFILTER_OppTeamOnly                               = 3,
	PBFILTER_OppPlayerOnly                             = 4,
	PBFILTER_AllExceptInstigator                       = 5,
	PBFILTER_END                                       = 6
};

// Enum PoplarGame.PoplarTypes.EDamageTagTest
enum class EDamageTagTest : uint8_t
{
	DAMAGETAGTEST_HasNone                              = 0,
	DAMAGETAGTEST_ExactMatch                           = 1,
	DAMAGETAGTEST_HasAll                               = 2,
	DAMAGETAGTEST_HasSome                              = 3,
	DAMAGETAGTEST_END                                  = 4
};

// Enum PoplarGame.PoplarTypes.EDamageTagValues
enum class EDamageTagValues : uint8_t
{
	DAMAGETAG_StandardAttackAny                        = 0,
	DAMAGETAG_StandardAttack01                         = 1,
	DAMAGETAG_StandardAttack02                         = 2,
	DAMAGETAG_ActionAbilityAny                         = 3,
	DAMAGETAG_ActionAbility01                          = 4,
	DAMAGETAG_ActionAbility02                          = 5,
	DAMAGETAG_CCAny                                    = 6,
	DAMAGETAG_CCStun                                   = 7,
	DAMAGETAG_CCBlind                                  = 8,
	DAMAGETAG_CCSlow                                   = 9,
	DAMAGETAG_CCForcedMove                             = 10,
	DAMAGETAG_BuffSkill                                = 11,
	DAMAGETAG_DebuffSkill                              = 12,
	DAMAGETAG_Ult                                      = 13,
	DAMAGETAG_DoT                                      = 14,
	DAMAGETAG_Heal                                     = 15,
	DAMAGETAG_ShieldHeal                               = 16,
	DAMAGETAG_Environmental                            = 17,
	DAMAGETAG_Ranged                                   = 18,
	DAMAGETAG_Melee                                    = 19,
	DAMAGETAG_AoE                                      = 20,
	DAMAGETAG_PassiveAbility                           = 21,
	DAMAGETAG_PerksAndArtifacts                        = 22,
	DAMAGETAG_WorldInteraction                         = 23,
	DAMAGETAG_DirectionalHardFlinch                    = 24,
	DAMAGETAG_MeleeQuickstrike                         = 25,
	DAMAGETAG_ReflectedDamage                          = 26,
	DAMAGETAG_Unused28                                 = 27,
	DAMAGETAG_Unused29                                 = 28,
	DAMAGETAG_Unused30                                 = 29,
	DAMAGETAG_Unused31                                 = 30,
	DAMAGETAG_Unused32                                 = 31,
	DAMAGETAG_END                                      = 32
};

// Enum PoplarGame.PoplarTypes.EPlayerDamageType
enum class EPlayerDamageType : uint8_t
{
	EPDT_Health                                        = 0,
	EPDT_Shield                                        = 1,
	EPDT_Healing                                       = 2,
	EPDT_Overshield                                    = 3,
	EPDT_END                                           = 4
};

// Enum PoplarGame.PoplarTypes.ETeamIndex
enum class ETeamIndex : uint8_t
{
	ETI_TEAM_ONE                                       = 0,
	ETI_TEAM_TWO                                       = 1,
	ETI_SPECTATING                                     = 2,
	ETI_END                                            = 3
};

// Enum PoplarGame.PoplarDamagePipeline.EConditionalDamageModifierContext
enum class EConditionalDamageModifierContext : uint8_t
{
	CDMC_Attacker                                      = 0,
	CDMC_Defender                                      = 1,
	CDMC_END                                           = 2
};

// Enum PoplarGame.PoplarStatReplicationInfo.EStatCategoryTypes
enum class EStatCategoryTypes : uint8_t
{
	STAT_CATEGORY_MATCH                                = 0,
	STAT_CATEGORY_LIFETIME                             = 1,
	STAT_CATEGORY_TEAM_MATCH                           = 2,
	STAT_CATEGORY_TEAM_LIFETIME                        = 3,
	STAT_CATEGORY_CAREER                               = 4,
	STAT_CATEGORY_END                                  = 5
};

// Enum PoplarGame.KillModifiersDefinition.EKillModifier
enum class EKillModifier : uint8_t
{
	MOD_Payback                                        = 0,
	MOD_Avenged                                        = 1,
	MOD_TauntKill                                      = 2,
	MOD_CloseQuarters                                  = 3,
	MOD_Improvised                                     = 4,
	MOD_Longshot                                       = 5,
	MOD_Headshot                                       = 6,
	MOD_CriticalHit                                    = 7,
	MOD_ThirdDegree                                    = 8,
	MOD_AirKill                                        = 9,
	MOD_InFlight                                       = 10,
	MOD_Stunned                                        = 11,
	MOD_Slowed                                         = 12,
	MOD_Blind                                          = 13,
	MOD_DoubleKill                                     = 14,
	MOD_TripleKill                                     = 15,
	MOD_QuadrupleKill                                  = 16,
	MOD_PentaKill                                      = 17,
	MOD_InsaneKill                                     = 18,
	MOD_TierOneKillStreak                              = 19,
	MOD_TierTwoKillStreak                              = 20,
	MOD_TierThreeKillStreak                            = 21,
	MOD_TierFourKillStreak                             = 22,
	MOD_TierFiveKillStreak                             = 23,
	MOD_StreakBreaker                                  = 24,
	MOD_Nemesis                                        = 25,
	MOD_DefeatNemesis                                  = 26,
	MOD_FirstBlood                                     = 27,
	MOD_AssistStreakBreaker                            = 28,
	MOD_PetKill                                        = 29,
	MOD_HelixKill                                      = 30,
	MOD_TeleportKill                                   = 31,
	MOD_END                                            = 32
};

// Enum PoplarGame.Behavior_Minimap.MinimapOperation
enum class EMinimapOperation : uint8_t
{
	BMMO_Expand                                        = 0,
	BMMO_Shrink                                        = 1,
	BMMO_END                                           = 2
};

// Enum PoplarGame.Behavior_ModifyCameraMode.ECameraModeModification
enum class ECameraModeModification : uint8_t
{
	ECMM_PushMode                                      = 0,
	ECMM_PopMode                                       = 1,
	ECMM_SetMode                                       = 2,
	ECMM_END                                           = 3
};

// Enum PoplarGame.Behavior_ModifyInputContext.EInputContextModification
enum class EInputContextModification : uint8_t
{
	EICM_Set                                           = 0,
	EICM_Restore                                       = 1,
	EICM_END                                           = 2
};

// Enum PoplarGame.Behavior_ModifyResourcePoolByPercentage.EPoolModificationPercentageStyle
enum class EPoolModificationPercentageStyle : uint8_t
{
	RPMOD_PercentageOfRange                            = 0,
	RPMOD_PercentageOfCurrent                          = 1,
	RPMOD_END                                          = 2
};

// Enum PoplarGame.PoplarMusicSystem.EPoplarMusicManagerTarget
enum class EPoplarMusicManagerTarget : uint8_t
{
	PMMT_Global                                        = 0,
	PMMT_Team                                          = 1,
	PMMT_Individual                                    = 2,
	PMMT_END                                           = 3
};

// Enum PoplarGame.PoplarMusicSystem.EPoplarMusicManagerMessageType
enum class EPoplarMusicManagerMessageType : uint8_t
{
	PMMM_Invalid                                       = 0,
	PMMM_State                                         = 1,
	PMMM_SilenceAll                                    = 2,
	PMMM_Rtpc                                          = 3,
	PMMM_StopCue                                       = 4,
	PMMM_END                                           = 5
};

// Enum PoplarGame.PoplarPickupDefinition.EPickupRelevanceDistance
enum class EPickupRelevanceDistance : uint8_t
{
	PICKUPRELEVANCE_Near                               = 0,
	PICKUPRELEVANCE_Far                                = 1,
	PICKUPRELEVANCE_Distant                            = 2,
	PICKUPRELEVANCE_END                                = 3
};

// Enum PoplarGame.PoplarPickupDefinition.EPoplarPickupMethod
enum class EPoplarPickupMethod : uint8_t
{
	PPM_OnUsedPickupSingle                             = 0,
	PPM_OnUsedPickupProximity                          = 1,
	PPM_AutoPickupProximity                            = 2,
	PPM_END                                            = 3
};

// Enum PoplarGame.PoplarBuffDefinition.EBuffSortContext
enum class EBuffSortContext : uint8_t
{
	BSC_BuffTarget                                     = 0,
	BSC_BuffInstigator                                 = 1,
	BSC_END                                            = 2
};

// Enum PoplarGame.PoplarBuffDefinition.EBuffAttributeStackOrder
enum class EBuffAttributeStackOrder : uint8_t
{
	BASO_Descending                                    = 0,
	BASO_Ascending                                     = 1,
	BASO_END                                           = 2
};

// Enum PoplarGame.PoplarBuffDefinition.EBuffUniqueness
enum class EBuffUniqueness : uint8_t
{
	BUFFUNIQUE_GloballyUnique                          = 0,
	BUFFUNIQUE_PlayerUnique                            = 1,
	BUFFUNIQUE_END                                     = 2
};

// Enum PoplarGame.PoplarBuffDefinition.EBuffStacking
enum class EBuffStacking : uint8_t
{
	BUFFSTACK_AllowMultiple                            = 0,
	BUFFSTACK_UniqueBuff                               = 1,
	BUFFSTACK_OneInstanceResetClock                    = 2,
	BUFFSTACK_OneInstanceNoReset                       = 3,
	BUFFSTACK_OneInstanceExtendDuration                = 4,
	BUFFSTACK_END                                      = 5
};

// Enum PoplarGame.PoplarBuffDefinition.EBuffRemovalStrategy
enum class EBuffRemovalStrategy : uint8_t
{
	BUFFREMOVAL_AllStacks                              = 0,
	BUFFREMOVAL_FromBack                               = 1,
	BUFFREMOVAL_FromFront                              = 2,
	BUFFREMOVAL_END                                    = 3
};

// Enum PoplarGame.PoplarBuffDefinition.EBuffNotificationTags
enum class EBuffNotificationTags : uint8_t
{
	EBNT_DamageDealtToEnemy                            = 0,
	EBNT_KilledEnemy                                   = 1,
	EBNT_ShieldDepleted                                = 2,
	EBNT_HealingOrDamagePulse                          = 3,
	EBNT_OwnerKilled                                   = 4,
	EBNT_END                                           = 5
};

// Enum PoplarGame.PoplarBuffDefinition.EBehaviorEventNetworkRole
enum class EBehaviorEventNetworkRole : uint8_t
{
	ENET_Authority                                     = 0,
	ENET_Simulated                                     = 1,
	ENET_END                                           = 2
};

// Enum PoplarGame.PoplarHighlightDefinition.HighlightPriority
enum class EHighlightPriority : uint8_t
{
	HighlightPriority_Unset                            = 0,
	HighlightPriority_Lowest                           = 1,
	HighlightPriority_Low                              = 2,
	HighlightPriority_Med                              = 3,
	HighlightPriority_High                             = 4,
	HighlightPriority_Highest                          = 5,
	HighlightPriority_END                              = 6
};

// Enum PoplarGame.PoplarHighlightDefinition.HighlightVisibilityScheme
enum class EHighlightVisibilityScheme : uint8_t
{
	OUTLINESCHEME_TeammatesOnly                        = 0,
	OUTLINESCHEME_AllPlayers                           = 1,
	OUTLINESCHEME_InstigatorOnly                       = 2,
	OUTLINESCHEME_END                                  = 3
};

// Enum PoplarGame.PoplarHighlightDefinition.EHighlightFunctionality
enum class EHighlightFunctionality : uint8_t
{
	HighlightFunctionality_Enabled                     = 0,
	HighlightFunctionality_Disabled                    = 1,
	HighlightFunctionality_END                         = 2
};

// Enum PoplarGame.Behavior_PoplarLaneEvent.EPoplarLaneEvent
enum class EPoplarLaneEvent : uint8_t
{
	POPLARLANEEVENT_RegisterNexus                      = 0,
	POPLARLANEEVENT_RegisterInhibitor                  = 1,
	POPLARLANEEVENT_RegisterTurret                     = 2,
	POPLARLANEEVENT_RegisterAutoLevelActor             = 3,
	POPLARLANEEVENT_NexusDestroyed                     = 4,
	POPLARLANEEVENT_InhibitorDestroyed                 = 5,
	POPLARLANEEVENT_InhibitorRestored                  = 6,
	POPLARLANEEVENT_TurretDestroyed                    = 7,
	POPLARLANEEVENT_NotifyGameUnitDestroyed            = 8,
	POPLARLANEEVENT_END                                = 9
};

// Enum PoplarGame.Behavior_PoplarLevelUp.ELevelUpRecipientFilter
enum class ELevelUpRecipientFilter : uint8_t
{
	LEVELUP_SpawnersAndUnits                           = 0,
	LEVELUP_SpawnersOnly                               = 1,
	LEVELUP_UnitsOnly                                  = 2,
	LEVELUP_ContextOnly                                = 3,
	LEVELUP_END                                        = 4
};

// Enum PoplarGame.Behavior_PVEWidgetActivateBossMode.EPVEBossWidgetModes
enum class EPVEBossWidgetModes : uint8_t
{
	EPBWM_GENERIC_JENNERIT                             = 0,
	EPBWM_GENERIC_MINION                               = 1,
	EPBWM_GENERIC_GOLEM                                = 2,
	EPBWM_GENERIC_VARELSI                              = 3,
	EPBWM_RANDAIN                                      = 4,
	EPBWM_MAGNUS                                       = 5,
	EPBWM_GOLEM                                        = 6,
	EPBWM_GENERIC                                      = 7,
	EPBWM_END                                          = 8
};

// Enum PoplarGame.Behavior_PVEWidgetEndShardObjective.EShardObjectiveResult
enum class EShardObjectiveResult : uint8_t
{
	ESOR_SUCCESS                                       = 0,
	ESOR_FAILURE                                       = 1,
	ESOR_END                                           = 2
};

// Enum PoplarGame.Behavior_SetBuildableState.EBuildNodeState
enum class EBuildNodeState : uint8_t
{
	BNS_Unavailable                                    = 0,
	BNS_Available                                      = 1,
	BNS_Purchased                                      = 2,
	BNS_END                                            = 3
};

// Enum PoplarGame.PoplarGameReplicationInfo.EKillEventUIMessage
enum class EKillEventUIMessage : uint8_t
{
	KEUI_KILLED                                        = 0,
	KEUI_FIRSTBLOOD                                    = 1,
	KEUI_END                                           = 2
};

// Enum PoplarGame.PoplarGameReplicationInfo.EPlayerTeam
enum class EPlayerTeam : uint8_t
{
	PlayerTeam_Unknown                                 = 0,
	PlayerTeam_A                                       = 1,
	PlayerTeam_B                                       = 2,
	PlayerTeam_END                                     = 3
};

// Enum PoplarGame.PoplarUnitTypeDefinition.CoderUnitType
enum class ECoderUnitType : uint8_t
{
	CUT_Other                                          = 0,
	CUT_Minion                                         = 1,
	CUT_Hero                                           = 2,
	CUT_Pet                                            = 3,
	CUT_SubUnit                                        = 4,
	CUT_BuildNode                                      = 5,
	CUT_Buildable                                      = 6,
	CUT_Pickup                                         = 7,
	CUT_PowerCore                                      = 8,
	CUT_CapturePoint                                   = 9,
	CUT_Portal                                         = 10,
	CUT_JungleEnemy                                    = 11,
	CUT_CrystalCluster                                 = 12,
	CUT_ReviveCrystal                                  = 13,
	CUT_SwitchPad                                      = 14,
	CUT_Sentry                                         = 15,
	CUT_END                                            = 16
};

// Enum PoplarGame.PoplarGameReplicationInfo.EMapControlTeam
enum class EMapControlTeam : uint8_t
{
	MAPCT_Unknown                                      = 0,
	MAPCT_Neutral                                      = 1,
	MAPCT_TeamA                                        = 2,
	MAPCT_TeamB                                        = 3,
	MAPCT_END                                          = 4
};

// Enum PoplarGame.PoplarGameReplicationInfo.EMatchState
enum class EMatchState : uint8_t
{
	MatchState_Initial                                 = 0,
	MatchState_SetTournamentMode                       = 1,
	MatchState_CharacterSelect                         = 2,
	MatchState_PlayerSetup                             = 3,
	MatchState_PendingStart                            = 4,
	MatchState_WarmUp                                  = 5,
	MatchState_InProgress                              = 6,
	MatchState_Ended                                   = 7,
	MatchState_Shutdown                                = 8,
	MatchState_END                                     = 9
};

// Enum PoplarGame.PoplarOnlineServerPlayerService.EMatchDocumentStatus
enum class EMatchDocumentStatus : uint8_t
{
	MDS_Unknown                                        = 0,
	MDS_Active                                         = 1,
	MDS_Completed                                      = 2,
	MDS_Abandoned                                      = 3,
	MDS_Quarantined                                    = 4,
	MDS_Failed_Hydra_Access                            = 5,
	MDS_Failed_Hydra_Error                             = 6,
	MDS_Failed_Hydra_DataInvalid                       = 7,
	MDS_Failed_Tabulator_Access                        = 8,
	MDS_Failed_Tabulator_Error                         = 9,
	MDS_Failed_Tabulator_DataInvalid                   = 10,
	MDS_Failed_Zeppelin_Access                         = 11,
	MDS_Failed_Zeppelin_Error                          = 12,
	MDS_Failed_HostNameInvalid                         = 13,
	MDS_END                                            = 14
};

// Enum PoplarGame.Behavior_SetPlayerHelix.EPlayerHelixChoice
enum class EPlayerHelixChoice : uint8_t
{
	PHC_Unset                                          = 0,
	PHC_Left                                           = 1,
	PHC_Right                                          = 2,
	PHC_END                                            = 3
};

// Enum PoplarGame.Behavior_ShowSkillMessage.HUDSkillMessage
enum class EHUDSkillMessage : uint8_t
{
	HSM_InvalidTarget                                  = 0,
	HSM_NotEnoughResource                              = 1,
	HSM_OnCooldown                                     = 2,
	HSM_NotUnlockedYet                                 = 3,
	HSM_BlockedByDebuff                                = 4,
	HSM_END                                            = 5
};

// Enum PoplarGame.Behavior_TestAllegiance.ETestAllegianceOutputLinkIds
enum class ETestAllegianceOutputLinkIds : uint8_t
{
	ALLEGIANCEOUTPUT_DoesNotMatchAllegiance            = 0,
	ALLEGIANCEOUTPUT_MatchesAllegiance                 = 1,
	ALLEGIANCEOUTPUT_END                               = 2
};

// Enum PoplarGame.Behavior_TriggerTrainingAudio.EPoplarTrainingTriggerType
enum class EPoplarTrainingTriggerType : uint8_t
{
	PoplarTrainingTriggerType_EqualToValue             = 0,
	PoplarTrainingTriggerType_GreaterThanValue         = 1,
	PoplarTrainingTriggerType_LessThanValue            = 2,
	PoplarTrainingTriggerType_END                      = 3
};

// Enum PoplarGame.Behavior_TriggerTrainingAudio.EPoplarTrainingAudioPlayType
enum class EPoplarTrainingAudioPlayType : uint8_t
{
	PoplarTrainingAudioPlayType_Sequential             = 0,
	PoplarTrainingAudioPlayType_Random                 = 1,
	PoplarTrainingAudioPlayType_END                    = 2
};

// Enum PoplarGame.Behavior_TriggerTrainingAudio.EPoplarTrainingMessageType
enum class EPoplarTrainingMessageType : uint8_t
{
	PoplarTrainingMsgType_Command                      = 0,
	PoplarTrainingMsgType_Frontend                     = 1,
	PoplarTrainingMsgType_END                          = 2
};

// Enum PoplarGame.Behavior_TriggerTrainingAudio.EPoplarTrainingAudioState
enum class EPoplarTrainingAudioState : uint8_t
{
	PoplarTrainingAudioState_Stopped                   = 0,
	PoplarTrainingAudioState_Playing                   = 1,
	PoplarTrainingAudioState_END                       = 2
};

// Enum PoplarGame.Behavior_TurretWarning.ETurretWarningOption
enum class ETurretWarningOption : uint8_t
{
	TurretWarning_TurnOn                               = 0,
	TurretWarning_TurnOff                              = 1,
	TurretWarning_END                                  = 2
};

// Enum PoplarGame.PoplarPlayerController.ETargetedWarningSeverity
enum class ETargetedWarningSeverity : uint8_t
{
	TWS_NONE                                           = 0,
	TWS_LOW                                            = 1,
	TWS_HIGH                                           = 2,
	TWS_END                                            = 3
};

// Enum PoplarGame.PoplarLocalMessage.EMessageBackgroundFrame
enum class EMessageBackgroundFrame : uint8_t
{
	MBF_Generic                                        = 0,
	MBF_Friendly                                       = 1,
	MBF_Enemy                                          = 2,
	MBF_TeamA                                          = 3,
	MBF_TeamB                                          = 4,
	MBF_END                                            = 5
};

// Enum PoplarGame.PoplarLocalMessage.EPoplarMessageSwitch
enum class EPoplarMessageSwitch : uint8_t
{
	POPLARMSGSWITCH_InstigatingTeam                    = 0,
	POPLARMSGSWITCH_OpposingTeam                       = 1,
	POPLARMSGSWITCH_InstigatingPlayer                  = 2,
	POPLARMSGSWITCH_OpposingPlayer                     = 3,
	POPLARMSGSWITCH_AllPlayers                         = 4,
	POPLARMSGSWITCH_END                                = 5
};

// Enum PoplarGame.PoplarPlayerController.EMetaItemSelectionResult
enum class EMetaItemSelectionResult : uint8_t
{
	MISR_Success                                       = 0,
	MISR_Invalid                                       = 1,
	MISR_Locked                                        = 2,
	MISR_MatchStarted                                  = 3,
	MISR_AlreadySelected                               = 4,
	MISR_END                                           = 5
};

// Enum PoplarGame.PoplarPlayerController.ECharacterSelectMovieState
enum class ECharacterSelectMovieState : uint8_t
{
	CharacterSelectMovie_Closed                        = 0,
	CharacterSelectMovie_LoadingLevel                  = 1,
	CharacterSelectMovie_InProgress                    = 2,
	CharacterSelectMovie_ClashScreen                   = 3,
	CharacterSelectMovie_Closing                       = 4,
	CharacterSelectMovie_END                           = 5
};

// Enum PoplarGame.PoplarPlayerController.EDeathSpectatorState
enum class EDeathSpectatorState : uint8_t
{
	DeathSpectatorState_None                           = 0,
	DeathSpectatorState_ViewingRagdoll                 = 1,
	DeathSpectatorState_ViewingKiller                  = 2,
	DeathSpectatorState_ViewingReviveCrystal           = 3,
	DeathSpectatorState_END                            = 4
};

// Enum PoplarGame.PoplarPartyBeaconHost.EPoplarBeaconCustomEvent
enum class EPoplarBeaconCustomEvent : uint8_t
{
	PBCE_Invalid                                       = 0,
	PBCE_FullTeamMatchmaking                           = 1,
	PBCE_END                                           = 2
};

// Enum PoplarGame.PoplarPartyBeaconHost.EPoplarMatchmakingCancellationReason
enum class EPoplarMatchmakingCancellationReason : uint8_t
{
	PMCR_Invalid                                       = 0,
	PMCR_HostChoseToCancel                             = 1,
	PMCR_SparkError                                    = 2,
	PMCR_BeaconError                                   = 3,
	PMCR_ConnectionTimedOut                            = 4,
	PMCR_GameSessionError                              = 5,
	PMCR_FindOnlineGamesError                          = 6,
	PMCR_ExperienceNotAvailable                        = 7,
	PMCR_RateLimitError                                = 8,
	PMCR_ModifySessionError                            = 9,
	PMCR_SparkErrorRecoverable                         = 10,
	PMCR_QualityOfServiceError                         = 11,
	PMCR_PrivilegesChanged                             = 12,
	PMCR_END                                           = 13
};

// Enum PoplarGame.PoplarOnlineClientPlayerService.EExperienceMatchmakingType
enum class EExperienceMatchmakingType : uint8_t
{
	EMT_Campaign                                       = 0,
	EMT_Competitive                                    = 1,
	EMT_CompetitivePrivate                             = 2,
	EMT_CampaignPrivate                                = 3,
	EMT_Prologue                                       = 4,
	EMT_VersusPrologue                                 = 5,
	EMT_Operations                                     = 6,
	EMT_OperationsPrivate                              = 7,
	EMT_Training                                       = 8,
	EMT_END                                            = 9
};

// Enum PoplarGame.PoplarOnlineClientPlayerService.EEntitlementsRequestType
enum class EEntitlementsRequestType : uint8_t
{
	ERT_Startup                                        = 0,
	ERT_CommandMenu                                    = 1,
	ERT_Postmatch                                      = 2,
	ERT_END                                            = 3
};

// Enum PoplarGame.PoplarOnlineClientService.EUserItemSource
enum class EUserItemSource : uint8_t
{
	USERITEMSRC_None                                   = 0,
	USERITEMSRC_Purchased                              = 1,
	USERITEMSRC_PromotionalItem                        = 2,
	USERITEMSRC_RewardItem                             = 3,
	USERITEMSRC_ShiftCode                              = 4,
	USERITEMSRC_Admin                                  = 5,
	USERITEMSRC_SalvagePack                            = 6,
	USERITEMSRC_CustomerSupport                        = 7,
	USERITEMSRC_Sideboard                              = 8,
	USERITEMSRC_Bundle                                 = 9,
	USERITEMSRC_END                                    = 10
};

// Enum PoplarGame.PoplarGameViewportClient.EBeaconFlags
enum class EBeaconFlags : uint8_t
{
	BF_KeepNone                                        = 0,
	BF_KeepTeam                                        = 1,
	BF_KeepLobby                                       = 2,
	BF_END                                             = 3
};

// Enum PoplarGame.Behavior_UnitTestHelper_GTDFromPTD.EPlayerTestDefOptions
enum class EPlayerTestDefOptions : uint8_t
{
	EPTDO_InvokePrimaryFire                            = 0,
	EPTDO_InvokeSecondaryFire                          = 1,
	EPTDO_InvokeMelee                                  = 2,
	EPTDO_InvokeLeftSkill                              = 3,
	EPTDO_InvokeRightSkill                             = 4,
	EPTDO_InvokeUltimate                               = 5,
	EPTDO_NamedTest                                    = 6,
	EPTDO_END                                          = 7
};

// Enum PoplarGame.IPoplarMission.EPoplarMissionEvent
enum class EPoplarMissionEvent : uint8_t
{
	PME_Initialized                                    = 0,
	PME_StatusChanged                                  = 1,
	PME_ObjectiveUpdated                               = 2,
	PME_ObjectiveCleared                               = 3,
	PME_ObjectiveComplete                              = 4,
	PME_ActiveMission                                  = 5,
	PME_NoLongerActiveMission                          = 6,
	PME_END                                            = 7
};

// Enum PoplarGame.BuffExpressionEvaluator.EBuffCheck
enum class EBuffCheck : uint8_t
{
	EBC_HasBuff                                        = 0,
	EBC_DoesNotHaveBuff                                = 1,
	EBC_END                                            = 2
};

// Enum PoplarGame.CrowdControlExpressionEvaluator.ECrowdControlCheck
enum class ECrowdControlCheck : uint8_t
{
	ECCC_IsCrowdControlledBy                           = 0,
	ECCC_NotCrowdControlledBy                          = 1,
	ECCC_END                                           = 2
};

// Enum PoplarGame.DeathRecapAttributeContextResolver.DeathRecapContextType
enum class EDeathRecapContextType : uint8_t
{
	DRCT_Victim                                        = 0,
	DRCT_Killer                                        = 1,
	DRCT_TopAssister                                   = 2,
	DRCT_FirstRunnerUpOneAssister                      = 3,
	DRCT_SecondRunnerUpTwoAssister                     = 4,
	DRCT_ThirdRunnerUpThreeAssister                    = 5,
	DRCT_END                                           = 6
};

// Enum PoplarGame.DeathRecapAttributeValueResolver.EDeathRecapGeneralStat
enum class EDeathRecapGeneralStat : uint8_t
{
	DRGS_CombatTime                                    = 0,
	DRGS_TotalDamageReceived                           = 1,
	DRGS_TotalPhysicalDamageRecieved                   = 2,
	DRGS_TotalTrueDamageReceived                       = 3,
	DRGS_TotalShieldDamageReceived                     = 4,
	DRGS_TotalHealingDamageReceived                    = 5,
	DRGS_PhysicalDamageRecievedFromKiller              = 6,
	DRGS_TrueDamageReceivedFromKiller                  = 7,
	DRGS_ShieldDamageReceivedFromKiller                = 8,
	DRGS_ExcessDamage                                  = 9,
	DRGS_END                                           = 10
};

// Enum PoplarGame.PoplarActionDefinition.EActionType
enum class EActionType : uint8_t
{
	EAT_Damage                                         = 0,
	EAT_Healing                                        = 1,
	EAT_Buff                                           = 2,
	EAT_Debuff                                         = 3,
	EAT_Overshield                                     = 4,
	EAT_END                                            = 5
};

// Enum PoplarGame.StatDefinition.ActionSkillCooldownRewardTarget
enum class EActionSkillCooldownRewardTarget : uint8_t
{
	CRT_AllActionSkills                                = 0,
	CRT_NonUltimateSkillsOnly                          = 1,
	CRT_UltimateSkillOnly                              = 2,
	CRT_END                                            = 3
};

// Enum PoplarGame.StatDefinition.StatEndOfMatchReportingStyle
enum class EStatEndOfMatchReportingStyle : uint8_t
{
	EOMD_PostMatchDelta                                = 0,
	EOMD_PersonalBestLow                               = 1,
	EOMD_PersonalBestHigh                              = 2,
	EOMD_END                                           = 3
};

// Enum PoplarGame.PoplarDataPlatform.EOnlineStatIDList
enum class EOnlineStatIDList : uint8_t
{
	ONLINESTATID_None                                  = 0,
	ONLINESTATID_CampaignMatchesWon                    = 1,
	ONLINESTATID_MaxCreditsEarned                      = 2,
	ONLINESTATID_MatchesPlayed                         = 3,
	ONLINESTATID_PlayerKilled                          = 4,
	ONLINESTATID_MatchesWon                            = 5,
	ONLINESTATID_CompletionPercent                     = 6,
	ONLINESTATID_END                                   = 7
};

// Enum PoplarGame.StatDefinition.StatUpdateConstraint
enum class EStatUpdateConstraint : uint8_t
{
	SUC_None                                           = 0,
	SUC_MinValue                                       = 1,
	SUC_MaxValue                                       = 2,
	SUC_END                                            = 3
};

// Enum PoplarGame.IExperienceProvider.TeamExperienceType
enum class ETeamExperienceType : uint8_t
{
	TET_DontAwardXPToTeam                              = 0,
	TET_AwardXPToTeamGlobally                          = 1,
	TET_AwardXPToTeamByDistance                        = 2,
	TET_AwardXPToKillerAndAssisters                    = 3,
	TET_AwardXPToTeamGloballyDividedAmongTeammates     = 4,
	TET_END                                            = 5
};

// Enum PoplarGame.GameTypeIdExpressionEvaluator.EGameTypeComparison
enum class EGameTypeComparison : uint8_t
{
	EGTC_EqualTo                                       = 0,
	EGTC_NotEqualTo                                    = 1,
	EGTC_END                                           = 2
};

// Enum PoplarGame.GBXPathConstraint_MinionLane.EMinionLaneOption
enum class EMinionLaneOption : uint8_t
{
	EMinionLane_Self                                   = 0,
	EMinionLane_Target                                 = 1,
	EMinionLane_END                                    = 2
};

// Enum PoplarGame.IAugmentable.EClientAugPurchaseStatus
enum class EClientAugPurchaseStatus : uint8_t
{
	ECAPS_Unselected                                   = 0,
	ECAPS_Preselected                                  = 1,
	ECAPS_Purchased                                    = 2,
	ECAPS_END                                          = 3
};

// Enum PoplarGame.IAugmentable.EShopAugmentationType
enum class EShopAugmentationType : uint8_t
{
	SAT_Player                                         = 0,
	SAT_Team                                           = 1,
	SAT_END                                            = 2
};

// Enum PoplarGame.LoreUnlockDefinition.ELoreRewardType
enum class ELoreRewardType : uint8_t
{
	ELRT_TextOnly                                      = 0,
	ELRT_ImageOnly                                     = 1,
	ELRT_ImageAndText                                  = 2,
	ELRT_Audio                                         = 3,
	ELRT_END                                           = 4
};

// Enum PoplarGame.MarketItemInfoGFxObject.EMarketItemInfoRequestState
enum class EMarketItemInfoRequestState : uint8_t
{
	MARKETITEMINFO_NoRequest                           = 0,
	MARKETITEMINFO_RequestingPurchaseHistory           = 1,
	MARKETITEMINFO_RequestingRefund                    = 2,
	MARKETITEMINFO_END                                 = 3
};

// Enum PoplarGame.PoplarOnlineClientItemService.EPoplarTransactionFilterType
enum class EPoplarTransactionFilterType : uint8_t
{
	PTFT_All                                           = 0,
	PTFT_Refundable                                    = 1,
	PTFT_Refunded                                      = 2,
	PTFT_END                                           = 3
};

// Enum PoplarGame.PoplarOnlineClientItemService.EPoplarMetaItemDiscountType
enum class EPoplarMetaItemDiscountType : uint8_t
{
	PMIDT_PERCENT                                      = 0,
	PMIDT_NEWVALUE                                     = 1,
	PMIDT_NONE                                         = 2,
	PMIDT_END                                          = 3
};

// Enum PoplarGame.PoplarOnlineClientItemService.EPoplarMetaCurrencyType
enum class EPoplarMetaCurrencyType : uint8_t
{
	PMCT_Earned                                        = 0,
	PMCT_Premium                                       = 1,
	PMCT_RefundToken                                   = 2,
	PMCT_CharacterToken                                = 3,
	PMCT_END                                           = 4
};

// Enum PoplarGame.MatchFeedData_Objective.EObjectiveLabel
enum class EObjectiveLabel : uint8_t
{
	EOL_Success                                        = 0,
	EOL_Failure                                        = 1,
	EOL_END                                            = 2
};

// Enum PoplarGame.PoplarMissionObjectiveDefinition.EPoplarMissionObjectiveType
enum class EPoplarMissionObjectiveType : uint8_t
{
	PoplarMissionObjectiveType_Location                = 0,
	PoplarMissionObjectiveType_KillTarget              = 1,
	PoplarMissionObjectiveType_DefendTarget            = 2,
	PoplarMissionObjectiveType_None                    = 3,
	PoplarMissionObjectiveType_END                     = 4
};

// Enum PoplarGame.MHW_CharacterSkills.CharacterSkillIconState
enum class ECharacterSkillIconState : uint8_t
{
	CSIS_INITIAL                                       = 0,
	CSIS_PASSIVE                                       = 1,
	CSIS_DISABLED                                      = 2,
	CSIS_BLOCKED                                       = 3,
	CSIS_COOLDOWN                                      = 4,
	CSIS_READY                                         = 5,
	CSIS_END                                           = 6
};

// Enum PoplarGame.MHW_DeathRecap.EDeathRecapTimerType
enum class EDeathRecapTimerType : uint8_t
{
	DRTT_None                                          = 0,
	DRTT_Respawn                                       = 1,
	DRTT_BleedOut                                      = 2,
	DRTT_Revive                                        = 3,
	DRTT_MustRespawn                                   = 4,
	DRTT_CannotRespawn                                 = 5,
	DRTT_NoRespawns                                    = 6,
	DRTT_END                                           = 7
};

// Enum PoplarGame.MHW_EnemyNameplate.ENameplateFrameStyle
enum class ENameplateFrameStyle : uint8_t
{
	NAMEPLATE_Unset                                    = 0,
	NAMEPLATE_Player                                   = 1,
	NAMEPLATE_Minion                                   = 2,
	NAMEPLATE_FriendlyPlayer                           = 3,
	NAMEPLATE_END                                      = 4
};

// Enum PoplarGame.MHW_EnemyNameplate.ENameplateFlourishType
enum class ENameplateFlourishType : uint8_t
{
	NAMEPLATEFLOURISH_None                             = 0,
	NAMEPLATEFLOURISH_KO                               = 1,
	NAMEPLATEFLOURISH_ASSIST                           = 2,
	NAMEPLATEFLOURISH_BUILDABLE                        = 3,
	NAMEPLATEFLOURISH_END                              = 4
};

// Enum PoplarGame.MHW_GameModePVE.EShardPresentationState
enum class EShardPresentationState : uint8_t
{
	ESPS_NOT_VISIBLE                                   = 0,
	ESPS_BAR_DISPLAYED                                 = 1,
	ESPS_TIMER_DISPLAYED                               = 2,
	ESPS_TIMER_COUNTING_DOWN                           = 3,
	ESPS_TIMER_NEARLY_DONE_WARNING                     = 4,
	ESPS_TIMER_COMPLETE_DISPLAY                        = 5,
	ESPS_TIMER_COMPLETE                                = 6,
	ESPS_END                                           = 7
};

// Enum PoplarGame.ModularHUDGFxMovie.IncomeType
enum class EIncomeType : uint8_t
{
	IDWIT_NONE                                         = 0,
	IDWIT_SHARDS                                       = 1,
	IDWIT_XP                                           = 2,
	IDWIT_END                                          = 3
};

// Enum PoplarGame.MHW_InWorldIcon.InWorldIconObjectType
enum class EInWorldIconObjectType : uint8_t
{
	IWIOT_NONE                                         = 0,
	IWIOT_ALERTICON                                    = 1,
	IWIOT_WAYPOINT                                     = 2,
	IWIOT_CAPTUREPOINT                                 = 3,
	IWIOT_DEFENSEPOINT                                 = 4,
	IWIOT_ESCORT                                       = 5,
	IWIOT_END                                          = 6
};

// Enum PoplarGame.MHW_MinimapExpanded.ObjectiveState
enum class EObjectiveState : uint8_t
{
	OBJECTIVESTATE_DISABLED                            = 0,
	OBJECTIVESTATE_ENABLED                             = 1,
	OBJECTIVESTATE_TRACKED                             = 2,
	OBJECTIVESTATE_END                                 = 3
};

// Enum PoplarGame.MHW_MiniMapInner.MinimapState
enum class EMinimapState : uint8_t
{
	Minimap_Compact                                    = 0,
	Minimap_Expanded                                   = 1,
	Minimap_ActorSelect                                = 2,
	Minimap_END                                        = 3
};

// Enum PoplarGame.MHW_PerkSelector.EPerkActivationStatus
enum class EPerkActivationStatus : uint8_t
{
	PAS_Empty                                          = 0,
	PAS_CantAfford                                     = 1,
	PAS_CanAfford                                      = 2,
	PAS_Locked                                         = 3,
	PAS_Active                                         = 4,
	PAS_END                                            = 5
};

// Enum PoplarGame.MHW_Player11Spectator.SpectatorModeDisplayType
enum class ESpectatorModeDisplayType : uint8_t
{
	SpectHUD_InCharacterSelect                         = 0,
	SpectHUD_InMatch                                   = 1,
	SpectHUD_FreeCam                                   = 2,
	SpectHUD_SpectatingPlayer                          = 3,
	SpectHUD_ControlsHidden                            = 4,
	SpectHUD_ControlsShown                             = 5,
	SpectHUD_ClashScreen                               = 6,
	SpectHUD_SpectatingDeadPlayer                      = 7,
	SpectHUD_SpectatingLivePlayer                      = 8,
	SpectHUD_DeathRecapHidden                          = 9,
	SpectHUD_DeathRecapShown                           = 10,
	SpectHUD_END                                       = 11
};

// Enum PoplarGame.MHW_Surrender.ESurrenderWidgetState
enum class ESurrenderWidgetState : uint8_t
{
	ESWS_NOT_VOTING                                    = 0,
	ESWS_VOTING                                        = 1,
	ESWS_VOTING_FAILED_ANIMATING                       = 2,
	ESWS_VOTING_SUCCEEDED                              = 3,
	ESWS_END                                           = 4
};

// Enum PoplarGame.MHW_TauntIndicator.TauntIndicatorState
enum class ETauntIndicatorState : uint8_t
{
	TIS_None                                           = 0,
	TIS_Intro                                          = 1,
	TIS_Loop                                           = 2,
	TIS_Outro                                          = 3,
	TIS_END                                            = 4
};

// Enum PoplarGame.ModularHUDGFxMovieDefinition.EHUDStateVisibility
enum class EHUDStateVisibility : uint8_t
{
	HUDVisibility_AlwaysOff                            = 0,
	HUDVisibility_AlwaysOn                             = 1,
	HUDVisibility_CodeDriven                           = 2,
	HUDVisibility_END                                  = 3
};

// Enum PoplarGame.PanelButtonPlayerInfoGFxObject.EPlayerInfoDisplayDataState
enum class EPlayerInfoDisplayDataState : uint8_t
{
	DDS_Valid                                          = 0,
	DDS_Loading                                        = 1,
	DDS_END                                            = 2
};

// Enum PoplarGame.PerkIconGFxObject.EPerkIconStatus
enum class EPerkIconStatus : uint8_t
{
	PIS_Undefined                                      = 0,
	PIS_None                                           = 1,
	PIS_Empty                                          = 2,
	PIS_Enabled                                        = 3,
	PIS_Disabled                                       = 4,
	PIS_Inactive                                       = 5,
	PIS_END                                            = 6
};

// Enum PoplarGame.PoplarActionSkill_Beam.EBeamState
enum class EBeamState : uint8_t
{
	Beam_Inactive                                      = 0,
	Beam_Active                                        = 1,
	Beam_Blocked                                       = 2,
	Beam_END                                           = 3
};

// Enum PoplarGame.PoplarActivityFeedDefinition.EActivityFeedImageAspectRatio
enum class EActivityFeedImageAspectRatio : uint8_t
{
	FEED_IMAGE_ASPECT_RATIO_1_X                        = 0,
	FEED_IMAGE_ASPECT_RATIO_1_51_X                     = 1,
	FEED_IMAGE_ASPECT_RATIO_2_08_X                     = 2,
	FEED_IMAGE_ASPECT_RATIO_16_X                       = 3,
	FEED_IMAGE_ASPECT_RATIO_4_X                        = 4,
	FEED_IMAGE_ASPECT_RATIO_END                        = 5
};

// Enum PoplarGame.PoplarPawn.EBaseTeleportConstraint
enum class EBaseTeleportConstraint : uint8_t
{
	EBTC_None                                          = 0,
	EBTC_AlreadyTeleporting                            = 1,
	EBTC_MovementRestriction                           = 2,
	EBTC_TeleportRestriction                           = 3,
	EBTC_UnitDead                                      = 4,
	EBTC_UnitMoving                                    = 5,
	EBTC_NotAllowedInPvE                               = 6,
	EBTC_END                                           = 7
};

// Enum PoplarGame.PoplarPawn.EBaseTeleportState
enum class EBaseTeleportState : uint8_t
{
	EBTS_Idle                                          = 0,
	EBTS_AboutToTeleport                               = 1,
	EBTS_Teleporting                                   = 2,
	EBTS_TeleportPreMoveDone                           = 3,
	EBTS_TeleportMoved                                 = 4,
	EBTS_TeleportPostMoveDone                          = 5,
	EBTS_TeleportSucceeded                             = 6,
	EBTS_TeleportInterrupted                           = 7,
	EBTS_END                                           = 8
};

// Enum PoplarGame.PoplarPawn.EPlayerTauntConstraint
enum class EPlayerTauntConstraint : uint8_t
{
	EPTC_None                                          = 0,
	EPTC_AlreadyTaunting                               = 1,
	EPTC_InputRestriction                              = 2,
	EPTC_NotWalking                                    = 3,
	EPTC_NoTauntSMD                                    = 4,
	EPTC_WeaponIsCharging                              = 5,
	EPTC_NoSMComponent                                 = 6,
	EPTC_SMComponentPlaying                            = 7,
	EPTC_END                                           = 8
};

// Enum PoplarGame.PoplarHotSpot.EPoplarHotSpotCategory
enum class EPoplarHotSpotCategory : uint8_t
{
	PHSC_Other                                         = 0,
	PHSC_Player                                        = 1,
	PHSC_Minion                                        = 2,
	PHSC_Sentry                                        = 3,
	PHSC_Jungle                                        = 4,
	PHSC_BuildNode                                     = 5,
	PHSC_PowerCore                                     = 6,
	PHSC_CapturePoint                                  = 7,
	PHSC_Portal                                        = 8,
	PHSC_Pickup                                        = 9,
	PHSC_CrystalCluster                                = 10,
	PHSC_AlertPoint                                    = 11,
	PHSC_SwitchPad                                     = 12,
	PHSC_PlayerSpawnPoint                              = 13,
	PHSC_END                                           = 14
};

// Enum PoplarGame.PoplarAlertPointDefinition.eAlertSourceType
enum class EeAlertSourceType : uint8_t
{
	eAST_Player                                        = 0,
	eAST_System                                        = 1,
	eAST_Objective                                     = 2,
	eAST_Defend                                        = 3,
	eAST_Other                                         = 4,
	eAST_END                                           = 5
};

// Enum PoplarGame.PoplarAnimNodeAimOffset.EProceduralAimOffsetType
enum class EProceduralAimOffsetType : uint8_t
{
	EPAO_NO_PROC                                       = 0,
	EPAO_PITCH_ONLY                                    = 1,
	EPAO_YAW_ONLY                                      = 2,
	EPAO_FULL_PROC                                     = 3,
	EPAO_END                                           = 4
};

// Enum PoplarGame.PoplarBuildableDefinition.EPoplarBuildableType
enum class EPoplarBuildableType : uint8_t
{
	PBT_Turret                                         = 0,
	PBT_Recon                                          = 1,
	PBT_Logistics                                      = 2,
	PBT_Supply                                         = 3,
	PBT_Minion                                         = 4,
	PBT_PvEDrone                                       = 5,
	PBT_PvETrap                                        = 6,
	PBT_PvETurret                                      = 7,
	PBT_PvESupply                                      = 8,
	PBT_Other                                          = 9,
	PBT_END                                            = 10
};

// Enum PoplarGame.PoplarBuildNodeGFxMovie.EBuildNodePositions
enum class EBuildNodePositions : uint8_t
{
	BNP_FIRST                                          = 0,
	BNP_SECOND                                         = 1,
	BNP_THIRD                                          = 2,
	BNP_END                                            = 3
};

// Enum PoplarGame.PoplarBuildNodeObject.EBuildNodeUseState
enum class EBuildNodeUseState : uint8_t
{
	EBNUS_Available                                    = 0,
	EBNUS_BeingUsed                                    = 1,
	EBNUS_OnCooldown                                   = 2,
	EBNUS_FullyUpgraded                                = 3,
	EBNUS_MinionWaiting                                = 4,
	EBNUS_END                                          = 5
};

// Enum PoplarGame.PoplarChallengeDefinition.EDailySubType
enum class EDailySubType : uint8_t
{
	EDST_Daily                                         = 0,
	EDST_BiWeekly                                      = 1,
	EDST_Weekly                                        = 2,
	EDST_END                                           = 3
};

// Enum PoplarGame.PoplarChallengeDefinition.EChallengeInterval
enum class EChallengeInterval : uint8_t
{
	ECI_Match                                          = 0,
	ECI_Career                                         = 1,
	ECI_Lifetime                                       = 2,
	ECI_SequentialCareer                               = 3,
	ECI_Daily                                          = 4,
	ECI_END                                            = 5
};

// Enum PoplarGame.PoplarChallengeManager.ChallengeProgressState
enum class EChallengeProgressState : uint8_t
{
	eCPS_Complete                                      = 0,
	eCPS_InProgress                                    = 1,
	eCPS_Locked                                        = 2,
	eCPS_END                                           = 3
};

// Enum PoplarGame.PoplarCharacterIntroCoordinator.ECharacterIntroState
enum class ECharacterIntroState : uint8_t
{
	CharacterIntroState_Initial                        = 0,
	CharacterIntroState_LoadingData                    = 1,
	CharacterIntroState_FinishedLoading                = 2,
	CharacterIntroState_IntroMovie                     = 3,
	CharacterIntroState_InProgress                     = 4,
	CharacterIntroState_Finished                       = 5,
	CharacterIntroState_END                            = 6
};

// Enum PoplarGame.PoplarCharacterRoleDefinition.EPoplarArchetype
enum class EPoplarArchetype : uint8_t
{
	PA_Invalid                                         = 0,
	PA_Killer                                          = 1,
	PA_Disruptor                                       = 2,
	PA_Supporter                                       = 3,
	PA_END                                             = 4
};

// Enum PoplarGame.PoplarCharacterSelectBackgroundMoviePlayer.ECharacterSelectBackgroundState
enum class ECharacterSelectBackgroundState : uint8_t
{
	CSBS_NoCharacter                                   = 0,
	CSBS_ChoosingCharacter                             = 1,
	CSBS_ChoosenCharacter                              = 2,
	CSBS_END                                           = 3
};

// Enum PoplarGame.PoplarCharacterSelectGFxMovie.ENetDisplayState
enum class ENetDisplayState : uint8_t
{
	Ping                                               = 0,
	Ping01                                             = 1,
	Ping02                                             = 2,
	Ping03                                             = 3,
	DISCONNECTED                                       = 4,
	Bot                                                = 5,
	ENetDisplayState_END                               = 6
};

// Enum PoplarGame.PoplarCharacterSelectGFxMovie.EGridDisplayOp
enum class EGridDisplayOp : uint8_t
{
	Characters_ALL                                     = 0,
	Characters_UNLOCKED                                = 1,
	Characters_RESERVED                                = 2,
	Characters_BANNED                                  = 3,
	Characters_KILLERS                                 = 4,
	Characters_DISRUPTORS                              = 5,
	Characters_SUPPORTERS                              = 6,
	Characters_NONE                                    = 7,
	Characters_END                                     = 8
};

// Enum PoplarGame.PoplarCharacterSelectGFxMovie.ECharacterGridType
enum class ECharacterGridType : uint8_t
{
	CGT_SelectionGrid                                  = 0,
	CGT_BannedGrid                                     = 1,
	CGT_ReservedGrid                                   = 2,
	CGT_END                                            = 3
};

// Enum PoplarGame.PoplarCharacterSelectGFxMovie.EPlayerCycleMenuState
enum class EPlayerCycleMenuState : uint8_t
{
	PCMS_FriendlyTeam                                  = 0,
	PCMS_CharacterGrid                                 = 1,
	PCMS_Loadouts                                      = 2,
	PCMS_Skins                                         = 3,
	PCMS_Taunts                                        = 4,
	PCMS_EnemyTeam                                     = 5,
	PCMS_END                                           = 6
};

// Enum PoplarGame.PoplarCharacterSelectGFxMovie.ECharacterSelectNavigationType
enum class ECharacterSelectNavigationType : uint8_t
{
	CSNT_UP                                            = 0,
	CSNT_DOWN                                          = 1,
	CSNT_LEFT                                          = 2,
	CSNT_RIGHT                                         = 3,
	CSNT_END                                           = 4
};

// Enum PoplarGame.PoplarCharacterSelectGFxMovie.ECharacterSelectDisplayedMessageType
enum class ECharacterSelectDisplayedMessageType : uint8_t
{
	CSDMT_None                                         = 0,
	CSDMT_AsyncBlocking                                = 1,
	CSDMT_Input                                        = 2,
	CSDMT_END                                          = 3
};

// Enum PoplarGame.PoplarCharacterSelectGFxMovie.ECharacterSelectMessageId
enum class ECharacterSelectMessageId : uint8_t
{
	CSMI_CharacterLocked                               = 0,
	CSMI_CharacterAlreadySelected                      = 1,
	CSMI_ConfirmCharacter                              = 2,
	CSMI_END                                           = 3
};

// Enum PoplarGame.PoplarCharacterSelectGFxMovie.ECharacterSelectState
enum class ECharacterSelectState : uint8_t
{
	CSS_WaitingForData                                 = 0,
	CSS_SelectingCharacter                             = 1,
	CSS_SelectingLoadout                               = 2,
	CSS_SelectingSkin                                  = 3,
	CSS_SelectingTaunt                                 = 4,
	CSS_SelectionsConfirmed                            = 5,
	CSS_SpectatorOnly                                  = 6,
	CSS_END                                            = 7
};

// Enum PoplarGame.PoplarCharacterSelectManager.CharacterSelectManagerState
enum class ECharacterSelectManagerState : uint8_t
{
	CSMS_Initial                                       = 0,
	CSMS_InProgress                                    = 1,
	CSMS_Complete                                      = 2,
	CSMS_END                                           = 3
};

// Enum PoplarGame.PoplarCharacterSelectManager.CharacterUniquenessLevel
enum class ECharacterUniquenessLevel : uint8_t
{
	CharacterUniqueness_AllPick                        = 0,
	CharacterUniqueness_TeamUnique                     = 1,
	CharacterUniqueness_Unique                         = 2,
	CharacterUniqueness_END                            = 3
};

// Enum PoplarGame.PoplarCharacterSelectManager.CaptainSelectionType
enum class ECaptainSelectionType : uint8_t
{
	CaptainSelection_Vote                              = 0,
	CaptainSelection_Rank                              = 1,
	CaptainSelection_Random                            = 2,
	CaptainSelection_END                               = 3
};

// Enum PoplarGame.PoplarCharacterSelectManager.CharacterSelectPhaseType
enum class ECharacterSelectPhaseType : uint8_t
{
	CharacterSelectPhase_Ban                           = 0,
	CharacterSelectPhase_Reserve                       = 1,
	CharacterSelectPhase_Trade                         = 2,
	CharacterSelectPhase_Select                        = 3,
	CharacterSelectPhase_CaptainSelection              = 4,
	CharacterSelectPhase_Setup                         = 5,
	CharacterSelectPhase_END                           = 6
};

// Enum PoplarGame.PoplarCharacterSelectManagerDebugDefinition.CharacterSelectDebugFontSize
enum class ECharacterSelectDebugFontSize : uint8_t
{
	DebugFontSize_Tiny                                 = 0,
	DebugFontSize_Small                                = 1,
	DebugFontSize_Medium                               = 2,
	DebugFontSize_Large                                = 3,
	DebugFontSize_Subtitle                             = 4,
	DebugFontSize_END                                  = 5
};

// Enum PoplarGame.PoplarCharacterSelectPhaseDefinition.CharacterSelectActivePlayerType
enum class ECharacterSelectActivePlayerType : uint8_t
{
	CSAPT_ActiveTeam_Captain                           = 0,
	CSAPT_ActiveTeam_Players                           = 1,
	CSAPT_ActiveTeam_TurnBased                         = 2,
	CSAPT_All_Captains                                 = 3,
	CSAPT_All_Players                                  = 4,
	CSAPT_All_TurnBased                                = 5,
	CSAPT_END                                          = 6
};

// Enum PoplarGame.PoplarCommandArtifactsGFxMovie.ECommandArtifactPageState
enum class ECommandArtifactPageState : uint8_t
{
	ARTIFACTSTATE_Initializing                         = 0,
	ARTIFACTSTATE_Packs                                = 1,
	ARTIFACTSTATE_SideboardPackOpen                    = 2,
	ARTIFACTSTATE_GetPackList                          = 3,
	ARTIFACTSTATE_PurchasePacks                        = 4,
	ARTIFACTSTATE_Loadouts                             = 5,
	ARTIFACTSTATE_LoadoutEquippingPerk                 = 6,
	ARTIFACTSTATE_BankEquippingPerk                    = 7,
	ARTIFACTSTATE_END                                  = 8
};

// Enum PoplarGame.PoplarCommandArtifactsGFxMovie.ECommandArtifactIconStatus
enum class ECommandArtifactIconStatus : uint8_t
{
	CAIS_Normal                                        = 0,
	CAIS_Empty                                         = 1,
	CAIS_Locked                                        = 2,
	CAIS_Disabled                                      = 3,
	CAIS_END                                           = 4
};

// Enum PoplarGame.PoplarCommandArtifactsGFxMovie.ECommandArtifactIconType
enum class ECommandArtifactIconType : uint8_t
{
	CAIT_Artifact                                      = 0,
	CAIT_Pack_Buy                                      = 1,
	CAIT_Pack_Opened                                   = 2,
	CAIT_Pack_Unopened                                 = 3,
	CAIT_END                                           = 4
};

// Enum PoplarGame.PoplarCommandArtifactsGFxMovie.EPoplarCommandArtifactsTab
enum class EPoplarCommandArtifactsTab : uint8_t
{
	PCAT_Loadouts                                      = 0,
	PCAT_Sideboard                                     = 1,
	PCAT_END                                           = 2
};

// Enum PoplarGame.PoplarCommandArtifactsGFxMovie.ECommandArtifactPageRequestState
enum class ECommandArtifactPageRequestState : uint8_t
{
	ARTIFACTREQUESTSTATE_NoRequest                     = 0,
	ARTIFACTREQUESTSTATE_OpenPack                      = 1,
	ARTIFACTREQUESTSTATE_TransferArtifact              = 2,
	ARTIFACTREQUESTSTATE_SellSideboardItem             = 3,
	ARTIFACTREQUESTSTATE_SellBankItem                  = 4,
	ARTIFACTREQUESTSTATE_PurchasePack                  = 5,
	ARTIFACTREQUESTSTATE_SetLoadout                    = 6,
	ARTIFACTREQUESTSTATE_RequestInventory              = 7,
	ARTIFACTREQUESTSTATE_RequestPlayerMetaData         = 8,
	ARTIFACTREQUESTSTATE_OpenPurchasePacksMenu         = 9,
	ARTIFACTREQUESTSTATE_BuyBankPage                   = 10,
	ARTIFACTREQUESTSTATE_END                           = 11
};

// Enum PoplarGame.PoplarCommandArtifactsGFxMovie.ECommandArtifactInitializingState
enum class ECommandArtifactInitializingState : uint8_t
{
	ARTIFACTINITSTATE_None                             = 0,
	ARTIFACTINITSTATE_TopLine                          = 1,
	ARTIFACTINITSTATE_Bank                             = 2,
	ARTIFACTINITSTATE_Loadouts                         = 3,
	ARTIFACTINITSTATE_PurchasePacks                    = 4,
	ARTIFACTINITSTATE_END                              = 5
};

// Enum PoplarGame.PoplarCommandArtifactsGFxMovie.ECommandArtifactSaveLoadoutHandlerType
enum class ECommandArtifactSaveLoadoutHandlerType : uint8_t
{
	ARTIFACTSAVELOADOUTSTATE_None                      = 0,
	ARTIFACTSAVELOADOUTSTATE_TabSelected               = 1,
	ARTIFACTSAVELOADOUTSTATE_PageChanged               = 2,
	ARTIFACTSAVELOADOUTSTATE_Exit                      = 3,
	ARTIFACTSAVELOADOUTSTATE_END                       = 4
};

// Enum PoplarGame.PoplarCommandBattlebornCharacterAppearanceGFxObject.EPoplarCharacterAppearancePageState
enum class EPoplarCharacterAppearancePageState : uint8_t
{
	PCAP_None                                          = 0,
	PCAP_Skins                                         = 1,
	PCAP_Taunts                                        = 2,
	PCAP_END                                           = 3
};

// Enum PoplarGame.PoplarCommandBattlebornCharacterChallengesGFxObject.LoreChallengeDisplayState
enum class ELoreChallengeDisplayState : uint8_t
{
	LCDS_ButtonGrid                                    = 0,
	LCDS_ImageOnly                                     = 1,
	LCDS_RewardPopup                                   = 2,
	LCDS_END                                           = 3
};

// Enum PoplarGame.PoplarCommandBattlebornGFxMovie.EPoplarCommandBattlebornTab
enum class EPoplarCommandBattlebornTab : uint8_t
{
	PCBT_Grid                                          = 0,
	PCBT_Information                                   = 1,
	PCBT_Helix                                         = 2,
	PCBT_Appearance                                    = 3,
	PCBT_Challenges                                    = 4,
	PCBT_Stats                                         = 5,
	PCBT_END                                           = 6
};

// Enum PoplarGame.PoplarCommandMenuDefinition.ECommandBackgroundState
enum class ECommandBackgroundState : uint8_t
{
	CmdBackground_Green                                = 0,
	CmdBackground_Blue                                 = 1,
	CmdBackground_END                                  = 2
};

// Enum PoplarGame.PoplarCommandCareerGFxMovie.EPoplarCommandCareerTab
enum class EPoplarCommandCareerTab : uint8_t
{
	PCCT_PlayerStats                                   = 0,
	PCCT_Challenges                                    = 1,
	PCCT_TitleSelect                                   = 2,
	PCCT_END                                           = 3
};

// Enum PoplarGame.PoplarCommandChallengesPanelGFxObject.EChallengeStatusTypeToDisplay
enum class EChallengeStatusTypeToDisplay : uint8_t
{
	CSTTD_Complete                                     = 0,
	CSTTD_InProgress                                   = 1,
	CSTTD_END                                          = 2
};

// Enum PoplarGame.PoplarCommandPageGFxMovieDefinition.StatValueFormatType
enum class EStatValueFormatType : uint8_t
{
	SVFT_Integer                                       = 0,
	SVFT_Float                                         = 1,
	SVFT_TimeHoursMinutes                              = 2,
	SVFT_END                                           = 3
};

// Enum PoplarGame.PoplarCommandTitleSelectPanelGFxObject.EMetaTitleDisplayType
enum class EMetaTitleDisplayType : uint8_t
{
	MTDT_Unlocked                                      = 0,
	MTDT_Locked                                        = 1,
	MTDT_Hidden                                        = 2,
	MTDT_END                                           = 3
};

// Enum PoplarGame.PoplarControlledMoveDefinition.ECMMoveLRControlMode
enum class ECMMoveLRControlMode : uint8_t
{
	CM_Move_LR_None                                    = 0,
	CM_Move_LR_Strafe                                  = 1,
	CM_Move_LR_Yaw                                     = 2,
	CM_Move_LR_END                                     = 3
};

// Enum PoplarGame.PoplarControlledMoveDefinition.ECMMoveFBControlMode
enum class ECMMoveFBControlMode : uint8_t
{
	CM_Move_FB_None                                    = 0,
	CM_Move_FB_Pitch                                   = 1,
	CM_Move_FB_Speed                                   = 2,
	CM_Move_FB_END                                     = 3
};

// Enum PoplarGame.PoplarControlledMoveDefinition.ECMMovementType
enum class ECMMovementType : uint8_t
{
	CM_MOVE_Ground                                     = 0,
	CM_MOVE_Flying                                     = 1,
	CM_MOVE_Falling                                    = 2,
	CM_MOVE_END                                        = 3
};

// Enum PoplarGame.PoplarControlledMoveDefinition.ECMAllegianceFilterType
enum class ECMAllegianceFilterType : uint8_t
{
	CM_COLFILTER_All                                   = 0,
	CM_COLFILTER_Enemy                                 = 1,
	CM_COLFILTER_Friendly                              = 2,
	CM_COLFILTER_END                                   = 3
};

// Enum PoplarGame.PoplarDedicatedServerStatManager.EServerStatEntryType
enum class EServerStatEntryType : uint8_t
{
	EServerStatEntry_Startup                           = 0,
	EServerStatEntry_Tick                              = 1,
	EServerStatEntry_Mem                               = 2,
	EServerStatEntry_AI                                = 3,
	EServerStatEntry_Collision                         = 4,
	EServerStatEntry_Network                           = 5,
	EServerStatEntry_Hardware                          = 6,
	EServerStatEntry_Physics                           = 7,
	EServerStatEntry_Actors                            = 8,
	EServerStatEntry_PMT                               = 9,
	EServerStatEntry_Animation                         = 10,
	EServerStatEntry_Game                              = 11,
	EServerStatEntry_Skills                            = 12,
	EServerStatEntry_CombatTracker                     = 13,
	EServerStatEntry_Buffs                             = 14,
	EServerStatEntry_GarbageCollection                 = 15,
	EServerStatEntry_END                               = 16
};

// Enum PoplarGame.PoplarFactionDefinition.EPoplarFaction
enum class EPoplarFaction : uint8_t
{
	FAC_Invalid                                        = 0,
	FAC_Jennerit                                       = 1,
	FAC_Eldrid                                         = 2,
	FAC_LLC                                            = 3,
	FAC_Rogue                                          = 4,
	FAC_Peacekeepers                                   = 5,
	FAC_Prestige                                       = 6,
	FAC_END                                            = 7
};

// Enum PoplarGame.PoplarFrontendGFxMovie.EFrontendLogoType
enum class EFrontendLogoType : uint8_t
{
	LT_Standard                                        = 0,
	LT_Standard_SeasonPass                             = 1,
	LT_DigitalDeluxe                                   = 2,
	LT_Trial                                           = 3,
	LT_Trial_SeasonPass                                = 4,
	LT_END                                             = 5
};

// Enum PoplarGame.PoplarFrontendGFxMovie.EFrontendElementState
enum class EFrontendElementState : uint8_t
{
	FES_ENABLED                                        = 0,
	FES_HIDDEN                                         = 1,
	FES_END                                            = 2
};

// Enum PoplarGame.PoplarFrontendPlayerListGFxObject.EFriendListRowTypeId
enum class EFriendListRowTypeId : uint8_t
{
	FLRTI_Empty                                        = 0,
	FLRTI_PlayerInfo                                   = 1,
	FLRTI_MessagePrompt                                = 2,
	FLRTI_Label                                        = 3,
	FLRTI_END                                          = 4
};

// Enum PoplarGame.PoplarFrontendScreenMainGFxObject.EFrontendPanelID
enum class EFrontendPanelID : uint8_t
{
	FPID_StoryPrologue                                 = 0,
	FPID_Competitive                                   = 1,
	FPID_Campaign                                      = 2,
	FPID_Command                                       = 3,
	FPID_CompetitivePrivateMatch                       = 4,
	FPID_CampaignPrivateMatch                          = 5,
	FPID_Operations                                    = 6,
	FPID_OperationsPrivateMatch                        = 7,
	FPID_Training                                      = 8,
	FPID_MatchHistory                                  = 9,
	FPID_Friends                                       = 10,
	FPID_Options                                       = 11,
	FPID_Extras                                        = 12,
	FPID_Extras_Achievements                           = 13,
	FPID_Extras_Shift                                  = 14,
	FPID_Extras_Credits                                = 15,
	FPID_Quit                                          = 16,
	FPID_Disconnect                                    = 17,
	FPID_Purchase                                      = 18,
	FPID_VersusPrologue                                = 19,
	FPID_Placeholder                                   = 20,
	FPID_END                                           = 21
};

// Enum PoplarGame.PoplarGameInfo.EServerStartupEvent
enum class EServerStartupEvent : uint8_t
{
	SSE_ReadMatchDocument                              = 0,
	SSE_RestartInitialization                          = 1,
	SSE_ReadPlayersStatsData                           = 2,
	SSE_NotifyTabulatorOfMatch                         = 3,
	SSE_ReadPlayerMetaData                             = 4,
	SSE_PrepareServerTravel                            = 5,
	SSE_ServerTravel                                   = 6,
	SSE_ResolveHostName                                = 7,
	SSE_UpdateMatchDocumentActive                      = 8,
	SSE_ServerStartup                                  = 9,
	SSE_END                                            = 10
};

// Enum PoplarGame.PoplarGameInfo.EInitiateSurrenderResult
enum class EInitiateSurrenderResult : uint8_t
{
	InitiateSurrender_Success                          = 0,
	InitiateSurrender_TooEarly                         = 1,
	InitiateSurrender_TooLate                          = 2,
	InitiateSurrender_FailedActive                     = 3,
	InitiateSurrender_FailedCooldown                   = 4,
	InitiateSurrender_FailedCodeIssue                  = 5,
	InitiateSurrender_FailedContentFlag                = 6,
	InitiateSurrender_END                              = 7
};

// Enum PoplarGame.PoplarGameInputEmulator.EInputEmulatorState
enum class EInputEmulatorState : uint8_t
{
	EINPUTEMULATORSTATE_Idle                           = 0,
	EINPUTEMULATORSTATE_Recording                      = 1,
	EINPUTEMULATORSTATE_Playing                        = 2,
	EINPUTEMULATORSTATE_END                            = 3
};

// Enum PoplarGame.PoplarGameInputEmulator.EInputEmulatorEventType
enum class EInputEmulatorEventType : uint8_t
{
	EINPUTEMULATOREVENTTYPE_Key                        = 0,
	EINPUTEMULATOREVENTTYPE_Axis                       = 1,
	EINPUTEMULATOREVENTTYPE_Char                       = 2,
	EINPUTEMULATOREVENTTYPE_StartData                  = 3,
	EINPUTEMULATOREVENTTYPE_StartFrame                 = 4,
	EINPUTEMULATOREVENTTYPE_END                        = 5
};

// Enum PoplarGame.PoplarGearboxAccountGFxMovie.EKeyboardInputType
enum class EKeyboardInputType : uint8_t
{
	KIT_None                                           = 0,
	KIT_Email                                          = 1,
	KIT_ConfirmEmail                                   = 2,
	KIT_Password                                       = 3,
	KIT_ConfirmPassword                                = 4,
	KIT_CodeEntry                                      = 5,
	KIT_END                                            = 6
};

// Enum PoplarGame.PoplarGlobals.EPlayerStandInAudioMode
enum class EPlayerStandInAudioMode : uint8_t
{
	StandIn_AudioMode_MuteAll                          = 0,
	StandIn_AudioMode_MainMenu                         = 1,
	StandIn_AudioMode_CommandMenu                      = 2,
	StandIn_AudioMode_CharacterSelect                  = 3,
	StandIn_AudioMode_PvEIntro                         = 4,
	StandIn_AudioMode_END                              = 5
};

// Enum PoplarGame.PoplarHitReactionDefinition.EPoplarHitReactionDirectionRef
enum class EPoplarHitReactionDirectionRef : uint8_t
{
	HR_DIR_REF_View                                    = 0,
	HR_DIR_REF_Body                                    = 1,
	HR_DIR_REF_END                                     = 2
};

// Enum PoplarGame.PoplarHitReactionDefinition.EPoplarHitReactionSwingType
enum class EPoplarHitReactionSwingType : uint8_t
{
	HR_SWING_TYPE_Any                                  = 0,
	HR_SWING_TYPE_Left                                 = 1,
	HR_SWING_TYPE_Right                                = 2,
	HR_SWING_TYPE_END                                  = 3
};

// Enum PoplarGame.PoplarImageManager.ELifespanEventType
enum class ELifespanEventType : uint8_t
{
	LET_TitleScreen                                    = 0,
	LET_MainMenu                                       = 1,
	LET_Gameplay                                       = 2,
	LET_END                                            = 3
};

// Enum PoplarGame.PoplarImageManager.EImageLifespan
enum class EImageLifespan : uint8_t
{
	ILS_Frontend                                       = 0,
	ILS_Gameplay                                       = 1,
	ILS_Permanent                                      = 2,
	ILS_END                                            = 3
};

// Enum PoplarGame.PoplarManagedActorDefinition.EReapOrder
enum class EReapOrder : uint8_t
{
	REAPORDER_OldestFirst                              = 0,
	REAPORDER_NewestFirst                              = 1,
	REAPORDER_Random                                   = 2,
	REAPORDER_END                                      = 3
};

// Enum PoplarGame.PoplarSpectatorController.EPoplarSpectatorState
enum class EPoplarSpectatorState : uint8_t
{
	PLAYER11_FreeLook                                  = 0,
	PLAYER11_CloseUpFollow                             = 1,
	PLAYER11_FirstPerson                               = 2,
	PLAYER11_SpectatingDeadPlayer                      = 3,
	PLAYER11_END                                       = 4
};

// Enum PoplarGame.PoplarMetagameInventory.MetaInventoryRolloutMessageType
enum class EMetaInventoryRolloutMessageType : uint8_t
{
	MIRMT_Retrieval_Metagame                           = 0,
	MIRMT_Retrieval_Entitlements                       = 1,
	MIRMT_Retrieval_Marketplace                        = 2,
	MIRMT_Retrieval_Player                             = 3,
	MIRMT_Retrieval_Purchasables                       = 4,
	MIRMT_Salvage                                      = 5,
	MIRMT_Loadout                                      = 6,
	MIRMT_FirstParty                                   = 7,
	MIRMT_Purchase                                     = 8,
	MIRMT_Sale                                         = 9,
	MIRMT_Refund                                       = 10,
	MIRMT_UpdatingPremiumCurrency                      = 11,
	MIRMT_END                                          = 12
};

// Enum PoplarGame.PoplarMetaItemBundleDefinition.EBundleVisibilityFlag
enum class EBundleVisibilityFlag : uint8_t
{
	BVF_MustOwn                                        = 0,
	BVF_MustNotOwn                                     = 1,
	BVF_END                                            = 2
};

// Enum PoplarGame.PoplarMinimapIconType_Waypoint.EWaypointMinimapIconSubClip
enum class EWaypointMinimapIconSubClip : uint8_t
{
	WMISC_Optional                                     = 0,
	WMISC_Above                                        = 1,
	WMISC_Below                                        = 2,
	WMISC_Arrow                                        = 3,
	WMISC_END                                          = 4
};

// Enum PoplarGame.PoplarMinionSpawner.EMinionSpawnType
enum class EMinionSpawnType : uint8_t
{
	EMinionWave_Normal                                 = 0,
	EMinionWave_Once                                   = 1,
	EMinionWave_Interval                               = 2,
	EMinionWave_END                                    = 3
};

// Enum PoplarGame.PoplarMissionSpawnerAspect.EObjectiveUpdateSetting
enum class EObjectiveUpdateSetting : uint8_t
{
	OUS_None                                           = 0,
	OUS_MissionObjectiveOnDeath                        = 1,
	OUS_OverrideObjectiveOnDeath                       = 2,
	OUS_MissionAndOverrideObjectiveOnDeath             = 3,
	OUS_MissionObjectiveOnStatAdd                      = 4,
	OUS_MissionObjectiveOnStatAddRemove                = 5,
	OUS_OverrideObjectiveOnStatAdd                     = 6,
	OUS_OverrideObjectiveOnStatAddRemove               = 7,
	OUS_MissionObjectiveOnAllDead                      = 8,
	OUS_OverrideObjectiveOnAllDead                     = 9,
	OUS_MissionAndOverrideObjectiveOnAllDead           = 10,
	OUS_END                                            = 11
};

// Enum PoplarGame.PoplarMissionSpawnerAspect.ESpawnerWaypointActorSetting
enum class ESpawnerWaypointActorSetting : uint8_t
{
	PWAS_ALL                                           = 0,
	PWAS_SpawnedActors                                 = 1,
	PWAS_Opportunity                                   = 2,
	PWAS_OpportunityIfNoActors                         = 3,
	PWAS_END                                           = 4
};

// Enum PoplarGame.PoplarMissionSpawnerAspect.ESpawnerWaypointSetting
enum class ESpawnerWaypointSetting : uint8_t
{
	PWS_None                                           = 0,
	PWS_MissionObjective                               = 1,
	PWS_KillOverride                                   = 2,
	PWS_All                                            = 3,
	PWS_END                                            = 4
};

// Enum PoplarGame.PoplarMissionSpawnerAspect.EObjectiveSpawnerActivation
enum class EObjectiveSpawnerActivation : uint8_t
{
	OPA_External                                       = 0,
	OPA_AlwaysActive                                   = 1,
	OPA_ActiveWhenObjectiveActive                      = 2,
	OPA_ActiveWhenObjectiveNotComplete                 = 3,
	OPA_ActiveWhenObjectiveNotInactive                 = 4,
	OPA_ActiveWhenObjectiveComplete                    = 5,
	OPA_END                                            = 6
};

// Enum PoplarGame.PoplarOutlineHighlightDefinition.OutlineShaderColorScheme
enum class EOutlineShaderColorScheme : uint8_t
{
	OUTLINECOLOR_UseTeamRelativeColors                 = 0,
	OUTLINECOLOR_UseSpecifiedColors                    = 1,
	OUTLINECOLOR_END                                   = 2
};

// Enum PoplarGame.PoplarOvershieldExpressionEvaluator.EOvershieldExpressionConstraint
enum class EOvershieldExpressionConstraint : uint8_t
{
	OvershieldExpressionConstraint_GreaterThan         = 0,
	OvershieldExpressionConstraint_LessThan            = 1,
	OvershieldExpressionConstraint_EqualTo             = 2,
	OvershieldExpressionConstraint_END                 = 3
};

// Enum PoplarGame.PoplarPlayerCharacterExpressionEvaluator.ECharacterExpressionState
enum class ECharacterExpressionState : uint8_t
{
	ECES_EqualTo                                       = 0,
	ECES_NotEqualTo                                    = 1,
	ECES_END                                           = 2
};

// Enum PoplarGame.PoplarPlayerSkillTree.ECheckSkillGradeUpgrade
enum class ECheckSkillGradeUpgrade : uint8_t
{
	SGU_Available                                      = 0,
	SGU_SkillLocked                                    = 1,
	SGU_SkillMaxed                                     = 2,
	SGU_UnknownError                                   = 3,
	SGU_END                                            = 4
};

// Enum PoplarGame.PoplarPostMatchGFxMovie.EPostMatchState
enum class EPostMatchState : uint8_t
{
	PMS_Init                                           = 0,
	PMS_WaitingForMetaResults                          = 1,
	PMS_DisplayExperienceTab                           = 2,
	PMS_DisplayExperienceSplitTab                      = 3,
	PMS_DisplayChallengeTab                            = 4,
	PMS_DisplayStatTab                                 = 5,
	PMS_DisplayPlayerTab                               = 6,
	PMS_END                                            = 7
};

// Enum PoplarGame.PoplarPostMatchGFxMovie.EPostMatchRewardTrainState
enum class EPostMatchRewardTrainState : uint8_t
{
	PMRTS_Off                                          = 0,
	PMRTS_Begin                                        = 1,
	PMRTS_CharacterUnlocks                             = 2,
	PMRTS_Score                                        = 3,
	PMRTS_MapRewards                                   = 4,
	PMRTS_MapRewardsSliders                            = 5,
	PMRTS_MapRewardsPostDelay                          = 6,
	PMRTS_Xp                                           = 7,
	PMRTS_XpSliders                                    = 8,
	PMRTS_XpPostDelay                                  = 9,
	PMRTS_Rewards                                      = 10,
	PMRTS_Ec                                           = 11,
	PMRTS_EcSliders                                    = 12,
	PMRTS_EcPostDelay                                  = 13,
	PMRTS_Summary                                      = 14,
	PMRTS_Static                                       = 15,
	PMRTS_END                                          = 16
};

// Enum PoplarGame.PoplarScoreboardDefinition.EScoreboardType
enum class EScoreboardType : uint8_t
{
	EST_PvP                                            = 0,
	EST_PvE                                            = 1,
	EST_END                                            = 2
};

// Enum PoplarGame.PoplarScrollingListDataProviderAudioOptions.Audio_LoopingExample
enum class EAudio_LoopingExample : uint8_t
{
	AUDIOLOOPEXAMPLE_NONE                              = 0,
	AUDIOLOOPEXAMPLE_MUSIC                             = 1,
	AUDIOLOOPEXAMPLE_SFX                               = 2,
	AUDIOLOOPEXAMPLE_VO                                = 3,
	AUDIOLOOPEXAMPLE_PLAYERALERT                       = 4,
	AUDIOLOOPEXAMPLE_END                               = 5
};

// Enum PoplarGame.PoplarScrollingListDataProviderAudioOptions.Audio_ListItems
enum class EAudio_ListItems : uint8_t
{
	ALI_MUSIC_VOLUME                                   = 0,
	ALI_SFX_VOLUME                                     = 1,
	ALI_VO_VOLUME                                      = 2,
	ALI_PLAYER_ALERT_VOLUME                            = 3,
	ALI_ENABLE_SUBTITLES                               = 4,
	ALI_ENABLE_OPTIONAL_VO                             = 5,
	ALI_PUSH_TO_TALK                                   = 6,
	ALI_VOICE_VOLUME                                   = 7,
	ALI_SPEAKER_SETUP                                  = 8,
	ALI_CONTROLLER_AUDIO                               = 9,
	ALI_SPEAKER_ANGLE_OPTIONS                          = 10,
	ALI_END                                            = 11
};

// Enum PoplarGame.PoplarScrollingListDataProviderGameOptions.Game_ListItems
enum class EGame_ListItems : uint8_t
{
	GOLI_TEAM_COLOR_OPTIONS                            = 0,
	GOLI_ENABLE_TRAINING_MESSAGES                      = 1,
	GOLI_RESET_TRAINING_MESSAGES                       = 2,
	GOLI_AUTO_AIM                                      = 3,
	GOLI_ZOOM_SNAP_TO_TARGET                           = 4,
	GOLI_ZOOM_TOGGLE                                   = 5,
	GOLI_ACTION_SKILL_CAST_STYLE                       = 6,
	GOLI_SPRINT_TOGGLE                                 = 7,
	GOLI_AUTO_KICK_RECOVERY                            = 8,
	GOLI_DAMAGE_FEEDBACK                               = 9,
	GOLI_MAP_DISPLAY                                   = 10,
	GOLI_LOCK_COMBAT_RADAR_ROTATION                    = 11,
	GOLI_CHAT_DISPLAY_LENGTH                           = 12,
	GOLI_REGEN_TEXT_DISPLAY_MODE                       = 13,
	GOLI_CLEAR_BREADCRUMBS                             = 14,
	GOLI_DAMAGE_NUMBER_STYLE                           = 15,
	GOLI_END                                           = 16
};

// Enum PoplarGame.PoplarScrollingListDataProviderGamepadOptions.Gamepad_ListItems
enum class EGamepad_ListItems : uint8_t
{
	GPLI_Y_INVERSION                                   = 0,
	GPLI_GAMEPAD_INVERT_TURN                           = 1,
	GPLI_GAMEPAD_INVERT_MOVE                           = 2,
	GPLI_GAMEPAD_INVERT_STAFE                          = 3,
	GPLI_CONTROLLER_SENSITIVITY_X                      = 4,
	GPLI_CONTROLLER_SENSITIVITY_Y                      = 5,
	GPLI_QUICK_SHOP                                    = 6,
	GPLI_FORCE_FEEDBACK                                = 7,
	GPLI_CONTROLS                                      = 8,
	GPLI_AUTOAIM                                       = 9,
	GPLI_END                                           = 10
};

// Enum PoplarGame.PoplarScrollingListDataProviderKeyboardMouseOptions.KeyboardMouse_ListItems
enum class EKeyboardMouse_ListItems : uint8_t
{
	KMLI_INVERT_MOUSE_LOOK                             = 0,
	KMLI_MOUSE_SENSITIVITY_X                           = 1,
	KMLI_MOUSE_SENSITIVITY_Y                           = 2,
	KMLI_MOUSE_SMOOTHING                               = 3,
	KMLI_CONTROLS                                      = 4,
	KMLI_END                                           = 5
};

// Enum PoplarGame.PoplarScrollingListDataProviderPartyOptions.PoplarPartyOptionsListItems
enum class EPoplarPartyOptionsListItems : uint8_t
{
	PPOLI_NETWORK_OPTIONS                              = 0,
	PPOLI_NETWORK_END                                  = 1
};

// Enum PoplarGame.PoplarScrollingListDataProviderSpeakerAngles.SpeakerAngles_ListItems
enum class ESpeakerAngles_ListItems : uint8_t
{
	SAO_FRONT                                          = 0,
	SAO_SIDE                                           = 1,
	SAO_BACK                                           = 2,
	SAO_END                                            = 3
};

// Enum PoplarGame.PoplarScrollingListDataProviderSpectatorOptions.SpectatorOptionsListItems
enum class ESpectatorOptionsListItems : uint8_t
{
	SOLI_CameraClipping                                = 0,
	SOLI_AutoDisplayDeathRecap                         = 1,
	SOLI_ChangeTargetBehavior                          = 2,
	SOLI_FirstPersonPreference                         = 3,
	SOLI_FirstPersonNearDeathHaze                      = 4,
	SOLI_END                                           = 5
};

// Enum PoplarGame.PoplarScrollingListDataProviderTeamColorOptions.TeamColor_ListItems
enum class ETeamColor_ListItems : uint8_t
{
	TCLI_TEAM_RELATIVE_COLOR_ALLY                      = 0,
	TCLI_TEAM_RELATIVE_COLOR_ENEMY                     = 1,
	TCLI_APPLY_CHANGES                                 = 2,
	TCLI_END                                           = 3
};

// Enum PoplarGame.PoplarScrollingListDataProviderTopLevelOptions.ListItems
enum class EListItems : uint8_t
{
	PGBLI_GAME_OPTIONS                                 = 0,
	PGBLI_SPECTATOR_OPTIONS                            = 1,
	PGBLI_AUDIO_OPTIONS                                = 2,
	PGBLI_VIDEO_OPTIONS                                = 3,
	PGBLI_KEYBOARD_MOUSE_OPTIONS                       = 4,
	PGBLI_GAMEPAD_OPTIONS                              = 5,
	PGBLI_PARTY_OPTIONS                                = 6,
	PGBLI_SUPPORT_INFO                                 = 7,
	PGBLI_XBOX_HELP                                    = 8,
	PGBLI_EXTRAS                                       = 9,
	PGBLI_PREVIOUS_MENU                                = 10,
	PGBLI_END                                          = 11
};

// Enum PoplarGame.PoplarScrollingListDataProviderVideoOptions.VideoListItems
enum class EVideoListItems : uint8_t
{
	LI_BRIGHTNESS                                      = 0,
	LI_HUD_SCALE_X                                     = 1,
	LI_HUD_SCALE_Y                                     = 2,
	LI_HUD_SCALE_E                                     = 3,
	LI_PLAYER_FOV                                      = 4,
	LI_RESOLUTION                                      = 5,
	LI_WINDOW_MODE                                     = 6,
	LI_SHADOW_QUALITY                                  = 7,
	LI_PARTICLE_DETAIL                                 = 8,
	LI_4K_CONSOLE_RESOLUTION                           = 9,
	LI_END                                             = 10
};

// Enum PoplarGame.PoplarSeqEvent_MatchState.EMatchStateEvent
enum class EMatchStateEvent : uint8_t
{
	MATCHEVENT_MatchStarted                            = 0,
	MATCHEVENT_WarmupStarted                           = 1,
	MATCHEVENT_WarmupEnded                             = 2,
	MATCHEVENT_MatchEnded                              = 3,
	MATCHEVENT_PendingStart                            = 4,
	MATCHEVENT_END                                     = 5
};

// Enum PoplarGame.PoplarSkelControl_AttributeAnimatedBone.EAttributeBoneScaleType
enum class EAttributeBoneScaleType : uint8_t
{
	BONESCALETYPE_None                                 = 0,
	BONESCALETYPE_ScaleByAttribute                     = 1,
	BONESCALETYPE_Interpolate                          = 2,
	BONESCALETYPE_Alternate                            = 3,
	BONESCALETYPE_END                                  = 4
};

// Enum PoplarGame.PoplarSkelControl_AttributeAnimatedBone.EAttributeBoneTranslationType
enum class EAttributeBoneTranslationType : uint8_t
{
	BONETRANSTYPE_None                                 = 0,
	BONETRANSTYPE_ScaleByAttribute                     = 1,
	BONETRANSTYPE_Interpolate                          = 2,
	BONETRANSTYPE_Alternate                            = 3,
	BONETRANSTYPE_END                                  = 4
};

// Enum PoplarGame.PoplarSkelControl_AttributeAnimatedBone.EAttributeBoneRotationType
enum class EAttributeBoneRotationType : uint8_t
{
	BONEROTTYPE_None                                   = 0,
	BONEROTTYPE_ScaleByAttribute                       = 1,
	BONEROTTYPE_Interpolate                            = 2,
	BONEROTTYPE_Cycle                                  = 3,
	BONEROTTYPE_Alternate                              = 4,
	BONEROTTYPE_END                                    = 5
};

// Enum PoplarGame.PoplarSkill.EPoplarSkillConfirmationStage
enum class EPoplarSkillConfirmationStage : uint8_t
{
	SKILLCONFIRM_Unset                                 = 0,
	SKILLCONFIRM_PendingConfirm                        = 1,
	SKILLCONFIRM_UserWantsConfirm                      = 2,
	SKILLCONFIRM_UserWantsCancel                       = 3,
	SKILLCONFIRM_Processed                             = 4,
	SKILLCONFIRM_END                                   = 5
};

// Enum PoplarGame.PoplarSkillDefinition.EActionSkillEventType
enum class EActionSkillEventType : uint8_t
{
	ASEVT_CooldownAbilityActivated                     = 0,
	ASEVT_ActiveAbilityActivated                       = 1,
	ASEVT_Activated                                    = 2,
	ASEVT_Deactivated                                  = 3,
	ASEVT_END                                          = 4
};

// Enum PoplarGame.PoplarStartupProcess.EPoplarStartupProcessErrorCode
enum class EPoplarStartupProcessErrorCode : uint8_t
{
	STARTUPERROR_None                                  = 0,
	STARTUPERROR_NoNetworkConnection                   = 1,
	STARTUPERROR_NotLoggedIn                           = 2,
	STARTUPERROR_IsGuest                               = 3,
	STARTUPERROR_CheckPatchAvailable                   = 4,
	STARTUPERROR_CheckPatchAvailable_PatchAvailable    = 5,
	STARTUPERROR_CheckPermissions                      = 6,
	STARTUPERROR_CheckPermissions_CannotPlayOnline     = 7,
	STARTUPERROR_ReadGameLicenseType                   = 8,
	STARTUPERROR_PatcherDownload                       = 9,
	STARTUPERROR_SparkAuthentication                   = 10,
	STARTUPERROR_SparkAuthentication_ServiceFailure    = 11,
	STARTUPERROR_SparkAuthentication_DiscoveryFailure  = 12,
	STARTUPERROR_SparkAuthentication_Banned            = 13,
	STARTUPERROR_SparkAuthentication_NotValid          = 14,
	STARTUPERROR_Micropatch                            = 15,
	STARTUPERROR_ReadProfileSettings                   = 16,
	STARTUPERROR_ReadProfileSettings_ReadCorruptProfile = 17,
	STARTUPERROR_ReadProfileSettings_DeleteCorruptProfile = 18,
	STARTUPERROR_DownloadUserData                      = 19,
	STARTUPERROR_AcceptDeclineAgreements               = 20,
	STARTUPERROR_MustAcceptAgreements                  = 21,
	STARTUPERROR_LoginChange                           = 22,
	STARTUPERROR_LinkLost                              = 23,
	STARTUPERROR_ServiceConnectionLost                 = 24,
	STARTUPERROR_SparkAuthentication_Suspended         = 25,
	STARTUPERROR_StagedReveal_InvalidId                = 26,
	STARTUPERROR_StagedReveal_LoadFailed               = 27,
	STARTUPERROR_SuspendResume                         = 28,
	STARTUPERROR_END                                   = 29
};

// Enum PoplarGame.PoplarStartupProcess.EPoplarStartupProcessState
enum class EPoplarStartupProcessState : uint8_t
{
	STARTUP_EstablishControllerPairing                 = 0,
	STARTUP_CheckPatchAvailable                        = 1,
	STARTUP_CheckPermissions                           = 2,
	STARTUP_PatcherDownload                            = 3,
	STARTUP_ReadPrivileges                             = 4,
	STARTUP_ReadGameLicenseType                        = 5,
	STARTUP_SparkAuthentication                        = 6,
	STARTUP_DownloadAgreements                         = 7,
	STARTUP_AcceptDeclineAgreements                    = 8,
	STARTUP_ApplyStagedReveal                          = 9,
	STARTUP_Micropatch                                 = 10,
	STARTUP_Providence                                 = 11,
	STARTUP_ReadProfileSettings                        = 12,
	STARTUP_InitMetaProfile                            = 13,
	STARTUP_CheckNATSettings                           = 14,
	STARTUP_ReadMarketplace                            = 15,
	STARTUP_ReadEntitlements                           = 16,
	STARTUP_ReadQoS                                    = 17,
	STARTUP_DownloadUserData                           = 18,
	STARTUP_RetrieveNews                               = 19,
	STARTUP_CheckPrologueCompletion                    = 20,
	STARTUP_Complete                                   = 21,
	STARTUP_END                                        = 22
};

// Enum PoplarGame.PoplarSwitchPadObject.ESwitchPadType
enum class ESwitchPadType : uint8_t
{
	ESPT_BatterySwitch                                 = 0,
	ESPT_PressureSwitch                                = 1,
	ESPT_CaptureSwitch                                 = 2,
	ESPT_CapturePad                                    = 3,
	ESPT_END                                           = 4
};

// Enum PoplarGame.PoplarSwitchPadObjectDefinition.ECapturePadIconType
enum class ECapturePadIconType : uint8_t
{
	CPIT_Standard                                      = 0,
	CPIT_Thrall                                        = 1,
	CPIT_Shepherd                                      = 2,
	CPIT_END                                           = 3
};

// Enum PoplarGame.PoplarTeamDefinition.TeamMembersVarFilterType
enum class ETeamMembersVarFilterType : uint8_t
{
	TEAMFILTER_AllAllies                               = 0,
	TEAMFILTER_AllEnemies                              = 1,
	TEAMFILTER_END                                     = 2
};

// Enum PoplarGame.PoplarTeamDefinition.ESpectatorColorOption
enum class ESpectatorColorOption : uint8_t
{
	SPECCOLOR_NoColor                                  = 0,
	SPECCOLOR_UseAllied                                = 1,
	SPECCOLOR_UseEnemy                                 = 2,
	SPECCOLOR_UseNeutral                               = 3,
	SPECCOLOR_UseSpecified                             = 4,
	SPECCOLOR_END                                      = 5
};

// Enum PoplarGame.PoplarUnitTypeDefinition.EMastersOptions
enum class EMastersOptions : uint8_t
{
	EMO_NoMasters                                      = 0,
	EMO_AllMasters                                     = 1,
	EMO_OnlyMostRelevantMaster                         = 2,
	EMO_AllButMostRelevantMaster                       = 3,
	EMO_END                                            = 4
};

// Enum PoplarGame.PoplarUnitTypeTagExpressionEvaluator.EExpressionConstraint
enum class EExpressionConstraint : uint8_t
{
	ExpressionConstraint_Inclusion                     = 0,
	ExpressionConstraint_Exclusion                     = 1,
	ExpressionConstraint_InclusionOr                   = 2,
	ExpressionConstraint_ExclusionOr                   = 3,
	ExpressionConstraint_END                           = 4
};

// Enum PoplarGame.PoplarWeapon.EWeaponChargeState
enum class EWeaponChargeState : uint8_t
{
	CHARGESTATE_None                                   = 0,
	CHARGESTATE_Charging                               = 1,
	CHARGESTATE_Charged                                = 2,
	CHARGESTATE_Overcharged                            = 3,
	CHARGESTATE_END                                    = 4
};

// Enum PoplarGame.PoplarWeaponTypeDefinition.EVisibleAmmoControlType
enum class EVisibleAmmoControlType : uint8_t
{
	VA_CONTROL_Bones                                   = 0,
	VA_CONTROL_BinarySwitch                            = 1,
	VA_CONTROL_CountSwitch                             = 2,
	VA_CONTROL_END                                     = 3
};

// Enum PoplarGame.PoplarWeaponTypeDefinition.EWeaponFireModeOutputs
enum class EWeaponFireModeOutputs : uint8_t
{
	FIREMODE_ZERO                                      = 0,
	FIREMODE_ONE                                       = 1,
	FIREMODE_TWO                                       = 2,
	FIREMODE_THREE                                     = 3,
	FIREMODE_END                                       = 4
};

// Enum PoplarGame.ProjectileBehavior_OrientToImpact.EPIAlignmentType
enum class EPIAlignmentType : uint8_t
{
	PB_ALIGN_None                                      = 0,
	PB_ALIGN_Surface_World                             = 1,
	PB_ALIGN_Surface_Projectile                        = 2,
	PB_ALIGN_PitchOnly                                 = 3,
	PB_ALIGN_YawOnly                                   = 4,
	PB_ALIGN_END                                       = 5
};

// Enum PoplarGame.RemoteControlDefinition.ERemoteInputInterceptionPolicy
enum class ERemoteInputInterceptionPolicy : uint8_t
{
	RIIP_ReturnToSender                                = 0,
	RIIP_ConsumeAndIgnore                              = 1,
	RIIP_ConsumeAndProcess                             = 2,
	RIIP_END                                           = 3
};

// Enum PoplarGame.ScoreboardStatDefinition.EScoreboardStatPriority
enum class EScoreboardStatPriority : uint8_t
{
	SSP_AlwaysShow                                     = 0,
	SSP_ShowIfRelevant                                 = 1,
	SSP_Fallback                                       = 2,
	SSP_END                                            = 3
};

// Enum PoplarGame.ScoreboardStatDefinition.EScoreboardStatRelevancyFormula
enum class EScoreboardStatRelevancyFormula : uint8_t
{
	SSRF_OneValueAboveThreshold                        = 0,
	SSRF_AllValuesAboveThreshold                       = 1,
	SSRF_OneValueBelowThreshold                        = 2,
	SSRF_AllValuesBelowThreshold                       = 3,
	SSRF_END                                           = 4
};

// Enum PoplarGame.StarRatingMapDefinition.StarRatingTypes
enum class EStarRatingTypes : uint8_t
{
	SRT_NoStars                                        = 0,
	SRT_OneStar                                        = 1,
	SRT_TwoStars                                       = 2,
	SRT_ThreeStars                                     = 3,
	SRT_FourStars                                      = 4,
	SRT_END                                            = 5
};

// Enum PoplarGame.UnitTypeExpressionEvaluator.EUnitState
enum class EUnitState : uint8_t
{
	EUS_EqualTo                                        = 0,
	EUS_NotEqualTo                                     = 1,
	EUS_END                                            = 2
};

// Enum PoplarGame.UtilityAxis_HotSpot.EHotSpotUtilityType
enum class EHotSpotUtilityType : uint8_t
{
	HotSpotUtilityType_Distance                        = 0,
	HotSpotUtilityType_BasePct                         = 1,
	HotSpotUtilityType_MyNextSentryPct                 = 2,
	HotSpotUtilityType_EnemyNextSentryPct              = 3,
	HotSpotUtilityType_UnderAttack                     = 4,
	HotSpotUtilityType_CurrentHotSpot                  = 5,
	HotSpotUtilityType_OwnerCount                      = 6,
	HotSpotUtilityType_AllUnitCount                    = 7,
	HotSpotUtilityType_TargetingCount                  = 8,
	HotSpotUtilityType_DamageCapacityPct               = 9,
	HotSpotUtilityType_END                             = 10
};

// Enum PoplarGame.UtilityAxis_HotSpot.EHotSpotUtilityAllegianceFilter
enum class EHotSpotUtilityAllegianceFilter : uint8_t
{
	HotSpotUtilityAllegianceFilter_Unspecified         = 0,
	HotSpotUtilityAllegianceFilter_Allies              = 1,
	HotSpotUtilityAllegianceFilter_Opponents           = 2,
	HotSpotUtilityAllegianceFilter_Enemies             = 3,
	HotSpotUtilityAllegianceFilter_Neutral             = 4,
	HotSpotUtilityAllegianceFilter_END                 = 5
};

// Enum PoplarGame.WeaponBehavior_OverrideFiringMode.EOverrideFiringModeChannel
enum class EOverrideFiringModeChannel : uint8_t
{
	FiringModeChannel_Default                          = 0,
	FiringModeChannel_Zoomed                           = 1,
	FiringModeChannel_Charged                          = 2,
	FiringModeChannel_END                              = 3
};

// Enum PoplarGame.WindUpWeaponActionComponent.EWindUpState
enum class EWindUpState : uint8_t
{
	WindUpState_WindingUp                              = 0,
	WindUpState_Holding                                = 1,
	WindUpState_Finishing                              = 2,
	WindUpState_END                                    = 3
};


/*
# ========================================================================================= #
# Classes
# ========================================================================================= #
*/

// Class PoplarGame.Action_BotAttack
// 0x0028 (0x0318 - 0x0340)
class UAction_BotAttack : public UAction_GenericAttack
{
public:
	class APoplarPlayerStateInfo*                      PoplarPSI;                                     // 0x0318 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bStartedFiring : 1;                            // 0x0320 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bRequiresTarget : 1;                           // 0x0320 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	uint32_t                                           bScriptInfiniteAmmo : 1;                       // 0x0320 (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	EBotAttackWeapon                                   Weapon;                                        // 0x0324 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EBotZoomMethod                                     ZoomMethod;                                    // 0x0325 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EFacingStyle                                       FaceTargetStyle;                               // 0x0326 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	ETargetAllegiance                                  TargetAllegiance;                              // 0x0327 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              FaceTargetDistance;                            // 0x0328 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              ScriptDuration;                                // 0x032C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            ScriptAttackCount;                             // 0x0330 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              ScriptEndTime;                                 // 0x0334 (0x0004) [0x0000000000000000]               
	int32_t                                            ScriptAttacksRemainingCount;                   // 0x0338 (0x0004) [0x0000000000000000]               

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Action_BotAttack");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Action_BotGetPickups
// 0x01C0 (0x02C8 - 0x0488)
class UAction_BotGetPickups : public UWillowActionSequencePawn
{
public:
	class APoplarAIPawn*                               PoplarAIPawn;                                  // 0x02C8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarPickup*                               PoplarPickup;                                  // 0x02D0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FGBXNavMeshPolyRef                          NavMeshPolyRef;                                // 0x02D8 (0x0010) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     NavMeshLocation;                               // 0x02E8 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     PoplarPickupLocation;                          // 0x02F4 (0x000C) [0x0000000000002000] (CPF_Transient)
	float                                              MaxDistance;                                   // 0x0300 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class APoplarPickup*                               TemporarilyIgnoredList[0x20];                  // 0x0308 (0x0100) [0x0000000000002000] (CPF_Transient)
	float                                              TemporarilyIgnoredTimeList[0x20];              // 0x0408 (0x0080) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Action_BotGetPickups");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Action_BotMoveToHotSpot
// 0x01D8 (0x0338 - 0x0510)
class UAction_BotMoveToHotSpot : public UAction_Companion
{
public:
	class UUtilityDefinition*                          HotSpotUtilityDef;                             // 0x0338 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UUtilityAxis_HotSpot*                        HotSpotFilterAxis;                             // 0x0340 (0x0008) [0x0000000004000003] (CPF_Edit | CPF_Const | CPF_EditInline)
	EComparisonOperator                                HotSpotFilterComparisonOperator;               // 0x0348 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              HotSpotFilterComparisonValue;                  // 0x034C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bFinishOnArrival : 1;                          // 0x0350 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	class UExpressionEvaluator*                        FinishOnArrivalCondition;                      // 0x0358 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class APoplarAIPawn*                               PoplarAIPawn;                                  // 0x0360 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarHotSpot*                              PoplarHotSpot;                                 // 0x0368 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarHotSpot*                              TemporarilyIgnoredList[0x20];                  // 0x0370 (0x0100) [0x0000000000002000] (CPF_Transient)
	float                                              TemporarilyIgnoredTimeList[0x20];              // 0x0470 (0x0080) [0x0000000000002000] (CPF_Transient)
	float                                              SelectFrequency;                               // 0x04F0 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              NextSelectTime;                                // 0x04F4 (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	struct FName                                       LastSelectResultMsg;                           // 0x04F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              PathFailFrequency;                             // 0x0500 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              NextPathFailTime;                              // 0x0504 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              ActionStartTime;                               // 0x0508 (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Action_BotMoveToHotSpot");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Action_BotReload
// 0x0010 (0x02C8 - 0x02D8)
class UAction_BotReload : public UWillowActionSequencePawn
{
public:
	class APoplarPawn*                                 PoplarPawn;                                    // 0x02C8 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bScriptForceReload : 1;                        // 0x02D0 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Action_BotReload");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Action_BotTaunt
// 0x0008 (0x02C8 - 0x02D0)
class UAction_BotTaunt : public UWillowActionSequencePawn
{
public:
	class APoplarPawn*                                 PoplarPawn;                                    // 0x02C8 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Action_BotTaunt");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Action_BotTeleportToBase
// 0x0008 (0x02C8 - 0x02D0)
class UAction_BotTeleportToBase : public UWillowActionSequencePawn
{
public:
	class APoplarAIPawn*                               PoplarAIPawn;                                  // 0x02C8 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Action_BotTeleportToBase");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Action_BotUseActionSkill
// 0x00E0 (0x0318 - 0x03F8)
class UAction_BotUseActionSkill : public UAction_GenericAttack
{
public:
	class APoplarPlayerStateInfo*                      PoplarPSI;                                     // 0x0318 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bWasSkillStarted : 1;                          // 0x0320 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bWasSkillConfirmed : 1;                        // 0x0320 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bRequiresTarget : 1;                           // 0x0320 (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	uint32_t                                           bWaitForSkillToComplete : 1;                   // 0x0320 (0x0004) [0x0000000000000003] [0x00000008] (CPF_Edit | CPF_Const)
	uint32_t                                           bCanBeInterrupted : 1;                         // 0x0320 (0x0004) [0x0000000000000003] [0x00000010] (CPF_Edit | CPF_Const)
	uint32_t                                           bAutoFinishCancel : 1;                         // 0x0320 (0x0004) [0x0000000000000003] [0x00000020] (CPF_Edit | CPF_Const)
	uint32_t                                           bChooseActionSkill : 1;                        // 0x0320 (0x0004) [0x0000000000000003] [0x00000040] (CPF_Edit | CPF_Const)
	uint32_t                                           bIgnoreCooldown : 1;                           // 0x0320 (0x0004) [0x0000000000000003] [0x00000080] (CPF_Edit | CPF_Const)
	uint32_t                                           bScriptIgnoreTargetReq : 1;                    // 0x0320 (0x0004) [0x0000000000000003] [0x00000100] (CPF_Edit | CPF_Const)
	uint32_t                                           bCheckCanUseSkillOnTarget : 1;                 // 0x0320 (0x0004) [0x0000000000000003] [0x00000200] (CPF_Edit | CPF_Const)
	float                                              MinFaceTargetAngle;                            // 0x0324 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              AutoFinishDuration;                            // 0x0328 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              AutoFinishTime;                                // 0x032C (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              ChooseActionSkillPeriod;                       // 0x0330 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              ChooseActionSkillTimer;                        // 0x0334 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              MinActionSkillUtility;                         // 0x0338 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              ChosenActionSkillUtility;                      // 0x033C (0x0004) [0x0000000000002000] (CPF_Transient)
	EActionSkillSlot                                   ActionSkillSlot;                               // 0x0340 (0x0001) [0x0000000000000001] (CPF_Edit)    
	EeSkillCastStyle                                   ActionSkillCastStyle;                          // 0x0341 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              ConfirmationDelay;                             // 0x0344 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              ConfirmationTime;                              // 0x0348 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TargetDistance;                                // 0x034C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FBotUseActionSkillSecondaryActionSkillData  SecondaryActionSkillData[0x5];                 // 0x0350 (0x0078) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              SecondaryActionSkillStartTime;                 // 0x03C8 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            SecondaryActionSkillAlreadyRunBitfield;        // 0x03CC (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FName                                       ActionSkillFailReasonTable[0x5];               // 0x03D0 (0x0028) [0x0000000000000000]               

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Action_BotUseActionSkill");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Action_BotUseBuildNode
// 0x0048 (0x02C8 - 0x0310)
class UAction_BotUseBuildNode : public UWillowActionSequencePawn
{
public:
	class APoplarAIPawn*                               PoplarAIPawn;                                  // 0x02C8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarBuildNodeObject*                      PoplarBuildNode;                               // 0x02D0 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            DesiredBuildableIndex;                         // 0x02D8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class APoplarBuildNodeObject*                      TemporarilyIgnoredNodeList[0x4];               // 0x02E0 (0x0020) [0x0000000000002000] (CPF_Transient)
	float                                              TemporarilyIgnoredNodeTimeList[0x4];           // 0x0300 (0x0010) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Action_BotUseBuildNode");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Action_BotUseIO
// 0x0148 (0x02C8 - 0x0410)
class UAction_BotUseIO : public UWillowActionSequencePawn
{
public:
	EIOAllegianceFilter                                AllowedAllegiance;                             // 0x02C8 (0x0001) [0x0000000000000001] (CPF_Edit)    
	EIOAllegianceFilter                                DisallowedAllegiance;                          // 0x02C9 (0x0001) [0x0000000000000001] (CPF_Edit)    
	EUsabilityType                                     UsabilityType;                                 // 0x02CA (0x0001) [0x0000000000000001] (CPF_Edit)    
	int32_t                                            AllowedUnitTypeBitfield;                       // 0x02CC (0x0004) [0x0000000000000000]               
	int32_t                                            DisallowedUnitTypeBitfield;                    // 0x02D0 (0x0004) [0x0000000000000000]               
	class UUtilityDefinition*                          UtilityDef;                                    // 0x02D8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bAutoUse : 1;                                  // 0x02E0 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	class APoplarAIPawn*                               PoplarAIPawn;                                  // 0x02E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarInteractiveObject*                    PoplarIO;                                      // 0x02F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarInteractiveObject*                    TemporarilyIgnoredList[0x10];                  // 0x02F8 (0x0080) [0x0000000000002000] (CPF_Transient)
	float                                              TemporarilyIgnoredTimeList[0x10];              // 0x0378 (0x0040) [0x0000000000002000] (CPF_Transient)
	float                                              TemporarilyIgnoredReasonList[0x10];            // 0x03B8 (0x0040) [0x0000000000002000] (CPF_Transient)
	class UGBXPathConstraint_Range*                    RangeLimit;                                    // 0x03F8 (0x0008) [0x0000000004402008] (CPF_ExportObject | CPF_Transient | CPF_NeedCtorLink | CPF_EditInline)
	class TArray<class UGBXPathConstraint*>            Constraints;                                   // 0x0400 (0x0010) [0x0000000004402008] (CPF_ExportObject | CPF_Transient | CPF_NeedCtorLink | CPF_EditInline)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Action_BotUseIO");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Action_MinionFollowPath
// 0x0038 (0x0300 - 0x0338)
class UAction_MinionFollowPath : public UAction_MoveToFormation
{
public:
	class APoplarMind*                                 PMind;                                         // 0x0300 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarAIPawn*                               PPawn;                                         // 0x0308 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              FormationDist;                                 // 0x0310 (0x0004) [0x0000000000002000] (CPF_Transient)
	class AGearboxAIMoveNode*                          CurrNode;                                      // 0x0318 (0x0008) [0x0000000000002000] (CPF_Transient)
	class AGearboxAIMoveNode*                          PrevNode;                                      // 0x0320 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FName                                       FormationName;                                 // 0x0328 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              CatchupDistance;                               // 0x0330 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Action_MinionFollowPath");
		}

		return uClassPointer;
	};

	void CheckStateTransition();
};

// Class PoplarGame.Action_MinionFollowPath_Simple
// 0x0000 (0x0338 - 0x0338)
class UAction_MinionFollowPath_Simple : public UAction_MinionFollowPath
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Action_MinionFollowPath_Simple");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Action_MinionMoveTowardTarget
// 0x0000 (0x02C8 - 0x02C8)
class UAction_MinionMoveTowardTarget : public UWillowActionSequencePawn
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Action_MinionMoveTowardTarget");
		}

		return uClassPointer;
	};

	void eventActivateEvent(const struct FName& EventName);
	void eventStart();
	struct FName eventCanRun();
};

// Class PoplarGame.Action_PoplarPatrol
// 0x0000 (0x0320 - 0x0320)
class UAction_PoplarPatrol : public UAction_WillowPatrol
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Action_PoplarPatrol");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Action_PoplarScripted
// 0x0000 (0x0370 - 0x0370)
class UAction_PoplarScripted : public UAction_WillowScripted
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Action_PoplarScripted");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Action_UseActionSkill
// 0x0018 (0x0340 - 0x0358)
class UAction_UseActionSkill : public UAction_AnimAttack
{
public:
	class APoplarMind*                                 MyPoplarMind;                                  // 0x0340 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarAIPawn*                               MyPoplarPawn;                                  // 0x0348 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarSkillDefinition*                      SkillDef;                                      // 0x0350 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Action_UseActionSkill");
		}

		return uClassPointer;
	};

	bool IsActionSkillRunning();
	bool PassesActivationConstraints();
	struct FName eventCanRun();
	void eventInit();
};

// Class PoplarGame.Action_UseHelixMenu
// 0x0018 (0x02C8 - 0x02E0)
class UAction_UseHelixMenu : public UWillowActionSequencePawn
{
public:
	class APoplarPlayerReplicationInfo*                PoplarPRI;                                     // 0x02C8 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              TimerDurationMin;                              // 0x02D0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              TimerDurationMax;                              // 0x02D4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              TimerValue;                                    // 0x02D8 (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Action_UseHelixMenu");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.ActorFactoryPoplarBuildNodeSpawner
// 0x0000 (0x00C0 - 0x00C0)
class UActorFactoryPoplarBuildNodeSpawner : public UActorFactory
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.ActorFactoryPoplarBuildNodeSpawner");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.ActorFactoryPoplarCheckpoint
// 0x0000 (0x00C8 - 0x00C8)
class UActorFactoryPoplarCheckpoint : public UActorFactoryInteractiveObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.ActorFactoryPoplarCheckpoint");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.ActorFactoryPoplarDenSpawner
// 0x0000 (0x00C0 - 0x00C0)
class UActorFactoryPoplarDenSpawner : public UActorFactoryDenSpawner
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.ActorFactoryPoplarDenSpawner");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.ActorFactoryPoplarInteractiveObject
// 0x0000 (0x00C8 - 0x00C8)
class UActorFactoryPoplarInteractiveObject : public UActorFactoryInteractiveObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.ActorFactoryPoplarInteractiveObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.ActorFactoryPoplarMinionSpawner
// 0x0000 (0x00C0 - 0x00C0)
class UActorFactoryPoplarMinionSpawner : public UActorFactoryPointSpawner
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.ActorFactoryPoplarMinionSpawner");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.ActorFactoryPoplarMoveNode
// 0x0000 (0x00C0 - 0x00C0)
class UActorFactoryPoplarMoveNode : public UActorFactory
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.ActorFactoryPoplarMoveNode");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.ActorFactoryPoplarPlayerStart
// 0x0000 (0x00C0 - 0x00C0)
class UActorFactoryPoplarPlayerStart : public UActorFactory
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.ActorFactoryPoplarPlayerStart");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.ActorFactoryPoplarPointSpawner
// 0x0000 (0x00C0 - 0x00C0)
class UActorFactoryPoplarPointSpawner : public UActorFactoryPointSpawner
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.ActorFactoryPoplarPointSpawner");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.ActorFactoryPoplarTeamFilteredMoveNode
// 0x0000 (0x00C0 - 0x00C0)
class UActorFactoryPoplarTeamFilteredMoveNode : public UActorFactory
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.ActorFactoryPoplarTeamFilteredMoveNode");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.ActorFactoryPoplarWaypoint
// 0x0000 (0x00C0 - 0x00C0)
class UActorFactoryPoplarWaypoint : public UActorFactory
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.ActorFactoryPoplarWaypoint");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.ActorFactoryTeamAwareDecal
// 0x0000 (0x00C8 - 0x00C8)
class UActorFactoryTeamAwareDecal : public UActorFactoryDecal
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.ActorFactoryTeamAwareDecal");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.ActorFactoryTeamAwarePointLight
// 0x0000 (0x00C0 - 0x00C0)
class UActorFactoryTeamAwarePointLight : public UActorFactoryLight
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.ActorFactoryTeamAwarePointLight");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.ActorFactoryTeamAwareStaticMesh
// 0x0000 (0x00D8 - 0x00D8)
class UActorFactoryTeamAwareStaticMesh : public UActorFactoryStaticMesh
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.ActorFactoryTeamAwareStaticMesh");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.AimStateExpressionEvaluator
// 0x0008 (0x0058 - 0x0060)
class UAimStateExpressionEvaluator : public UExpressionEvaluator
{
public:
	uint32_t                                           bIronSight : 1;                                // 0x0058 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.AimStateExpressionEvaluator");
		}

		return uClassPointer;
	};

	bool Evaluate(class UObject* ContextSource);
};

// Class PoplarGame.AmmoBarOverrideTypeDefinition
// 0x0020 (0x0058 - 0x0078)
class UAmmoBarOverrideTypeDefinition : public UGBXDefinition
{
public:
	class USwfMovie*                                   BarOverrideMovie;                              // 0x0058 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class FString                                      BarLabel;                                      // 0x0060 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	int32_t                                            MaxBarFrame;                                   // 0x0070 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            MinBarFrame;                                   // 0x0074 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.AmmoBarOverrideTypeDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.AssistModifiersDefinition
// 0x0058 (0x0058 - 0x00B0)
class UAssistModifiersDefinition : public UGBXDefinition
{
public:
	struct FPointer                                    VfTable_IIBehaviorProvider;                    // 0x0058 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class TArray<struct FAssistCombo>                  AssistCombos;                                  // 0x0060 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<struct FAssistModifier>               AssistModifiers;                               // 0x0070 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	struct FAssistStreakTier                           AssistStreakTiers[0x5];                        // 0x0080 (0x0014) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<class UPoplarUnitTypeDefinition*>     AssistStreakAndMultiAssistUnitExclusions;      // 0x0098 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class UBehaviorProviderDefinition*                 BehaviorProviderDefinition;                    // 0x00A8 (0x0008) [0x0000000000000002] (CPF_Const)   

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.AssistModifiersDefinition");
		}

		return uClassPointer;
	};

	void OnAssistComboAchieved(int32_t ComboIndex, class AController* Assister, class UPoplarTeamDefinition* AssisterTeam, class AController* Victim, class UPoplarTeamDefinition* VictimTeam, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnAssistModifierAchieved(EAssistModifier EventOutput, class AController* Assister, class UPoplarTeamDefinition* AssisterTeam, class AController* Victim, class UPoplarTeamDefinition* VictimTeam, struct FBehaviorConsumerHandle& ConsumerHandle);
};

// Class PoplarGame.AttackBehaviorProviderDefinition
// 0x0000 (0x00E0 - 0x00E0)
class UAttackBehaviorProviderDefinition : public UBehaviorProviderDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.AttackBehaviorProviderDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.AttackSeqNode
// 0x0020 (0x0058 - 0x0078)
class UAttackSeqNode : public UObject
{
public:
	EAttackButton                                      Button;                                        // 0x0058 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EAttackButtonAction                                ButtonAction;                                  // 0x0059 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttackMovementActions                      MovementActions;                               // 0x005C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UExpressionEvaluator*                        Condition;                                     // 0x0060 (0x0008) [0x0000000004000003] (CPF_Edit | CPF_Const | CPF_EditInline)
	class UExpressionEvaluator*                        StopCondition;                                 // 0x0068 (0x0008) [0x0000000004000003] (CPF_Edit | CPF_Const | CPF_EditInline)
	float                                              MinHoldTime;                                   // 0x0070 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              MaxHoldTime;                                   // 0x0074 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.AttackSeqNode");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.AttackSeqActionBase
// 0x0070 (0x0078 - 0x00E8)
class UAttackSeqActionBase : public UAttackSeqNode
{
public:
	EAttackTransitionState                             StartingTransitionState;                       // 0x0078 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bUsesResource : 1;                             // 0x007C (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bAutoConsumeResource : 1;                      // 0x007C (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	uint32_t                                           bPrimaryWeapon : 1;                            // 0x007C (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	uint32_t                                           bDisableSprinting : 1;                         // 0x007C (0x0004) [0x0000000000000003] [0x00000008] (CPF_Edit | CPF_Const)
	uint32_t                                           bEnableBlocking : 1;                           // 0x007C (0x0004) [0x0000000000000003] [0x00000010] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                ResourceCost;                                  // 0x0080 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              MaxBlockingAngle;                              // 0x00A0 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                DirectPhysicalBlockingProtectionPercentage;    // 0x00A8 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                RadialPhysicalBlockingProtectionPercentage;    // 0x00C8 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.AttackSeqActionBase");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.AttackSeqAction
// 0x0040 (0x00E8 - 0x0128)
class UAttackSeqAction : public UAttackSeqActionBase
{
public:
	class UWillowAnimDefinition*                       WindUpSpecialMove;                             // 0x00E8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UWillowAnimDefinition*                       SpecialMove;                                   // 0x00F0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UWillowAnimDefinition*                       RecoverySpecialMove;                           // 0x00F8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                PlayRateScale;                                 // 0x0100 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EAttackTransitionState                             RecoveryTransitionState;                       // 0x0120 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.AttackSeqAction");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.AttackSeqRandom
// 0x0010 (0x0078 - 0x0088)
class UAttackSeqRandom : public UAttackSeqNode
{
public:
	class TArray<float>                                Weights;                                       // 0x0078 (0x0010) [0x0000000000400041] (CPF_Edit | CPF_EditConstArray | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.AttackSeqRandom");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.AttackSequenceDefinition
// 0x0038 (0x0058 - 0x0090)
class UAttackSequenceDefinition : public UGBXDefinition
{
public:
	struct FPointer                                    VfTable_IIBehaviorProvider;                    // 0x0058 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UBehaviorProviderDefinition*                 BehaviorProviderDefinition;                    // 0x0060 (0x0008) [0x0000000000020003] (CPF_Edit | CPF_Const | CPF_EditConst)
	struct FAttackStateData                            IdleNode;                                      // 0x0068 (0x0004) [0x0000000000220002] (CPF_Const | CPF_EditConst)
	class TArray<struct FAttackSequenceActionData>     ActionNodes;                                   // 0x0070 (0x0010) [0x0000000000620002] (CPF_Const | CPF_EditConst | CPF_NeedCtorLink)
	class TArray<struct FAttackActionOutputLinkData>   ConsolidatedOutputLinkData;                    // 0x0080 (0x0010) [0x0000000000620002] (CPF_Const | CPF_EditConst | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.AttackSequenceDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.AttackSequenceState
// 0x0048 (0x0058 - 0x00A0)
class UAttackSequenceState : public UObject
{
public:
	class APoplarPawn*                                 OwnerPawn;                                     // 0x0058 (0x0008) [0x0000000000000000]               
	class UAttackSequenceDefinition*                   AttackDefinition;                              // 0x0060 (0x0008) [0x0000000000000000]               
	int32_t                                            CurrentNodeIndex;                              // 0x0068 (0x0004) [0x0000000000000000]               
	struct FName                                       CurrentSpecialMoveCallbackName;                // 0x006C (0x0008) [0x0000000000000000]               
	float                                              ButtonPressTime[0x3];                          // 0x0074 (0x000C) [0x0000000000000000]               
	float                                              JumpStartTime;                                 // 0x0080 (0x0004) [0x0000000000000000]               
	float                                              NodeStartTime;                                 // 0x0084 (0x0004) [0x0000000000000000]               
	float                                              TimeTillNextHoldCheck;                         // 0x0088 (0x0004) [0x0000000000000000]               
	EAttackTransitionState                             CurrentTransitionState;                        // 0x008C (0x0001) [0x0000000000000000]               
	uint32_t                                           bTransitionFailed : 1;                         // 0x0090 (0x0004) [0x0000000000000000] [0x00000001] 
	uint32_t                                           bStartingSpecialMove : 1;                      // 0x0090 (0x0004) [0x0000000000000000] [0x00000002] 
	uint32_t                                           bBlocking : 1;                                 // 0x0090 (0x0004) [0x0000000000000000] [0x00000004] 
	int32_t                                            PendingTransitionNodeIndex;                    // 0x0094 (0x0004) [0x0000000000000000]               
	class UWillowAnimDefinition*                       CurrentSpecialMove;                            // 0x0098 (0x0008) [0x0000000000000000]               

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.AttackSequenceState");
		}

		return uClassPointer;
	};

	void ServerSpecialMoveCallback(bool bInterrupted);
	void SpecialMoveCallback(bool bInterrupted);
};

// Class PoplarGame.AugAttributeValueResolver
// 0x0008 (0x0058 - 0x0060)
class UAugAttributeValueResolver : public UAttributeValueResolver
{
public:
	class UPoplarAugDefinition*                        Augmentation;                                  // 0x0058 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.AugAttributeValueResolver");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.AugIconGFxObject
// 0x0008 (0x00D8 - 0x00E0)
class UAugIconGFxObject : public UGFxObject
{
public:
	class UPoplarAugDefinition*                        CachedAugDefinition;                           // 0x00D8 (0x0008) [0x0000000000000000]               

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.AugIconGFxObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Behavior_ActivateCheckpoint
// 0x0000 (0x0070 - 0x0070)
class UBehavior_ActivateCheckpoint : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_ActivateCheckpoint");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Behavior_ActivateCommandRing
// 0x0008 (0x0070 - 0x0078)
class UBehavior_ActivateCommandRing : public UBehaviorBase
{
public:
	class UCommandRingDefinition*                      CommandRingDef;                                // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_ActivateCommandRing");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_ActivateInstancedPoplarMissionBehaviorSequence
// 0x0018 (0x0070 - 0x0088)
class UBehavior_ActivateInstancedPoplarMissionBehaviorSequence : public UBehaviorBase
{
public:
	class UPoplarMissionDefinition*                    Mission;                                       // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarMissionObjectiveDefinition*           MissionObjective;                              // 0x0078 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       SequenceName;                                  // 0x0080 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_ActivateInstancedPoplarMissionBehaviorSequence");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_AddDeathRecapBlocker
// 0x0000 (0x0070 - 0x0070)
class UBehavior_AddDeathRecapBlocker : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_AddDeathRecapBlocker");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_AddManagedActor
// 0x0010 (0x0070 - 0x0080)
class UBehavior_AddManagedActor : public UBehaviorBase
{
public:
	class UPoplarManagedActorDefinition*               ActorType;                                     // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class AActor*                                      ManagedActor;                                  // 0x0078 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_AddManagedActor");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_ApplyBuff
// 0x0128 (0x0070 - 0x0198)
class UBehavior_ApplyBuff : public UBehaviorBase
{
public:
	class UPoplarBuffDefinition*                       TheBuffDefinition;                             // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class AActor*                                      BuffInstigator;                                // 0x0078 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                Duration;                                      // 0x0080 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                DamageFormula;                                 // 0x00A0 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                LifestealFormula;                              // 0x00C0 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                ShieldstealFormula;                            // 0x00E0 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarUnitTypeDefinition*                   UnitTypeFilter;                                // 0x0100 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EOpinion                                           AllegianceFilter;                              // 0x0108 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UExpressionEvaluator*                        Condition;                                     // 0x0110 (0x0008) [0x0000000004000003] (CPF_Edit | CPF_Const | CPF_EditInline)
	struct FAttributeInitializationData                MaxOvershieldPool;                             // 0x0118 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                StartingShieldPool;                            // 0x0138 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                ShieldRegenerationDelay;                       // 0x0158 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                ShieldRegenerationRate;                        // 0x0178 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_ApplyBuff");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_ApplyBuffToRadius
// 0x0030 (0x0198 - 0x01C8)
class UBehavior_ApplyBuffToRadius : public UBehavior_ApplyBuff
{
public:
	struct FAttributeInitializationData                RadiusFormula;                                 // 0x0198 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bCenterRadiusAroundContext : 1;                // 0x01B8 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	struct FVector                                     RadiusCenterOffset;                            // 0x01BC (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_ApplyBuffToRadius");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_ApplyStealthBuffToRadius
// 0x0008 (0x01C8 - 0x01D0)
class UBehavior_ApplyStealthBuffToRadius : public UBehavior_ApplyBuffToRadius
{
public:
	uint32_t                                           ForceStealth : 1;                              // 0x01C8 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_ApplyStealthBuffToRadius");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_ApplyStealthBuff
// 0x0008 (0x0198 - 0x01A0)
class UBehavior_ApplyStealthBuff : public UBehavior_ApplyBuff
{
public:
	uint32_t                                           ForceStealth : 1;                              // 0x0198 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_ApplyStealthBuff");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_AttachWearable
// 0x0008 (0x0070 - 0x0078)
class UBehavior_AttachWearable : public UBehaviorBase
{
public:
	class UPoplarPlayerWearableDefinition*             WearableDefinition;                            // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_AttachWearable");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_AwardCredits
// 0x0060 (0x0070 - 0x00D0)
class UBehavior_AwardCredits : public UBehaviorBase
{
public:
	struct FAttributeInitializationData                CreditsToAward;                                // 0x0070 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                CreditsToTeamMates;                            // 0x0090 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarRewardMessageDefinition*              ReasonForIncome;                               // 0x00B0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	ECreditsType                                       CreditsRewardType;                             // 0x00B8 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bDisplayCredits : 1;                           // 0x00BC (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	struct FVector                                     CreditsDisplayWorldLocation;                   // 0x00C0 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_AwardCredits");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_AwardExperience
// 0x0028 (0x0070 - 0x0098)
class UBehavior_AwardExperience : public UBehaviorBase
{
public:
	struct FAttributeInitializationData                ExperienceToAward;                             // 0x0070 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarRewardMessageDefinition*              ReasonForIncome;                               // 0x0090 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_AwardExperience");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_AwardScore
// 0x0028 (0x0070 - 0x0098)
class UBehavior_AwardScore : public UBehaviorBase
{
public:
	struct FAttributeInitializationData                Amount;                                        // 0x0070 (0x0020) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bAwardTeamBonusScore : 1;                      // 0x0090 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	uint32_t                                           bAwardPlayerScore : 1;                         // 0x0090 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_AwardScore");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_BreakTie
// 0x0008 (0x0070 - 0x0078)
class UBehavior_BreakTie : public UBehaviorBase
{
public:
	uint32_t                                           bEvaulationOnly : 1;                           // 0x0070 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_BreakTie");
		}

		return uClassPointer;
	};

	void eventPublishBehaviorOutput(class UObject* WinningTeam, class UObject* LosingTeam, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_BuildNodeStructureQuery
// 0x0000 (0x0070 - 0x0070)
class UBehavior_BuildNodeStructureQuery : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_BuildNodeStructureQuery");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_CameraShake
// 0x0010 (0x0070 - 0x0080)
class UBehavior_CameraShake : public UBehaviorBase
{
public:
	uint32_t                                           bWorldShake : 1;                               // 0x0070 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	uint32_t                                           bDoControllerVibration : 1;                    // 0x0070 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	float                                              ShakeRadius;                                   // 0x0074 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UCameraShake*                                ShakeParameters;                               // 0x0078 (0x0008) [0x0000000004000001] (CPF_Edit | CPF_EditInline)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_CameraShake");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_CancelSkillConfirmation
// 0x0000 (0x0070 - 0x0070)
class UBehavior_CancelSkillConfirmation : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_CancelSkillConfirmation");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_ChangeCanAITarget
// 0x0008 (0x0070 - 0x0078)
class UBehavior_ChangeCanAITarget : public UBehaviorBase
{
public:
	EChangeStatus                                      ChangeStatus;                                  // 0x0070 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_ChangeCanAITarget");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_ChangePawnWeaponsVisibility
// 0x0008 (0x0070 - 0x0078)
class UBehavior_ChangePawnWeaponsVisibility : public UBehaviorBase
{
public:
	EChangeStatus                                      Status;                                        // 0x0070 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bApplyToPrimaryHand : 1;                       // 0x0074 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bApplyToOffHand : 1;                           // 0x0074 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_ChangePawnWeaponsVisibility");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_ChangeRespawnTickets
// 0x0010 (0x0070 - 0x0080)
class UBehavior_ChangeRespawnTickets : public UBehaviorBase
{
public:
	class UPoplarTeamDefinition*                       TeamDefinition;                                // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            NewRespawnTicketValue;                         // 0x0078 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_ChangeRespawnTickets");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_ChangeWeapon
// 0x0010 (0x0070 - 0x0080)
class UBehavior_ChangeWeapon : public UBehaviorBase
{
public:
	EChangeWeaponAction                                Action;                                        // 0x0070 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bOffHand : 1;                                  // 0x0074 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	class UPoplarWeaponTypeDefinition*                 WeaponToSwitchTo;                              // 0x0078 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_ChangeWeapon");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_CheckBuffApplied
// 0x0018 (0x0070 - 0x0088)
class UBehavior_CheckBuffApplied : public UBehaviorBase
{
public:
	class UPoplarBuffDefinition*                       TheBuffDefinition;                             // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<EBuffDefinitionTag>                   Tags;                                          // 0x0078 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_CheckBuffApplied");
		}

		return uClassPointer;
	};

	void eventPublishBehaviorOutput(int32_t NumStacksApplied, struct FBehaviorKernelInfo& KernelInfo);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_CheckBuildNodeFeedbackState
// 0x0008 (0x0070 - 0x0078)
class UBehavior_CheckBuildNodeFeedbackState : public UBehaviorBase
{
public:
	class UObject*                                     ProspectiveBuildNodeUser;                      // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_CheckBuildNodeFeedbackState");
		}

		return uClassPointer;
	};

	void PublishBehaviorOutput(int32_t BuildableType, int32_t BuildableState, struct FBehaviorKernelInfo& KernelInfo);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_CheckDamageTag
// 0x0008 (0x0070 - 0x0078)
class UBehavior_CheckDamageTag : public UBehaviorBase
{
public:
	int32_t                                            TagsVariable;                                  // 0x0070 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FDamageTags                                 RequiredTags;                                  // 0x0074 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_CheckDamageTag");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_CheckDeathRecapActive
// 0x0000 (0x0070 - 0x0070)
class UBehavior_CheckDeathRecapActive : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_CheckDeathRecapActive");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_CheckForInstaCast
// 0x0000 (0x0070 - 0x0070)
class UBehavior_CheckForInstaCast : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_CheckForInstaCast");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_CheckForQuickCast
// 0x0000 (0x0070 - 0x0070)
class UBehavior_CheckForQuickCast : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_CheckForQuickCast");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_CheckGameInfoDefinition
// 0x0008 (0x0070 - 0x0078)
class UBehavior_CheckGameInfoDefinition : public UBehaviorBase
{
public:
	class UPoplarGameTypeIDDefinition*                 GameTypeId;                                    // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_CheckGameInfoDefinition");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_CheckIfOnCapturePad
// 0x0000 (0x0070 - 0x0070)
class UBehavior_CheckIfOnCapturePad : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_CheckIfOnCapturePad");
		}

		return uClassPointer;
	};

	void PublishBehaviorOutput(bool bIsOnCapturePad, class UPoplarTeamDefinition* CapturePadTeam, struct FBehaviorKernelInfo& KernelInfo);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_CheckPickupForTags
// 0x0018 (0x0070 - 0x0088)
class UBehavior_CheckPickupForTags : public UBehaviorBase
{
public:
	class UObject*                                     PoplarPickupActor;                             // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<class UPoplarPickupTagDefinition*>    RequiredTags;                                  // 0x0078 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_CheckPickupForTags");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_CheckUnitFaction
// 0x0008 (0x0070 - 0x0078)
class UBehavior_CheckUnitFaction : public UBehaviorBase
{
public:
	class UPoplarFactionDefinition*                    Faction;                                       // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_CheckUnitFaction");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_CloseGFxMovie
// 0x0020 (0x0070 - 0x0090)
class UBehavior_CloseGFxMovie : public UBehaviorBase
{
public:
	class USwfMovie*                                   Movie;                                         // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UObject*                                     PlayerController;                              // 0x0078 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class TArray<class UObject*>                       AllPlayers;                                    // 0x0080 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_CloseGFxMovie");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_CloseMiniMapSelector
// 0x0000 (0x0070 - 0x0070)
class UBehavior_CloseMiniMapSelector : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_CloseMiniMapSelector");
		}

		return uClassPointer;
	};

	void eventPublishBehaviorOutput(class AActor* SelectedActor, const struct FVector& SelectedActorLocation, struct FBehaviorKernelInfo& KernelInfo);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_CompareCurrentHUDState
// 0x0008 (0x0088 - 0x0090)
class UBehavior_CompareCurrentHUDState : public UBehavior_UIBase
{
public:
	struct FName                                       HUDStateToCompare;                             // 0x0088 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_CompareCurrentHUDState");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_ConditionalDamageModifier
// 0x0048 (0x0070 - 0x00B8)
class UBehavior_ConditionalDamageModifier : public UBehaviorBase
{
public:
	uint32_t                                           bRemoveConditionalDamageModifier : 1;          // 0x0070 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	uint32_t                                           bReferencedModifierIsNotUnique : 1;            // 0x0070 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	uint32_t                                           bCriticalHit : 1;                              // 0x0070 (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	EConditionalDamageModifierContext                  TriggeredBy;                                   // 0x0074 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EConditionalDamageModifierContext                  EvaluatedOn;                                   // 0x0075 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EDamageTagTest                                     DamageTagsTest;                                // 0x0076 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UExpressionEvaluator*                        Condition;                                     // 0x0078 (0x0008) [0x0000000004000003] (CPF_Edit | CPF_Const | CPF_EditInline)
	struct FDamageTags                                 DamageTags;                                    // 0x0080 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                DamageModifier;                                // 0x0088 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class FString                                      ReferenceName;                                 // 0x00A8 (0x0010) [0x0000000000500003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_ConditionalDamageModifier");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_ConfirmPendingSkill
// 0x0000 (0x0070 - 0x0070)
class UBehavior_ConfirmPendingSkill : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_ConfirmPendingSkill");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_CopyAllegiance
// 0x0008 (0x0070 - 0x0078)
class UBehavior_CopyAllegiance : public UBehaviorBase
{
public:
	class UObject*                                     CopyAllegianceFrom;                            // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_CopyAllegiance");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_CopyTeamAffiliation
// 0x0008 (0x0070 - 0x0078)
class UBehavior_CopyTeamAffiliation : public UBehaviorBase
{
public:
	class UObject*                                     CopyTeamFrom;                                  // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_CopyTeamAffiliation");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_CountMatchingObjects
// 0x0010 (0x0070 - 0x0080)
class UBehavior_CountMatchingObjects : public UBehaviorBase
{
public:
	float                                              Timeout;                                       // 0x0070 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UMatchingObjectsCounter*                     MatchCounter;                                  // 0x0078 (0x0008) [0x0000000000202000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_CountMatchingObjects");
		}

		return uClassPointer;
	};

	void PublishBehaviorOutput(int32_t MatchCount, class UMatchingObjectsCounter* MyCounter, struct FBehaviorKernelInfo& KernelInfo);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_CreateDamageTagsVar
// 0x0008 (0x0070 - 0x0078)
class UBehavior_CreateDamageTagsVar : public UBehaviorBase
{
public:
	struct FDamageTags                                 Tags;                                          // 0x0070 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_CreateDamageTagsVar");
		}

		return uClassPointer;
	};

	void eventPublishBehaviorOutput(int32_t TagsVariable, struct FBehaviorKernelInfo& KernelInfo);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_CreatePoplarAlertPoint
// 0x0040 (0x0070 - 0x00B0)
class UBehavior_CreatePoplarAlertPoint : public UBehaviorBase
{
public:
	class UPoplarAlertPointDefinition*                 AlertPointDefinition;                          // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bIsUnitAlert : 1;                              // 0x0078 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bNeutralAlert : 1;                             // 0x0078 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	class AActor*                                      UnitTarget;                                    // 0x0080 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FVector                                     Location;                                      // 0x0088 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       InstigatorTeam;                                // 0x0098 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class APlayerReplicationInfo*                      InstigatingPRI;                                // 0x00A0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FName                                       InstanceDataName;                              // 0x00A8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_CreatePoplarAlertPoint");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_DeactivateCommandRing
// 0x0000 (0x0070 - 0x0070)
class UBehavior_DeactivateCommandRing : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_DeactivateCommandRing");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_DestroyCurrentBuildNodeStructure
// 0x0000 (0x0070 - 0x0070)
class UBehavior_DestroyCurrentBuildNodeStructure : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_DestroyCurrentBuildNodeStructure");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_DisplayPoplarTrainingMessage
// 0x0038 (0x00E8 - 0x0120)
class UBehavior_DisplayPoplarTrainingMessage : public USequenceAction
{
public:
	class UPoplarTrainingMessageDefinition*            TrainingMessageDefinition;                     // 0x00E8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	EPoplarBroadcastFilter                             BroadcastFilter;                               // 0x00F0 (0x0001) [0x0000000000000001] (CPF_Edit)    
	class UPoplarTeamDefinition*                       InstigatingTeam;                               // 0x00F8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarTeamDefinition*                       OpposingTeam;                                  // 0x0100 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AActor*                                      InstigatingPlayer;                             // 0x0108 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AActor*                                      OpposingPlayer;                                // 0x0110 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarLaneDefinition*                       LaneDefinition;                                // 0x0118 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_DisplayPoplarTrainingMessage");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_GetAugLevel
// 0x0008 (0x0070 - 0x0078)
class UBehavior_GetAugLevel : public UBehaviorBase
{
public:
	class UPoplarAugDefinition*                        AugmentationToTest;                            // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_GetAugLevel");
		}

		return uClassPointer;
	};

	void PublishBehaviorOutput(int32_t Value, struct FBehaviorKernelInfo& KernelInfo);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_GetCommandRingTarget
// 0x0008 (0x0070 - 0x0078)
class UBehavior_GetCommandRingTarget : public UBehaviorBase
{
public:
	uint32_t                                           bRelativeLocation : 1;                         // 0x0070 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_GetCommandRingTarget");
		}

		return uClassPointer;
	};

	void PublishBehaviorOutput(class AActor* TargetActor, const struct FVector& TargetLocation, class AActor* TargetLocationBase, struct FBehaviorKernelInfo& KernelInfo);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_GetCurrentGameModeProperties
// 0x0000 (0x0070 - 0x0070)
class UBehavior_GetCurrentGameModeProperties : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_GetCurrentGameModeProperties");
		}

		return uClassPointer;
	};

	void eventPublishBehaviorOutput(bool bPvE, bool bIsSinglePlayer, struct FBehaviorKernelInfo& KernelInfo);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_GetManagedActorCount
// 0x0008 (0x0070 - 0x0078)
class UBehavior_GetManagedActorCount : public UBehaviorBase
{
public:
	class UPoplarManagedActorDefinition*               ActorType;                                     // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_GetManagedActorCount");
		}

		return uClassPointer;
	};

	void PublishBehaviorOutput(int32_t Count, struct FBehaviorKernelInfo& KernelInfo);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_GetMastersOfUnit
// 0x0000 (0x0070 - 0x0070)
class UBehavior_GetMastersOfUnit : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_GetMastersOfUnit");
		}

		return uClassPointer;
	};

	void PublishBehaviorOutput(const class TArray<class UObject*>& Masters, class UObject* MostRelevantMaster, struct FBehaviorKernelInfo& KernelInfo);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_GetMatchingObjectCount
// 0x0008 (0x0070 - 0x0078)
class UBehavior_GetMatchingObjectCount : public UBehaviorBase
{
public:
	class UMatchingObjectsCounter*                     MatchCounter;                                  // 0x0070 (0x0008) [0x0000000000200001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_GetMatchingObjectCount");
		}

		return uClassPointer;
	};

	void PublishBehaviorOutput(int32_t MatchCount, struct FBehaviorKernelInfo& KernelInfo);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_GetPlayerLastDeathInfo
// 0x0000 (0x0070 - 0x0070)
class UBehavior_GetPlayerLastDeathInfo : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_GetPlayerLastDeathInfo");
		}

		return uClassPointer;
	};

	void PublishBehaviorOutput(class AActor* Attacker, bool bDeathWasSuicide, bool bKilledByTeammate, struct FBehaviorKernelInfo& KernelInfo);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_GetPlayerMetadata
// 0x0030 (0x0070 - 0x00A0)
class UBehavior_GetPlayerMetadata : public UBehaviorBase
{
public:
	class UPoplarMetaItemCharacterDefinition*          Character;                                     // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bIncludeFreeRotation : 1;                      // 0x0078 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	class TArray<class UPoplarMetaItemDefinition*>     ItemsToCheck;                                  // 0x0080 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class TArray<class FString>                        MetaIDsToCheck;                                // 0x0090 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_GetPlayerMetadata");
		}

		return uClassPointer;
	};

	void eventPublishBehaviorOutput(int32_t PlayerMetaRank, int32_t PlayerMetaRankMax, int32_t CharacterMetaRank, int32_t CharacterMetaRankMax, bool bEntitledToAllItems, bool bEntitledToAllMetaIDs, struct FBehaviorKernelInfo& KernelInfo);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_GetPlayersOnCapturePad
// 0x0008 (0x0070 - 0x0078)
class UBehavior_GetPlayersOnCapturePad : public UBehaviorBase
{
public:
	class UPoplarTeamDefinition*                       TeamFilter;                                    // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_GetPlayersOnCapturePad");
		}

		return uClassPointer;
	};

	void PublishBehaviorOutput(const class TArray<class UObject*>& PlayersOnPad, struct FBehaviorKernelInfo& KernelInfo);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_GetPlayerWithBestStat
// 0x0020 (0x0070 - 0x0090)
class UBehavior_GetPlayerWithBestStat : public UBehaviorBase
{
public:
	class UStatDefinition*                             StatDef;                                       // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EStatCategoryTypes                                 StatCategory;                                  // 0x0078 (0x0001) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bHighestStat : 1;                              // 0x007C (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	class TArray<class UObject*>                       InPlayers;                                     // 0x0080 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_GetPlayerWithBestStat");
		}

		return uClassPointer;
	};

	void PublishBehaviorOutput(const class TArray<class UObject*>& BestPlayers, struct FBehaviorKernelInfo& KernelInfo);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_GetProfileStatValue
// 0x0008 (0x0070 - 0x0078)
class UBehavior_GetProfileStatValue : public UBehaviorBase
{
public:
	class UStatDefinition*                             StatToUse;                                     // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_GetProfileStatValue");
		}

		return uClassPointer;
	};

	void PublishBehaviorOutput(int32_t Result, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_GetStatValue
// 0x0010 (0x0070 - 0x0080)
class UBehavior_GetStatValue : public UBehaviorBase
{
public:
	class UStatDefinition*                             StatDef;                                       // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EStatCategoryTypes                                 StatCategory;                                  // 0x0078 (0x0001) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_GetStatValue");
		}

		return uClassPointer;
	};

	void PublishBehaviorOutput(int32_t Result, struct FBehaviorKernelInfo& KernelInfo);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_GetTouchingActors
// 0x0020 (0x0070 - 0x0090)
class UBehavior_GetTouchingActors : public UBehaviorBase
{
public:
	class UPoplarUnitTypeDefinition*                   UnitTypeFilter;                                // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bUseAllegianceFilter : 1;                      // 0x0078 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	EOpinion                                           AllegianceFilter;                              // 0x007C (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UObject*                                     AllegianceFilterTarget;                        // 0x0080 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UExpressionEvaluator*                        Condition;                                     // 0x0088 (0x0008) [0x0000000004000003] (CPF_Edit | CPF_Const | CPF_EditInline)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_GetTouchingActors");
		}

		return uClassPointer;
	};

	void eventPublishBehaviorOutput(int32_t NumTouchingActors, const class TArray<class UObject*>& TouchingActors, struct FBehaviorKernelInfo& KernelInfo);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_GetVisibilityForCurrentState
// 0x0000 (0x0088 - 0x0088)
class UBehavior_GetVisibilityForCurrentState : public UBehavior_UIBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_GetVisibilityForCurrentState");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_GrantEntitlement
// 0x0028 (0x0070 - 0x0098)
class UBehavior_GrantEntitlement : public UBehaviorBase
{
public:
	class TArray<class UPoplarMetaItemDefinition*>     MetaItemsToGrantEntitlementsFor;               // 0x0070 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class TArray<class UPoplarPerkFunction*>           GearToGrantEntitlementsFor;                    // 0x0080 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	uint32_t                                           bAwardInstantly : 1;                           // 0x0090 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_GrantEntitlement");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Behavior_HasOvershield
// 0x0000 (0x0070 - 0x0070)
class UBehavior_HasOvershield : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_HasOvershield");
		}

		return uClassPointer;
	};

	void eventPublishBehaviorOutput(float OvershieldStrength, struct FBehaviorKernelInfo& KernelInfo);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_HasUnitTypeTag
// 0x0008 (0x0070 - 0x0078)
class UBehavior_HasUnitTypeTag : public UBehaviorBase
{
public:
	class UPoplarUnitTypeTag*                          UnitTypeTag;                                   // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_HasUnitTypeTag");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_HideCastBar
// 0x0010 (0x0070 - 0x0080)
class UBehavior_HideCastBar : public UBehaviorBase
{
public:
	class UObject*                                     HUDOwnerPawn;                                  // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bTeleportCastBar : 1;                          // 0x0078 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_HideCastBar");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_IncrementProfileStatValue
// 0x0010 (0x0070 - 0x0080)
class UBehavior_IncrementProfileStatValue : public UBehaviorBase
{
public:
	class UStatDefinition*                             StatToUse;                                     // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	int32_t                                            IncrementValue;                                // 0x0078 (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_IncrementProfileStatValue");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Behavior_IncrementStat
// 0x0010 (0x0070 - 0x0080)
class UBehavior_IncrementStat : public UBehaviorBase
{
public:
	class UStatDefinition*                             StatToIncrement;                               // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	int32_t                                            Amount;                                        // 0x0078 (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_IncrementStat");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_IsCharacterOnTeam
// 0x0018 (0x0070 - 0x0088)
class UBehavior_IsCharacterOnTeam : public UBehaviorBase
{
public:
	uint32_t                                           bCheckFaction : 1;                             // 0x0070 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	class UPoplarPlayerNameIdentifierDefinition*       Character;                                     // 0x0078 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarFactionDefinition*                    Faction;                                       // 0x0080 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_IsCharacterOnTeam");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_IsInVolume
// 0x0020 (0x0070 - 0x0090)
class UBehavior_IsInVolume : public UBehaviorBase
{
public:
	class TArray<class UObject*>                       Actors;                                        // 0x0070 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<class UObject*>                       Volumes;                                       // 0x0080 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_IsInVolume");
		}

		return uClassPointer;
	};

	void eventPublishBehaviorOutput(int32_t NumActorsInVolume, const class TArray<class UObject*>& ActorsInVolumes, const class TArray<class UObject*>& ActorsNotInVolumes, struct FBehaviorKernelInfo& KernelInfo);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_IsLocallyControlled
// 0x0008 (0x0070 - 0x0078)
class UBehavior_IsLocallyControlled : public UBehaviorBase
{
public:
	uint32_t                                           bReturnTrueForSpectators : 1;                  // 0x0070 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_IsLocallyControlled");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_IsSpectatorOnly
// 0x0000 (0x0070 - 0x0070)
class UBehavior_IsSpectatorOnly : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_IsSpectatorOnly");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_KillBot
// 0x0000 (0x0070 - 0x0070)
class UBehavior_KillBot : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_KillBot");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Behavior_LineOfSight
// 0x0018 (0x0070 - 0x0088)
class UBehavior_LineOfSight : public UBehaviorBase
{
public:
	float                                              FOV;                                           // 0x0070 (0x0004) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bDoTrace : 1;                                  // 0x0074 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	struct FBehaviorLineTraceFlags                     TraceFlags;                                    // 0x0078 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class AActor*                                      Target;                                        // 0x0080 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_LineOfSight");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_LockHUDState
// 0x0008 (0x0070 - 0x0078)
class UBehavior_LockHUDState : public UBehaviorBase
{
public:
	uint32_t                                           bLockHUDState : 1;                             // 0x0070 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_LockHUDState");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_Minimap
// 0x0028 (0x0088 - 0x00B0)
class UBehavior_Minimap : public UBehavior_UIBase
{
public:
	EMinimapOperation                                  Operation;                                     // 0x0088 (0x0001) [0x0000000000000001] (CPF_Edit)    
	class USwfMovie*                                   ExpandedMinimapMovieTarget;                    // 0x0090 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<struct FName>                         ExpandedMinimapTargetChain;                    // 0x0098 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	int32_t                                            IsPlayerAlive;                                 // 0x00A8 (0x0004) [0x0000000000000000]               

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_Minimap");
		}

		return uClassPointer;
	};

	class UGFxObject* GetExpandedMinimapObject(class UObject* ContextObject);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_ModifyCameraMode
// 0x0018 (0x0070 - 0x0088)
class UBehavior_ModifyCameraMode : public UPlayerBehaviorBase
{
public:
	ECameraModeModification                            CameraModeModification;                        // 0x0070 (0x0001) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       ModeName;                                      // 0x0074 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bTeleportTransition : 1;                       // 0x007C (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	float                                              TransitionTimeOverride;                        // 0x0080 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_ModifyCameraMode");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_ModifyInputContext
// 0x0010 (0x0070 - 0x0080)
class UBehavior_ModifyInputContext : public UBehaviorBase
{
public:
	EInputContextModification                          InputContextModification;                      // 0x0070 (0x0001) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       InputContextName;                              // 0x0074 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_ModifyInputContext");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_ModifyResourcePoolByPercentage
// 0x0028 (0x0070 - 0x0098)
class UBehavior_ModifyResourcePoolByPercentage : public UBehaviorBase
{
public:
	class UResourcePool*                               ResourcePool;                                  // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UResourceDefinition*                         Resource;                                      // 0x0078 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              Percentage;                                    // 0x0080 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              MinPercentage;                                 // 0x0084 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              MaxPercentage;                                 // 0x0088 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EPoolModificationPercentageStyle                   PercentageOfWhat;                              // 0x008C (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bCreatePoolIfNecessary : 1;                    // 0x0090 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           FailIfThresholdsExceeded : 1;                  // 0x0090 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_ModifyResourcePoolByPercentage");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_MusicRemoteEvent
// 0x0018 (0x0070 - 0x0088)
class UBehavior_MusicRemoteEvent : public UBehaviorBase
{
public:
	struct FName                                       CustomEventName;                               // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UObject*                                     TargetObject;                                  // 0x0078 (0x0008) [0x0000000000000000]               
	int32_t                                            WholeData;                                     // 0x0080 (0x0004) [0x0000000000000000]               
	float                                              DecimalData;                                   // 0x0084 (0x0004) [0x0000000000000000]               

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_MusicRemoteEvent");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Behavior_MusicRtpc
// 0x0010 (0x0070 - 0x0080)
class UBehavior_MusicRtpc : public UBehaviorBase
{
public:
	class UAkRtpc*                                     Rtpc;                                          // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              Duration;                                      // 0x0078 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              Value;                                         // 0x007C (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_MusicRtpc");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Behavior_MusicSilence
// 0x0000 (0x0070 - 0x0070)
class UBehavior_MusicSilence : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_MusicSilence");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Behavior_MusicState
// 0x0018 (0x0070 - 0x0088)
class UBehavior_MusicState : public UBehaviorBase
{
public:
	class UAkState*                                    DefaultAkState;                                // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bOverridePriority : 1;                         // 0x0078 (0x0004) [0x0000000000000002] [0x00000001] (CPF_Const)
	uint32_t                                           bOverrideDuration : 1;                         // 0x0078 (0x0004) [0x0000000000000002] [0x00000002] (CPF_Const)
	uint32_t                                           NowOrNever : 1;                                // 0x0078 (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	int32_t                                            Priority;                                      // 0x007C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              Duration;                                      // 0x0080 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_MusicState");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Behavior_MusicSystemConfiguration
// 0x0058 (0x0070 - 0x00C8)
class UBehavior_MusicSystemConfiguration : public UBehaviorBase
{
public:
	struct FMusicSystemConfiguration                   Configuration;                                 // 0x0070 (0x0058) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_MusicSystemConfiguration");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Behavior_MusicSystemEvent
// 0x0020 (0x0070 - 0x0090)
class UBehavior_MusicSystemEvent : public UBehaviorBase
{
public:
	class UPoplarMusicDefinition*                      TargetMusicDefinition;                         // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       CustomEventName;                               // 0x0078 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UObject*                                     TargetObject;                                  // 0x0080 (0x0008) [0x0000000000000000]               
	int32_t                                            WholeData;                                     // 0x0088 (0x0004) [0x0000000000000000]               
	float                                              DecimalData;                                   // 0x008C (0x0004) [0x0000000000000000]               

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_MusicSystemEvent");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Behavior_MusicTerminateState
// 0x0008 (0x0070 - 0x0078)
class UBehavior_MusicTerminateState : public UBehaviorBase
{
public:
	class UAkState*                                    DefaultAkState;                                // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_MusicTerminateState");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Behavior_OpenGFxMovie
// 0x0030 (0x0070 - 0x00A0)
class UBehavior_OpenGFxMovie : public UBehaviorBase
{
public:
	class USwfMovie*                                   Movie;                                         // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bAllowFocus : 1;                               // 0x0078 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	uint32_t                                           bAllowInput : 1;                               // 0x0078 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	uint32_t                                           bStartPaused : 1;                              // 0x0078 (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	uint32_t                                           bEnableGammaCorrection : 1;                    // 0x0078 (0x0004) [0x0000000000000001] [0x00000008] (CPF_Edit)
	uint32_t                                           bDisplayWithHudOff : 1;                        // 0x0078 (0x0004) [0x0000000000000001] [0x00000010] (CPF_Edit)
	EGFxRenderTextureMode                              RenderTextureMode;                             // 0x007C (0x0001) [0x0000000000000001] (CPF_Edit)    
	EGFxScaleMode                                      ScaleMode;                                     // 0x007D (0x0001) [0x0000000000000001] (CPF_Edit)    
	EGFxAlign                                          AlignMode;                                     // 0x007E (0x0001) [0x0000000000000001] (CPF_Edit)    
	class UTextureRenderTarget2D*                      RenderTexture;                                 // 0x0080 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UObject*                                     PlayerController;                              // 0x0088 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class TArray<class UObject*>                       AllPlayers;                                    // 0x0090 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_OpenGFxMovie");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_OpenMiniMapSelector
// 0x0018 (0x0070 - 0x0088)
class UBehavior_OpenMiniMapSelector : public UBehaviorBase
{
public:
	uint32_t                                           bExpandMinimap : 1;                            // 0x0070 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	uint32_t                                           bCanSelectSelf : 1;                            // 0x0070 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	uint32_t                                           bCanSelectDeadTargets : 1;                     // 0x0070 (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	class UPoplarUnitTypeDefinition*                   UnitTypeFilter;                                // 0x0078 (0x0008) [0x0000000000000001] (CPF_Edit)    
	EOpinion                                           AllegianceFilter;                              // 0x0080 (0x0001) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_OpenMiniMapSelector");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_OverrideAutoAim
// 0x0008 (0x0070 - 0x0078)
class UBehavior_OverrideAutoAim : public UBehaviorBase
{
public:
	class UWillowAutoAimStrategyDefinition*            AutoAimDef;                                    // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_OverrideAutoAim");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PerkActivated
// 0x0008 (0x0088 - 0x0090)
class UBehavior_PerkActivated : public UBehavior_UIBase
{
public:
	int32_t                                            PerkSlotIndex;                                 // 0x0088 (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PerkActivated");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PerkCrafter
// 0x00A0 (0x0070 - 0x0110)
class UBehavior_PerkCrafter : public UBehaviorBase
{
public:
	class UPoplarPerkFamilyDefinition*                 PerkFamily;                                    // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	EPerkRarity                                        Rarity;                                        // 0x0078 (0x0001) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
	class UPoplarCharacterRoleDefinition*              PlayerRole;                                    // 0x0080 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarFactionDefinition*                    PlayerFaction;                                 // 0x0088 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarPerkFunction*                         CommonPerkFunction;                            // 0x0090 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarPerkFunction*                         UncommonPerkFunction;                          // 0x0098 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarPerkFunction*                         RarePerkFunction;                              // 0x00A0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarPerkFunction*                         VeryRarePerkFunction;                          // 0x00A8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarPerkFunction*                         LegendaryPerkFunction;                         // 0x00B0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	int32_t                                            PerkSlotIndex;                                 // 0x00B8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class TArray<class UPoplarPerkFunction*>           CommonPool;                                    // 0x00C0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<class UPoplarPerkFunction*>           UncommonPool;                                  // 0x00D0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<class UPoplarPerkFunction*>           RarePool;                                      // 0x00E0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<class UPoplarPerkFunction*>           VeryRarePool;                                  // 0x00F0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<class UPoplarPerkFunction*>           LegendaryPool;                                 // 0x0100 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PerkCrafter");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Behavior_PlayAIPoplarMissionContextDialog
// 0x0018 (0x0070 - 0x0088)
class UBehavior_PlayAIPoplarMissionContextDialog : public UBehaviorBase
{
public:
	struct FBehaviorContextData                        PlayerWhoUsedMe;                               // 0x0070 (0x0018) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PlayAIPoplarMissionContextDialog");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PlayHitNotificationAudio
// 0x0010 (0x0070 - 0x0080)
class UBehavior_PlayHitNotificationAudio : public UBehaviorBase
{
public:
	class AActor*                                      HitActor;                                      // 0x0070 (0x0008) [0x0000000000000000]               
	uint32_t                                           bReplicateEvent : 1;                           // 0x0078 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PlayHitNotificationAudio");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarAISpawn
// 0x0000 (0x00C8 - 0x00C8)
class UBehavior_PoplarAISpawn : public UBehavior_AISpawn
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarAISpawn");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Behavior_PoplarAttachItems
// 0x0020 (0x0070 - 0x0090)
class UBehavior_PoplarAttachItems : public UBehaviorBase
{
public:
	float                                              DisablePickupsDuration;                        // 0x0070 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bOverridePickupMethod : 1;                     // 0x0074 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bScale : 1;                                    // 0x0074 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	EPoplarPickupMethod                                PickupOverrideMethod;                          // 0x0078 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              PickupOverrideLifetime;                        // 0x007C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FVector                                     Scale;                                         // 0x0080 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarAttachItems");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarBroadcastMessage
// 0x0040 (0x0070 - 0x00B0)
class UBehavior_PoplarBroadcastMessage : public UBehaviorBase
{
public:
	class UPoplarMessageDefinition*                    MessageDefinition;                             // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EPoplarBroadcastFilter                             BroadcastFilter;                               // 0x0078 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       InstigatingTeam;                               // 0x0080 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       OpposingTeam;                                  // 0x0088 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class AActor*                                      InstigatingPlayer;                             // 0x0090 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class AActor*                                      OpposingPlayer;                                // 0x0098 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarLaneDefinition*                       LaneDefinition;                                // 0x00A0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarSkillDefinition*                      SkillDef;                                      // 0x00A8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarBroadcastMessage");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarBroadcastMessageLocalClients
// 0x0040 (0x0070 - 0x00B0)
class UBehavior_PoplarBroadcastMessageLocalClients : public UBehaviorBase
{
public:
	class UPoplarMessageDefinition*                    MessageDefinition;                             // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EPoplarBroadcastFilterLocalClients                 BroadcastFilter;                               // 0x0078 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       InstigatingTeam;                               // 0x0080 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       OpposingTeam;                                  // 0x0088 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class AActor*                                      InstigatingPlayer;                             // 0x0090 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class AActor*                                      OpposingPlayer;                                // 0x0098 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarLaneDefinition*                       LaneDefinition;                                // 0x00A0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarSkillDefinition*                      SkillDef;                                      // 0x00A8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarBroadcastMessageLocalClients");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarCauseRadiusDamage
// 0x00B0 (0x01A8 - 0x0258)
class UBehavior_PoplarCauseRadiusDamage : public UBehavior_CauseDamage
{
public:
	class UPoplarActionDefinition*                     TrackedPoplarActionDef;                        // 0x01A8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarSkillDefinition*                      TrackedSkillDef;                               // 0x01B0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FDamageTags                                 DamageTags;                                    // 0x01B8 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EOpinion                                           AllegianceFilter;                              // 0x01BC (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class AActor*                                      DamageInstigatorContext;                       // 0x01C0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bDisableDamageFalloff : 1;                     // 0x01C8 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bSkipLineOfSightTest : 1;                      // 0x01C8 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                LifestealPercentage;                           // 0x01D0 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                ShieldstealPercentage;                         // 0x01F0 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                ShieldPenetrationPercentage;                   // 0x0210 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class AActor*                                      DamageOriginActor;                             // 0x0230 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FVector                                     DamageOriginOffset;                            // 0x0238 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UIDamageBehavior*                            DamageContextInterface_Object;                 // 0x0248 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UIDamageBehavior*                            DamageContextInterface_Interface;              // 0x0250 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarCauseRadiusDamage");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarCauseTargetedDamage
// 0x00A0 (0x01A8 - 0x0248)
class UBehavior_PoplarCauseTargetedDamage : public UBehavior_CauseDamage
{
public:
	class UPoplarActionDefinition*                     TrackedPoplarActionDef;                        // 0x01A8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarSkillDefinition*                      TrackedSkillDef;                               // 0x01B0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FDamageTags                                 DamageTags;                                    // 0x01B8 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class AActor*                                      DamageInstigatorContext;                       // 0x01C0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<struct FBehaviorContextData>          TargetContexts;                                // 0x01C8 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	struct FAttributeInitializationData                LifestealPercentage;                           // 0x01D8 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                ShieldstealPercentage;                         // 0x01F8 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                ShieldPenetrationPercentage;                   // 0x0218 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UIDamageBehavior*                            DamageContextInterface_Object;                 // 0x0238 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UIDamageBehavior*                            DamageContextInterface_Interface;              // 0x0240 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarCauseTargetedDamage");
		}

		return uClassPointer;
	};

	void eventCauseTargetedDamage(class AActor* Target, class AActor* ContextActor, float DamageAmount, float Momentum, class UDamagePipeline* Pipeline);
	bool eventSetDamageInstigatorContext(class UObject* ContextObject);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarChangeUsability
// 0x0008 (0x0070 - 0x0078)
class UBehavior_PoplarChangeUsability : public UBehaviorBase
{
public:
	EChangeStatus                                      ChangeUsability;                               // 0x0070 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EOpinion                                           Allegiance;                                    // 0x0071 (0x0001) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           UseAllegiance : 1;                             // 0x0074 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarChangeUsability");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarDropItems
// 0x0080 (0x0070 - 0x00F0)
class UBehavior_PoplarDropItems : public UBehaviorBase
{
public:
	struct FVector                                     ItemDropOffset;                                // 0x0070 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FVector                                     ItemDropVelocity;                              // 0x007C (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FVector                                     ItemScatterOffset;                             // 0x0088 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              DisablePickupsDuration;                        // 0x0094 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bCircularScatter : 1;                          // 0x0098 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bTorque : 1;                                   // 0x0098 (0x0004) [0x0000000000020001] [0x00000002] (CPF_Edit | CPF_EditConst)
	uint32_t                                           bOverridePickupMethod : 1;                     // 0x0098 (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	struct FRelativeDirectionData                      CustomDirection;                               // 0x00A0 (0x0038) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              CustomVelocity;                                // 0x00D8 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FVector                                     Torque;                                        // 0x00DC (0x000C) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
	EPoplarPickupMethod                                PickupOverrideMethod;                          // 0x00E8 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              PickupOverrideLifetime;                        // 0x00EC (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarDropItems");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarEndMatch
// 0x0010 (0x0070 - 0x0080)
class UBehavior_PoplarEndMatch : public UBehaviorBase
{
public:
	uint32_t                                           IsDraw : 1;                                    // 0x0070 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       WinningTeam;                                   // 0x0078 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarEndMatch");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarExplode
// 0x0090 (0x01D0 - 0x0260)
class UBehavior_PoplarExplode : public UBehavior_Explode
{
public:
	class UPoplarActionDefinition*                     TrackedActionDefinition;                       // 0x01D0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarSkillDefinition*                      TrackedSkillDefinition;                        // 0x01D8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FDamageTags                                 DamageTags;                                    // 0x01E0 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                LifestealPercentageFormula;                    // 0x01E8 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                ShieldstealPercentageFormula;                  // 0x0208 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                ShieldPenetrationPercentageFormula;            // 0x0228 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class AActor*                                      DamageOriginActor;                             // 0x0248 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EOpinion                                           AllegienceFilter;                              // 0x0250 (0x0001) [0x0000000000000001] (CPF_Edit)    
	class UExpressionEvaluator*                        Condition;                                     // 0x0258 (0x0008) [0x0000000004000003] (CPF_Edit | CPF_Const | CPF_EditInline)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarExplode");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarFailPlayerChallenge
// 0x0010 (0x0070 - 0x0080)
class UBehavior_PoplarFailPlayerChallenge : public UBehaviorBase
{
public:
	class UPoplarChallengeDefinition*                  Challenge;                                     // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bFailAllPlayers : 1;                           // 0x0078 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarFailPlayerChallenge");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarFilteredBroadcast
// 0x0028 (0x0070 - 0x0098)
class UBehavior_PoplarFilteredBroadcast : public UBehaviorBase
{
public:
	int32_t                                            IndexFilter;                                   // 0x0070 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       TeamDef;                                       // 0x0078 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarLaneDefinition*                       LaneDef;                                       // 0x0080 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bIncludeHumanUnits : 1;                        // 0x0088 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	class UExpressionEvaluator*                        Condition;                                     // 0x0090 (0x0008) [0x0000000004000003] (CPF_Edit | CPF_Const | CPF_EditInline)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarFilteredBroadcast");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarActivateSpawners
// 0x0010 (0x0098 - 0x00A8)
class UBehavior_PoplarActivateSpawners : public UBehavior_PoplarFilteredBroadcast
{
public:
	class UObject*                                     OptionalSpawnerSource;                         // 0x0098 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarSpawnerTypeDefinition*                SpawnerTypeDef;                                // 0x00A0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarActivateSpawners");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarChangeMinionLane
// 0x0030 (0x0098 - 0x00C8)
class UBehavior_PoplarChangeMinionLane : public UBehavior_PoplarFilteredBroadcast
{
public:
	class UPoplarLaneDefinition*                       NewLaneDef;                                    // 0x0098 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       NewTeamDef;                                    // 0x00A0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bUseJustThisGuy : 1;                           // 0x00A8 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	struct FBehaviorContextData                        JustThisGuy;                                   // 0x00B0 (0x0018) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarChangeMinionLane");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarChangeSpawnerProperties
// 0x0028 (0x0098 - 0x00C0)
class UBehavior_PoplarChangeSpawnerProperties : public UBehavior_PoplarFilteredBroadcast
{
public:
	class UObject*                                     OptionalSpawnerSource;                         // 0x0098 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarSpawnerTypeDefinition*                SpawnerTypeDef;                                // 0x00A0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            NewIndex;                                      // 0x00A8 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       NewTeam;                                       // 0x00B0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarLaneDefinition*                       NewLane;                                       // 0x00B8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarChangeSpawnerProperties");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarChangeUnitProperties
// 0x0020 (0x0098 - 0x00B8)
class UBehavior_PoplarChangeUnitProperties : public UBehavior_PoplarFilteredBroadcast
{
public:
	class UObject*                                     OptionalUnitSource;                            // 0x0098 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarUnitTypeDefinition*                   UnitTypeDef;                                   // 0x00A0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       NewTeam;                                       // 0x00A8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarLaneDefinition*                       NewLane;                                       // 0x00B0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarChangeUnitProperties");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarCustomEvent
// 0x0010 (0x0098 - 0x00A8)
class UBehavior_PoplarCustomEvent : public UBehavior_PoplarFilteredBroadcast
{
public:
	class UPoplarUnitTypeDefinition*                   UnitTypeDef;                                   // 0x0098 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FName                                       CustomEventName;                               // 0x00A0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarCustomEvent");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarDeactivateSpawners
// 0x0010 (0x0098 - 0x00A8)
class UBehavior_PoplarDeactivateSpawners : public UBehavior_PoplarFilteredBroadcast
{
public:
	class UObject*                                     OptionalSpawnerSource;                         // 0x0098 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarSpawnerTypeDefinition*                SpawnerTypeDef;                                // 0x00A0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarDeactivateSpawners");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarGetSpawnerFromFilters
// 0x0008 (0x0098 - 0x00A0)
class UBehavior_PoplarGetSpawnerFromFilters : public UBehavior_PoplarFilteredBroadcast
{
public:
	class UPoplarSpawnerTypeDefinition*                SpawnerTypeDef;                                // 0x0098 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarGetSpawnerFromFilters");
		}

		return uClassPointer;
	};

	void eventPublishBehaviorOutput(const class TArray<class UObject*>& Spawner, struct FBehaviorKernelInfo& KernelInfo);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarGetUnitFromFilters
// 0x0008 (0x0098 - 0x00A0)
class UBehavior_PoplarGetUnitFromFilters : public UBehavior_PoplarFilteredBroadcast
{
public:
	class UPoplarUnitTypeDefinition*                   UnitTypeDef;                                   // 0x0098 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarGetUnitFromFilters");
		}

		return uClassPointer;
	};

	void eventPublishBehaviorOutput(const class TArray<class UObject*>& Unit, struct FBehaviorKernelInfo& KernelInfo);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarHighlightEffectFiltered
// 0x0030 (0x0098 - 0x00C8)
class UBehavior_PoplarHighlightEffectFiltered : public UBehavior_PoplarFilteredBroadcast
{
public:
	class UObject*                                     OptionalUnitSource;                            // 0x0098 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EHighlightFunctionality                            FunctionalityToggle;                           // 0x00A0 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           RemoveHighlights : 1;                          // 0x00A4 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bOpposingTeam : 1;                             // 0x00A4 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	class UPoplarUnitTypeDefinition*                   UnitTypeDef;                                   // 0x00A8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarHighlightDefinition*                  HighlightEffect;                               // 0x00B0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       InstigatingTeam;                               // 0x00B8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UObject*                                     InstigatingPRI;                                // 0x00C0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarHighlightEffectFiltered");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarLevelUp
// 0x0028 (0x0098 - 0x00C0)
class UBehavior_PoplarLevelUp : public UBehavior_PoplarFilteredBroadcast
{
public:
	ELevelUpRecipientFilter                            WhoToLevelUp;                                  // 0x0098 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarUnitTypeDefinition*                   UnitTypeDef;                                   // 0x00A0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarSpawnerTypeDefinition*                SpawnerTypeDef;                                // 0x00A8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            LevelIncrease;                                 // 0x00B0 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            LevelSet;                                      // 0x00B4 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            LevelMaximum;                                  // 0x00B8 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           GiveSkillPoints : 1;                           // 0x00BC (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           ShowHUDFanfare : 1;                            // 0x00BC (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarLevelUp");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarQueueMinionWaveNow
// 0x0010 (0x0098 - 0x00A8)
class UBehavior_PoplarQueueMinionWaveNow : public UBehavior_PoplarFilteredBroadcast
{
public:
	class UObject*                                     OptionalSpawnerSource;                         // 0x0098 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarSpawnerTypeDefinition*                SpawnerTypeDef;                                // 0x00A0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarQueueMinionWaveNow");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarSetSpawnLevel
// 0x0010 (0x0098 - 0x00A8)
class UBehavior_PoplarSetSpawnLevel : public UBehavior_PoplarFilteredBroadcast
{
public:
	class UPoplarSpawnerTypeDefinition*                SpawnerTypeDef;                                // 0x0098 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            NewSpawnLevel;                                 // 0x00A0 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarSetSpawnLevel");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarStartMinionSpawning
// 0x0010 (0x0098 - 0x00A8)
class UBehavior_PoplarStartMinionSpawning : public UBehavior_PoplarFilteredBroadcast
{
public:
	class UPoplarSpawnerTypeDefinition*                SpawnerTypeDef;                                // 0x0098 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           StartSpawning : 1;                             // 0x00A0 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarStartMinionSpawning");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_ResetSpawner
// 0x0010 (0x0098 - 0x00A8)
class UBehavior_ResetSpawner : public UBehavior_PoplarFilteredBroadcast
{
public:
	class UObject*                                     OptionalSpawnerSource;                         // 0x0098 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarSpawnerTypeDefinition*                SpawnerTypeDef;                                // 0x00A0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_ResetSpawner");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarGetEnergyPoolFor
// 0x0000 (0x0070 - 0x0070)
class UBehavior_PoplarGetEnergyPoolFor : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarGetEnergyPoolFor");
		}

		return uClassPointer;
	};

	void eventPublishBehaviorOutput(class UObject* EnergyPool, struct FBehaviorKernelInfo& KernelInfo);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarGetFirstOpposingTeam
// 0x0008 (0x0070 - 0x0078)
class UBehavior_PoplarGetFirstOpposingTeam : public UBehaviorBase
{
public:
	class UPoplarTeamDefinition*                       InTeam;                                        // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarGetFirstOpposingTeam");
		}

		return uClassPointer;
	};

	void eventPublishBehaviorOutput(class UObject* OpposingTeam, struct FBehaviorKernelInfo& KernelInfo);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarGetGameInfoVariable
// 0x0008 (0x0070 - 0x0078)
class UBehavior_PoplarGetGameInfoVariable : public UBehaviorBase
{
public:
	class UPoplarGameInfoReplicatedVariableDefinition* KeyDefinition;                                 // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarGetGameInfoVariable");
		}

		return uClassPointer;
	};

	void eventPublishBehaviorOutput(int32_t Value, struct FBehaviorKernelInfo& KernelInfo);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarGetLaneVariable
// 0x0018 (0x0070 - 0x0088)
class UBehavior_PoplarGetLaneVariable : public UBehaviorBase
{
public:
	struct FName                                       VarName;                                       // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarLaneDefinition*                       LaneDef;                                       // 0x0078 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       TeamDef;                                       // 0x0080 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarGetLaneVariable");
		}

		return uClassPointer;
	};

	void eventPublishBehaviorOutput(int32_t Value, struct FBehaviorKernelInfo& KernelInfo);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarGetSpawnerProperties
// 0x0000 (0x0070 - 0x0070)
class UBehavior_PoplarGetSpawnerProperties : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarGetSpawnerProperties");
		}

		return uClassPointer;
	};

	void eventPublishBehaviorOutput(int32_t SpawnerIndex, class UObject* TeamDefinition, class UObject* LaneDefinition, class UObject* SpawnerType, struct FBehaviorKernelInfo& KernelInfo);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarGetTeamFor
// 0x0008 (0x0070 - 0x0078)
class UBehavior_PoplarGetTeamFor : public UBehaviorBase
{
public:
	class AActor*                                      Source;                                        // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarGetTeamFor");
		}

		return uClassPointer;
	};

	void eventPublishBehaviorOutput(class UObject* OutputTeam, struct FBehaviorKernelInfo& KernelInfo);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarGetUnitProperties
// 0x0000 (0x0070 - 0x0070)
class UBehavior_PoplarGetUnitProperties : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarGetUnitProperties");
		}

		return uClassPointer;
	};

	void eventPublishBehaviorOutput(int32_t SpawnerIndex, class UObject* TeamDefinition, class UObject* LaneDefinition, class UObject* UnitTypeDefinition, class UObject* TheUnit, class UObject* PlayerReplicationInfo, struct FBehaviorKernelInfo& KernelInfo);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarGiveChallengeToPlayer
// 0x0050 (0x0070 - 0x00C0)
class UBehavior_PoplarGiveChallengeToPlayer : public UBehaviorBase
{
public:
	class UPoplarChallengeDefinition*                  Challenge;                                     // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bPinToHUD : 1;                                 // 0x0078 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bGiveToAllPlayers : 1;                         // 0x0078 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                OptionalChallengeTime;                         // 0x0080 (0x0020) [0x0000000000000001] (CPF_Edit)    
	struct FAttributeInitializationData                OptionalChallengeLevel;                        // 0x00A0 (0x0020) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarGiveChallengeToPlayer");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarHighlightEffect
// 0x0020 (0x0070 - 0x0090)
class UBehavior_PoplarHighlightEffect : public UBehaviorBase
{
public:
	uint32_t                                           RemoveHighlights : 1;                          // 0x0070 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	class UPoplarHighlightDefinition*                  HighlightEffect;                               // 0x0078 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       InstigatingTeam;                               // 0x0080 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UObject*                                     InstigatingPRI;                                // 0x0088 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarHighlightEffect");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarHighlightFunctionalityToggle
// 0x0008 (0x0070 - 0x0078)
class UBehavior_PoplarHighlightFunctionalityToggle : public UBehaviorBase
{
public:
	EHighlightFunctionality                            FunctionalityToggle;                           // 0x0070 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarHighlightFunctionalityToggle");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarLaneEvent
// 0x0010 (0x0070 - 0x0080)
class UBehavior_PoplarLaneEvent : public UBehaviorBase
{
public:
	EPoplarLaneEvent                                   LaneEvent;                                     // 0x0070 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class AActor*                                      Killer;                                        // 0x0078 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarLaneEvent");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarMissionCustomEvent
// 0x0010 (0x0070 - 0x0080)
class UBehavior_PoplarMissionCustomEvent : public UBehaviorBase
{
public:
	class UPoplarMissionDefinition*                    RelatedMission;                                // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       EventName;                                     // 0x0078 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarMissionCustomEvent");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarMissionRemoteEvent
// 0x0008 (0x0070 - 0x0078)
class UBehavior_PoplarMissionRemoteEvent : public UBehaviorBase
{
public:
	struct FName                                       EventName;                                     // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarMissionRemoteEvent");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarPreEndMatch
// 0x0010 (0x0070 - 0x0080)
class UBehavior_PoplarPreEndMatch : public UBehaviorBase
{
public:
	uint32_t                                           IsDraw : 1;                                    // 0x0070 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       WinningTeam;                                   // 0x0078 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarPreEndMatch");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarRemoteControl
// 0x0028 (0x0070 - 0x0098)
class UBehavior_PoplarRemoteControl : public UBehaviorBase
{
public:
	uint32_t                                           bDisableRemoteControl : 1;                     // 0x0070 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	class URemoteControlDefinition*                    RemoteControlDef;                              // 0x0078 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FBehaviorContextData                        ObjectBeingControlled;                         // 0x0080 (0x0018) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarRemoteControl");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarSendEventToGameInfo
// 0x0030 (0x0070 - 0x00A0)
class UBehavior_PoplarSendEventToGameInfo : public UBehaviorBase
{
public:
	struct FName                                       EventToTrigger;                                // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AActor*                                      InstigatorActor;                               // 0x0078 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AActor*                                      OtherActor;                                    // 0x0080 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarTeamDefinition*                       TeamDef;                                       // 0x0088 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarLaneDefinition*                       LaneDef;                                       // 0x0090 (0x0008) [0x0000000000000001] (CPF_Edit)    
	int32_t                                            Index;                                         // 0x0098 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AddedFloatParam;                               // 0x009C (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarSendEventToGameInfo");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarSetGameInfoVariable
// 0x0010 (0x0070 - 0x0080)
class UBehavior_PoplarSetGameInfoVariable : public UBehaviorBase
{
public:
	class UPoplarGameInfoReplicatedVariableDefinition* KeyDefinition;                                 // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            NewValue;                                      // 0x0078 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarSetGameInfoVariable");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarSetLaneVariable
// 0x0020 (0x0070 - 0x0090)
class UBehavior_PoplarSetLaneVariable : public UBehaviorBase
{
public:
	struct FName                                       VarName;                                       // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            NewValue;                                      // 0x0078 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarLaneDefinition*                       LaneDef;                                       // 0x0080 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       TeamDef;                                       // 0x0088 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarSetLaneVariable");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarSetMatchPhase
// 0x0000 (0x0070 - 0x0070)
class UBehavior_PoplarSetMatchPhase : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarSetMatchPhase");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarSetMinimapIconDefinition
// 0x0008 (0x0070 - 0x0078)
class UBehavior_PoplarSetMinimapIconDefinition : public UBehaviorBase
{
public:
	class UPoplarMinimapIconDefinition*                IconDefinition;                                // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarSetMinimapIconDefinition");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarSetUsabilityCost
// 0x0010 (0x0070 - 0x0080)
class UBehavior_PoplarSetUsabilityCost : public UBehaviorBase
{
public:
	int32_t                                            CostAmount;                                    // 0x0070 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           UseAllegiance : 1;                             // 0x0074 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	EOpinion                                           Allegiance;                                    // 0x0078 (0x0001) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarSetUsabilityCost");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarSetUsableIcon
// 0x0010 (0x0070 - 0x0080)
class UBehavior_PoplarSetUsableIcon : public UBehaviorBase
{
public:
	class UInteractionIconDefinition*                  Icon;                                          // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           UseAllegiance : 1;                             // 0x0078 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	EOpinion                                           Allegiance;                                    // 0x007C (0x0001) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarSetUsableIcon");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarSpawnFromSpawnSystem
// 0x00B0 (0x0070 - 0x0120)
class UBehavior_PoplarSpawnFromSpawnSystem : public UBehaviorBase
{
public:
	class USpawnFactory*                               SpawnFactory;                                  // 0x0070 (0x0008) [0x0000000004000003] (CPF_Edit | CPF_Const | CPF_EditInline)
	uint32_t                                           bZeroPitchAndRollOnSpawnedActor : 1;           // 0x0078 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bRelativeSpawnOffset : 1;                      // 0x0078 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	uint32_t                                           bSpawnOnGround : 1;                            // 0x0078 (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	uint32_t                                           bAlignToGround : 1;                            // 0x0078 (0x0004) [0x0000000000000003] [0x00000008] (CPF_Edit | CPF_Const)
	uint32_t                                           bInheritAttachment : 1;                        // 0x0078 (0x0004) [0x0000000000000002] [0x00000010] (CPF_Const)
	uint32_t                                           bInheritAttachmentBase : 1;                    // 0x0078 (0x0004) [0x0000000000000003] [0x00000020] (CPF_Edit | CPF_Const)
	uint32_t                                           bFindBase : 1;                                 // 0x0078 (0x0004) [0x0000000000000003] [0x00000040] (CPF_Edit | CPF_Const)
	uint32_t                                           bAttachToContext : 1;                          // 0x0078 (0x0004) [0x0000000000000003] [0x00000080] (CPF_Edit | CPF_Const)
	uint32_t                                           bSaveActorReference : 1;                       // 0x0078 (0x0004) [0x0000000000000003] [0x00000100] (CPF_Edit | CPF_Const)
	uint32_t                                           bGetTeamFromContext : 1;                       // 0x0078 (0x0004) [0x0000000000000003] [0x00000200] (CPF_Edit | CPF_Const)
	struct FBehaviorContextData                        GameStageContext;                              // 0x0080 (0x0018) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FVector                                     SpawnLocOffset;                                // 0x0098 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	ESpawnLocationRotationInheritanceType              InheritLocationRotationFrom;                   // 0x00A4 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              FindBaseSearchDistance;                        // 0x00A8 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class AActor*                                      OverrideBase;                                  // 0x00B0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FRotator                                    SpawnRotationOffset;                           // 0x00B8 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class AActor*                                      MyOwner;                                       // 0x00C8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class AActor*                                      SkinSource;                                    // 0x00D0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FVector                                     StartingVelocity;                              // 0x00D8 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FBehaviorContextData                        InstanceDataContext;                           // 0x00E8 (0x0018) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FName                                       SavedReferenceName;                            // 0x0100 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       TeamDefinition;                                // 0x0108 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarLaneDefinition*                       LaneDefinition;                                // 0x0110 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            FloorTestZDist;                                // 0x0118 (0x0004) [0x0000000000000000]               

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarSpawnFromSpawnSystem");
		}

		return uClassPointer;
	};

	void PublishBehaviorOutput(class AActor* SpawnedActor, struct FBehaviorKernelInfo& KernelInfo);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarTriggerPerkFlash
// 0x0008 (0x0070 - 0x0078)
class UBehavior_PoplarTriggerPerkFlash : public UBehaviorBase
{
public:
	int32_t                                            PerkIndex;                                     // 0x0070 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarTriggerPerkFlash");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PoplarUnpinMatchEvent
// 0x0018 (0x0070 - 0x0088)
class UBehavior_PoplarUnpinMatchEvent : public UBehaviorBase
{
public:
	class UPoplarMessageDefinition*                    MessageToUnpin;                                // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarTeamDefinition*                       TargetTeam;                                    // 0x0078 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AActor*                                      TargetPlayer;                                  // 0x0080 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarUnpinMatchEvent");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PopulateDeathRecap
// 0x0000 (0x0070 - 0x0070)
class UBehavior_PopulateDeathRecap : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PopulateDeathRecap");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PromptForActionSkillConfirmation
// 0x0000 (0x0070 - 0x0070)
class UBehavior_PromptForActionSkillConfirmation : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PromptForActionSkillConfirmation");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PVEWidgetActivateBossFlinch
// 0x0000 (0x0070 - 0x0070)
class UBehavior_PVEWidgetActivateBossFlinch : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PVEWidgetActivateBossFlinch");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PVEWidgetActivateBossMode
// 0x0010 (0x0070 - 0x0080)
class UBehavior_PVEWidgetActivateBossMode : public UBehaviorBase
{
public:
	class UObject*                                     Boss;                                          // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	EPVEBossWidgetModes                                Mode;                                          // 0x0078 (0x0001) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PVEWidgetActivateBossMode");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PVEWidgetActivateBossVsEscortMode
// 0x0010 (0x0070 - 0x0080)
class UBehavior_PVEWidgetActivateBossVsEscortMode : public UBehaviorBase
{
public:
	class UObject*                                     Escort;                                        // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UObject*                                     Boss;                                          // 0x0078 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PVEWidgetActivateBossVsEscortMode");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PVEWidgetActivateBossVsEscortModeOutro
// 0x0008 (0x0070 - 0x0078)
class UBehavior_PVEWidgetActivateBossVsEscortModeOutro : public UBehaviorBase
{
public:
	class UObject*                                     Escort;                                        // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PVEWidgetActivateBossVsEscortModeOutro");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PVEWidgetActivateEscortMode
// 0x0008 (0x0070 - 0x0078)
class UBehavior_PVEWidgetActivateEscortMode : public UBehaviorBase
{
public:
	class UObject*                                     Escort;                                        // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PVEWidgetActivateEscortMode");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PVEWidgetActivateShardCountdown
// 0x0000 (0x0070 - 0x0070)
class UBehavior_PVEWidgetActivateShardCountdown : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PVEWidgetActivateShardCountdown");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PVEWidgetActivateShardMode
// 0x0008 (0x0070 - 0x0078)
class UBehavior_PVEWidgetActivateShardMode : public UBehaviorBase
{
public:
	float                                              CountdownTime;                                 // 0x0070 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int32_t                                            ShardGoal;                                     // 0x0074 (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PVEWidgetActivateShardMode");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PVEWidgetActivateTrackUnitMode
// 0x0028 (0x0070 - 0x0098)
class UBehavior_PVEWidgetActivateTrackUnitMode : public UBehaviorBase
{
public:
	class UObject*                                     UnitA;                                         // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UObject*                                     UnitB;                                         // 0x0078 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UObject*                                     UnitC;                                         // 0x0080 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UObject*                                     UnitD;                                         // 0x0088 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UObject*                                     UnitE;                                         // 0x0090 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PVEWidgetActivateTrackUnitMode");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PVEWidgetClearBar
// 0x0000 (0x0070 - 0x0070)
class UBehavior_PVEWidgetClearBar : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PVEWidgetClearBar");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PVEWidgetEndShardObjective
// 0x0008 (0x0070 - 0x0078)
class UBehavior_PVEWidgetEndShardObjective : public UBehaviorBase
{
public:
	EShardObjectiveResult                              Result;                                        // 0x0070 (0x0001) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PVEWidgetEndShardObjective");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PVEWidgetEscortModeSetName
// 0x0010 (0x0070 - 0x0080)
class UBehavior_PVEWidgetEscortModeSetName : public UBehaviorBase
{
public:
	class FString                                      NameValue;                                     // 0x0070 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PVEWidgetEscortModeSetName");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PVEWidgetHideShardBar
// 0x0000 (0x0070 - 0x0070)
class UBehavior_PVEWidgetHideShardBar : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PVEWidgetHideShardBar");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PVEWidgetMultiTrackerAddUnit
// 0x0008 (0x0070 - 0x0078)
class UBehavior_PVEWidgetMultiTrackerAddUnit : public UBehaviorBase
{
public:
	uint32_t                                           bClearAllOtherUnits : 1;                       // 0x0070 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PVEWidgetMultiTrackerAddUnit");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PVEWidgetOverrideEscortMode
// 0x0008 (0x0070 - 0x0078)
class UBehavior_PVEWidgetOverrideEscortMode : public UBehaviorBase
{
public:
	float                                              HealthValue;                                   // 0x0070 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ProgressValue;                                 // 0x0074 (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PVEWidgetOverrideEscortMode");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PVEWidgetSetBossInvulnerability
// 0x0008 (0x0070 - 0x0078)
class UBehavior_PVEWidgetSetBossInvulnerability : public UBehaviorBase
{
public:
	uint32_t                                           bInvulnerable : 1;                             // 0x0070 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PVEWidgetSetBossInvulnerability");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PVEWidgetSetCurrentShards
// 0x0008 (0x0070 - 0x0078)
class UBehavior_PVEWidgetSetCurrentShards : public UBehaviorBase
{
public:
	int32_t                                            ShardCount;                                    // 0x0070 (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PVEWidgetSetCurrentShards");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PVEWidgetSetDefenseProgress
// 0x0030 (0x0070 - 0x00A0)
class UBehavior_PVEWidgetSetDefenseProgress : public UBehaviorBase
{
public:
	int32_t                                            CurrentProgress;                               // 0x0070 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class FString                                      ProgressBarString;                             // 0x0078 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CodeProgressString;                            // 0x0088 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	uint32_t                                           bSetProgress : 1;                              // 0x0098 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	uint32_t                                           bSetProgressString : 1;                        // 0x0098 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PVEWidgetSetDefenseProgress");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PVEWidgetSetDefenseProgressVisible
// 0x0008 (0x0070 - 0x0078)
class UBehavior_PVEWidgetSetDefenseProgressVisible : public UBehaviorBase
{
public:
	uint32_t                                           bVisible : 1;                                  // 0x0070 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PVEWidgetSetDefenseProgressVisible");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PVEWidgetSetDefenseWaveComplete
// 0x0000 (0x0070 - 0x0070)
class UBehavior_PVEWidgetSetDefenseWaveComplete : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PVEWidgetSetDefenseWaveComplete");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PVEWidgetSetDefenseWaveStart
// 0x0000 (0x0070 - 0x0070)
class UBehavior_PVEWidgetSetDefenseWaveStart : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PVEWidgetSetDefenseWaveStart");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PVEWidgetSetDefenseWaveTimer
// 0x0018 (0x0070 - 0x0088)
class UBehavior_PVEWidgetSetDefenseWaveTimer : public UBehaviorBase
{
public:
	int32_t                                            TimeUntilWave;                                 // 0x0070 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class FString                                      CustomWaveString;                              // 0x0078 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PVEWidgetSetDefenseWaveTimer");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PVEWidgetShowShardDanger
// 0x0000 (0x0070 - 0x0070)
class UBehavior_PVEWidgetShowShardDanger : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PVEWidgetShowShardDanger");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_PVEWidgetShowShardTimer
// 0x0000 (0x0070 - 0x0070)
class UBehavior_PVEWidgetShowShardTimer : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PVEWidgetShowShardTimer");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_RegisterTeleportBar
// 0x0008 (0x0070 - 0x0078)
class UBehavior_RegisterTeleportBar : public UBehaviorBase
{
public:
	class UObject*                                     Movie;                                         // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_RegisterTeleportBar");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_RemoveBuff
// 0x0030 (0x0070 - 0x00A0)
class UBehavior_RemoveBuff : public UBehaviorBase
{
public:
	class UPoplarBuffDefinition*                       TheBuffDefinition;                             // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<EBuffDefinitionTag>                   Tags;                                          // 0x0078 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	uint32_t                                           bNukeAll : 1;                                  // 0x0088 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	class AActor*                                      BuffInstigator;                                // 0x0090 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EBuffRemovalStrategy                               RemovalStrategy;                               // 0x0098 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            NumStacksToRemove;                             // 0x009C (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_RemoveBuff");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_RemoveDeathRecapBlocker
// 0x0000 (0x0070 - 0x0070)
class UBehavior_RemoveDeathRecapBlocker : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_RemoveDeathRecapBlocker");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_RemoveManagedActor
// 0x0008 (0x0070 - 0x0078)
class UBehavior_RemoveManagedActor : public UBehaviorBase
{
public:
	uint32_t                                           bDestroyActor : 1;                             // 0x0070 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_RemoveManagedActor");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_RemovePoplarAlertPoint
// 0x0008 (0x0070 - 0x0078)
class UBehavior_RemovePoplarAlertPoint : public UBehaviorBase
{
public:
	class UPoplarAlertPointDefinition*                 AlertPointDefinition;                          // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_RemovePoplarAlertPoint");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_ReportGameModeLeviathanEvent
// 0x0008 (0x0070 - 0x0078)
class UBehavior_ReportGameModeLeviathanEvent : public UBehaviorBase
{
public:
	class UGameModeLeviathanEventDefinition*           EventDef;                                      // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_ReportGameModeLeviathanEvent");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_ResetActionSkillSlotCooldown
// 0x0008 (0x0070 - 0x0078)
class UBehavior_ResetActionSkillSlotCooldown : public UBehaviorBase
{
public:
	EActionSkillSlot                                   ActionSkillSlot;                               // 0x0070 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_ResetActionSkillSlotCooldown");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_ResetAllActionSkillSlotCooldowns
// 0x0000 (0x0070 - 0x0070)
class UBehavior_ResetAllActionSkillSlotCooldowns : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_ResetAllActionSkillSlotCooldowns");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_ResetBuffDamage
// 0x0010 (0x0070 - 0x0080)
class UBehavior_ResetBuffDamage : public UBehaviorBase
{
public:
	class UPoplarBuffDefinition*                       TheBuffDefinition;                             // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              DamageFormula;                                 // 0x0078 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_ResetBuffDamage");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_ResetBuffPulseInterval
// 0x0010 (0x0070 - 0x0080)
class UBehavior_ResetBuffPulseInterval : public UBehaviorBase
{
public:
	class UPoplarBuffDefinition*                       TheBuffDefinition;                             // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              NewPulseInterval;                              // 0x0078 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_ResetBuffPulseInterval");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_ResetMatchingObjectCounts
// 0x0010 (0x0070 - 0x0080)
class UBehavior_ResetMatchingObjectCounts : public UBehaviorBase
{
public:
	uint32_t                                           bResetAll : 1;                                 // 0x0070 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	class UMatchingObjectsCounter*                     MatchCounter;                                  // 0x0078 (0x0008) [0x0000000000200001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_ResetMatchingObjectCounts");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_ResetSwitchHub
// 0x0000 (0x0070 - 0x0070)
class UBehavior_ResetSwitchHub : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_ResetSwitchHub");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_Revive
// 0x0010 (0x0070 - 0x0080)
class UBehavior_Revive : public UBehaviorBase
{
public:
	EReviveAction                                      Action;                                        // 0x0070 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class APoplarPawn*                                 Reviver;                                       // 0x0078 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_Revive");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Behavior_RewardUnlock
// 0x0018 (0x0070 - 0x0088)
class UBehavior_RewardUnlock : public UBehaviorBase
{
public:
	uint32_t                                           bNotifyHUD : 1;                                // 0x0070 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	uint32_t                                           bUnlock : 1;                                   // 0x0070 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	class TArray<class UUnlockDefinition*>             Unlocks;                                       // 0x0078 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_RewardUnlock");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_SetAttackTransitionState
// 0x0008 (0x0070 - 0x0078)
class UBehavior_SetAttackTransitionState : public UBehaviorBase
{
public:
	EAttackTransitionState                             TransitionState;                               // 0x0070 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SetAttackTransitionState");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_SetAutoAimProfile
// 0x0008 (0x0070 - 0x0078)
class UBehavior_SetAutoAimProfile : public UBehaviorBase
{
public:
	EAutoAimProfile                                    AutoAimProfile;                                // 0x0070 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SetAutoAimProfile");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_SetAvailableBuildableOnBuildNode
// 0x0008 (0x0070 - 0x0078)
class UBehavior_SetAvailableBuildableOnBuildNode : public UBehaviorBase
{
public:
	class UPoplarBuildableDefinition*                  Buildable;                                     // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SetAvailableBuildableOnBuildNode");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_SetBlockingState
// 0x0048 (0x0070 - 0x00B8)
class UBehavior_SetBlockingState : public UBehaviorBase
{
public:
	uint32_t                                           bEnabled : 1;                                  // 0x0070 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	float                                              MaxBlockingAngle;                              // 0x0074 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FAttributeInitializationData                DirectPhysicalProtectionPercentage;            // 0x0078 (0x0020) [0x0000000000000001] (CPF_Edit)    
	struct FAttributeInitializationData                RadialPhysicalProtectionPercentage;            // 0x0098 (0x0020) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SetBlockingState");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_SetBuildableState
// 0x0008 (0x0070 - 0x0078)
class UBehavior_SetBuildableState : public UBehaviorBase
{
public:
	EBuildNodeState                                    NewBuildNodeState;                             // 0x0070 (0x0001) [0x0000000000000001] (CPF_Edit)    
	int32_t                                            UpgradeLevel;                                  // 0x0074 (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SetBuildableState");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_SetBuildNodeTeam
// 0x0010 (0x0070 - 0x0080)
class UBehavior_SetBuildNodeTeam : public UBehaviorBase
{
public:
	class UPoplarTeamDefinition*                       TeamDefinition;                                // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bDestroyCurrentBuildable : 1;                  // 0x0078 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	uint32_t                                           bSetCurrentBuildableTeamToNewTeam : 1;         // 0x0078 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	uint32_t                                           bMakePreferredTeam : 1;                        // 0x0078 (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SetBuildNodeTeam");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_SetCameraFocus
// 0x0028 (0x0070 - 0x0098)
class UBehavior_SetCameraFocus : public UBehaviorBase
{
public:
	class AActor*                                      FocusActor;                                    // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       FocusBone;                                     // 0x0078 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       FocusSocket;                                   // 0x0080 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     FocusOffset;                                   // 0x0088 (0x000C) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SetCameraFocus");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_SetCameraRotation
// 0x0018 (0x0070 - 0x0088)
class UBehavior_SetCameraRotation : public UBehaviorBase
{
public:
	class AActor*                                      SourceActor;                                   // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     Direction;                                     // 0x0078 (0x000C) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SetCameraRotation");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Behavior_SetCameraViewTarget
// 0x0018 (0x0070 - 0x0088)
class UBehavior_SetCameraViewTarget : public UBehaviorBase
{
public:
	class AActor*                                      ViewTarget;                                    // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FViewTargetTransitionParams                 TransitionParams;                              // 0x0078 (0x0010) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SetCameraViewTarget");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_SetCapturePadTeamAndResetCaptureProgress
// 0x0010 (0x0070 - 0x0080)
class UBehavior_SetCapturePadTeamAndResetCaptureProgress : public UBehaviorBase
{
public:
	uint32_t                                           bResetToNeutral : 1;                           // 0x0070 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	class UPoplarTeamDefinition*                       NewTeam;                                       // 0x0078 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SetCapturePadTeamAndResetCaptureProgress");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_SetCounteringState
// 0x0008 (0x0070 - 0x0078)
class UBehavior_SetCounteringState : public UBehaviorBase
{
public:
	uint32_t                                           bEnabled : 1;                                  // 0x0070 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SetCounteringState");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_SetCreditsProvDefOverride
// 0x0010 (0x0070 - 0x0080)
class UBehavior_SetCreditsProvDefOverride : public UBehaviorBase
{
public:
	class UPoplarUnitTypeDefinition*                   UnitType;                                      // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UCreditsProviderDefinition*                  CreditsProviderDefinitionOverride;             // 0x0078 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SetCreditsProvDefOverride");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_SetEscort
// 0x0038 (0x0070 - 0x00A8)
class UBehavior_SetEscort : public UBehaviorBase
{
public:
	struct FBehaviorContextData                        EscortPawn;                                    // 0x0070 (0x0018) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FBehaviorContextData                        EscortNode;                                    // 0x0088 (0x0018) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              UpdatePeriod;                                  // 0x00A0 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SetEscort");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Behavior_SetExperienceProvDefOverride
// 0x0010 (0x0070 - 0x0080)
class UBehavior_SetExperienceProvDefOverride : public UBehaviorBase
{
public:
	class UPoplarUnitTypeDefinition*                   UnitType;                                      // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UExperienceProviderDefinition*               ExperienceProviderDefinitionOverride;          // 0x0078 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SetExperienceProvDefOverride");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_SetFocusState
// 0x0008 (0x0070 - 0x0078)
class UBehavior_SetFocusState : public UBehaviorBase
{
public:
	uint32_t                                           bEnabled : 1;                                  // 0x0070 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SetFocusState");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_SetHUDState
// 0x0010 (0x0070 - 0x0080)
class UBehavior_SetHUDState : public UBehaviorBase
{
public:
	struct FName                                       NewHUDState;                                   // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              FadeTimeSeconds;                               // 0x0078 (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SetHUDState");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_SetInTeamBase
// 0x0008 (0x0070 - 0x0078)
class UBehavior_SetInTeamBase : public UBehaviorBase
{
public:
	uint32_t                                           bInBase : 1;                                   // 0x0070 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SetInTeamBase");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_SetJumpPadUsability
// 0x0008 (0x0070 - 0x0078)
class UBehavior_SetJumpPadUsability : public UBehaviorBase
{
public:
	uint32_t                                           bJumpPadEnabled : 1;                           // 0x0070 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SetJumpPadUsability");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_SetLightbarColor
// 0x0008 (0x0070 - 0x0078)
class UBehavior_SetLightbarColor : public UBehaviorBase
{
public:
	uint32_t                                           bResetLightbarToDefaultColor : 1;              // 0x0070 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	struct FColor                                      NewLightbarColor;                              // 0x0074 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SetLightbarColor");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_SetMatchOutcomeReason
// 0x0018 (0x0070 - 0x0088)
class UBehavior_SetMatchOutcomeReason : public UBehaviorBase
{
public:
	class FString                                      MatchOutcomeReasonKey;                         // 0x0070 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UPoplarTeamDefinition*                       Team;                                          // 0x0080 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SetMatchOutcomeReason");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_SetMaxMinionWaveCount
// 0x0008 (0x0070 - 0x0078)
class UBehavior_SetMaxMinionWaveCount : public UBehaviorBase
{
public:
	int32_t                                            MaxWaveCount;                                  // 0x0070 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SetMaxMinionWaveCount");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_SetMinimapMovie
// 0x0010 (0x0070 - 0x0080)
class UBehavior_SetMinimapMovie : public UBehaviorBase
{
public:
	uint32_t                                           bRevertToOriginalMinimapMovie : 1;             // 0x0070 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	class USwfMovie*                                   NewMinimapMovie;                               // 0x0078 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SetMinimapMovie");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Behavior_SetMusketeersWidgetControlTeam
// 0x0008 (0x0070 - 0x0078)
class UBehavior_SetMusketeersWidgetControlTeam : public UBehaviorBase
{
public:
	EMapControlTeam                                    ControlTeam;                                   // 0x0070 (0x0001) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SetMusketeersWidgetControlTeam");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_SetNameplateDefinition
// 0x0010 (0x0070 - 0x0080)
class UBehavior_SetNameplateDefinition : public UBehaviorBase
{
public:
	uint32_t                                           bResetToInitialValue : 1;                      // 0x0070 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	class UPoplarNameplateTypeDefinition*              NameplateDefinition;                           // 0x0078 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SetNameplateDefinition");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_SetPlayerHelix
// 0x0010 (0x0070 - 0x0080)
class UBehavior_SetPlayerHelix : public UBehaviorBase
{
public:
	EPlayerHelixChoice                                 HelixChoices[0xA];                             // 0x0070 (0x000A) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SetPlayerHelix");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Behavior_SetPoplarMissionStatus
// 0x0008 (0x0070 - 0x0078)
class UBehavior_SetPoplarMissionStatus : public UBehaviorBase
{
public:
	EPoplarMissionStatus                               Status;                                        // 0x0070 (0x0001) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SetPoplarMissionStatus");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_SetStartRegion
// 0x0008 (0x0070 - 0x0078)
class UBehavior_SetStartRegion : public UBehaviorBase
{
public:
	class AActor*                                      StartRegion;                                   // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SetStartRegion");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_SetSwitchPadState
// 0x0008 (0x0070 - 0x0078)
class UBehavior_SetSwitchPadState : public UBehaviorBase
{
public:
	EOnStateChangedEventOutputs                        NewSwitchState;                                // 0x0070 (0x0001) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SetSwitchPadState");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_SetTeamAnnouncer
// 0x0010 (0x0070 - 0x0080)
class UBehavior_SetTeamAnnouncer : public UBehaviorBase
{
public:
	class UGearboxDialogNameTag*                       NameTag;                                       // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UDialogSet*                                  DialogSet;                                     // 0x0078 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SetTeamAnnouncer");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Behavior_SetTeamBossActor
// 0x0008 (0x0070 - 0x0078)
class UBehavior_SetTeamBossActor : public UBehaviorBase
{
public:
	class UPoplarTeamDefinition*                       OptionalTeamDefinition;                        // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SetTeamBossActor");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_SetTeamDeathDefinition
// 0x0018 (0x0070 - 0x0088)
class UBehavior_SetTeamDeathDefinition : public UBehaviorBase
{
public:
	class UPoplarTeamDefinition*                       Team;                                          // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarTeamDeathDefinition*                  TeamDeathDefinition;                           // 0x0078 (0x0008) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bResetRespawnTickets : 1;                      // 0x0080 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SetTeamDeathDefinition");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_SetTeamForPoplarInteractiveObject
// 0x0008 (0x0070 - 0x0078)
class UBehavior_SetTeamForPoplarInteractiveObject : public UBehaviorBase
{
public:
	class UPoplarTeamDefinition*                       NewTeamDefinition;                             // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SetTeamForPoplarInteractiveObject");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_SetTeamRespawnState
// 0x0010 (0x0070 - 0x0080)
class UBehavior_SetTeamRespawnState : public UBehaviorBase
{
public:
	class UPoplarTeamDefinition*                       Team;                                          // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bRespawnEnabled : 1;                           // 0x0078 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SetTeamRespawnState");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Behavior_ShowAssistAwardedMessage
// 0x0008 (0x0088 - 0x0090)
class UBehavior_ShowAssistAwardedMessage : public UBehavior_UIBase
{
public:
	int32_t                                            AssistModifierSeletectedIndex;                 // 0x0088 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int32_t                                            AssistComboSelectedIndex;                      // 0x008C (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_ShowAssistAwardedMessage");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_ShowCastBar
// 0x0048 (0x0070 - 0x00B8)
class UBehavior_ShowCastBar : public UBehaviorBase
{
public:
	class UObject*                                     HUDOwnerPawn;                                  // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              BeginValue;                                    // 0x0078 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              EndValue;                                      // 0x007C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              RateOfChange;                                  // 0x0080 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bHideBarWhenDoneAnimating : 1;                 // 0x0084 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bEnableTextOutput : 1;                         // 0x0084 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	uint32_t                                           bUseResourcePool : 1;                          // 0x0084 (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	uint32_t                                           bTeleportCastBar : 1;                          // 0x0084 (0x0004) [0x0000000000000003] [0x00000008] (CPF_Edit | CPF_Const)
	float                                              RedValue;                                      // 0x0088 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              BlueValue;                                     // 0x008C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              GreenValue;                                    // 0x0090 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UResourcePoolDefinition*                     ResourcePoolDefinition;                        // 0x0098 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            CaptionIndex;                                  // 0x00A0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class FString                                      CaptionLocalizationKey;                        // 0x00A8 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_ShowCastBar");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_ShowKnockoutMessage
// 0x0008 (0x0088 - 0x0090)
class UBehavior_ShowKnockoutMessage : public UBehavior_UIBase
{
public:
	int32_t                                            KillModifierSeletectedIndex;                   // 0x0088 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int32_t                                            KillComboSelectedIndex;                        // 0x008C (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_ShowKnockoutMessage");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_ShowLevelUpMessage
// 0x0008 (0x0088 - 0x0090)
class UBehavior_ShowLevelUpMessage : public UBehavior_UIBase
{
public:
	int32_t                                            NewLevel;                                      // 0x0088 (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_ShowLevelUpMessage");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_ShowSkillMessage
// 0x0008 (0x0088 - 0x0090)
class UBehavior_ShowSkillMessage : public UBehavior_UIBase
{
public:
	EHUDSkillMessage                                   DesiredSkillMessage;                           // 0x0088 (0x0001) [0x0000000000000001] (CPF_Edit)    
	int32_t                                            SkillSlotIndex;                                // 0x008C (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_ShowSkillMessage");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_ShowSprintMessage
// 0x0000 (0x0088 - 0x0088)
class UBehavior_ShowSprintMessage : public UBehavior_UIBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_ShowSprintMessage");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_ShowTauntPrompt
// 0x0000 (0x0088 - 0x0088)
class UBehavior_ShowTauntPrompt : public UBehavior_UIBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_ShowTauntPrompt");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_SpawnBot
// 0x0058 (0x0070 - 0x00C8)
class UBehavior_SpawnBot : public UBehaviorBase
{
public:
	class TArray<class UPoplarPlayerNameIdentifierDefinition*> Characters;                                    // 0x0070 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	int32_t                                            CharacterIndex;                                // 0x0080 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class TArray<class UPoplarTeamDefinition*>         Teams;                                         // 0x0088 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	int32_t                                            TeamIndex;                                     // 0x0098 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class TArray<class UPoplarMetaSkinDefinition*>     Skins;                                         // 0x00A0 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	int32_t                                            SkinIndex;                                     // 0x00B0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bDisableRagdoll : 1;                           // 0x00B4 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bIsNPC : 1;                                    // 0x00B4 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	uint32_t                                           bHasStarted : 1;                               // 0x00B4 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           bIsFinished : 1;                               // 0x00B4 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	int32_t                                            ExpLevel;                                      // 0x00B8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int32_t                                            Difficulty;                                    // 0x00BC (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class AActor*                                      SpawnedBotActor;                               // 0x00C0 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SpawnBot");
		}

		return uClassPointer;
	};

	void PublishBehaviorOutput(class AActor* SpawnedBot, struct FBehaviorKernelInfo& KernelInfo);
	void OnBotSpawned(class AActor* NewlySpawnedBot);
};

// Class PoplarGame.Behavior_SpawnBuildable
// 0x0010 (0x0070 - 0x0080)
class UBehavior_SpawnBuildable : public UBehaviorBase
{
public:
	int32_t                                            BuildableIndex;                                // 0x0070 (0x0004) [0x0000000000000000]               
	int32_t                                            UpgradeLevel;                                  // 0x0074 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UPoplarTeamDefinition*                       TeamDefinition;                                // 0x0078 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SpawnBuildable");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_SpawnPickup
// 0x0030 (0x0070 - 0x00A0)
class UBehavior_SpawnPickup : public UBehaviorBase
{
public:
	class TArray<class UItemPoolDefinition*>           ItemPools;                                     // 0x0070 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FName                                       Socket;                                        // 0x0080 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarUnitTypeDefinition*                   UnitTypeDef;                                   // 0x0088 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarLaneDefinition*                       LaneDef;                                       // 0x0090 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarTeamDefinition*                       TeamDef;                                       // 0x0098 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SpawnPickup");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_SpawnCurrencyPickups
// 0x0020 (0x00A0 - 0x00C0)
class UBehavior_SpawnCurrencyPickups : public UBehavior_SpawnPickup
{
public:
	class TArray<struct FCurrencyInfo>                 CurrencyDenominations;                         // 0x00A0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	int32_t                                            AmountToSpawn;                                 // 0x00B0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     SpawnLocation;                                 // 0x00B4 (0x000C) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SpawnCurrencyPickups");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_SpawnRadiateDamageActor
// 0x0030 (0x0070 - 0x00A0)
class UBehavior_SpawnRadiateDamageActor : public UBehaviorBase
{
public:
	class URadiateDamageDefinition*                    Definition;                                    // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FName                                       ReferencePointName;                            // 0x0078 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FVector                                     RelativeLocation;                              // 0x0080 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FRotator                                    RelativeRotation;                              // 0x008C (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EDirectionRelativeToParent                         SpawnDirection;                                // 0x0098 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SpawnRadiateDamageActor");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_SpawnTeamAwareDecalActor
// 0x0008 (0x00F0 - 0x00F8)
class UBehavior_SpawnTeamAwareDecalActor : public UBehavior_SpawnDecalActor
{
public:
	int32_t                                            TeamIndex;                                     // 0x00F0 (0x0004) [0x0000000000000000]               

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SpawnTeamAwareDecalActor");
		}

		return uClassPointer;
	};

	void PublishBehaviorOutput(class ADecalActorBase* Decal, struct FBehaviorKernelInfo& KernelInfo);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_StartActionSkillSlotCooldown
// 0x0008 (0x0070 - 0x0078)
class UBehavior_StartActionSkillSlotCooldown : public UBehaviorBase
{
public:
	EActionSkillSlot                                   ActionSkillSlot;                               // 0x0070 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_StartActionSkillSlotCooldown");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_StartControlledMove
// 0x0038 (0x0070 - 0x00A8)
class UBehavior_StartControlledMove : public UBehaviorBase
{
public:
	class UPoplarControlledMoveDefinition*             ControlledMove;                                // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              SpeedOverride;                                 // 0x0078 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              DurationOverride;                              // 0x007C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              LaunchAngleOverride;                           // 0x0080 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class AActor*                                      TargetActor;                                   // 0x0088 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     TargetLocation;                                // 0x0090 (0x000C) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bUseContextAsInstigator : 1;                   // 0x009C (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	class AActor*                                      Instigator;                                    // 0x00A0 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_StartControlledMove");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_StartLatentWeaponAction
// 0x0010 (0x0070 - 0x0080)
class UBehavior_StartLatentWeaponAction : public UBehaviorBase
{
public:
	class UWeaponActionComponent*                      ActionComponent;                               // 0x0070 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	float                                              OverrideActionSpeedScale;                      // 0x0078 (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_StartLatentWeaponAction");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_StopControlledMove
// 0x0010 (0x0070 - 0x0080)
class UBehavior_StopControlledMove : public UBehaviorBase
{
public:
	class UPoplarControlledMoveDefinition*             ControlledMove;                                // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bZeroVelocity : 1;                             // 0x0078 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bInterrupted : 1;                              // 0x0078 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	uint32_t                                           bStopAny : 1;                                  // 0x0078 (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_StopControlledMove");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_StopLatentWeaponAction
// 0x0008 (0x0070 - 0x0078)
class UBehavior_StopLatentWeaponAction : public UBehaviorBase
{
public:
	uint32_t                                           bInterrupted : 1;                              // 0x0070 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_StopLatentWeaponAction");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_Teleport
// 0x0058 (0x0070 - 0x00C8)
class UBehavior_Teleport : public UBehaviorBase
{
public:
	class AActor*                                      TargetActor;                                   // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FVector                                     TargetLocation;                                // 0x0078 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bFacingRelativeToTarget : 1;                   // 0x0084 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bRestrictTeleportToGround : 1;                 // 0x0084 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	struct FRelativeDirectionData                      FacingDirection;                               // 0x0088 (0x0038) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              Offset;                                        // 0x00C0 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_Teleport");
		}

		return uClassPointer;
	};

	bool Teleport(class AActor* SourceActor);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_TeleportSpectators
// 0x0028 (0x0070 - 0x0098)
class UBehavior_TeleportSpectators : public UBehaviorBase
{
public:
	uint32_t                                           bForceTeleport : 1;                            // 0x0070 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	uint32_t                                           bUseMapFixedCamPoint : 1;                      // 0x0070 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	int32_t                                            FixedCamIndex;                                 // 0x0074 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class AActor*                                      ActorToUseAsTeleportPoint;                     // 0x0078 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     Location;                                      // 0x0080 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FRotator                                    Rotation;                                      // 0x008C (0x000C) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_TeleportSpectators");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_TestAllegiance
// 0x0008 (0x0070 - 0x0078)
class UBehavior_TestAllegiance : public UBehaviorBase
{
public:
	class UPawnAllegiance*                             Allegiance;                                    // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_TestAllegiance");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_ToggleCinematicMode
// 0x0010 (0x0070 - 0x0080)
class UBehavior_ToggleCinematicMode : public UBehaviorBase
{
public:
	class UCinematicModeDefinition*                    ModeDefinition;                                // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bEnableCinematicMode : 1;                      // 0x0078 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	uint32_t                                           bDisableMovement : 1;                          // 0x0078 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	uint32_t                                           bDisableTurning : 1;                           // 0x0078 (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	uint32_t                                           bHidePlayer : 1;                               // 0x0078 (0x0004) [0x0000000000000001] [0x00000008] (CPF_Edit)
	uint32_t                                           bDisableInput : 1;                             // 0x0078 (0x0004) [0x0000000000000001] [0x00000010] (CPF_Edit)
	uint32_t                                           bHideHUD : 1;                                  // 0x0078 (0x0004) [0x0000000000000001] [0x00000020] (CPF_Edit)
	uint32_t                                           bEnableGodMode : 1;                            // 0x0078 (0x0004) [0x0000000000000001] [0x00000040] (CPF_Edit)
	uint32_t                                           bEnableNoTarget : 1;                           // 0x0078 (0x0004) [0x0000000000000001] [0x00000080] (CPF_Edit)
	uint32_t                                           bAffectsAudio : 1;                             // 0x0078 (0x0004) [0x0000000000000001] [0x00000100] (CPF_Edit)
	uint32_t                                           bCinematicSplitScreen : 1;                     // 0x0078 (0x0004) [0x0000000000000001] [0x00000200] (CPF_Edit)
	uint32_t                                           bHideOutlines : 1;                             // 0x0078 (0x0004) [0x0000000000000001] [0x00000400] (CPF_Edit)
	uint32_t                                           bDisableSkills : 1;                            // 0x0078 (0x0004) [0x0000000000000001] [0x00000800] (CPF_Edit)
	uint32_t                                           bDisableScreenParticles : 1;                   // 0x0078 (0x0004) [0x0000000000000001] [0x00001000] (CPF_Edit)
	ECinematicModeApplication                          ApplicationMode;                               // 0x007C (0x0001) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_ToggleCinematicMode");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_ToggleSurrenderAbility
// 0x0010 (0x0070 - 0x0080)
class UBehavior_ToggleSurrenderAbility : public UBehaviorBase
{
public:
	uint32_t                                           bSurrenderDisabled : 1;                        // 0x0070 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	class UPoplarTeamDefinition*                       TeamDefinition;                                // 0x0078 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_ToggleSurrenderAbility");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_Trace
// 0x0038 (0x0070 - 0x00A8)
class UBehavior_Trace : public UBehaviorBase
{
public:
	struct FVector                                     Start;                                         // 0x0070 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     End;                                           // 0x007C (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     Direction;                                     // 0x0088 (0x000C) [0x0000000000000001] (CPF_Edit)    
	float                                              Distance;                                      // 0x0094 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FBehaviorLineTraceFlags                     Flags;                                         // 0x0098 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     Extent;                                        // 0x009C (0x000C) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_Trace");
		}

		return uClassPointer;
	};

	void eventPublishBehaviorOutput(class AActor* HitActor, const struct FVector& HitLocation, const struct FVector& HitNormal, struct FBehaviorKernelInfo& KernelInfo);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_TriggerAnnouncerDialog
// 0x0000 (0x00B0 - 0x00B0)
class UBehavior_TriggerAnnouncerDialog : public UBehavior_TriggerDialog
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_TriggerAnnouncerDialog");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
	class UIDialogEventListener* FindTeamAnnouncer(class UObject* ContextObject);
};

// Class PoplarGame.Behavior_TriggerTrainingAudio
// 0x0030 (0x0070 - 0x00A0)
class UBehavior_TriggerTrainingAudio : public UBehaviorBase
{
public:
	class UStatDefinition*                             StatToUse;                                     // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	EPoplarTrainingTriggerType                         StatTriggerType;                               // 0x0078 (0x0001) [0x0000000000000001] (CPF_Edit)    
	EPoplarTrainingAudioPlayType                       TrainingPlayType;                              // 0x0079 (0x0001) [0x0000000000000001] (CPF_Edit)    
	EPoplarTrainingTriggerType                         CommandRankTriggerType;                        // 0x007A (0x0001) [0x0000000000000001] (CPF_Edit)    
	EPoplarTrainingMessageType                         TrainingMessageType;                           // 0x007B (0x0001) [0x0000000000000001] (CPF_Edit)    
	EPoplarTrainingAudioState                          CurrentAudioState;                             // 0x007C (0x0001) [0x0000000000002000] (CPF_Transient)
	int32_t                                            StatIncrementValue;                            // 0x0080 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int32_t                                            StatCompareValue;                              // 0x0084 (0x0004) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bPlayNovaMovie : 1;                            // 0x0088 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	uint32_t                                           bUpdateStatBeforeTriggeringAudio : 1;          // 0x0088 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	uint32_t                                           bPlayEvenWhenTrainingDisabled : 1;             // 0x0088 (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	int32_t                                            CommandRankCompareValue;                       // 0x008C (0x0004) [0x0000000000000001] (CPF_Edit)    
	class TArray<class UAkEvent*>                      AudioEvents;                                   // 0x0090 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_TriggerTrainingAudio");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Behavior_TurretWarning
// 0x0008 (0x0070 - 0x0078)
class UBehavior_TurretWarning : public UBehaviorBase
{
public:
	ETurretWarningOption                               Option;                                        // 0x0070 (0x0001) [0x0000000000000001] (CPF_Edit)    
	ETargetedWarningSeverity                           Severity;                                      // 0x0071 (0x0001) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_TurretWarning");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_UnitTest_StartBotSpawnTest
// 0x0038 (0x0098 - 0x00D0)
class UBehavior_UnitTest_StartBotSpawnTest : public UBehavior_UnitTest
{
public:
	uint32_t                                           bHasTriedToSpawnBot : 1;                       // 0x0098 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	class AActor*                                      BotSpawned;                                    // 0x00A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarPlayerNameIdentifierDefinition*       CharacterNameId;                               // 0x00A8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarTeamDefinition*                       BotTeam;                                       // 0x00B0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	int32_t                                            StartLevel;                                    // 0x00B8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class TArray<class UObject*>                       Targets;                                       // 0x00C0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_UnitTest_StartBotSpawnTest");
		}

		return uClassPointer;
	};

	void OnBotSpawned(class AActor* Bot);
	void PublishBehaviorOutput(class UObject* SpawnedBot, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_UnitTest_StartPlayerTest
// 0x0028 (0x0098 - 0x00C0)
class UBehavior_UnitTest_StartPlayerTest : public UBehavior_UnitTest
{
public:
	class TArray<struct FPlayerTestDefFromCharacterName> PlayerTestDefLookup;                           // 0x0098 (0x0010) [0x0000000000404000] (CPF_Config | CPF_NeedCtorLink)
	uint32_t                                           bHasTriedToSelectClass : 1;                    // 0x00A8 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	class UPoplarPlayerNameIdentifierDefinition*       CharacterNameId;                               // 0x00B0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	int32_t                                            StartLevel;                                    // 0x00B8 (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_UnitTest_StartPlayerTest");
		}

		return uClassPointer;
	};

	void PublishBehaviorOutput(class UObject* PlayerTestDef, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_UnitTest_WaitForPlayerAttack
// 0x0000 (0x0098 - 0x0098)
class UBehavior_UnitTest_WaitForPlayerAttack : public UBehavior_UnitTest
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_UnitTest_WaitForPlayerAttack");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Behavior_UnitTestHelper_GTDFromPTD
// 0x0020 (0x0070 - 0x0090)
class UBehavior_UnitTestHelper_GTDFromPTD : public UBehaviorBase
{
public:
	class UPoplarPlayerTestDefinition*                 PTD;                                           // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	EPlayerTestDefOptions                              PTDOption;                                     // 0x0078 (0x0001) [0x0000000000000001] (CPF_Edit)    
	class FString                                      TestName;                                      // 0x0080 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_UnitTestHelper_GTDFromPTD");
		}

		return uClassPointer;
	};

	void PublishBehaviorOutput(class UObject* GTD, struct FBehaviorKernelInfo& KernelInfo);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_UnitTestHelper_IterateCharacters
// 0x0008 (0x0070 - 0x0078)
class UBehavior_UnitTestHelper_IterateCharacters : public UBehaviorBase
{
public:
	int32_t                                            IterationCount;                                // 0x0070 (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_UnitTestHelper_IterateCharacters");
		}

		return uClassPointer;
	};

	void PublishBehaviorOutput(class UObject* CharacterNameId, struct FBehaviorKernelInfo& KernelInfo);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_UpdatePoplarMissionObjective
// 0x0018 (0x0070 - 0x0088)
class UBehavior_UpdatePoplarMissionObjective : public UBehaviorBase
{
public:
	EPoplarMissionObjectiveEvent                       UpdateAction;                                  // 0x0070 (0x0001) [0x0000000000000001] (CPF_Edit)    
	class UPoplarMissionObjectiveDefinition*           Objective;                                     // 0x0078 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarMissionDefinition*                    Mission;                                       // 0x0080 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_UpdatePoplarMissionObjective");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_UpdateStat
// 0x0010 (0x0070 - 0x0080)
class UBehavior_UpdateStat : public UBehaviorBase
{
public:
	class UStatDefinition*                             StatToUpdate;                                  // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	EStatCategoryTypes                                 StatCategory;                                  // 0x0078 (0x0001) [0x0000000000000001] (CPF_Edit)    
	int32_t                                            NewValue;                                      // 0x007C (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_UpdateStat");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Behavior_WaitForBinkToFinish
// 0x0000 (0x0070 - 0x0070)
class UBehavior_WaitForBinkToFinish : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_WaitForBinkToFinish");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.BehaviorSequenceEnableByPoplarMission
// 0x0028 (0x0068 - 0x0090)
class UBehaviorSequenceEnableByPoplarMission : public UBehaviorSequenceCustomEnableCondition
{
public:
	struct FPointer                                    VfTable_IIPoplarMission;                       // 0x0068 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UPoplarMissionDefinition*                    LinkedMission;                                 // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FPoplarMissionStateSelectionData            MissionStatesToLinkTo;                         // 0x0078 (0x0004) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bIsObjectiveSpecific : 1;                      // 0x007C (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	uint32_t                                           bInstanced : 1;                                // 0x007C (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	uint32_t                                           bCreateWaypoint : 1;                           // 0x007C (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	class UPoplarMissionObjectiveDefinition*           LinkedObjective;                               // 0x0080 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FPoplarMissionObjectiveStateSelectionData   ObjectiveStatesToLinkTo;                       // 0x0088 (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.BehaviorSequenceEnableByPoplarMission");
		}

		return uClassPointer;
	};

	void eventMissionReactionObjectiveComplete(const struct FPoplarMissionEventData& EventData);
	void eventMissionReactionObjectiveCleared(const struct FPoplarMissionEventData& EventData);
	void eventMissionReactionObjectiveUpdated(const struct FPoplarMissionEventData& EventData);
	void eventMissionReactionObjectiveSetChanged(const struct FPoplarMissionEventData& EventData);
	void eventMissionReactionStatusChanged(const struct FPoplarMissionEventData& EventData);
	void eventMissionReactionInitialized(const struct FPoplarMissionEventData& EventData);
};

// Class PoplarGame.BoostUIInfoDefinition
// 0x0018 (0x0058 - 0x0070)
class UBoostUIInfoDefinition : public UGBXDefinition
{
public:
	class USwfMovie*                                   MarketplaceIcon;                               // 0x0058 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class USwfMovie*                                   TickerIcon;                                    // 0x0060 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            SortValue;                                     // 0x0068 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.BoostUIInfoDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.BuffComponent
// 0x1CA0 (0x0090 - 0x1D30)
class UBuffComponent : public UActorComponent
{
public:
	class UIBuffable*                                  BuffableOwner_Object;                          // 0x0090 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UIBuffable*                                  BuffableOwner_Interface;                       // 0x0098 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarBuffManager*                          PoplarBuffManager;                             // 0x00A0 (0x0008) [0x0000000000003000] (CPF_Native | CPF_Transient)
	int32_t                                            BuffManagerGUID;                               // 0x00A8 (0x0004) [0x0000000000002000] (CPF_Transient)
	class APerkAttributeContextHelper*                 PlayerPerks[0x3];                              // 0x00B0 (0x0018) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FServerSideBuffInfo>           ServerSideBuffs;                               // 0x00C8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<struct FBuffInfo>                     QueuedBuffs;                                   // 0x00D8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FBuffInfo                                   PreviousReplicatedBuffs[0x32];                 // 0x00E8 (0x1C20) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            ReplicatedBuffsArraySize;                      // 0x1D08 (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FBuffInfo>                     BuffsThatDamageThisTick;                       // 0x1D10 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            EstimatedMemoryUsageLastTick;                  // 0x1D20 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            BuffInstancesRunningLastTick;                  // 0x1D24 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bShouldUpdateResourcePools : 1;                // 0x1D28 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bReapplyingExistingBuffs : 1;                  // 0x1D28 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.BuffComponent");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.BuffExpressionEvaluator
// 0x0010 (0x0058 - 0x0068)
class UBuffExpressionEvaluator : public UExpressionEvaluator
{
public:
	EBuffCheck                                         BuffCheck;                                     // 0x0058 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarBuffDefinition*                       BuffDefinition;                                // 0x0060 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.BuffExpressionEvaluator");
		}

		return uClassPointer;
	};

	bool Evaluate(class UObject* ContextSource);
};

// Class PoplarGame.CommandRing
// 0x00B8 (0x0240 - 0x02F8)
class ACommandRing : public AActor
{
public:
	struct FPointer                                    VfTable_IIBodyCompositionInstance;             // 0x0240 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIInstanceData;                        // 0x0248 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIBehaviorConsumer;                    // 0x0250 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UCommandRingDefinition*                      Definition;                                    // 0x0258 (0x0008) [0x0000000000000000]               
	class APoplarPlayerStateInfo*                      PoplarPSI;                                     // 0x0260 (0x0008) [0x0000000000000000]               
	class APoplarPawn*                                 PoplarPawn;                                    // 0x0268 (0x0008) [0x0000000000000000]               
	uint32_t                                           bTargetValid : 1;                              // 0x0270 (0x0004) [0x0000000000000000] [0x00000001] 
	uint32_t                                           bForceTargetReplication : 1;                   // 0x0270 (0x0004) [0x0000000000000000] [0x00000002] 
	uint32_t                                           bLocalOnlyTarget : 1;                          // 0x0270 (0x0004) [0x0000000000000000] [0x00000004] 
	uint32_t                                           bTargetsDynamicActors : 1;                     // 0x0270 (0x0004) [0x0000000000000000] [0x00000008] 
	class AActor*                                      TargetActor;                                   // 0x0278 (0x0008) [0x0000000000000000]               
	struct FVector                                     TargetLocation;                                // 0x0280 (0x000C) [0x0000000000000000]               
	struct FVector                                     TargetNormal;                                  // 0x028C (0x000C) [0x0000000000000000]               
	class AActor*                                      TargetLocationBase;                            // 0x0298 (0x0008) [0x0000000000000000]               
	struct FInstanceData2                              InstanceState;                                 // 0x02A0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FCompressedBodyState2                       CompressedBodyState;                           // 0x02B0 (0x0010) [0x0000000000002000] (CPF_Transient)
	struct FBehaviorConsumerHandle                     ConsumerHandle;                                // 0x02C0 (0x0004) [0x0000000000000000]               
	float                                              LastReplicatedTime;                            // 0x02C4 (0x0004) [0x0000000000000000]               
	struct FVector                                     LastReplicatedTargetLocation;                  // 0x02C8 (0x000C) [0x0000000000000000]               
	float                                              NextTickTime;                                  // 0x02D4 (0x0004) [0x0000000000000000]               
	class TArray<class UCommandRingComponent*>         CommandRingComponents;                         // 0x02D8 (0x0010) [0x0000000004480008] (CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_EditInline)
	class TArray<struct FCRVisualElementData>          VisualElements;                                // 0x02E8 (0x0010) [0x0000000000480000] (CPF_Component | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.CommandRing");
		}

		return uClassPointer;
	};

	bool GetInstanceDataState(struct FInstanceData2& OutInstanceDataState);
	bool eventRemoveInstanceData(const struct FName& DataName);
	bool eventGetInstanceData(const struct FName& DataName, class TArray<struct FInstanceDataItem2>& InstanceData);
	bool eventSetInstanceData(const struct FInstanceDataItem2& InstanceData, bool optionalBAllowDuplicateNames);
	void ForceColorRefresh(class UPrimitiveComponent* PrimComp);
	struct FBehaviorConsumerHandle GetBehaviorConsumerHandle();
	class AActor* GetRingTargetLocationBase();
	struct FVector GetRingTargetNormal();
	struct FVector GetRingTargetLocation(bool bRelative);
	class AActor* GetRingTargetActor();
	bool IsLocalOnlyTarget();
	bool HasValidTarget(bool optionalBCheckLocalTarget);
	void UpdateRingTarget();
	void eventInitializeFromDefinition(class UCommandRingDefinition* InDefinition, class APoplarPlayerStateInfo* InPoplarPSI);
	void InitBody();
};

// Class PoplarGame.CommandRingComponent
// 0x0000 (0x0090 - 0x0090)
class UCommandRingComponent : public UActorComponent
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.CommandRingComponent");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.AOECommandRingComponent
// 0x0020 (0x0090 - 0x00B0)
class UAOECommandRingComponent : public UCommandRingComponent
{
public:
	uint32_t                                           bApplyToTarget : 1;                            // 0x0090 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	ETargetCommandRingAlignmentType                    AlignmentType;                                 // 0x0094 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	ETargetCommandRingLocationType                     LocationType;                                  // 0x0095 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              ProjectToGroundDistance;                       // 0x0098 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FName                                       ElementInstancedDataName;                      // 0x009C (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FName                                       ElementAttachmentPointName;                    // 0x00A4 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.AOECommandRingComponent");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.ControlledMoveCommandRingComponent
// 0x0030 (0x0090 - 0x00C0)
class UControlledMoveCommandRingComponent : public UCommandRingComponent
{
public:
	class UPoplarControlledMoveDefinition*             MoveDefinition;                                // 0x0090 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              SimulationStepTime;                            // 0x0098 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bStopOnAnyHit : 1;                             // 0x009C (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bStopOnAnyWallHit : 1;                         // 0x009C (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	uint32_t                                           bStopOnMoveDeviation : 1;                      // 0x009C (0x0004) [0x0000000000000002] [0x00000004] (CPF_Const)
	uint32_t                                           bPlaceTrajectometerAtFeet : 1;                 // 0x009C (0x0004) [0x0000000000000003] [0x00000008] (CPF_Edit | CPF_Const)
	uint32_t                                           bSetCommandRingTargetLocation : 1;             // 0x009C (0x0004) [0x0000000000000003] [0x00000010] (CPF_Edit | CPF_Const)
	uint32_t                                           bDrawDebugTrajectory : 1;                      // 0x009C (0x0004) [0x0000000000000003] [0x00000020] (CPF_Edit | CPF_Const)
	float                                              StopOnMoveDeviationAngle;                      // 0x00A0 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FName                                       TrajectometerInstancedDataName;                // 0x00A4 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FVector                                     TrajectometerOffset;                           // 0x00AC (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class APoplarTrajectometerPawn*                    Trajectometer;                                 // 0x00B8 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.ControlledMoveCommandRingComponent");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.ProjectileTrajectometerCommandRingComponent
// 0x0048 (0x0090 - 0x00D8)
class UProjectileTrajectometerCommandRingComponent : public UCommandRingComponent
{
public:
	class UPoplarProjectileDefinition*                 ProjectileDefinition;                          // 0x0090 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              SimulationMaxTime;                             // 0x0098 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              SimulationStepTime;                            // 0x009C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EDirectionRelativeToParent                         StartDirection;                                // 0x00A0 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bTransformRelativeLocationBySpawnDirection : 1;// 0x00A4 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bUseSocketAsParentForSpawnOrientation : 1;     // 0x00A4 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	uint32_t                                           bStartFromViewLocation : 1;                    // 0x00A4 (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	uint32_t                                           bStartFromWeapon : 1;                          // 0x00A4 (0x0004) [0x0000000000000003] [0x00000008] (CPF_Edit | CPF_Const)
	uint32_t                                           bConvergeTowardsAimLocation : 1;               // 0x00A4 (0x0004) [0x0000000000000003] [0x00000010] (CPF_Edit | CPF_Const)
	uint32_t                                           bUsePawnAsSpeedFormulaContext : 1;             // 0x00A4 (0x0004) [0x0000000000000003] [0x00000020] (CPF_Edit | CPF_Const)
	uint32_t                                           bUseCustomCollision : 1;                       // 0x00A4 (0x0004) [0x0000000000000003] [0x00000040] (CPF_Edit | CPF_Const)
	uint32_t                                           bEndpointIsFallbackTarget : 1;                 // 0x00A4 (0x0004) [0x0000000000000003] [0x00000080] (CPF_Edit | CPF_Const)
	uint32_t                                           bDrawDebugTrajectory : 1;                      // 0x00A4 (0x0004) [0x0000000000000003] [0x00000100] (CPF_Edit | CPF_Const)
	struct FVector                                     StartRelativeLocation;                         // 0x00A8 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FName                                       StartAttachmentPointName;                      // 0x00B4 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FName                                       TrajectometerInstancedDataName;                // 0x00BC (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTargetSearchFilter_Base*              CustomCollisionFilter;                         // 0x00C8 (0x0008) [0x0000000006400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_NoClear | CPF_EditInline)
	class APoplarTrajectometerProjectile*              Trajectometer;                                 // 0x00D0 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.ProjectileTrajectometerCommandRingComponent");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.TargetingCommandRingComponent
// 0x0020 (0x0090 - 0x00B0)
class UTargetingCommandRingComponent : public UCommandRingComponent
{
public:
	class TArray<class UPoplarTargetSearchDefinition*> SearchCriteria;                                // 0x0090 (0x0010) [0x000000000440000B] (CPF_Edit | CPF_Const | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	uint32_t                                           bUsePlayerLocationAsFallback : 1;              // 0x00A0 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bCanPlaceOnMovers : 1;                         // 0x00A0 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	uint32_t                                           bAdjustForSearchResultOffset : 1;              // 0x00A0 (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	uint32_t                                           bUpdateElementTransform : 1;                   // 0x00A0 (0x0004) [0x0000000000000003] [0x00000008] (CPF_Edit | CPF_Const)
	ETargetCommandRingAlignmentType                    AlignmentType;                                 // 0x00A4 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	ETargetCommandRingLocationType                     PlayerFallbackLocationType;                    // 0x00A5 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FName                                       ElementInstancedDataName;                      // 0x00A8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.TargetingCommandRingComponent");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.CommandRingDefinition
// 0x0030 (0x0058 - 0x0088)
class UCommandRingDefinition : public UGBXDefinition
{
public:
	struct FPointer                                    VfTable_IIBodyProvider;                        // 0x0058 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIBehaviorProvider;                    // 0x0060 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	float                                              TickRate;                                      // 0x0068 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UClass*                                      CommandRingClass;                              // 0x0070 (0x0008) [0x0000000000020003] (CPF_Edit | CPF_Const | CPF_EditConst)
	class UBodyProviderDefinition*                     BodyProvider;                                  // 0x0078 (0x0008) [0x0000000000000000]               
	class UBehaviorProviderDefinition*                 BehaviorProviderDefinition;                    // 0x0080 (0x0008) [0x0000000000000002] (CPF_Const)   

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.CommandRingDefinition");
		}

		return uClassPointer;
	};

	void OnReleaseTarget(class AActor* TargetActor, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnAcquiredTarget(class AActor* TargetActor, const struct FVector& TargetLocation, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnSpawn(struct FBehaviorConsumerHandle& ConsumerHandle);
};

// Class PoplarGame.CompetitiveSkillRatingDefinition
// 0x0008 (0x0058 - 0x0060)
class UCompetitiveSkillRatingDefinition : public UGBXDefinition
{
public:
	float                                              MinimumValue;                                  // 0x0058 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              MaximumValue;                                  // 0x005C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.CompetitiveSkillRatingDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.CompetitiveSkillRatingGlobalsDefinition
// 0x0010 (0x0058 - 0x0068)
class UCompetitiveSkillRatingGlobalsDefinition : public UGBXDefinition
{
public:
	class UCompetitiveSkillRatingDefinition*           RankedPlayCSRDef;                              // 0x0058 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UCompetitiveSkillRatingDefinition*           NormalPlayCSRDef;                              // 0x0060 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.CompetitiveSkillRatingGlobalsDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.ControlledMoveComponent
// 0x0110 (0x0090 - 0x01A0)
class UControlledMoveComponent : public UActorComponent
{
public:
	class APoplarPawn*                                 MyOwnerPawn;                                   // 0x0090 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UIControlledMove*                            MyCMOwner_Object;                              // 0x0098 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UIControlledMove*                            MyCMOwner_Interface;                           // 0x00A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarControlledMoveDefinition*             CurrentMove;                                   // 0x00A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              Speed;                                         // 0x00B0 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              BaseSpeed;                                     // 0x00B4 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              StrafeSpeed;                                   // 0x00B8 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              StartTime;                                     // 0x00BC (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TrajectoryTime;                                // 0x00C0 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              Duration;                                      // 0x00C4 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              LaunchAngle;                                   // 0x00C8 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TrajectoryGravity;                             // 0x00CC (0x0004) [0x0000000000002000] (CPF_Transient)
	class AActor*                                      CachedTargetActor;                             // 0x00D0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     CurrentTargetLocation;                         // 0x00D8 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     CurrentDirection;                              // 0x00E4 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     StartLocation;                                 // 0x00F0 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     StartVelocity;                                 // 0x00FC (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     InitialDirection;                              // 0x0108 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     InitialTargetLocation;                         // 0x0114 (0x000C) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bUsesTrajectory : 1;                           // 0x0120 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bEaseInSpeedConstraints : 1;                   // 0x0120 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bRestoreNavMeshWalkingPhysics : 1;             // 0x0120 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           bStoppingMove : 1;                             // 0x0120 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	uint32_t                                           bStartingMove : 1;                             // 0x0120 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	uint32_t                                           bBlockStartingNewMove : 1;                     // 0x0120 (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	uint32_t                                           bReachedTarget : 1;                            // 0x0120 (0x0004) [0x0000000000002000] [0x00000040] (CPF_Transient)
	uint32_t                                           bReachedLeapApex : 1;                          // 0x0120 (0x0004) [0x0000000000002000] [0x00000080] (CPF_Transient)
	uint32_t                                           bLeapLandingStarted : 1;                       // 0x0120 (0x0004) [0x0000000000002000] [0x00000100] (CPF_Transient)
	uint32_t                                           bControlledFalling : 1;                        // 0x0120 (0x0004) [0x0000000000002000] [0x00000200] (CPF_Transient)
	struct FVector                                     FrameMoveVector;                               // 0x0124 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     CurrentFlightVelocity;                         // 0x0130 (0x000C) [0x0000000000002000] (CPF_Transient)
	float                                              TargetControlVelocity;                         // 0x013C (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              LimitedTargetControlDistance;                  // 0x0140 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TargetControlDelay;                            // 0x0144 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FRotator                                    MoveRotationFromCamera;                        // 0x0148 (0x000C) [0x0000000000002000] (CPF_Transient)
	float                                              CachedMinHitWall;                              // 0x0154 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CachedMaxStepHeight;                           // 0x0158 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CachedAirSpeed;                                // 0x015C (0x0004) [0x0000000000002000] (CPF_Transient)
	class UAttributeModifier*                          GravityScaleModifier;                          // 0x0160 (0x0008) [0x0000000000002000] (CPF_Transient)
	EFacingStyle                                       CachedFacingStyle;                             // 0x0168 (0x0001) [0x0000000000002000] (CPF_Transient)
	float                                              aForwardInput;                                 // 0x016C (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              aStrafeInput;                                  // 0x0170 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              aLookUpInput;                                  // 0x0174 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              aTurnInput;                                    // 0x0178 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __OnMoveFinished__Delegate;                    // 0x0180 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnHitSomething__Delegate;                    // 0x0190 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.ControlledMoveComponent");
		}

		return uClassPointer;
	};

	bool OnIgnoreBlockingBy(class AActor* Other);
	void OnHitSomething(class AActor* OtherActor, const struct FVector& HitNormal);
	void OnMoveFinished(bool bInterrupted);
};

// Class PoplarGame.CreditsProviderDefinition
// 0x0028 (0x0058 - 0x0080)
class UCreditsProviderDefinition : public UGBXDefinition
{
public:
	struct FCreditsProviderData                        CreditsProvData;                               // 0x0058 (0x0028) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.CreditsProviderDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.CrowdControlDefinition
// 0x0028 (0x0058 - 0x0080)
class UCrowdControlDefinition : public UGBXDefinition
{
public:
	struct FPointer                                    VfTable_IIBehaviorProvider;                    // 0x0058 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UBehaviorProviderDefinition*                 BehaviorProviderDefinition;                    // 0x0060 (0x0008) [0x0000000000000002] (CPF_Const)   
	ECrowdControlState                                 CrowdControlEffect;                            // 0x0068 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    CrowdControlAkEvent;                           // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bUnaffectedByDurationModifiers : 1;            // 0x0078 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.CrowdControlDefinition");
		}

		return uClassPointer;
	};

	void OnCrowdControlEnded(EBehaviorEventNetworkRole EventOutput, class UObject* CCRecipient, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnCrowdControlStarted(EBehaviorEventNetworkRole EventOutput, class UObject* CCInstigator, class UObject* CCRecipient, struct FBehaviorConsumerHandle& ConsumerHandle);
};

// Class PoplarGame.CrowdControlExpressionEvaluator
// 0x0008 (0x0058 - 0x0060)
class UCrowdControlExpressionEvaluator : public UExpressionEvaluator
{
public:
	ECrowdControlCheck                                 CrowdControlCheck;                             // 0x0058 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	ECrowdControlState                                 CrowdControl;                                  // 0x0059 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.CrowdControlExpressionEvaluator");
		}

		return uClassPointer;
	};

	bool Evaluate(class UObject* ContextSource);
};

// Class PoplarGame.DeathRecapAttributeContextResolver
// 0x0008 (0x0058 - 0x0060)
class UDeathRecapAttributeContextResolver : public UAttributeContextResolver
{
public:
	EDeathRecapContextType                             DeathRecapContext;                             // 0x0058 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.DeathRecapAttributeContextResolver");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.DeathRecapAttributeValueResolver
// 0x0008 (0x0058 - 0x0060)
class UDeathRecapAttributeValueResolver : public UAttributeValueResolver
{
public:
	EDeathRecapGeneralStat                             DeathRecapGeneralStat;                         // 0x0058 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.DeathRecapAttributeValueResolver");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.DeathRecapDefinition
// 0x0020 (0x0058 - 0x0078)
class UDeathRecapDefinition : public UGBXDefinition
{
public:
	class UUtilityDefinition*                          DeathRecapHintUtilityDef;                      // 0x0058 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EActionType                                        RecapActionTypePriority[0x5];                  // 0x0060 (0x0005) [0x0000000000000001] (CPF_Edit)    
	class TArray<class UDeathRecapHintMessageDefinition*> HintMessageDefs;                               // 0x0068 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.DeathRecapDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.DeathRecapHintMessageDefinition
// 0x0010 (0x0058 - 0x0068)
class UDeathRecapHintMessageDefinition : public UGBXDefinition
{
public:
	class FString                                      HintMessage;                                   // 0x0058 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.DeathRecapHintMessageDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.DerivedStatsHelperDefinition
// 0x0000 (0x0058 - 0x0058)
class UDerivedStatsHelperDefinition : public UGBXDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.DerivedStatsHelperDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.DynamicTeamAwareDecalActor
// 0x0010 (0x0258 - 0x0268)
class ADynamicTeamAwareDecalActor : public ADynamicDecalActor
{
public:
	struct FPointer                                    VfTable_IIPoplarTeamAffiliated;                // 0x0258 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	int32_t                                            TeamIndex;                                     // 0x0260 (0x0004) [0x0000000000000000]               

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.DynamicTeamAwareDecalActor");
		}

		return uClassPointer;
	};

	class UPoplarTeamDefinition* GetPoplarTeamDefinition();
	void SetPoplarTeamInfo(class APoplarTeamInfo* InTeamInfo);
	class APoplarTeamInfo* GetPoplarTeamInfo();
	void ForceColorRefresh();
	class UGBXDefinition* GetTeamDefinition();
	void SetTeamInfo(class ATeamInfo* InTeamInfo);
	class ATeamInfo* GetTeamInfo();
};

// Class PoplarGame.DynamicTeamAwareReplicatedDecalActor
// 0x0010 (0x02A8 - 0x02B8)
class ADynamicTeamAwareReplicatedDecalActor : public ADynamicReplicatedDecalActor
{
public:
	struct FPointer                                    VfTable_IIPoplarTeamAffiliated;                // 0x02A8 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	int32_t                                            TeamIndex;                                     // 0x02B0 (0x0004) [0x0000000000000020] (CPF_Net)     

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.DynamicTeamAwareReplicatedDecalActor");
		}

		return uClassPointer;
	};

	class UPoplarTeamDefinition* GetPoplarTeamDefinition();
	void SetPoplarTeamInfo(class APoplarTeamInfo* InTeamInfo);
	class APoplarTeamInfo* GetPoplarTeamInfo();
	void ForceColorRefresh();
	class UGBXDefinition* GetTeamDefinition();
	void SetTeamInfo(class ATeamInfo* InTeamInfo);
	class ATeamInfo* GetTeamInfo();
	void eventReplicatedEvent(const struct FName& VarName);
};

// Class PoplarGame.ErrorReporter
// 0x0068 (0x0058 - 0x00C0)
class UErrorReporter : public UObject
{
public:
	class TArray<struct FErrorData>                    ErrorDataMap;                                  // 0x0058 (0x0010) [0x0000000000404000] (CPF_Config | CPF_NeedCtorLink)
	class UWillowGFxDialogBox*                         ErrorDlg;                                      // 0x0068 (0x0008) [0x0000000000002000] (CPF_Transient)
	class FString                                      CachedURL;                                     // 0x0070 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class FString                                      ErrorFormat;                                   // 0x0080 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      OkButtonPrompt;                                // 0x0090 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MoreInfoButtonPrompt;                          // 0x00A0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnErrorDialogClosed__Delegate;               // 0x00B0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.ErrorReporter");
		}

		return uClassPointer;
	};

	bool OnErrorDlgClicked(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId);
	void OnErrorDialogClosed();
};

// Class PoplarGame.EventFilter_GameInfoEvent
// 0x0018 (0x0058 - 0x0070)
class UEventFilter_GameInfoEvent : public UBehaviorEventFilterBase
{
public:
	class UPoplarLaneDefinition*                       LaneDef;                                       // 0x0058 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       TeamDef;                                       // 0x0060 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            IndexFilter;                                   // 0x0068 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.EventFilter_GameInfoEvent");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.EventFilter_OnGameObjectDestroyed
// 0x0020 (0x0058 - 0x0078)
class UEventFilter_OnGameObjectDestroyed : public UBehaviorEventFilterBase
{
public:
	class UPoplarUnitTypeDefinition*                   UnitTypeDef;                                   // 0x0058 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarLaneDefinition*                       LaneDef;                                       // 0x0060 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       TeamDef;                                       // 0x0068 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            IndexFilter;                                   // 0x0070 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.EventFilter_OnGameObjectDestroyed");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.EventFilter_OnSpawnerEvent
// 0x0020 (0x0058 - 0x0078)
class UEventFilter_OnSpawnerEvent : public UBehaviorEventFilterBase
{
public:
	class UPoplarSpawnerTypeDefinition*                SpawnerTypeDef;                                // 0x0058 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarLaneDefinition*                       LaneDef;                                       // 0x0060 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       TeamDef;                                       // 0x0068 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            IndexFilter;                                   // 0x0070 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.EventFilter_OnSpawnerEvent");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.EventFilter_OnUnitRegistered
// 0x0020 (0x0058 - 0x0078)
class UEventFilter_OnUnitRegistered : public UBehaviorEventFilterBase
{
public:
	class UPoplarUnitTypeDefinition*                   UnitTypeDef;                                   // 0x0058 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarLaneDefinition*                       LaneDef;                                       // 0x0060 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       TeamDef;                                       // 0x0068 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            IndexFilter;                                   // 0x0070 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.EventFilter_OnUnitRegistered");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.ExperienceProviderDefinition
// 0x0008 (0x0058 - 0x0060)
class UExperienceProviderDefinition : public UGBXDefinition
{
public:
	struct FExperienceProviderData                     ExperienceProvData;                            // 0x0058 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.ExperienceProviderDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.GameModeLeviathanEventDefinition
// 0x0010 (0x0058 - 0x0068)
class UGameModeLeviathanEventDefinition : public UGBXDefinition
{
public:
	class FString                                      EventValue;                                    // 0x0058 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.GameModeLeviathanEventDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.GameTypeIdExpressionEvaluator
// 0x0010 (0x0058 - 0x0068)
class UGameTypeIdExpressionEvaluator : public UExpressionEvaluator
{
public:
	EGameTypeComparison                                Comparison;                                    // 0x0058 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarGameTypeIDDefinition*                 GameTypeId;                                    // 0x0060 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.GameTypeIdExpressionEvaluator");
		}

		return uClassPointer;
	};

	bool Evaluate(class UObject* ContextSource);
};

// Class PoplarGame.GBXInfluenceInfo_Damage
// 0x0018 (0x00A8 - 0x00C0)
class UGBXInfluenceInfo_Damage : public UGBXInfluenceInfo
{
public:
	int32_t                                            TeamIndex;                                     // 0x00A8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class APoplarGameInfo*                             PGI;                                           // 0x00B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarTeamDefinition*                       TeamDef;                                       // 0x00B8 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.GBXInfluenceInfo_Damage");
		}

		return uClassPointer;
	};

	void Update();
	void PawnReceivedDamage(class AController* Victim, class AController* Attacker, class UClass* DamageType, class UDamagePipeline* Pipeline);
};

// Class PoplarGame.GBXInfluenceInfo_PoplarTeam
// 0x0018 (0x00A8 - 0x00C0)
class UGBXInfluenceInfo_PoplarTeam : public UGBXInfluenceInfo
{
public:
	int32_t                                            TeamIndex;                                     // 0x00A8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class APoplarGameInfo*                             PGI;                                           // 0x00B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarTeamDefinition*                       TeamDef;                                       // 0x00B8 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.GBXInfluenceInfo_PoplarTeam");
		}

		return uClassPointer;
	};

	void Update();
};

// Class PoplarGame.GBXInfluenceInfo_PoplarTeamLineOfSight
// 0x0018 (0x00C8 - 0x00E0)
class UGBXInfluenceInfo_PoplarTeamLineOfSight : public UGBXInfluenceInfo_GroupLineOfSight
{
public:
	uint32_t                                           bPvE : 1;                                      // 0x00C8 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bInitialized : 1;                              // 0x00C8 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	class UPoplarTeamDefinition*                       TeamDef1;                                      // 0x00D0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarTeamDefinition*                       TeamDef2;                                      // 0x00D8 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.GBXInfluenceInfo_PoplarTeamLineOfSight");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.GBXInfluenceInfo_PoplarTeamMinimap
// 0x0018 (0x00A8 - 0x00C0)
class UGBXInfluenceInfo_PoplarTeamMinimap : public UGBXInfluenceInfo
{
public:
	int32_t                                            TeamIndex;                                     // 0x00A8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bExcludePlayers : 1;                           // 0x00AC (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	class APoplarMapManager*                           MapManager;                                    // 0x00B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarGameReplicationInfo*                  PGRI;                                          // 0x00B8 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.GBXInfluenceInfo_PoplarTeamMinimap");
		}

		return uClassPointer;
	};

	void Update();
};

// Class PoplarGame.GBXPathConstraint_Influence
// 0x0018 (0x00C8 - 0x00E0)
class UGBXPathConstraint_Influence : public UGBXPathConstraint
{
public:
	float                                              MinValue;                                      // 0x00C8 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              MaxValue;                                      // 0x00CC (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bMyTeamOnly : 1;                               // 0x00D0 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bNegateValue : 1;                              // 0x00D0 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	class UGBXInfluenceInfo*                           Info;                                          // 0x00D8 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.GBXPathConstraint_Influence");
		}

		return uClassPointer;
	};

	bool ValidPoint(const struct FInfluencePointRef& InfPoint, struct FVector& TestLoc);
	bool Init(class UIAIInterface* AI, class AActor* InTarget, const struct FVector& InStartLoc);
};

// Class PoplarGame.GBXPathConstraint_MinionLane
// 0x0020 (0x00E0 - 0x0100)
class UGBXPathConstraint_MinionLane : public UGBXPathConstraint_Range
{
public:
	EMinionLaneOption                                  Option;                                        // 0x00E0 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bNotInLane : 1;                                // 0x00E4 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	struct FVector                                     BaseLocation;                                  // 0x00E8 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     FrontLineDirection;                            // 0x00F4 (0x000C) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.GBXPathConstraint_MinionLane");
		}

		return uClassPointer;
	};

	bool ValidPoint(const struct FInfluencePointRef& InfPoint, struct FVector& TestLoc);
	bool Init(class UIAIInterface* AI, class AActor* InTarget, const struct FVector& InStartLoc);
};

// Class PoplarGame.GBXPathConstraint_MinionLaneWidth
// 0x0008 (0x00C8 - 0x00D0)
class UGBXPathConstraint_MinionLaneWidth : public UGBXPathConstraint
{
public:
	class APoplarMind*                                 PMind;                                         // 0x00C8 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.GBXPathConstraint_MinionLaneWidth");
		}

		return uClassPointer;
	};

	bool ValidPoint(const struct FInfluencePointRef& InfPoint, struct FVector& TestLoc);
	bool Init(class UIAIInterface* AI, class AActor* InTarget, const struct FVector& InStartLoc);
};

// Class PoplarGame.GBXPathConstraint_PoplarDanger
// 0x0000 (0x00E0 - 0x00E0)
class UGBXPathConstraint_PoplarDanger : public UGBXPathConstraint_Danger
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.GBXPathConstraint_PoplarDanger");
		}

		return uClassPointer;
	};

	bool Init(class UIAIInterface* AI, class AActor* InTarget, const struct FVector& InStartLoc);
};

// Class PoplarGame.IAttackSequence
// 0x0000 (0x0058 - 0x0058)
class UIAttackSequence : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.IAttackSequence");
		}

		return uClassPointer;
	};

	void SetAttackSeqTransitionState(EAttackTransitionState NewState);
};

// Class PoplarGame.IAugmentable
// 0x0000 (0x0058 - 0x0058)
class UIAugmentable : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.IAugmentable");
		}

		return uClassPointer;
	};

	EShopAugmentationType GetShopType();
	int32_t TryBuyNextTierForAugmentation(class UPoplarAugDefinition* AugDef);
};

// Class PoplarGame.IBuffable
// 0x0000 (0x0058 - 0x0058)
class UIBuffable : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.IBuffable");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.IBuildNodeObserver
// 0x0000 (0x0058 - 0x0058)
class UIBuildNodeObserver : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.IBuildNodeObserver");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.ICombatant
// 0x0000 (0x0058 - 0x0058)
class UICombatant : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.ICombatant");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.IControlledMove
// 0x0000 (0x0058 - 0x0058)
class UIControlledMove : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.IControlledMove");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.ICounterable
// 0x0000 (0x0058 - 0x0058)
class UICounterable : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.ICounterable");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.ICreditsProvider
// 0x0000 (0x0058 - 0x0058)
class UICreditsProvider : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.ICreditsProvider");
		}

		return uClassPointer;
	};

	void GetCreditsProviderData(struct FCreditsProviderData& Data);
};

// Class PoplarGame.IDamageBlocker
// 0x0000 (0x0058 - 0x0058)
class UIDamageBlocker : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.IDamageBlocker");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.IExperienceProvider
// 0x0000 (0x0058 - 0x0058)
class UIExperienceProvider : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.IExperienceProvider");
		}

		return uClassPointer;
	};

	void GetExperienceProviderData(struct FExperienceProviderData& Data);
};

// Class PoplarGame.IHelixParentMovie
// 0x0000 (0x0058 - 0x0058)
class UIHelixParentMovie : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.IHelixParentMovie");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.IHighlightable
// 0x0000 (0x0058 - 0x0058)
class UIHighlightable : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.IHighlightable");
		}

		return uClassPointer;
	};

	void ClearAlertPoints(class UPoplarAlertPointDefinition* optionalTargetDefinition, bool optionalBClearAll);
	void NotifyUntaggedByAlertPoint(class APoplarAlertPoint* OldAlertPoint);
	void NotifyTaggedByAlertPoint(class APoplarAlertPoint* NewAlertPoint, bool Friendly);
	void RefreshRunningHighlightEffects();
	bool ShouldShowHighlight();
	bool HighlightFunctionalityEnabled();
	void SetHighlightFunctionality(EHighlightFunctionality NewFunctionality);
	void RequestStopHighlightEffect(class UPoplarHighlightDefinition* HighlightDef, class UPoplarTeamDefinition* InstigatingTeam, class APlayerReplicationInfo* InstigatingPlayer, bool optionalBImmediateStop);
	void RequestHighlightEffect(class UPoplarHighlightDefinition* HighlightDef, class UPoplarTeamDefinition* InstigatingTeam, class APlayerReplicationInfo* InstigatingPlayer);
};

// Class PoplarGame.ILootablePoplar
// 0x0000 (0x0058 - 0x0058)
class UILootablePoplar : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.ILootablePoplar");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.IMetaLoadoutObserver
// 0x0000 (0x0058 - 0x0058)
class UIMetaLoadoutObserver : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.IMetaLoadoutObserver");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.IMetaPlayerObserver
// 0x0000 (0x0058 - 0x0058)
class UIMetaPlayerObserver : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.IMetaPlayerObserver");
		}

		return uClassPointer;
	};

	void OnMetaXPChanged(class APoplarMetaPlayerReplicationInfo* MPRI, int32_t NewXP);
};

// Class PoplarGame.IMHW_ProfileRefreshable
// 0x0000 (0x0058 - 0x0058)
class UIMHW_ProfileRefreshable : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.IMHW_ProfileRefreshable");
		}

		return uClassPointer;
	};

	void OnProfileRefreshed();
};

// Class PoplarGame.IMinimap
// 0x0000 (0x0058 - 0x0058)
class UIMinimap : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.IMinimap");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.IMinimapObject
// 0x0000 (0x0058 - 0x0058)
class UIMinimapObject : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.IMinimapObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.IPlayerTrainingObserver
// 0x0000 (0x0058 - 0x0058)
class UIPlayerTrainingObserver : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.IPlayerTrainingObserver");
		}

		return uClassPointer;
	};

	void OnUnRegisteredTrainingFor(struct FTrainingData& Data);
	void OnRegisteredTrainingFor(struct FTrainingData& Data);
};

// Class PoplarGame.IPoplarInventoryOwner
// 0x0000 (0x0058 - 0x0058)
class UIPoplarInventoryOwner : public UIInventoryOwner
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.IPoplarInventoryOwner");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.IPoplarMeleeAttacker
// 0x0000 (0x0058 - 0x0058)
class UIPoplarMeleeAttacker : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.IPoplarMeleeAttacker");
		}

		return uClassPointer;
	};

	void OnOutgoingMeleeAttackHit(class AActor* HitActor, const struct FVector& HitLocation);
};

// Class PoplarGame.IPoplarMission
// 0x0000 (0x0058 - 0x0058)
class UIPoplarMission : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.IPoplarMission");
		}

		return uClassPointer;
	};

	void eventMissionReactionObjectiveComplete(const struct FPoplarMissionEventData& EventData);
	void eventMissionReactionObjectiveCleared(const struct FPoplarMissionEventData& EventData);
	void eventMissionReactionObjectiveUpdated(const struct FPoplarMissionEventData& EventData);
	void eventMissionReactionStatusChanged(const struct FPoplarMissionEventData& EventData);
	void eventMissionReactionInitialized(const struct FPoplarMissionEventData& EventData);
};

// Class PoplarGame.IPoplarMissionInventory
// 0x0000 (0x0058 - 0x0058)
class UIPoplarMissionInventory : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.IPoplarMissionInventory");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.IPoplarScrollingListDataProvider
// 0x0000 (0x0058 - 0x0058)
class UIPoplarScrollingListDataProvider : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.IPoplarScrollingListDataProvider");
		}

		return uClassPointer;
	};

	void Cleanup(class UPoplarScrollingList* TheList);
	class UIPoplarScrollingListDataProvider* GetSubmenuForEvent(int32_t EventId, class UPoplarScrollingList* TheList);
	void Populate(class UPoplarScrollingList* TheList);
	bool HandleSpinnerChange(int32_t EventId, int32_t NewChoiceIndex, const class FString& NewChoiceValue, class UPoplarScrollingList* TheList);
	bool HandleSliderChange(int32_t EventId, float NewSliderValue, class UPoplarScrollingList* TheList);
	bool HandleSelectionRollover(int32_t EventId, class UPoplarScrollingList* TheList);
	bool HandleSelectionChange(int32_t EventId, class UPoplarScrollingList* TheList);
	bool HandleClick(int32_t EventId, class UPoplarScrollingList* TheList);
	void OnPop(class UPoplarScrollingList* TheList);
	void OnPush(class UPoplarScrollingList* TheList);
	class FString GetMenuTooltip();
	class FString GetMenuDisplayName();
};

// Class PoplarGame.IPoplarSkinConsumer
// 0x0000 (0x0058 - 0x0058)
class UIPoplarSkinConsumer : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.IPoplarSkinConsumer");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.IPoplarSkinInfoProvider
// 0x0000 (0x0058 - 0x0058)
class UIPoplarSkinInfoProvider : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.IPoplarSkinInfoProvider");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.IPoplarSpawner
// 0x0000 (0x0058 - 0x0058)
class UIPoplarSpawner : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.IPoplarSpawner");
		}

		return uClassPointer;
	};

	void SetSpawnerSpawnLevel(int32_t NewSpawnLevel);
	int32_t GetSpawnerSpawnLevel();
	void SetSpawnerExpLevel(int32_t NewLevel);
	int32_t GetSpawnerExpLevel();
	void SetSpawnerIndex(int32_t NewIndex);
	int32_t GetSpawnerIndex();
	void NotifyLaneEvent(const struct FName& EventName, class UObject* OtherObject, class AController* EventInstigator, class UPoplarTeamDefinition* InstigatorTeam);
	void GrantSpawnPermissionIfActivated(bool PermissionGranted);
	bool IsActivated();
	void ActivateSpawner(bool bShouldActivate);
	void SetLaneDefinition(class UPoplarLaneDefinition* NewLaneDefinition);
	class UPoplarLaneDefinition* GetLaneDefinition();
	void SetPoplarTeamDefinition(class UPoplarTeamDefinition* NewTeamDefinition);
	class UPoplarTeamDefinition* GetPoplarTeamDefinition();
	class UPoplarSpawnerTypeDefinition* GetSpawnerTypeDefinition();
};

// Class PoplarGame.IPoplarTeamAffiliated
// 0x0000 (0x0058 - 0x0058)
class UIPoplarTeamAffiliated : public UITeamAffiliated
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.IPoplarTeamAffiliated");
		}

		return uClassPointer;
	};

	class UPoplarTeamDefinition* GetPoplarTeamDefinition();
	void SetPoplarTeamInfo(class APoplarTeamInfo* InTeamInfo);
	class APoplarTeamInfo* GetPoplarTeamInfo();
};

// Class PoplarGame.IUnit
// 0x0000 (0x0058 - 0x0058)
class UIUnit : public UIPoplarTeamAffiliated
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.IUnit");
		}

		return uClassPointer;
	};

	void GetDamagedStatArray(class TArray<class UStatDefinition*>& DamagedStats);
	void GetKilledStatArray(class TArray<class UStatDefinition*>& KilledStats);
	bool IsSubUnit();
	bool IsTaggedBy(class UPoplarUnitTypeTag* UnitTag);
	float GetCurrentDetectionRadius();
	float GetEnemySeenTimeout();
	bool IsInVisionCone(const struct FVector& Position);
	int32_t GetUnitVisionConeAngle();
	bool IsUnitVisibleToMe(class AActor* TargetUnit, bool optionalBIgnoreDetectionRadius, bool optionalBNoLOSCheck);
	void UnregisterFromGRI();
	void RegisterWithGRI();
	struct FVector GetUnitTargetableLocation();
	class UPawnAllegiance* GetUnitAllegiance();
	bool IsUnitDead();
	float GetUnitMaxEnergy();
	float GetUnitEnergy();
	float GetUnitMaxOvershield();
	float GetUnitOvershield();
	float GetUnitMaxShield();
	float GetUnitShield();
	float GetUnitMaxHealth();
	float GetUnitHealth();
	int32_t GetUnitLevel();
	bool ShowUnitWidget();
	bool IsHuman();
	bool IsVisibleToTeam(class APoplarTeamInfo* OneTeamInfo);
	void NotifyLaneEvent(const struct FName& EventName, class AController* EventInstigator, class UPoplarTeamDefinition* InstigatorTeam);
	void SetInTeamBase(bool bInBase);
	bool IsInTeamBase();
	void SetUnitExpLevel(int32_t NewLevel, bool optionalBAwardSkillPoints, bool optionalBShowHUDFanfare);
	int32_t GetUnitExpLevel();
	int32_t GetSpawnerIndex();
	struct FVector GetUnitLocation();
	class UPoplarLaneDefinition* GetLaneDefinition();
	class UIPoplarSpawner* GetSpawner();
	void SetSpawner(class UIPoplarSpawner* InSpawner);
	void SetLaneDefinition(class UPoplarLaneDefinition* InLaneDef);
	bool SetUnitTypeDefinition(class UPoplarUnitTypeDefinition* NewUnitTypeDefinition, bool optionalSkipGameInfoRegistration);
	class APlayerStateInfo* GetUnitPSI();
	class APlayerReplicationInfo* GetUnitPRI();
	class UPoplarNameplateTypeDefinition* GetNameplateTypeDefinition();
	class UPoplarUnitTypeDefinition* GetUnitTypeDefinition();
	class AActor* GetUnitActor();
	void eventUsedByOtherUnit(class UIUnit* User);
};

// Class PoplarGame.IReapBehavior
// 0x0000 (0x0058 - 0x0058)
class UIReapBehavior : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.IReapBehavior");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.IRemoteControllable
// 0x0000 (0x0058 - 0x0058)
class UIRemoteControllable : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.IRemoteControllable");
		}

		return uClassPointer;
	};

	void ConsumeRelevantInput(class UPlayerInput* RemoteInput, class URemoteControlDefinition* RCDefinition);
	void ProcessRemoteInput(float DeltaTime, class UPlayerInput* RemoteInput, class URemoteControlDefinition* RCDefinition);
	void LeaveRemoteControl(class UIRemoteController* Controller);
	void EnterRemoteControl(class UIRemoteController* Controller, class URemoteControlDefinition* RCDefinition);
};

// Class PoplarGame.IRemoteController
// 0x0000 (0x0058 - 0x0058)
class UIRemoteController : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.IRemoteController");
		}

		return uClassPointer;
	};

	void NotifyControlledActorDied(class UIRemoteControllable* ControlledActor);
	void SetRemoteControlInfo(const struct FRemoteControlInfo& RCInfo);
};

// Class PoplarGame.IRespawnable
// 0x0000 (0x0058 - 0x0058)
class UIRespawnable : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.IRespawnable");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.IScoreBehavior
// 0x0000 (0x0058 - 0x0058)
class UIScoreBehavior : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.IScoreBehavior");
		}

		return uClassPointer;
	};

	int32_t GetQuickKillTimeLimit();
	int32_t GetQuickKillScore();
	int32_t GetBaseScore();
	void Behavior_AwardTeamBonusScore(int32_t Amount);
	void Behavior_AwardScore(int32_t Amount);
};

// Class PoplarGame.ISpectatorControlsObserver
// 0x0000 (0x0058 - 0x0058)
class UISpectatorControlsObserver : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.ISpectatorControlsObserver");
		}

		return uClassPointer;
	};

	void OnToggledSpectatorControlsVisibility();
};

// Class PoplarGame.IStatBehavior
// 0x0000 (0x0058 - 0x0058)
class UIStatBehavior : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.IStatBehavior");
		}

		return uClassPointer;
	};

	void Behavior_UpdateStat(class UStatDefinition* Stat, EStatCategoryTypes StatCategory, int32_t NewValue);
	void Behavior_IncrementStat(class UStatDefinition* Stat, int32_t Amount);
};

// Class PoplarGame.IStatValueProvider
// 0x0000 (0x0058 - 0x0058)
class UIStatValueProvider : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.IStatValueProvider");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.IStealthable
// 0x0000 (0x0058 - 0x0058)
class UIStealthable : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.IStealthable");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.ITeleportBehavior
// 0x0000 (0x0058 - 0x0058)
class UITeleportBehavior : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.ITeleportBehavior");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.ItemFrameGFxObject
// 0x0008 (0x00D8 - 0x00E0)
class UItemFrameGFxObject : public UGFxObject
{
public:
	class UPerkIconGFxObject*                          PerkIcon;                                      // 0x00D8 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.ItemFrameGFxObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.IWeaponAction
// 0x0000 (0x0058 - 0x0058)
class UIWeaponAction : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.IWeaponAction");
		}

		return uClassPointer;
	};

	void eventLatentWeaponActionFinished(class UWeaponActionComponent* TheAction);
	void StopLatentWeaponAction(bool bInterrupted);
	void StartLatentWeaponAction(class UWeaponActionComponent* TheAction, float optionalOverrideActionSpeedScale);
};

// Class PoplarGame.IWorldIconObject
// 0x0000 (0x0058 - 0x0058)
class UIWorldIconObject : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.IWorldIconObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.KillModifiersDefinition
// 0x0078 (0x0058 - 0x00D0)
class UKillModifiersDefinition : public UGBXDefinition
{
public:
	struct FPointer                                    VfTable_IIBehaviorProvider;                    // 0x0058 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class TArray<struct FKillCombo>                    KillCombos;                                    // 0x0060 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<struct FKillModifier>                 KillModifiers;                                 // 0x0070 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	struct FKillStreakTier                             KillStreakTiers[0x5];                          // 0x0080 (0x0014) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              LongshotThreshold;                             // 0x0094 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              CannonArmTheshold;                             // 0x0098 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             KillStreakStat;                                // 0x00A0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<class UDamageTypeDefinition*>         ImprovisedDamageTypes;                         // 0x00A8 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<class UPoplarUnitTypeDefinition*>     KillStreakAndMultiKillUnitExclusions;          // 0x00B8 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class UBehaviorProviderDefinition*                 BehaviorProviderDefinition;                    // 0x00C8 (0x0008) [0x0000000000000002] (CPF_Const)   

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.KillModifiersDefinition");
		}

		return uClassPointer;
	};

	void OnKillComboAchieved(int32_t ComboIndex, class AController* Killer, class UPoplarTeamDefinition* KillerTeam, class AController* Victim, class UPoplarTeamDefinition* VictimTeam, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnKillModifierAchieved(EKillModifier EventOutput, class AController* Killer, class UPoplarTeamDefinition* KillerTeam, class AController* Victim, class UPoplarTeamDefinition* VictimTeam, struct FBehaviorConsumerHandle& ConsumerHandle);
};

// Class PoplarGame.LaneAttributeContextResolver
// 0x0010 (0x0058 - 0x0068)
class ULaneAttributeContextResolver : public UAttributeContextResolver
{
public:
	uint32_t                                           bGetSpecificLane : 1;                          // 0x0058 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	class UPoplarLaneDefinition*                       LaneDefinition;                                // 0x0060 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.LaneAttributeContextResolver");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.LevelListStatDimensionValueDefinition
// 0x0010 (0x0058 - 0x0068)
class ULevelListStatDimensionValueDefinition : public UGBXDefinition
{
public:
	class TArray<class ULevelStatDimensionValueDefinition*> LevelList;                                     // 0x0058 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.LevelListStatDimensionValueDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.MarketItemInfoGFxObject
// 0x0068 (0x00D8 - 0x0140)
class UMarketItemInfoGFxObject : public UGFxObject
{
public:
	class FString                                      LocalizedPurchaseHistory;                      // 0x00D8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedRemainingRefunds;                     // 0x00E8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class UPoplarMetagameInventory*                    MetagameInventory;                             // 0x00F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FPlayerTransaction>            PurchaseHistoryItems;                          // 0x0100 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	uint32_t                                           bPurchaseHistoryVisible : 1;                   // 0x0110 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bPlayItemSelectionSound : 1;                   // 0x0110 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	int32_t                                            SelectedItemIndex;                             // 0x0114 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            PageIndex;                                     // 0x0118 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            TotalPages;                                    // 0x011C (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            MaxLoadedPage;                                 // 0x0120 (0x0004) [0x0000000000002000] (CPF_Transient)
	EMarketItemInfoRequestState                        RequestState;                                  // 0x0124 (0x0001) [0x0000000000002000] (CPF_Transient)
	class UPoplarCommandPageGFxMovie*                  OwningMovie;                                   // 0x0128 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  PurchaseHistoryGrid;                           // 0x0130 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UWillowGFxDialogBox*                         RefundDialog;                                  // 0x0138 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MarketItemInfoGFxObject");
		}

		return uClassPointer;
	};

	void OnRefundPurchaseRequestComplete(const struct FPlatformUserId& UserId, int32_t ServiceResult, struct FPlayerTransactions& ReadPlayerTransactionData);
	void OnPurchaseHistoryRequestComplete(const struct FPlatformUserId& UserId, int32_t ServiceResult, struct FPlayerTransactions& ReadPlayerTransactionData);
	void extRequestPurchaseHistoryItemActivated(int32_t CellIndex);
	void extRequestPurchaseHistoryItemSelected(int32_t CellIndex);
	void RequestItemRangeForDataProvider(class UGFxObject* Provider, const class FString& Type, int32_t StartIndex, int32_t EndIndex);
	bool HandleInsufficientRefundTokensDialog(class UWillowGFxDialogBox* DialogBox, const struct FPlatformUserId& UserId);
	bool HandleRefundPurchaseDialog(class UWillowGFxDialogBox* DialogBox, const struct FPlatformUserId& UserId);
	bool HandleInputKey(const struct FPlatformUserId& InUserId, const struct FName& ukey, EInputEvent uevent);
};

// Class PoplarGame.MarkupAttributePresentationDefinition
// 0x0050 (0x0150 - 0x01A0)
class UMarkupAttributePresentationDefinition : public UAttributePresentationDefinition
{
public:
	struct FName                                       StringToReplace;                               // 0x0150 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                AttributeInitFormula;                          // 0x0158 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FMarkupSubstitution                         Substitution;                                  // 0x0178 (0x0020) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	EBalanceFormulaProcessingOptions                   BalanceFormulaProcessingOptions;               // 0x0198 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EConditionalFormulaProcessingOptions               ConditionalFormulaProcessingOptions;           // 0x0199 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	ECoeffecientFormulaProcessingOptions               CoeffecientFormulaProcessingOptions;           // 0x019A (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MarkupAttributePresentationDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.MatchFeedData
// 0x0008 (0x0058 - 0x0060)
class UMatchFeedData : public UObject
{
public:
	class USwfMovie*                                   MatchFeedClip;                                 // 0x0058 (0x0008) [0x0000000000000000]               

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MatchFeedData");
		}

		return uClassPointer;
	};

	void InitializeWidget(class UGFxObject* Widget);
};

// Class PoplarGame.MatchFeedData_ChallengeUpdate
// 0x0030 (0x0060 - 0x0090)
class UMatchFeedData_ChallengeUpdate : public UMatchFeedData
{
public:
	uint32_t                                           bComplete : 1;                                 // 0x0060 (0x0004) [0x0000000000000000] [0x00000001] 
	class FString                                      Title;                                         // 0x0068 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class FString                                      Subtext;                                       // 0x0078 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int32_t                                            Progress;                                      // 0x0088 (0x0004) [0x0000000000000000]               
	int32_t                                            Threshold;                                     // 0x008C (0x0004) [0x0000000000000000]               

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MatchFeedData_ChallengeUpdate");
		}

		return uClassPointer;
	};

	void InitializeWidget(class UGFxObject* Widget);
};

// Class PoplarGame.MatchFeedData_Generic
// 0x0048 (0x0060 - 0x00A8)
class UMatchFeedData_Generic : public UMatchFeedData
{
public:
	int32_t                                            BackgroundFrame;                               // 0x0060 (0x0004) [0x0000000000000000]               
	class FString                                      Message;                                       // 0x0068 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class FString                                      InstIconPath;                                  // 0x0078 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class FString                                      OppoIconPath;                                  // 0x0088 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class FString                                      SkillIconPath;                                 // 0x0098 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MatchFeedData_Generic");
		}

		return uClassPointer;
	};

	void InitializeWidget(class UGFxObject* Widget);
};

// Class PoplarGame.MatchFeedData_Objective
// 0x0008 (0x00A8 - 0x00B0)
class UMatchFeedData_Objective : public UMatchFeedData_Generic
{
public:
	EObjectiveLabel                                    Label;                                         // 0x00A8 (0x0001) [0x0000000000002000] (CPF_Transient)
	EPoplarMissionObjectiveType                        ObjectiveType;                                 // 0x00A9 (0x0001) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MatchFeedData_Objective");
		}

		return uClassPointer;
	};

	void InitializeWidget(class UGFxObject* Widget);
};

// Class PoplarGame.MatchingObjectsCounter
// 0x0058 (0x0058 - 0x00B0)
class UMatchingObjectsCounter : public UObject
{
public:
	float                                              Timeout;                                       // 0x0058 (0x0004) [0x0000000000000000]               
	struct FMap_Mirror                                 MatchCounts;                                   // 0x0060 (0x0050) [0x0000000000003002] (CPF_Const | CPF_Native | CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MatchingObjectsCounter");
		}

		return uClassPointer;
	};

	void ResetMatchCount(class UObject* Obj, bool bResetAll);
	int32_t GetMatchCount(class UObject* Obj);
	int32_t UpdateAndGetMatchCount(class UObject* Obj);
};

// Class PoplarGame.MetaRankDefinition
// 0x0010 (0x0058 - 0x0068)
class UMetaRankDefinition : public UGBXDefinition
{
public:
	class TArray<struct FRankStruct>                   Ranks;                                         // 0x0058 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MetaRankDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.MHW_CoopBars_Definition
// 0x0020 (0x0058 - 0x0078)
class UMHW_CoopBars_Definition : public UGBXDefinition
{
public:
	struct FLinearColor                                DeadHeroTextColor;                             // 0x0058 (0x0010) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FLinearColor                                AliveHeroTextColor;                            // 0x0068 (0x0010) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_CoopBars_Definition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.MHW_DeltaBars_Definition
// 0x0008 (0x0058 - 0x0060)
class UMHW_DeltaBars_Definition : public UGBXDefinition
{
public:
	float                                              DeltaDelayTime;                                // 0x0058 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              CatchUpSpeed;                                  // 0x005C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_DeltaBars_Definition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.MHW_GameModePVE_Definition
// 0x0010 (0x0058 - 0x0068)
class UMHW_GameModePVE_Definition : public UGBXDefinition
{
public:
	int32_t                                            DisplayTimeRemainingSeconds;                   // 0x0058 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UMHW_DeltaBars_Definition*                   DeltaBarsDef;                                  // 0x0060 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_GameModePVE_Definition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.MHW_MatchEvents_Definition
// 0x0010 (0x0058 - 0x0068)
class UMHW_MatchEvents_Definition : public UGBXDefinition
{
public:
	class USwfMovie*                                   ObjectiveMovie;                                // 0x0058 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class USwfMovie*                                   SubObjectiveMovie;                             // 0x0060 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_MatchEvents_Definition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.MHW_MiniMap_Definition
// 0x0020 (0x0058 - 0x0078)
class UMHW_MiniMap_Definition : public UGBXDefinition
{
public:
	float                                              TweenTime;                                     // 0x0058 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              ExpandedXPos;                                  // 0x005C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              ExpandedYPos;                                  // 0x0060 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              ExpandedXScale;                                // 0x0064 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              ExpandedYScale;                                // 0x0068 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bUseEdgeClampingRadius : 1;                    // 0x006C (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	float                                              EdgeClampingRadius;                            // 0x0070 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_MiniMap_Definition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.MHW_MiniMapInner
// 0x0208 (0x00D8 - 0x02E0)
class UMHW_MiniMapInner : public UGFxObject
{
public:
	struct FPointer                                    VfTable_IIMinimap;                             // 0x00D8 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class TArray<struct FPoplarMinimapObject>          MinimapObjects;                                // 0x00E0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<int32_t>                              FreeMinimapObjectIndices;                      // 0x00F0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<struct FPoplarIconClipPool>           ClipPools;                                     // 0x0100 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	float                                              WorldRadius;                                   // 0x0110 (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	float                                              OuterRadius;                                   // 0x0114 (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	class UMHW_MiniMap_Definition*                     MyDefinition;                                  // 0x0118 (0x0008) [0x0000000000000000]               
	uint32_t                                           bPlayerRelativeLocationThisTick : 1;           // 0x0120 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bPlayerRelativeRotationThisTick : 1;           // 0x0120 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bPlayerRelativeRotation : 1;                   // 0x0120 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           bPlayerRelativeLocation : 1;                   // 0x0120 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	uint32_t                                           bShowThreats : 1;                              // 0x0120 (0x0004) [0x0000000000044000] [0x00000010] (CPF_Config | CPF_GlobalConfig)
	uint32_t                                           bCheckAllIconsForOverlap : 1;                  // 0x0120 (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	uint32_t                                           bFallbackForMissingCoopIconsTriggered : 1;     // 0x0120 (0x0004) [0x0000000000002000] [0x00000040] (CPF_Transient)
	uint32_t                                           bUseCavernsInitialMapOffsets : 1;              // 0x0120 (0x0004) [0x0000000000000000] [0x00000080] 
	uint32_t                                           bUseCavernsISICFightMapOffsets : 1;            // 0x0120 (0x0004) [0x0000000000000000] [0x00000100] 
	uint32_t                                           bUseCathedralMapOffsets : 1;                   // 0x0120 (0x0004) [0x0000000000000000] [0x00000200] 
	uint32_t                                           bUseRavineMapOffsets : 1;                      // 0x0120 (0x0004) [0x0000000000000000] [0x00000400] 
	uint32_t                                           bMinimapLerping : 1;                           // 0x0120 (0x0004) [0x0000000000000000] [0x00000800] 
	uint32_t                                           bPlayerRelativeLocationLerping : 1;            // 0x0120 (0x0004) [0x0000000000000000] [0x00001000] 
	uint32_t                                           bPlayerRelativeRotationLerping : 1;            // 0x0120 (0x0004) [0x0000000000000000] [0x00002000] 
	uint32_t                                           bIsExpanded : 1;                               // 0x0120 (0x0004) [0x0000000000000000] [0x00004000] 
	uint32_t                                           bCursorInitialized : 1;                        // 0x0120 (0x0004) [0x0000000000002000] [0x00008000] (CPF_Transient)
	uint32_t                                           bNorthMarkerInitialized : 1;                   // 0x0120 (0x0004) [0x0000000000002000] [0x00010000] (CPF_Transient)
	float                                              UnrealUnitsPerUnscaledMapSwfTexel;             // 0x0124 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  InnerContentClip;                              // 0x0128 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  MaskClip;                                      // 0x0130 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  MapAndIconsClip;                               // 0x0138 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  IconsLayerClip;                                // 0x0140 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  TacMapClip;                                    // 0x0148 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              TacMapClipWidth;                               // 0x0150 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TacMapClipHeight;                              // 0x0154 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  DirArrowClip;                                  // 0x0158 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  InfluenceClip;                                 // 0x0160 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedPlayerYaw;                               // 0x0168 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            MapYawOffset;                                  // 0x016C (0x0004) [0x0000000000002000] (CPF_Transient)
	class AWillowTacticalMapVolume*                    TacticalMapVolume;                             // 0x0170 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMHW_MiniMapOuter*                           OuterMinimapClip;                              // 0x0178 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UModularHUDGFxMovie*                         HUDMovie;                                      // 0x0180 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     CachedPlayerLocation;                          // 0x0188 (0x000C) [0x0000000000002000] (CPF_Transient)
	uint8_t                                           UnknownData00[0xC];                            // 0x0194 (0x000C) MISSED OFFSET
	struct FMatrix                                     CachedWStoMSTransform;                         // 0x01A0 (0x0040) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FPoplarMinimapIconData>        IconClips;                                     // 0x01E0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<struct FPoplarMinimapIconGroup>       IconGroups;                                    // 0x01F0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FPoplarMinimapIconGroup                     DefaultIconGroup;                              // 0x0200 (0x0010) [0x0000000000002000] (CPF_Transient)
	float                                              MapWidth;                                      // 0x0210 (0x0004) [0x0000000000000000]               
	float                                              MapHeight;                                     // 0x0214 (0x0004) [0x0000000000000000]               
	float                                              CurrentMinimapExpansionScale;                  // 0x0218 (0x0004) [0x0000000000000000]               
	float                                              UnrealToMinimapScale;                          // 0x021C (0x0004) [0x0000000000000000]               
	float                                              OriginalXPos;                                  // 0x0220 (0x0004) [0x0000000000000000]               
	float                                              OriginalYPos;                                  // 0x0224 (0x0004) [0x0000000000000000]               
	float                                              OriginalXScale;                                // 0x0228 (0x0004) [0x0000000000000000]               
	float                                              OriginalYScale;                                // 0x022C (0x0004) [0x0000000000000000]               
	float                                              OriginalRotation;                              // 0x0230 (0x0004) [0x0000000000000000]               
	float                                              CurrentRotation;                               // 0x0234 (0x0004) [0x0000000000000000]               
	float                                              DesiredRotation;                               // 0x0238 (0x0004) [0x0000000000000000]               
	float                                              MinimapLerpDuration;                           // 0x023C (0x0004) [0x0000000000000000]               
	float                                              MinimapLerpStartTime;                          // 0x0240 (0x0004) [0x0000000000000000]               
	float                                              MinimapLerpAlpha;                              // 0x0244 (0x0004) [0x0000000000000000]               
	float                                              MinimapExpansionScaleFactor;                   // 0x0248 (0x0004) [0x0000000000000000]               
	float                                              TacMapAndIconsScaleFactor;                     // 0x024C (0x0004) [0x0000000000000000]               
	float                                              UnrealScaleFactor;                             // 0x0250 (0x0004) [0x0000000000000000]               
	float                                              DesignerScaleFactor;                           // 0x0254 (0x0004) [0x0000000000000000]               
	float                                              ConvertedLerpAlpha;                            // 0x0258 (0x0004) [0x0000000000000000]               
	int32_t                                            CursorObjectID;                                // 0x025C (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FPoplarMinimapIconState                     CursorState;                                   // 0x0260 (0x0038) [0x0000000000000000]               
	struct FVector                                     CursorLocationInMapSpace;                      // 0x0298 (0x000C) [0x0000000000002000] (CPF_Transient)
	int32_t                                            NorthMarkerID;                                 // 0x02A4 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FPoplarMinimapIconState                     NorthMarkerState;                              // 0x02A8 (0x0038) [0x0000000000000000]               

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_MiniMapInner");
		}

		return uClassPointer;
	};

	void NewMinimapClipLoaded(class UGFxObject* InTacMapClip, float Width, float Height, float XScale, float YScale);
};

// Class PoplarGame.MHW_Nameplate_Definition
// 0x0050 (0x0058 - 0x00A8)
class UMHW_Nameplate_Definition : public UGBXDefinition
{
public:
	class UStatDefinition*                             AssistDef;                                     // 0x0058 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             LogisticsBuiltDef;                             // 0x0060 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class USwfMovie*                                   LogisticsMovie;                                // 0x0068 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             ReconBuiltDef;                                 // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class USwfMovie*                                   ReconMovie;                                    // 0x0078 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             SupplyBuiltDef;                                // 0x0080 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class USwfMovie*                                   SupplyMovie;                                   // 0x0088 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             TurretsBuiltDef;                               // 0x0090 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class USwfMovie*                                   TurretMovie;                                   // 0x0098 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UMHW_DeltaBars_Definition*                   DeltaBarsDef;                                  // 0x00A0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_Nameplate_Definition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.MHW_Player11Spectator_Definition
// 0x0020 (0x0058 - 0x0078)
class UMHW_Player11Spectator_Definition : public UGBXDefinition
{
public:
	class TArray<struct FSpectatorHUDActionIconPairData> InputActionHintIconData;                       // 0x0058 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class TArray<struct FSpectatorHUDHintBarEntryData> HintBarData;                                   // 0x0068 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_Player11Spectator_Definition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.MiniMapSelectionFilter
// 0x0030 (0x0058 - 0x0088)
class UMiniMapSelectionFilter : public UObject
{
public:
	class APoplarPlayerController*                     OwningPlayerController;                        // 0x0058 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FActorSelectionFilterSettings               FilterSettings;                                // 0x0060 (0x0010) [0x0000000000002000] (CPF_Transient)
	class TArray<class AActor*>                        ListActors;                                    // 0x0070 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	uint32_t                                           bActive : 1;                                   // 0x0080 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MiniMapSelectionFilter");
		}

		return uClassPointer;
	};

	void ClearActorListAndFilters();
	void RefreshActorList();
};

// Class PoplarGame.MinionLaneTracker
// 0x0080 (0x0058 - 0x00D8)
class UMinionLaneTracker : public UObject
{
public:
	struct FPointer                                    VfTable_IIAIInterface;                         // 0x0058 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class TArray<class APoplarAIPawn*>                 Minions;                                       // 0x0060 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UAIComponent*                                AIComponent;                                   // 0x0070 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class UPoplarLaneTargetingComponent*               TargetingComponent;                            // 0x0078 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class UPoplarTeamDefinition*                       CachedTeamDefinition;                          // 0x0080 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarLaneDefinition*                       CachedLaneDefinition;                          // 0x0088 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            WaveIndex;                                     // 0x0090 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedMaxActiveWaves;                          // 0x0094 (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<class APoplarMinionSpawner*>          MinionSpawners;                                // 0x0098 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	float                                              CachedFrontDistance;                           // 0x00A8 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     CachedFrontLocation;                           // 0x00AC (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     CachedFrontDirection;                          // 0x00B8 (0x000C) [0x0000000000002000] (CPF_Transient)
	float                                              FrontLineCheckRate;                            // 0x00C4 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              LastFrontLineCheckTime;                        // 0x00C8 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              PlayerDamageApplied;                           // 0x00CC (0x0004) [0x0000000000000000]               
	uint32_t                                           bPlayerDamageTracking : 1;                     // 0x00D0 (0x0004) [0x0000000000000000] [0x00000001] 

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MinionLaneTracker");
		}

		return uClassPointer;
	};

	static void SetLaneDebugging(bool bDebug);
	static bool IsLaneDebugging();
	void AddPlayerDamage(float PlayerDamage);
	bool IsTrackingPlayerDamage();
	bool PlayersAreHelping();
	void CheckFormationLeader(class APoplarAIPawn* CheckMinion);
	class UIAIInterface* GetAIChild(int32_t ChildIdx);
	int32_t GetNumAIChildren();
	void InitSequence(class UActionSequence* NewSequence);
	class UPawnAllegiance* GetAllegiance();
	class UAIDefinition* GetAIDefinition();
	void SetAIComponent(class UAIComponent* NewAIComp);
	class UAIComponent* GetAIComponent();
	class UIAIInterface* GetAIParent();
	struct FVector GetAILocation();
	class AActor* GetAIActor();
	bool CanTickAI();
	class UPoplarLaneDefinition* GetLaneDef();
	class UPoplarTeamDefinition* GetTeamDef();
};

// Class PoplarGame.ModularHUDGFxMovie
// 0x02C0 (0x05B0 - 0x0870)
class UModularHUDGFxMovie : public UWillowGFxMovie3D
{
public:
	struct FPointer                                    VfTable_IIGFxObjectManager;                    // 0x05B0 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class APawn*                                       TrackedNameplatePawns[0xA];                    // 0x05B8 (0x0050) [0x0000000000002000] (CPF_Transient)
	class UModularHUDGFxMovieDefinition*               MyHUDGFxDef;                                   // 0x0608 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGearboxGFxObjectManager*                    ObjMgr;                                        // 0x0610 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarPlayerReplicationInfo*                PPRI;                                          // 0x0618 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APawn*                                       Pawn;                                          // 0x0620 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarWeapon*                               PWeap;                                         // 0x0628 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarWeapon*                               POffhandWeap;                                  // 0x0630 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              CachedHUDScaleE;                               // 0x0638 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CachedHUDScaleX;                               // 0x063C (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CachedHUDScaleY;                               // 0x0640 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CinematicModeSetNum;                           // 0x0644 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bLockedHUDState : 1;                           // 0x0648 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bUseCinematicSubtitle : 1;                     // 0x0648 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bPendingSplitscreenWidgetRestore : 1;          // 0x0648 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           bIsSpectatorMode : 1;                          // 0x0648 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	uint32_t                                           bFadedOut : 1;                                 // 0x0648 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	uint32_t                                           bQueuedRefreshRequest : 1;                     // 0x0648 (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	uint32_t                                           bUseScaleformSubtitles : 1;                    // 0x0648 (0x0004) [0x0000000000006000] [0x00000040] (CPF_Transient | CPF_Config)
	int32_t                                            HUDOwnerMarkedAlerts;                          // 0x064C (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CurrentHUDStateIndex;                          // 0x0650 (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<class APoplarAIPawn*>                 ActiveLargeUnits;                              // 0x0658 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	float                                              TimeSinceLastLargeUnitUpdate;                  // 0x0668 (0x0004) [0x0000000000002000] (CPF_Transient)
	class USplitscreenOverlayGFxMovie*                 SplitscreenOverlay;                            // 0x0670 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarMenuSubtitlesGFxMovie*                CinematicSubtitlesMovie;                       // 0x0678 (0x0008) [0x0000000000002000] (CPF_Transient)
	class TArray<class UModularHUDWidgetGFxObject*>    SpecialFadedOutWidgets;                        // 0x0680 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FCrowdControlTrackingStruct                 CrowdControlOnBar;                             // 0x0690 (0x0010) [0x0000000000002000] (CPF_Transient)
	struct FCrowdControlTrackingStruct                 ActiveCrowdControlIcons[0x9];                  // 0x06A0 (0x0090) [0x0000000000002000] (CPF_Transient)
	float                                              TimeStampStartedLastEffectOnBar;               // 0x0730 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedHighestPrioritySubtitleID;               // 0x0734 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint8_t                                            CachedSplitScreenMode;                         // 0x0738 (0x0001) [0x0000000000002000] (CPF_Transient)
	class UMHW_ProgressBar*                            TeleportBar;                                   // 0x0740 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxUIAction_Attach*                         ModeWidget;                                    // 0x0748 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMHW_PerkSelector*                           PerkSelectorWidget;                            // 0x0750 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMHW_DamageIndicators*                       DamageIndicatorWidget;                         // 0x0758 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMHW_KO*                                     KOWidget;                                      // 0x0760 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMHW_IncomeDisplay*                          IncomeDisplayWidget;                           // 0x0768 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMHW_MatchEventsHeadline*                    MatchEventsHeadlineWidget;                     // 0x0770 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMHW_MatchEventsFeed*                        MatchEventsFeedWidget;                         // 0x0778 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMHW_CrowdControlBar*                        CCBarWidget;                                   // 0x0780 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMHW_Crosshairs*                             CrosshairsWidget;                              // 0x0788 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMHW_PlayerWidget*                           PlayerWidget;                                  // 0x0790 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMHW_GameModeWreckage*                       GameModeWreckageWidget;                        // 0x0798 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMHW_GameModeWreckage*                       OverlayGameModeWreckageWidget;                 // 0x07A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMHW_GameModePVE*                            GameModePVEWidget;                             // 0x07A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMHW_InWorldIcon*                            InWorldIconWidget;                             // 0x07B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMHW_ProgressBar*                            ProgressBarWidget;                             // 0x07B8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMHW_DeathRecap*                             DeathRecapWidget;                              // 0x07C0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMHW_MiniMapOuter*                           MinimapWidget;                                 // 0x07C8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMHW_MiniMapOuter*                           OverlayMinimapWidget1;                         // 0x07D0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMHW_MiniMapOuter*                           OverlayMinimapWidget2;                         // 0x07D8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMHW_Echo*                                   EchoWidget;                                    // 0x07E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMHW_Echo*                                   OverlayEchoWidget;                             // 0x07E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMHW_Subtitles*                              SubtitlesWidget;                               // 0x07F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMHW_Subtitles*                              OverlaySubtitlesWidget;                        // 0x07F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMHW_Challenges*                             ChallengeUpdatesWidget;                        // 0x0800 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMHW_MapChallenges*                          MapChallengeUpdatesWidget;                     // 0x0808 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMHW_GameModePVE*                            OverlayPVEWidget;                              // 0x0810 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMHW_PerkPurchaseAvailable*                  PerkPurchaseAvailableWidget;                   // 0x0818 (0x0008) [0x0000000000002000] (CPF_Transient)
	class USwfMovie*                                   CachedCrosshairOverride;                       // 0x0820 (0x0008) [0x0000000000002000] (CPF_Transient)
	class USwfMovie*                                   CachedAmmoBarLeftOverride;                     // 0x0828 (0x0008) [0x0000000000002000] (CPF_Transient)
	class USwfMovie*                                   CachedAmmoBarRightOverride;                    // 0x0830 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedNumPlayers;                              // 0x0838 (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<int32_t>                              SortedPlayerMappingFriendly;                   // 0x0840 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<int32_t>                              SortedPlayerMappingEnemy;                      // 0x0850 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UWillowPauseTicker*                          InitModeWidgetTicker;                          // 0x0860 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              InitModeWidgetTickerRate;                      // 0x0868 (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.ModularHUDGFxMovie");
		}

		return uClassPointer;
	};

	void OnTriggerPerkActivated(int32_t PerkSlotIndex);
	void ResetSubtitlesCacheId();
	class UMHW_Subtitles* GetSubtitlesClip();
	void FadeIn(float optionalFadeTime);
	void FadeOut(float optionalFadeTime);
	void RelativeColorsChanged();
	void TriggerSprintAttempted();
	void TriggerSkillsBlockedByCrowdControlDebuffFeedback(int32_t SkillSlotIndex);
	void TriggerSkillOnCooldownFeedback(int32_t SkillSlotIndex);
	void TriggerNotEnoughEnergyResourceFeedback(int32_t SkillSlotIndex);
	void TriggerInvalidTargetFeedback(int32_t SkillSlotIndex);
	void LevelUp(int32_t ExpLevel);
	void NotifyHUDProfileSettingsChanged();
	void NotifyHUDPauseClosed();
	void NotifyHUDPauseOpened();
	void ShrinkMinimap();
	void ExpandMinimap();
	void extOnClipUnloaded(class UGFxObject* Clip);
	void extOnClipLoaded(class UGFxObject* Clip);
	bool GetIsSpectatorMode();
	class UGFxLayoutDefinition* GetLayoutDefinition();
	class UGearboxGFxObjectManager* GetGFxObjectManager();
	void eventOnClose();
	bool eventStart(bool optionalStartPaused);
	void extTriggerCountdownAudio(int32_t RemainingSeconds);
	void extFinishDeathRecapPanelRollout();
	void extUpdateHeadlineColor(int32_t Frame);
	void HideEchoCaller();
	void ShowEchoCaller(class UWillowDialogNameTag* NameTag, const struct FScaleformPortraitData& ScaleformPortrait, class APoplarPlayerController* Instigator);
	void UnregisterWreckagePing(class APoplarAlertPoint* InAlertPoint);
	void RegisterWreckagePing(class APoplarAlertPoint* InAlertPoint);
	void OnBlindEnd();
	void OnBlindStart();
	void HidePerkSelector();
	void ShowPerkSelector();
	void TeleportCompleted();
	void TeleportCanceledUI(class APawn* Player);
	void ShowTeleportUI(class APawn* Player);
	void PlayerRespawn();
	void PlayerDeath();
	void HideDeathRecapUI();
	void ShowDeathRecapUI();
	void OnInputTypeChanged(bool bNewUsingGamepad);
	void OnScoreboardClose();
	void OnScoreboardOpen();
	void OnShopMenuClose();
	void OnShopMenuOpen();
	void OnAssistAwarded(int32_t AssistModifiersSelectedIndex, int32_t AssistComboSelectedIndex);
	void OnTauntPrompt();
	void OnKO(int32_t KillModifierSeletectedIndex, int32_t KillComboSelectedIndex);
	void NotifyHUDOfBuffStateChange(class TArray<struct FBuffStateInfo>& BuffState);
	void AddMessageToOnlineFeed(class UPoplarMessageDefinition* MessageDefinition, int32_t BackgroundFrame, const class FString& Message, const struct FPoplarMessageDefParams& Params);
	bool IsMatchEventFeedVisible();
	void RemoveMatchEventFromFeed(class UPoplarMessageDefinition* MessageDefinition);
	void AddMatchEventToFeed(class UPoplarMessageDefinition* MessageDefinition, int32_t BackgroundFrame, const class FString& Message, const struct FPoplarMessageDefParams& Params);
	void AddHeadlineToQueue(class UPoplarMessageDefinition* MessageDefinition, int32_t BackgroundFrame, const class FString& Message, const struct FPoplarMessageDefParams& Params);
	void AddKnockoutMessageToQueue(class UPoplarMessageDefinition* MessageDefinition, const class FString& Message);
	void OnSkillGradeChange(class USkillDefinition* Skill, int32_t NewSkillPoints, int32_t Grade);
	void RecordPoplarDamageEvent(class APlayerController* DamagedPlayer, class APawn* InstigatorPawn, float DamageSeverityPercent, int32_t DamageTags, EPlayerDamageType ADamageType);
	class UGBXDefinition* GetDefinitionDataFor(const struct FName& InstanceName, class UGFxObject* Object);
	class UClass* GetUCClassForASClass(const struct FName& ClassName);
	void UpdateCachedPlayerInfo();
	void TryInitModeWidget();
};

// Class PoplarGame.ModularHUDGFxMovieDefinition
// 0x00E8 (0x0138 - 0x0220)
class UModularHUDGFxMovieDefinition : public UWillowGFxMovie3DDefinition
{
public:
	class TArray<struct FASClassNameToGFxObjectClass>  ClassNameMapping;                              // 0x0138 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class TArray<struct FDefinitionLookup>             DefinitionDataMapping;                         // 0x0148 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class TArray<struct FSplitscreenScaledHUDItem>     SplitscreenScaledHUDItems;                     // 0x0158 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	float                                              GlobalSplitscreenHUDScaling;                   // 0x0168 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UGFxLayoutDefinition*                        Layout;                                        // 0x0170 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UGFxLayoutDefinition*                        SplitscreenLayout;                             // 0x0178 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UGFxLayoutDefinition*                        SpectatorLayout;                               // 0x0180 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FVector2D                                   InWorldEdgeClamping;                           // 0x0188 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class TArray<class FString>                        WidgetsNotToHideInCinematicMode;               // 0x0190 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	int32_t                                            MaxLargeUnitTrackingDistanceForSpectators;     // 0x01A0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class USwfMovie*                                   DefaultCrosshairMovie;                         // 0x01A8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class USplitscreenOverlayGFxMovieDefinition*       SplitscreenOverlayDefinition;                  // 0x01B0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class TArray<class FString>                        WidgetsToHideInSplitscreen;                    // 0x01B8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class TArray<struct FCrowdControlSwfMapping>       CrowdControlSwfMappings;                       // 0x01C8 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<struct FName>                         HUDStates;                                     // 0x01D8 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<struct FName>                         SpectatorHUDStates;                            // 0x01E8 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<struct FHUDGFxTag>                    HUDStateGFxTags;                               // 0x01F8 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class USwfMovie*                                   DefaultAmmoBarMovie;                           // 0x0208 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class USwfMovie*                                   DefaultAmmoBarLeftMovie;                       // 0x0210 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              SkillAlmostReadySoundLength;                   // 0x0218 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.ModularHUDGFxMovieDefinition");
		}

		return uClassPointer;
	};

	void InitializeSpectatorWidget(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnCinematicModeDeactivated(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnCinematicModeActivated(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnTriggerPerkActivated(int32_t PerkSlotIndex, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnTeamDeathInfoChanged(class UObject* TeamDefinition, int32_t TotalDeadOnTeam, int32_t TeamSize, float PercentageDeadOnTeam, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnPlayerRespawn(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnPlayerDeath(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnPauseClosed(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnPauseOpened(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnBlindEnded(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnBlindStarted(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnTeleportCompleted(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnTeleportCanceled(class APawn* Player, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnTeleportRequest(class APawn* PlayerRequesting, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnPerkSelectorHide(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnPerkSelectorShow(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnDeathRecapHide(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnDeathRecapShow(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnScoreboardClose(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnScoreboardOpen(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnShopMenuClose(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnShopMenuOpen(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnSprintAttempted(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnTriggerSkillsBlockedByCrowdControlDebuffFeedback(int32_t SkillSlotIndex, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnTriggerSkillNotUnlockedYetFeedback(int32_t SkillSlotIndex, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnTriggerSkillOnCooldownFeedback(int32_t SkillSlotIndex, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnTriggerNotEnoughEnergyResourceFeedback(int32_t SkillSlotIndex, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnTriggerInvalidTargetFeedback(int32_t SkillSlotIndex, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnSkillGradeChange(class USkillDefinition* Skill, int32_t NewSkillPoints, int32_t Grade, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnSkillMenuHide(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnSkillMenuShow(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnTauntPrompt(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnAssistComboAchieved(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnAssistModifierAchieved(EAssistModifier EventOutput, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnAssistAwarded(int32_t AssistModifierSeletectedIndex, int32_t AssistComboSelectedIndex, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnKillComboAchieved(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnKillModifierAchieved(EKillModifier EventOutput, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnKO(int32_t KillModifierSeletectedIndex, int32_t KillComboSelectedIndex, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnLevelUp(int32_t ExpLevel, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnMinimapShrink(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnMinimapExpand(struct FBehaviorConsumerHandle& ConsumerHandle);
};

// Class PoplarGame.ModularHUDWidgetGFxObject
// 0x0010 (0x00D8 - 0x00E8)
class UModularHUDWidgetGFxObject : public UGFxObject
{
public:
	class UGBXDefinition*                              MyDefinition;                                  // 0x00D8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UModularHUDGFxMovie*                         HUDMovie;                                      // 0x00E0 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.ModularHUDWidgetGFxObject");
		}

		return uClassPointer;
	};

	void OnRelativeColorsChanged();
	void OnInputTypeChanged(bool bIsUsingGamepad);
	class UGFxObject* eventCreateGearArray();
	void SetDefinition(class UGBXDefinition* InDefinition);
	void Deinit();
	void Init();
};

// Class PoplarGame.MHW_ActivePerk
// 0x0000 (0x00E8 - 0x00E8)
class UMHW_ActivePerk : public UModularHUDWidgetGFxObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_ActivePerk");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.MHW_AllyKillMessageBase
// 0x0050 (0x00E8 - 0x0138)
class UMHW_AllyKillMessageBase : public UModularHUDWidgetGFxObject
{
public:
	class UGFxObject*                                  DeathTimerClip;                                // 0x00E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  EnemyLevelClip;                                // 0x00F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  XPRewardClip;                                  // 0x00F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  MoneyRewardClip;                               // 0x0100 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  EnemyIconContainerClip;                        // 0x0108 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  FirstBloodClip;                                // 0x0110 (0x0008) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FBufferedPlayerKill>           CachedBufferedPlayerKills;                     // 0x0118 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class APoplarPlayerReplicationInfo*                CachedAllyPRI;                                 // 0x0128 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bShowExpAndMoney : 1;                          // 0x0130 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_AllyKillMessageBase");
		}

		return uClassPointer;
	};

	void UpdateAllyBufferedKillMessages();
	void Tick(float DeltaTime);
	void Deinit();
	void Init();
};

// Class PoplarGame.MHW_Coop
// 0x00D0 (0x0138 - 0x0208)
class UMHW_Coop : public UMHW_AllyKillMessageBase
{
public:
	struct FPointer                                    VfTable_IISpectatorControlsObserver;           // 0x0138 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UGFxObject*                                  HealthClip;                                    // 0x0140 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ShieldClip;                                    // 0x0148 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  OvershieldClip;                                // 0x0150 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  CoopMessageClip;                               // 0x0158 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  LevelClip;                                     // 0x0160 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  NameClip;                                      // 0x0168 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  TalkingClip;                                   // 0x0170 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  HighlightClip;                                 // 0x0178 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ControlsGlyphClip;                             // 0x0180 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  UltimateClip;                                  // 0x0188 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  DisconnectedClip;                              // 0x0190 (0x0008) [0x0000000000002000] (CPF_Transient)
	class FString                                      AllyDyingString;                               // 0x0198 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      AllyRevivingString;                            // 0x01A8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	int32_t                                            CoopWidgetIndex;                               // 0x01B8 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bWidgetShown : 1;                              // 0x01BC (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bUseFriendlyDisplay : 1;                       // 0x01BC (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bUsingGamepad : 1;                             // 0x01BC (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           bIsHighlighted : 1;                            // 0x01BC (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	uint32_t                                           bCachedPlayerDead : 1;                         // 0x01BC (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	uint32_t                                           bCachedPlayerConnected : 1;                    // 0x01BC (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	uint32_t                                           bHealthBarVisible : 1;                         // 0x01BC (0x0004) [0x0000000000002000] [0x00000040] (CPF_Transient)
	uint32_t                                           bShieldBarVisible : 1;                         // 0x01BC (0x0004) [0x0000000000002000] [0x00000080] (CPF_Transient)
	uint32_t                                           bOvershieldBarVisible : 1;                     // 0x01BC (0x0004) [0x0000000000002000] [0x00000100] (CPF_Transient)
	uint32_t                                           bControlsGlyphShown : 1;                       // 0x01BC (0x0004) [0x0000000000002000] [0x00000200] (CPF_Transient)
	uint32_t                                           bSpectatorWantsControlsVisible : 1;            // 0x01BC (0x0004) [0x0000000000002000] [0x00000400] (CPF_Transient)
	uint32_t                                           bIsCurrentSpectatorViewTarget : 1;             // 0x01BC (0x0004) [0x0000000000002000] [0x00000800] (CPF_Transient)
	uint32_t                                           CachedActionSkillUnlocked : 1;                 // 0x01BC (0x0004) [0x0000000000002000] [0x00001000] (CPF_Transient)
	uint32_t                                           CachedActionSkillReady : 1;                    // 0x01BC (0x0004) [0x0000000000002000] [0x00002000] (CPF_Transient)
	class UPoplarPlayerNameIdentifierDefinition*       CachedPlayerNameID;                            // 0x01C0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class FString                                      CachedPlayerName;                              // 0x01C8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	float                                              CachedPlayerHealth;                            // 0x01D8 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CachedPlayerMaxHealth;                         // 0x01DC (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CachedPlayerShields;                           // 0x01E0 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CachedPlayerMaxShields;                        // 0x01E4 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CachedPlayerOvershields;                       // 0x01E8 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CachedPlayerMaxOvershields;                    // 0x01EC (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedPlayerLevel;                             // 0x01F0 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedPlayerRespawnTime;                       // 0x01F4 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CachedTimeSinceLastCheck;                      // 0x01F8 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FColor                                      CachedFriendlyTeamColor;                       // 0x01FC (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FColor                                      CachedEnemyTeamColor;                          // 0x0200 (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_Coop");
		}

		return uClassPointer;
	};

	void OnToggledSpectatorControlsVisibility();
	void eventSetDefinition(class UGBXDefinition* InDefinition);
};

// Class PoplarGame.MHW_EnemyNameplate
// 0x02E0 (0x0138 - 0x0418)
class UMHW_EnemyNameplate : public UMHW_AllyKillMessageBase
{
public:
	int32_t                                            AllyNum;                                       // 0x0138 (0x0004) [0x0000000000000000]               
	int32_t                                            SpectatorUnitNum;                              // 0x013C (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedCurrentAssistCount;                      // 0x0140 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedCurrentTurretCount;                      // 0x0144 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedCurrentLogisticsCount;                   // 0x0148 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedCurrentReconCount;                       // 0x014C (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedCurrentSupplyCount;                      // 0x0150 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CachedTimeSinceLastCheck;                      // 0x0154 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CachedDeadDisplayTime;                         // 0x0158 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CachedShowHealthAndShield;                     // 0x015C (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CachedShowName;                                // 0x0160 (0x0004) [0x0000000000002000] (CPF_Transient)
	EOpinion                                           CachedMyOpinionOfTarget;                       // 0x0164 (0x0001) [0x0000000000002000] (CPF_Transient)
	ENameplateFrameStyle                               CurrentFrameStyle;                             // 0x0165 (0x0001) [0x0000000000002000] (CPF_Transient)
	uint8_t                                            bDrawEnemyHealth;                              // 0x0166 (0x0001) [0x0000000000000000]               
	uint8_t                                            bNewTarget;                                    // 0x0167 (0x0001) [0x0000000000000000]               
	uint8_t                                            bLastShieldPresentUpdated;                     // 0x0168 (0x0001) [0x0000000000000000]               
	uint8_t                                            bLastOvershieldPresentUpdated;                 // 0x0169 (0x0001) [0x0000000000000000]               
	uint8_t                                            bLastMinibarPresentUpdated;                    // 0x016A (0x0001) [0x0000000000000000]               
	uint8_t                                            bLastFullyArmoredUpdated;                      // 0x016B (0x0001) [0x0000000000000000]               
	uint8_t                                            bLastBeingHealedUpdated;                       // 0x016C (0x0001) [0x0000000000000000]               
	uint8_t                                            bLastEnergyPresentUpdated;                     // 0x016D (0x0001) [0x0000000000000000]               
	ENameplateFlourishType                             CurrentFlourish;                               // 0x016E (0x0001) [0x0000000000002000] (CPF_Transient)
	class APoplarPlayerPawn*                           CachedAllyPPP;                                 // 0x0170 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UITargetable*                                CachedAllyTargetable_Object;                   // 0x0178 (0x0008) [0x0000000000000000] 
	class UITargetable*                                CachedAllyTargetable_Interface;                // 0x0180 (0x0008) [0x0000000000000000]               
	class UGFxObject*                                  HealthClip;                                    // 0x0188 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedHealthClipVisible;                       // 0x0190 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  HealthBar;                                     // 0x0198 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ColorSegmentClip;                              // 0x01A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  DangerousClip;                                 // 0x01A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedDangerousClipVisible;                    // 0x01B0 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  EnemyLevel;                                    // 0x01B8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  EnemyName;                                     // 0x01C0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class FString                                      CachedEnemyNameString;                         // 0x01C8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UGFxObject*                                  Skull;                                         // 0x01D8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  NPCClip;                                       // 0x01E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ShieldClip;                                    // 0x01E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedShieldClipVisible;                       // 0x01F0 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  OvershieldClip;                                // 0x01F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedOvershieldClipVisible;                   // 0x0200 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  DeltaHealthClip;                               // 0x0208 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  DeltaResourceClip;                             // 0x0210 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  InnerClip;                                     // 0x0218 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedInnerClipVisible;                        // 0x0220 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  MinHealthTickClip;                             // 0x0228 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  MaxHealthTickClip;                             // 0x0230 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  MinShieldTickClip;                             // 0x0238 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  MaxShieldTickClip;                             // 0x0240 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  HealthBarDeltaBarInstance;                     // 0x0248 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ShieldBarDeltaBarInstance;                     // 0x0250 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  KOIndicatorTintClip;                           // 0x0258 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ReviveTimerClip;                               // 0x0260 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  FriendlyTalkClip;                              // 0x0268 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  DirectionCaretClip;                            // 0x0270 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  HeadsHeldClip;                                 // 0x0278 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  HeadsHeldTextClip;                             // 0x0280 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedDirectionCaretClipVisible;               // 0x0288 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedDirectionCaretClipFrame;                 // 0x028C (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FPlatformUserId                             CachedUserId;                                  // 0x0290 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bUserIdSet : 1;                                // 0x0298 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bCurrentlyScreenClamped : 1;                   // 0x0298 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bHasIncrementedEnemyTooHighLevelStat : 1;      // 0x0298 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           bCachedShowNameplateWidget : 1;                // 0x0298 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	uint32_t                                           bHorizontalClampActive : 1;                    // 0x0298 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	uint32_t                                           bInReviveState : 1;                            // 0x0298 (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	uint32_t                                           IsShowingTalkIcon : 1;                         // 0x0298 (0x0004) [0x0000000000002000] [0x00000040] (CPF_Transient)
	uint32_t                                           bShowingHeadsHeldClip : 1;                     // 0x0298 (0x0004) [0x0000000000002000] [0x00000080] (CPF_Transient)
	class UGFxObject*                                  ArtifactsRoot;                                 // 0x02A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPerkIconGFxObject*                          ArtifactIcons[0x3];                            // 0x02A8 (0x0018) [0x0000000000002000] (CPF_Transient)
	class UITargetable*                                CurrentTargetable_Object;                      // 0x02C0 (0x0008) [0x0000000000000000] 
	class UITargetable*                                CurrentTargetable_Interface;                   // 0x02C8 (0x0008) [0x0000000000000000]               
	class UITargetable*                                LastTargetable_Object;                         // 0x02D0 (0x0008) [0x0000000000000000] 
	class UITargetable*                                LastTargetable_Interface;                      // 0x02D8 (0x0008) [0x0000000000000000]               
	class UITargetable*                                FadingTargetable_Object;                       // 0x02E0 (0x0008) [0x0000000000000000] 
	class UITargetable*                                FadingTargetable_Interface;                    // 0x02E8 (0x0008) [0x0000000000000000]               
	class UPawnAllegiance*                             CurrentTargetAllegiance;                       // 0x02F0 (0x0008) [0x0000000000000000]               
	class UPawnAllegiance*                             LastTargetAllegiance;                          // 0x02F8 (0x0008) [0x0000000000000000]               
	int32_t                                            LastMyLevelUpdated;                            // 0x0300 (0x0004) [0x0000000000000000]               
	float                                              LastHealthUpdated;                             // 0x0304 (0x0004) [0x0000000000000000]               
	float                                              LastShieldUpdated;                             // 0x0308 (0x0004) [0x0000000000000000]               
	float                                              LastOvershieldUpdated;                         // 0x030C (0x0004) [0x0000000000000000]               
	float                                              LastMinibarUpdated;                            // 0x0310 (0x0004) [0x0000000000000000]               
	float                                              LastEnergyUpdated;                             // 0x0314 (0x0004) [0x0000000000000000]               
	float                                              CurrentHealth;                                 // 0x0318 (0x0004) [0x0000000000000000]               
	float                                              CurrentShield;                                 // 0x031C (0x0004) [0x0000000000000000]               
	float                                              CurrentOvershield;                             // 0x0320 (0x0004) [0x0000000000000000]               
	float                                              CurrentMinibar;                                // 0x0324 (0x0004) [0x0000000000000000]               
	float                                              CurrentEnergy;                                 // 0x0328 (0x0004) [0x0000000000000000]               
	float                                              CurrentMaxHealth;                              // 0x032C (0x0004) [0x0000000000000000]               
	float                                              CurrentMaxShield;                              // 0x0330 (0x0004) [0x0000000000000000]               
	int32_t                                            LastEnemyLevelUpdated;                         // 0x0334 (0x0004) [0x0000000000000000]               
	class FString                                      LastEnemyNameUpdated;                          // 0x0338 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int32_t                                            DangerousDifference;                           // 0x0348 (0x0004) [0x0000000000000000]               
	int32_t                                            ImpossibleDifference;                          // 0x034C (0x0004) [0x0000000000000000]               
	float                                              AngleToNameplateTarget;                        // 0x0350 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     NameplatePosition;                             // 0x0354 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     WorldNameplatePosition;                        // 0x0360 (0x000C) [0x0000000000002000] (CPF_Transient)
	class UMHW_Nameplate_Definition*                   MyDeltaBarDef;                                 // 0x0370 (0x0008) [0x0000000000000000]               
	struct FUIResourceBarHelper                        HealthBarDeltaBar;                             // 0x0378 (0x0018) [0x0000000000002000] (CPF_Transient)
	struct FUIResourceBarHelper                        ShieldBarDeltaBar;                             // 0x0390 (0x0018) [0x0000000000002000] (CPF_Transient)
	class UIBalancedActor*                             BalancedActorForPlayer_Object;                 // 0x03A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UIBalancedActor*                             BalancedActorForPlayer_Interface;              // 0x03B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UStatDefinition*                             PlayerEnemyTooHighLevelStat;                   // 0x03B8 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              CachedShowEventClampedTime;                    // 0x03C0 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedEnemyLevel;                              // 0x03C4 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FLinearColor                                CachedTextColor;                               // 0x03C8 (0x0010) [0x0000000000002000] (CPF_Transient)
	struct FLinearColor                                CachedTeamColor;                               // 0x03D8 (0x0010) [0x0000000000002000] (CPF_Transient)
	class UPoplarNameplateTypeDefinition*              NameplateTypeDefinition;                       // 0x03E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarNameplateTypeDefinition*              OldNameplateTypeDefinition;                    // 0x03F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedInstantiatedBarTicks;                    // 0x03F8 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            LastHealthBarFrame;                            // 0x03FC (0x0004) [0x0000000000002000] (CPF_Transient)
	class UDesignerAttributeValueResolver*             AttributeResolver;                             // 0x0400 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UHeadHunterGameTypeUIDataDefinition*         HeadHunterDef;                                 // 0x0408 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CurrentHeadsHeldCount;                         // 0x0410 (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_EnemyNameplate");
		}

		return uClassPointer;
	};

	void OnPlayerTalkingStateChange(const struct FUniqueNetId& PlayerID, bool bIsTalking);
	void FinishNameplateFlourish(int32_t FlourishType);
};

// Class PoplarGame.MHW_PlayerWidget
// 0x0048 (0x0138 - 0x0180)
class UMHW_PlayerWidget : public UMHW_AllyKillMessageBase
{
public:
	class UGFxObject*                                  Portrait;                                      // 0x0138 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  XPBar;                                         // 0x0140 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  Talking;                                       // 0x0148 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  Marked;                                        // 0x0150 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPlayerNameIdentifierDefinition*             CachedPlayerNameID;                            // 0x0158 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              CachedXP;                                      // 0x0160 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedLevel;                                   // 0x0164 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           CachedIsTalking : 1;                           // 0x0168 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bDisplayingPlayerAsMarked : 1;                 // 0x0168 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	struct FUniqueNetId                                CachedNetId;                                   // 0x016C (0x0014) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_PlayerWidget");
		}

		return uClassPointer;
	};

	void OnPlayerTalkingStateChange(const struct FUniqueNetId& PlayerID, bool bIsTalking);
	void Tick(float DeltaTime);
	void Deinit();
	void Init();
};

// Class PoplarGame.MHW_AmmoBar
// 0x0070 (0x00E8 - 0x0158)
class UMHW_AmmoBar : public UModularHUDWidgetGFxObject
{
public:
	struct FPointer                                    VfTable_IIMHW_ProfileRefreshable;              // 0x00E8 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FCachedWeaponInfo                           CachedWeaponInfo;                              // 0x00F0 (0x0028) [0x0000000000002000] (CPF_Transient)
	class APoplarWeapon*                               CachedWeapToUse;                               // 0x0118 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  AmmoClip;                                      // 0x0120 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  AmmoLabel;                                     // 0x0128 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bIsLeftBar : 1;                                // 0x0130 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bProperlyHidden : 1;                           // 0x0130 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bNeedsRefresh : 1;                             // 0x0130 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	struct FResourcePoolReference                      PoolRef;                                       // 0x0138 (0x0018) [0x0000000000002000] (CPF_Transient)
	class UAmmoBarOverrideTypeDefinition*              CachedOverrideDef;                             // 0x0150 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_AmmoBar");
		}

		return uClassPointer;
	};

	void OnProfileRefreshed();
	void OnInputTypeChanged(bool bIsUsingGamepad);
	void Tick(float DeltaTime);
	void Deinit();
	void Init();
};

// Class PoplarGame.MHW_AmmoBarLeft
// 0x0000 (0x0158 - 0x0158)
class UMHW_AmmoBarLeft : public UMHW_AmmoBar
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_AmmoBarLeft");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.MHW_BossHealthBar
// 0x0038 (0x00E8 - 0x0120)
class UMHW_BossHealthBar : public UModularHUDWidgetGFxObject
{
public:
	class UITargetable*                                BossTargetInt_Object;                          // 0x00E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UITargetable*                                BossTargetInt_Interface;                       // 0x00F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedBossHealthFraction;                      // 0x00F8 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  InnerBarClip;                                  // 0x0100 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  HealthPercentageTextBox;                       // 0x0108 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarTeamInfo*                             CachedHUDOwnerTeamInfo;                        // 0x0110 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bIsFriendlyBoss : 1;                           // 0x0118 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bHasBeenVisible : 1;                           // 0x0118 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_BossHealthBar");
		}

		return uClassPointer;
	};

	void Tick(float DeltaTime);
	void Deinit();
	void Init();
};

// Class PoplarGame.MHW_ButtonPrompts
// 0x0078 (0x00E8 - 0x0160)
class UMHW_ButtonPrompts : public UModularHUDWidgetGFxObject
{
public:
	struct FHUDInteractionIcon                         CurrentInteractionIcon;                        // 0x00E8 (0x0040) [0x0000000000002001] (CPF_Edit | CPF_Transient)
	class UGFxObject*                                  IconClip;                                      // 0x0128 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  SecondaryIconClip;                             // 0x0130 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  DescClip;                                      // 0x0138 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  PriceClip;                                     // 0x0140 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  PulseClip;                                     // 0x0148 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bIconHidden : 1;                               // 0x0150 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bProgressBarShown : 1;                         // 0x0150 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           CachedObjectBeingUsed : 1;                     // 0x0150 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	class UGFxObject*                                  ProgressBar;                                   // 0x0158 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_ButtonPrompts");
		}

		return uClassPointer;
	};

	class FString GetFontColorTag(const struct FColor& DrawColor);
	void OnCurrencyChanged(const struct FCurrencyState& ChangedCurrency);
	void ShowIcon(const struct FInteractionIconWithOverrides& HUDIcon, EUsabilityType UsabilityType);
	void UpdateInteractionIcon();
	void OnInputTypeChanged(bool bIsUsingGamepad);
	void Tick(float DeltaTime);
	void Deinit();
	void Init();
};

// Class PoplarGame.MHW_CastBar
// 0x0028 (0x00E8 - 0x0110)
class UMHW_CastBar : public UModularHUDWidgetGFxObject
{
public:
	class UGFxObject*                                  CastBar;                                       // 0x00E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  TimeTextBox;                                   // 0x00F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarPlayerPawn*                           MyPawn;                                        // 0x00F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              CachedStartCastVal;                            // 0x0100 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedDialFrameVal;                            // 0x0104 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bSetVisible : 1;                               // 0x0108 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_CastBar");
		}

		return uClassPointer;
	};

	void Tick(float DeltaTime);
	void Deinit();
	void Init();
};

// Class PoplarGame.MHW_Challenges
// 0x0048 (0x00E8 - 0x0130)
class UMHW_Challenges : public UModularHUDWidgetGFxObject
{
public:
	class TArray<struct FChallengeUpdate>              ChallengeUpdateQueue;                          // 0x00E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	uint32_t                                           bDisplayingChallengeUpdate : 1;                // 0x00F8 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	class FString                                      CareerRewardString;                            // 0x0100 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CharacterRewardString;                         // 0x0110 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      EarnedCurrencyString;                          // 0x0120 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_Challenges");
		}

		return uClassPointer;
	};

	void extOnChallengeRemoved();
};

// Class PoplarGame.MHW_CharacterSkillNotice
// 0x00A0 (0x00E8 - 0x0188)
class UMHW_CharacterSkillNotice : public UModularHUDWidgetGFxObject
{
public:
	class UGFxObject*                                  SkillClip;                                     // 0x00E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  CooldownClip;                                  // 0x00F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  TooltipClip;                                   // 0x00F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  CooldownTextBox;                               // 0x0100 (0x0008) [0x0000000000002000] (CPF_Transient)
	EActionSkillSlot                                   SlotNumber;                                    // 0x0108 (0x0001) [0x0000000000002000] (CPF_Transient)
	class UPoplarSkillDefinition*                      CachedActionSkill;                             // 0x0110 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              CachedCooldown;                                // 0x0118 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CachedMaxCooldown;                             // 0x011C (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bSkillOnCooldown : 1;                          // 0x0120 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bNoticeReadyToDisplay : 1;                     // 0x0120 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bDisplayTooltips : 1;                          // 0x0120 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	class FString                                      InvalidTargetFeedbackString;                   // 0x0128 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      NotEnoughResourceFeedbackString;               // 0x0138 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      SkillOnCooldownFeedbackString;                 // 0x0148 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      SkillNotYetPurchasedFeedbackString;            // 0x0158 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      SkillNotYetUnlockedFeedbackStringDefault;      // 0x0168 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      SkillsBlockedByCrowdControlDebuff;             // 0x0178 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_CharacterSkillNotice");
		}

		return uClassPointer;
	};

	void extNoticeDidFinishOutroAnim();
	void NoticePostOutro();
	void PlayNoticeIntro();
	void UpdateActionSkillIcon(class UPoplarActionSkillDefinition* SkillDef);
	void UpdateActionSkill();
	void Tick(float DeltaTime);
	void Deinit();
	void Init();
};

// Class PoplarGame.MHW_CharacterSkills
// 0x0058 (0x00E8 - 0x0140)
class UMHW_CharacterSkills : public UModularHUDWidgetGFxObject
{
public:
	struct FPointer                                    VfTable_IIMHW_ProfileRefreshable;              // 0x00E8 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UGFxObject*                                  CooldownClip;                                  // 0x00F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  RankClip;                                      // 0x00F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  PointsClip;                                    // 0x0100 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  TooltipClip;                                   // 0x0108 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  CooldownTextBox;                               // 0x0110 (0x0008) [0x0000000000002000] (CPF_Transient)
	EActionSkillSlot                                   SlotNumber;                                    // 0x0118 (0x0001) [0x0000000000002000] (CPF_Transient)
	ECharacterSkillIconState                           CachedIconState;                               // 0x0119 (0x0001) [0x0000000000002000] (CPF_Transient)
	class UPoplarSkillDefinition*                      MySkillDef;                                    // 0x0120 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              CachedCooldown;                                // 0x0128 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedCooldownProgressFrame;                   // 0x012C (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bCanPlayAlmostReadySound : 1;                  // 0x0130 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bHadInputRestrictionLastFrame : 1;             // 0x0130 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	int32_t                                            CachedSpectatorTargetExpLevel;                 // 0x0134 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              LastUpdateTime_ButtonMap;                      // 0x0138 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              LastUpdateTime_NonFractionalCooldown;          // 0x013C (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_CharacterSkills");
		}

		return uClassPointer;
	};

	void OnProfileRefreshed();
};

// Class PoplarGame.MHW_Crosshairs
// 0x0080 (0x00E8 - 0x0168)
class UMHW_Crosshairs : public UModularHUDWidgetGFxObject
{
public:
	float                                              CrosshairSize;                                 // 0x00E8 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CrosshairFrame;                                // 0x00EC (0x0004) [0x0000000000002000] (CPF_Transient)
	uint8_t                                            CrosshairVisibility;                           // 0x00F0 (0x0001) [0x0000000000002000] (CPF_Transient)
	int32_t                                            ChargeFrame;                                   // 0x00F4 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  OuterClip;                                     // 0x00F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  WeaponClip;                                    // 0x0100 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ChargeClip;                                    // 0x0108 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  HitClip;                                       // 0x0110 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  SprintClip;                                    // 0x0118 (0x0008) [0x0000000000002000] (CPF_Transient)
	class TArray<class UGFxObject*>                    MarkerClips;                                   // 0x0120 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class UGFxObject*>                    MarkerClipTints;                               // 0x0130 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class APoplarWeapon*                               CachedWeapon;                                  // 0x0140 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FLinearColor                                MyCrosshairColor;                              // 0x0148 (0x0010) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bScopeCrosshair : 1;                           // 0x0158 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bDualWieldCrosshair : 1;                       // 0x0158 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bCachedWasSprinting : 1;                       // 0x0158 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	class UPoplarMeleeCrosshairDefinition*             MeleeCrosshairDef;                             // 0x0160 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_Crosshairs");
		}

		return uClassPointer;
	};

	void SetDefaultMeleeCrosshair(class UPoplarMeleeCrosshairDefinition* CrosshairDef);
	void UpdateCrosshairColor();
	void UpdateCrosshairFrame();
	void SetCrosshairVisibility(bool bVisible);
	void Tick(float DeltaTime);
	void Deinit();
	void Init();
};

// Class PoplarGame.MHW_CrowdControlBar
// 0x0118 (0x00E8 - 0x0200)
class UMHW_CrowdControlBar : public UModularHUDWidgetGFxObject
{
public:
	class UGFxObject*                                  BarClip;                                       // 0x00E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  FillClip;                                      // 0x00F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  TypeClip;                                      // 0x00F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  DurationClip;                                  // 0x0100 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  SecondsClip;                                   // 0x0108 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  BarIconClip;                                   // 0x0110 (0x0008) [0x0000000000002000] (CPF_Transient)
	ECrowdControlState                                 CCBarEffect;                                   // 0x0118 (0x0001) [0x0000000000002000] (CPF_Transient)
	float                                              CCBarDuration;                                 // 0x011C (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CCBarStartTime;                                // 0x0120 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TimeStampFadeOutStarted;                       // 0x0124 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bVisible : 1;                                  // 0x0128 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	class FString                                      CrowdControl_Seconds;                          // 0x0130 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CrowdControl_Infinite;                         // 0x0140 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CrowdControl_Stunned;                          // 0x0150 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CrowdControl_Slowed;                           // 0x0160 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CrowdControl_Immobilized;                      // 0x0170 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CrowdControl_Silenced;                         // 0x0180 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CrowdControl_Dazed;                            // 0x0190 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CrowdControl_Afraid;                           // 0x01A0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CrowdControl_Blind;                            // 0x01B0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CrowdControl_Charm;                            // 0x01C0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CrowdControl_Provoke;                          // 0x01D0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CrowdControl_ForcedMove;                       // 0x01E0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CrowdControl_Countered;                        // 0x01F0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_CrowdControlBar");
		}

		return uClassPointer;
	};

	void Tick(float DeltaTime);
	void Deinit();
	void Init();
};

// Class PoplarGame.MHW_CrowdControlIcon
// 0x0038 (0x00E8 - 0x0120)
class UMHW_CrowdControlIcon : public UModularHUDWidgetGFxObject
{
public:
	class UGFxObject*                                  InnerClip;                                     // 0x00E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  IconClip;                                      // 0x00F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  StackTextClip;                                 // 0x00F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  BarFillClip;                                   // 0x0100 (0x0008) [0x0000000000002000] (CPF_Transient)
	ECrowdControlState                                 CurrentCCState;                                // 0x0108 (0x0001) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bIsVisible : 1;                                // 0x010C (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	int32_t                                            Stacks;                                        // 0x0110 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              Duration;                                      // 0x0114 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TimeStampStarted;                              // 0x0118 (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_CrowdControlIcon");
		}

		return uClassPointer;
	};

	void Tick(float DeltaTime);
	void Deinit();
	void Init();
};

// Class PoplarGame.MHW_DamageIndicators
// 0x0010 (0x00E8 - 0x00F8)
class UMHW_DamageIndicators : public UModularHUDWidgetGFxObject
{
public:
	class TArray<struct FPoplarDamageEvent>            MyDamageEvents;                                // 0x00E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_DamageIndicators");
		}

		return uClassPointer;
	};

	void Tick(float DeltaTime);
	void RecordPoplarDamageEvent(class APlayerController* DamagedPlayer, class APawn* InstigatorPawn, float DamageSeverityPercent, int32_t DamageTags, EPlayerDamageType ADamageType);
};

// Class PoplarGame.MHW_DangerWarning
// 0x0028 (0x00E8 - 0x0110)
class UMHW_DangerWarning : public UModularHUDWidgetGFxObject
{
public:
	class APoplarPlayerController*                     PPCOwner;                                      // 0x00E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint8_t                                            CachedDangerLevel;                             // 0x00F0 (0x0001) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  WarningTextBox;                                // 0x00F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class FString                                      WarningText;                                   // 0x0100 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_DangerWarning");
		}

		return uClassPointer;
	};

	void Tick(float DeltaTime);
	void Deinit();
	void Init();
};

// Class PoplarGame.MHW_DeadPlayerList
// 0x0190 (0x00E8 - 0x0278)
class UMHW_DeadPlayerList : public UModularHUDWidgetGFxObject
{
public:
	struct FDeadPlayerIconObject                       FriendlyIconObjects[0x5];                      // 0x00E8 (0x00C8) [0x0000000000002000] (CPF_Transient)
	struct FDeadPlayerIconObject                       EnemyIconObjects[0x5];                         // 0x01B0 (0x00C8) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_DeadPlayerList");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.MHW_DeathRecap
// 0x01A0 (0x00E8 - 0x0288)
class UMHW_DeathRecap : public UModularHUDWidgetGFxObject
{
public:
	uint32_t                                           bUseRespawnTickets : 1;                        // 0x00E8 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bDeathRecapShown : 1;                          // 0x00E8 (0x0004) [0x0000000000000000] [0x00000002] 
	uint32_t                                           bDetailedMode : 1;                             // 0x00E8 (0x0004) [0x0000000000000000] [0x00000004] 
	uint32_t                                           bCachedInputDisabledDueToRecentDeath : 1;      // 0x00E8 (0x0004) [0x0000000000000000] [0x00000008] 
	uint32_t                                           bCachedPerkSelectorOpen : 1;                   // 0x00E8 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	uint32_t                                           bCachedWillRespawn : 1;                        // 0x00E8 (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	uint32_t                                           bWaitingForPanelRollout : 1;                   // 0x00E8 (0x0004) [0x0000000000002000] [0x00000040] (CPF_Transient)
	uint32_t                                           bCallForHelpPromptHidden : 1;                  // 0x00E8 (0x0004) [0x0000000000002000] [0x00000080] (CPF_Transient)
	uint32_t                                           bIsSpectatorMode : 1;                          // 0x00E8 (0x0004) [0x0000000000002000] [0x00000100] (CPF_Transient)
	EDeathRecapTimerType                               CurrentShowingTimer;                           // 0x00EC (0x0001) [0x0000000000002000] (CPF_Transient)
	class FString                                      DefaultAttackName;                             // 0x00F0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      TotalDamageAndTimeTemplate;                    // 0x0100 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      TotalDamageAndShortTimeTemplate;               // 0x0110 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      OverkillDamageTemplate;                        // 0x0120 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CreditsReceivedTemplate;                       // 0x0130 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      DamageDealt;                                   // 0x0140 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      TipHeaderText;                                 // 0x0150 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      SpectatingTemplate;                            // 0x0160 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      SpectatePreviousTemplate;                      // 0x0170 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      SpectateNextTemplate;                          // 0x0180 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MoreInfoTemplate;                              // 0x0190 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CallForHelpTemplate;                           // 0x01A0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      HoldToRespawnTemplate;                         // 0x01B0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      HintShowMapLabel;                              // 0x01C0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	float                                              InitialRespawnTime;                            // 0x01D0 (0x0004) [0x0000000000000000]               
	class FString                                      SpectatedPlayerName;                           // 0x01D8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UGFxObject*                                  CurrencyLostClip;                              // 0x01E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  CurrencyLostInnerClip;                         // 0x01F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  CurrencyLostTextClip;                          // 0x01F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  PanelsClip;                                    // 0x0200 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  KillerDetailsClip;                             // 0x0208 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  KillerHealthAndShieldClip;                     // 0x0210 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  AssisterDetailsClips[0x4];                     // 0x0218 (0x0020) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  AssisterHealthAndShieldClips[0x4];             // 0x0238 (0x0020) [0x0000000000002000] (CPF_Transient)
	class APoplarPlayerController*                     KilledPPC;                                     // 0x0258 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarPawn*                                 KilledPawn;                                    // 0x0260 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarPlayerReplicationInfo*                KilledPPRI;                                    // 0x0268 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarPlayerStateInfo*                      KilledPSI;                                     // 0x0270 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarTeamInfo*                             KilledPTI;                                     // 0x0278 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarGameReplicationInfo*                  PGRI;                                          // 0x0280 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_DeathRecap");
		}

		return uClassPointer;
	};

	void ClearSkillInfo();
	void SetSpectatedPlayerName(const class FString& PlayerName);
	void HideDeathRecap();
	void ShowDeathRecap();
	void HideAllAssistersInfo();
	void EnableSpectatorMode();
	void EnableRecapMode();
	void OnInputTypeChanged(bool bIsUsingGamepad);
	void Tick(float DeltaTime);
	void Deinit();
	void Init();
};

// Class PoplarGame.MHW_DebugText
// 0x0018 (0x00E8 - 0x0100)
class UMHW_DebugText : public UModularHUDWidgetGFxObject
{
public:
	class UGFxObject*                                  LevelTime;                                     // 0x00E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  IPAddress;                                     // 0x00F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  GameStage;                                     // 0x00F8 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_DebugText");
		}

		return uClassPointer;
	};

	void Tick(float DeltaTime);
	void Deinit();
	void Init();
};

// Class PoplarGame.MHW_Echo
// 0x0000 (0x00E8 - 0x00E8)
class UMHW_Echo : public UModularHUDWidgetGFxObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_Echo");
		}

		return uClassPointer;
	};

	void HideEchoCaller();
	void ShowEchoCaller(class UWillowDialogNameTag* NameTag, const struct FScaleformPortraitData& ScaleformPortrait);
};

// Class PoplarGame.MHW_GameModeBase
// 0x0038 (0x00E8 - 0x0120)
class UMHW_GameModeBase : public UModularHUDWidgetGFxObject
{
public:
	class UGFxObject*                                  Countdown;                                     // 0x00E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  Background;                                    // 0x00F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  EndCountdown;                                  // 0x00F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  EndCountdownParent;                            // 0x0100 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bStartedCountdown : 1;                         // 0x0108 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bDisplayedCountdown : 1;                       // 0x0108 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bGameHasAlreadyStarted : 1;                    // 0x0108 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           bStartedEndGameCountdown : 1;                  // 0x0108 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	float                                              SecondsInCountdownLeft;                        // 0x010C (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedCountdownValue;                          // 0x0110 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            MatchTimeLeftInSeconds;                        // 0x0114 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedAnimatedEndCountdownSeconds;             // 0x0118 (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_GameModeBase");
		}

		return uClassPointer;
	};

	void Tick(float DeltaTime);
	void Deinit();
	void Init();
};

// Class PoplarGame.MHW_GameModeGolemFight
// 0x0120 (0x0120 - 0x0240)
class UMHW_GameModeGolemFight : public UMHW_GameModeBase
{
public:
	class UGFxObject*                                  FriendlyScoreBarClip;                          // 0x0120 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  FriendlyScoreText;                             // 0x0128 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  EnemyScoreBarClip;                             // 0x0130 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  EnemyScoreText;                                // 0x0138 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  FriendlyWinClip;                               // 0x0140 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  FriendlyWinTimeText;                           // 0x0148 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  EnemyWinClip;                                  // 0x0150 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  EnemyWinTimeText;                              // 0x0158 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ControlPointClips[0x3];                        // 0x0160 (0x0018) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  TimerText;                                     // 0x0178 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FLinearColor                                AlliedObjectColor;                             // 0x0180 (0x0010) [0x0000000000002000] (CPF_Transient)
	struct FLinearColor                                AlliedTextColor;                               // 0x0190 (0x0010) [0x0000000000002000] (CPF_Transient)
	struct FLinearColor                                EnemyObjectColor;                              // 0x01A0 (0x0010) [0x0000000000002000] (CPF_Transient)
	struct FLinearColor                                EnemyTextColor;                                // 0x01B0 (0x0010) [0x0000000000002000] (CPF_Transient)
	struct FLinearColor                                NeutralObjectColor;                            // 0x01C0 (0x0010) [0x0000000000002000] (CPF_Transient)
	struct FLinearColor                                NeutralTextColor;                              // 0x01D0 (0x0010) [0x0000000000002000] (CPF_Transient)
	class FString                                      FriendlyWinString;                             // 0x01E0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      EnemyWinString;                                // 0x01F0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      SpectatorTeam1WinString;                       // 0x0200 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      SpectatorTeam2WinString;                       // 0x0210 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	int32_t                                            CachedEnemyBarFrameNum;                        // 0x0220 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedEnemyScore;                              // 0x0224 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedFriendlyBarFrameNum;                     // 0x0228 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedFriendlyScore;                           // 0x022C (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedFriendlyControlPoints;                   // 0x0230 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedEnemyControlPoints;                      // 0x0234 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedFriendlySecondsToWin;                    // 0x0238 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedEnemySecondsToWin;                       // 0x023C (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_GameModeGolemFight");
		}

		return uClassPointer;
	};

	void OnRelativeColorsChanged();
	void Tick(float DeltaTime);
	void Deinit();
	void Init();
};

// Class PoplarGame.MHW_GameModeHeadHunter
// 0x00A0 (0x0120 - 0x01C0)
class UMHW_GameModeHeadHunter : public UMHW_GameModeBase
{
public:
	class UGFxObject*                                  HeadsHeldFriendlyBar;                          // 0x0120 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  TimerTextClip;                                 // 0x0128 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  HeadsHeldEnemyBar;                             // 0x0130 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  FriendlyBarClip;                               // 0x0138 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  FriendlyTextClip;                              // 0x0140 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  CentralVarelsiClip;                            // 0x0148 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  CentralVarelsiBackground;                      // 0x0150 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  PlayerCollectedHeadsAnimClip;                  // 0x0158 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  HeadsHeldTop;                                  // 0x0160 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  HeadsHeldBottom;                               // 0x0168 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  EnemyBarClip;                                  // 0x0170 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  EnemyTextClip;                                 // 0x0178 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedFriendlyScore;                           // 0x0180 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedEnemyScore;                              // 0x0184 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedPlayerHeldHeads;                         // 0x0188 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedPlayerHeldHeadsSplitPlayer;              // 0x018C (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedTimeLeft;                                // 0x0190 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedEnemyTeamHeldHeads;                      // 0x0194 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedFriendlyTeamHeldHeads;                   // 0x0198 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedWinGoal;                                 // 0x019C (0x0004) [0x0000000000002000] (CPF_Transient)
	class UHeadHunterGameTypeUIDataDefinition*         HeadHunterDataDef;                             // 0x01A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APawn*                                       CachedContextPawn;                             // 0x01A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            HeadsHeldByTeamAReplicationChannel;            // 0x01B0 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            HeadsHeldByTeamBReplicationChannel;            // 0x01B4 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              NextScoreUpdateTime;                           // 0x01B8 (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_GameModeHeadHunter");
		}

		return uClassPointer;
	};

	void OnRelativeColorsChanged();
	void Tick(float DeltaTime);
	void Deinit();
	void Init();
};

// Class PoplarGame.MHW_GameModePVE
// 0x0528 (0x0120 - 0x0648)
class UMHW_GameModePVE : public UMHW_GameModeBase
{
public:
	int32_t                                            CachedTicketsRemainingNum;                     // 0x0120 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedWidgetState;                             // 0x0124 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           CachedUsingOverrides : 1;                      // 0x0128 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           TimerTextClipInitialized : 1;                  // 0x0128 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           CachedTimerTextClipVisible : 1;                // 0x0128 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           CachedShowingOpsPoints : 1;                    // 0x0128 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	uint32_t                                           IsOperationsMode : 1;                          // 0x0128 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	uint32_t                                           TicketClipInitialized : 1;                     // 0x0128 (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	uint32_t                                           CachedHardcoreMode : 1;                        // 0x0128 (0x0004) [0x0000000000002000] [0x00000040] (CPF_Transient)
	uint32_t                                           BarColorsInitialized : 1;                      // 0x0128 (0x0004) [0x0000000000002000] [0x00000080] (CPF_Transient)
	uint32_t                                           bEscortFirstTimeSetup : 1;                     // 0x0128 (0x0004) [0x0000000000002000] [0x00000100] (CPF_Transient)
	uint32_t                                           bProgressWasVisibleLastFrame : 1;              // 0x0128 (0x0004) [0x0000000000002000] [0x00000200] (CPF_Transient)
	uint32_t                                           Boss1DeathPlayed : 1;                          // 0x0128 (0x0004) [0x0000000000002000] [0x00000400] (CPF_Transient)
	uint32_t                                           Boss2DeathPlayed : 1;                          // 0x0128 (0x0004) [0x0000000000002000] [0x00000800] (CPF_Transient)
	class UGFxObject*                                  PVEBar;                                        // 0x0130 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ScoreCategoryClip;                             // 0x0138 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  TimerTextClip;                                 // 0x0140 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedTimeLeft;                                // 0x0148 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UObject*                                     CachedTrackedUnit;                             // 0x0150 (0x0008) [0x0000000000002000] (CPF_Transient)
	class FString                                      CachedUnitName;                                // 0x0158 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UGFxObject*                                  OpsPointsClip;                                 // 0x0168 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  OpsPointsTextClip;                             // 0x0170 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedOpsPoints;                               // 0x0178 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UPVEGameTypeUIDataDefinition*                GameTypeUIDef;                                 // 0x0180 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  TicketClip;                                    // 0x0188 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedRemainingRespawnTickets;                 // 0x0190 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  TicketCountCategoryClip;                       // 0x0198 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  TicketCountTextClip;                           // 0x01A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  HealthBarVisibleClips[0x5];                    // 0x01A8 (0x0028) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  HealthBarClips[0x5];                           // 0x01D0 (0x0028) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  HealthBarDamageFlashClips[0x5];                // 0x01F8 (0x0028) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  HealthBarTextClips[0x5];                       // 0x0220 (0x0028) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  HealthBarAnimClips[0x5];                       // 0x0248 (0x0028) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  SkullClip;                                     // 0x0270 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ScoreTextClip;                                 // 0x0278 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ScoreDeltaClip;                                // 0x0280 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ScoreDeltaTextClip;                            // 0x0288 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedScore;                                   // 0x0290 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedWaveTimeLeft;                            // 0x0294 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  CenterCircleClip;                              // 0x0298 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ProgressBarClip;                               // 0x02A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ProgressBarTintClip;                           // 0x02A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ProgressBarTextClip;                           // 0x02B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ProgressBarDamageFlashClip;                    // 0x02B8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  WaveProgressTextClip;                          // 0x02C0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  WaveStartClip;                                 // 0x02C8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  WaveStartTextClip;                             // 0x02D0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  WaveCompleteClip;                              // 0x02D8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  WaveCompleteTextClip;                          // 0x02E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class FString                                      CachedDefenseBarString;                        // 0x02E8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            CachedCurrentState;                            // 0x02F8 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedHealthVisibleValues[0x5];                // 0x02FC (0x0014) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedHealthInterpValues[0x5];                 // 0x0310 (0x0014) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedDefenseState;                            // 0x0324 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedDefenseProgress;                         // 0x0328 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  BossBarVisibleClip;                            // 0x0330 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  BossBarClip;                                   // 0x0338 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  BossBarTintClip;                               // 0x0340 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  BossBarEmblemClip;                             // 0x0348 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  BossShieldClip;                                // 0x0350 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  BossShieldFlashClip;                           // 0x0358 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  BossOvershieldFlashClip;                       // 0x0360 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  BossOvershieldClip;                            // 0x0368 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  BossDeltaClip;                                 // 0x0370 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  BossDeltaShieldClip;                           // 0x0378 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  BossDamageFlashClip;                           // 0x0380 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  BossNameVisibleTextClip;                       // 0x0388 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  BossNameTextClip;                              // 0x0390 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  BossInvulnerableClip;                          // 0x0398 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedBossInvulnerable;                        // 0x03A0 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CachedOvershieldValue;                         // 0x03A4 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CachedShieldValue;                             // 0x03A8 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CachedHealthValue;                             // 0x03AC (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedBossHasShield;                           // 0x03B0 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedBossHasOvershield;                       // 0x03B4 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  EscortHealthBar;                               // 0x03B8 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedEscortHealthValue;                       // 0x03C0 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  EscortHealthBarDamageFlashClip;                // 0x03C8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  EscortLabel;                                   // 0x03D0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  EscortProgressBar;                             // 0x03D8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  EscortIcon;                                    // 0x03E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  EscortObjectivePips[0xA];                      // 0x03E8 (0x0050) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  EscortNameClip;                                // 0x0438 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  EscortVsBossHealthBar;                         // 0x0440 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  EscortVsBossShieldBar;                         // 0x0448 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  EscortVsBossNameClip;                          // 0x0450 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              EscortProgressFloat;                           // 0x0458 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              EscortLengthOfBar;                             // 0x045C (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              EscortObjectivePipsX0;                         // 0x0460 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  MultiBoss1HealthClip;                          // 0x0468 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedMultiBoss1HealthValue;                   // 0x0470 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  MultiBoss1HealthDamageFlashClip;               // 0x0478 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  MultiBoss1ShieldClip;                          // 0x0480 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedMultiBoss1ShieldValue;                   // 0x0488 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  MultiBoss1ShieldDamageFlashClip;               // 0x0490 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  MultiBoss1NameClip;                            // 0x0498 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  MultiBoss1InvulnerableClip;                    // 0x04A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedMultiBoss1Invulnerable;                  // 0x04A8 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  MultiBoss1EmblemClip;                          // 0x04B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  MultiBoss2HealthClip;                          // 0x04B8 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedMultiBoss2HealthValue;                   // 0x04C0 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  MultiBoss2HealthDamageFlashClip;               // 0x04C8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  MultiBoss2ShieldClip;                          // 0x04D0 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedMultiBoss2ShieldValue;                   // 0x04D8 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  MultiBoss2ShieldDamageFlashClip;               // 0x04E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  MultiBoss2NameClip;                            // 0x04E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  MultiBoss2InvulnerableClip;                    // 0x04F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedMultiBoss2Invulnerable;                  // 0x04F8 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  MultiBoss2EmblemClip;                          // 0x0500 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedMultiBossNumTracked;                     // 0x0508 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedLowHealthFlashing;                       // 0x050C (0x0004) [0x0000000000002000] (CPF_Transient)
	class FString                                      ScoreCategoryName;                             // 0x0510 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      TicketCountCategoryName;                       // 0x0520 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      SuccessMessage;                                // 0x0530 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      FailureMessage;                                // 0x0540 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      TeleportInMessage;                             // 0x0550 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      WaveStartMessage;                              // 0x0560 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      WaveCompleteMessage;                           // 0x0570 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      WaveString;                                    // 0x0580 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      WaveProgressBarString;                         // 0x0590 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      WaveStartsInBarString;                         // 0x05A0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class UGFxObject*                                  ShardBarClip;                                  // 0x05B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ShardIconClip;                                 // 0x05B8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ShardIconBgClip;                               // 0x05C0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ShardSuccessMessageClip;                       // 0x05C8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ShardFailureMessageClip;                       // 0x05D0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ShardTeleportTimerClip;                        // 0x05D8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ShardTeleportMessageClip;                      // 0x05E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ShardCountClip;                                // 0x05E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ShardMaxCountClip;                             // 0x05F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ShardCountTextBoxClip;                         // 0x05F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedShardCountdownStartTime;                 // 0x0600 (0x0004) [0x0000000000002000] (CPF_Transient)
	EShardPresentationState                            ShardPresentedState;                           // 0x0604 (0x0001) [0x0000000000002000] (CPF_Transient)
	EShardPresentationState                            CachedShardPresentedState;                     // 0x0605 (0x0001) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedShardClipsVisible;                       // 0x0608 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FUIResourceBarHelper                        BossDeltaHelper;                               // 0x060C (0x0018) [0x0000000000002000] (CPF_Transient)
	struct FUIResourceBarHelper                        BossShieldDeltaHelper;                         // 0x0624 (0x0018) [0x0000000000002000] (CPF_Transient)
	class UMHW_GameModePVE_Definition*                 GameModeDef;                                   // 0x0640 (0x0008) [0x0000000000000000]               

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_GameModePVE");
		}

		return uClassPointer;
	};

	void eventSetDefinition(class UGBXDefinition* InDefinition);
	void OnMoneyDeltaDisplayComplete();
	void OnRelativeColorsChanged();
	void UpdateBarColors();
	void Tick(float DeltaTime);
	void Deinit();
	void Init();
};

// Class PoplarGame.MHW_GameModeScort
// 0x00D0 (0x0120 - 0x01F0)
class UMHW_GameModeScort : public UMHW_GameModeBase
{
public:
	class UGFxObject*                                  CentralBaseClip;                               // 0x0120 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  EnemyBaseTintClip;                             // 0x0128 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  FriendlyBaseTintClip;                          // 0x0130 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  FriendlyPortalClip;                            // 0x0138 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  EnemyPortalClip;                               // 0x0140 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  FriendlyPortalTintClip;                        // 0x0148 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  FriendlyPortalGlowTintClip;                    // 0x0150 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  EnemyPortalTintClip;                           // 0x0158 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  EnemyPortalGlowTintClip;                       // 0x0160 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  FriendlyBarClip;                               // 0x0168 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  EnemyBarClip;                                  // 0x0170 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  FriendlyTextClip;                              // 0x0178 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  EnemyTextClip;                                 // 0x0180 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  TimerTextClip;                                 // 0x0188 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  FriendlyUltraMinionLevelTextClip;              // 0x0190 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  EnemyUltraMinionLevelTextClip;                 // 0x0198 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedFriendlyScore;                           // 0x01A0 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedEnemyScore;                              // 0x01A4 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedTimeLeft;                                // 0x01A8 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedUIState;                                 // 0x01AC (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedFriendlyUltraMinionLevel;                // 0x01B0 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedEnemyUltraMinionLevel;                   // 0x01B4 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bIsMusketeers : 1;                             // 0x01B8 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	class FString                                      FinaleAdvantageString;                         // 0x01C0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      FinaleSuddenDeathString;                       // 0x01D0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      UltraMinionLevelFormatString;                  // 0x01E0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_GameModeScort");
		}

		return uClassPointer;
	};

	void OnRelativeColorsChanged();
	void Tick(float DeltaTime);
	void Deinit();
	void Init();
};

// Class PoplarGame.MHW_GameModeMusketeers
// 0x0008 (0x01F0 - 0x01F8)
class UMHW_GameModeMusketeers : public UMHW_GameModeScort
{
public:
	EMapControlTeam                                    CachedMapControlTeam;                          // 0x01F0 (0x0001) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_GameModeMusketeers");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.MHW_GameModeWreckage
// 0x0118 (0x0120 - 0x0238)
class UMHW_GameModeWreckage : public UMHW_GameModeBase
{
public:
	class UGFxObject*                                  FriendlyText;                                  // 0x0120 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  SentrySmallFriendly;                           // 0x0128 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  SentryBigFriendly;                             // 0x0130 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  CoreFriendly;                                  // 0x0138 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  EnemyText;                                     // 0x0140 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  SentrySmallEnemy;                              // 0x0148 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  SentryBigEnemy;                                // 0x0150 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  CoreEnemy;                                     // 0x0158 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  TimerText;                                     // 0x0160 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  FriendlyDots[0x5];                             // 0x0168 (0x0028) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  FriendlyDotTints[0x5];                         // 0x0190 (0x0028) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  EnemyDots[0x5];                                // 0x01B8 (0x0028) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  EnemyDotTints[0x5];                            // 0x01E0 (0x0028) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bVictory : 1;                                  // 0x0208 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bBossSpawned : 1;                              // 0x0208 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bBossDied : 1;                                 // 0x0208 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           bSentrySmallFriendlyWarning : 1;               // 0x0208 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	uint32_t                                           bSentryBigFriendlyWarning : 1;                 // 0x0208 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	uint32_t                                           bSentrySmallEnemyWarning : 1;                  // 0x0208 (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	uint32_t                                           bSentryBigEnemyWarning : 1;                    // 0x0208 (0x0004) [0x0000000000002000] [0x00000040] (CPF_Transient)
	int32_t                                            CachedGameLength;                              // 0x020C (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedFriendlyScore;                           // 0x0210 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedEnemyScore;                              // 0x0214 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedFriendlySmallTurretCount;                // 0x0218 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedEnemySmallTurretCount;                   // 0x021C (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedFriendlyBigTurretCount;                  // 0x0220 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedEnemyBigTurretCount;                     // 0x0224 (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<class APoplarAlertPoint*>             ActiveAlerts;                                  // 0x0228 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_GameModeWreckage");
		}

		return uClassPointer;
	};

	void OnRelativeColorsChanged();
	void Tick(float DeltaTime);
	void Deinit();
	void Init();
};

// Class PoplarGame.MHW_GameStatus
// 0x0038 (0x00E8 - 0x0120)
class UMHW_GameStatus : public UModularHUDWidgetGFxObject
{
public:
	class UGFxObject*                                  Timer;                                         // 0x00E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  RedScore;                                      // 0x00F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  GreenScore;                                    // 0x00F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  OtherScore;                                    // 0x0100 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedRedScore;                                // 0x0108 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedGreenScore;                              // 0x010C (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedOtherScore;                              // 0x0110 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedElapsedTime;                             // 0x0114 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              LastUpdateTime;                                // 0x0118 (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_GameStatus");
		}

		return uClassPointer;
	};

	void Tick(float DeltaTime);
	void Deinit();
	void Init();
};

// Class PoplarGame.MHW_HealthBarCenter
// 0x0018 (0x00E8 - 0x0100)
class UMHW_HealthBarCenter : public UModularHUDWidgetGFxObject
{
public:
	float                                              CachedHealth;                                  // 0x00E8 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CachedMaxHealth;                               // 0x00EC (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CachedEnergy;                                  // 0x00F0 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CachedMaxEnergy;                               // 0x00F4 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           CachedHidden : 1;                              // 0x00F8 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_HealthBarCenter");
		}

		return uClassPointer;
	};

	void Tick(float DeltaTime);
};

// Class PoplarGame.MHW_HealthBarLower
// 0x0050 (0x00E8 - 0x0138)
class UMHW_HealthBarLower : public UModularHUDWidgetGFxObject
{
public:
	float                                              CachedHealth;                                  // 0x00E8 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CachedMaxHealth;                               // 0x00EC (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CachedHealthRegen;                             // 0x00F0 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CachedCountdownTime;                           // 0x00F4 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedDeltaNum;                                // 0x00F8 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedHealthInterpVal;                         // 0x00FC (0x0004) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  HealthText;                                    // 0x0100 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  RegenText;                                     // 0x0108 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  DeltaHealthBar;                                // 0x0110 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  TintBar;                                       // 0x0118 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FUIResourceBarHelper                        MyHelper;                                      // 0x0120 (0x0018) [0x0000000000000000]               

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_HealthBarLower");
		}

		return uClassPointer;
	};

	void eventSetDefinition(class UGBXDefinition* InDefinition);
	void OnRelativeColorsChanged();
	void UpdateHealthBarColor();
	void Tick(float DeltaTime);
	void Deinit();
	void Init();
};

// Class PoplarGame.MHW_IncomeDisplay
// 0x0030 (0x00E8 - 0x0118)
class UMHW_IncomeDisplay : public UModularHUDWidgetGFxObject
{
public:
	class FString                                      LocalizedXP;                                   // 0x00E8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class TArray<struct FIncomeMessage>                MessageQueue;                                  // 0x00F8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class UGFxObject*>                    DisplayLines;                                  // 0x0108 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_IncomeDisplay");
		}

		return uClassPointer;
	};

	void extOnMessageDisplayComplete();
	void extCycleMessageFeed();
};

// Class PoplarGame.MHW_InWorldIcon
// 0x0068 (0x00E8 - 0x0150)
class UMHW_InWorldIcon : public UModularHUDWidgetGFxObject
{
public:
	struct FVector2D                                   VVOrg;                                         // 0x00E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FVector2D                                   VVExt;                                         // 0x00F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ParentClip;                                    // 0x00F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              LOSUpdateInterval;                             // 0x0100 (0x0004) [0x0000000000000002] (CPF_Const)   
	class TArray<struct FHeroLOSStruct>                EnemyLOSList;                                  // 0x0108 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            LocalPlayerIndex;                              // 0x0118 (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<class UIWorldIconObject*>             WorldObjectsWithIcons;                         // 0x0120 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FIconsToBeDeletedInfo>         IconsToBeDeleted;                              // 0x0130 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class UGFxObject*>                    IconReferences;                                // 0x0140 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_InWorldIcon");
		}

		return uClassPointer;
	};

	void UpdateIcons(float DeltaTime, class AWillowGameReplicationInfo* WGRI, class ULocalPlayer* LP, const struct FVector& ViewLocation, const struct FRotator& ViewRotation, float ViewFOV);
	void Tick(float DeltaTime);
	void Deinit();
	void Init();
};

// Class PoplarGame.MHW_KO
// 0x0038 (0x00E8 - 0x0120)
class UMHW_KO : public UModularHUDWidgetGFxObject
{
public:
	class TArray<struct FKnockoutMessage>              KnockoutMessageQueue;                          // 0x00E8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class FString                                      AssistString;                                  // 0x00F8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      TauntNowMessage;                               // 0x0108 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class APoplarPlayerReplicationInfo*                CachedKilledPPRI;                              // 0x0118 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_KO");
		}

		return uClassPointer;
	};

	void OnPlayOutComplete();
};

// Class PoplarGame.MHW_LevelUp
// 0x0068 (0x00E8 - 0x0150)
class UMHW_LevelUp : public UModularHUDWidgetGFxObject
{
public:
	class UGFxObject*                                  InnerClip;                                     // 0x00E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  LevelCircle;                                   // 0x00F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  OuterCircle;                                   // 0x00F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  OuterCircleGlow;                               // 0x0100 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ReticleShape1;                                 // 0x0108 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ReticleShape2;                                 // 0x0110 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  SkillPointMessage;                             // 0x0118 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  SkillPointText;                                // 0x0120 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  LevelValue;                                    // 0x0128 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  LevelValueInner;                               // 0x0130 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  Icon;                                          // 0x0138 (0x0008) [0x0000000000002000] (CPF_Transient)
	class FString                                      UltimateUnlocked;                              // 0x0140 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_LevelUp");
		}

		return uClassPointer;
	};

	void LevelUp(int32_t ExpLevel);
	void Init();
};

// Class PoplarGame.MHW_MapChallenges
// 0x0050 (0x00E8 - 0x0138)
class UMHW_MapChallenges : public UModularHUDWidgetGFxObject
{
public:
	struct FPointer                                    DisplayedChallengeData;                        // 0x00E8 (0x0008) [0x0000000000003000] (CPF_Native | CPF_Transient)
	int32_t                                            DisplayedProgress;                             // 0x00F0 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            DisplayedSecondsRemaining;                     // 0x00F4 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            WidgetState;                                   // 0x00F8 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CurrentChallengeIndex;                         // 0x00FC (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            bChallengeCompleted;                           // 0x0100 (0x0004) [0x0000000000002000] (CPF_Transient)
	class FString                                      CareerRewardString;                            // 0x0108 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CharacterRewardString;                         // 0x0118 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      EarnedCurrencyString;                          // 0x0128 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_MapChallenges");
		}

		return uClassPointer;
	};

	void extChallengeHiding();
};

// Class PoplarGame.MHW_MatchEventsFeed
// 0x0050 (0x00E8 - 0x0138)
class UMHW_MatchEventsFeed : public UModularHUDWidgetGFxObject
{
public:
	class TArray<struct FInitializationData>           InitializationEntries;                         // 0x00E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FMatchEventObjectiveInfo>      TrackedObjectives;                             // 0x00F8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<class UPoplarMissionObjectiveDefinition*> CompletedObjectivesToBeAnimated;               // 0x0108 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<class UPoplarMissionObjectiveDefinition*> CompletedObjectivesAlreadyAnimated;            // 0x0118 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int32_t                                            WidgetCounter;                                 // 0x0128 (0x0004) [0x0000000000000000]               
	float                                              TimeUntilManualUpdate;                         // 0x012C (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bManualUpdateEnabled : 1;                      // 0x0130 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_MatchEventsFeed");
		}

		return uClassPointer;
	};

	void extOnMatchFeedWidgetLoaded(class UGFxObject* Widget, int32_t InitializationIndex);
	void DEBUG_DumpFeed();
	void RemoveMatchEventFromFeed(class UPoplarMessageDefinition* MessageDefinition);
	void AddMatchEventToFeed(class UPoplarMessageDefinition* MessageDefinition, int32_t BackgroundFrame, const class FString& Message, const struct FPoplarMessageDefParams& Params);
	void Tick(float DeltaTime);
	void Deinit();
	void Init();
};

// Class PoplarGame.MHW_MatchEventsHeadline
// 0x0028 (0x00E8 - 0x0110)
class UMHW_MatchEventsHeadline : public UModularHUDWidgetGFxObject
{
public:
	class UGFxObject*                                  HeadlinePlaceholder;                           // 0x00E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedLastMessageType;                         // 0x00F0 (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FMatchEventHeadlineQueueData>  HeadlineQueue;                                 // 0x00F8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	float                                              HeadlineDisplayTimeMin;                        // 0x0108 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              HeadlineDisplayTimeMax;                        // 0x010C (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_MatchEventsHeadline");
		}

		return uClassPointer;
	};

	void OnPlayOutComplete();
	void OnRelativeColorsChanged();
	void AddHeadlineToQueue(class UPoplarMessageDefinition* MessageDefinition, int32_t BackgroundFrame, const class FString& Message, const struct FPoplarMessageDefParams& Params);
	void Tick(float DeltaTime);
	void Deinit();
	void Init();
};

// Class PoplarGame.MHW_MiniMapActorSelect
// 0x0318 (0x00E8 - 0x0400)
class UMHW_MiniMapActorSelect : public UModularHUDWidgetGFxObject
{
public:
	class UMHW_MiniMapOuter*                           OuterMinimapClip;                              // 0x00E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMiniMapSelectionFilter*                     ActorFilter;                                   // 0x00F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FActorSelectionGFxContainer                 ActorSelectGFxContainer[0x4];                  // 0x00F8 (0x0160) [0x0000000000002000] (CPF_Transient)
	struct FActorSelectionDataContainer                ActorSelectCachedDataContainer[0x4];           // 0x0258 (0x01A0) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            CachedMinimapActorSelectionIndex;              // 0x03F8 (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_MiniMapActorSelect");
		}

		return uClassPointer;
	};

	void Tick(float DeltaTime);
	void Deinit();
	void Init();
};

// Class PoplarGame.MHW_MinimapExpanded
// 0x0308 (0x00E8 - 0x03F0)
class UMHW_MinimapExpanded : public UModularHUDWidgetGFxObject
{
public:
	class UGFxObject*                                  ObjectiveOuterClip;                            // 0x00E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  MapNameClip;                                   // 0x00F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ObjectivesLabelClip;                           // 0x00F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FMinimapObjective                           MinimapObjectives[0x12];                       // 0x0100 (0x02D0) [0x0000000000002000] (CPF_Transient)
	float                                              ObjectivesUpdateRate;                          // 0x03D0 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              LastObjectivesUpdateTime;                      // 0x03D4 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bIsExpanded : 1;                               // 0x03D8 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	class UGearboxHintBarContainerGFxObject*           HintBarContainer;                              // 0x03E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	EAspectRatio                                       CachedAspectRatio;                             // 0x03E8 (0x0001) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_MinimapExpanded");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.MHW_MiniMapOuter
// 0x0020 (0x00E8 - 0x0108)
class UMHW_MiniMapOuter : public UModularHUDWidgetGFxObject
{
public:
	EMinimapState                                      CurrentMinimapState;                           // 0x00E8 (0x0001) [0x0000000000002000] (CPF_Transient)
	class UMHW_MiniMapInner*                           MinimapClip;                                   // 0x00F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMHW_MiniMapActorSelect*                     ActorSelectClip;                               // 0x00F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bMinimapExpanded : 1;                          // 0x0100 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_MiniMapOuter");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.MHW_MoneyCounter
// 0x0018 (0x00E8 - 0x0100)
class UMHW_MoneyCounter : public UModularHUDWidgetGFxObject
{
public:
	class UGFxObject*                                  MoneyRemoval;                                  // 0x00E8 (0x0008) [0x0000000000000000]               
	class UGFxObject*                                  MoneyText;                                     // 0x00F0 (0x0008) [0x0000000000000000]               
	class APoplarPlayerReplicationInfo*                LastPPRI;                                      // 0x00F8 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_MoneyCounter");
		}

		return uClassPointer;
	};

	void OnCurrencyChanged(const struct FCurrencyState& ChangedCurrency);
	void Deinit();
	void Init();
};

// Class PoplarGame.MHW_PerkPurchaseAvailable
// 0x0050 (0x00E8 - 0x0138)
class UMHW_PerkPurchaseAvailable : public UModularHUDWidgetGFxObject
{
public:
	struct FPointer                                    VfTable_IIMHW_ProfileRefreshable;              // 0x00E8 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIMetaLoadoutObserver;                 // 0x00F0 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UGFxObject*                                  MessageTextField;                              // 0x00F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  GlyphClipTextField;                            // 0x0100 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  CostTextField;                                 // 0x0108 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPerkIconGFxObject*                          PerkIcon;                                      // 0x0110 (0x0008) [0x0000000000002000] (CPF_Transient)
	class FString                                      LocalizedPurchaseAvailableString;              // 0x0118 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	float                                              LastUpdateTime;                                // 0x0128 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bHadPlayerRestrictionLastTick : 1;             // 0x012C (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bCachedVisible : 1;                            // 0x012C (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	int32_t                                            PerkIndexToShow;                               // 0x0130 (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_PerkPurchaseAvailable");
		}

		return uClassPointer;
	};

	void OnProfileRefreshed();
	void OnCurrencyChanged();
};

// Class PoplarGame.MHW_PerkSelector
// 0x0058 (0x00E8 - 0x0140)
class UMHW_PerkSelector : public UModularHUDWidgetGFxObject
{
public:
	struct FPointer                                    VfTable_IIMetaLoadoutObserver;                 // 0x00E8 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	uint32_t                                           bIsShowing : 1;                                // 0x00F0 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bIsInteractable : 1;                           // 0x00F0 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bHadInputRestrictionLastFrame : 1;             // 0x00F0 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           bDetailsVisible : 1;                           // 0x00F0 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	uint32_t                                           bWasToggled : 1;                               // 0x00F0 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	uint32_t                                           bHasBoughtGear : 1;                            // 0x00F0 (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	uint32_t                                           bCloseTriggered : 1;                           // 0x00F0 (0x0004) [0x0000000000002000] [0x00000040] (CPF_Transient)
	class UGFxObject*                                  MainClip;                                      // 0x00F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ShardsTextField;                               // 0x0100 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              CloseTimer;                                    // 0x0108 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              UpdatePerkTimer;                               // 0x010C (0x0004) [0x0000000000002000] (CPF_Transient)
	class FString                                      LocalizedTitleString;                          // 0x0110 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedShardsString;                         // 0x0120 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class TArray<EPerkActivationStatus>                CachedPerkActivationStatuses;                  // 0x0130 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_PerkSelector");
		}

		return uClassPointer;
	};

	void OnInputTypeChanged(bool bIsUsingGamepad);
	void OnCurrencyChanged(const struct FCurrencyState& ChangedCurrency);
};

// Class PoplarGame.MHW_Player11Spectator
// 0x0068 (0x00E8 - 0x0150)
class UMHW_Player11Spectator : public UModularHUDWidgetGFxObject
{
public:
	struct FPointer                                    VfTable_IISpectatorControlsObserver;           // 0x00E8 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class TArray<struct FSpectatorHUDActionIconPair>   ActionIconPairs;                               // 0x00F0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class TArray<struct FSpectatorHUDHintButton>       HintButtons;                                   // 0x0100 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UGearboxHintBarContainerGFxObject*           HintBarContainer;                              // 0x0110 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            SpectatorWidgetDisplayMode;                    // 0x0118 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bUsingGamepad : 1;                             // 0x011C (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	class UGFxObject*                                  InnerClip;                                     // 0x0120 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  GFxObject_CurrentPlayer;                       // 0x0128 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMHW_Player11Spectator_Definition*           WidgetDef;                                     // 0x0130 (0x0008) [0x0000000000002000] (CPF_Transient)
	class FString                                      SpectatingLocalizedString;                     // 0x0138 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	uint8_t                                            CustomCamSet[0x5];                             // 0x0148 (0x0005) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_Player11Spectator");
		}

		return uClassPointer;
	};

	void OnToggledSpectatorControlsVisibility();
};

// Class PoplarGame.MHW_ProgressBar
// 0x0098 (0x00E8 - 0x0180)
class UMHW_ProgressBar : public UModularHUDWidgetGFxObject
{
public:
	class UResourcePoolDefinition*                     ResourcePoolDef;                               // 0x00E8 (0x0008) [0x0000000000000000]               
	struct FResourcePoolReference                      ResourcePoolReference;                         // 0x00F0 (0x0018) [0x0000000000000000]               
	class UObject*                                     ResourcePoolContext;                           // 0x0108 (0x0008) [0x0000000000000000]               
	class UGFxObject*                                  CastBar;                                       // 0x0110 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  TimeTextBox;                                   // 0x0118 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  CaptionTextBox;                                // 0x0120 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  LeftBar;                                       // 0x0128 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  RightBar;                                      // 0x0130 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bUseResourcePool : 1;                          // 0x0138 (0x0004) [0x0000000000000000] [0x00000001] 
	uint32_t                                           bResetNonResourceCache : 1;                    // 0x0138 (0x0004) [0x0000000000000000] [0x00000002] 
	uint32_t                                           bHideBarWhenDoneAnimating : 1;                 // 0x0138 (0x0004) [0x0000000000000000] [0x00000004] 
	uint32_t                                           bShowTextBox : 1;                              // 0x0138 (0x0004) [0x0000000000000000] [0x00000008] 
	uint32_t                                           bShowSecondsSymbol : 1;                        // 0x0138 (0x0004) [0x0000000000000000] [0x00000010] 
	uint32_t                                           bSetOnce : 1;                                  // 0x0138 (0x0004) [0x0000000000000000] [0x00000020] 
	uint32_t                                           bIsAnimating : 1;                              // 0x0138 (0x0004) [0x0000000000000000] [0x00000040] 
	uint32_t                                           bBehaviorSetVisible : 1;                       // 0x0138 (0x0004) [0x0000000000000000] [0x00000080] 
	uint32_t                                           bBarColorsRequireUpdate : 1;                   // 0x0138 (0x0004) [0x0000000000000000] [0x00000100] 
	uint32_t                                           CachedVisible : 1;                             // 0x0138 (0x0004) [0x0000000000002000] [0x00000200] (CPF_Transient)
	uint32_t                                           CachedTextBoxVisible : 1;                      // 0x0138 (0x0004) [0x0000000000002000] [0x00000400] (CPF_Transient)
	int32_t                                            CachedLastFrame;                               // 0x013C (0x0004) [0x0000000000000000]               
	float                                              CachedMinValue;                                // 0x0140 (0x0004) [0x0000000000000000]               
	float                                              CachedMaxValue;                                // 0x0144 (0x0004) [0x0000000000000000]               
	float                                              CachedCurrentValue;                            // 0x0148 (0x0004) [0x0000000000000000]               
	float                                              CachedRateOfChange;                            // 0x014C (0x0004) [0x0000000000000000]               
	struct FASColorTransform                           CachedColorTransform;                          // 0x0150 (0x0020) [0x0000000000000000]               
	class FString                                      CachedCaptionString;                           // 0x0170 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_ProgressBar");
		}

		return uClassPointer;
	};

	void CacheResourcePoolReference();
	void SetBarColor(float RedValue, float GreenValue, float BlueValue);
	void EnableTextOutput(bool IsMeasuringTime);
	void SetBarValues(float MinValue, float MaxValue, float RateOfChange, bool HideBarWhenDoneAnimating, int32_t Caption);
	void AssociateResourcePool(class UResourcePoolDefinition* PoolDefinition, class UObject* PoolContext);
	void Tick(float DeltaTime);
	void Deinit();
	void Init();
};

// Class PoplarGame.MHW_ReloadBar
// 0x0050 (0x00E8 - 0x0138)
class UMHW_ReloadBar : public UModularHUDWidgetGFxObject
{
public:
	struct FPointer                                    VfTable_IIMHW_ProfileRefreshable;              // 0x00E8 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class FString                                      ReloadString;                                  // 0x00F0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      OverheatString;                                // 0x0100 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class APoplarWeapon*                               CachedMainWeapToUse;                           // 0x0110 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarWeapon*                               CachedOffhandWeapToUse;                        // 0x0118 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UReloadBarIndicatorGFxObject*                MainWeaponIndicator;                           // 0x0120 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UReloadBarIndicatorGFxObject*                OffhandWeaponIndicator;                        // 0x0128 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           CachedMainWeaponIndicatorVisibility : 1;       // 0x0130 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           CachedOffhandWeaponIndicatorVisibility : 1;    // 0x0130 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bHadInputRestrictionLastFrame : 1;             // 0x0130 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_ReloadBar");
		}

		return uClassPointer;
	};

	void OnProfileRefreshed();
	void OnInputTypeChanged(bool bIsUsingGamepad);
	void Tick(float DeltaTime);
	void Deinit();
	void Init();
};

// Class PoplarGame.MHW_ResourceBarCenter
// 0x0020 (0x00E8 - 0x0108)
class UMHW_ResourceBarCenter : public UModularHUDWidgetGFxObject
{
public:
	float                                              CachedEnergy;                                  // 0x00E8 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CachedMaxEnergy;                               // 0x00EC (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CachedEnergyRegen;                             // 0x00F0 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  InnerBar;                                      // 0x00F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UResourceDefinition*                         MyResourceDef;                                 // 0x0100 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_ResourceBarCenter");
		}

		return uClassPointer;
	};

	void SetSkin(const class FString& SkinName);
	void Tick(float DeltaTime);
	void Deinit();
	void Init();
};

// Class PoplarGame.MHW_ResourceBarLower
// 0x0070 (0x00E8 - 0x0158)
class UMHW_ResourceBarLower : public UModularHUDWidgetGFxObject
{
public:
	float                                              CachedResourceValue;                           // 0x00E8 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CachedSecondaryResourceValue;                  // 0x00EC (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CachedMaxResourceValue;                        // 0x00F0 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CachedMaxSecondaryResourceValue;               // 0x00F4 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CachedResourceRegen;                           // 0x00F8 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           CachedVisible : 1;                             // 0x00FC (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           CachedMainBarVisible : 1;                      // 0x00FC (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           CachedSecondaryBarVisible : 1;                 // 0x00FC (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           CachedResourceTextVisible : 1;                 // 0x00FC (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	class UGFxObject*                                  MainBar;                                       // 0x0100 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  SecondaryBar;                                  // 0x0108 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ResourceText;                                  // 0x0110 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  RegenText;                                     // 0x0118 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  DeltaBar;                                      // 0x0120 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UResourceDefinition*                         MyResourceDef;                                 // 0x0128 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarPlayerClassDefinition*                CachedPlayerClassDef;                          // 0x0130 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMHW_DeltaBars_Definition*                   MyDeltaBarDef;                                 // 0x0138 (0x0008) [0x0000000000000000]               
	struct FUIResourceBarHelper                        MyHelper;                                      // 0x0140 (0x0018) [0x0000000000000000]               

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_ResourceBarLower");
		}

		return uClassPointer;
	};

	void eventSetDefinition(class UGBXDefinition* InDefinition);
	void SetSkin(const class FString& SkinName);
	void Tick(float DeltaTime);
	void Deinit();
	void Init();
};

// Class PoplarGame.MHW_SkillPointsAvailable
// 0x0028 (0x00E8 - 0x0110)
class UMHW_SkillPointsAvailable : public UModularHUDWidgetGFxObject
{
public:
	struct FPointer                                    VfTable_IIMHW_ProfileRefreshable;              // 0x00E8 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UGFxObject*                                  GlyphClipTextField;                            // 0x00F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  AugmentIcons[0x2];                             // 0x00F8 (0x0010) [0x0000000000002000] (CPF_Transient)
	float                                              LastUpdateTime;                                // 0x0108 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bHadPlayerRestrictionLastTick : 1;             // 0x010C (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           CachedVisible : 1;                             // 0x010C (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bShowingSkillpointsAvailable : 1;              // 0x010C (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_SkillPointsAvailable");
		}

		return uClassPointer;
	};

	void OnProfileRefreshed();
	void SkillPointsChangedCallback();
};

// Class PoplarGame.MHW_StaminaBar
// 0x0040 (0x00E8 - 0x0128)
class UMHW_StaminaBar : public UModularHUDWidgetGFxObject
{
public:
	class UGFxObject*                                  Failure;                                       // 0x00E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UResourceDefinition*                         MyResourceDef;                                 // 0x00F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              PreviousValues[0xA];                           // 0x00F8 (0x0028) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           CurrentlyZeroStamina : 1;                      // 0x0120 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           CurrentlyFullStamina : 1;                      // 0x0120 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           FirstTick : 1;                                 // 0x0120 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_StaminaBar");
		}

		return uClassPointer;
	};

	void SprintAttempted();
	void Tick(float DeltaTime);
	void Deinit();
	void Init();
};

// Class PoplarGame.MHW_Subtitles
// 0x0000 (0x00E8 - 0x00E8)
class UMHW_Subtitles : public UModularHUDWidgetGFxObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_Subtitles");
		}

		return uClassPointer;
	};

	void FadeSubtitle();
	void SwitchSubtitle(const class FString& NewSubtitle);
	void PresentNewSubtitle(const class FString& NewSubtitle);
	void SetFrameForAspectRatio(EAspectRatio NewAspectRatio);
	void Deinit();
	void Init();
};

// Class PoplarGame.MHW_Surrender
// 0x00B8 (0x00E8 - 0x01A0)
class UMHW_Surrender : public UModularHUDWidgetGFxObject
{
public:
	class UGFxObject*                                  InnerClip;                                     // 0x00E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  TimerTextClip;                                 // 0x00F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  SurrenderTextClip;                             // 0x00F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  MessagePromptClip;                             // 0x0100 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  VoteClips[0x5];                                // 0x0108 (0x0028) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  VotePassedTextClip;                            // 0x0130 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  VoteFailedTextClip;                            // 0x0138 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  NewVoteTextClip;                               // 0x0140 (0x0008) [0x0000000000002000] (CPF_Transient)
	ESurrenderWidgetState                              CurrentState;                                  // 0x0148 (0x0001) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CurrentVotingForSurrender;                     // 0x014C (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CurrentVotingAgainstSurrender;                 // 0x0150 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CachedWaitingPeriodBeforeAnimateOut;           // 0x0154 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedNumDisplayedVoters;                      // 0x0158 (0x0004) [0x0000000000002000] (CPF_Transient)
	class FString                                      PassedVoteLocString;                           // 0x0160 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      FailedVoteLocString;                           // 0x0170 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      SurrenderVoteLocString;                        // 0x0180 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      ButtonPromptLocString;                         // 0x0190 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_Surrender");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.MHW_TauntIndicator
// 0x0050 (0x00E8 - 0x0138)
class UMHW_TauntIndicator : public UModularHUDWidgetGFxObject
{
public:
	class UGFxObject*                                  InnerClip;                                     // 0x00E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  RadialTimerClip;                               // 0x00F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ButtonGlyphTextClip;                           // 0x00F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  TauntTextClip;                                 // 0x0100 (0x0008) [0x0000000000002000] (CPF_Transient)
	class FString                                      TauntText;                                     // 0x0108 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	ETauntIndicatorState                               CurrentState;                                  // 0x0118 (0x0001) [0x0000000000002000] (CPF_Transient)
	float                                              TimeStarted;                                   // 0x011C (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TimeOfStateChange;                             // 0x0120 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              IntroDuration;                                 // 0x0124 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TauntDuration;                                 // 0x0128 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              OutroDuration;                                 // 0x012C (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TotalDuration;                                 // 0x0130 (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_TauntIndicator");
		}

		return uClassPointer;
	};

	void OnInputTypeChanged(bool bIsUsingGamepad);
};

// Class PoplarGame.MutationDefinition
// 0x0018 (0x0058 - 0x0070)
class UMutationDefinition : public UGBXDefinition
{
public:
	int32_t                                            CharacterLevelRequirement;                     // 0x0058 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            HelixLevel;                                    // 0x005C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarAugDefinition*                        Augmentation;                                  // 0x0060 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarMetaMutationDefinition*               MutationMetaItemDefinition;                    // 0x0068 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MutationDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PanelButtonGFxObject
// 0x0000 (0x00D8 - 0x00D8)
class UPanelButtonGFxObject : public UGFxObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PanelButtonGFxObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PanelButtonCaptionedGFxObject
// 0x0000 (0x00D8 - 0x00D8)
class UPanelButtonCaptionedGFxObject : public UPanelButtonGFxObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PanelButtonCaptionedGFxObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PanelButtonBreadcrumbGFxObject
// 0x0000 (0x00D8 - 0x00D8)
class UPanelButtonBreadcrumbGFxObject : public UPanelButtonCaptionedGFxObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PanelButtonBreadcrumbGFxObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PanelButtonCaptionedSwfContainerGFxObject
// 0x0000 (0x00D8 - 0x00D8)
class UPanelButtonCaptionedSwfContainerGFxObject : public UPanelButtonCaptionedGFxObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PanelButtonCaptionedSwfContainerGFxObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PanelButtonSpinnerGFxObject
// 0x0028 (0x00D8 - 0x0100)
class UPanelButtonSpinnerGFxObject : public UPanelButtonCaptionedGFxObject
{
public:
	int32_t                                            CurrentSpinnerOptionIndex;                     // 0x00D8 (0x0004) [0x0000000000000000]               
	class TArray<class FString>                        SpinnerOptions;                                // 0x00E0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnSpinnerOptionIndexChange__Delegate;        // 0x00F0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PanelButtonSpinnerGFxObject");
		}

		return uClassPointer;
	};

	void CycleSpinnerBackward();
	void CycleSpinnerForward();
	void OnSpinnerOptionIndexChange(int32_t PanelId, int32_t NewSpinnerOptionIndex);
};

// Class PoplarGame.PanelButtonExperienceSmallGFxObject
// 0x0000 (0x00D8 - 0x00D8)
class UPanelButtonExperienceSmallGFxObject : public UPanelButtonGFxObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PanelButtonExperienceSmallGFxObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PanelButtonExperienceLargeGFxObject
// 0x0010 (0x00D8 - 0x00E8)
class UPanelButtonExperienceLargeGFxObject : public UPanelButtonExperienceSmallGFxObject
{
public:
	class FString                                      HighScoreTemplate;                             // 0x00D8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PanelButtonExperienceLargeGFxObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PanelButtonTeamRelativeGFxObject
// 0x0000 (0x00D8 - 0x00D8)
class UPanelButtonTeamRelativeGFxObject : public UPanelButtonGFxObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PanelButtonTeamRelativeGFxObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PanelButtonPlayerListBaseGFxObject
// 0x0000 (0x00D8 - 0x00D8)
class UPanelButtonPlayerListBaseGFxObject : public UPanelButtonTeamRelativeGFxObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PanelButtonPlayerListBaseGFxObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PanelButtonPlayerInfoGFxObject
// 0x0000 (0x00D8 - 0x00D8)
class UPanelButtonPlayerInfoGFxObject : public UPanelButtonPlayerListBaseGFxObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PanelButtonPlayerInfoGFxObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PanelButtonFriendInfoGFxObject
// 0x0000 (0x00D8 - 0x00D8)
class UPanelButtonFriendInfoGFxObject : public UPanelButtonPlayerInfoGFxObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PanelButtonFriendInfoGFxObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PanelButtonListGFxObject
// 0x0010 (0x00D8 - 0x00E8)
class UPanelButtonListGFxObject : public UGFxObject
{
public:
	class TArray<class UPanelButtonGFxObject*>         PanelButtons;                                  // 0x00D8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PanelButtonListGFxObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.ScrollingPanelButtonListGFxObject
// 0x0000 (0x00E8 - 0x00E8)
class UScrollingPanelButtonListGFxObject : public UPanelButtonListGFxObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.ScrollingPanelButtonListGFxObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.FriendsScrollingPanelButtonListGFxObject
// 0x0000 (0x00E8 - 0x00E8)
class UFriendsScrollingPanelButtonListGFxObject : public UScrollingPanelButtonListGFxObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.FriendsScrollingPanelButtonListGFxObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PerkAttributeContextHelper
// 0x0068 (0x0240 - 0x02A8)
class APerkAttributeContextHelper : public AActor
{
public:
	struct FPointer                                    VfTable_IISkillInstigator;                     // 0x0240 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    Perk;                                          // 0x0248 (0x0008) [0x0000000000001000] (CPF_Native)  
	float                                              iLvL;                                          // 0x0250 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              iLvLBaseValue;                                 // 0x0254 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            iLvLModifierStack;                             // 0x0258 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            Rarity;                                        // 0x0268 (0x0004) [0x8000000000002000] (CPF_Transient)
	int32_t                                            RarityBaseValue;                               // 0x026C (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            RarityModifierStack;                           // 0x0270 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            CurrentActivationTier;                         // 0x0280 (0x0004) [0x8000000000002000] (CPF_Transient)
	int32_t                                            CurrentActivationTierBaseValue;                // 0x0284 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            CurrentActivationTierModifierStack;            // 0x0288 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	class APlayerStateInfo*                            OwningPlayerStateInfo;                         // 0x0298 (0x0008) [0x0000000000000000]               
	uint8_t                                            NumTimesActivated;                             // 0x02A0 (0x0001) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PerkAttributeContextHelper");
		}

		return uClassPointer;
	};

	void OnSkillEvent(class USkillDefinition* SkillDef, ESkillEventType EventType, class AActor* EventRecipient, class UClass* DamageSource, class UDamagePipeline* Pipeline, class UObject* ContextObject);
	EeSkillCastStyle GetActionSkillCastingStyle();
	bool IsAnyActionSkillRunning();
	void EndActionSkillSlot(int32_t SlotIndex);
	class UPlayerSkillTree* GetPlayerSkillTree();
	bool IsHumanPlayer();
	int32_t GetSkillGrade(class USkillDefinition* Skill);
	class AActor* GetActionSkillTarget();
	class AActor* GetSkillInstigatorActor();
};

// Class PoplarGame.PerkIconGFxObject
// 0x0010 (0x00D8 - 0x00E8)
class UPerkIconGFxObject : public UGFxObject
{
public:
	class UPoplarPerkFunction*                         CachedPerkFunction;                            // 0x00D8 (0x0008) [0x0000000000002000] (CPF_Transient)
	EPerkRarity                                        CachedPerkRarity;                              // 0x00E0 (0x0001) [0x0000000000002000] (CPF_Transient)
	EPerkIconStatus                                    CachedStatus;                                  // 0x00E1 (0x0001) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PerkIconGFxObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarAccessControl
// 0x0000 (0x0360 - 0x0360)
class APoplarAccessControl : public AWillowAccessControl
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarAccessControl");
		}

		return uClassPointer;
	};

	void Leviathan_ServerLoginRejected(const class FString& Address, const class FString& Reason);
	bool HasMetaDataForPlayer(const struct FUniqueNetId& UniqueId);
	bool HasCachedMetaData();
	void eventPreLogin(const class FString& Options, const class FString& Address, const struct FUniqueNetId& UniqueId, bool bSpectator, class FString& OutError);
};

// Class PoplarGame.PoplarActionDefinition
// 0x0020 (0x0058 - 0x0078)
class UPoplarActionDefinition : public UGBXDefinition
{
public:
	EActionType                                        ActionType;                                    // 0x0058 (0x0001) [0x0000000000000001] (CPF_Edit)    
	class FString                                      DefaultActionName;                             // 0x0060 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class USwfMovie*                                   DefaultActionIcon;                             // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarActionDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarActionSkill
// 0x0018 (0x0340 - 0x0358)
class APoplarActionSkill : public AActionSkill
{
public:
	class UPoplarTargetSearchDefinition*               InitialTargetSearchDef;                        // 0x0340 (0x0008) [0x0000000020000000]  CPF_Deprecated)
	int32_t                                            ActionSkillSlot;                               // 0x0348 (0x0004) [0x0000000000002000] (CPF_Transient)
	class APoplarPlayerPawn*                           MyPoplarPawn;                                  // 0x0350 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarActionSkill");
		}

		return uClassPointer;
	};

	void eventOnActionSkillStarted(class UISkillInstigator* TheSkillInstigator);
	void eventDestroyed();
	bool IsControlledByLocalPlayer();
};

// Class PoplarGame.PoplarActionSkill_AirStrike
// 0x0000 (0x0358 - 0x0358)
class APoplarActionSkill_AirStrike : public APoplarActionSkill
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarActionSkill_AirStrike");
		}

		return uClassPointer;
	};

	void eventOnActionSkillStarted(class UISkillInstigator* TheSkillInstigator);
};

// Class PoplarGame.PoplarActionSkill_Beam
// 0x0040 (0x0358 - 0x0398)
class APoplarActionSkill_Beam : public APoplarActionSkill
{
public:
	EBeamState                                         BeamState;                                     // 0x0358 (0x0001) [0x0000000000002000] (CPF_Transient)
	class UITargetable*                                BeamTarget_Object;                             // 0x0360 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UITargetable*                                BeamTarget_Interface;                          // 0x0368 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FName                                       SourceSocket;                                  // 0x0370 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FName                                       TargetSocket;                                  // 0x0378 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UFiringModeDefinition*                       FiringMode;                                    // 0x0380 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bCanReacquireLock : 1;                         // 0x0388 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	float                                              MaxReacquireTime;                              // 0x038C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTargetSearchDefinition*               TargetSearchDef;                               // 0x0390 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarActionSkill_Beam");
		}

		return uClassPointer;
	};

	void DeactivateBeam();
	void RequireTimeout();
	void BlockBeam();
	void ActivateBeam();
	void TryToActivateBeam(class UITargetable* TheTarget);
	bool IsValidCurrentBeamTarget(class UITargetable* TheTarget);
	bool IsValidBeamTarget(class UITargetable* TheTarget);
	void OnActionSkillEnded();
	void eventOnActionSkillStarted(class UISkillInstigator* TheSkillInstigator);
	void eventOnActionSkillTick(float DeltaTime);
	void OnBeamDeactivated(class APawn* SkillInstigator, class UObject* TheTarget, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnBeamActivated(class APawn* SkillInstigator, class UObject* TheTarget, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnBeamFailed(class APawn* SkillInstigator, struct FBehaviorConsumerHandle& TheConsumerHandle);
};

// Class PoplarGame.PoplarActionSkillDefinition
// 0x00C0 (0x0058 - 0x0118)
class UPoplarActionSkillDefinition : public UGBXDefinition
{
public:
	class APoplarActionSkill*                          ActionSkillArchetype;                          // 0x0058 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EActionSkillSlot                                   ActionSkillSlot;                               // 0x0060 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EnergyRequirementAlgorithmType                     EnergyRequirementAlgorithm;                    // 0x0061 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	ETargetAllegiance                                  AITargetAllegiance;                            // 0x0062 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UResourcePoolDefinition*                     ActionSkillCooldownPoolDefinition;             // 0x0068 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTargetSearchDefinition*               InitialTargetSearchDef;                        // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bIsUltimateAbility : 1;                        // 0x0078 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bStartCooldownOnActivation : 1;                // 0x0078 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	uint32_t                                           bForceCooldownOnCancellation : 1;              // 0x0078 (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	uint32_t                                           bRequiresManualCooldownStart : 1;              // 0x0078 (0x0004) [0x0000000000000003] [0x00000008] (CPF_Edit | CPF_Const)
	uint32_t                                           bSkillBreaksStealth : 1;                       // 0x0078 (0x0004) [0x0000000000000003] [0x00000010] (CPF_Edit | CPF_Const)
	uint32_t                                           bRequiresConfirmation : 1;                     // 0x0078 (0x0004) [0x0000000000000003] [0x00000020] (CPF_Edit | CPF_Const)
	uint32_t                                           bNoCancel : 1;                                 // 0x0078 (0x0004) [0x0000000000000003] [0x00000040] (CPF_Edit | CPF_Const)
	uint32_t                                           bMustHaveTarget : 1;                           // 0x0078 (0x0004) [0x0000000000000003] [0x00000080] (CPF_Edit | CPF_Const)
	uint32_t                                           bAIMustHaveTarget : 1;                         // 0x0078 (0x0004) [0x0000000000000003] [0x00000100] (CPF_Edit | CPF_Const)
	uint32_t                                           bAIShouldTargetGround : 1;                     // 0x0078 (0x0004) [0x0000000000000003] [0x00000200] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                EnergyRequiredToActivateFormula;               // 0x0080 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                EnergyAppliedOnActivationFormula;              // 0x00A0 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class USwfMovie*                                   ActionSkillIcon;                               // 0x00C0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class USwfMovie*                                   ActionSkillIconLarge;                          // 0x00C8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UExpressionEvaluator*                        TargetRequirements;                            // 0x00D0 (0x0008) [0x0000000004000003] (CPF_Edit | CPF_Const | CPF_EditInline)
	class UExpressionEvaluator*                        UserRequirements;                              // 0x00D8 (0x0008) [0x0000000004000003] (CPF_Edit | CPF_Const | CPF_EditInline)
	class TArray<EPlayerInputRestriction>              RestrictionsWhileRunning;                      // 0x00E0 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class UExpressionEvaluator*                        AITargetRequirements;                          // 0x00F0 (0x0008) [0x0000000004000003] (CPF_Edit | CPF_Const | CPF_EditInline)
	struct FAttributeInitializationData                UtilityValue;                                  // 0x00F8 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarActionSkillDefinition");
		}

		return uClassPointer;
	};

	static bool ActionSkillMeetsConfirmationRequirements(class UPoplarActionSkillDefinition* ActionSkillDef, class AActor* User, bool bHasTarget, class AActor* Target);
	static bool ActionSkillMeetsActivationRequirements(class UPoplarActionSkillDefinition* ActionSkillDef, class AActor* User);
};

// Class PoplarGame.PoplarActivityFeedActionDefinition
// 0x0020 (0x0058 - 0x0078)
class UPoplarActivityFeedActionDefinition : public UGBXDefinition
{
public:
	class FString                                      CaptionString;                                 // 0x0058 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      ButtonImageURL;                                // 0x0068 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarActivityFeedActionDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarActivityFeedOpenStoreActionDefinition
// 0x0000 (0x0078 - 0x0078)
class UPoplarActivityFeedOpenStoreActionDefinition : public UPoplarActivityFeedActionDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarActivityFeedOpenStoreActionDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarActivityFeedStartGameActionDefinition
// 0x0010 (0x0078 - 0x0088)
class UPoplarActivityFeedStartGameActionDefinition : public UPoplarActivityFeedActionDefinition
{
public:
	class FString                                      CommandLineArgumentsString;                    // 0x0078 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarActivityFeedStartGameActionDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarActivityFeedURLActionDefinition
// 0x0010 (0x0078 - 0x0088)
class UPoplarActivityFeedURLActionDefinition : public UPoplarActivityFeedActionDefinition
{
public:
	class FString                                      URLString;                                     // 0x0078 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarActivityFeedURLActionDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarActivityFeedDefinition
// 0x0060 (0x0058 - 0x00B8)
class UPoplarActivityFeedDefinition : public UGBXDefinition
{
public:
	class FString                                      CaptionString;                                 // 0x0058 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CondensedCaptionString;                        // 0x0068 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      SmallImageUrl;                                 // 0x0078 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	EActivityFeedImageAspectRatio                      SmallImageAspectRatio;                         // 0x0088 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class FString                                      LargeImageUrl;                                 // 0x0090 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class UPoplarActivityFeedURLActionDefinition*      URLActionDef;                                  // 0x00A0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarActivityFeedOpenStoreActionDefinition* StoreActionDef;                                // 0x00A8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarActivityFeedStartGameActionDefinition* StartGameActionDef;                            // 0x00B0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarActivityFeedDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarAIClassDefinition
// 0x0098 (0x02E8 - 0x0380)
class UPoplarAIClassDefinition : public UAIClassDefinition
{
public:
	class UPoplarUnitTypeDefinition*                   UnitTypeDefinition;                            // 0x02E8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class TArray<class UPoplarUnitTypeTag*>            UnitTypeTags;                                  // 0x02F0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UPoplarFactionDefinition*                    UnitFaction;                                   // 0x0300 (0x0008) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           OverrideUnitTypeDefinitionTags : 1;            // 0x0308 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	uint32_t                                           bTrackLargeUnitInSpectatorMode : 1;            // 0x0308 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	class UPoplarNameplateTypeDefinition*              NameplateTypeDefinition;                       // 0x0310 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UResourcePoolDefinition*                     EnergyPoolDefinition;                          // 0x0318 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarActionDefinition*                     DefaultDamagingActionDefinition;               // 0x0320 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UUtilityDefinition*                          HotSpotUtilityDefinition;                      // 0x0328 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<struct FConditionalDamageModifier>    AttackingDamageModifiers;                      // 0x0330 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class TArray<struct FConditionalDamageModifier>    DefendingDamageModifiers;                      // 0x0340 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class TArray<class UStatDefinition*>               KilledStatList;                                // 0x0350 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<class UStatDefinition*>               KilledAssistStatList;                          // 0x0360 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<class UStatDefinition*>               DamagedStatList;                               // 0x0370 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarAIClassDefinition");
		}

		return uClassPointer;
	};

	void OnUpgradedByBuildNode(int32_t PreviousLevel, int32_t NewLevel, class AActor* MasterOfStructure, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnReaped(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnLaneEvent(const struct FBehaviorConsumerHandle& Consumer, const struct FName& SpecializedEventName, class UObject* InstigatorTeam, class UObject* InstigatorPawn, class UObject* InstigatorController);
	void OnTeamSetOrChanged(class UObject* NewTeamDefinition, class UObject* NewAllegiance, struct FBehaviorConsumerHandle& ConsumerHandle);
};

// Class PoplarGame.PoplarAIComponent
// 0x0008 (0x0338 - 0x0340)
class UPoplarAIComponent : public UWillowAIComponent
{
public:
	class APoplarDenSpawner*                           PoplarDen;                                     // 0x0338 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarAIComponent");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarAIDefinition
// 0x0000 (0x00D0 - 0x00D0)
class UPoplarAIDefinition : public UWillowAIDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarAIDefinition");
		}

		return uClassPointer;
	};

	void OnUpgradedByBuildNode(int32_t PreviousLevel, int32_t NewLevel, class AActor* MasterOfStructure, struct FBehaviorConsumerHandle& ConsumerHandle);
};

// Class PoplarGame.PoplarAIDenDefinition
// 0x0000 (0x00B0 - 0x00B0)
class UPoplarAIDenDefinition : public UDenAIDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarAIDenDefinition");
		}

		return uClassPointer;
	};

	void OnLastMemberKilled(class UObject* TheDen, class AActor* member, class AActor* KillerController, class UObject* LaneDefinition, class UObject* TeamDefinition, class UObject* UnitTypeDefinition, int32_t SpawnerIndex, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnMemberKilled(class UObject* TheDen, class AActor* member, class AActor* KillerController, class UObject* LaneDefinition, class UObject* TeamDefinition, class UObject* UnitTypeDefinition, int32_t SpawnerIndex, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnMemberSpawned(class UObject* TheDen, class AActor* member, class UObject* LaneDefinition, class UObject* TeamDefinition, class UObject* UnitTypeDefinition, int32_t SpawnerIndex, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnDenDisabled(class UObject* TheDen, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnDenEnabled(class UObject* TheDen, struct FBehaviorConsumerHandle& ConsumerHandle);
};

// Class PoplarGame.PoplarAimOffsetProfileDefinition
// 0x0098 (0x0058 - 0x00F0)
class UPoplarAimOffsetProfileDefinition : public UGBXDefinition
{
public:
	struct FName                                       AimOffsetNodeName;                             // 0x0058 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAimOffsetProfile                           Profile;                                       // 0x0060 (0x0088) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	uint32_t                                           bEditorResetCameraBone : 1;                    // 0x00E8 (0x0004) [0x0000000800000003] [0x00000001] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarAimOffsetProfileDefinition");
		}

		return uClassPointer;
	};

	struct FName GetProfileName();
};

// Class PoplarGame.PoplarAIUtility
// 0x0108 (0x0150 - 0x0258)
class UPoplarAIUtility : public UGearboxAIUtility
{
public:
	int32_t                                            NextHotSpotId;                                 // 0x0150 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bUpdateHotSpotList : 1;                        // 0x0154 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bUpdateBaseLocations : 1;                      // 0x0154 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bHasBaseLocations : 1;                         // 0x0154 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           bUpdateSentryHotSpots : 1;                     // 0x0154 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	float                                              HotSpotListUpdateRate;                         // 0x0158 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              HotSpotListNextUpdate;                         // 0x015C (0x0004) [0x0000000000002000] (CPF_Transient)
	class UPoplarHotSpot*                              HotSpotListHead;                               // 0x0160 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarHotSpot*                              HotSpotListTail;                               // 0x0168 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            HotSpotCount;                                  // 0x0170 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UPoplarHotSpot*                              DebugHotSpot;                                  // 0x0178 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarHotSpotOwnerRef*                      NewHotSpotOwnerList;                           // 0x0180 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarHotSpotOwnerRef*                      NewHotSpotOwnerListForAIThread;                // 0x0188 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            HotSpotOwnerCount;                             // 0x0190 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            HotSpotOwnerCountMax;                          // 0x0194 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            HotSpotOwnerCategoryCountMaxTable[0xE];        // 0x0198 (0x0038) [0x0000000000002000] (CPF_Transient)
	int32_t                                            HotSpotAllUnitsCountMax;                       // 0x01D0 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            HotSpotAllUnitsCategoryCountMaxTable[0xE];     // 0x01D4 (0x0038) [0x0000000000002000] (CPF_Transient)
	class UPoplarTeamDefinition*                       TeamA;                                         // 0x0210 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarTeamDefinition*                       TeamB;                                         // 0x0218 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     BaseLocationTeamA;                             // 0x0220 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     BaseLocationTeamB;                             // 0x022C (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     BaseDirection;                                 // 0x0238 (0x000C) [0x0000000000002000] (CPF_Transient)
	float                                              BaseDistance;                                  // 0x0244 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UPoplarHotSpot*                              NextEnemySentryTeamA;                          // 0x0248 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarHotSpot*                              NextEnemySentryTeamB;                          // 0x0250 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarAIUtility");
		}

		return uClassPointer;
	};

	void AIDebugHotSpot(int32_t optionalHotSpotId);
	void DisplayHotSpotDebug(class AHUD* HUD, float& out_YL, float& out_YPos);
};

// Class PoplarGame.PoplarAlertPoint
// 0x0250 (0x0240 - 0x0490)
class APoplarAlertPoint : public AActor
{
public:
	struct FPointer                                    VfTable_IIBehaviorConsumer;                    // 0x0240 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIInstanceData;                        // 0x0248 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIMinimapObject;                       // 0x0250 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIWorldIconObject;                     // 0x0258 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UPoplarHotSpotOwnerRef*                      HotSpotRef;                                    // 0x0260 (0x0008) [0x0000000004402008] (CPF_ExportObject | CPF_Transient | CPF_NeedCtorLink | CPF_EditInline)
	struct FBehaviorConsumerHandle                     ConsumerHandle;                                // 0x0268 (0x0004) [0x0000000000000000]               
	struct FReplicatedBehaviorConsumerState            ReplicatedBehaviorConsumerState;               // 0x026C (0x000C) [0x0000000100000020] (CPF_Net)     
	struct FReplicatedBehaviorEvent                    ReplicatedBehaviorEvent;                       // 0x0278 (0x0010) [0x0000000100000020] (CPF_Net)     
	struct FAlertPointData                             Data;                                          // 0x0288 (0x0058) [0x0000000100000020] (CPF_Net)     
	uint32_t                                           bIsValidToLocalPlayers : 1;                    // 0x02E0 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           RegisteredWithMinimap : 1;                     // 0x02E0 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           RegisteredWithHUD : 1;                         // 0x02E0 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           MyLifeSpanHasExpired : 1;                      // 0x02E0 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	struct FInWorldObject                              WorldObject;                                   // 0x02E8 (0x0190) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FInstanceData2                              InstanceState;                                 // 0x0478 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class AActor*                                      ActorThisAlertMarked;                          // 0x0488 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarAlertPoint");
		}

		return uClassPointer;
	};

	bool GetInstanceDataState(struct FInstanceData2& OutInstanceDataState);
	bool eventRemoveInstanceData(const struct FName& DataName);
	bool eventGetInstanceData(const struct FName& DataName, class TArray<struct FInstanceDataItem2>& InstanceData);
	bool eventSetInstanceData(const struct FInstanceDataItem2& InstanceData, bool optionalBAllowDuplicateNames);
	static void eventSetAlertPointAsInstanceData(class UIInstanceData* InstanceDataInterface, const struct FInstanceDataItem2& SavedActorData);
	class APoplarPlayerReplicationInfo* GetTargetPRI();
	void eventDestroyed();
	void eventReplicatedEvent(const struct FName& VarName);
	struct FBehaviorConsumerHandle GetBehaviorConsumerHandle();
};

// Class PoplarGame.PoplarAlertPointDefinition
// 0x0070 (0x0058 - 0x00C8)
class UPoplarAlertPointDefinition : public UGBXDefinition
{
public:
	struct FAttributeInitializationData                LifeSpan;                                      // 0x0058 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bRemainActiveWhenPlayerHidden : 1;             // 0x0078 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bShowDuringBroadcasterFreeCam : 1;             // 0x0078 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	uint32_t                                           bAttachToTargetActor : 1;                      // 0x0078 (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	uint32_t                                           bWidgetAlertOnly : 1;                          // 0x0078 (0x0004) [0x0000000000000003] [0x00000008] (CPF_Edit | CPF_Const)
	struct FName                                       AttachName;                                    // 0x007C (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarMinimapIconDefinition_Team*           MinimapIconDefinition;                         // 0x0088 (0x0008) [0x0000000000000001] (CPF_Edit)    
	EeAlertSourceType                                  SourceType;                                    // 0x0090 (0x0001) [0x0000000000000001] (CPF_Edit)    
	class FString                                      OverrideIconSymbol;                            // 0x0098 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class FString                                      CustomIconString;                              // 0x00A8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class FString                                      CustomIconStringPath;                          // 0x00B8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarAlertPointDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarAnimNode_BringWeaponToEye
// 0x0020 (0x0160 - 0x0180)
class UPoplarAnimNode_BringWeaponToEye : public UAnimNodeBlend
{
public:
	float                                              ZoomWeight;                                    // 0x0160 (0x0004) [0x0000000000000000]               
	struct FName                                       EyeName;                                       // 0x0164 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<struct FName>                         PivotBoneNames;                                // 0x0170 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarAnimNode_BringWeaponToEye");
		}

		return uClassPointer;
	};

	void SetBlendTarget(float BlendTarget, float BlendTime);
};

// Class PoplarGame.PoplarAnimNodeAimOffset
// 0x0040 (0x0210 - 0x0250)
class UPoplarAnimNodeAimOffset : public UWillowAnimNodeAimOffset
{
public:
	uint32_t                                           bBuildCodeGeneratedFPOffsets : 1;              // 0x0210 (0x0004) [0x0000000000002001] [0x00000001] (CPF_Edit | CPF_Transient)
	uint32_t                                           bEditorRotateCameraBone : 1;                   // 0x0210 (0x0004) [0x0000000800000003] [0x00000002] (CPF_Edit | CPF_Const)
	class TArray<class UPoplarAimOffsetProfileDefinition*> ProfileDefs;                                   // 0x0218 (0x0010) [0x0000000000402041] (CPF_Edit | CPF_EditConstArray | CPF_Transient | CPF_NeedCtorLink)
	EProceduralAimOffsetType                           ProcAimOffsetType;                             // 0x0228 (0x0001) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxCameraOffsetDistancePitchUp;                // 0x022C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxCameraOffsetDistancePitchDown;              // 0x0230 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       BoneName;                                      // 0x0234 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            BoneIndex;                                     // 0x023C (0x0004) [0x0000000000000000]               
	struct FName                                       CurrentProfileName;                            // 0x0240 (0x0008) [0x0000000000002002] (CPF_Const | CPF_Transient)
	uint8_t                                           UnknownData00[0x8];                            // 0x0248 (0x0008) MISSED OFFSET

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarAnimNodeAimOffset");
		}

		return uClassPointer;
	};

	void ClearProfiles();
	void RemoveProfile(class UPoplarAimOffsetProfileDefinition* ProfileDef);
	void AddProfile(class UPoplarAimOffsetProfileDefinition* ProfileDef);
	void SetActiveProfileByIndex(int32_t ProfileIndex);
	void SetActiveProfileByName(const struct FName& ProfileName);
};

// Class PoplarGame.PoplarAnimNodeBlendByPosture
// 0x0000 (0x01B0 - 0x01B0)
class UPoplarAnimNodeBlendByPosture : public UAnimNodeBlendByPosture
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarAnimNodeBlendByPosture");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarAugCategory
// 0x0040 (0x0058 - 0x0098)
class UPoplarAugCategory : public UGBXDefinition
{
public:
	class FString                                      CategoryName;                                  // 0x0058 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class UPoplarAugDefinition*                        Augs[0x2];                                     // 0x0068 (0x0010) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           RequiresUnlock : 1;                            // 0x0078 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	class FString                                      IconPath;                                      // 0x0080 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	class USwfMovie*                                   IconMovie;                                     // 0x0090 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarAugCategory");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarAugDefinition
// 0x0080 (0x0058 - 0x00D8)
class UPoplarAugDefinition : public UGBXDefinition
{
public:
	class FString                                      AugName;                                       // 0x0058 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class TArray<struct FAugTier>                      AugTiers;                                      // 0x0068 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class FString                                      Description;                                   // 0x0078 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      FullyPurchasedDescription;                     // 0x0088 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class UTexture2D*                                  Icon;                                          // 0x0098 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class FString                                      IconPath;                                      // 0x00A0 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	class USwfMovie*                                   IconMovie;                                     // 0x00B0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<class UMarkupAttributePresentationDefinition*> DescriptionPresentations;                      // 0x00B8 (0x0010) [0x000000000440000B] (CPF_Edit | CPF_Const | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UPoplarBuffDefinition*                       BuffToApply;                                   // 0x00C8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	int32_t                                            SkillSlotIndicator;                            // 0x00D0 (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarAugDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarAugSet
// 0x0130 (0x0058 - 0x0188)
class UPoplarAugSet : public UGBXDefinition
{
public:
	class FString                                      AugSetName;                                    // 0x0058 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LeftAugGroupTitle;                             // 0x0068 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      RightAugGroupTitle;                            // 0x0078 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class UPoplarAugCategory*                          AllCategories[0xA];                            // 0x0088 (0x0050) [0x0000000000000001] (CPF_Edit)    
	struct FBonusSkillInfo                             BonusSkills[0x2];                              // 0x00D8 (0x00A0) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class TArray<class UMutationDefinition*>           SupportedMutations;                            // 0x0178 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarAugSet");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarAutoAimStrategy
// 0x0030 (0x0130 - 0x0160)
class UPoplarAutoAimStrategy : public UWillowAutoAimStrategy
{
public:
	class UPoplarAutoAimStrategyDefinition*            PoplarDataDefinition;                          // 0x0130 (0x0008) [0x0000000000000000]               
	class UWillowAutoAimProfileDefinition*             CurrentProfileDefinition;                      // 0x0138 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarAutoAimZoneDefinition*                CurrentZone;                                   // 0x0140 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              CurrentDistance;                               // 0x0148 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              MostDesirableTargetDistance;                   // 0x014C (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              LockedTargetDistance;                          // 0x0150 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bInitialized : 1;                              // 0x0154 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bApplyLockOnValues : 1;                        // 0x0154 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bAdjustOnMoveOnly : 1;                         // 0x0154 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	float                                              CrosshairTargetLineCheckDistance;              // 0x0158 (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarAutoAimStrategy");
		}

		return uClassPointer;
	};

	void DrawRadius(class AHUD* H, const struct FVector& Origin, float Range, const struct FVector& IntersectingPoint, const struct FColor& DrawColor, float CircleSize);
	void DrawAllTheCircles(class UITargetable* Target, class AHUD* H, const struct FVector& IntersectionPoint);
	void AcquiredTargetTextDebug(class UITargetable* Target, class AHUD* H);
	void DrawTargetSnapRegion(class AWillowPlayerController* PC, class AHUD* H, const struct FVector& IntersectingPoint);
	void eventDrawAutoAimDebug(class AWillowPlayerController* Controller, class AHUD* H);
	void ChangeStrategy(class UWillowAutoAimStrategyDefinition* NewStrategy);
	class UITargetable* GetTargetUnderCrosshair(class APawn* InPlayer);
	bool GetTargetSnapRegion(class AWillowPlayerController* PC, class UITargetable* Targetable, struct FTargetSnapRegion& SnapRegion);
	void UpdateAutoAimData(class UITargetable* Target);
	float GetDistanceFromTarget(class UITargetable* Target);
};

// Class PoplarGame.PoplarAutoAimStrategyDefinition
// 0x0088 (0x0070 - 0x00F8)
class UPoplarAutoAimStrategyDefinition : public UWillowAutoAimStrategyDefinition
{
public:
	class TArray<struct FAutoAimZoneData>              Zones;                                         // 0x0070 (0x0010) [0x0000000004400002] (CPF_Const | CPF_NeedCtorLink | CPF_EditInline)
	class UPoplarAutoAimZoneDefinition*                DefaultZone;                                   // 0x0080 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FColor                                      TargetAcqusitionRadiusColor;                   // 0x0088 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FColor                                      SnapZoomRadiusColor;                           // 0x008C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FColor                                      AimSlowdownRadiusColor;                        // 0x0090 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FColor                                      CircleStrafeRadiusColor;                       // 0x0094 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<struct FPoplarUnitTypePriority>       UnitPriority;                                  // 0x0098 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	float                                              TargetAcquisitionRadiusMultiplier;             // 0x00A8 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              SustainTime;                                   // 0x00AC (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              AcquireTime;                                   // 0x00B0 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              ChangeTime;                                    // 0x00B4 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UWillowAutoAimProfileDefinition*             ZoomProfile;                                   // 0x00B8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UWillowAutoAimProfileDefinition*             ZoomFiringProfile;                             // 0x00C0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UWillowAutoAimProfileDefinition*             FiringProfile;                                 // 0x00C8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UWillowAutoAimProfileDefinition*             FiringSecondaryProfile;                        // 0x00D0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UWillowAutoAimProfileDefinition*             FirstActionSkillProfile;                       // 0x00D8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UWillowAutoAimProfileDefinition*             SecondActionSkillProfile;                      // 0x00E0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UWillowAutoAimProfileDefinition*             UltimateProfile;                               // 0x00E8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              InterpolationMaxDistance;                      // 0x00F0 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarAutoAimStrategyDefinition");
		}

		return uClassPointer;
	};

	class UPoplarAutoAimZoneDefinition* GetZoneDefinition(float DistanceFromTarget);
};

// Class PoplarGame.PoplarAutoAimZoneDefinition
// 0x0010 (0x0058 - 0x0068)
class UPoplarAutoAimZoneDefinition : public UGBXDefinition
{
public:
	class TArray<struct FAutoAimProfileData>           Profiles;                                      // 0x0058 (0x0010) [0x0000000004400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink | CPF_EditInline)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarAutoAimZoneDefinition");
		}

		return uClassPointer;
	};

	class UWillowAutoAimProfileDefinition* GetProfileDefinition(EAutoAimProfile Profile);
};

// Class PoplarGame.PoplarAutoTestManager
// 0x0008 (0x03F8 - 0x0400)
class APoplarAutoTestManager : public AWillowAutoTestManager
{
public:
	uint32_t                                           Test : 1;                                      // 0x03F8 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarAutoTestManager");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarBehaviorFunctionLibrary
// 0x0000 (0x0058 - 0x0058)
class UPoplarBehaviorFunctionLibrary : public UGearboxBehaviorFunctionLibrary
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarBehaviorFunctionLibrary");
		}

		return uClassPointer;
	};

	static bool IsTrialGame();
	static struct FVector CommandRingTargetLocalToWorld(const struct FVector& LocalTargetLocation, class AActor* TargetBase);
	static int32_t GetNumAugsPlayerHasPurchased(class UObject* Player);
	static class UObject* GetPlayerTauntDef(class UObject* Player);
	static class UObject* GetPlayerSkinDef(class UObject* Player);
	static struct FVector GetControlledMoveTargetLocation(class UObject* Actor);
	static class UObject* GetInventoryObject(class UObject* Owner, class UObject* Def);
	static int32_t GetPerkIndex(class UObject* Skill);
	static class UObject* GetBuffDefinition(class UObject* Skill);
	static int32_t GetCareerStatValue(class UObject* Player, class UObject* Stat);
	static int32_t GetTeamLifetimeStatValue(class UObject* Player, class UObject* Stat);
	static int32_t GetTeamStatValue(class UObject* Player, class UObject* Stat);
	static int32_t GetLifetimeStatValue(class UObject* Player, class UObject* Stat);
	static int32_t GetMatchStatValue(class UObject* Player, class UObject* Stat);
	static float GetUnitOvershield(class UObject* Unit);
	static float GetUnitShield(class UObject* Unit);
	static float GetUnitHealth(class UObject* Unit);
	static int32_t GetUnitExpLevel(class UObject* Unit);
	static class UObject* GetUnitType(class UObject* Unit);
	static class UObject* GetTeam(class UObject* Unit);
	static int32_t GetSpawnerIndex(class UObject* Unit);
	static class UObject* GetLane(class UObject* Unit);
	static class TArray<class UObject*> FriendlyPlayers(class UObject* Allegiance);
	static class TArray<class UObject*> EnemyPlayers(class UObject* Allegiance);
	static class TArray<class UObject*> Teammates(class UObject* TeamMember);
	static class UObject* GetGameInfo();
};

// Class PoplarGame.PoplarBlockingMeshActor
// 0x0010 (0x0250 - 0x0260)
class APoplarBlockingMeshActor : public ABlockingMeshActor
{
public:
	class TArray<class UPoplarTeamDefinition*>         BlockedTeams;                                  // 0x0250 (0x0010) [0x0000000020400000] (CPF_NeedCtorLink | CPF_Deprecated)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarBlockingMeshActor");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarBlockingMeshComponent
// 0x0010 (0x0420 - 0x0430)
class UPoplarBlockingMeshComponent : public UBlockingMeshComponent
{
public:
	class TArray<class UPoplarTeamDefinition*>         BlockTeams;                                    // 0x0420 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarBlockingMeshComponent");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarBodyClassDefinition
// 0x0100 (0x04B8 - 0x05B8)
class UPoplarBodyClassDefinition : public UBodyClassDefinition
{
public:
	struct FPointer                                    VfTable_IIBehaviorProvider;                    // 0x04B8 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIPoplarSkinInfoProvider;              // 0x04C0 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	float                                              MaxCounteringAngle;                            // 0x04C8 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class USpecialMoveDefinition*                      CounteredSMD;                                  // 0x04D0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UResourceDefinition*                         BlockingResource;                              // 0x04D8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                BlockingResourceDamageUpdateFormula;           // 0x04E0 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class USpecialMoveDefinition*                      RevivedSMD;                                    // 0x0500 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UBodyClassDeathDefinition*                   DownedDeathDef;                                // 0x0508 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FName                                       KillerCameraOverrideName;                      // 0x0510 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FName                                       SpectatorCameraOverrideName;                   // 0x0518 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<struct FSnapLocationData>             SnapLocations;                                 // 0x0520 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class UAttackSequenceDefinition*                   MeleeSequenceDefinition;                       // 0x0530 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bHasFirstPersonBody : 1;                       // 0x0538 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bFirstPersonUpperBodyInForeground : 1;         // 0x0538 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	uint32_t                                           bBlockExternalControlledMoves : 1;             // 0x0538 (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	uint32_t                                           bEnableSpawnSoundPreview : 1;                  // 0x0538 (0x0004) [0x0000000000000001] [0x00000008] (CPF_Edit)
	class TArray<class UPoplarAimOffsetProfileDefinition*> FirstPersonAimOffsetDefs;                      // 0x0540 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<class UPoplarAimOffsetProfileDefinition*> ThirdPersonAimOffsetDefs;                      // 0x0550 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<struct FMeshAttachmentAimOffsetData>  MeshAttachmentAimOffsets;                      // 0x0560 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class UBehaviorProviderDefinition*                 BehaviorProviderDefinition;                    // 0x0570 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UStanceTypeDefinition*                       FocusStance;                                   // 0x0578 (0x0008) [0x000000000440000B] (CPF_Edit | CPF_Const | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UAnimSet*                                    CharacterMenuAnimSet;                          // 0x0580 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<struct FGenericAnimMapping>           StandInAnimMappings;                           // 0x0588 (0x0010) [0x0000000004400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink | CPF_EditInline)
	float                                              StandInSizeModifier;                           // 0x0598 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    SpawnAkEvent;                                  // 0x05A0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarSharedEventProviderDefinition*        PlayerEventDef;                                // 0x05A8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarSharedEventProviderDefinition*        PlayerClassSpecificEventDef;                   // 0x05B0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarBodyClassDefinition");
		}

		return uClassPointer;
	};

	void OnUpgradedByBuildNode(int32_t PreviousLevel, int32_t NewLevel, class AActor* MasterOfStructure, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnLandedAfterFalling(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnFallingJumpPressed(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnStopCountered(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnStartCountered(struct FBehaviorConsumerHandle& ConsumerHandle);
	void GetDefaultStances(class TArray<class UStanceTypeDefinition*>& OutStances);
};

// Class PoplarGame.PoplarBodyHitRegionDefinition
// 0x0038 (0x0398 - 0x03D0)
class UPoplarBodyHitRegionDefinition : public UBodyHitRegionDefinition
{
public:
	uint32_t                                           bApplyDamageScale : 1;                         // 0x0398 (0x0004) [0x0000000000000002] [0x00000001] (CPF_Const)
	struct FAttributeInitializationData                DamageScale;                                   // 0x03A0 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<struct FHitRegionDamageModifierData>  DamageModifiers;                               // 0x03C0 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarBodyHitRegionDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarBuffDefinition
// 0x0210 (0x0058 - 0x0268)
class UPoplarBuffDefinition : public UGBXDefinition
{
public:
	struct FPointer                                    VfTable_IIBehaviorProvider;                    // 0x0058 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UBehaviorProviderDefinition*                 BehaviorProviderDefinition;                    // 0x0060 (0x0008) [0x0000000000000002] (CPF_Const)   
	class FString                                      ReadableNameString;                            // 0x0068 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      ShortDescription;                              // 0x0078 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class TArray<EBuffDefinitionTag>                   Tags;                                          // 0x0088 (0x0010) [0x0000000000500001] (CPF_Edit | CPF_NeedCtorLink)
	ECrowdControlState                                 CrowdControlEffect;                            // 0x0098 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EBuffStacking                                      BuffStackingStrategy;                          // 0x0099 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EBuffUniqueness                                    Uniqueness;                                    // 0x009A (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           HideCrowdControlStateFromHUD : 1;              // 0x009C (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bCanBeAppliedToInstigator : 1;                 // 0x009C (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	uint32_t                                           bCannotBeAppliedToDead : 1;                    // 0x009C (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	uint32_t                                           bCannotBeAppliedToDisconnected : 1;            // 0x009C (0x0004) [0x0000000000000003] [0x00000008] (CPF_Edit | CPF_Const)
	uint32_t                                           bInfiniteDuration : 1;                         // 0x009C (0x0004) [0x0000000000000003] [0x00000010] (CPF_Edit | CPF_Const)
	uint32_t                                           bEvaluateDurationAttributeOnTarget : 1;        // 0x009C (0x0004) [0x0000000000000003] [0x00000020] (CPF_Edit | CPF_Const)
	uint32_t                                           RemovedUponDeath : 1;                          // 0x009C (0x0004) [0x0000000000000003] [0x00000040] (CPF_Edit | CPF_Const)
	uint32_t                                           bBuffCanDamageFriendlies : 1;                  // 0x009C (0x0004) [0x0000000000000003] [0x00000080] (CPF_Edit | CPF_Const)
	uint32_t                                           bBuffCanDamageInstigator : 1;                  // 0x009C (0x0004) [0x0000000000000003] [0x00000100] (CPF_Edit | CPF_Const)
	uint32_t                                           bAllowPerkToRunSkillOnOthers : 1;              // 0x009C (0x0004) [0x0000000000000003] [0x00000200] (CPF_Edit | CPF_Const)
	uint32_t                                           bUnbreakableShield : 1;                        // 0x009C (0x0004) [0x0000000000000003] [0x00000400] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                Duration;                                      // 0x00A0 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarBuffDefinition*                       NextBuffDefinition;                            // 0x00C0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                MaximumNumberOfStacks;                         // 0x00C8 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                DamageFormula;                                 // 0x00E8 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UDamageTypeDefinition*                       DamageTypeDefinition;                          // 0x0108 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                DamageOverTimePulseInterval;                   // 0x0110 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                LifestealFormula;                              // 0x0130 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                ShieldstealFormula;                            // 0x0150 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                ShieldPenFormula;                              // 0x0170 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<struct FConditionalDamageModifier>    OffensiveConditionalDamageModifiers;           // 0x0190 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<struct FConditionalDamageModifier>    DefensiveConditionalDamageModifiers;           // 0x01A0 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<class USkillDefinition*>              SkillsToRunDuringBuff;                         // 0x01B0 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class UPoplarActionDefinition*                     TrackedPoplarActionDef;                        // 0x01C0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarSkillDefinition*                      TrackedSkillDef;                               // 0x01C8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FDamageTags                                 DamageTags;                                    // 0x01D0 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<struct FBuffSortInfo>                 SortInfo;                                      // 0x01D8 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	struct FAttributeInitializationData                MaxOvershieldPool;                             // 0x01E8 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                StartingShieldPool;                            // 0x0208 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                ShieldRegenerationDelay;                       // 0x0228 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                ShieldRegenerationRate;                        // 0x0248 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarBuffDefinition");
		}

		return uClassPointer;
	};

	void OnKilledEnemy(class UObject* Enemy, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnDamagedEnemy(class UObject* Enemy, float DamageDoneToHealth, float DamageDoneToShields, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnShieldDepleted(class UObject* TheBuffedActor, class AController* Enemy, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnBuffOwnerKilled(class UObject* TheBuffedActor, class AController* Enemy, float HealthDamageDone, float ExcessDamageDone, float BuffDurationRemaining, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnDamageOrHealingPulse(class UObject* TheBuffInstigator, class UObject* TheBuffedActor, class UObject* DamageTypeDef, float DamageAmount, float PulseInterval, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnBuffStopped(EBehaviorEventNetworkRole EventOutput, class UObject* TheBuffInstigator, class UObject* TheBuffedActor, float BuffDurationRemaining, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnBuffStarted(EBehaviorEventNetworkRole EventOutput, class UObject* TheBuffInstigator, class UObject* TheBuffedActor, float BuffDuration, struct FBehaviorConsumerHandle& ConsumerHandle);
};

// Class PoplarGame.PoplarPerkFunction
// 0x0178 (0x0268 - 0x03E0)
class UPoplarPerkFunction : public UPoplarBuffDefinition
{
public:
	struct FPmtData                                    PmtData;                                       // 0x0268 (0x0028) [0x0000000000000000]               
	uint32_t                                           bMicropatchDisabled : 1;                       // 0x0290 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	uint32_t                                           IsPassive : 1;                                 // 0x0290 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	uint32_t                                           bAutoActivate : 1;                             // 0x0290 (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	uint32_t                                           bCampaignOnly : 1;                             // 0x0290 (0x0004) [0x0000000000000003] [0x00000008] (CPF_Edit | CPF_Const)
	uint32_t                                           bHydraEnabled : 1;                             // 0x0290 (0x0004) [0x0000000000020001] [0x00000010] (CPF_Edit | CPF_EditConst)
	uint32_t                                           bHydraCanUse : 1;                              // 0x0290 (0x0004) [0x0000000000020001] [0x00000020] (CPF_Edit | CPF_EditConst)
	uint32_t                                           bHydraRefundable : 1;                          // 0x0290 (0x0004) [0x0000000000020001] [0x00000040] (CPF_Edit | CPF_EditConst)
	uint32_t                                           bUseTieredActivation : 1;                      // 0x0290 (0x0004) [0x0000000000000003] [0x00000080] (CPF_Edit | CPF_Const)
	uint32_t                                           bUseItemLevelOverride : 1;                     // 0x0290 (0x0004) [0x0000000000000003] [0x00000100] (CPF_Edit | CPF_Const)
	class FString                                      DisplayName;                                   // 0x0298 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      DisplayNamePrefix;                             // 0x02A8 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      DisplayNameSuffix;                             // 0x02B8 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class USwfMovie*                                   Icon;                                          // 0x02C8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EBuffDefinitionTag                                 LoadoutExclusionFlag;                          // 0x02D0 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EPoplarArchetype                                   AssociatedArchetype;                           // 0x02D1 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    RewardTrainSound;                              // 0x02D8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class FString                                      LongDescription;                               // 0x02E0 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class TArray<class UMarkupAttributePresentationDefinition*> DescriptionPresentations;                      // 0x02F0 (0x0010) [0x000000000440000B] (CPF_Edit | CPF_Const | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	struct FAttributeInitializationData                BaseActivationCost;                            // 0x0300 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarFactionDefinition*                    AssociatedFaction;                             // 0x0320 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class FString                                      AssetTrackerKey;                               // 0x0328 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)
	class FString                                      MetaContentID;                                 // 0x0338 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	int32_t                                            HydraDatabaseID;                               // 0x0348 (0x0004) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
	class FString                                      HydraItemWebToolAddress;                       // 0x0350 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)
	class FString                                      HydraApolloData;                               // 0x0360 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)
	class FString                                      HydraCreationTimestamp;                        // 0x0370 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)
	class FString                                      HydraLastUpdateTimestamp;                      // 0x0380 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)
	class FString                                      HydraImageURL;                                 // 0x0390 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)
	int32_t                                            HydraMaxCount;                                 // 0x03A0 (0x0004) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
	int32_t                                            HydraRequiredLevel;                            // 0x03A4 (0x0004) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
	int32_t                                            HydraSellValueInPremiumCurrency;               // 0x03A8 (0x0004) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
	int32_t                                            HydraSellValueInEarnedCurrency;                // 0x03AC (0x0004) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
	class FString                                      RarityString;                                  // 0x03B0 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)
	class UPoplarPerkFunction*                         PreActivationPerk;                             // 0x03C0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<struct FTieredActivationData>         TierActivations;                               // 0x03C8 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	int32_t                                            ItemLevelOverride;                             // 0x03D8 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPerkFunction");
		}

		return uClassPointer;
	};

	void OnPerkDeactivated(EBehaviorEventNetworkRole EventOutput, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnPerkActivated(EBehaviorEventNetworkRole EventOutput, class UObject* Player, float ItemLevel, int32_t Rarity, struct FBehaviorConsumerHandle& ConsumerHandle);
};

// Class PoplarGame.PoplarBuffManager
// 0x0010 (0x0058 - 0x0068)
class UPoplarBuffManager : public UObject
{
public:
	class TArray<struct FBuffableData>                 TrackedBuffableData;                           // 0x0058 (0x0010) [0x0000000000482000] (CPF_Transient | CPF_Component | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarBuffManager");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarBuildableDefinition
// 0x0090 (0x0058 - 0x00E8)
class UPoplarBuildableDefinition : public UGBXDefinition
{
public:
	struct FPointer                                    VfTable_IIBehaviorProvider;                    // 0x0058 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPmtData                                    PmtData;                                       // 0x0060 (0x0028) [0x0000000000003000] (CPF_Native | CPF_Transient)
	class UBehaviorProviderDefinition*                 BehaviorProviderDefinition;                    // 0x0088 (0x0008) [0x0000000000000002] (CPF_Const)   
	class TArray<struct FBuildableObject>              BuildableProperties;                           // 0x0090 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class USwfMovie*                                   TypeIconMovie;                                 // 0x00A0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bShouldBeLaneAware : 1;                        // 0x00A8 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bShouldUseMenu : 1;                            // 0x00A8 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	uint32_t                                           bPreviewCostWithIconEvenIfYouCantAfford : 1;   // 0x00A8 (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	uint32_t                                           bSubtractPreviousTierCostFromCost : 1;         // 0x00A8 (0x0004) [0x0000000000000003] [0x00000008] (CPF_Edit | CPF_Const)
	uint32_t                                           bUseTierLogicForPurchasing : 1;                // 0x00A8 (0x0004) [0x0000000000000003] [0x00000010] (CPF_Edit | CPF_Const)
	uint32_t                                           bPreviewCost : 1;                              // 0x00A8 (0x0004) [0x0000000000000003] [0x00000020] (CPF_Edit | CPF_Const)
	uint32_t                                           bPreventBuildNodeUseWhileThisIsBuilt : 1;      // 0x00A8 (0x0004) [0x0000000000000003] [0x00000040] (CPF_Edit | CPF_Const)
	uint32_t                                           bDestroyCurrentStructureOnSpawn : 1;           // 0x00A8 (0x0004) [0x0000000000000003] [0x00000080] (CPF_Edit | CPF_Const)
	EPoplarBuildableType                               BuildableType;                                 // 0x00AC (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EInitialActionType                                 InitialAction;                                 // 0x00AD (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              CooldownTimeBetweenPurchases;                  // 0x00B0 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FName                                       SpawnLocationSocketName;                       // 0x00B4 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class USwfMovie*                                   SecondaryUseIconDef;                           // 0x00C0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UParticleSystem*                             BuildableTypeParticle;                         // 0x00C8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class FString                                      BuildableNameForMessaging;                     // 0x00D0 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	float                                              CycleParticleDelay;                            // 0x00E0 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarBuildableDefinition");
		}

		return uClassPointer;
	};

	void OnStructureDestroyed(class AActor* Master, class AActor* Killer, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnSuccessfulPurchase(class AActor* Master, class AActor* BuildNode, class AActor* Buildable, int32_t UpgradeLevel, int32_t Cost, struct FBehaviorConsumerHandle& ConsumerHandle);
};

// Class PoplarGame.PoplarBuildableSetDefinition
// 0x0040 (0x0058 - 0x0098)
class UPoplarBuildableSetDefinition : public UGBXDefinition
{
public:
	struct FPmtData                                    PmtData;                                       // 0x0058 (0x0028) [0x0000000000003000] (CPF_Native | CPF_Transient)
	EPoplarBuildableType                               BuildSetType;                                  // 0x0080 (0x0001) [0x0000000000000001] (CPF_Edit)    
	class TArray<class UPoplarBuildableDefinition*>    BuildSet;                                      // 0x0088 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarBuildableSetDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarBuildNodeGFxMovie
// 0x0130 (0x05B0 - 0x06E0)
class UPoplarBuildNodeGFxMovie : public UWillowGFxMovie3D
{
public:
	struct FPointer                                    VfTable_IIBuildNodeObserver;                   // 0x05B0 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class FString                                      CantAfford;                                    // 0x05B8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      ReplaceActiveDroneText;                        // 0x05C8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	int32_t                                            FirstBuildableCellIndex;                       // 0x05D8 (0x0004) [0x0000000000000000]               
	class UGFxObject*                                  ContainerClip;                                 // 0x05E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  BuildNodeClip;                                 // 0x05E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarPlayerStateInfo*                      PSIOwner;                                      // 0x05F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarBuildNodeObject*                      BuildNode;                                     // 0x05F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UInputButtonDefinition*                      PurchaseTopBuildableButtonDefinition;          // 0x0600 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UInputButtonDefinition*                      PurchaseMidBuildableButtonDefinition;          // 0x0608 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UInputButtonDefinition*                      PurchaseBottomBuildableButtonDefinition;       // 0x0610 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FBuildableState                             LocalBuildableState[0x3];                      // 0x0618 (0x00C0) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	uint8_t                                           UnknownData00[0x8];                            // 0x06D8 (0x0008) MISSED OFFSET

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarBuildNodeGFxMovie");
		}

		return uClassPointer;
	};

	void OnInputTypeChanged(bool bIsUsingGamepad);
	void HandleHintInput(const struct FPlatformUserId& UserId, const struct FName& HintTag);
	void PopulateHintBar();
	bool HandleInputKey(const struct FPlatformUserId& UserId, const struct FName& ukey, EInputEvent uevent);
	void OnCurrencyChanged(const struct FCurrencyState& ChangedCurrency);
	void eventOnClose();
	bool eventStart(bool optionalBStartPaused);
	void extOnBuildNodeItemClicked(int32_t BuildableIndex);
	bool StartNative(bool bStartPaused);
};

// Class PoplarGame.PoplarBuildNodeGFxMovieDefinition
// 0x0000 (0x0138 - 0x0138)
class UPoplarBuildNodeGFxMovieDefinition : public UWillowGFxMovie3DDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarBuildNodeGFxMovieDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCamera
// 0x0050 (0x05F0 - 0x0640)
class APoplarCamera : public AGearboxCamera
{
public:
	struct FPointer                                    VfTable_IIScreenParticle;                      // 0x05F0 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UPoplarCameraInputs*                         PoplarInputs;                                  // 0x05F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarCameraShakeManager*                   PoplarShakeManager;                            // 0x0600 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bDisplayViewModelDebugTarget : 1;              // 0x0608 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	class AWillowPawn*                                 PreviousPawnViewTarget;                        // 0x0610 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FName                                       CachedVehicleCameraName;                       // 0x0618 (0x0008) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FScreenParticleRecord>         ScreenParticleRecords;                         // 0x0620 (0x0010) [0x0000000000482000] (CPF_Transient | CPF_Component | CPF_NeedCtorLink)
	class UPoplarPlayerClassDefinition*                PlayerClass;                                   // 0x0630 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint8_t                                           UnknownData00[0x8];                            // 0x0638 (0x0008) MISSED OFFSET

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCamera");
		}

		return uClassPointer;
	};

	void TickScreenParticleModifiers();
	int32_t FindScreenParticleRecordIndexByTag(const struct FName& ParticleTag, class UObject* ComponentOwner);
	int32_t FindScreenParticleRecordIndexByTemplate(class UParticleSystem* Template, class UObject* ComponentOwner);
	void ApplyScreenParticleModifiers(class UParticleSystem* Template, const class TArray<struct FScreenParticleModifier>& ScreenParticleModifiers);
	void UpdateVisibilityOfAllActiveScreenParticles();
	bool ScreenParticlesShouldBeVisible();
	void HideScreenParticle(class UParticleSystem* Template, const struct FName& optionalParticleTag, bool optionalBAllowParticleToFinish);
	class UParticleSystemComponent* ShowScreenParticle(const struct FScreenParticleInitParams& InitParams, const struct FVector& optionalReferenceLocation, float optionalParticleScale);
	void UpdateScreenParticles(const struct FVector& POVLocation, const struct FRotator& POVRotation);
	void DisplayViewModelDebugTarget();
	void RandomizeFractalWanderPoints();
	void ResetViewWandering(float optionalSmoothInTime);
	void PlaySkidCameraLurch();
	void InitializeViewWanderingForWeapon(class UWeaponTypeDefinition* WeaponDef);
	void AddPainCameraShake(const struct FVector& LocOffset, const struct FRotator& RotOffset, float FOVOffset, float MaxLocationOffset, float MaxRotOffset, float MaxFOVOffset, float Duration);
	void eventSetCameraFocus(class AActor* optionalLookAtTarget, const struct FName& optionalLookAtBone, const struct FName& optionalLookAtSocket, const struct FVector& optionalLookAtOffset);
	void eventFinishUseCameraActor(class ACameraActor* FinishedCamActor, float TransitionTime);
	void eventBeginUseCameraActor(class ACameraActor* CamActor, float TransitionTime);
	bool IsFirstPerson();
	bool IsUsingCameraMode();
	void UpdateMeshVisibility(class UGBXCameraMode* CurrentMode);
	void eventUpdateCamera(float DeltaTime);
	void PostBeginPlay();
};

// Class PoplarGame.PoplarCameraBehavior
// 0x0008 (0x0068 - 0x0070)
class UPoplarCameraBehavior : public UGBXCameraBehavior
{
public:
	class UPoplarCameraInputs*                         PoplarInputs;                                  // 0x0068 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCameraBehavior");
		}

		return uClassPointer;
	};

	void Initialize(class UGBXCameraInputs* CameraInputs);
};

// Class PoplarGame.PoplarCameraBehavior_AnchorToCameraActor
// 0x0000 (0x0070 - 0x0070)
class UPoplarCameraBehavior_AnchorToCameraActor : public UPoplarCameraBehavior
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCameraBehavior_AnchorToCameraActor");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCameraBehavior_AnchorToSocket
// 0x0010 (0x0070 - 0x0080)
class UPoplarCameraBehavior_AnchorToSocket : public UPoplarCameraBehavior
{
public:
	uint32_t                                           bSetLocation : 1;                              // 0x0070 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	uint32_t                                           bSetRotation : 1;                              // 0x0070 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	struct FName                                       SocketName;                                    // 0x0074 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCameraBehavior_AnchorToSocket");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCameraBehavior_AnchorCharacterIntro
// 0x0040 (0x0080 - 0x00C0)
class UPoplarCameraBehavior_AnchorCharacterIntro : public UPoplarCameraBehavior_AnchorToSocket
{
public:
	struct FVector                                     OffsetWhenNotPlayingTaunt;                     // 0x0080 (0x000C) [0x0000000000000001] (CPF_Edit)    
	float                                              AttachCameraDelay;                             // 0x008C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              BlendIntoTauntTime;                            // 0x0090 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              HeightOffsetPct;                               // 0x0094 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              CameraListRate;                                // 0x0098 (0x0004) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bWasPlayingTaunt : 1;                          // 0x009C (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	float                                              AttachCameraDelayRemaining;                    // 0x00A0 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              BlendTimeRemaining;                            // 0x00A4 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     BlendLocationDelta;                            // 0x00A8 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FRotator                                    BlendRotationDelta;                            // 0x00B4 (0x000C) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCameraBehavior_AnchorCharacterIntro");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCameraBehavior_AnchorToViewTargetEyeLocation
// 0x0000 (0x0070 - 0x0070)
class UPoplarCameraBehavior_AnchorToViewTargetEyeLocation : public UPoplarCameraBehavior
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCameraBehavior_AnchorToViewTargetEyeLocation");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCameraBehavior_AnimationFromCamAnim
// 0x0000 (0x0070 - 0x0070)
class UPoplarCameraBehavior_AnimationFromCamAnim : public UPoplarCameraBehavior
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCameraBehavior_AnimationFromCamAnim");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCameraBehavior_AnimationFromViewmodel
// 0x0038 (0x0070 - 0x00A8)
class UPoplarCameraBehavior_AnimationFromViewmodel : public UPoplarCameraBehavior
{
public:
	struct FName                                       CameraBoneName;                                // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       IdleAnimationName;                             // 0x0078 (0x0008) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bSetLocation : 1;                              // 0x0080 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	uint32_t                                           bSetRotation : 1;                              // 0x0080 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	class USkeletalMeshComponent*                      CachedViewmodelMesh;                           // 0x0088 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	struct FVector                                     BaseCameraPosition;                            // 0x0090 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FRotator                                    BaseCameraRotation;                            // 0x009C (0x000C) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCameraBehavior_AnimationFromViewmodel");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCameraBehavior_ApplySkidCameraLurch
// 0x0000 (0x0070 - 0x0070)
class UPoplarCameraBehavior_ApplySkidCameraLurch : public UPoplarCameraBehavior
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCameraBehavior_ApplySkidCameraLurch");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCameraBehavior_CollisionAnchorTrace
// 0x0018 (0x0070 - 0x0088)
class UPoplarCameraBehavior_CollisionAnchorTrace : public UPoplarCameraBehavior
{
public:
	struct FVector                                     Extents;                                       // 0x0070 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     PreviousAnchorLocation;                        // 0x007C (0x000C) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCameraBehavior_CollisionAnchorTrace");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCameraBehavior_CollisionOffsetTrace
// 0x0018 (0x0070 - 0x0088)
class UPoplarCameraBehavior_CollisionOffsetTrace : public UPoplarCameraBehavior
{
public:
	struct FVector                                     Extents;                                       // 0x0070 (0x000C) [0x0000000000000001] (CPF_Edit)    
	float                                              TraceOriginOffsetZ;                            // 0x007C (0x0004) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bUseAnchorAsSafeLocation : 1;                  // 0x0080 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCameraBehavior_CollisionOffsetTrace");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCameraBehavior_DampAnchorMovement
// 0x0030 (0x0070 - 0x00A0)
class UPoplarCameraBehavior_DampAnchorMovement : public UPoplarCameraBehavior
{
public:
	float                                              HorizontalDampingTime;                         // 0x0070 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              VerticalDampingTime;                           // 0x0074 (0x0004) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bUseParametric_Vertical : 1;                   // 0x0078 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	uint32_t                                           bUseParametric_Horizontal : 1;                 // 0x0078 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	float                                              MinParametricDistance_Vertical;                // 0x007C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxParametricDistance_Vertical;                // 0x0080 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MinParametricDistance_Horizontal;              // 0x0084 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxParametricDistance_Horizontal;              // 0x0088 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FVector2D                                   LastAnchorLocation2D;                          // 0x008C (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              LastAnchorZ;                                   // 0x0094 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TimeUntilDelayedStart;                         // 0x0098 (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCameraBehavior_DampAnchorMovement");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCameraBehavior_FaceDirection
// 0x0018 (0x0070 - 0x0088)
class UPoplarCameraBehavior_FaceDirection : public UPoplarCameraBehavior
{
public:
	float                                              YawMin;                                        // 0x0070 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              YawMax;                                        // 0x0074 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              PitchMin;                                      // 0x0078 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              PitchMax;                                      // 0x007C (0x0004) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           YawRelativeToBase : 1;                         // 0x0080 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	uint32_t                                           PitchRelativeToBase : 1;                       // 0x0080 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	uint32_t                                           bResetRotationOnStart : 1;                     // 0x0080 (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	uint32_t                                           bFirstUpdate : 1;                              // 0x0080 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCameraBehavior_FaceDirection");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCameraBehavior_FOVFixed
// 0x0008 (0x0070 - 0x0078)
class UPoplarCameraBehavior_FOVFixed : public UPoplarCameraBehavior
{
public:
	float                                              FOVRatio;                                      // 0x0070 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              FOV;                                           // 0x0074 (0x0004) [0x0000000020000000]  CPF_Deprecated)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCameraBehavior_FOVFixed");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCameraBehavior_FOV
// 0x0008 (0x0078 - 0x0080)
class UPoplarCameraBehavior_FOV : public UPoplarCameraBehavior_FOVFixed
{
public:
	uint32_t                                           bSupportIronsightsFOV : 1;                     // 0x0078 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	uint32_t                                           bSupportSprintFOV : 1;                         // 0x0078 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	float                                              SprintFadePct;                                 // 0x007C (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCameraBehavior_FOV");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCameraBehavior_LimitPitch
// 0x0010 (0x0070 - 0x0080)
class UPoplarCameraBehavior_LimitPitch : public UPoplarCameraBehavior
{
public:
	float                                              PitchMin;                                      // 0x0070 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              PitchMax;                                      // 0x0074 (0x0004) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bSetInitialPitch : 1;                          // 0x0078 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	float                                              InitialPitch;                                  // 0x007C (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCameraBehavior_LimitPitch");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCameraBehavior_Look
// 0x0008 (0x0070 - 0x0078)
class UPoplarCameraBehavior_Look : public UPoplarCameraBehavior
{
public:
	float                                              YawSpeedScale;                                 // 0x0070 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              PitchSpeedScale;                               // 0x0074 (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCameraBehavior_Look");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCameraBehavior_LookAutoRotate
// 0x0010 (0x0078 - 0x0088)
class UPoplarCameraBehavior_LookAutoRotate : public UPoplarCameraBehavior_Look
{
public:
	float                                              AutoRotateDelay;                               // 0x0078 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AutoRotateYawSpeed;                            // 0x007C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              IdleTime;                                      // 0x0080 (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCameraBehavior_LookAutoRotate");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCameraBehavior_LookAtFocus
// 0x0008 (0x0070 - 0x0078)
class UPoplarCameraBehavior_LookAtFocus : public UPoplarCameraBehavior
{
public:
	float                                              MinLookAtDistance;                             // 0x0070 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              LookAtPercentage;                              // 0x0074 (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCameraBehavior_LookAtFocus");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCameraBehavior_OffsetAbsolute
// 0x0010 (0x0070 - 0x0080)
class UPoplarCameraBehavior_OffsetAbsolute : public UPoplarCameraBehavior
{
public:
	struct FVector                                     LocationOffset;                                // 0x0070 (0x000C) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCameraBehavior_OffsetAbsolute");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCameraBehavior_OffsetCameraRelative
// 0x0028 (0x0070 - 0x0098)
class UPoplarCameraBehavior_OffsetCameraRelative : public UPoplarCameraBehavior
{
public:
	struct FVector                                     LocationOffset;                                // 0x0070 (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FRotator                                    RotationOffset;                                // 0x007C (0x000C) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bUseDynamicLocationOverride : 1;               // 0x0088 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	struct FVector                                     LocationOffsetOverride;                        // 0x008C (0x000C) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCameraBehavior_OffsetCameraRelative");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCameraBehavior_LookInterpToViewTarget
// 0x0018 (0x0098 - 0x00B0)
class UPoplarCameraBehavior_LookInterpToViewTarget : public UPoplarCameraBehavior_OffsetCameraRelative
{
public:
	float                                              SmoothTime;                                    // 0x0098 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              PitchScale;                                    // 0x009C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              PitchOffset;                                   // 0x00A0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     LastViewRotation;                              // 0x00A4 (0x000C) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCameraBehavior_LookInterpToViewTarget");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCameraBehavior_RestoreRotationToControllerRotation
// 0x0000 (0x0070 - 0x0070)
class UPoplarCameraBehavior_RestoreRotationToControllerRotation : public UPoplarCameraBehavior
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCameraBehavior_RestoreRotationToControllerRotation");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCameraBehavior_RestoreStartRotation
// 0x0010 (0x0070 - 0x0080)
class UPoplarCameraBehavior_RestoreStartRotation : public UPoplarCameraBehavior
{
public:
	struct FRotator                                    SavedRotation;                                 // 0x0070 (0x000C) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCameraBehavior_RestoreStartRotation");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCameraBehavior_SetFacingDirectionFromViewTarget
// 0x0000 (0x0070 - 0x0070)
class UPoplarCameraBehavior_SetFacingDirectionFromViewTarget : public UPoplarCameraBehavior
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCameraBehavior_SetFacingDirectionFromViewTarget");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCameraBehavior_Shake
// 0x0008 (0x0070 - 0x0078)
class UPoplarCameraBehavior_Shake : public UPoplarCameraBehavior
{
public:
	uint32_t                                           bEnableCameraShakes : 1;                       // 0x0070 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	uint32_t                                           bEnablePainShakes : 1;                         // 0x0070 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	uint32_t                                           bEnableSkidCameraLurch : 1;                    // 0x0070 (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCameraBehavior_Shake");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCameraBehavior_SnapLookToTarget
// 0x0008 (0x0070 - 0x0078)
class UPoplarCameraBehavior_SnapLookToTarget : public UPoplarCameraBehavior
{
public:
	float                                              PrevZoomPct;                                   // 0x0070 (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCameraBehavior_SnapLookToTarget");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCameraBehavior_SpectatorPlayer
// 0x0000 (0x0070 - 0x0070)
class UPoplarCameraBehavior_SpectatorPlayer : public UPoplarCameraBehavior
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCameraBehavior_SpectatorPlayer");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCameraBehavior_TemporaryLegacySupport
// 0x0000 (0x0070 - 0x0070)
class UPoplarCameraBehavior_TemporaryLegacySupport : public UPoplarCameraBehavior
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCameraBehavior_TemporaryLegacySupport");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCameraBehavior_UpdateFocusLocation
// 0x0000 (0x0070 - 0x0070)
class UPoplarCameraBehavior_UpdateFocusLocation : public UPoplarCameraBehavior
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCameraBehavior_UpdateFocusLocation");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCameraBehavior_UpdateViewTargetFocusLocation
// 0x0008 (0x0070 - 0x0078)
class UPoplarCameraBehavior_UpdateViewTargetFocusLocation : public UPoplarCameraBehavior
{
public:
	struct FName                                       FocusName;                                     // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCameraBehavior_UpdateViewTargetFocusLocation");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCameraBehavior_ViewWeaponFOV
// 0x0000 (0x0070 - 0x0070)
class UPoplarCameraBehavior_ViewWeaponFOV : public UPoplarCameraBehavior
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCameraBehavior_ViewWeaponFOV");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCameraBehavior_ViewWeaponLeading
// 0x0040 (0x0070 - 0x00B0)
class UPoplarCameraBehavior_ViewWeaponLeading : public UPoplarCameraBehavior
{
public:
	int32_t                                            MaxDeltaRotationHistory;                       // 0x0070 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       IdleAnimationName;                             // 0x0074 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class TArray<struct FVector>                       ArmsLeadingRotationHistory;                    // 0x0080 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	uint8_t                                            NextArmsLeadingRotationIndex;                  // 0x0090 (0x0001) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     LastArmsLeadingOffset;                         // 0x0094 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FRotator                                    LastPOVRotation;                               // 0x00A0 (0x000C) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCameraBehavior_ViewWeaponLeading");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCameraBehavior_ViewWeaponOffset
// 0x0000 (0x0070 - 0x0070)
class UPoplarCameraBehavior_ViewWeaponOffset : public UPoplarCameraBehavior
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCameraBehavior_ViewWeaponOffset");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCameraBehavior_WanderingAndKick
// 0x0008 (0x0070 - 0x0078)
class UPoplarCameraBehavior_WanderingAndKick : public UPoplarCameraBehavior
{
public:
	uint32_t                                           bEnableViewKick : 1;                           // 0x0070 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	uint32_t                                           bEnableViewWandering : 1;                      // 0x0070 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCameraBehavior_WanderingAndKick");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCameraInputs
// 0x0080 (0x0098 - 0x0118)
class UPoplarCameraInputs : public UGBXCameraInputs
{
public:
	class APoplarCamera*                               Camera;                                        // 0x0098 (0x0008) [0x0000000000002000] (CPF_Transient)
	class ACameraActor*                                CameraActor;                                   // 0x00A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarPlayerPawn*                           PlayerPawn;                                    // 0x00A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class AWillowWeapon*                               PlayerWeapon;                                  // 0x00B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FRotator                                    FacingDirection;                               // 0x00B8 (0x000C) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bSprinting : 1;                                // 0x00C4 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	struct FName                                       AttachSocket;                                  // 0x00C8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class USkeletalMeshComponent*                      AttachMesh;                                    // 0x00D0 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	struct FVector                                     AttachOffset;                                  // 0x00D8 (0x000C) [0x0000000000002000] (CPF_Transient)
	float                                              ZoomPercentage;                                // 0x00E4 (0x0004) [0x0000000000002000] (CPF_Transient)
	class AActor*                                      FocusActor;                                    // 0x00E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FName                                       FocusSocket;                                   // 0x00F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FName                                       FocusBone;                                     // 0x00F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     FocusOffset;                                   // 0x0100 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     FocusLocation;                                 // 0x010C (0x000C) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCameraInputs");
		}

		return uClassPointer;
	};

	void ClearRefreshedObjectRefs();
	void UpdateViewTargetInputs(class AActor* CurrentViewTarget);
};

// Class PoplarGame.PoplarCameraShakeManager
// 0x00A8 (0x00F8 - 0x01A0)
class UPoplarCameraShakeManager : public UGBXCameraShakeManager
{
public:
	float                                              CurrentWanderAccuracy;                         // 0x00F8 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              WanderingSmoothInDuration;                     // 0x00FC (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              WanderingSmoothInTimeRemaining;                // 0x0100 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              LastWanderingTime;                             // 0x0104 (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<uint8_t>                              ViewWanderingIndex;                            // 0x0108 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<float>                                ViewWanderingPercent;                          // 0x0118 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	float                                              TotalViewWanderingPersistence;                 // 0x0128 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FRotator                                    WanderRotOffset;                               // 0x012C (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FCameraLurchData                            CurrentLurch;                                  // 0x0138 (0x0014) [0x0000000000002000] (CPF_Transient)
	float                                              CurrentLurchPos;                               // 0x014C (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              ActualCurrentLurchLoc;                         // 0x0150 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              ActualCurrentLurchRot;                         // 0x0154 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              ActualCurrentLurchRotRoll;                     // 0x0158 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bCanPlaySkidImpact : 1;                        // 0x015C (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	struct FRotator                                    PainRot;                                       // 0x0160 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FRotator                                    DesiredPainRot;                                // 0x016C (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     PainOffset;                                    // 0x0178 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     DesiredPainOffset;                             // 0x0184 (0x000C) [0x0000000000002000] (CPF_Transient)
	float                                              PainFOV;                                       // 0x0190 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              DesiredPainFOV;                                // 0x0194 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              PainEndTime;                                   // 0x0198 (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCameraShakeManager");
		}

		return uClassPointer;
	};

	void RandomizeFractalWanderPoints();
	void ApplySkidCameraLurch(struct FVector& POVLocation, struct FRotator& POVRotation);
	void ApplyViewKick(struct FRotator& POVRotation, struct FRotator& POVOffsetRotation);
	void ApplyViewWandering(struct FRotator& POVRotation);
	void ApplyPainShake(struct FVector& OutLocation, struct FRotator& OutRotation, float& OutFOV);
	void ResetViewWandering(float optionalSmoothInTime);
	void AddPainCameraShake(const struct FVector& LocOffset, const struct FRotator& RotOffset, float FOVOffset, float MaxLocationOffset, float MaxRotOffset, float MaxFOVOffset, float Duration);
	void PlaySkidCameraLurch();
	void InitializeViewWanderingForWeapon(class UWeaponTypeDefinition* WeaponDef);
	void Update(float DeltaTime);
};

// Class PoplarGame.PoplarChallengeConditionDefinition
// 0x0020 (0x0058 - 0x0078)
class UPoplarChallengeConditionDefinition : public UGBXDefinition
{
public:
	class UStatDefinition*                             TargetValueStat;                               // 0x0058 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             SeedStat;                                      // 0x0060 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             Stat;                                          // 0x0068 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            TargetValue;                                   // 0x0070 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EStatCategoryTypes                                 StatCategory;                                  // 0x0074 (0x0001) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarChallengeConditionDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarChallengeDefinition
// 0x0108 (0x0058 - 0x0160)
class UPoplarChallengeDefinition : public UGBXDefinition
{
public:
	struct FPointer                                    VfTable_IIExpandableListEntry;                 // 0x0058 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class FString                                      ChallengeName;                                 // 0x0060 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	EChallengeInterval                                 ChallengeInterval;                             // 0x0070 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EDailySubType                                      DailySubType;                                  // 0x0071 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                ChallengeTimeSeconds;                          // 0x0078 (0x0020) [0x0000000000000001] (CPF_Edit)    
	class UChallengeCategoryDefinition*                ChallengeCategory;                             // 0x0098 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UChallengeSubCategoryDefinition*             ChallengeSubCategory;                          // 0x00A0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            DisplaySortIndex;                              // 0x00A8 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bInternalChallenge : 1;                        // 0x00AC (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	uint32_t                                           TeamChallenge : 1;                             // 0x00AC (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	uint32_t                                           LockedChallenge : 1;                           // 0x00AC (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	uint32_t                                           bPvEOnly : 1;                                  // 0x00AC (0x0004) [0x0000000000000001] [0x00000008] (CPF_Edit)
	class TArray<class UPoplarChallengeDefinition*>    SubChallenges;                                 // 0x00B0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class USwfMovie*                                   IconGFxMovie;                                  // 0x00C0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<struct FChallengeLevel>               ChallengeLevels;                               // 0x00C8 (0x0010) [0x0000000004400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink | CPF_EditInline)
	class UUnlockActivityFeedDefinition*               ChallengeLevelCompletedActivityDef;            // 0x00D8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarChallengeDefinition*                  UnlocksChallenge;                              // 0x00E0 (0x0008) [0x0000000000022001] (CPF_Edit | CPF_Transient | CPF_EditConst)
	class UCharacterStatDimensionValueDefinition*      RequiredCharacterStatDimensionValue;           // 0x00E8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UGameModeStatDimensionValueDefinition*       RequiredGameModeStatDimensionValue;            // 0x00F0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class ULevelStatDimensionValueDefinition*          RequiredLevelStatDimensionValue;               // 0x00F8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class ULevelListStatDimensionValueDefinition*      RequiredLevelListStatDimensionValue;           // 0x0100 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UFactionStatDimensionValueDefinition*        RequiredFactionStatDimensionValue;             // 0x0108 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UDifficultyStatDimensionValueDefinition*     RequiredDifficultyStatDimensionValue;          // 0x0110 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UHardcoreStatDimensionValueDefinition*       RequiredHardcoreStatDimensionValue;            // 0x0118 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UTeamSizeStatDimensionValueDefinition*       RequiredTeamSizeStatDimensionValue;            // 0x0120 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class URoleStatDimensionValueDefinition*           RequiredRoleStatDimensionValue;                // 0x0128 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class URankedSeasonStatDimensionValueDefinition*   RequiredSeasonStatDimensionValue;              // 0x0130 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class FString                                      JSONFriendlyName;                              // 0x0138 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class FString                                      AssetTrackerKey;                               // 0x0148 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)
	struct FPointer                                    ChallengeDefEntryInfo;                         // 0x0158 (0x0008) [0x0000000000001000] (CPF_Native)  

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarChallengeDefinition");
		}

		return uClassPointer;
	};

	void GetCategoryPair(struct FCategoryPair& OutCategoryPair);
	void GetEntryName(class FString& OutEntryName);
};

// Class PoplarGame.PoplarChallengeListDefinition
// 0x0018 (0x0058 - 0x0070)
class UPoplarChallengeListDefinition : public UGBXDefinition
{
public:
	uint32_t                                           bSequentialChallenges : 1;                     // 0x0058 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bDailyChallenges : 1;                          // 0x0058 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	class TArray<class UPoplarChallengeDefinition*>    Challenges;                                    // 0x0060 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarChallengeListDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarLoreChallengeListDefinition
// 0x0028 (0x0070 - 0x0098)
class UPoplarLoreChallengeListDefinition : public UPoplarChallengeListDefinition
{
public:
	class UPoplarPlayerNameIdentifierDefinition*       OwningCharacter;                               // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class USwfMovie*                                   MainBackgroundImage;                           // 0x0078 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class FString                                      CharacterSubtitle;                             // 0x0080 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class UStatDefinition*                             LoreChallengesCompletedStat;                   // 0x0090 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarLoreChallengeListDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarChallengeManager
// 0x0258 (0x0058 - 0x02B0)
class UPoplarChallengeManager : public UObject
{
public:
	struct FMultiMap_Mirror                            StatChallengeMap;                              // 0x0058 (0x0050) [0x0000000000003002] (CPF_Const | CPF_Native | CPF_Transient)
	struct FMultiMap_Mirror                            RepeatChallengeMap;                            // 0x00A8 (0x0050) [0x0000000000003002] (CPF_Const | CPF_Native | CPF_Transient)
	struct FMap_Mirror                                 ChallengeSparkIdMap;                           // 0x00F8 (0x0050) [0x0000000000003002] (CPF_Const | CPF_Native | CPF_Transient)
	struct FMultiMap_Mirror                            ChallengeRewardMap;                            // 0x0148 (0x0050) [0x0000000000003002] (CPF_Const | CPF_Native | CPF_Transient)
	class UPoplarChallengeManagerDefinition*           ChallengeManagerDef;                           // 0x0198 (0x0008) [0x0000000000000000]               
	uint32_t                                           bInitialized : 1;                              // 0x01A0 (0x0004) [0x0000000000000000] [0x00000001] 
	uint32_t                                           bCompleteAllChallengesCheat : 1;               // 0x01A0 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	int32_t                                            ChallengeDataVersion;                          // 0x01A4 (0x0004) [0x0000000000000000]               
	class UIStatValueProvider*                         StatValueProvider_Object;                      // 0x01A8 (0x0008) [0x0000000000000000] 
	class UIStatValueProvider*                         StatValueProvider_Interface;                   // 0x01B0 (0x0008) [0x0000000000000000]               
	class APoplarPlayerController*                     PPCOwner;                                      // 0x01B8 (0x0008) [0x0000000000000000]               
	class APoplarPlayerReplicationInfo*                OwnerPPRI;                                     // 0x01C0 (0x0008) [0x0000000000000000]               
	class UCharacterStatDimensionValueDefinition*      CurrentCharacterDimensionDef;                  // 0x01C8 (0x0008) [0x0000000000000000]               
	class ULevelStatDimensionValueDefinition*          CurrentLevelDimensionDef;                      // 0x01D0 (0x0008) [0x0000000000000000]               
	class UFactionStatDimensionValueDefinition*        CurrentFactionDimensionDef;                    // 0x01D8 (0x0008) [0x0000000000000000]               
	class UGameModeStatDimensionValueDefinition*       CurrentGameModeDimensionDef;                   // 0x01E0 (0x0008) [0x0000000000000000]               
	class UDifficultyStatDimensionValueDefinition*     CurrentDifficultyDimensionDef;                 // 0x01E8 (0x0008) [0x0000000000000000]               
	class UHardcoreStatDimensionValueDefinition*       CurrentHardcoreDimensionDef;                   // 0x01F0 (0x0008) [0x0000000000000000]               
	class URoleStatDimensionValueDefinition*           CurrentRoleDimensionDef;                       // 0x01F8 (0x0008) [0x0000000000000000]               
	class URankedSeasonStatDimensionValueDefinition*   CurrentSeasonDimensionDef;                     // 0x0200 (0x0008) [0x0000000000000000]               
	class TArray<struct FPointer>                      TickingChallenges;                             // 0x0208 (0x0010) [0x0000000000001000] (CPF_Native)  
	class TArray<struct FChallengeUpdate>              CompletedChallenges;                           // 0x0218 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<struct FChallengeUpdate>              PartialChallenges;                             // 0x0228 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class UPoplarChallengeListDefinition*> RegisteredChallengeLists;                      // 0x0238 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<struct FDailyChallengeData>           DailyData;                                     // 0x0248 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UPoplarChallengeListDefinition*              DailyChallengeDefList;                         // 0x0258 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CurrentTime;                                   // 0x0260 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            NextDailyTime;                                 // 0x0264 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            DailyRefreshTime;                              // 0x0268 (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FSortedDailyData>              DailyChallengeList;                            // 0x0270 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<struct FSortedDailyData>              BiWeeklyChallengeList;                         // 0x0280 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<struct FSortedDailyData>              WeeklyChallengeList;                           // 0x0290 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<struct FDailyChallengeHistoryData>    DailyChallengeHistory;                         // 0x02A0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarChallengeManager");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarChallengeManagerDefinition
// 0x0020 (0x0058 - 0x0078)
class UPoplarChallengeManagerDefinition : public UGBXDefinition
{
public:
	class TArray<struct FChallengePatch>               ChallengePatches;                              // 0x0058 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UStatDefinition*                             CurrentChallengeVersionStat;                   // 0x0068 (0x0008) [0x0000000000000000]               
	int32_t                                            DailyRefreshTime;                              // 0x0070 (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarChallengeManagerDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarChallengePatchDefinition
// 0x0010 (0x0058 - 0x0068)
class UPoplarChallengePatchDefinition : public UGBXDefinition
{
public:
	class TArray<struct FChallengePatch>               ChallengePatches;                              // 0x0058 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarChallengePatchDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCharacterAdjectiveDefinition
// 0x0018 (0x0058 - 0x0070)
class UPoplarCharacterAdjectiveDefinition : public UGBXDefinition
{
public:
	class FString                                      Adjective;                                     // 0x0058 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class USwfMovie*                                   IconGFxMovie;                                  // 0x0068 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCharacterAdjectiveDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCharacterIntroCoordinator
// 0x0228 (0x0240 - 0x0468)
class APoplarCharacterIntroCoordinator : public AActor
{
public:
	struct FCharacterIntroData                         PlayersToIntroduce[0xA];                       // 0x0240 (0x01E0) [0x0000002100002020] (CPF_Net | CPF_Transient)
	int32_t                                            NumPlayersToIntroduce;                         // 0x0420 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class UPoplarCharacterIntroDefinition*             CharacterIntroDefinition;                      // 0x0428 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class TArray<class APoplarPlayerStandIn*>          CharacterIntroStandins;                        // 0x0430 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	ECharacterIntroState                               CurrentState;                                  // 0x0440 (0x0001) [0x0000000000002000] (CPF_Transient)
	ECharacterIntroState                               DesiredState;                                  // 0x0441 (0x0001) [0x0000000100002020] (CPF_Net | CPF_Transient)
	float                                              ElapsedTime;                                   // 0x0444 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	float                                              NextTauntStartTime;                            // 0x0448 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bNotifiedPlayerShowingIntro : 1;               // 0x044C (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	int32_t                                            CurrentCharacterIndex;                         // 0x0450 (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<class APoplarPlayerReplicationInfo*>  PlayersWaitingToStartCharacterIntros;          // 0x0458 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCharacterIntroCoordinator");
		}

		return uClassPointer;
	};

	void StartCharacterIntros();
	void OnRep_PlayersToIntroduce(int32_t ArrayIndex, const struct FCharacterIntroData& OldIntroData);
};

// Class PoplarGame.PoplarCharacterIntroDefinition
// 0x0048 (0x0058 - 0x00A0)
class UPoplarCharacterIntroDefinition : public UGBXDefinition
{
public:
	class FString                                      IntroMoviePath;                                // 0x0058 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	float                                              IntroMovieLength;                              // 0x0068 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              IntroMovieFramerate;                           // 0x006C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              PerCharacterDisplayTime;                       // 0x0070 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              MaxDelayBeforeStartingTaunt;                   // 0x0074 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FName                                       TauntCameraModeName;                           // 0x0078 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              CameraTransitionTime;                          // 0x0080 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    CameraTransitionAudioEffect;                   // 0x0088 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<class UAkEvent*>                      PlayerIntroAudioAkEvents;                      // 0x0090 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCharacterIntroDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCharacterRoleDefinition
// 0x0020 (0x0058 - 0x0078)
class UPoplarCharacterRoleDefinition : public UGBXDefinition
{
public:
	class FString                                      LocalizedDisplayName;                          // 0x0058 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	EPoplarArchetype                                   ArchtypeEnumeration;                           // 0x0068 (0x0001) [0x0000000000000001] (CPF_Edit)    
	class URoleStatDimensionValueDefinition*           StatDimensionValue;                            // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCharacterRoleDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCharacterSelectBackgroundMoviePlayer
// 0x0030 (0x03F8 - 0x0428)
class UPoplarCharacterSelectBackgroundMoviePlayer : public UGearboxGFxMovie
{
public:
	class APoplarPlayerController*                     PPCOwner;                                      // 0x03F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  RootClip;                                      // 0x0400 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  FeetRingsClip;                                 // 0x0408 (0x0008) [0x0000000000002000] (CPF_Transient)
	class TArray<int32_t>                              RingStates;                                    // 0x0410 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	uint32_t                                           bFinishedLoading : 1;                          // 0x0420 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCharacterSelectBackgroundMoviePlayer");
		}

		return uClassPointer;
	};

	void extOnBackgroundMovieLoaded();
	bool StartNative(bool bStartPaused);
	bool eventStart(bool optionalStartPaused);
};

// Class PoplarGame.PoplarCharacterSelectGFxMovie
// 0x2230 (0x05B0 - 0x27E0)
class UPoplarCharacterSelectGFxMovie : public UWillowGFxMovie3D
{
public:
	struct FPointer                                    VfTable_IIAkEnvironmentalEffectProvider;       // 0x05B0 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class FString                                      ChoosingCharacterMessage;                      // 0x05B8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      RandomCharacterName;                           // 0x05C8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      DisconnectedPlayer;                            // 0x05D8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      RandomCharacterDescription;                    // 0x05E8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      Tooltips_Default;                              // 0x05F8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      AsyncWaitingMessage;                           // 0x0608 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      AsyncWaitingForCharacterHeader;                // 0x0618 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CharacterLockedHeader;                         // 0x0628 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CharacterLockedMessage;                        // 0x0638 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CharacterAlreadySelectedHeader;                // 0x0648 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CharacterAlreadySelectedMessage;               // 0x0658 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      ExpertCharacterHeader;                         // 0x0668 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      ExpertCharacterMessage;                        // 0x0678 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      ConfirmCharacterHeader;                        // 0x0688 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      ConfirmCharacterMessage;                       // 0x0698 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CharacterDetailsTemplate;                      // 0x06A8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LoadoutLockedHeader;                           // 0x06B8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LoadoutLockedMessage;                          // 0x06C8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      QuestionmarkText;                              // 0x06D8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      InvalidSkinHeader;                             // 0x06E8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      SkinLockedHeader;                              // 0x06F8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      SkinLockedMessage;                             // 0x0708 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CharacterChosen;                               // 0x0718 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      WaitingOnOtherPlayers;                         // 0x0728 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MatchWillBeginSoon;                            // 0x0738 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      Starring;                                      // 0x0748 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      PlayingAs;                                     // 0x0758 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      AlsoPlayingAs;                                 // 0x0768 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      RandomUltimateDescription;                     // 0x0778 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      RandomLeftSkill;                               // 0x0788 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      RandomRightSkill;                              // 0x0798 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      RandomPassiveSkill;                            // 0x07A8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	float                                              CachedWholeSecondsRemaining;                   // 0x07B8 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bInfoPopupVisible : 1;                         // 0x07BC (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bCurrentlyDisplayingPvEIntro : 1;              // 0x07BC (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bAdvanceOnLoadoutSelection : 1;                // 0x07BC (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           bCanDisplayPvPStandins : 1;                    // 0x07BC (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	uint32_t                                           bHasRegisteredAsAkEffectProvider : 1;          // 0x07BC (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	uint32_t                                           bClipsInitialized : 1;                         // 0x07BC (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	uint32_t                                           bPlayedTimeRunningOutStinger : 1;              // 0x07BC (0x0004) [0x0000000000002000] [0x00000040] (CPF_Transient)
	uint32_t                                           bNeedsPhaseInfoUpdate : 1;                     // 0x07BC (0x0004) [0x0000000000002000] [0x00000080] (CPF_Transient)
	uint32_t                                           bNeedsManagerInfoUpdate : 1;                   // 0x07BC (0x0004) [0x0000000000002000] [0x00000100] (CPF_Transient)
	uint32_t                                           bNeedsTeamDataUpdate : 1;                      // 0x07BC (0x0004) [0x0000000000002000] [0x00000200] (CPF_Transient)
	uint32_t                                           bNeedsPlayerConnectionInfoUpdate : 1;          // 0x07BC (0x0004) [0x0000000000002000] [0x00000400] (CPF_Transient)
	uint32_t                                           bBlockingPrimarySelectionInput : 1;            // 0x07BC (0x0004) [0x0000000000002000] [0x00000800] (CPF_Transient)
	uint32_t                                           bCharacterSelectEnded : 1;                     // 0x07BC (0x0004) [0x0000000000002000] [0x00001000] (CPF_Transient)
	uint32_t                                           bMovieAndManagerReady : 1;                     // 0x07BC (0x0004) [0x0000000000002000] [0x00002000] (CPF_Transient)
	uint32_t                                           bSpectatorMode : 1;                            // 0x07BC (0x0004) [0x0000000000002000] [0x00004000] (CPF_Transient)
	float                                              StartingMouseDragPositionX;                    // 0x07C0 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  OverheadGamerTags[0x2];                        // 0x07C8 (0x0010) [0x0000000000002000] (CPF_Transient)
	class APoplarPlayerReplicationInfo*                OverheadGamerTagPRIs[0x2];                     // 0x07D8 (0x0010) [0x0000000000002000] (CPF_Transient)
	class UWillowGFxDialogBox*                         ConfirmLeaveGameDialog;                        // 0x07E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FPlayerDisplayData                          CurrentIntroPlayerDisplayData;                 // 0x07F0 (0x0070) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class APoplarPlayerReplicationInfo*                CurrentPlayerToIntroduce;                      // 0x0860 (0x0008) [0x0000000000002000] (CPF_Transient)
	class TArray<class APoplarPlayerController*>       FadeoutObservers;                              // 0x0868 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	ECharacterSelectState                              PlayerUIState[0x2];                            // 0x0878 (0x0002) [0x0000000000002000] (CPF_Transient)
	ECharacterSelectDisplayedMessageType               PlayerMessageType[0x2];                        // 0x087A (0x0002) [0x0000000000002000] (CPF_Transient)
	struct FPlayerSelections                           PlayerUISelections[0x2];                       // 0x0880 (0x0120) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class UPoplarPlayerNameIdentifierDefinition*> CharactersIntroduced;                          // 0x09A0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UGFxObject*                                  CharacterSelectClip;                           // 0x09B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FCharacterSelectPlayerMetaData              LocalPlayerMetaData[0x2];                      // 0x09B8 (0x0060) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UWillowPauseTicker*                          TauntTriggerTicker;                            // 0x0A18 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              TauntTriggerTickerRate;                        // 0x0A20 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FPlayerPopupInformation                     PlayerPopupInfo[0x2];                          // 0x0A24 (0x0010) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CurrentPvPClashStandInIndexFriendly;           // 0x0A34 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CurrentPvPClashAnimTimeFriendly;               // 0x0A38 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              ElapsedPvPClashAnimTimeFriendly;               // 0x0A3C (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CurrentPvPClashStandInIndexEnemy;              // 0x0A40 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CurrentPvPClashAnimTimeEnemy;                  // 0x0A44 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              ElapsedPvPClashAnimTimeEnemy;                  // 0x0A48 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            LocalPlayerWithScoreboardOpen;                 // 0x0A4C (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FAkBankLoadRef                              AkBankRef;                                     // 0x0A50 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              TimeSinceTimedRefresh;                         // 0x0A58 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TimedRefreshDelay;                             // 0x0A5C (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TimeSinceVoiceMuteRefresh;                     // 0x0A60 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              VoiceMuteRefreshDelay;                         // 0x0A64 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TimeSinceUpdatedTimerAnimation;                // 0x0A68 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TimerAnimationRefreshDelay;                    // 0x0A6C (0x0004) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  TimerClip;                                     // 0x0A70 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  TimerTextClip;                                 // 0x0A78 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  GameSettingsClip;                              // 0x0A80 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            FriendlyTeamIndex;                             // 0x0A88 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FLocalPlayerInfo                            PrimaryPlayerInfo;                             // 0x0A8C (0x0004) [0x0000000000002000] (CPF_Transient)
	class UPoplarCharacterSelectPhaseDefinition*       CachedPhaseDef;                                // 0x0A90 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FPhaseInfoDisplay                           PhaseInfo;                                     // 0x0A98 (0x0058) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FTeamInfoList                               FriendlyTeamList;                              // 0x0AF0 (0x05D8) [0x0000000000002000] (CPF_Transient)
	struct FTeamInfoList                               EnemyTeamList;                                 // 0x10C8 (0x05D8) [0x0000000000002000] (CPF_Transient)
	struct FCharacterGrid                              Grid_Reserved_Friendly;                        // 0x16A0 (0x0070) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FCharacterGrid                              Grid_Reserved_Enemy;                           // 0x1710 (0x0070) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FCharacterGrid                              Grid_Banned_Friendly;                          // 0x1780 (0x0070) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FCharacterGrid                              Grid_Banned_Enemy;                             // 0x17F0 (0x0070) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FLocalPlayerMenuManager                     PrimaryPlayerMenus;                            // 0x1860 (0x05B8) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FLocalPlayerMenuManager                     SecondaryPlayerMenus;                          // 0x1E18 (0x05B8) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FPhaseActionNotification                    PhaseActionNotifier;                           // 0x23D0 (0x0070) [0x0000000000002000] (CPF_Transient)
	struct FPhaseTimeline                              PhaseTimelineObj;                              // 0x2440 (0x0370) [0x0000000000002000] (CPF_Transient)
	float                                              TimeBlockingInput;                             // 0x27B0 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            LastPhaseIndex;                                // 0x27B4 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            LastPhaseActionShown;                          // 0x27B8 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CurrentlyLoadingCharacterClassIndex;           // 0x27BC (0x0004) [0x0000000000002000] (CPF_Transient)
	class UWillowPauseTicker*                          EntitlementsTicker;                            // 0x27C0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarPlayerController*                     PrimaryPPC;                                    // 0x27C8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarPlayerController*                     SecondaryPPC;                                  // 0x27D0 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint8_t                                           UnknownData00[0x8];                            // 0x27D8 (0x0008) MISSED OFFSET

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCharacterSelectGFxMovie");
		}

		return uClassPointer;
	};

	void extShowPhaseAnnouncement();
	void extOnPressReportPlayer(int32_t TeamIndex, int32_t PlayerIndex);
	void extOnPressViewPlayerProfile(int32_t TeamIndex, int32_t PlayerIndex);
	void extOnFocusViewPlayerProfile(int32_t TeamIndex, int32_t PlayerIndex);
	void extOnPressMutePlayer(int32_t TeamIndex, int32_t PlayerIndex);
	void extOnFocusMutePlayer(int32_t TeamIndex, int32_t PlayerIndex);
	void extOnTeamEntryButtonFocus(int32_t TeamIndex, int32_t PlayerIndex, bool bSilenceAudio);
	void extOnTeamEntryButtonClick(int32_t TeamIndex, int32_t PlayerIndex);
	void extOnPressPageRightArrowButton(int32_t PlayerIndex);
	void extOnPressPageLeftArrowButton(int32_t PlayerIndex);
	void extOnPressSubMenuIcon(int32_t PlayerIndex, int32_t MenuIndex);
	void extRequestSelection(int32_t PlayerIndex, int32_t CellIndex);
	void extOnMousedOverCell(int32_t PlayerIndex, int32_t CellIndex, int32_t GridIndex);
	void OnStandInCharacterLoadComplete(class APoplarPlayerStandIn* StandIn);
	void extPvPClashVersusAnimComplete();
	void WaitForCharacterSelectLevelToUnload();
	void extFadeOutComplete();
	void extFadeInComplete();
	void extStartDragRotateStandin(float PositionX);
	void extStopDragRotateStandin();
	void extDragRotateStandin(float PositionX);
	bool HandleInputAxis(const struct FPlatformUserId& UserId, const struct FName& Key, float Delta, float DeltaTime);
	void OnCharacterSelection(class APoplarPlayerController* PPC, class UPoplarPlayerNameIdentifierDefinition* CharacterSelection, EMetaItemSelectionResult ResultMessage);
	bool OnConfirmDisconnect(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId);
	void NotifyBackgroundLevel(const struct FName& RemoteEventName);
	void eventOnClose();
	bool eventStart(bool optionalBStartPaused);
	void extRequestPopulatePerks(int32_t PlayerIndex, int32_t LoadoutIndex, const class FString& PathToPerkIcon0, const class FString& PathToPerkIcon1, const class FString& PathToPerkIcon2);
	void extOnTauntCellFocus(int32_t PlayerIndex, int32_t ButtonIndex, bool optionalBSilenceAudio);
	void extOnTauntCellClick(int32_t PlayerIndex, int32_t ButtonIndex);
	void extOnSkinCellFocus(int32_t PlayerIndex, int32_t ButtonIndex);
	void extOnSkinCellClick(int32_t PlayerIndex, int32_t ButtonIndex);
	void extOnLoadoutCellFocus(int32_t PlayerIndex, int32_t CellIndex);
	void extRequestLoadoutSelection(int32_t PlayerIndex, int32_t CellIndex);
	void extOnMessagePopupButtonFocus(int32_t PlayerIndex, int32_t ButtonIndex);
	void extOnMessagePopupButtonClick(int32_t PlayerIndex, int32_t ButtonIndex);
	void RequestItemRangeForDataProvider(class UGFxObject* Provider, const class FString& Type, int32_t StartIndex, int32_t EndIndex, int32_t PlayerIndex);
	bool HandleInputKey(const struct FPlatformUserId& InUserId, const struct FName& ukey, EInputEvent uevent);
	bool StartNative(bool bStartPaused);
	void CheckForEntitlementsReceived();
};

// Class PoplarGame.PoplarCharacterSelectGFxMovieDefinition
// 0x0148 (0x0138 - 0x0280)
class UPoplarCharacterSelectGFxMovieDefinition : public UWillowGFxMovie3DDefinition
{
public:
	int32_t                                            UrgentCountdownNoiseTime;                      // 0x0138 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class TArray<struct FMapCharacterDifficultyLookup> MapCharacterDifficulties;                      // 0x0140 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	uint32_t                                           bAllowCharacterReselection : 1;                // 0x0150 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	class UInputButtonDefinition*                      MakeSelectionConsole;                          // 0x0158 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UInputButtonDefinition*                      MakeSelectionPC;                               // 0x0160 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UInputButtonDefinition*                      UndoSelectionConsole;                          // 0x0168 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UInputButtonDefinition*                      UndoSelectionPC;                               // 0x0170 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UInputButtonDefinition*                      MoreInfoConsole;                               // 0x0178 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UInputButtonDefinition*                      MoreInfoPC;                                    // 0x0180 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UInputButtonDefinition*                      MarkPreferredConsole;                          // 0x0188 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UInputButtonDefinition*                      MarkPreferredPC;                               // 0x0190 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UInputButtonDefinition*                      TauntPreferredConsole;                         // 0x0198 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UInputButtonDefinition*                      TauntPreferredPC;                              // 0x01A0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UInputButtonDefinition*                      CycleMenusLeft;                                // 0x01A8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UInputButtonDefinition*                      CycleMenusRight;                               // 0x01B0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UInputButtonDefinition*                      CycleMenuPageLeft;                             // 0x01B8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UInputButtonDefinition*                      CycleMenuPageRight;                            // 0x01C0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    UnselectCharacterSound;                        // 0x01C8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    OtherPlayerSelectsCharacterSound;              // 0x01D0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    Team1TurnToVoteForBanSound;                    // 0x01D8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    Team2TurnToVoteForBanSound;                    // 0x01E0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    CharacterVotedForBanSound;                     // 0x01E8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    CharacterVotedForReserveSound;                 // 0x01F0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    CharacterBannedSound;                          // 0x01F8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    Team1TurnToReserveSound;                       // 0x0200 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    Team2TurnToReserveSound;                       // 0x0208 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    CharacterReservedSound;                        // 0x0210 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    CharacterGridNavSound;                         // 0x0218 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    CharacterSubMenuNavSound;                      // 0x0220 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    CharacterSelectedSound;                        // 0x0228 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    CharacterSelectedConfirmSound;                 // 0x0230 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    PhaseAboutToEndSound;                          // 0x0238 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    TimerTickSound;                                // 0x0240 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    SwitchPlayerSubMenuSound;                      // 0x0248 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    PlayerSuggestBanSound;                         // 0x0250 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    PlayerSuggestReserveSound;                     // 0x0258 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    CaptainStingerRevealSound;                     // 0x0260 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    AllPlayersReadySound;                          // 0x0268 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    DraftErrorSound;                               // 0x0270 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              InputBlockTime;                                // 0x0278 (0x0004) [0x0000000000000002] (CPF_Const)   

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCharacterSelectGFxMovieDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCharacterSelectManager
// 0x0A68 (0x0240 - 0x0CA8)
class APoplarCharacterSelectManager : public AReplicationInfo
{
public:
	class UPoplarCharacterSelectManagerDefinition*     ManagerDefinition;                             // 0x0240 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarCharacterSelectStyleDefinition*       SelectionStyleDefinition;                      // 0x0248 (0x0008) [0x0000000100002020] (CPF_Net | CPF_Transient)
	class UPoplarCharacterSelectPhaseDefinition*       CurrentPhase;                                  // 0x0250 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bHasReservePhase : 1;                          // 0x0258 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bShouldSimulateBotSelection : 1;               // 0x0258 (0x0004) [0x0000000100002020] [0x00000002] (CPF_Net | CPF_Transient)
	uint32_t                                           bForcePhaseInfoMovieUpdateFlag : 1;            // 0x0258 (0x0004) [0x0000000100002020] [0x00000004] (CPF_Net | CPF_Transient)
	uint32_t                                           bRandomizeSelections : 1;                      // 0x0258 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	uint32_t                                           bReadyToSpawnBots : 1;                         // 0x0258 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	uint32_t                                           bBotCurrentlyPicking : 1;                      // 0x0258 (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	uint32_t                                           bWaitForStandaloneEntitlements : 1;            // 0x0258 (0x0004) [0x0000000000002000] [0x00000040] (CPF_Transient)
	ECharacterSelectManagerState                       CharacterSelectState;                          // 0x025C (0x0001) [0x0000000100002020] (CPF_Net | CPF_Transient)
	struct FCharacterSelectionData                     MasterCharacterList[0x1E];                     // 0x0260 (0x04B0) [0x0000000100002020] (CPF_Net | CPF_Transient)
	struct FTeamSelectionData                          Teams[0x2];                                    // 0x0710 (0x0320) [0x0000000100002020] (CPF_Net | CPF_Transient)
	struct FPhaseActionData                            PhaseActions[0x14];                            // 0x0A30 (0x01E0) [0x0000000100002020] (CPF_Net | CPF_Transient)
	int32_t                                            CurrentPhaseActionIndex;                       // 0x0C10 (0x0004) [0x0000000100002020] (CPF_Net | CPF_Transient)
	int32_t                                            TotalSelectionsAllowedThisPhase;               // 0x0C14 (0x0004) [0x0000000100002020] (CPF_Net | CPF_Transient)
	int32_t                                            SelectionsMadeThisPhase;                       // 0x0C18 (0x0004) [0x0000000100002020] (CPF_Net | CPF_Transient)
	int32_t                                            CurrentPhaseIndex;                             // 0x0C1C (0x0004) [0x0000000100002020] (CPF_Net | CPF_Transient)
	float                                              TimeRemainingInCurrentPhase;                   // 0x0C20 (0x0004) [0x0000000100002020] (CPF_Net | CPF_Transient)
	int32_t                                            NumberOfExpectatedPlayerConnections;           // 0x0C24 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            TotalNumCharacterClasses;                      // 0x0C28 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UPoplarPlayerNameIdentifierDefinition*       SpawnPlayerClass;                              // 0x0C30 (0x0008) [0x0000000000002000] (CPF_Transient)
	class TArray<class UPoplarPlayerNameIdentifierDefinition*> TeamABotClasses;                               // 0x0C38 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class UPoplarPlayerNameIdentifierDefinition*> TeamBBotClasses;                               // 0x0C48 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class UPoplarCharacterRoleDefinition*> MasterRolesList;                               // 0x0C58 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class UPoplarCharacterRoleDefinition*> TeamA_BotRoles;                                // 0x0C68 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class UPoplarCharacterRoleDefinition*> TeamB_BotRoles;                                // 0x0C78 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<struct FCharacterSelectLeviathanData> CharacterSelectLeviathanEventData;             // 0x0C88 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	float                                              DurationOfPhase;                               // 0x0C98 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            OrderNumber_Ban;                               // 0x0C9C (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            OrderNumber_Reserve;                           // 0x0CA0 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            OrderNumber_Select;                            // 0x0CA4 (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCharacterSelectManager");
		}

		return uClassPointer;
	};

	void OnRefreshInventoryComplete(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
	void eventReplicatedEvent(const struct FName& VarName);
};

// Class PoplarGame.PoplarCharacterSelectManagerDebugDefinition
// 0x0368 (0x0058 - 0x03C0)
class UPoplarCharacterSelectManagerDebugDefinition : public UGBXDefinition
{
public:
	struct FCharacterSelectDebugBoxData                DebugBox_LocalPlayerInfo;                      // 0x0058 (0x0028) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FVector                                     SpaceBetweenLocalPlayerBoxes;                  // 0x0080 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FCharacterSelectDebugBoxData                DebugBox_SelectPhases;                         // 0x008C (0x0028) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FCharacterSelectDebugBoxData                DebugBox_TeamInfo;                             // 0x00B4 (0x0028) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FCharacterSelectDebugBoxData                DebugBox_SelectionBox;                         // 0x00DC (0x0028) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FCharacterSelectDebugBoxData                DebugBox_SelectionSubBox;                      // 0x0104 (0x0028) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            NumRows;                                       // 0x012C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FVector                                     SpaceBetweenSelectionBoxes;                    // 0x0130 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FCharacterSelectDebugBoxData                DebugBox_TeamA;                                // 0x013C (0x0028) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FCharacterSelectDebugBoxData                DebugBox_TeamB;                                // 0x0164 (0x0028) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FCharacterSelectDebugBoxData                DebugBox_TeamA_ReservedCharacters;             // 0x018C (0x0028) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FCharacterSelectDebugBoxData                DebugBox_TeamB_ReservedCharacters;             // 0x01B4 (0x0028) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FCharacterSelectDebugBoxData                DebugBox_TeamA_BannedCharacters;               // 0x01DC (0x0028) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FCharacterSelectDebugBoxData                DebugBox_TeamB_BannedCharacters;               // 0x0204 (0x0028) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FCharacterSelectDebugBoxData                DebugBox_ReservedCharacter;                    // 0x022C (0x0028) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FCharacterSelectDebugBoxData                DebugBox_BannedCharacter;                      // 0x0254 (0x0028) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FVector                                     SpaceBetweenReservedBoxes;                     // 0x027C (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FVector                                     SpaceBetweenBannedBoxes;                       // 0x0288 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FCharacterSelectDebugBoxData                DebugBox_TeamPlayerInfo;                       // 0x0294 (0x0028) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FCharacterSelectDebugBoxData                DebugBox_TeamPlayerInfo_Captain;               // 0x02BC (0x0028) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FCharacterSelectDebugBoxData                DebugBox_TeamPlayerInfo_Selecting;             // 0x02E4 (0x0028) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FCharacterSelectDebugBoxData                DebugBox_TeamPlayerInfo_SelectedCharacter;     // 0x030C (0x0028) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              SpaceBetweenTeamPlayerInfoBoxes;               // 0x0334 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FCharacterSelectDebugBoxData                DebugBox_SelectionStyle;                       // 0x0338 (0x0028) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FVector                                     HeaderTextPosition;                            // 0x0360 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FCharacterSelectDebugBoxData                DebugBox_SelectionStyle_SelectBox;             // 0x036C (0x0028) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              SpaceSelectionStyleBoxes;                      // 0x0394 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FCharacterSelectDebugBoxData                DebugBox_SelectionNotification;                // 0x0398 (0x0028) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCharacterSelectManagerDebugDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCharacterSelectManagerDefinition
// 0x0020 (0x0058 - 0x0078)
class UPoplarCharacterSelectManagerDefinition : public UGBXDefinition
{
public:
	class TArray<class UPoplarCharacterSelectStyleDefinition*> SelectionStyles;                               // 0x0058 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class UPoplarCharacterSelectStyleDefinition*       Default_PVE_Style;                             // 0x0068 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarCharacterSelectStyleDefinition*       Default_PVP_Style;                             // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCharacterSelectManagerDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCharacterSelectPhaseDefinition
// 0x0060 (0x0058 - 0x00B8)
class UPoplarCharacterSelectPhaseDefinition : public UGBXDefinition
{
public:
	ECharacterSelectActivePlayerType                   ActiveSelectingType;                           // 0x0058 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	ECharacterSelectPhaseType                          PhaseType;                                     // 0x0059 (0x0001) [0x0000000000000002] (CPF_Const)   
	class UPoplarTeamDefinition*                       ActiveTeam;                                    // 0x0060 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              DurationOfPhase;                               // 0x0068 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            SelectionsAllowedPerActivePlayer;              // 0x006C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bAllowBotToSelectOnlyIfNoHumanPlayerOnTeam : 1;// 0x0070 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bRandomizeRemainingSelections : 1;             // 0x0070 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	uint32_t                                           bSpawnBotsAtBeginningOfPhase : 1;              // 0x0070 (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	float                                              PhaseTimeRunningOutThreshold;                  // 0x0074 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class FString                                      PhaseName;                                     // 0x0078 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class FString                                      Verb_PastTense;                                // 0x0088 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class FString                                      Verb_PresentTense;                             // 0x0098 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class FString                                      LocSectionSpecifier;                           // 0x00A8 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCharacterSelectPhaseDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCharacterSelectPhaseDefinition_Ban
// 0x0008 (0x00B8 - 0x00C0)
class UPoplarCharacterSelectPhaseDefinition_Ban : public UPoplarCharacterSelectPhaseDefinition
{
public:
	uint32_t                                           bVoteToBan : 1;                                // 0x00B8 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCharacterSelectPhaseDefinition_Ban");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCharacterSelectPhaseDefinition_CaptainSelection
// 0x0008 (0x00B8 - 0x00C0)
class UPoplarCharacterSelectPhaseDefinition_CaptainSelection : public UPoplarCharacterSelectPhaseDefinition
{
public:
	uint32_t                                           bTeamACaptainSelected : 1;                     // 0x00B8 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bTeamBCaptainSelected : 1;                     // 0x00B8 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCharacterSelectPhaseDefinition_CaptainSelection");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCharacterSelectPhaseDefinition_Reserve
// 0x0000 (0x00B8 - 0x00B8)
class UPoplarCharacterSelectPhaseDefinition_Reserve : public UPoplarCharacterSelectPhaseDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCharacterSelectPhaseDefinition_Reserve");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCharacterSelectPhaseDefinition_Select
// 0x0000 (0x00B8 - 0x00B8)
class UPoplarCharacterSelectPhaseDefinition_Select : public UPoplarCharacterSelectPhaseDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCharacterSelectPhaseDefinition_Select");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCharacterSelectPhaseDefinition_Setup
// 0x0008 (0x00B8 - 0x00C0)
class UPoplarCharacterSelectPhaseDefinition_Setup : public UPoplarCharacterSelectPhaseDefinition
{
public:
	uint32_t                                           bMoveToNextPhaseWhenAllPlayersHaveEntitlements : 1;// 0x00B8 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bMoveToNextPhaseWhenAllConnected : 1;          // 0x00B8 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	uint32_t                                           bAbandonMatchIfTimeRunsOut : 1;                // 0x00B8 (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	uint32_t                                           bMoveToNextPhaseWhenReceivedStandaloneEntitlements : 1;// 0x00B8 (0x0004) [0x0000000000000003] [0x00000008] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCharacterSelectPhaseDefinition_Setup");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCharacterSelectStyleDefinition
// 0x0040 (0x0058 - 0x0098)
class UPoplarCharacterSelectStyleDefinition : public UGBXDefinition
{
public:
	class FString                                      StyleName;                                     // 0x0058 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CodeName;                                      // 0x0068 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	ECharacterUniquenessLevel                          UniquenessLevel;                               // 0x0078 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<class UPoplarCharacterSelectPhaseDefinition*> CharacterSelectPhaseDefs;                      // 0x0080 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	float                                              SimulatedBotSelectionTime;                     // 0x0090 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bBlindSelection : 1;                           // 0x0094 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bNonBlindSelectionAfterCharacterSelections : 1;// 0x0094 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	uint32_t                                           bShowReserved : 1;                             // 0x0094 (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	uint32_t                                           bShowBanned : 1;                               // 0x0094 (0x0004) [0x0000000000000003] [0x00000008] (CPF_Edit | CPF_Const)
	uint32_t                                           bShowPhaseTimeline : 1;                        // 0x0094 (0x0004) [0x0000000000000003] [0x00000010] (CPF_Edit | CPF_Const)
	uint32_t                                           bNavigateToMetaItemMenuAfterSelection : 1;     // 0x0094 (0x0004) [0x0000000000000003] [0x00000020] (CPF_Edit | CPF_Const)
	uint32_t                                           bSupports_PvP_5v5 : 1;                         // 0x0094 (0x0004) [0x0000000000000003] [0x00000040] (CPF_Edit | CPF_Const)
	uint32_t                                           bSupports_PvP_3v3 : 1;                         // 0x0094 (0x0004) [0x0000000000000003] [0x00000080] (CPF_Edit | CPF_Const)
	uint32_t                                           bSupports_PvE : 1;                             // 0x0094 (0x0004) [0x0000000000000003] [0x00000100] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCharacterSelectStyleDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarPlayerController
// 0x0800 (0x0E80 - 0x1680)
class APoplarPlayerController : public AWillowPlayerController
{
public:
	struct FPointer                                    VfTable_IIScoreBehavior;                       // 0x0E80 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIStatBehavior;                        // 0x0E88 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIViewTarget;                          // 0x0E90 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIPlayerTrainingObserver;              // 0x0E98 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class APoplarPlayerStateInfo*                      PoplarPSI;                                     // 0x0EA0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarPlayerPawn*                           MyPoplarPawn;                                  // 0x0EA8 (0x0008) [0x0000000000002000] (CPF_Transient)
	EActionSkillSlot                                   PrimedActionSkillSlotPendingConfirm;           // 0x0EB0 (0x0001) [0x0000000000002000] (CPF_Transient)
	EDamageFeedbackOptions                             DamageFeedback;                                // 0x0EB1 (0x0001) [0x0000000000002000] (CPF_Transient)
	EMapDisplayOptions                                 MapDisplay;                                    // 0x0EB2 (0x0001) [0x0000000000002000] (CPF_Transient)
	EChatDisplayLength                                 ChatDisplayLength;                             // 0x0EB3 (0x0001) [0x0000000000002000] (CPF_Transient)
	ECharacterSelectMovieState                         CurrentCharacterSelectMovieState;              // 0x0EB4 (0x0001) [0x0000000000002000] (CPF_Transient)
	uint8_t                                            FireDelayMask;                                 // 0x0EB5 (0x0001) [0x0000000000002000] (CPF_Transient)
	uint8_t                                            OffHandFireDelayMask;                          // 0x0EB6 (0x0001) [0x0000000000002000] (CPF_Transient)
	uint8_t                                            AttackDelayMask[0x3];                          // 0x0EB7 (0x0003) [0x0000000000002000] (CPF_Transient)
	EDeathSpectatorState                               CurrentDeathSpectatorState;                    // 0x0EBA (0x0001) [0x0000000000002000] (CPF_Transient)
	ERegenTextDisplayMode                              RegenTextDisplayMode;                          // 0x0EBB (0x0001) [0x0000000000002000] (CPF_Transient)
	ESpectatorCameraClippingMode                       SpectatorCameraClippingMode;                   // 0x0EBC (0x0001) [0x0000000000002000] (CPF_Transient)
	uint8_t                                            TargetedWarningSeverity;                       // 0x0EBD (0x0001) [0x0000000000002020] (CPF_Net | CPF_Transient)
	uint8_t                                            bIgnoreSkills;                                 // 0x0EBE (0x0001) [0x0000000000002000] (CPF_Transient)
	struct FName                                       InputContextOverride_Channel1;                 // 0x0EC0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FName                                       InputContextOverride_Channel2;                 // 0x0EC8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPlayerClassDefinition*                      PendingPlayerClass;                            // 0x0ED0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarPlayerNameIdentifierDefinition*       PendingPlayerClassNameId;                      // 0x0ED8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarSkinDefinition*                       PendingPlayerSkin;                             // 0x0EE0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarSpecialMove_Taunt*                    PendingPlayerTaunt;                            // 0x0EE8 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bLoadingPlayerSkin : 1;                        // 0x0EF0 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bLoadingPlayerTaunt : 1;                       // 0x0EF0 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           DesiresShopMode : 1;                           // 0x0EF0 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           DesiresLoadoutUIMode : 1;                      // 0x0EF0 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	uint32_t                                           DesiresMinimapMode : 1;                        // 0x0EF0 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	uint32_t                                           DesiresScoreboardMode : 1;                     // 0x0EF0 (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	uint32_t                                           DesiresBuildNodeMode : 1;                      // 0x0EF0 (0x0004) [0x0000000000002000] [0x00000040] (CPF_Transient)
	uint32_t                                           DesiresTeleportToBase : 1;                     // 0x0EF0 (0x0004) [0x0000000000002000] [0x00000080] (CPF_Transient)
	uint32_t                                           bLockCombatRadarRotation : 1;                  // 0x0EF0 (0x0004) [0x0000000000002000] [0x00000100] (CPF_Transient)
	uint32_t                                           bAudioMutedForCharSelect : 1;                  // 0x0EF0 (0x0004) [0x0000000000002000] [0x00000200] (CPF_Transient)
	uint32_t                                           bApplyScoreboardBlur : 1;                      // 0x0EF0 (0x0004) [0x0000000000002000] [0x00000400] (CPF_Transient)
	uint32_t                                           bRejoinedGame : 1;                             // 0x0EF0 (0x0004) [0x0000000000002000] [0x00000800] (CPF_Transient)
	uint32_t                                           bInputDisabledDueToRecentDeath : 1;            // 0x0EF0 (0x0004) [0x0000000000002000] [0x00001000] (CPF_Transient)
	uint32_t                                           bInputDisabledDueToWaitingForWeapons : 1;      // 0x0EF0 (0x0004) [0x0000000000002000] [0x00002000] (CPF_Transient)
	uint32_t                                           bWaitingAfterReceivedPlayer : 1;               // 0x0EF0 (0x0004) [0x0000000000002000] [0x00004000] (CPF_Transient)
	uint32_t                                           bDisplayingCharacterIntros : 1;                // 0x0EF0 (0x0004) [0x0000000000002000] [0x00008000] (CPF_Transient)
	uint32_t                                           bMetagameOfflineMode : 1;                      // 0x0EF0 (0x0004) [0x0000000000002000] [0x00010000] (CPF_Transient)
	uint32_t                                           bRemoteCamIsFirstPerson : 1;                   // 0x0EF0 (0x0004) [0x0000000000002000] [0x00020000] (CPF_Transient)
	uint32_t                                           bRemoteCamHasViewKick : 1;                     // 0x0EF0 (0x0004) [0x0000000000002000] [0x00040000] (CPF_Transient)
	uint32_t                                           bPendingInitializeView : 1;                    // 0x0EF0 (0x0004) [0x0000000000002000] [0x00080000] (CPF_Transient)
	uint32_t                                           bOverrideDirectorVT : 1;                       // 0x0EF0 (0x0004) [0x0000000000002000] [0x00100000] (CPF_Transient)
	uint32_t                                           bMinimapExpanded : 1;                          // 0x0EF0 (0x0004) [0x0000000000002000] [0x00200000] (CPF_Transient)
	uint32_t                                           bShouldCombineFloatingCombatText : 1;          // 0x0EF0 (0x0004) [0x0000000000044000] [0x00400000] (CPF_Config | CPF_GlobalConfig)
	uint32_t                                           bConnectingDialogVisible : 1;                  // 0x0EF0 (0x0004) [0x0000000000002000] [0x00800000] (CPF_Transient)
	uint32_t                                           bDisconnectingDialogVisible : 1;               // 0x0EF0 (0x0004) [0x0000000000002000] [0x01000000] (CPF_Transient)
	uint32_t                                           bAsyncOperationDialogVisible : 1;              // 0x0EF0 (0x0004) [0x0000000000002000] [0x02000000] (CPF_Transient)
	uint32_t                                           bHasRecievedClientInitialData : 1;             // 0x0EF0 (0x0004) [0x0000000000000000] [0x04000000] 
	uint32_t                                           bShowingShop : 1;                              // 0x0EF0 (0x0004) [0x0000000000002000] [0x08000000] (CPF_Transient)
	uint32_t                                           bShopWasToggled : 1;                           // 0x0EF0 (0x0004) [0x0000000000000000] [0x10000000] 
	uint32_t                                           bQuickShop : 1;                                // 0x0EF0 (0x0004) [0x0000000000000000] [0x20000000] 
	uint32_t                                           bHUDReadyForDisplay : 1;                       // 0x0EF0 (0x0004) [0x0000000000000000] [0x40000000] 
	uint32_t                                           bDeathRecapShouldBeShowing : 1;                // 0x0EF0 (0x0004) [0x0000000000002000] [0x80000000] (CPF_Transient)
	uint32_t                                           bDeathRecapIsShowing : 1;                      // 0x0EF4 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bHelixMenuOpen : 1;                            // 0x0EF4 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bTriedSurrender : 1;                           // 0x0EF4 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           bShouldKeepCheckingForEpicGearAchievement : 1; // 0x0EF4 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	uint32_t                                           bShouldKeepCheckingForLegendaryGearAchievement : 1;// 0x0EF4 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	uint32_t                                           bIsInSlomoMode : 1;                            // 0x0EF4 (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	uint32_t                                           bIsTrackingDamageForTeleportTraining : 1;      // 0x0EF4 (0x0004) [0x0000000000002000] [0x00000040] (CPF_Transient)
	float                                              NextActionSkillFailedFeedbackTime;             // 0x0EF8 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              fLastCanceledSkillTime;                        // 0x0EFC (0x0004) [0x0000000000002000] (CPF_Transient)
	class APoplarPlayerReplicationInfo*                MyPoplarPRI;                                   // 0x0F00 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarCharacterSelectGFxMovie*              CharacterSelectMovie;                          // 0x0F08 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarCharacterSelectBackgroundMoviePlayer* CharacterSelectBackgroundMoviePlayer;          // 0x0F10 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarScoreboardGFxMovie*                   ScoreboardMovie;                               // 0x0F18 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarPressStartGFxMovie*                   PressStartMovie;                               // 0x0F20 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarPressStartBackgroundGFxMovie*         PressStartBackgroundMovie;                     // 0x0F28 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarBuildNodeGFxMovie*                    BuildNodeMovie;                                // 0x0F30 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              NextPlayerAlertTime;                           // 0x0F38 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            TeamRelativeColorIndex_GeneralAllied;          // 0x0F3C (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            TeamRelativeColorIndex_GeneralEnemy;           // 0x0F40 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FLinearColor                                CachedAlliedTeamColors[0x3];                   // 0x0F44 (0x0030) [0x0000000000002000] (CPF_Transient)
	struct FLinearColor                                CachedEnemyTeamColors[0x3];                    // 0x0F74 (0x0030) [0x0000000000002000] (CPF_Transient)
	float                                              LastTeamColorCacheTime;                        // 0x0FA4 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              StunLookSpeedMultiplier;                       // 0x0FA8 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              StunLookSpeedMultiplierBaseValue;              // 0x0FAC (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            StunLookSpeedMultiplierModifierStack;          // 0x0FB0 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            CurrentItemLevel;                              // 0x0FC0 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              DeathSpectatorStateTimeRemaining;              // 0x0FC4 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FCameraViewData                             ReplicatedCameraViewData;                      // 0x0FC8 (0x0020) [0x0000000100002020] (CPF_Net | CPF_Transient)
	class AActor*                                      LocalViewTarget;                               // 0x0FE8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FName>                         CameraModeStack;                               // 0x0FF0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class UInterpTrackInstDirector*>      ControllingDirectorStack;                      // 0x1000 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FVector                                     RemoteCameraLoc;                               // 0x1010 (0x000C) [0x0000000000002000] (CPF_Transient)
	float                                              TargetVerticalKickAmt;                         // 0x101C (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CurrentVerticalKickAmt;                        // 0x1020 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              FrameVerticalKickAmt;                          // 0x1024 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TargetHorizontalKickAmt;                       // 0x1028 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CurrentHorizontalKickAmt;                      // 0x102C (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              FrameHorizontalKickAmt;                        // 0x1030 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              LastWeaponKickTime;                            // 0x1034 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              LastViewKickUpdateTime;                        // 0x1038 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            ViewKickRecoveryMode;                          // 0x103C (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FRotator                                    ServerKickInput;                               // 0x1040 (0x000C) [0x0000000000002000] (CPF_Transient)
	class APipelineHistoryManager*                     PipelineSummaryHistoryManager;                 // 0x1050 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class UMHW_MiniMapOuter*                           MinimapWidget;                                 // 0x1058 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FName                                       PreRemoteControlInputContext;                  // 0x1060 (0x0008) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FAggregateFloatingCombatTextData> TrackedFloatingCombatText;                     // 0x1068 (0x0010) [0x0000000000480000] (CPF_Component | CPF_NeedCtorLink)
	struct FName                                       DeathCameraName;                               // 0x1078 (0x0008) [0x0000000000002000] (CPF_Transient)
	class FString                                      OnDisconnectCompleteDlg;                       // 0x1080 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UPoplarShop3GFxMovie*                        ShopMovie;                                     // 0x1090 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarPerkSelectorGFxMovie*                 PerkSelectorMovie;                             // 0x1098 (0x0008) [0x0000000000002000] (CPF_Transient)
	class FString                                      RejoinServerHostAddress;                       // 0x10A0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class FString                                      RejoinServerSessionId;                         // 0x10B0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class FString                                      RejoinServerKey;                               // 0x10C0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class FString                                      RejoinServerZeppelinTicket;                    // 0x10D0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class FString                                      MetaLoadoutSlotActivationSuccessfulString;     // 0x10E0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MetaLoadoutSlotActivationFailureLoadoutNotActiveString;// 0x10F0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MetaLoadoutSlotActivationFailureMaxSlotsActiveString;// 0x1100 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MetaLoadoutSlotActivationFailureStackableTagCollisionString;// 0x1110 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MetaLoadoutSlotActivationFailureInvalidSlotIndexString;// 0x1120 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MetaLoadoutSlotActivationFailureEmptySlotString;// 0x1130 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class UStatDefinition*                             PlayerLeveledUpStat;                           // 0x1140 (0x0008) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FContextMapping>               MapContextMappings;                            // 0x1148 (0x0010) [0x0000000000404000] (CPF_Config | CPF_NeedCtorLink)
	class TArray<struct FContextMapping>               ModeContextMappings;                           // 0x1158 (0x0010) [0x0000000000404000] (CPF_Config | CPF_NeedCtorLink)
	class TArray<struct FMapModeMapping>               MapModeMappings;                               // 0x1168 (0x0010) [0x0000000000404000] (CPF_Config | CPF_NeedCtorLink)
	struct FClientInitialPerformanceData               ClientInitialData;                             // 0x1178 (0x0040) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FClientFrameData                            ClientFramePerformanceData;                    // 0x11B8 (0x0028) [0x0000000000002000] (CPF_Transient)
	class UWillowGFxDialogBox*                         AFKDlg;                                        // 0x11E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UWillowGFxDialogBox*                         PlayerReportDlg;                               // 0x11E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            NumMoviesBlockingDeathRecap;                   // 0x11F0 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UMiniMapSelectionFilter*                     MinimapActorSelectFilter;                      // 0x11F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FActorSelectionDataContainer                MinimapActorSelectData[0x4];                   // 0x1200 (0x01A0) [0x0000002000402020] (CPF_Net | CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            CurrentMinimapActorSelectionIndex;             // 0x13A0 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	float                                              SelectionChangeDelay;                          // 0x13A4 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              LastSelectionChangeTime;                       // 0x13A8 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              SelectionDeltaThreshold;                       // 0x13AC (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<class UPoplarMissionObjectiveWaypointComponent*> InWorldWaypoints;                              // 0x13B0 (0x0010) [0x0000000004482008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_NeedCtorLink | CPF_EditInline)
	class TArray<class UPoplarTrainingMessageDefinition*> QueuedTrainingMessages;                        // 0x13C0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	float                                              LastTrainingMessagePostponeTime;               // 0x13D0 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CurrentTrainingMessageFinishTime;              // 0x13D4 (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FPendingClientTrainingMessage> PendingClientTrainingMessages;                 // 0x13D8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UPoplarMetagameInventory*                    MetagameInventory;                             // 0x13E8 (0x0008) [0x0000000000000000]               
	struct FMetaLoadoutInstance                        TestLoadout;                                   // 0x13F0 (0x0180) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FReplicatedPerkItem                         TestPerk;                                      // 0x1570 (0x0078) [0x0000000000400000] (CPF_NeedCtorLink)
	class UPoplarPerkFamilyDefinition*                 TestPerkFamily;                                // 0x15E8 (0x0008) [0x0000000000000000]               
	float                                              NextSurrenderActionTime;                       // 0x15F0 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            ConnectingMessageId;                           // 0x15F4 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            NATMessageId;                                  // 0x15F8 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            HostLobbyMessageId;                            // 0x15FC (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FPlayerConnectionMessage>      PlayerConnectionMessages;                      // 0x1600 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<ETargetedWarningSeverity>             RegisteredSeverityLevels;                      // 0x1610 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class AActor*>                        RegisteredTargeters;                           // 0x1620 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            PostMatchLineupCinematicModeToken;             // 0x1630 (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<class UGFxMoviePlayer*>               BehaviorAddedMovies;                           // 0x1638 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	float                                              CachedTimeToWaitToEnableSurrenderOnPauseScreen;// 0x1648 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FDouble                                     TimeOfLastHitNotifyAsInstigator;               // 0x1650 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FDouble                                     TimeOfLastCriticalHitNotifyAsInstigator;       // 0x1658 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FDouble                                     TimeOfLastHitNotifyAsTarget;                   // 0x1660 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FDouble                                     TimeOfLastCriticalHitNotifyAsTarget;           // 0x1668 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              PauseMenuOpenedTime;                           // 0x1670 (0x0004) [0x0000000000000000]               
	float                                              LastDamagedTime;                               // 0x1674 (0x0004) [0x0000000000000000]               
	float                                              LastPlayerTitleCheckTime;                      // 0x1678 (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPlayerController");
		}

		return uClassPointer;
	};

	void ServerTradeAction(ETradingAction TradeAction, class APoplarPlayerReplicationInfo* RequestingPRI, class APoplarPlayerReplicationInfo* OtherPri);
	void ServerSetHasReceivedEntitlements();
	void ServerCharacterDeselect();
	void ServerCharacterSelectInput(int32_t Index);
	void ServerSuggestCharacter(class UPoplarPlayerNameIdentifierDefinition* NameID);
	void ServerSetPreferredCharacter(class UPoplarPlayerNameIdentifierDefinition* NameID);
	void OnUnRegisteredTrainingFor(struct FTrainingData& Data);
	void OnRegisteredTrainingFor(struct FTrainingData& Data);
	void BugIt(const class FString& optionalScreenShotDescription);
	void ServerDebugCompleteMission();
	void ServerDebugAdvanceMission();
	void ServerUpdateObjective(class UPoplarMissionObjectiveDefinition* MissionObjective, EPoplarMissionObjectiveEvent Event);
	void ServerSetMissionStatus(EPoplarMissionStatus MissionStatus);
	void HideCastBar(bool bTeleportBar);
	void ShowCastBar(const struct FCastBarData& CastBarInfo);
	void CloseGFxMovieFromBehavior(class USwfMovie* Movie);
	void OpenGFxMovieFromBehavior(const struct FMovieInitParams& Params, class USwfMovie* Movie);
	void PoplarTieBreakMatch();
	void PoplarLoseMatch();
	void PoplarWinMatch();
	void LoadoutUIShowDetails();
	void LoadoutUIActivateThree();
	void LoadoutUIActivateTwo();
	void LoadoutUIActivateOne();
	struct FPauseSurrenderData GetPauseSurrenderData();
	void OnPostedActivityFeedStory(const struct FPlatformUserId& UserId, EOnlineSubsystemResult Result, float DelayIntervalInSeconds);
	void eventClientPostChallengeUnlockActivityFeed(class UPoplarActivityFeedDefinition* ActivityFeedDef, int32_t ChallengeLevelTargetValue, int32_t ChallengeLevelCompleted);
	void ServerActivateTestPerk(const struct FReplicatedPerkItem& NewPerk, int32_t SlotIndex);
	void SaveTestPerkToHydraComplete(const struct FPlatformUserId& InUserId);
	void DebugSavePerkToHydra(int32_t PerkSlotIndex);
	void ActivateTestPerk(int32_t LoadoutSlot);
	void ChangeTestPerkItemLevel(int32_t DeltaItemLevel);
	void SetTestPerkFunction(const class FString& FunctionAssetKey, int32_t Rarity);
	void SetTestPerkFamily(const class FString& FamilyName);
	void VoteAgainstTeamSurrender();
	void VoteForTeamSurrender();
	void InitiateTeamSurrender();
	void ServerVoteAgainstTeamSurrender();
	void ServerVoteForTeamSurrender();
	void ServerInitiateTeamSurrender();
	void ShowControllerDisconnectedDialog(const struct FPlatformUserId& UserId);
	void OnSentGameInvite(const struct FPlatformUserId& UserId, EOnlineSubsystemResult Result);
	void DebugMetagameInventoryActionCallback();
	void PmtLink(int32_t optionalTimeOffset);
	void ServerPmtBookmark(const class FString& BookmarkData);
	void PmtBookmark(const class FString& BookmarkData);
	void TogglePlayerListDebug();
	void ServerKickRecoveryMode(int32_t NewMode);
	void KickRecoveryMode(int32_t NewMode);
	void ClientAddChallengeUpdateToQueue(const struct FChallengeUpdate& Update);
	void AddChallengeUpdateToQueueExec(int32_t bCompleted, class UPoplarChallengeDefinition* ChallengeDef, int32_t LevelIndex, int32_t Progress, int32_t Threshold);
	bool NATHelp_Clicked(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& InUserId);
	void DisplayNATHelpDialog(ENATType MyNATType, ENATType RemoteNATType);
	void OnGetNATType(const struct FPlatformUserId& PlayerID, int32_t ServiceResult, class TArray<struct FNATTypeData>& NATTypeData);
	bool OnConfirmDiagnoseConnectionTimeOut_Click(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& InUserId);
	bool OnConfirmErrorMessage(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& InUserId);
	void FadeSubtitle();
	void SwitchSubtitle(const class FString& NewSubtitle);
	void PostSubtitle(const class FString& NewSubtitle);
	void MetagameDebug_SellInventoryItem(class FString& MetaID);
	void MetagameDebug_SellSideboardItem(class FString& MetaID, class FString& HydraID);
	void MetagameDebug_TransferSideboardItem(class FString& MetaID, class FString& HydraID);
	void MetagameDebug_ConsumeItem(class FString& MetaID);
	void MetagameDebug_ToggleOfflineMode();
	void Loadout_Choose(int32_t Index);
	void Loadout_Dump();
	void Loadout_PushItem(class FString& ItemId);
	void Loadout_SetName(class FString& LoadoutName);
	void Loadout_Save(int32_t Index);
	void Loadout_Load(int32_t Index);
	void Perks_DumpLoadout();
	void Perks_ListReplicated();
	void Perks_ListStatic(int32_t Type);
	void Perks_Dump();
	void Perks_Init();
	void ServerDumpLoadout();
	void ActivatePerk(int32_t PerkIndex);
	void ServerActivatePerk(int32_t PerkIndex);
	void ServerBalanceParty(int32_t GameStage);
	void CloseBuildNodeMovie();
	class UAkComponent* GetDefaultAkComponent();
	void ResetTrainingStats();
	void ServerBroadcastPoplarTrainingMessage(class UPoplarTrainingMessageDefinition* TrainingDef, const struct FBroadcastMessageData& MessageData);
	void eventHandleTrainingEventDefinition(class UPoplarTrainingMessageDefinition* TrainingDefinition);
	void eventTrainingEventComplete(const struct FTrainingData& listener);
	bool CanDisplayTrainingMessage(class UPoplarTrainingMessageDefinition* TrainingMessageDef);
	void ClearQueuedTrainingMessages();
	bool HasQueuedTrainingMessage(class UPoplarTrainingMessageDefinition* TrainingMessageDef);
	void CleanupPRI();
	void OnReadFriendStatsComplete(bool bWasSuccessful);
	void PopulateOnlineStats();
	void ClientApplyAssistModifiers(int32_t AssistModifierSeletectedIndex, int32_t AssistComboSelectedIndex);
	void ClientApplyKillModifiers(int32_t KillModifierSeletectedIndex, int32_t KillComboSelectedIndex, class APoplarPlayerReplicationInfo* KilledPPRI);
	void Behavior_UpdateStat(class UStatDefinition* Stat, EStatCategoryTypes StatCategory, int32_t NewValue);
	void Behavior_IncrementStat(class UStatDefinition* Stat, int32_t Amount);
	int32_t GetQuickKillTimeLimit();
	int32_t GetQuickKillScore();
	int32_t GetBaseScore();
	void Behavior_AwardTeamBonusScore(int32_t Amount);
	void Behavior_AwardScore(int32_t Amount);
	void eventShowChallengeProgress(class UPoplarChallengeDefinition* ChallengeDef, int32_t CurrentVal);
	void eventFailChallenge(class UPoplarChallengeDefinition* ChallengeDef);
	void eventCompleteChallenge(class UPoplarChallengeDefinition* ChallengeDef);
	void OnRewardUnlock(class USeqAct_RewardUnlock* Action);
	void AwardUnlocksForExpLevel(int32_t Level, bool bNotifyHUD);
	bool OnConfirmPlayerReport(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId);
	bool OnConfirmAFK(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId);
	void ClientNotifyPlayerReported(int32_t Reason);
	void ClientNotifyIdle();
	void IdleKick();
	void eventNotifyIdle();
	void eventServerSendClientFrameData(const struct FServerSendClientFrameDataArgs& Args, class APoplarPlayerReplicationInfo* PPRI);
	void eventServerSendInitialClientPerformanceData(const struct FClientInitialPerformanceData& InitialData);
	struct FClientInitialPerformanceData GetInitialClientPerformanceData();
	void GatherAndSendInitialClientPerformanceData();
	void UpdateClientPerfData();
	void SendClientMemoryStatsToLeviathan();
	void SendClientStatsToLeviathan();
	void Leviathan_PlayerQuitMidMatch(const struct FPlatformUserId& UserId, bool bIsSplitscreenPlayer);
	void RaiseAnnotation(const class FString& optionalAnnotationType);
	void RaiseTestEvent();
	void PostSparkEvents();
	void Behavior_UpgradeSkill(class USkillDefinition* SkillToUpgrade, int32_t NumberOfLevelsToRaise, int32_t MaximumLevelToRaiseSkill, bool bPostSharedEventMessageIfSkillUpgraded);
	void AttemptLobbyInviteTypeTransition(EWillowInviteType InviteType);
	void ReturnToMainMenu(const class FString& Reason, EBeaconFlags BeaconFlags);
	void DebugReturnToMainMenu(const class FString& optionalReason);
	void ReturnToTitleScreen(const class FString& Reason, bool optionalBRemoveSplitPlayers);
	void CheckChatDisabled();
	void eventClientWasKicked();
	void ClosePressStartMovie();
	void ReconnectToServer();
	void RejoinSessionComplete(const struct FName& SessionName, EOnlineSubsystemResult Result);
	void ResolveSessionComplete(bool bWasSuccessful, const struct FOnlineGameSearchResult& Result);
	void DestroyAllBeaconsForRejoinServerComplete();
	void RejoinServer(const class FString& SessionId, const class FString& HostAddress, const class FString& ServerKey, const class FString& ZeppelinTicket);
	float GetInviteDisplayTime();
	void HideAccountMovie();
	void HideOptionsMovie();
	void eventNotifyUIRefresh();
	void DumpBeaconInfo();
	static void DestroyAllBeacons(const struct FScriptDelegate& optionalOnDestroyAllBeaconsCompleteDelegate);
	void TeamSay(const class FString& msg);
	static class FString GetRemotePlayerNickname(const struct FUniqueNetId& NetId);
	bool ShouldSkipTitleScreenStartupProcess();
	static bool GameHasNonLocalPlayers();
	void eventServerRecordPmtOnUIActive(class APawn* P, uint8_t UIType, bool bActive);
	EWillowInviteType eventGetPartyOption();
	void eventClientOnRecommendCharactersEnd(int32_t RecommendationCount, class UPoplarPlayerNameIdentifierDefinition* CharacterList, float FrequencyList);
	void eventServerRecommendCharacters(int32_t optionalRecommendationCount);
	void RecommendCharacters(int32_t optionalCharacterCount);
	void SetMainMenuLogoType(int32_t NewType);
	void SetMainMenuCharacter(const class FString& CharacterName);
	void NativeTestPostMatchUI(bool WonMatch, int32_t MetaXPStart, int32_t MetaXPEnd, int32_t EarnedCurrencyStart, int32_t EarnedCurrencyEnd, int32_t CharacterTokensStart, int32_t CharacterTokensEnd, int32_t NumRewards);
	void NativeMetaPerkSlotsUnlockedCheat(int32_t CurrLevel, int32_t NewLevel);
	void ServerSelectPlayerMetaLoadoutIndex(int32_t SelectedIndex);
	void SetActionSkillCastPreferenceFromProfile(class UWillowProfile* Profile);
	void SetTeamColorEnemyFromProfile(class UWillowProfile* Profile);
	void SetTeamColorAlliedFromProfile(class UWillowProfile* Profile);
	void SetSettingsFromProfile();
	void OnStartupReadProfile(const struct FPlatformUserId& UserId);
	void ReadProfileComplete(const struct FPlatformUserId& InUserId, ESaveDataOperationResult Result, class UWillowProfile* Profile);
	void ReadProfile();
	void OnEntitlementsUpdated(class UGearboxAccountData* GbxAccount);
	void TryRefreshFrontendPlayerList();
	void OnRecreateHostLobbyBeaconAfterDisconnectFromHost(EOnlineSubsystemResult Result, class UPoplarPartyBeaconHost* NewBeacon);
	void OnClientLobbyBeaconDestroyed();
	void OnCancelClientLobbyBeaconComplete();
	void OnJoinTravelToSessionComplete(const struct FName& SessionName, EOnlineSubsystemResult Result);
	void JoinFriendGame(const struct FPlatformUserId& UserId, const struct FUniqueNetId& FriendId);
	void HideAsyncOperationDialog();
	void ShowAsyncOperationDialog(const class FString& Message);
	bool CreateOnlineGame();
	void LoadoutUIClose();
	void LoadoutUIControllerDeactivate();
	void LoadoutUIControllerActivate();
	void LoadoutUIKeyboardActivate();
	void ShopToggleOverview();
	void ShopMoveSelectionDown();
	void ShopMoveSelectionUp();
	void ShopControllerDeactivate();
	void ShopControllerActivate();
	void ShopKeyboardActivate();
	void ShopClose();
	void ForceEndBlind();
	void CloseMetaLoadoutEditor();
	void Shop3();
	void InnerSetOnlineStatus();
	void UpdateEscortWidgetWithValue(float Value);
	bool HUDElementShouldBeVisible(class UGFxObject* TestGFxObject);
	void OnBuildMenuClose();
	void OnBuildMenuOpen();
	void OnLoadoutUIClose();
	void OnLoadoutUIOpen();
	void OnScoreboardClose();
	void OnScoreboardOpen();
	void InitScoreboardMovie(bool bForceNoSS);
	void OnShopMenuClose();
	void OnShopMenuOpen();
	void ShowPauseMenu(bool optionalBShowBacking);
	void ShowTauntPrompt();
	bool eventCheatServerRCon(const class FString& Command);
	void eventCheatRCon(const class FString& Command);
	void ServerRCon(const class FString& Command);
	void ClosePauseMovie();
	void GFxPauseMenu(bool optionalBShowBacking);
	class UPoplarPauseGFxMovie* GetPoplarPauseMovie();
	class UPoplarFrontendGFxMovie* GetPoplarFrontendMovie();
	void SetInputContextOverride(const struct FName& InInputContextOverride, int32_t Channel);
	struct FName GetCurrentInputContext();
	void NotifySprintAttemptFailed();
	void OnExpLevelChange(bool bFeedback, bool bNaturalLevelup, bool optionalBFirstStat);
	void ThirdPersonMeleeTest(bool bEnabled);
	void ServerFreeman();
	void Freeman();
	void ClearAutoAimOverride();
	void OverrideAutoAim(class UWillowAutoAimStrategyDefinition* AutoAimDef);
	void OnPoplarDamageEvent(int32_t DamageEventIndex);
	void RecordPoplarDamageEvent(class APawn* InstigatorPawn, float DamageSeverityPercent, int32_t DamageFlags, EPlayerDamageType DamageType);
	void eventClientUnpinMatchEvent(class UPoplarMessageDefinition* MessageDefinition);
	void eventDisplayPoplarHUDMessage(class UPoplarMessageDefinition* MessageDefinition, int32_t BackgroundFrame, const class FString& MessageString, const struct FPoplarMessageDefParams& Params);
	bool SnapLocationToInfluenceMapHeight(float optionalXYRadius, struct FVector& PointLocation);
	class UITargetable* GetBestPlayerAlertTarget(const struct FVector& OriginalPlayerAlertLocation, bool bPlayerAlertCreatedFromMinimap);
	void ServerCreatePlayerAlert(class UITargetable* Target, const struct FVector& MarkerLocation, bool bPlayerAlertCreatedFromMinimap);
	void CreatePlayerAlert();
	void CacheMatchResult(EPlayerMatchOutcome Outcome, const class FString& MatchId, const class FString& MatchEndReason);
	void CloseScoreboardMovie(bool bUnload);
	void OpenScoreboardMovie();
	void OpenCharacterSelectMovie();
	bool IsCharacterSelectLevelLoaded();
	bool OpenCharacterSelectLevel();
	void StopFocusing();
	void StartFocusing();
	bool CanHoldWeapon(class APawn* Holder, class AWeapon* TestWeapon, bool bHoldInOffHand);
	void PerformReload(bool optionalBOnlyReloadIfNeeded);
	void CycleZoomLevel();
	void PrevZoomLevel();
	void NextZoomLevel();
	void AttackButton_Release(EAttackButton optionalButton);
	void AttackButton_Hold(EAttackButton optionalButton);
	void AttackButton_Tap(EAttackButton optionalButton);
	void AttackButton_Press(EAttackButton optionalButton);
	void PostAttackDelay();
	void PostOffHandFireDelay();
	void PostFireDelay();
	void StopAltFire(uint8_t optionalFireModeNum);
	void StartAltFire(uint8_t optionalFireModeNum);
	void StopOffHandFire(uint8_t optionalFireModeNum);
	void StartOffHandFire(uint8_t optionalFireModeNum);
	void StopFire(uint8_t optionalFireModeNum);
	void StartFire(uint8_t optionalFireModeNum);
	void eventGetSeamlessTravelActorList(bool bToEntry, class TArray<class AActor*>& ActorList);
	void UpdateHUDOnRespawn();
	void NotifyDeathRecapUICreated();
	void StopQuickRevive();
	void StartQuickRevive();
	void ServerSkipRevive();
	void SkipRevive();
	void CheckReadyToSpectate();
	bool ExtractCameraOffsetViewKickFlag(int32_t PackedOffset);
	bool ExtractCameraOffsetFirstPersonFlag(int32_t PackedOffset);
	struct FVector ExtractCameraOffset(int32_t PackedOffset);
	int32_t PackCameraOffset(const struct FVector& Offset, bool optionalBIsFirstPerson, bool optionalBApplyViewKick);
	void PoplarDualControlledServerMove(float TimeStamp0, const struct FVector& InAccel0, uint8_t PendingFlags, int32_t view0, uint8_t AnalogPct0, float TimeStamp, const struct FVector& InAccel, const struct FVector& ClientLoc, int32_t CMDir, uint8_t NewFlags, int32_t CameraOffset, int32_t View, uint8_t AnalogPct, int32_t KickInput);
	void PoplarShortControlledServerMove(float TimeStamp, const struct FVector& ClientLoc, int32_t CMDir, uint8_t NewFlags, int32_t CameraOffset, int32_t View, uint8_t AnalogPct, int32_t KickInput);
	void PoplarControlledServerMove(float TimeStamp, const struct FVector& InAccel, const struct FVector& ClientLoc, int32_t CMDir, uint8_t MoveFlags, int32_t CameraOffset, int32_t View, uint8_t AnalogPct, int32_t KickInput);
	void PoplarDualServerMove(float TimeStamp0, const struct FVector& InAccel0, uint8_t PendingFlags, int32_t view0, uint8_t AnalogPct0, float TimeStamp, const struct FVector& InAccel, const struct FVector& ClientLoc, uint8_t NewFlags, int32_t CameraOffset, int32_t View, uint8_t AnalogPct, int32_t KickInput);
	void PoplarShortServerMove(float TimeStamp, const struct FVector& ClientLoc, uint8_t NewFlags, int32_t CameraOffset, int32_t View, uint8_t AnalogPct, int32_t KickInput);
	void PoplarServerMove(float TimeStamp, const struct FVector& InAccel, const struct FVector& ClientLoc, uint8_t MoveFlags, int32_t CameraOffset, int32_t View, uint8_t AnalogPct, int32_t KickInput);
	void CallServerMove(class USavedMove* NewMove, const struct FVector& ClientLoc, uint8_t ClientRoll, int32_t View, class USavedMove* OldMove);
	struct FRotator GetAdjustedAimFor(class AWeapon* W, const struct FVector& StartFireLoc);
	void SetViewingThirdPersonMenu(bool bNewViewingThirdPersonMenu, bool bIsStatusMenu);
	struct FRotator Get3rdPersonAimRotation(class AWeapon* W, const struct FVector& StartFireLoc);
	void ServerSpectatePrevPlayer();
	void ServerSpectateNextPlayer();
	void SpectatePrevPlayer();
	void SpectateNextPlayer();
	void GetPlayerViewPoint(bool optionalBMustBeCurrent, struct FVector& POVLocation, struct FRotator& POVRotation);
	void UpdateScreenParticles(const struct FVector& POVLocation, const struct FRotator& POVRotation);
	bool UpdateViewModelTransform(struct FVector& ViewModelLocation, struct FQuat& ViewModelRotation);
	void AddWeaponKick(float Amount, int32_t ShotId, class UWeaponTypeDefinition* WeaponTypeDef);
	bool UsingFirstPersonCamera();
	void RandomizeFractalWanderPoints();
	void ServerResetViewKick();
	void ResetViewKick();
	void ResetViewWandering(float optionalSmoothInTime);
	void AddPainCameraShake(const struct FVector& LocOffset, const struct FRotator& RotOffset, float FOVOffset, float MaxLocationOffset, float MaxRotOffset, float MaxFOVOffset, float Duration);
	void PlaySkidCameraLurch();
	void InitializeViewWanderingFor(class UWeaponTypeDefinition* WeaponDef);
	void UpdateCameraControllerInputs();
	void ResetCameraRotation(const struct FRotator& NewRotation);
	void ClientResetCameraRotation(const struct FRotator& NewRotation);
	void eventSetCameraFocus(class AActor* optionalFocusActor, const struct FName& optionalFocusBone, const struct FName& optionalFocusSocket, const struct FVector& optionalFocusOffset);
	void ServerNotifySpectatorsOfLocalCameraChange(bool bIsPush, const struct FName& ModeName, float BlendTimeOverride);
	void ResetCameraMode(bool optionalBCutToDefaultMode);
	void SetCameraMode(const struct FName& ModeName, float optionalBlendTimeOverride, bool optionalBTeleport, bool optionalBForceResetMode);
	void PopCameraMode(const struct FName& ModeName, float optionalBlendTimeOverride, bool optionalBTeleport);
	void PushCameraMode(const struct FName& ModeName, float optionalBlendTimeOverride, bool optionalBTeleport);
	void ResetCameraDebugOffsets();
	void AdjustCameraFocusForwardOffset(bool bIn);
	void AdjustCameraScale(bool bIn);
	void ThirdPersonCamDebug();
	void FirstPersonCamDebug();
	void PrevDebugCamera();
	void NextDebugCamera();
	void EndSprint();
	void BeginSprint();
	void ServerDefaultFOVChanged(float NewDefaultFOV);
	void OnDefaultFOVChanged();
	float GetDesiredSprintingFOVModifier();
	void eventSpawnPlayerCamera();
	void OnRep_ReplicatedCameraViewData(const struct FCameraViewData& PreviousViewData);
	void UpdateCamera(float DeltaSeconds);
	void UpdateCameraView(float optionalOverrideBlendTime, bool optionalBIsTeleport, bool optionalBForceResetMode);
	void eventDestroyed();
	void ClientCreateScoreboard();
	void ClientSetRotation(const struct FRotator& NewRotation, bool optionalBResetCamera);
	void KillEnemies();
	void WhatIsMyTeam();
	void HighlightSystemDumpDebug();
	void DumpStatsList();
	void DebugModifyProfileStatValue(int32_t ProfileStatID, int32_t optionalAmount);
	void ServerDebugModifyGameStatValue(int32_t StatId, int32_t optionalStatCategory, int32_t optionalAmount);
	void DebugModifyGameStatValue(int32_t StatId, int32_t optionalStatCategory, int32_t optionalAmount);
	void ToggleOutlineVisibility();
	void EnableInstaCast();
	void EnableQuickCast();
	void EnableStandardCast();
	void ServerBalanceMe(int32_t GameStage, int32_t AwesomeLevel);
	void DisplayDebug(class AHUD* HUD, float& out_YL, float& out_YPos);
	void OnTeleport(class USeqAct_Teleport* Action);
	void ServerChangeTeam(int32_t N);
	void SwitchTeam();
	void SetPendingPoplarClassSwitch(class UPlayerClassDefinition* NewPlayerClass);
	void ClientApplyPendingPlayerClass(class UPoplarPlayerNameIdentifierDefinition* ThePlayerClassNameId, class UPoplarMetaSkinDefinition* SkinIdDef, class UPoplarMetaTauntDefinition* TauntDef);
	void SwitchToPendingPlayerClass();
	void eventSwitchPoplarPlayerClass(class UPoplarPlayerNameIdentifierDefinition* NewPlayerClassNameId);
	void eventSwitchPlayerClass(class UPlayerClassDefinition* NewPlayerClass);
	void ServerPlayerSelectTaunt(const class FString& TauntPath);
	void ServerPlayerSelectClass(const class FString& ClassPath, const class FString& optionalSkinPath);
	void PlayerSelectTaunt(const class FString& optionalTauntPath);
	void PlayerSelectSkin(const class FString& optionalSkinPath);
	void PlayerSelectClass(const class FString& optionalClassPath, const class FString& optionalSkinPath);
	void ClientPrepareForClassSwitch(class UPoplarPlayerNameIdentifierDefinition* NewPlayerClassNameId, class UPoplarMetaSkinDefinition* SkinIdDef, class UPoplarMetaTauntDefinition* TauntDef);
	void ApplyCharacterSelection();
	bool HasClientLoadedOnDemandPackageFor(class UObject* TheObject);
	void ClientOnCharacterTauntSelection(class UPoplarMetaTauntDefinition* SkinSelection, EMetaItemSelectionResult ResultMessage);
	void ClientOnCharacterSkinSelection(class UPoplarMetaSkinDefinition* SkinSelection, EMetaItemSelectionResult ResultMessage);
	void eventServerSelectCharacterTaunt(class UPoplarMetaTauntDefinition* SelectedTaunt);
	void eventServerSelectCharacterSkin(class UPoplarMetaSkinDefinition* SelectedSkin);
	void ClientOnCharacterSelection(class UPoplarPlayerNameIdentifierDefinition* CharacterSelection, EMetaItemSelectionResult ResultMessage);
	void eventServerSelectCharacter(class UPoplarPlayerNameIdentifierDefinition* SelectedCharacter, class UPoplarMetaSkinDefinition* PreferredSkin, class UPoplarMetaTauntDefinition* PreferredTaunt, bool bLockIn);
	void SetPlayerNameIdentifierDefinition(class UPoplarPlayerNameIdentifierDefinition* Character);
	void UpdateRotation(float DeltaTime);
	void OnEndRemoteControl();
	void OnBeginRemoteControl(const struct FRemoteControlInfo& RCInfo);
	void eventNotifyActionSkillConfirmed();
	void UpdateMinimapActorSelectionFromGamepad();
	void UpdateMinimapCursorFromRotationInput(float DeltaTime);
	void eventInitInputSystem();
	void ClientSetSlomo(bool bSlomoEnable, bool bForce);
	void ServerSetSlomo(bool bSlomoEnable);
	void SetSlomo(bool bSlomoEnable);
	void ServerSetPause(bool bPause);
	bool SetPause(bool bPause, const struct FScriptDelegate& optionalCanUnpauseDelegate);
	void ClientRestart(class APawn* NewPawn);
	void ShowMenu();
	void Restart(bool bVehicleTransition);
	void EnterStartState();
	void eventPlayerReady();
	void ReadyUpPlayer();
	void ServerWarpPlayer(const struct FVector& WarpLocation, const struct FRotator& WarpRotation);
	void eventWarpPlayer(const struct FVector& WarpLocation, const struct FRotator& WarpRotation);
	void ClientTeleportSpectatorCam(const struct FVector& NewLocation, const struct FRotator& NewRotation);
	void ResetEnergyPool();
	void ServerDeactivateSkillSlot(EActionSkillSlot SkillSlot, bool optionalBIgnoreSkillInstigator);
	void ResetActionSkill();
	void Behavior_ResetActionSkillCooldown();
	void ConditionalResetInterruptedActionSkill(bool optionalBIsPawnDead);
	void ServerStartActionSkillCooldownAbilitySlot(EActionSkillSlot ActionSkillSlot, class AActor* SkillTarget);
	void StartActionSkillCooldownAbilityBySlot(EActionSkillSlot ActionSkillSlot);
	void StartActionSkillActiveAbilityBySlot(EActionSkillSlot ActionSkillSlot);
	void ServerActivateSecondaryAction(EActionSkillSlot ActionSkillSlot);
	void ServerStartActionSkillActiveAbilitySlot(EActionSkillSlot ActionSkillSlot, class AActor* SkillTarget, bool bNotifyClient);
	void ServerStartActionSkillSlot(EActionSkillSlot ActionSkillSlot, class AActor* SkillTarget, const struct FVector& SkillTargetLocation, class AActor* SkillTargetLocationBase, EeSkillCastStyle LatestCastSetting);
	void ClientTriggerSkillsBlockedByCrowdControlDebuffFeedback(int32_t SkillSlotIndex);
	void ClientTriggerSkillOnCooldownFeedback(int32_t SkillSlotIndex);
	void ClientTriggerNotEnoughEnergyResourceFeedback(int32_t SkillSlotIndex);
	void ClientTriggerInvalidTargetFeedback(int32_t SkillSlotIndex);
	void eventResetActionSkillSlotCooldown(EActionSkillSlot ActionSkillSlot);
	float GetActionSkillSlotCooldownTimeRemaining(EActionSkillSlot ActionSkillSlot);
	float GetActionSkillSlotCooldownTime(EActionSkillSlot ActionSkillSlot);
	void eventStartActiveSkillSlotCooldown(EActionSkillSlot ActionSkillSlot);
	void SetupActiveSkillSlotForCooldown(EActionSkillSlot ActionSkillSlot);
	bool IsActionSkillSlotCooldownRunning(EActionSkillSlot ActionSkillSlot);
	bool HasActionSkillStartedExecution(EActionSkillSlot ActionSkillSlot);
	void eventServerCancelActionSkill(bool optionalBWithFinalAuthority, bool optionalBForceDeactivate);
	bool ServerConfirmActionSkill(bool optionalBWithFinalAuthority);
	void ServerConfirmActionSkillEx(class AActor* CommandRingTargetActor, const struct FVector& CommandRingTargetLocation, class AActor* CommandRingTargetLocationBase);
	void ServerStopActionSkillSlot(EActionSkillSlot ActionSkillSlot);
	void QuickConfirmActionSkill(EActionSkillSlot optionalActionSkillSlot);
	void CancelActionSkill();
	void ConfirmActionSkill();
	void StartActionSkillBySlot(EActionSkillSlot ActionSkillSlot);
	bool GetActionSkillPreferredTarget(EActionSkillSlot ActionSkillSlot, class AActor*& TargetActor, struct FVector& TargetLocation, class AActor*& TargetLocationBase);
	void eventActionSkillSlotCooldownComplete(EActionSkillSlot ActionSkillSlot);
	void SetActionSkillTime();
	void ClientSetCinematicMode(const struct FCinematicModeOptions& Options);
	int32_t SetCinematicMode(const struct FCinematicModeOptions& Options, bool optionalBIsRestoringMode);
	void ServerReviveCallForHelp();
	void ReviveCallForHelp();
	void ResetAndChangeExpLevel(int32_t NewExpLevel);
	void eventReceiveLocalizedPoplarMessage(class UClass* Message, int32_t Switch, class UPoplarMessageDefinition* MsgDef, const struct FPoplarMessageDefParams& Params);
	void eventServerRequestUpdatedSkillGrades();
	void eventClientSetSkillGrade(class USkillDefinition* Skill, uint8_t NewSkillPoints, uint8_t Grade);
	void HandleSkillGradeChange(class USkillDefinition* Skill, uint8_t NewSkillPoints, uint8_t Grade);
	void ModalGameMenuClosing();
	void ModalGameMenuOpening();
	bool CanShowModalMenu(uint8_t& bDisplayFailureWarning);
	void HideInGameScoreboardVita();
	void ShowInGameScoreboardVita();
	void HideInGameScoreboard();
	void ShowInGameScoreboard();
	void eventRequestActionSkillPromptForConfirmation(class UObject* PoplarSkillObject);
	void PauseClosed();
	void PauseOpened();
	void SwapDeathRecapPanels();
	void ToggleDeathRecap();
	void ShrinkMinimap();
	void ExpandMinimap(bool optionalBActorSelect);
	class AActor* GetSelectedMinimapActor();
	int32_t GetNumMinimapActorSelectionTargets();
	void ServerSelectPrevMinimapActor();
	void ServerSelectNextMinimapActor();
	void SelectPrevMinimapActor();
	void SelectNextMinimapActor();
	void eventClientCloseMinimapActorSelection();
	void eventClientOpenMinimapActorSelection(bool bExpandMinimap);
	void SetMinimapActorSelectionFilterSettings(struct FActorSelectionFilterSettings& FilterSettings);
	void FinishLoadoutUIMode();
	void RequestLoadoutUIMode();
	void FinishShopMode();
	void RequestShopMode();
	void ServerRequestRecallToBase();
	void RequestRecallToBase();
	void RequestStopRecallToBase();
	void TauntSuccessful();
	void ServerRequestTaunt();
	void RequestTaunt();
	void ServerUseAllNearby();
	void UseAllNearby();
	void Use();
	void eventOnPlayerClassChange();
	void AfterReceivedPlayerWaitForCharacterLoad();
	void ProcessPendingStartupWork();
	void ReceivedPlayer();
	void CheckForInputEmulation();
	void CheckForUrlOptionsOnClient();
	void SetMinimapWidget(class UMHW_MiniMapOuter* NewMinimapWidget);
	void Possess(class APawn* aPawn, bool bVehicleTransition);
	void eventReplicatedEvent(const struct FName& VarName);
	bool GetDebugPlayerID(int32_t& OutID);
	void PostBeginPlay();
	void RecolorEnemyTeamActors();
	void RecolorFriendlyTeamActors();
	struct FLinearColor GetTeamColorNeutral(ETeamRelativeColorCategory Category);
	struct FLinearColor GetTeamColorEnemy(ETeamRelativeColorCategory Category);
	struct FLinearColor GetTeamColorAllied(ETeamRelativeColorCategory Category);
	float GetPIEDefaultFOV();
};

// Class PoplarGame.PoplarCheatManager
// 0x0000 (0x0110 - 0x0110)
class UPoplarCheatManager : public UWillowCheatManager
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCheatManager");
		}

		return uClassPointer;
	};

	void ReapplyWearables();
	void RemoveAllWearables();
	void ApplyWearable(class UPoplarPlayerWearableDefinition* Wearable);
	void SetDebugDailyTime(int32_t NewUTCTime);
	void TestPrivilegeChange();
	void CompleteAllChallenges();
	void SetRespawnTickets(int32_t NewRespawnTicketsValue);
	void DebugGivePerks();
	void SimulateTeamDrop();
	void DownloadImage(const class FString& ImageUrl);
	void GiveScore(int32_t ScoreToAdd);
	void StressTestEndofMatch(int32_t optionalNumPlayers, int32_t optionalNumStats, int32_t optionalNumChallenges);
	void SetVoiceEnabled(bool bEnabled);
	void SkipRejoin(bool bShouldSkip);
	void SetMatchTime(float NewMatchTimeInSeconds);
	void TestPlatformIdString();
	void DebugHideAllOnlineMessagesForUser();
	void DebugRemoveOnlineMessage(int32_t MessageId);
	void DebugAddOnlineMessage(const class FString& Message, const class FString& Subtitle, bool bShowAsync, bool bShowProfileImage);
	void ShutdownAbandoned();
	void ShutdownQuarantined();
	void UncompleteVersusPrologue();
	void UncompleteStoryPrologue();
	void UncompletePrologue();
	void CompleteVersusPrologue();
	void CompleteStoryPrologue();
	void CompletePrologue();
	void TestReadExperienceDataByGuidRequestComplete(const struct FPlatformUserId& UserId, int32_t ServiceResult, struct FExperienceData& ReadExperienceData);
	void TestReadExperienceDataByGuid(const class FString& ExperienceGuid);
	void SplitFOVScale(bool bForeground, float optionalNewValue);
	void TestShatter();
	void TestDissolve();
	void TestFreeze();
	void AddTestVote();
	void ClearTestStandInOffset();
	void TestStandInOffset(float optionalX, float optionalY, float optionalZ);
	void ClearTestStandInScale();
	void TestStandInScale(float Scale);
	void SimulateOpenPack(const class FString& MetaID, int32_t optionalPackCount, int32_t optionalPlayerCommandRank);
	void GrantEntitlement(const class FString& MetaID);
	void ResetLightbarColor();
	void SetLightbarColor(uint8_t R, uint8_t G, uint8_t B);
	void PrintMinionSpawnState(bool optionalBVerbose);
	void PrintActiveAIStats();
	void PrintMaxAIStats(bool optionalBVerbose);
	void MetagameOperationRequestComplete(const struct FPlatformUserId& UserId, int32_t ServiceResult);
	void HitNotifyAudio(int32_t SetMask);
	void LogCombatMusicStats();
	void DumpIOs();
	void DebugLockMutation(const class FString& PathToMutation);
	void DebugUnlockMutation(const class FString& PathToMutation);
	void ForceMatchmakingSparkError();
	void ResetProfile();
	void WriteProfileComplete(const struct FPlatformUserId& InUserId, ESaveDataOperationResult Result);
	void WriteProfile();
	void GetNATType();
	void OnGetNATType(const struct FPlatformUserId& PlayerID, int32_t ServiceResult, class TArray<struct FNATTypeData>& NATTypeData);
	void ReportNATType(int32_t NATType);
	void OnReportNATType(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
	void BalanceParty(int32_t optionalGameStage, int32_t optionalAwesomeLevel);
	void RefreshMessagesOfTheDay();
	void RecordGameClip(float Duration, const class FString& MomentId);
	void SetAFKWarningTime(int32_t Time);
	void SetAFKKickTime(int32_t Time);
	void ToggleAFKSystem(bool optionalOn);
	void ResetTrainingStats();
	void ResetShop();
	void SetStreamingEnabled(bool bEnabled);
	void SetStreamingPermitted(bool bPermitted);
	void GetStreamingStatus();
	void TcpConnect(const class FString& LinkName, int32_t LinkPort, const class FString& RemoteAddr, int32_t RemotePort);
	void TcpListen(const class FString& LinkName, int32_t LinkPort);
	void DumpRelevantUnitData();
	void WhatsMyNatType();
	void GetPlayerDisplayData();
	void OnGetPlayerDisplayData(const struct FPlatformUserId& PlayerID, int32_t ServiceResult, class TArray<struct FPlayerDisplayData>& PlayerDisplayData);
	void ToggleCollisionGrid();
	void MetaPerkSlotsUnlockedCheat(int32_t CurrLevel, int32_t NewLevel);
	void TestWaitForCharacterSelectLevel();
	void TestCharacterSelect();
	void SetMaxWaveCount(int32_t NewMaxWaveCount);
	void ForceKillAll();
	void WeaponAttackTimingDebug();
	void TargetSearchDebug();
	void ClearPipelineHistoryFilter();
	void GetNextExperienceHistory(int32_t optionalNumberOfHistoriesToRetrieve);
	void GetAllExperienceHistories();
	void GetNextCurrencyHistory(int32_t optionalNumberOfHistoriesToRetrieve);
	void GetAllCurrencyHistories();
	void GetNextDamageHistory(int32_t optionalNumberOfHistoriesToRetrieve);
	void GetAllDamageHistories();
	void SetHistoryFilterAttackerDefender(EAttackerDefenderFilterType optionalNewAttackerDefenderFilter);
	void SetHistoryFilterCriticalHit(ECriticalHitFilterType optionalNewCritFilter);
	void PipelineHistoryDefenderName(const class FString& DefendingPlayerName);
	void PipelineHistoryAttackerName(const class FString& AttackingPlayerName);
	void PipelineFilterFinalValue(float optionalNewMinFinalValue, float optionalNewMaxFinalValue);
	void PipelineFilterNamedActor(const class FString& NewNamedActorName);
	void PipelineFilterTimeStamp(int32_t optionalStartTimeStamp, int32_t optionalEndTimeStamp);
	void GetPipelineFilterResults();
	void PipelineResetFilters();
	void PipelineCycleCriticalHit();
	void PipelineCycleAttackerDefender();
	void PipelineFilterDefenderName(const class FString& optionalNewFilterName);
	void PipelineFilterAttackerName(const class FString& optionalNewFilterName);
	void PipelineFilterClass(class UClass* optionalNewFilterClass);
	void ExperiencePipelineDebug(const class FString& optionalArg);
	void CurrencyPipelineDebug(const class FString& optionalArg);
	void DamagePipelineDebug(const class FString& optionalArg);
	void SetMainMenuLogoType(int32_t NewType);
	void SetMainMenuCharacter(const class FString& CharacterName);
	void ToggleDebugRevive();
	void SelfRevive();
	void BotSwitchTeam();
	void CheckCurrentCameraMode();
	void ListCameraModes();
	void ReplayPostMatchUI(const class FString& Base64EncodedMatchResultData);
	void TestSpectatorPostMatchUI(int32_t WinningTeam);
	void TestPostMatchUI(bool WonMatch, int32_t MetaXPStart, int32_t MetaXPEnd, int32_t EarnedCurrencyStart, int32_t EarnedCurrencyEnd, int32_t CharacterTokensStart, int32_t CharacterTokensEnd, int32_t NumRewards);
	void FloatingCombatText_ToggleAggregated();
	void TestEndMatch(int32_t optionalTeamIndex);
	void DoTestForceEndFire();
	void TestForceEndFire(float optionalDelay);
	void TestCountered();
	void TestCountering(bool bOn);
	void TestBlocking(bool bOn);
	void DebugLanes();
	void TestSpectating(bool bOn);
	void KillMinions();
	void DebugAIFlight();
};

// Class PoplarGame.PoplarCheckpointRenderingComponent
// 0x0010 (0x0360 - 0x0370)
class UPoplarCheckpointRenderingComponent : public UPrimitiveComponent
{
public:
	uint32_t                                           bViewSolid : 1;                                // 0x0360 (0x0004) [0x0000000000006003] [0x00000001] (CPF_Edit | CPF_Const | CPF_Transient | CPF_Config)
	uint8_t                                           UnknownData00[0xC];                            // 0x0364 (0x000C) MISSED OFFSET

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCheckpointRenderingComponent");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCloakComponent
// 0x0000 (0x00E8 - 0x00E8)
class UPoplarCloakComponent : public UWillowCloakComponent
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCloakComponent");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCloakDefinition
// 0x0000 (0x00A0 - 0x00A0)
class UPoplarCloakDefinition : public UWillowCloakDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCloakDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCombatantActionTracker
// 0x0048 (0x0058 - 0x00A0)
class UPoplarCombatantActionTracker : public UObject
{
public:
	class TArray<struct FActiveAssistStruct>           ActiveAssists;                                 // 0x0058 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	float                                              KillAssistCreditTimeWindow;                    // 0x0068 (0x0004) [0x0000000000000000]               
	uint8_t                                            HealingActionRating;                           // 0x006C (0x0001) [0x0000000000000000]               
	uint8_t                                            OvershieldingActionRating;                     // 0x006D (0x0001) [0x0000000000000000]               
	uint8_t                                            BuffingActionRating;                           // 0x006E (0x0001) [0x0000000000000000]               
	uint8_t                                            DebuffingActionRating;                         // 0x006F (0x0001) [0x0000000000000000]               
	uint8_t                                            DamagingActionRating;                          // 0x0070 (0x0001) [0x0000000000000000]               
	uint32_t                                           bInitialized : 1;                              // 0x0074 (0x0004) [0x0000000000000000] [0x00000001] 
	int32_t                                            NextCombatantID;                               // 0x0078 (0x0004) [0x0000000000000000]               
	class TArray<struct FCombatantDataCacheEntry>      CombatantDataCache;                            // 0x0080 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FPendingCombatantNameRemoval>  PendingCombatantDataRemovals;                  // 0x0090 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCombatantActionTracker");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCommandBackgroundGFxMovie
// 0x0010 (0x05B0 - 0x05C0)
class UPoplarCommandBackgroundGFxMovie : public UWillowGFxMovie3D
{
public:
	class UGFxObject*                                  BackgroundClip;                                // 0x05B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarPlayerController*                     PPCOwner;                                      // 0x05B8 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCommandBackgroundGFxMovie");
		}

		return uClassPointer;
	};

	bool eventStart(bool optionalBStartPaused);
};

// Class PoplarGame.PoplarCommandBattlebornCharacterAppearanceGFxObject
// 0x00C8 (0x00D8 - 0x01A0)
class UPoplarCommandBattlebornCharacterAppearanceGFxObject : public UGFxObject
{
public:
	class FString                                      LocalizedCharacterRequired;                    // 0x00D8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedRankRequired;                         // 0x00E8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedPlayerRampUnlock;                     // 0x00F8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedCharacterRampUnlock;                  // 0x0108 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedChallengeUnlock;                      // 0x0118 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedLoreChallengeUnlock;                  // 0x0128 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class UPoplarCommandBattlebornGFxMovie*            OwningMovie;                                   // 0x0138 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  SkinsList;                                     // 0x0140 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  TauntsList;                                    // 0x0148 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  Brackets;                                      // 0x0150 (0x0008) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FPointer>                      AllSkins;                                      // 0x0158 (0x0010) [0x0000000000003000] (CPF_Native | CPF_Transient)
	class TArray<struct FPointer>                      AllTaunts;                                     // 0x0168 (0x0010) [0x0000000000003000] (CPF_Native | CPF_Transient)
	class UPoplarPlayerNameIdentifierDefinition*       CachedCharacter;                               // 0x0178 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            SelectedSkinIndex;                             // 0x0180 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            SelectedTauntIndex;                            // 0x0184 (0x0004) [0x0000000000002000] (CPF_Transient)
	EPoplarCharacterAppearancePageState                PageState;                                     // 0x0188 (0x0001) [0x0000000000002000] (CPF_Transient)
	class UPoplarChallengeManager*                     ChallengeManager;                              // 0x0190 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bResetStateOnInit : 1;                         // 0x0198 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bSkinsInitialized : 1;                         // 0x0198 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bTauntsInitialized : 1;                        // 0x0198 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           bShouldSelectPreferredSkinAndTaunt : 1;        // 0x0198 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCommandBattlebornCharacterAppearanceGFxObject");
		}

		return uClassPointer;
	};

	void extPopulateTauntButtons(class UGFxObject* Container, const class TArray<int32_t>& SourceIndices, const class TArray<class UGFxObject*>& Buttons);
	void extTauntActivated(int32_t SourceIndex);
	void extTauntSelected(int32_t SourceIndex);
	void extPopulateSkinButtons(class UGFxObject* Container, const class TArray<int32_t>& SourceIndices, const class TArray<class UGFxObject*>& Buttons);
	void extSkinActivated(int32_t SourceIndex);
	void extSkinSelected(int32_t SourceIndex);
	void RequestItemRangeForDataProvider(class UGFxObject* Provider, const class FString& Type, int32_t StartIndex, int32_t EndIndex);
};

// Class PoplarGame.PoplarCommandBattlebornCharacterChallengesGFxObject
// 0x0070 (0x00D8 - 0x0148)
class UPoplarCommandBattlebornCharacterChallengesGFxObject : public UGFxObject
{
public:
	class FString                                      LocalizedChallenges;                           // 0x00D8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      ChallengesCompleteText;                        // 0x00E8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class UPoplarChallengeManager*                     ChallengeManager;                              // 0x00F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarCommandBattlebornGFxMovie*            OwningMovie;                                   // 0x0100 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarPlayerClassDefinition*                SelectedCharacterClass;                        // 0x0108 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarLoreChallengeListDefinition*          LoreChallengeListCollection;                   // 0x0110 (0x0008) [0x0000000000002000] (CPF_Transient)
	ELoreChallengeDisplayState                         CurrentLoreDisplayState;                       // 0x0118 (0x0001) [0x0000000000002000] (CPF_Transient)
	struct FAkPlayingInfo                              CurrentlyPlayingAudioReward;                   // 0x0120 (0x0010) [0x0000000000080000] (CPF_Component)
	int32_t                                            CurrentlySelectedChallengeIndex;               // 0x0130 (0x0004) [0x0000000000002000] (CPF_Transient)
	class ULoreUnlockDefinition*                       CurrentlyDisplayedReward;                      // 0x0138 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            NumChallengesCompleted;                        // 0x0140 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bAtLeastOneChallengeCompleted : 1;             // 0x0144 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCommandBattlebornCharacterChallengesGFxObject");
		}

		return uClassPointer;
	};

	void extOnLoreChallengeItemFocused(int32_t ChallengeIndex);
	void extOnLoreChallengeItemClick(int32_t ChallengeIndex);
	void OnAkEventCompleted(class UAkComponent* SourceComponent, class UAkEvent* SourceEvent, int32_t EventInstanceId);
};

// Class PoplarGame.PoplarCommandBattlebornCharacterGFxObject
// 0x00D8 (0x00D8 - 0x01B0)
class UPoplarCommandBattlebornCharacterGFxObject : public UGFxObject
{
public:
	struct FPointer                                    VfTable_IIStreamingDataEvent;                  // 0x00D8 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class FString                                      LocalizedHelix;                                // 0x00E0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedCharacterRank;                        // 0x00F0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedLoreCompletion;                       // 0x0100 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedNextReward;                           // 0x0110 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedPassive;                              // 0x0120 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedWeapon;                               // 0x0130 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedTalent;                               // 0x0140 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedSkill1;                               // 0x0150 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedSkill2;                               // 0x0160 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedUltimate;                             // 0x0170 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      FactionAndRoleFormat;                          // 0x0180 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class UPoplarCommandBattlebornGFxMovie*            OwningMovie;                                   // 0x0190 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bInfoPaneVisible : 1;                          // 0x0198 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	class FString                                      PendingClassDefRequestString;                  // 0x01A0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCommandBattlebornCharacterGFxObject");
		}

		return uClassPointer;
	};

	void extHelixRowClicked(int32_t HelixRowIndex);
};

// Class PoplarGame.PoplarCommandBattlebornCharacterHelixGFxObject
// 0x03E8 (0x00D8 - 0x04C0)
class UPoplarCommandBattlebornCharacterHelixGFxObject : public UGFxObject
{
public:
	class UPoplarCommandBattlebornGFxMovie*            OwningMovie;                                   // 0x00D8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarShop3StorePanelGFxObject*             StorePanel;                                    // 0x00E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarShop3ItemPanelGFxObject*              ItemPanelLeft;                                 // 0x00E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarShop3ItemPanelGFxObject*              ItemPanelRight;                                // 0x00F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarShop3ItemPanelGFxObject*              MutationPanel;                                 // 0x00F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FAugSetInstance                             Augs;                                          // 0x0100 (0x0378) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FPointer>                      EntitledMutations;                             // 0x0478 (0x0010) [0x0000000000003000] (CPF_Native | CPF_Transient)
	class FString                                      LocalizedMutationUnlocksString;                // 0x0488 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedCharacterRankString;                  // 0x0498 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FPointer                                    CurrentAugLeft;                                // 0x04A8 (0x0008) [0x0000000000001000] (CPF_Native)  
	struct FPointer                                    CurrentAugRight;                               // 0x04B0 (0x0008) [0x0000000000001000] (CPF_Native)  
	struct FPointer                                    CurrentAugMutation;                            // 0x04B8 (0x0008) [0x0000000000001000] (CPF_Native)  

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCommandBattlebornCharacterHelixGFxObject");
		}

		return uClassPointer;
	};

	void extOnStorePanelLoaded(class UPoplarShop3StorePanelGFxObject* StorePanelClip);
	void extOnItemPanelLoaded(class UPoplarShop3ItemPanelGFxObject* ItemPanelClip, const class FString& PanelName);
};

// Class PoplarGame.PoplarCommandBattlebornCharacterStatsGFxObject
// 0x0020 (0x00D8 - 0x00F8)
class UPoplarCommandBattlebornCharacterStatsGFxObject : public UGFxObject
{
public:
	class UPoplarCommandBattlebornGFxMovie*            OwningMovie;                                   // 0x00D8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class FString                                      LocalizedStats;                                // 0x00E0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class UPoplarCommandPlayerStatsPanelGFxObject*     PlayerStatsPanel;                              // 0x00F0 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCommandBattlebornCharacterStatsGFxObject");
		}

		return uClassPointer;
	};

	void extOnPlayerStatsUnloaded();
	void extOnPlayerStatsLoaded(const class FString& TargetPath);
};

// Class PoplarGame.PoplarCommandChallengesPanelGFxObject
// 0x0080 (0x00D8 - 0x0158)
class UPoplarCommandChallengesPanelGFxObject : public UGFxObject
{
public:
	class FString                                      CompleteText;                                  // 0x00D8 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      RankText;                                      // 0x00E8 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      ProgressText;                                  // 0x00F8 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      RewardsText;                                   // 0x0108 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class TArray<class UIExpandableListEntry*>         SortedChallenges;                              // 0x0118 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UGearboxExpandableListGFxObject*             ExpandableList;                                // 0x0128 (0x0008) [0x0000000000002000] (CPF_Transient)
	class TArray<class UPoplarChallengeDefinition*>    CurrentChallengeList;                          // 0x0130 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            MainChallengeListLength;                       // 0x0140 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            MaxRewardsPerMainChallenge;                    // 0x0144 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bCanExpandSelectedIndex : 1;                   // 0x0148 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bCanCollapseFromSelectedIndex : 1;             // 0x0148 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	class UPoplarCommandCareerGFxMovie*                OwningMovie;                                   // 0x0150 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCommandChallengesPanelGFxObject");
		}

		return uClassPointer;
	};

	void UpdateEntryDisplayInfo(class UIExpandableListEntry* ListItem);
	void UpdateSubCategoryDisplayInfo(class UGearboxExpandableListSubCategory* SubCategory, const class TArray<class UIExpandableListEntry*>& ItemList);
	void UpdateCategoryDisplayInfo(class UGearboxExpandableListCategory* Category, const class TArray<class UIExpandableListEntry*>& ItemList);
	void OnEntryFocused(class UIExpandableListEntry* SubCategory);
	void OnSubCategoryFocused(class UGearboxExpandableListSubCategory* SubCategory);
	void OnCategoryFocused(class UGearboxExpandableListCategory* Category);
	bool HandleInputKey(const struct FPlatformUserId& InUserId, const struct FName& ukey, EInputEvent uevent);
};

// Class PoplarGame.PoplarCommandGFxMovie
// 0x0360 (0x05B0 - 0x0910)
class UPoplarCommandGFxMovie : public UWillowGFxMovie3D
{
public:
	class FString                                      CharacterNotOwnedFailureMessage;               // 0x05B0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CharacterNotOwnedPurchaseRedirectMessage;      // 0x05C0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      InsufficientFundsFailureMessage;               // 0x05D0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MaximumCountOwnedFailureMessage;               // 0x05E0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      InvalidMetaIDFailureMessage;                   // 0x05F0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      InvalidCostFailureMessage;                     // 0x0600 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      InsufficientMetaLevelFailureMessage;           // 0x0610 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      ManyHours;                                     // 0x0620 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      FewMinutes;                                    // 0x0630 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      HoursAbbreviation;                             // 0x0640 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MinutesAbbreviation;                           // 0x0650 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	uint32_t                                           bHidTrainingBoosterCell : 1;                   // 0x0660 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bInventoryRefereshComplete : 1;                // 0x0660 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bStatRefreshComplete : 1;                      // 0x0660 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           bCharacterBreadcrumbsDirty : 1;                // 0x0660 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	uint32_t                                           bPendingPlayerMetaDataRequest : 1;             // 0x0660 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	uint32_t                                           bPendingEntitlementDataRequest : 1;            // 0x0660 (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	uint32_t                                           bTrainingInterrupted : 1;                      // 0x0660 (0x0004) [0x0000000000002000] [0x00000040] (CPF_Transient)
	uint32_t                                           CachedBoosterDisplayed : 1;                    // 0x0660 (0x0004) [0x0000000000002000] [0x00000080] (CPF_Transient)
	uint32_t                                           bSortMovieOpen : 1;                            // 0x0660 (0x0004) [0x0000000000002000] [0x00000100] (CPF_Transient)
	uint32_t                                           bPlayingBlockingAnimation : 1;                 // 0x0660 (0x0004) [0x0000000000002000] [0x00000200] (CPF_Transient)
	class UPoplarCommandMenuDefinition*                CommandMenuDef;                                // 0x0668 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  MainClip;                                      // 0x0670 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CurrentPagePairingsLength;                     // 0x0678 (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FFrontendCombinedBoostInfo>    Boosters;                                      // 0x0680 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FCommandPageData                            Pages[0x4];                                    // 0x0690 (0x00A0) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FPoplarCommandTelemetryEvent                PreviousTelemetryEvent;                        // 0x0730 (0x0050) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UPoplarOnlineClientPlayerService*            ClientPlayerService;                           // 0x0780 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarCommandBackgroundGFxMovie*            BackgroundMovie;                               // 0x0788 (0x0008) [0x0000000000002000] (CPF_Transient)
	ECommandBackgroundState                            CurrentBackgroundState;                        // 0x0790 (0x0001) [0x0000000000002000] (CPF_Transient)
	int32_t                                            DefaultMenuSelection;                          // 0x0794 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CurrentMenuSelection;                          // 0x0798 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UPoplarCommandPageGFxMovie*                  CurrentPageMovie;                              // 0x07A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class TArray<class UPoplarCommandPageGFxMovie*>    CommandPages;                                  // 0x07A8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class APoplarPlayerController*                     PPCOwner;                                      // 0x07B8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarMetagameInventory*                    MetagameInventory;                             // 0x07C0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarGlobals*                              Globals;                                       // 0x07C8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarPlayerNameIdentifierDefinition*       CurrentlySelectedCharacter;                    // 0x07D0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarPlayerClassDefinition*                LoadedCharacter;                               // 0x07D8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarPlayerClassDefinition*                SelectedCharacterClass;                        // 0x07E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarMetaItemPurchaseDialogGFxMovie*       MetaPurchaseDialogMovie;                       // 0x07E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarMetaItemSortDialogGFxMovie*           SortDialogMovie;                               // 0x07F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarNovaTrainingGFxMovie*                 NovaTrainingMovie;                             // 0x07F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FAkPlayingInfo                              CurrentlyPlayingTrainingAudio;                 // 0x0800 (0x0010) [0x0000000000082000] (CPF_Transient | CPF_Component)
	class TArray<class UAkEvent*>                      TrainingAudioQueue;                            // 0x0810 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UGFxObject*                                  ActiveBoosterPanel;                            // 0x0820 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ActiveBoosterPanelInner;                       // 0x0828 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ActiveBoosterTimer;                            // 0x0830 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FDouble                                     CachedBoosterSecondsRemaining;                 // 0x0838 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedBoosterType;                             // 0x0840 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UWillowGFxDialogBox*                         ErrorDialog;                                   // 0x0848 (0x0008) [0x0000000000002000] (CPF_Transient)
	class FString                                      LoadingData;                                   // 0x0850 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      RetrievingStatData;                            // 0x0860 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      AnnouncementDelimiter;                         // 0x0870 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedOnSaleText;                           // 0x0880 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      PercentDiscountText;                           // 0x0890 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      AmountDiscountText;                            // 0x08A0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedFeaturedText;                         // 0x08B0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedOnFreeRotationText;                   // 0x08C0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedNewText;                              // 0x08D0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedBuyText;                              // 0x08E0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FPointer                                    FailedPurchaseItem;                            // 0x08F0 (0x0008) [0x0000000000003000] (CPF_Native | CPF_Transient)
	int32_t                                            BlockingMessageIds[0x3];                       // 0x08F8 (0x000C) [0x0000000000002000] (CPF_Transient)
	uint8_t                                           UnknownData00[0xC];                            // 0x0904 (0x000C) MISSED OFFSET

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCommandGFxMovie");
		}

		return uClassPointer;
	};

	void ReadPlayerDisplayDataComplete(const struct FPlatformUserId& PlayerID, int32_t ServiceResult, class TArray<struct FPlayerDisplayData>& DisplayDataList);
	void RequestProfileImageComplete(bool bWasSuccessful, const struct FUniqueNetId& NetId, class UTexture* ImageTexture);
	void OnAkEventCompleted(class UAkComponent* SourceComponent, class UAkEvent* SourceEvent, int32_t EventInstanceId);
	void HandleHintInput(const struct FPlatformUserId& UserId, const struct FName& HintTag);
	bool HandleInputAxis(const struct FPlatformUserId& UserId, const struct FName& ukey, float Delta, float DeltaTime);
	bool HandleInputKey(const struct FPlatformUserId& InUserId, const struct FName& ukey, EInputEvent uevent);
	bool CharacterPurchaseRedirectDialogClicked(class UWillowGFxDialogBox* DialogBox, const struct FPlatformUserId& UserId);
	bool ErrorDialogClicked(class UWillowGFxDialogBox* DialogBox, const struct FPlatformUserId& UserId);
	void OnRefreshInventoryComplete(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
	void OnPurchaseComplete(const struct FPlatformUserId& UserId, int32_t ServiceResult);
	void ReadPlayersStatsDataComplete(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
	void extOnPageClicked(int32_t PageIndex);
	void eventOnTick();
	void eventOnClose();
	bool eventStart(bool optionalBStartPaused);
};

// Class PoplarGame.PoplarCommandMenuDefinition
// 0x0098 (0x0138 - 0x01D0)
class UPoplarCommandMenuDefinition : public UWillowGFxMovie3DDefinition
{
public:
	class UPoplarNovaTrainingDefinition*               TrainingDef;                                   // 0x0138 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class TArray<struct FPoplarCommandPagePairing>     MainPageDefinitions;                           // 0x0140 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class TArray<struct FPoplarSubPageGroup>           SubPages;                                      // 0x0150 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class TArray<class UPoplarMetaItemPackDefinition*> PackMeshMapping;                               // 0x0160 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class TArray<class UPoplarFactionDefinition*>      FactionOrdering;                               // 0x0170 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UPoplarMetaItemPurchaseDialogGFxMovieDefinition* MetaPurchaseDialogDefinition;                  // 0x0180 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarMetaItemSortDialogGFxMovieDefinition* SortDialogDefinition;                          // 0x0188 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UWillowGFxMovie3DDefinition*                 BackgroundMovieDef;                            // 0x0190 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class USwfMovie*                                   GenericMarketplaceIcon;                        // 0x0198 (0x0008) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bAllowToggleOwnedInMarket : 1;                 // 0x01A0 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	int32_t                                            MinCommandRankForGear;                         // 0x01A4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UPoplarMetaEarnedCurrencyDefinition*         EarnedCurrencyDef;                             // 0x01A8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBoostUIInfoDefinition*                      XPBoostDef;                                    // 0x01B0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBoostUIInfoDefinition*                      LootBoostDef;                                  // 0x01B8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBoostUIInfoDefinition*                      LordPoplarBoostDef;                            // 0x01C0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBoostUIInfoDefinition*                      TrainingPassBoostDef;                          // 0x01C8 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCommandMenuDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCommandPageGFxMovie
// 0x0060 (0x05B0 - 0x0610)
class UPoplarCommandPageGFxMovie : public UWillowGFxMovie3D
{
public:
	class UGFxObject*                                  MainClip;                                      // 0x05B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  TabsClip;                                      // 0x05B8 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CurrentlySelectedTab;                          // 0x05C0 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            MaxNumTabs;                                    // 0x05C4 (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<class FString>                        TabLabels;                                     // 0x05C8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            CurrentSortFlag;                               // 0x05D8 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            AvailableSortingOptions;                       // 0x05DC (0x0004) [0x0000000000002000] (CPF_Transient)
	class APoplarPlayerController*                     PPCOwner;                                      // 0x05E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarMetagameInventory*                    MetagameInventory;                             // 0x05E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarCommandGFxMovie*                      OwningMovie;                                   // 0x05F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            SilenceAudioEventsStack;                       // 0x05F8 (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<class FString>                        PendingURLParamTokens;                         // 0x0600 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCommandPageGFxMovie");
		}

		return uClassPointer;
	};

	void OnPendingRequestsComplete(const struct FPlatformUserId& UserId, int32_t ServiceResult);
	void OnMetagameInitialized(const struct FPlatformUserId& UserId, int32_t ServiceResult);
	void OnInputTypeChanged(bool bIsUsingGamepad);
	bool HandleInputAxis(const struct FPlatformUserId& UserId, const struct FName& ukey, float Delta, float DeltaTime);
	bool HandleInputKey(const struct FPlatformUserId& InUserId, const struct FName& ukey, EInputEvent uevent);
	void extTabButtonPress(int32_t TabIndex);
	bool eventStart(bool optionalBStartPaused);
};

// Class PoplarGame.PoplarCommandArtifactsGFxMovie
// 0x01B0 (0x0610 - 0x07C0)
class UPoplarCommandArtifactsGFxMovie : public UPoplarCommandPageGFxMovie
{
public:
	class FString                                      LocalizedBuyLoadoutLocked;                     // 0x0610 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedPacks;                                // 0x0620 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedLoadoutCount;                         // 0x0630 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      DefaultLoadoutName;                            // 0x0640 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      QuestionmarkText;                              // 0x0650 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedOwnedText;                            // 0x0660 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MaxBankPagesTitle;                             // 0x0670 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MaxBankPagesDescription;                       // 0x0680 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	uint32_t                                           bShowingConsoleKeyboard : 1;                   // 0x0690 (0x0004) [0x0000000000000000] [0x00000001] 
	uint32_t                                           bWaitingToSetupCommandPage : 1;                // 0x0690 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bPlayerLockedOut : 1;                          // 0x0690 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           bPopulatePerksOverMultipleFrames : 1;          // 0x0690 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	uint32_t                                           bBankNeedsMetagameUpdate : 1;                  // 0x0690 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	int32_t                                            TargetSlot;                                    // 0x0694 (0x0004) [0x0000000000000000]               
	int32_t                                            SelectedBankPerkIndex;                         // 0x0698 (0x0004) [0x0000000000000000]               
	int32_t                                            SelectedLoadoutIndex;                          // 0x069C (0x0004) [0x0000000000000000]               
	int32_t                                            SelectedLoadoutPerkIndex;                      // 0x06A0 (0x0004) [0x0000000000000000]               
	int32_t                                            CachedSelectedTab;                             // 0x06A4 (0x0004) [0x0000000000000000]               
	int32_t                                            CachedSelectedPageIndex;                       // 0x06A8 (0x0004) [0x0000000000000000]               
	int32_t                                            LastAudioEventSideboardPackIndex;              // 0x06AC (0x0004) [0x0000000000000000]               
	int32_t                                            LastAudioEventLoadoutIndex;                    // 0x06B0 (0x0004) [0x0000000000000000]               
	int32_t                                            LastAudioEventLoadoutPerkIndex;                // 0x06B4 (0x0004) [0x0000000000000000]               
	class UAkEvent*                                    TransferItemAkEvent;                           // 0x06B8 (0x0008) [0x0000000000000000]               
	int32_t                                            CurrentlyOpenedPerkPackIndex;                  // 0x06C0 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FPointer                                    CurrentlyOpenedPerkPack;                       // 0x06C8 (0x0008) [0x0000000000003000] (CPF_Native | CPF_Transient)
	class TArray<struct FPointer>                      PurchaseablePackList;                          // 0x06D0 (0x0010) [0x0000000000003000] (CPF_Native | CPF_Transient)
	struct FPointer                                    BuyLoadoutItem;                                // 0x06E0 (0x0008) [0x0000000000003000] (CPF_Native | CPF_Transient)
	ECommandArtifactPageState                          ArtifactPageState;                             // 0x06E8 (0x0001) [0x0000000000000000]               
	ECommandArtifactPageRequestState                   ArtifactRequestState;                          // 0x06E9 (0x0001) [0x0000000000000000]               
	ECommandArtifactInitializingState                  ArtifactInitState;                             // 0x06EA (0x0001) [0x0000000000000000]               
	ECommandArtifactSaveLoadoutHandlerType             SaveLoadoutHandlerType;                        // 0x06EB (0x0001) [0x0000000000002000] (CPF_Transient)
	class APerkAttributeContextHelper*                 PerkHelper;                                    // 0x06F0 (0x0008) [0x0000000000000000]               
	struct FPointer                                    BankPage;                                      // 0x06F8 (0x0008) [0x0000000000003000] (CPF_Native | CPF_Transient)
	class TArray<struct FReplicatedPerkItem>           PerkBank;                                      // 0x0700 (0x0010) [0x0000000000502000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<struct FReplicatedMetagameItem>       Sideboard;                                     // 0x0710 (0x0010) [0x0000000000502000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<struct FMetaLoadoutInstance>          Loadouts;                                      // 0x0720 (0x0010) [0x0000000000502000] (CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            CurrentPopulatingBankPerkIndex;                // 0x0730 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            MaxPopulatingBankPerkIndex;                    // 0x0734 (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<class UGFxObject*>                    PopulatingBankPerks;                           // 0x0738 (0x0010) [0x0000000000502000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<int32_t>                              PopulatingBankIndices;                         // 0x0748 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UGFxObject*                                  TopLineGroup;                                  // 0x0758 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  Bank;                                          // 0x0760 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  BankDataProvider;                              // 0x0768 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  BankBackground;                                // 0x0770 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UItemFrameGFxObject*                         ItemCard1Clip;                                 // 0x0778 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UItemFrameGFxObject*                         ItemCard2Clip;                                 // 0x0780 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  PurchasePacksClip;                             // 0x0788 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  LoadoutClip;                                   // 0x0790 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  SelectedLoadoutCell;                           // 0x0798 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  SelectedLoadoutPerkList;                       // 0x07A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  LoadoutCountLabel;                             // 0x07A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UWillowGFxDialogBox*                         ConfirmationDialog;                            // 0x07B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UWillowGFxDialogBox*                         RenameLoadoutDialog;                           // 0x07B8 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCommandArtifactsGFxMovie");
		}

		return uClassPointer;
	};

	bool HandleCannotEquipPerkDialogClose(class UWillowGFxDialogBox* DialogBox, const struct FPlatformUserId& UserId);
	bool HandleRenameLoadoutDialogClose(class UWillowGFxDialogBox* DialogBox, const struct FPlatformUserId& UserId);
	bool HandleSaveLoadoutPrompt(class UWillowGFxDialogBox* DialogBox, const struct FPlatformUserId& UserId);
	void extLoadoutPerkDragCollide(class UGFxObject* Source, class UGFxObject* DropTarget, class UGFxObject* DragObject);
	void extLoadoutPerkDragStop(class UGFxObject* Source, class UGFxObject* DropTarget);
	void extLoadoutPerkDragStart(class UGFxObject* Source, class UGFxObject* DragObject, class UGFxObject* DragManager);
	void extBankPerkDragCollide(class UGFxObject* Source, class UGFxObject* DropTarget, class UGFxObject* DragObject);
	void extBankPerkDragStop(class UGFxObject* Source, class UGFxObject* DropTarget);
	void extBankPerkDragStart(class UGFxObject* Source, class UGFxObject* DragObject, class UGFxObject* DragManager);
	void extLoadoutPerkSelected(int32_t SourceIndex);
	void extLoadoutSelected(int32_t SourceIndex);
	void extPopulateLoadoutPerks(int32_t SourceIndex, const class TArray<class UGFxObject*>& Buttons);
	void OnPurchaseComplete(const struct FPlatformUserId& UserId, int32_t ServiceResult);
	void OnSaveLoadoutRequestComplete(const struct FPlatformUserId& UserId, int32_t ServiceResult);
	void OnInventoryRequestComplete(const struct FPlatformUserId& UserId, int32_t ServiceResult);
	void OnKeyboardInputComplete(bool bSuccessful, bool bWasCancelled, const class FString& KeyboardResults);
	bool HandleInputKey(const struct FPlatformUserId& InUserId, const struct FName& ukey, EInputEvent uevent);
	bool HandleInputAxis(const struct FPlatformUserId& UserId, const struct FName& Key, float Delta, float DeltaTime);
	void extOnPurchasePackSelected(int32_t Index);
	void RequestItemRangeForPurchasePackDataProvider(class UGFxObject* Provider, const class FString& Type, int32_t StartIndex, int32_t EndIndex);
	void RequestItemForPurchasePackDataProvider(class UGFxObject* Provider, const class FString& Type, int32_t Index);
	void RequestItemRangeForDataProvider(class UGFxObject* Provider, const class FString& Type, int32_t StartIndex, int32_t EndIndex);
	void RequestItemForDataProvider(class UGFxObject* Provider, const class FString& Type, int32_t Index);
	void CompleteTransferAllSideboardItems(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId);
	bool CompleteItemInLoadoutSale(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId);
	bool CompleteItemSale(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId);
	void extTriggerFinishPackOpenAudio();
	void extTriggerRevealAudio(int32_t SlotNumber);
	void extTriggerPackExplosionAudio();
	void extOnTabBarLoaded(const class FString& PathToTabBar);
	void extFinishBlockingAnimation();
	void extActivateSelected();
	void extPopulateModData(class UGFxObject* Container, const class TArray<int32_t>& SourceIndices, const class TArray<class UGFxObject*>& Buttons);
	void extTabButtonPress(int32_t TabIndex);
	void extBankPerkSelected(int32_t SourceIndex);
	void extBuyPackSelected(int32_t SourceIndex);
	void extBuyPackActivated(int32_t SourceIndex);
	void extSideboardLootSelected(int32_t SourceIndex);
	void extSideboardPerkSelected(int32_t SourceIndex);
	void extSideboardPackSelected(int32_t SourceIndex);
	void extOnLockedOverlayClicked();
	bool eventStart(bool optionalBStartPaused);
};

// Class PoplarGame.PoplarCommandBattlebornGFxMovie
// 0x0210 (0x0610 - 0x0820)
class UPoplarCommandBattlebornGFxMovie : public UPoplarCommandPageGFxMovie
{
public:
	struct FPointer                                    VfTable_IIStreamingDataEvent;                  // 0x0610 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIHelixParentMovie;                    // 0x0618 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UGFxObject*                                  GridTabClip;                                   // 0x0620 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  CharacterCells;                                // 0x0628 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarCommandBattlebornCharacterGFxObject*  CharacterInfoTabClip;                          // 0x0630 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarCommandBattlebornCharacterChallengesGFxObject* CharacterChallengesClip;                       // 0x0638 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarCommandBattlebornCharacterStatsGFxObject* CharacterStatsClip;                            // 0x0640 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarCommandBattlebornCharacterHelixGFxObject* CharacterHelixClip;                            // 0x0648 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarCommandBattlebornCharacterAppearanceGFxObject* CharacterAppearanceClip;                       // 0x0650 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FPoplarCharacterDetails                     SelectedCharacterInfo;                         // 0x0658 (0x0060) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            SelectedCharacterIndex;                        // 0x06B8 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bCanSelectCharacter : 1;                       // 0x06BC (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bSelectableCharactersNeedRefresh : 1;          // 0x06BC (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bProfileInformationDirty : 1;                  // 0x06BC (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           bMessagePopupOpen : 1;                         // 0x06BC (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	uint32_t                                           bCurrentlyLoadingCharacter : 1;                // 0x06BC (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	class TArray<struct FPoplarCharacterDetails>       SelectableCharacters;                          // 0x06C0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            SelectedCharacterPlayerProfileIndex;           // 0x06D0 (0x0004) [0x0000000000002000] (CPF_Transient)
	class FString                                      DefaultSkinMetaID;                             // 0x06D8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class FString                                      DefaultTauntMetaID;                            // 0x06E8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            CurrentFocusedMessageId;                       // 0x06F8 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              StartingMouseDragPositionX;                    // 0x06FC (0x0004) [0x0000000000002000] (CPF_Transient)
	class FString                                      AnnouncementDelimiter;                         // 0x0700 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      QuestionmarkText;                              // 0x0710 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedHealth;                               // 0x0720 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedPower;                                // 0x0730 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedRange;                                // 0x0740 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedSpeed;                                // 0x0750 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      AmountDiscountText;                            // 0x0760 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      RankUnlock;                                    // 0x0770 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      RankRequired;                                  // 0x0780 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      PurchaseWithEC;                                // 0x0790 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      PurchaseWithECDescription;                     // 0x07A0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CharacterTokenUnlock;                          // 0x07B0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CharacterTokenUnlockDescriptionSingle;         // 0x07C0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CharacterTokenUnlockDescriptionPlural;         // 0x07D0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      ChallengeUnlock;                               // 0x07E0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CharacterRank;                                 // 0x07F0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MasteryPercent;                                // 0x0800 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      StreamingObjectPath;                           // 0x0810 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCommandBattlebornGFxMovie");
		}

		return uClassPointer;
	};

	void OnPendingRequestsComplete(const struct FPlatformUserId& UserId, int32_t ServiceResult);
	void RequestItemRangeForDataProvider(class UGFxObject* Provider, const class FString& Type, int32_t StartIndex, int32_t EndIndex);
	void RequestItemForDataProvider(class UGFxObject* Provider, const class FString& Type, int32_t Index);
	bool HandleInputKey(const struct FPlatformUserId& InUserId, const struct FName& ukey, EInputEvent uevent);
	bool HandleInputAxis(const struct FPlatformUserId& UserId, const struct FName& Key, float Delta, float DeltaTime);
	void extOnStoreItemClicked(int32_t Row, int32_t Column);
	void extOnStorePanelLoaded(class UPoplarShop3StorePanelGFxObject* StorePanelClip);
	void extOnItemPanelLoaded(class UPoplarShop3ItemPanelGFxObject* ItemPanelClip, const class FString& PanelName);
	void extOnBattlebornCharacterAppearanceLoaded(const class FString& TargetPath);
	void extOnBattlebornCharacterHelixLoaded(const class FString& TargetPath);
	void extOnBattlebornCharacterStatsLoaded(const class FString& TargetPath);
	void extOnBattlebornCharacterChallengesLoaded(const class FString& TargetPath);
	void extOnBattlebornCharacterInfoLoaded(const class FString& TargetPath);
	void extStartDragRotateStandin(float PositionX);
	void extStopDragRotateStandin();
	void extDragRotateStandin(float PositionX);
	void extAcceptCurrentSetting();
	void extRequestCharacterSelection(int32_t CellIndex);
	void extRequestItemInfoForCellIndex(int32_t CellIndex, bool optionalBForceRefresh);
	void extOnTabBarLoaded(const class FString& PathToTabBar);
	void extTabButtonPress(int32_t TabIndex);
	bool eventStart(bool optionalBStartPaused);
};

// Class PoplarGame.PoplarCommandCareerGFxMovie
// 0x0060 (0x0610 - 0x0670)
class UPoplarCommandCareerGFxMovie : public UPoplarCommandPageGFxMovie
{
public:
	class FString                                      LocalizedStats;                                // 0x0610 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedChallenges;                           // 0x0620 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedTitles;                               // 0x0630 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      TitleText;                                     // 0x0640 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class UPoplarCommandPlayerStatsPanelGFxObject*     PlayerStatsPanel;                              // 0x0650 (0x0008) [0x0000000000000000]               
	class UPoplarCommandChallengesPanelGFxObject*      ChallengesPanel;                               // 0x0658 (0x0008) [0x0000000000000000]               
	class UPoplarCommandTitleSelectPanelGFxObject*     TitleSelectPanel;                              // 0x0660 (0x0008) [0x0000000000000000]               
	class UPoplarChallengeManager*                     ChallengeManager;                              // 0x0668 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCommandCareerGFxMovie");
		}

		return uClassPointer;
	};

	bool HandleInputKey(const struct FPlatformUserId& InUserId, const struct FName& ukey, EInputEvent uevent);
	void extOnExpandableListUnloaded();
	void extOnExpandableListLoaded(const class FString& TargetPath);
	void extTabButtonPress(int32_t TabIndex);
	void RequestItemRangeForDataProvider(class UGFxObject* Provider, const class FString& Type, int32_t StartIndex, int32_t EndIndex);
	void extOnTitleSelectUnloaded();
	void extOnTitleSelectLoaded(const class FString& TargetPath);
	void extOnCareerChallengeSelected();
	void extOnCareerChallengesUnloaded();
	void extOnCareerChallengesLoaded(const class FString& TargetPath);
	void extOnTabBarLoaded(const class FString& PathToTabBar);
	void extOnPlayerStatsUnloaded();
	void extOnPlayerStatsLoaded(const class FString& TargetPath);
	bool eventStart(bool optionalBStartPaused);
};

// Class PoplarGame.PoplarCommandMarketplaceGFxMovie
// 0x00F0 (0x0610 - 0x0700)
class UPoplarCommandMarketplaceGFxMovie : public UPoplarCommandPageGFxMovie
{
public:
	class FString                                      QuestionmarkText;                              // 0x0610 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedOwnedText;                            // 0x0620 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      ActivateTip;                                   // 0x0630 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class UGFxObject*                                  CurrentlyFocusedGrid;                          // 0x0640 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  MarketplaceCellGrid;                           // 0x0648 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  BuyBoostCellGrid;                              // 0x0650 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  UseBoostCellGrid;                              // 0x0658 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMarketItemInfoGFxObject*                    ItemInfoPanel;                                 // 0x0660 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FPointer                                    SelectedItemInfo;                              // 0x0668 (0x0008) [0x0000000000003000] (CPF_Native | CPF_Transient)
	int32_t                                            SelectedItemIndex;                             // 0x0670 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bGotoPostPurchaseSelectionOnInventoryRequestComplete : 1;// 0x0674 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bExcludeMaxOwnedItems : 1;                     // 0x0674 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bMessagePopupOpen : 1;                         // 0x0674 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	int32_t                                            PostPurchaseSelectedItemIndex;                 // 0x0678 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CurCategoryFlag;                               // 0x067C (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FPointer>                      AllMarketplaceItems;                           // 0x0680 (0x0010) [0x0000000000003000] (CPF_Native | CPF_Transient)
	class TArray<struct FPointer>                      CurrentlyDisplayedMarketplaceItems;            // 0x0690 (0x0010) [0x0000000000003000] (CPF_Native | CPF_Transient)
	class TArray<struct FPointer>                      AllBundles;                                    // 0x06A0 (0x0010) [0x0000000000003000] (CPF_Native | CPF_Transient)
	int32_t                                            CurrentFocusedMessageId;                       // 0x06B0 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              StartingMouseDragPositionX;                    // 0x06B4 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            PostPCPurchaseBackPageIndex;                   // 0x06B8 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            PostPCPurchaseBackTabIndex;                    // 0x06BC (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            PostPCPurchaseBackItemIndex;                   // 0x06C0 (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<class FString>                        PageButtonLocalizedLabels;                     // 0x06C8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class FString>                        SubPageButtonLabels;                           // 0x06D8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            RedeemCodeUiBlockingMessageId;                 // 0x06E8 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UWillowPauseTicker*                          Ticker;                                        // 0x06F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            UseBoostStartIndex;                            // 0x06F8 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            UseBoostEndIndex;                              // 0x06FC (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCommandMarketplaceGFxMovie");
		}

		return uClassPointer;
	};

	void CompleteBoostActivation(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId);
	void RequestItemRangeForDataProvider(class UGFxObject* Provider, const class FString& Type, int32_t StartIndex, int32_t EndIndex);
	void RequestItemForDataProvider(class UGFxObject* Provider, const class FString& Type, int32_t Index);
	void OnPurchaseComplete(const struct FPlatformUserId& UserId, int32_t ServiceResult);
	void OnRedeemCodeUiBlockingMessageDone();
	void OnInputTypeChanged(bool bIsUsingGamepad);
	void OnRefundRequestComplete(const struct FPlatformUserId& UserId, int32_t ServiceResult, struct FPlayerTransactions& ReadPlayerTransactionData);
	void OnAllItemRequestComplete(const struct FPlatformUserId& UserId, int32_t ServiceResult);
	bool HandleInputKey(const struct FPlatformUserId& InUserId, const struct FName& ukey, EInputEvent uevent);
	void extOnTabBarLoaded(const class FString& PathToTabBar);
	void extTabButtonPress(int32_t TabIndex);
	void extAcceptCurrentSetting();
	void extRequestUseBoostSelection(int32_t CellIndex);
	void extRequestItemSelection(int32_t CellIndex);
	void extRequestUseBoostInfoForCellIndex(int32_t CellIndex);
	void extRequestItemInfoForCellIndex(int32_t CellIndex);
	bool eventStart(bool optionalBStartPaused);
};

// Class PoplarGame.PoplarCommandPageGFxMovieDefinition
// 0x0050 (0x0138 - 0x0188)
class UPoplarCommandPageGFxMovieDefinition : public UWillowGFxMovie3DDefinition
{
public:
	class FString                                      URLIdentifier;                                 // 0x0138 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class TArray<class FString>                        SupportedURLParameters;                        // 0x0148 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	uint32_t                                           bHideDisabledTabs : 1;                         // 0x0158 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	class TArray<struct FCommandSubPageData>           SubPages;                                      // 0x0160 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class TArray<struct FTabStatData>                  TabStats;                                      // 0x0170 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	ECommandBackgroundState                            BackgroundStyle;                               // 0x0180 (0x0001) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCommandPageGFxMovieDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCommandPlayerStatsPanelGFxObject
// 0x0188 (0x00D8 - 0x0260)
class UPoplarCommandPlayerStatsPanelGFxObject : public UGFxObject
{
public:
	class UPoplarCommandPageGFxMovie*                  OwningMovie;                                   // 0x00D8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarCommandMenuDefinition*                PoplarCommandMenuDef;                          // 0x00E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            ScrollDirection;                               // 0x00E8 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bIsCareerStats : 1;                            // 0x00EC (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	class FString                                      LocalizedCareerExperienceLabel;                // 0x00F0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedCareerResultsLabel;                   // 0x0100 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedCharacterExperienceLabel;             // 0x0110 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedCharacterResultsLabel;                // 0x0120 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedLevelLabel;                           // 0x0130 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedCharacterLevelLabel;                  // 0x0140 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedCurrentXPLabel;                       // 0x0150 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedNextXPLabel;                          // 0x0160 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedHoursPlayedLabel;                     // 0x0170 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedPerModeLabel;                         // 0x0180 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedMostWinsLabel;                        // 0x0190 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedKillsLabel;                           // 0x01A0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedDeathsLabel;                          // 0x01B0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedAssistsLabel;                         // 0x01C0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedWinsLabel;                            // 0x01D0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedLossesLabel;                          // 0x01E0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedTimeLabel;                            // 0x01F0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedFavoritesLabel;                       // 0x0200 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedPVEMatchPlayedFormattedString;        // 0x0210 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedPVEMatchesPlayedFormattedString;      // 0x0220 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedPVPMatchPlayedFormattedString;        // 0x0230 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedPVPMatchesPlayedFormattedString;      // 0x0240 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedBestsLabel;                           // 0x0250 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCommandPlayerStatsPanelGFxObject");
		}

		return uClassPointer;
	};

	void Init();
};

// Class PoplarGame.PoplarCommandTitleSelectPanelGFxObject
// 0x0040 (0x00D8 - 0x0118)
class UPoplarCommandTitleSelectPanelGFxObject : public UGFxObject
{
public:
	class TArray<struct FCommandTitleDisplayInfo>      MetaTitlesToDisplay;                           // 0x00D8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UPoplarCommandCareerGFxMovie*                OwningMovie;                                   // 0x00E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarMetagameInventory*                    MetagameInventory;                             // 0x00F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarMetaItemMetaTitleDefinition*          CurrentlySelectedTitle;                        // 0x00F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CurrentlySelectedTitleTitleIndex;              // 0x0100 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            PostConfirmTitleIndex;                         // 0x0104 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  TitlesGrid;                                    // 0x0108 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bEntitlementsRequestInFlight : 1;              // 0x0110 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bConfirmationRequestInFlight : 1;              // 0x0110 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCommandTitleSelectPanelGFxObject");
		}

		return uClassPointer;
	};

	bool HandleInputKey(const struct FPlatformUserId& InUserId, const struct FName& ukey, EInputEvent uevent);
	void OnTitleConfirmed();
	void OnEntitlementsRefresh(const struct FPlatformUserId& UserId, int32_t ServiceResult);
	void extRequestTitleInfoForCellIndex(int32_t TitleIndex);
	void extOnTitleClick(int32_t TitleIndex);
	void RequestItemRangeForDataProvider(class UGFxObject* Provider, const class FString& Type, int32_t StartIndex, int32_t EndIndex);
};

// Class PoplarGame.PoplarCommManager
// 0x0018 (0x0108 - 0x0120)
class UPoplarCommManager : public UCommManager
{
public:
	int32_t                                            VoiceRecordUpdateTime;                         // 0x0108 (0x0004) [0x0000000000000000]               
	float                                              VoiceRecordUpdateDelay;                        // 0x010C (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FVoiceRecord>                  VoiceRecords;                                  // 0x0110 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCommManager");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarConsole
// 0x0000 (0x0280 - 0x0280)
class UPoplarConsole : public UConsole
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarConsole");
		}

		return uClassPointer;
	};

	void Initialized();
};

// Class PoplarGame.PoplarConstantBufferParametersActor
// 0x0008 (0x0240 - 0x0248)
class APoplarConstantBufferParametersActor : public AActor
{
public:
	class UPoplarConstantBufferParametersComponent*    Parameters;                                    // 0x0240 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarConstantBufferParametersActor");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarConstantBufferParametersComponent
// 0x0030 (0x0090 - 0x00C0)
class UPoplarConstantBufferParametersComponent : public UActorComponent
{
public:
	struct FColor                                      WorldSilhouetteColor;                          // 0x0090 (0x0004) [0x0000000200000003] (CPF_Edit | CPF_Const)
	float                                              WorldSilhouetteDistance;                       // 0x0094 (0x0004) [0x0000000200000003] (CPF_Edit | CPF_Const)
	float                                              WorldSilhouetteRamp;                           // 0x0098 (0x0004) [0x0000000200000003] (CPF_Edit | CPF_Const)
	float                                              MaxWorldSilhouetteBrightness;                  // 0x009C (0x0004) [0x0000000200000003] (CPF_Edit | CPF_Const)
	float                                              MinWorldSilhouetteBrightness;                  // 0x00A0 (0x0004) [0x0000000200000003] (CPF_Edit | CPF_Const)
	float                                              WorldSilhouetteDesaturation;                   // 0x00A4 (0x0004) [0x0000000200000003] (CPF_Edit | CPF_Const)
	float                                              WorldSilhouetteBrightness;                     // 0x00A8 (0x0004) [0x0000000200000003] (CPF_Edit | CPF_Const)
	struct FVector                                     WindDirection;                                 // 0x00AC (0x000C) [0x0000000200000003] (CPF_Edit | CPF_Const)
	float                                              WindOscillationRate;                           // 0x00B8 (0x0004) [0x0000000200000003] (CPF_Edit | CPF_Const)
	float                                              WindOscillationMagnitude;                      // 0x00BC (0x0004) [0x0000000200000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarConstantBufferParametersComponent");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarContentSkinDefinition
// 0x0050 (0x0058 - 0x00A8)
class UPoplarContentSkinDefinition : public UGBXDefinition
{
public:
	struct FPointer                                    VfTable_IIBodyProvider;                        // 0x0058 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UObject*                                     Content;                                       // 0x0060 (0x0008) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
	struct FName                                       ContentName;                                   // 0x0068 (0x0008) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
	class TArray<class UPoplarSkinData*>               Data;                                          // 0x0070 (0x0010) [0x000000000440000B] (CPF_Edit | CPF_Const | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UBodyProviderDefinition*                     BodyProviderDefinition;                        // 0x0080 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkEvent*                                    SpawnSoundOverride;                            // 0x0088 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UWillowOnDemandPackageMarker*                LinkedOnDemandPackage;                         // 0x0090 (0x0008) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
	class UClass*                                      BodyConsumerClass;                             // 0x0098 (0x0008) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
	class UPoplarContentSkinDefinition*                ParentContent;                                 // 0x00A0 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarContentSkinDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarControlledMoveDefinition
// 0x0340 (0x0058 - 0x0398)
class UPoplarControlledMoveDefinition : public UGBXDefinition
{
public:
	struct FPointer                                    VfTable_IIBehaviorProvider;                    // 0x0058 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FAttributeInitializationData                Duration;                                      // 0x0060 (0x0020) [0x0000000000000001] (CPF_Edit)    
	class TArray<struct FTimedCMBehaviorEvent>         TimedBehaviorEvents;                           // 0x0080 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	struct FAttributeInitializationData                Speed;                                         // 0x0090 (0x0020) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bIsSpeedScaleNormalized : 1;                   // 0x00B0 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bEaseInSpeedConstraints : 1;                   // 0x00B0 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	uint32_t                                           bMoveOnGround : 1;                             // 0x00B0 (0x0004) [0x0000000020000002] [0x00000004] (CPF_Const | CPF_Deprecated)
	uint32_t                                           bOverridePawnVelocity : 1;                     // 0x00B0 (0x0004) [0x0000000000000003] [0x00000008] (CPF_Edit | CPF_Const)
	uint32_t                                           bRestorePawnPhysics : 1;                       // 0x00B0 (0x0004) [0x0000000000000003] [0x00000010] (CPF_Edit | CPF_Const)
	uint32_t                                           bZeroVelocityAtEnd : 1;                        // 0x00B0 (0x0004) [0x0000000000000003] [0x00000020] (CPF_Edit | CPF_Const)
	uint32_t                                           bApplyMoveWhenFalling : 1;                     // 0x00B0 (0x0004) [0x0000000000000003] [0x00000040] (CPF_Edit | CPF_Const)
	uint32_t                                           bUpdatePawnRotationYaw : 1;                    // 0x00B0 (0x0004) [0x0000000000000003] [0x00000080] (CPF_Edit | CPF_Const)
	uint32_t                                           bUpdatePawnRotationPitch : 1;                  // 0x00B0 (0x0004) [0x0000000000000003] [0x00000100] (CPF_Edit | CPF_Const)
	uint32_t                                           bStopWhenTargetReached : 1;                    // 0x00B0 (0x0004) [0x0000000000000003] [0x00000200] (CPF_Edit | CPF_Const)
	uint32_t                                           bStopOnLanding : 1;                            // 0x00B0 (0x0004) [0x0000000000000003] [0x00000400] (CPF_Edit | CPF_Const)
	uint32_t                                           bEnableFlightControls : 1;                     // 0x00B0 (0x0004) [0x0000000000000003] [0x00000800] (CPF_Edit | CPF_Const)
	uint32_t                                           bLimitedFlightLook : 1;                        // 0x00B0 (0x0004) [0x0000000000000003] [0x00001000] (CPF_Edit | CPF_Const)
	uint32_t                                           bUseMovingLauchDirection : 1;                  // 0x00B0 (0x0004) [0x0000000000000003] [0x00002000] (CPF_Edit | CPF_Const)
	uint32_t                                           bDirectionRelativeToTarget : 1;                // 0x00B0 (0x0004) [0x0000000000000003] [0x00004000] (CPF_Edit | CPF_Const)
	uint32_t                                           bOffsetLocationByCollisionRadius : 1;          // 0x00B0 (0x0004) [0x0000000000000003] [0x00008000] (CPF_Edit | CPF_Const)
	uint32_t                                           bOffsetLocationByTargetCollisionRadius : 1;    // 0x00B0 (0x0004) [0x0000000000000003] [0x00010000] (CPF_Edit | CPF_Const)
	uint32_t                                           bLeap : 1;                                     // 0x00B0 (0x0004) [0x0000000000000003] [0x00020000] (CPF_Edit | CPF_Const)
	uint32_t                                           bAlwaysCollideWithTarget : 1;                  // 0x00B0 (0x0004) [0x0000000000000003] [0x00040000] (CPF_Edit | CPF_Const)
	uint32_t                                           bTeleport : 1;                                 // 0x00B0 (0x0004) [0x0000000000000003] [0x00080000] (CPF_Edit | CPF_Const)
	uint32_t                                           bRestrictTeleportToGround : 1;                 // 0x00B0 (0x0004) [0x0000000000000003] [0x00100000] (CPF_Edit | CPF_Const)
	uint32_t                                           bDisableLookInput : 1;                         // 0x00B0 (0x0004) [0x0000000000000003] [0x00200000] (CPF_Edit | CPF_Const)
	uint32_t                                           bDisableMoveInput : 1;                         // 0x00B0 (0x0004) [0x0000000000000003] [0x00400000] (CPF_Edit | CPF_Const)
	uint32_t                                           bEnableTargetControls : 1;                     // 0x00B0 (0x0004) [0x0000000000000003] [0x00800000] (CPF_Edit | CPF_Const)
	uint32_t                                           bTrackTarget : 1;                              // 0x00B0 (0x0004) [0x0000000000000003] [0x01000000] (CPF_Edit | CPF_Const)
	uint32_t                                           bStopAI : 1;                                   // 0x00B0 (0x0004) [0x0000000000000003] [0x02000000] (CPF_Edit | CPF_Const)
	uint32_t                                           bGodMode : 1;                                  // 0x00B0 (0x0004) [0x0000000000000003] [0x04000000] (CPF_Edit | CPF_Const)
	uint32_t                                           bUpdateCameraRotationYaw : 1;                  // 0x00B0 (0x0004) [0x0000000000000003] [0x08000000] (CPF_Edit | CPF_Const)
	uint32_t                                           bUpdateCameraRotationPitch : 1;                // 0x00B0 (0x0004) [0x0000000000000003] [0x10000000] (CPF_Edit | CPF_Const)
	uint32_t                                           bCancelActionSkillsIfPlayerNotInstigator : 1;  // 0x00B0 (0x0004) [0x0000000000000003] [0x20000000] (CPF_Edit | CPF_Const)
	struct FInterpCurveFloat                           SpeedScaleCurve;                               // 0x00B8 (0x0018) [0x0000000004400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInline)
	struct FAttributeInitializationData                AirControl;                                    // 0x00D0 (0x0020) [0x0000000000000001] (CPF_Edit)    
	struct FAttributeInitializationData                GravityScale;                                  // 0x00F0 (0x0020) [0x0000000000000001] (CPF_Edit)    
	ECMMovementType                                    MovementType;                                  // 0x0110 (0x0001) [0x0000000000000001] (CPF_Edit)    
	ECMMoveFBControlMode                               FlightMoveFBControlMode;                       // 0x0111 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	ECMMoveLRControlMode                               FlightMoveLRControlMode;                       // 0x0112 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint8_t                                            FixUpVersion;                                  // 0x0113 (0x0001) [0x0000000000000002] (CPF_Const)   
	float                                              PawnRotationYawOffset;                         // 0x0114 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              PawnRotationPitchOffset;                       // 0x0118 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              TargetReached2DThreshold;                      // 0x011C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              TargetReachedUpThreshold;                      // 0x0120 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              TargetReachedDownThreshold;                    // 0x0124 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FAttributeInitializationData                FlightMoveLRRate;                              // 0x0128 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                FlightMoveForwardRate;                         // 0x0148 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                FlightMoveBackRate;                            // 0x0168 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                FlightLookTurnScale;                           // 0x0188 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                FlightLookUpScale;                             // 0x01A8 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                FlightLookDownScale;                           // 0x01C8 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                FlightDropRate;                                // 0x01E8 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                FlightMaxDiveAngle;                            // 0x0208 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                FlightMaxClimbAngle;                           // 0x0228 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FRelativeDirectionData                      LaunchDirection;                               // 0x0248 (0x0038) [0x0000000000000001] (CPF_Edit)    
	struct FRelativeDirectionData                      MovingLaunchDirection;                         // 0x0280 (0x0038) [0x0000000000000001] (CPF_Edit)    
	struct FAttributeInitializationData                LaunchAngle;                                   // 0x02B8 (0x0020) [0x0000000000000001] (CPF_Edit)    
	float                                              LocationOffset;                                // 0x02D8 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              LeapApexAngle;                                 // 0x02DC (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              LeapStartLandingOffsetTime;                    // 0x02E0 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UWillowAnimDefinition*                       StartSMD;                                      // 0x02E8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UWillowAnimDefinition*                       StopSMD;                                       // 0x02F0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UWillowAnimDefinition*                       LeapApexSMD;                                   // 0x02F8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UWillowAnimDefinition*                       LeapLandingSMD;                                // 0x0300 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              HitWallAngle;                                  // 0x0308 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxStepHeight;                                 // 0x030C (0x0004) [0x0000000000000001] (CPF_Edit)    
	class TArray<struct FCMUnitCollisionFilter>        DisableCollisionWithUnits;                     // 0x0310 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	float                                              TeleportOffset;                                // 0x0320 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FAttributeInitializationData                LimitedTargetControlDistance;                  // 0x0328 (0x0020) [0x0000000000000001] (CPF_Edit)    
	struct FAttributeInitializationData                TargetControlVelocity;                         // 0x0348 (0x0020) [0x0000000000000001] (CPF_Edit)    
	struct FAttributeInitializationData                TargetControlDelay;                            // 0x0368 (0x0020) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxTrackingCorrectionAngle;                    // 0x0388 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              TrackingVelocity;                              // 0x038C (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UBehaviorProviderDefinition*                 BehaviorProviderDefinition;                    // 0x0390 (0x0008) [0x0000000000000002] (CPF_Const)   

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarControlledMoveDefinition");
		}

		return uClassPointer;
	};

	void OnTargetLocationChanged(const struct FVector& TargetLocation, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnStartLeapLanding(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnReachedLeapApex(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnHitWorld(class AActor* OtherActor, const struct FVector& HitNormal, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnHitTargetable(class AActor* OtherActor, const struct FVector& HitNormal, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnTimedEvent(const struct FName& SpecializedEventName, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnServerStop(bool bInterrupted, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnServerStart(float MoveDuration, class AActor* TargetActor, class AActor* Instigator, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnStop(bool bInterrupted, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnStart(float MoveDuration, class AActor* TargetActor, struct FBehaviorConsumerHandle& ConsumerHandle);
};

// Class PoplarGame.PoplarControllerInputBindingGFxMovie
// 0x0100 (0x0450 - 0x0550)
class UPoplarControllerInputBindingGFxMovie : public UWillowGFxMovie
{
public:
	class UPoplarOptionsGFxMovie*                      MyOptionsMovie;                                // 0x0450 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bIsInWarnExitMode : 1;                         // 0x0458 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bIsInCustomizeMode : 1;                        // 0x0458 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bIsWaitingForFirstButton : 1;                  // 0x0458 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           bIsWaitingForSecondButton : 1;                 // 0x0458 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	uint32_t                                           bIsUsingCustomBindings : 1;                    // 0x0458 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	uint32_t                                           bDisableAllCustomization : 1;                  // 0x0458 (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	uint32_t                                           bShowArrows : 1;                               // 0x0458 (0x0004) [0x0000000000002000] [0x00000040] (CPF_Transient)
	int32_t                                            CurrentSelectedPresetIndex;                    // 0x045C (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CustomPresetIndex;                             // 0x0460 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            NonCustomizedPresetIndex;                      // 0x0464 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FName                                       FirstButtonName;                               // 0x0468 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FName                                       SecondButtonName;                              // 0x0470 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            RemappedButtonIndexes[0x12];                   // 0x0478 (0x0048) [0x0000000000002000] (CPF_Transient)
	class FString                                      PlatformFrames[0x4];                           // 0x04C0 (0x0040) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FName>                         KeyCaptionList;                                // 0x0500 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<struct FName>                         ControllerPresetTags;                          // 0x0510 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class FString>                        ControllerPresetNames;                         // 0x0520 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UPoplarControllerInputBindingGFxObject*      InputBindingObj;                               // 0x0530 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UWillowPlayerInput*                          WPI;                                           // 0x0538 (0x0008) [0x0000000000002000] (CPF_Transient)
	class TArray<class UGFxObject*>                    KeyTextFieldList;                              // 0x0540 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarControllerInputBindingGFxMovie");
		}

		return uClassPointer;
	};

	void ProcessSecondButton(const struct FName& ukey, int32_t ButtonIndex);
	void ProcessFirstButton(const struct FName& ukey, int32_t ButtonIndex);
	int32_t GetIndexForButton(const struct FName& ButtonName);
	bool OnCustomizeModeClick(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId);
	void StopCustomizeMode();
	void StartCustomizeMode();
	bool OnExitWarnClick(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId);
	void DisplayExitWarnDialog();
	bool OnControllerClobberClick(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId);
	class FString EncodeButton(const class FString& InButtonName);
	class FString CreateControllerRebindingString();
	void UpdateNoncustomizablePresetCaptions();
	void UpdatePresetCaptions(const struct FName& PresetTag, const class FString& PresetName, bool bIsCustomPresetIndex, int32_t optionalHightlightCaptionIndex);
	void AddControllerPresets();
	void UpdateSelection();
	void extOnMoreRightClick();
	void extOnMoreLeftClick();
	void SetPresetHeaderText(const class FString& Header);
	void HandleHintInput(const struct FPlatformUserId& InUserId, const struct FName& HintTag);
	void PopulateHintBar();
	bool HandleInputKey(const struct FPlatformUserId& InUserId, const struct FName& ukey, EInputEvent uevent);
	void extOnLoad(const class FString& Path);
	void eventOnClose();
	bool Start(bool optionalStartPaused);
};

// Class PoplarGame.PoplarControllerInputBindingGFxMovieDefinition
// 0x0000 (0x0100 - 0x0100)
class UPoplarControllerInputBindingGFxMovieDefinition : public UGFxMovieDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarControllerInputBindingGFxMovieDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarControllerInputBindingGFxObject
// 0x0000 (0x00D8 - 0x00D8)
class UPoplarControllerInputBindingGFxObject : public UGFxObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarControllerInputBindingGFxObject");
		}

		return uClassPointer;
	};

	void SetHeader(const class FString& Header);
	void SetArrowsVisible(bool bVisible);
	void SetCustomizeTip(const class FString& Label);
	void SetControllerMode(const class FString& Label);
	void SetPresetHeaderText(const class FString& Text);
	void Init();
};

// Class PoplarGame.PoplarCreditRewardsDefinition
// 0x0198 (0x0058 - 0x01F0)
class UPoplarCreditRewardsDefinition : public UGBXDefinition
{
public:
	struct FAttributeInitializationData                FirstBloodCreditBonus;                         // 0x0058 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              DistanceToAwardCredits;                        // 0x0078 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FTeamCreditsTypeRewardFormula               KillerAndAssisterCreditsTypeFormula;           // 0x0080 (0x0050) [0x0000000000000001] (CPF_Edit)    
	struct FTeamCreditsTypeRewardFormula               DistanceBasedCreditsTypeFormula;               // 0x00D0 (0x0050) [0x0000000000000001] (CPF_Edit)    
	struct FAttributeInitializationData                KillStreakBonus;                               // 0x0120 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                BountyBonus;                                   // 0x0140 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              BountySharesForKiller;                         // 0x0160 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              BountySharesForAssist;                         // 0x0164 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bCreditsTrickleEnabled : 1;                    // 0x0168 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                CreditsTrickleFrequencySeconds;                // 0x0170 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                CreditsTrickleAmount;                          // 0x0190 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                StartingTeamTrickleFlatBonusCredits;           // 0x01B0 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                StartingCreditsAmount;                         // 0x01D0 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCreditRewardsDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarCreditsPipeline
// 0x0080 (0x0180 - 0x0200)
class UPoplarCreditsPipeline : public UCurrencyPipeline
{
public:
	class APoplarGameInfo*                             PGI;                                           // 0x0180 (0x0008) [0x0000000000000000]               
	class APoplarGameInfoConstruct*                    PGIC;                                          // 0x0188 (0x0008) [0x0000000000000000]               
	class UPoplarGlobalsDefinition*                    PoplarGlobalsDef;                              // 0x0190 (0x0008) [0x0000000000000000]               
	class AController*                                 KilledPlayer;                                  // 0x0198 (0x0008) [0x0000000000000000]               
	class UIUnit*                                      InstigatorUnit_Object;                         // 0x01A0 (0x0008) [0x0000000000000000] 
	class UIUnit*                                      InstigatorUnit_Interface;                      // 0x01A8 (0x0008) [0x0000000000000000]               
	struct FCreditsProviderData                        CreditsProvData;                               // 0x01B0 (0x0028) [0x0000000000000000]               
	class UPoplarCreditRewardsDefinition*              CreditRewardsDef;                              // 0x01D8 (0x0008) [0x0000000000000000]               
	class UPoplarRewardMessageDefinition*              GenericReasonMessage;                          // 0x01E0 (0x0008) [0x0000000000000000]               
	uint32_t                                           bDisplayCredits : 1;                           // 0x01E8 (0x0004) [0x0000000000000000] [0x00000001] 
	struct FVector                                     CreditsDisplayWorldLocation;                   // 0x01EC (0x000C) [0x0000000000000000]               
	ECreditsType                                       GenericCreditsRewardType;                      // 0x01F8 (0x0001) [0x0000000000000000]               

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCreditsPipeline");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarDamageArea
// 0x00A0 (0x0308 - 0x03A8)
class APoplarDamageArea : public AWillowDamageArea
{
public:
	class UPoplarActionDefinition*                     TrackedActionDefinition;                       // 0x0308 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarSkillDefinition*                      TrackedSkillDefinition;                        // 0x0310 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FDamageTags                                 DamageTags;                                    // 0x0318 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                LifestealFormula;                              // 0x0320 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                ShieldstealFormula;                            // 0x0340 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                ShieldPenetrationFormula;                      // 0x0360 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                DamageFrequency;                               // 0x0380 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UGearboxCollisionGridComponent*              CollisionGridComponent;                        // 0x03A0 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarDamageArea");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarDamageFilter
// 0x0008 (0x0078 - 0x0080)
class UPoplarDamageFilter : public UDamageFilter
{
public:
	EDamageTagTest                                     DamageTagsTest;                                // 0x0078 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FDamageTags                                 DamageTags;                                    // 0x007C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarDamageFilter");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarDamagePipeline
// 0x01A8 (0x0318 - 0x04C0)
class UPoplarDamagePipeline : public UDamagePipeline
{
public:
	class APoplarInteractiveObject*                    TargetIO;                                      // 0x0318 (0x0008) [0x0000000000000000]               
	class APoplarPawn*                                 TargetPoplarPawn;                              // 0x0320 (0x0008) [0x0000000000000000]               
	class APoplarPlayerReplicationInfo*                TargetPPRI;                                    // 0x0328 (0x0008) [0x0000000000000000]               
	class APoplarStatReplicationInfo*                  TargetSRI;                                     // 0x0330 (0x0008) [0x0000000000000000]               
	class UIDamageable*                                TargetDamageableInterface_Object;              // 0x0338 (0x0008) [0x0000000000000000] 
	class UIDamageable*                                TargetDamageableInterface_Interface;           // 0x0340 (0x0008) [0x0000000000000000]               
	class UIDamageBlocker*                             TargetBlockerInterface_Object;                 // 0x0348 (0x0008) [0x0000000000000000] 
	class UIDamageBlocker*                             TargetBlockerInterface_Interface;              // 0x0350 (0x0008) [0x0000000000000000]               
	class UIProjectileReflector*                       TargetReflectableInterface_Object;             // 0x0358 (0x0008) [0x0000000000000000] 
	class UIProjectileReflector*                       TargetReflectableInterface_Interface;          // 0x0360 (0x0008) [0x0000000000000000]               
	class UITargetable*                                TargetTargetableInterface_Object;              // 0x0368 (0x0008) [0x0000000000000000] 
	class UITargetable*                                TargetTargetableInterface_Interface;           // 0x0370 (0x0008) [0x0000000000000000]               
	class UICombatant*                                 TargetCombatantInterface_Object;               // 0x0378 (0x0008) [0x0000000000000000] 
	class UICombatant*                                 TargetCombatantInterface_Interface;            // 0x0380 (0x0008) [0x0000000000000000]               
	class UIBuffable*                                  TargetBuffableInterface_Object;                // 0x0388 (0x0008) [0x0000000000000000] 
	class UIBuffable*                                  TargetBuffableInterface_Interface;             // 0x0390 (0x0008) [0x0000000000000000]               
	class UIUnit*                                      TargetUnitInterface_Object;                    // 0x0398 (0x0008) [0x0000000000000000] 
	class UIUnit*                                      TargetUnitInterface_Interface;                 // 0x03A0 (0x0008) [0x0000000000000000]               
	class APoplarPawn*                                 InstigatorPoplarPawn;                          // 0x03A8 (0x0008) [0x0000000000000000]               
	class APoplarPlayerController*                     InstigatorPPC;                                 // 0x03B0 (0x0008) [0x0000000000000000]               
	class APoplarPlayerStateInfo*                      InstigatorPSI;                                 // 0x03B8 (0x0008) [0x0000000000000000]               
	class APoplarPlayerReplicationInfo*                InstigatorPPRI;                                // 0x03C0 (0x0008) [0x0000000000000000]               
	class APoplarStatReplicationInfo*                  InstigatorSRI;                                 // 0x03C8 (0x0008) [0x0000000000000000]               
	class UIProjectileReflector*                       InstigatorReflectableInterface_Object;         // 0x03D0 (0x0008) [0x0000000000000000] 
	class UIProjectileReflector*                       InstigatorReflectableInterface_Interface;      // 0x03D8 (0x0008) [0x0000000000000000]               
	class UITargetable*                                InstigatorTargetableInterface_Object;          // 0x03E0 (0x0008) [0x0000000000000000] 
	class UITargetable*                                InstigatorTargetableInterface_Interface;       // 0x03E8 (0x0008) [0x0000000000000000]               
	class UICombatant*                                 InstigatorCombatantInterface_Object;           // 0x03F0 (0x0008) [0x0000000000000000] 
	class UICombatant*                                 InstigatorCombatantInterface_Interface;        // 0x03F8 (0x0008) [0x0000000000000000]               
	class UIBuffable*                                  InstigatorBuffableInterface_Object;            // 0x0400 (0x0008) [0x0000000000000000] 
	class UIBuffable*                                  InstigatorBuffableInterface_Interface;         // 0x0408 (0x0008) [0x0000000000000000]               
	class UIUnit*                                      InstigatorUnitInterface_Object;                // 0x0410 (0x0008) [0x0000000000000000] 
	class UIUnit*                                      InstigatorUnitInterface_Interface;             // 0x0418 (0x0008) [0x0000000000000000]               
	class UIHitRegionConsumer*                         HitRegionConsumerInterface_Object;             // 0x0420 (0x0008) [0x0000000000000000] 
	class UIHitRegionConsumer*                         HitRegionConsumerInterface_Interface;          // 0x0428 (0x0008) [0x0000000000000000]               
	class UPoplarBodyHitRegionDefinition*              HitRegionDef;                                  // 0x0430 (0x0008) [0x0000000000000000]               
	struct FName                                       HitRegionModifierName;                         // 0x0438 (0x0008) [0x0000000000000000]               
	class TArray<class UPoplarBodyHitRegionDefinition*> TakingRadiusDamageOnHitRegions;                // 0x0440 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UWillowDamageTypeDefinition*                 WillowDamageTypeDef;                           // 0x0450 (0x0008) [0x0000000000000000]               
	class UWillowImpactDefinition*                     WillowImpactDefinition;                        // 0x0458 (0x0008) [0x0000000000000000]               
	class UDamageReceiverComponent*                    DamageReceiverComponent;                       // 0x0460 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	struct FTraceHitInfo                               HitInfo;                                       // 0x0468 (0x0028) [0x0000000000080000] (CPF_Component)
	class UPoplarActionDefinition*                     ActionDefinition;                              // 0x0490 (0x0008) [0x0000000000000000]               
	class UPoplarSkillDefinition*                      DamagingSkillDefinition;                       // 0x0498 (0x0008) [0x0000000000000000]               
	class UStatDefinition*                             HitStatDefinition;                             // 0x04A0 (0x0008) [0x0000000000000000]               
	float                                              ResistDamageReductionThreshold;                // 0x04A8 (0x0004) [0x0000000000000000]               
	uint32_t                                           bInstantKill : 1;                              // 0x04AC (0x0004) [0x0000000000000000] [0x00000001] 
	uint32_t                                           bConfiguredForLifesteal : 1;                   // 0x04AC (0x0004) [0x0000000000000000] [0x00000002] 
	uint32_t                                           bHasDamageOverTimeFlag : 1;                    // 0x04AC (0x0004) [0x0000000000000000] [0x00000004] 
	float                                              LifestealPercentageFromDamageSource;           // 0x04B0 (0x0004) [0x0000000000000000]               
	float                                              ShieldstealPercentageFromDamageSource;         // 0x04B4 (0x0004) [0x0000000000000000]               
	float                                              ShieldPenetrationPercentageFromDamageSource;   // 0x04B8 (0x0004) [0x0000000000000000]               

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarDamagePipeline");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarDangerComponent
// 0x0030 (0x03B0 - 0x03E0)
class UPoplarDangerComponent : public UGBXDangerComponent
{
public:
	struct FPmtData                                    PmtData;                                       // 0x03B0 (0x0028) [0x0000000000003000] (CPF_Native | CPF_Transient)
	uint8_t                                           UnknownData00[0x8];                            // 0x03D8 (0x0008) MISSED OFFSET

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarDangerComponent");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarDataPlatform
// 0x0008 (0x0060 - 0x0068)
class UPoplarDataPlatform : public UDataPlatform
{
public:
	uint32_t                                           bStatsDirty : 1;                               // 0x0060 (0x0004) [0x0000000000000000] [0x00000001] 

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarDataPlatform");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarDataTag
// 0x0000 (0x0058 - 0x0058)
class UPoplarDataTag : public UGBXDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarDataTag");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarUnitTypeTag
// 0x0000 (0x0058 - 0x0058)
class UPoplarUnitTypeTag : public UPoplarDataTag
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarUnitTypeTag");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarDedicatedServerStatManager
// 0x0050 (0x0058 - 0x00A8)
class UPoplarDedicatedServerStatManager : public UObject
{
public:
	float                                              ReportTickRate;                                // 0x0058 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              LastReportedTickTime;                          // 0x005C (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              StatWriteRate;                                 // 0x0060 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              LastStatsWrittenTime;                          // 0x0064 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            StatsVersion;                                  // 0x0068 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           ClearRecordedStats : 1;                        // 0x006C (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           PrintStatDataToLogs : 1;                       // 0x006C (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	struct FPointer                                    FileAr;                                        // 0x0070 (0x0008) [0x0000000000003000] (CPF_Native | CPF_Transient)
	class TArray<struct FPointer>                      StatEntries;                                   // 0x0078 (0x0010) [0x0000000000003000] (CPF_Native | CPF_Transient)
	class TArray<struct FPointer>                      MostRecentStatEntries;                         // 0x0088 (0x0010) [0x0000000000003000] (CPF_Native | CPF_Transient)
	class TArray<struct FStatCallbackEntry>            StatCallbacks;                                 // 0x0098 (0x0010) [0x0000000000003000] (CPF_Native | CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarDedicatedServerStatManager");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarDenSpawner
// 0x0060 (0x04A0 - 0x0500)
class APoplarDenSpawner : public ADenSpawner
{
public:
	struct FPointer                                    VfTable_IIPoplarSpawner;                       // 0x04A0 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIBehaviorConsumer;                    // 0x04A8 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIMinimapObject;                       // 0x04B0 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	int32_t                                            SpawnerIndex;                                  // 0x04B8 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarSpawnerTypeDefinition*                SpawnerTypeDefinition;                         // 0x04C0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       TeamDefinition;                                // 0x04C8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarLaneDefinition*                       LaneDefinition;                                // 0x04D0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarUnitTypeDefinition*                   UnitTypeOverride;                              // 0x04D8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FBehaviorConsumerHandle                     ConsumerHandle;                                // 0x04E0 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UPoplarMinimapIconDefinition*                SpecialIconDefinition;                         // 0x04E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            ExpLevel;                                      // 0x04F0 (0x0004) [0x4000000000002000] (CPF_Transient)
	class UPoplarSpawnerDebugRenderingComponent*       RenderComponent;                               // 0x04F8 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarDenSpawner");
		}

		return uClassPointer;
	};

	void NotifyDenMemberKilled(class AActor* KilledDenMember, class AController* Killer);
	void InitializeConsumerAfterGameInfo();
	void eventPostBeginPlay();
	class UPawnAllegiance* GetAllegiance();
	struct FBehaviorConsumerHandle GetBehaviorConsumerHandle();
	void SetSpawnerSpawnLevel(int32_t NewSpawnLevel);
	int32_t GetSpawnerSpawnLevel();
	void SetSpawnerExpLevel(int32_t NewLevel);
	int32_t GetSpawnerExpLevel();
	void SetSpawnerIndex(int32_t NewIndex);
	int32_t GetSpawnerIndex();
	void NotifyLaneEvent(const struct FName& EventName, class UObject* OtherObject, class AController* EventInstigator, class UPoplarTeamDefinition* InstigatorTeam);
	bool IsActivated();
	void GrantSpawnPermissionIfActivated(bool PermissionGranted);
	void ActivateSpawner(bool bShouldActivate);
	void SetLaneDefinition(class UPoplarLaneDefinition* NewLaneDefinition);
	class UPoplarLaneDefinition* GetLaneDefinition();
	void SetPoplarTeamDefinition(class UPoplarTeamDefinition* NewTeamDefinition);
	class UPoplarTeamDefinition* GetPoplarTeamDefinition();
	class UPoplarSpawnerTypeDefinition* GetSpawnerTypeDefinition();
};

// Class PoplarGame.PoplarBuildNodeSpawner
// 0x0070 (0x0500 - 0x0570)
class APoplarBuildNodeSpawner : public APoplarDenSpawner
{
public:
	struct FPointer                                    VfTable_IIGBXNavMeshObstacle;                  // 0x0500 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class USpawnDefinition*                            BuildNodeIOSpawnDefinition;                    // 0x0508 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarBuildableSetDefinition*               BuildNodeSet;                                  // 0x0510 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class APhysicsJumpNode*                            JumpNode;                                      // 0x0518 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              PerMinionSpawnDelay;                           // 0x0520 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int32_t                                            IndexOfBuildableToSpawnOnInitialization;       // 0x0524 (0x0004) [0x0000000000000000]               
	int32_t                                            UpgradeLevelOfBuildableToSpawnOnInitialization;// 0x0528 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UPoplarTeamDefinition*                       BuildableToSpawnTeamDefinition;                // 0x0530 (0x0008) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bUseTeamSpecificOrientations : 1;              // 0x0538 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	uint32_t                                           bSpawnedAIShouldBeLaneAware : 1;               // 0x0538 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bShouldBeStructure : 1;                        // 0x0538 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           bHasSpawnedBuildNode : 1;                      // 0x0538 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	class TArray<struct FBuildableOrientationData>     TeamOrientations;                              // 0x0540 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class APoplarBuildNodeObject*                      BuildNodeIO;                                   // 0x0550 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CurrentBuildableIndex;                         // 0x0558 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CurrentUpgradeLevel;                           // 0x055C (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CurrentMinionWaveIndex;                        // 0x0560 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CurrentWaveSize;                               // 0x0564 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            BuildNodeSpawnPointIndex;                      // 0x0568 (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarBuildNodeSpawner");
		}

		return uClassPointer;
	};

	class AActor* GetInitialDestination();
	EInitialActionType GetInitialAction();
	void RespawnKilledActors(float PercentageOfKilledActorsToRespawn);
	void DoSpawning(class USpawnMaster* SpawnMaster);
};

// Class PoplarGame.PoplarDialogNameTag
// 0x0000 (0x00D0 - 0x00D0)
class UPoplarDialogNameTag : public UWillowDialogNameTag
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarDialogNameTag");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarDodgeComponent
// 0x0008 (0x00F8 - 0x0100)
class UPoplarDodgeComponent : public UWillowDodgeComponent
{
public:
	class UPoplarDodgeDefinition*                      PoplarDodgeDef;                                // 0x00F8 (0x0008) [0x0000000000002002] (CPF_Const | CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarDodgeComponent");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarDodgeDefinition
// 0x0000 (0x00E8 - 0x00E8)
class UPoplarDodgeDefinition : public UWillowDodgeDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarDodgeDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarDownloadableContentManager
// 0x0020 (0x0398 - 0x03B8)
class UPoplarDownloadableContentManager : public UWillowDownloadableContentManager
{
public:
	class TArray<struct FMarketplaceContentOfferMapping> OfferMappings;                                 // 0x0398 (0x0010) [0x0000000000404000] (CPF_Config | CPF_NeedCtorLink)
	class TArray<struct FBundleContentMapping>         BundleMappings;                                // 0x03A8 (0x0010) [0x0000000000404000] (CPF_Config | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarDownloadableContentManager");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarEscortNode
// 0x0010 (0x02E0 - 0x02F0)
class APoplarEscortNode : public AWillowAIMoveNode
{
public:
	float                                              PathPercent;                                   // 0x02E0 (0x0004) [0x0000000000020003] (CPF_Edit | CPF_Const | CPF_EditConst)
	uint32_t                                           bIsCheckpoint : 1;                             // 0x02E4 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	class APoplarPawn*                                 EscortPawn;                                    // 0x02E8 (0x0008) [0x0000000000002002] (CPF_Const | CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarEscortNode");
		}

		return uClassPointer;
	};

	void UpdateEscort();
};

// Class PoplarGame.PoplarEULAGFxMovie
// 0x0038 (0x0450 - 0x0488)
class UPoplarEULAGFxMovie : public UWillowGFxMovie
{
public:
	class UPoplarEULAGFxObject*                        GearboxEULAObj;                                // 0x0450 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FPlatformUserId                             UserId;                                        // 0x0458 (0x0008) [0x0000000000000000]               
	class TArray<struct FEULAData>                     EULAChain;                                     // 0x0460 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            EULAIndexToDisplay;                            // 0x0470 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __OnAllEULAsShown__Delegate;                   // 0x0478 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarEULAGFxMovie");
		}

		return uClassPointer;
	};

	void HandleHintInput(const struct FPlatformUserId& InUserId, const struct FName& HintTag);
	void PopulateHintBar();
	bool HandleInputKey(const struct FPlatformUserId& InUserId, const struct FName& ukey, EInputEvent uevent);
	void extClosed();
	void extOnLoad(const class FString& Path);
	void eventOnClose();
	bool eventStart(bool optionalStartPaused);
	void OnAllEULAsShown();
};

// Class PoplarGame.PoplarEULAGFxMovieDefinition
// 0x0000 (0x0100 - 0x0100)
class UPoplarEULAGFxMovieDefinition : public UGFxMovieDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarEULAGFxMovieDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarEULAGFxObject
// 0x0000 (0x00D8 - 0x00D8)
class UPoplarEULAGFxObject : public UGFxObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarEULAGFxObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarExperiencePipeline
// 0x0068 (0x0188 - 0x01F0)
class UPoplarExperiencePipeline : public UExperiencePipeline
{
public:
	class APoplarGameInfo*                             PGI;                                           // 0x0188 (0x0008) [0x0000000000000000]               
	class APoplarGameInfoConstruct*                    PGIC;                                          // 0x0190 (0x0008) [0x0000000000000000]               
	class UPoplarGlobalsDefinition*                    PoplarGlobalsDef;                              // 0x0198 (0x0008) [0x0000000000000000]               
	class AController*                                 KillerPlayer;                                  // 0x01A0 (0x0008) [0x0000000000000000]               
	class AController*                                 KilledPlayer;                                  // 0x01A8 (0x0008) [0x0000000000000000]               
	struct FExperienceProviderData                     ExperienceProvData;                            // 0x01B0 (0x0008) [0x0000000000000000]               
	class UPoplarExperienceRewardsDefinition*          ExperienceRewardsDef;                          // 0x01B8 (0x0008) [0x0000000000000000]               
	class UPoplarRewardMessageDefinition*              GenericReasonMessage;                          // 0x01C0 (0x0008) [0x0000000000000000]               
	struct FKillModAwardData                           KillModAwards;                                 // 0x01C8 (0x0018) [0x0000000000000000]               
	class TArray<struct FAssistModAwardData>           AssistModAwards;                               // 0x01E0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarExperiencePipeline");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarExperienceRewardsDefinition
// 0x01D0 (0x0058 - 0x0228)
class UPoplarExperienceRewardsDefinition : public UGBXDefinition
{
public:
	float                                              DistanceToAwardExperience;                     // 0x0058 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                ExperiencePercentageAwardedWhenHeroKilledFormula;// 0x0060 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                BaseExperienceAwardedForHeroKilledFormula;     // 0x0080 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bUseNewExperienceFormula : 1;                  // 0x00A0 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bExperienceTrickleEnabled : 1;                 // 0x00A0 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	struct FTeamExperienceTypeRewardFormula            KillerAndAssisterExperienceTypeFormula;        // 0x00A8 (0x0050) [0x0000000000000001] (CPF_Edit)    
	struct FTeamExperienceTypeRewardFormula            DistanceBasedExperienceTypeFormula;            // 0x00F8 (0x0050) [0x0000000000000001] (CPF_Edit)    
	struct FAttributeInitializationData                MostRelevantMasterExperienceScalar;            // 0x0148 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                OtherMastersExperienceScalar;                  // 0x0168 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                SubstituteBotExperienceScalar;                 // 0x0188 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                ExperienceTrickleFrequencySeconds;             // 0x01A8 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                ExpereinceTrickleAmount;                       // 0x01C8 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                StartingTeamTrickleFlatBonusExperience;        // 0x01E8 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                StartingExperienceAmount;                      // 0x0208 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarExperienceRewardsDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarExperienceTagDefinition
// 0x0048 (0x0058 - 0x00A0)
class UPoplarExperienceTagDefinition : public UGBXDefinition
{
public:
	class FString                                      ExperienceTag;                                 // 0x0058 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	uint32_t                                           bRequireAllListsToSucceed : 1;                 // 0x0068 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	class TArray<class FString>                        EntitlementsRequiredByAllPlayers;              // 0x0070 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<class FString>                        EntitlementsRequiredByOnlyOnePlayer;           // 0x0080 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<class FString>                        EntitlementsRequiredByOnePlayerPerDevice;      // 0x0090 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarExperienceTagDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarFactionExpressionEvaluator
// 0x0008 (0x0058 - 0x0060)
class UPoplarFactionExpressionEvaluator : public UExpressionEvaluator
{
public:
	class UPoplarFactionDefinition*                    SelectedFactionDefinition;                     // 0x0058 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarFactionExpressionEvaluator");
		}

		return uClassPointer;
	};

	bool Evaluate(class UObject* ContextSource);
};

// Class PoplarGame.PoplarFiringModeDefinition
// 0x0070 (0x0218 - 0x0288)
class UPoplarFiringModeDefinition : public UFiringModeDefinition
{
public:
	struct FDamageTags                                 DamageTags;                                    // 0x0218 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarActionDefinition*                     TrackedActionDefinition;                       // 0x0220 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                LifestealFormula;                              // 0x0228 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                ShieldstealFormula;                            // 0x0248 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                ShieldPenetrationFormula;                      // 0x0268 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarFiringModeDefinition");
		}

		return uClassPointer;
	};

	float GetShieldPenetrationPercentage(class AActor* Instigator);
	int32_t GetDamageTags();
};

// Class PoplarGame.PoplarFrontendBackgroundGFxMovieDefinition
// 0x0000 (0x0138 - 0x0138)
class UPoplarFrontendBackgroundGFxMovieDefinition : public UWillowGFxMovie3DDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarFrontendBackgroundGFxMovieDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarFrontendBackgroundMoviePlayer
// 0x0010 (0x03F8 - 0x0408)
class UPoplarFrontendBackgroundMoviePlayer : public UGearboxGFxMovie
{
public:
	class UGFxObject*                                  MainClip;                                      // 0x03F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            TotalFrames;                                   // 0x0400 (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarFrontendBackgroundMoviePlayer");
		}

		return uClassPointer;
	};

	bool eventStart(bool optionalStartPaused);
};

// Class PoplarGame.PoplarFrontendFullscreenDailyQuestsGFxMovie
// 0x0020 (0x03F8 - 0x0418)
class UPoplarFrontendFullscreenDailyQuestsGFxMovie : public UGearboxGFxMovie
{
public:
	class APoplarPlayerController*                     PPCOwner;                                      // 0x03F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ContainerClip;                                 // 0x0400 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  MainClip;                                      // 0x0408 (0x0008) [0x0000000000002000] (CPF_Transient)
	EAspectRatio                                       CachedAspectRatio;                             // 0x0410 (0x0001) [0x0000000000002000] (CPF_Transient)
	ESplitScreenType                                   CachedSplitscreenType;                         // 0x0411 (0x0001) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bPrimaryPlayer : 1;                            // 0x0414 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarFrontendFullscreenDailyQuestsGFxMovie");
		}

		return uClassPointer;
	};

	void HandleCloseButtonClicked();
	void extOnCloseAnimationComplete();
	void eventOnClose();
};

// Class PoplarGame.PoplarFrontendFullscreenMessageOfTheDayGFxMovie
// 0x0010 (0x03F8 - 0x0408)
class UPoplarFrontendFullscreenMessageOfTheDayGFxMovie : public UGearboxGFxMovie
{
public:
	int32_t                                            CurrentMessageIndex;                           // 0x03F8 (0x0004) [0x0000000000000000]               
	class UGFxObject*                                  NewsContainer;                                 // 0x0400 (0x0008) [0x0000000000000000]               

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarFrontendFullscreenMessageOfTheDayGFxMovie");
		}

		return uClassPointer;
	};

	void HandleNextItemClick();
	void HandlePreviousItemClick();
	void HandleNewsItemPipClick(int32_t PipIndex);
	bool MainInputKey(const struct FPlatformUserId& UserId, const struct FName& Key, EInputEvent InputEvent);
};

// Class PoplarGame.PoplarFrontendGFxMovie
// 0x0320 (0x05B0 - 0x08D0)
class UPoplarFrontendGFxMovie : public UWillowGFxMovie3D
{
public:
	class FString                                      MatchmakingLabel_FindTeam_Searching;           // 0x05B0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MathcmakingLabel_FindTeam_Creating;            // 0x05C0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MatchmakingLabel_FindTeam_Hosting;             // 0x05D0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MatchmakingLabel_FindTeam_SessionJoin;         // 0x05E0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MatchmakingLabel_FindOpposingTeam_Searching;   // 0x05F0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MatchmakingLabel_FindOpposingTeam_Creating;    // 0x0600 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MatchmakingLabel_FindOpposingTeam_Hosting;     // 0x0610 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MatchmakingLabel_FindOpposingTeam_SessionJoin; // 0x0620 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MatchmakingLabel_ObtainingGameInformation;     // 0x0630 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MatchmakingLabel_RegisteringWithGame;          // 0x0640 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MatchmakingLabel_OptionVoting;                 // 0x0650 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MatchmakingLabel_SettingUpGame;                // 0x0660 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MatchmakingLabel_ConnectingToDedicatedServer;  // 0x0670 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MatchmakingLabel_DelayedResume;                // 0x0680 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MatchmakingLabel_PrivateMatch;                 // 0x0690 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MatchmakingLabel_PrivateMission;               // 0x06A0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      OptionVotingStartedNotificationMessage;        // 0x06B0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      RefreshingExperiencesMessage;                  // 0x06C0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      BestTimeTemplate;                              // 0x06D0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class UPoplarFrontendGFxMovieDefinition*           MyPoplarFrontendMovieDef;                      // 0x06E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarFrontendScreenContainerGFxObject*     ScreenContainerClip;                           // 0x06E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarFrontendScreenMainGFxObject*          ScreenMainClip;                                // 0x06F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarFrontendPlayerListGFxObject*          PlayerListClip;                                // 0x06F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarFrontendScreenVotingGFxObject*        ScreenVotingClip;                              // 0x0700 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarFrontendScreenPrivateMatchGFxObject*  ScreenPrivateMatchClip;                        // 0x0708 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarFrontendBackgroundMoviePlayer*        BackgroundMovie;                               // 0x0710 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarFrontendMatchmakingInfoOverlayGFxMovie* MatchmakingInfoOverlayMovie;                   // 0x0718 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  Fader;                                         // 0x0720 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  NavigationBreadcrumb;                          // 0x0728 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarFrontendMatchmakingTransitionGFxMovie* MatchmakingTransitionOverlayMovie;             // 0x0730 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  PlayerPlateObject;                             // 0x0738 (0x0008) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FFrontendCombinedBoostInfo>    Boosters;                                      // 0x0740 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class FString                                      ManyHours;                                     // 0x0750 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      FewMinutes;                                    // 0x0760 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      HoursAbbreviation;                             // 0x0770 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MinutesAbbreviation;                           // 0x0780 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class UPoplarMetagameInventory*                    MetagameInventory;                             // 0x0790 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              NextPlayerPlateRefresh;                        // 0x0798 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CurrentVoteOptionIndex;                        // 0x079C (0x0004) [0x0000000000002000] (CPF_Transient)
	class UWillowPauseTicker*                          TimerPauseTicker;                              // 0x07A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FMessageOfTheDay>              MessagesOfTheDay;                              // 0x07A8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int32_t                                            CurrentMessageOfTheDayId;                      // 0x07B8 (0x0004) [0x0000000000000000]               
	class UPoplarPlayerNameIdentifierDefinition*       LastCharacterPlayedAs;                         // 0x07C0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarMetaSkinDefinition*                   LastCharacterSkinPlayedIn;                     // 0x07C8 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FAkPlayingInfo                              CurrentlyPlayingTrainingAudio;                 // 0x07D0 (0x0010) [0x0000000000082000] (CPF_Transient | CPF_Component)
	class TArray<class UAkEvent*>                      TrainingAudioQueue;                            // 0x07E0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UPoplarNovaTrainingGFxMovie*                 NovaTrainingMovie;                             // 0x07F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bTrainingInterrupted : 1;                      // 0x07F8 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bExternalUIIgnoreInput : 1;                    // 0x07F8 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bIsMatchmaking : 1;                            // 0x07F8 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           bResumeMatchmakingAfterCancel : 1;             // 0x07F8 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	uint32_t                                           bRefreshMessageOfTheDayAfterPostMatch : 1;     // 0x07F8 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	uint32_t                                           bUseSplitDailyQuestLayout : 1;                 // 0x07F8 (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	uint32_t                                           bDailyQuestPromptVisible : 1;                  // 0x07F8 (0x0004) [0x0000000000002000] [0x00000040] (CPF_Transient)
	uint32_t                                           bHasShownMapOnTransitionOverlay : 1;           // 0x07F8 (0x0004) [0x0000000000002000] [0x00000080] (CPF_Transient)
	uint32_t                                           bWantsExperienceRefresh : 1;                   // 0x07F8 (0x0004) [0x0000000000002000] [0x00000100] (CPF_Transient)
	uint32_t                                           bStatsUpToDate : 1;                            // 0x07F8 (0x0004) [0x0000000000002000] [0x00000200] (CPF_Transient)
	uint32_t                                           bSplitPlayerStatsUpToDate : 1;                 // 0x07F8 (0x0004) [0x0000000000002000] [0x00000400] (CPF_Transient)
	class TArray<struct FPlatformUserId>               SaveProfileList;                               // 0x0800 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<struct FPlatformUserId>               ReadExperienceDataList;                        // 0x0810 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	float                                              MatchmakingElapsedTime;                        // 0x0820 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FPlatformUserId                             SwitchProfileUserId;                           // 0x0824 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  DailyQuestIndicator;                           // 0x0830 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarFrontendFullscreenDailyQuestsGFxMovie* FullscreenDailyQuestsMovie;                    // 0x0838 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            PrimaryMainQuestCount;                         // 0x0840 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            PrimaryDailyQuestCount;                        // 0x0844 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            SecondaryMainQuestCount;                       // 0x0848 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            SecondaryDailyQuestCount;                      // 0x084C (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FOverlayData>                  OverlayMapping;                                // 0x0850 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<struct FFrontendElementState>         FrontendElementStates;                         // 0x0860 (0x0010) [0x0000000000404000] (CPF_Config | CPF_NeedCtorLink)
	float                                              DisableChangeTeamHintTime;                     // 0x0870 (0x0004) [0x0000000000004000] (CPF_Config)  
	int32_t                                            VotingMessageId;                               // 0x0874 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            HostLobbyMessageId;                            // 0x0878 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            SwitchProfileMessageId;                        // 0x087C (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            RefreshExperiencesMessageId;                   // 0x0880 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              RefreshNATInfoStringTime;                      // 0x0884 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UUPnPDiscoveryServer*                        UPnPDiscoveryObject;                           // 0x0888 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarPlayerStandIn*                        OwnerStandIn;                                  // 0x0890 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              StartingMouseDragPositionX;                    // 0x0898 (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FFrontendExperienceImage>      FrontendExperienceImages;                      // 0x08A0 (0x0010) [0x0000000000404000] (CPF_Config | CPF_NeedCtorLink)
	class FString                                      FrontendExternalImagePackage;                  // 0x08B0 (0x0010) [0x0000000000404000] (CPF_Config | CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnFadeoutComplete__Delegate;                 // 0x08C0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarFrontendGFxMovie");
		}

		return uClassPointer;
	};

	void SplitPlayerStatsDataReceived();
	void PlayerStatsDataReceived();
	void PopulateDailyQuestsIndicator();
	void OnAkEventCompleted(class UAkComponent* SourceComponent, class UAkEvent* SourceEvent, int32_t EventInstanceId);
	void HandleNavigationBreadcrumbButtonClicked();
	void OnUPnPDiscoveryComplete(bool bWasSuccessful);
	void OnQueueUpdated(class UGearboxAccountData* AccountData);
	void OnQueueStatusUpdated(class UGearboxAccountData* AccountData);
	void CreateHostLobbyBeaconComplete(EOnlineSubsystemResult Result, class UPoplarPartyBeaconHost* NewBeacon);
	bool ConfirmedReturnedToTitleScreenMessage(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId);
	void OnFadeoutForReturnToTitleComplete();
	void OnFadeoutCompleteInternal();
	void HideOptionVotingStartedNotification();
	void OnDisableChangeTeamHintComplete();
	void OnDisableRefreshFriendsHintComplete();
	bool OnConfirmSelectNewExperience(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId);
	void OnRefreshExperienceDataComplete(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
	bool OnConfirmNoExperiencesAvailable(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId);
	void TimedShowNextMessageOfTheDay();
	void SwitchProfileComplete(bool bWasSuccessful, const struct FPlatformUserId& SelectedUserId);
	void OnRequestImageComplete(bool bWasSuccessful, const class FString& ImageUrl, class UTexture* ImageTexture);
	bool OnSplitLeaveClicked(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId);
	void SplitscreenJoinComplete(const struct FPlatformUserId& UserId, bool bSuccess);
	bool OnConfirmCancelMatchmaking(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId);
	bool OnConfirmReturnToTitle(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId);
	bool OnConfirmDisconnect(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId);
	bool OnConfirmQuit(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId);
	void extOnFrontendClipLoaded(const class FString& ClipPath, const class FString& ClipTag);
	bool MainInputKey(const struct FPlatformUserId& UserId, const struct FName& Key, EInputEvent InputEvent);
	void OnWriteProfileComplete(const struct FPlatformUserId& UserId, ESaveDataOperationResult Result);
	void OnFadeoutComplete(class UPoplarFrontendGFxMovie* TheMovie);
};

// Class PoplarGame.PoplarFrontendGFxMovieDefinition
// 0x0090 (0x0138 - 0x01C8)
class UPoplarFrontendGFxMovieDefinition : public UWillowGFxMovie3DDefinition
{
public:
	class TArray<class USwfMovie*>                     ScreenList;                                    // 0x0138 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class TArray<class UPoplarTestMapsListDefinition*> PoplarTestMapLists;                            // 0x0148 (0x0010) [0x0000000004400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink | CPF_EditInline)
	float                                              MOTD_Delay;                                    // 0x0158 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              InviteDisplayTime;                             // 0x015C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              RelativeDefaultPanelSize;                      // 0x0160 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              RelativeCaptionedPanelSize;                    // 0x0164 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UGFxMovieDefinition*                         MatchmakingInfoOverlayDefinition;              // 0x0168 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UGFxMovieDefinition*                         MatchmakingTransitionOverlayDefinition;        // 0x0170 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UInputButtonDefinition*                      QuestPromptButton;                             // 0x0178 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            PresenceListStringMaximumLength;               // 0x0180 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarPlayerNameIdentifierDefinition*       DefaultStandInCharacter;                       // 0x0188 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              BackgroundMatineeTime;                         // 0x0190 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UPoplarNovaTrainingDefinition*               TrainingDef;                                   // 0x0198 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarMetaEarnedCurrencyDefinition*         EarnedCurrencyDef;                             // 0x01A0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBoostUIInfoDefinition*                      XPBoostDef;                                    // 0x01A8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBoostUIInfoDefinition*                      LootBoostDef;                                  // 0x01B0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBoostUIInfoDefinition*                      LordPoplarBoostDef;                            // 0x01B8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UBoostUIInfoDefinition*                      TrainingPassBoostDef;                          // 0x01C0 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarFrontendGFxMovieDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarFrontendMatchmakingInfoGFxObject
// 0x0010 (0x00D8 - 0x00E8)
class UPoplarFrontendMatchmakingInfoGFxObject : public UGFxObject
{
public:
	class FString                                      GenericMatchmakingMessage;                     // 0x00D8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarFrontendMatchmakingInfoGFxObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarFrontendMatchmakingInfoOverlayGFxMovie
// 0x0008 (0x03F8 - 0x0400)
class UPoplarFrontendMatchmakingInfoOverlayGFxMovie : public UGearboxGFxMovie
{
public:
	class UPoplarFrontendMatchmakingInfoGFxObject*     MatchmakingInfoClip;                           // 0x03F8 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarFrontendMatchmakingInfoOverlayGFxMovie");
		}

		return uClassPointer;
	};

	void extOnFrontendClipLoaded(const class FString& ClipPath, const class FString& ClipTag);
};

// Class PoplarGame.PoplarFrontendMatchmakingTransitionGFxMovie
// 0x0030 (0x03F8 - 0x0428)
class UPoplarFrontendMatchmakingTransitionGFxMovie : public UGearboxGFxMovie
{
public:
	class FString                                      MatchmakingTransition_Caption;                 // 0x03F8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MatchmakingTransition_ConnectionTimeoutTemplate;// 0x0408 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MatchmakingTransition_EstimatedWaitTemplate;   // 0x0418 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarFrontendMatchmakingTransitionGFxMovie");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarFrontendPlayerListGFxObject
// 0x00E0 (0x00D8 - 0x01B8)
class UPoplarFrontendPlayerListGFxObject : public UGFxObject
{
public:
	class UPoplarFrontendGFxMovie*                     OwningMovie;                                   // 0x00D8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarPlayerController*                     PPCOwner;                                      // 0x00E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FUniqueNetId                                CachedPlayerToKick;                            // 0x00E8 (0x0014) [0x0000000000002000] (CPF_Transient)
	class UWillowPauseTicker*                          PlayerListTimer;                               // 0x0100 (0x0008) [0x0000000000002000] (CPF_Transient)
	class FString                                      PlayerConnectingString;                        // 0x0108 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      SearchingForTeamMemberMessage;                 // 0x0118 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      SearchingForOpponentMessage;                   // 0x0128 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      ResumingMatchmakingMessage;                    // 0x0138 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      PlayerFoundMessage;                            // 0x0148 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      SplitJoinMessage;                              // 0x0158 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      InviteFriendMessage;                           // 0x0168 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FUniqueNetId                                PlayerDetailsUniqueId;                         // 0x0178 (0x0014) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FPlayerListEntry>              PlayerListEntries;                             // 0x0190 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UPanelButtonListGFxObject*                   PanelButtonList;                               // 0x01A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarOnlineClientPlayerService*            OnlineClientPlayerService;                     // 0x01A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bPlayerListDebug : 1;                          // 0x01B0 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarFrontendPlayerListGFxObject");
		}

		return uClassPointer;
	};

	void TryRefreshPlayerList();
	void ConfigureFriendsList();
	bool OnConfirmKickPlayer_Clicked(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId);
	void OnShowInviteUIComplete();
	void OnPlayerOptionsPanelFocusLost();
	void OnPlayerOptionsButtonClick(int32_t ControllerIndex, int32_t ButtonID);
	void OnPlayerListButtonClick(int32_t ControllerIndex, int32_t RowIndex, int32_t RowTypeId);
	void ReadPlayerDisplayDataComplete(const struct FPlatformUserId& PlayerID, int32_t ServiceResult, class TArray<struct FPlayerDisplayData>& DisplayDataList);
	void RequestProfileImageComplete(bool bWasSuccessful, const struct FUniqueNetId& NetId, class UTexture* ImageTexture);
	void OnPlayerTalkingStateChange(const struct FUniqueNetId& PlayerID, bool bIsTalking);
	void OnControllerChange(const struct FPlatformUserId& UserId, bool bIsConnected);
	void OnLoginStatusChanged(const struct FPlatformUserId& UserId);
};

// Class PoplarGame.PoplarFrontendScreenBaseGFxObject
// 0x0018 (0x00D8 - 0x00F0)
class UPoplarFrontendScreenBaseGFxObject : public UGFxObject
{
public:
	class UPoplarFrontendGFxMovie*                     FrontendMovie;                                 // 0x00D8 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FName                                       ScreenTag;                                     // 0x00E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bShowSelectBackHintButtons : 1;                // 0x00E8 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bShowFrontendNavigationBreadcrumb : 1;         // 0x00E8 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarFrontendScreenBaseGFxObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarFrontendScreenBaseScrollingListGFxObject
// 0x0010 (0x00F0 - 0x0100)
class UPoplarFrontendScreenBaseScrollingListGFxObject : public UPoplarFrontendScreenBaseGFxObject
{
public:
	class UPoplarScrollingList*                        TheList;                                       // 0x00F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UClass*                                      ScrollingListDataProviderClass;                // 0x00F8 (0x0008) [0x0000000000000000]               

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarFrontendScreenBaseScrollingListGFxObject");
		}

		return uClassPointer;
	};

	void UpdateBackHintButtonVisible();
	void RegisterScrollingList(const class FString& ScrollingListPath);
};

// Class PoplarGame.PoplarFrontendScreenMainGFxObject
// 0x01B0 (0x00F0 - 0x02A0)
class UPoplarFrontendScreenMainGFxObject : public UPoplarFrontendScreenBaseGFxObject
{
public:
	class TArray<struct FFullGameLicenseOfferId>       FullGameLicenseOfferIds;                       // 0x00F0 (0x0010) [0x0000000000404000] (CPF_Config | CPF_NeedCtorLink)
	uint32_t                                           bRequirePlayOnlineForStartup : 1;              // 0x0100 (0x0004) [0x0000000000004000] [0x00000001] (CPF_Config)
	uint32_t                                           bRequirePlayOnlineCloudForExperiences : 1;     // 0x0100 (0x0004) [0x0000000000004000] [0x00000002] (CPF_Config)
	uint32_t                                           bRequirePlayOnlineForExperiences : 1;          // 0x0100 (0x0004) [0x0000000000004000] [0x00000004] (CPF_Config)
	uint32_t                                           bWaitingOnExperienceRefresh : 1;               // 0x0100 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	uint32_t                                           bIgnoreExperiencePanelButtonStateUpdates : 1;  // 0x0100 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	float                                              RefreshExperiencesIntervalInSeconds;           // 0x0104 (0x0004) [0x0000000000004000] (CPF_Config)  
	struct FPlatformUserId                             CachedExperienceUserId;                        // 0x0108 (0x0008) [0x0000000000002000] (CPF_Transient)
	EExperienceMatchmakingType                         CachedExperienceType;                          // 0x0110 (0x0001) [0x0000000000002000] (CPF_Transient)
	EFrontendPanelID                                   SubmenuPanelID;                                // 0x0111 (0x0001) [0x0000000000000000]               
	class FString                                      CachedExperienceGuid;                          // 0x0118 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<struct FPlatformUserId>               ReadOnlinePrivilegesPlayerIds;                 // 0x0128 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<struct FPlatformUserId>               NeedsUpsellPlayerIds;                          // 0x0138 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UServerPingObject*                           PingObject;                                    // 0x0148 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            ActiveGameMessageId;                           // 0x0150 (0x0004) [0x0000000000000000]               
	int32_t                                            ReadingOnlinePrivilegesId;                     // 0x0154 (0x0004) [0x0000000000000000]               
	struct FPlatformUserId                             CachedReadFriendsListUserId;                   // 0x0158 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FPlatformUserId                             CachedMatchHistoryListUserId;                  // 0x0160 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            ShowMatchHistoryMessageId;                     // 0x0168 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            EULAMessageId;                                 // 0x016C (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            TopFriendIndex;                                // 0x0170 (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FOnlineFriend>                 CachedFriends;                                 // 0x0178 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FUniqueNetId                                FriendOptionsUniqueId;                         // 0x0188 (0x0014) [0x0000000000002000] (CPF_Transient)
	struct FUniqueNetId                                CachedPreRefreshFocusedFriendUniqueId;         // 0x019C (0x0014) [0x0000000000002000] (CPF_Transient)
	int32_t                                            MaxFriendsListRows;                            // 0x01B0 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UPanelButtonListGFxObject*                   MainPanelButtonList;                           // 0x01B8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UScrollingPanelButtonListGFxObject*          ExperiencePanelButtonList;                     // 0x01C0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UFriendsScrollingPanelButtonListGFxObject*   FriendsPanelButtonList;                        // 0x01C8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UScrollingPanelButtonListGFxObject*          SubmenuPanelButtonList;                        // 0x01D0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGearboxGFxMovie*                            CreditsMovie;                                  // 0x01D8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FFrontendNavigationEntry>      FrontendNavigationStack;                       // 0x01E0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UPoplarEULAGFxMovie*                         EULAMovie;                                     // 0x01F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FPlatformUserId                             CachedEULAUserId;                              // 0x01F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class FString                                      FriendOnlinePresence;                          // 0x0200 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      FriendOfflinePresence;                         // 0x0210 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      ShowMatchHistoryMessage;                       // 0x0220 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      QueryForActiveGamesMessage;                    // 0x0230 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      DownloadingEULADataMessage;                    // 0x0240 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      SubmittingEULADataMessage;                     // 0x0250 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      ReadingOnlinePrivilegesMessage;                // 0x0260 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      WaitTime_Short;                                // 0x0270 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      WaitTime_Average;                              // 0x0280 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      WaitTime_Long;                                 // 0x0290 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarFrontendScreenMainGFxObject");
		}

		return uClassPointer;
	};

	bool OnFullGameLicenseRequiredDlgPurchaseClicked(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId);
	void OnRequestSkillDataFromLobbyClientsComplete();
	void ReadOnlinePrivilegesComplete(const struct FPlatformUserId& InUserId, bool bWasSuccessful);
	void ShowMembershipMarketplaceUIComplete(const struct FPlatformUserId& InUserId, EOnlineFeature Feature, EFeaturePrivilegeLevel Level);
	void AcceptDeclineAgreementsComplete(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
	void AcceptDeclineAgreements();
	void DownloadAgreementsComplete(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
	bool OnConfirmErrorDlg(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId);
	void OnSetLobbySessionJoinableComplete(EOnlineSubsystemResult Result);
	void OnConnectServerPingComplete(bool bWasSuccessful, int32_t PongData);
	void OnServerPingComplete(bool bWasSuccessful, int32_t PongData);
	bool OnConfirmRejoinActiveGameRequireJoin(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId);
	bool OnConfirmRejoinActiveGame(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId);
	void OnQueryForActiveGamesComplete(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
	void OnGameInstallationStatusChange(bool bIsComplete);
	void OnReadMatchHistoryEntriesComplete(const struct FPlatformUserId& PlayerID, int32_t ServiceResult, struct FMatchHistoryEntrySet& ReadMatchHistorySet);
	void OnCreditsMovieClosed(class UGearboxGFxMovie* TheMovie);
	void OnRequestProfileImageComplete(bool bWasSuccessful, const struct FUniqueNetId& NetId, class UTexture* ImageTexture);
	void OnReadFriendDisplayDataComplete(const struct FPlatformUserId& UserId, int32_t ServiceResult, class TArray<struct FPlayerDisplayData>& DisplayDataList);
	void OnReadFriendsListComplete(const struct FPlatformUserId& UserId, EOnlineSubsystemResult Result, int32_t NumFriendsRead, float DelayIntervalInSeconds);
	void HandleDailyQuestIndicatorClicked();
	void HandleMessageOfTheDayClicked();
	void HandleSubmenuPanelButtonClicked(int32_t PanelId, int32_t ControllerIndex);
	void HandleFriendPanelRequestScrollDown();
	void HandleFriendPanelRequestScrollUp();
	void HandleFriendPanelSpecialMessageButtonClicked();
	void HandleFriendOptionButtonClicked(int32_t PanelId, int32_t ControllerIndex);
	void HandleFriendPanelButtonClicked(int32_t PanelId, int32_t ControllerIndex);
	void HandleNewsItemTrackerClick(int32_t NewsItemIndex);
	void HandleExperiencePanelLayoutChanged();
	void HandleExperiencePanelButtonRollOver(int32_t PanelId);
	void HandleExperiencePanelButtonFocusIn(int32_t PanelId);
	void HandleExperiencePanelButtonClicked(int32_t PanelId, int32_t ControllerIndex);
	void HandleMainPanelButtonRollOver(int32_t PanelId);
	void HandleMainPanelButtonFocusIn(int32_t PanelId);
	void HandleMainPanelButtonClicked(int32_t PanelId, int32_t ControllerIndex);
};

// Class PoplarGame.PoplarFrontendScreenPrivateMatchGFxObject
// 0x0120 (0x00F0 - 0x0210)
class UPoplarFrontendScreenPrivateMatchGFxObject : public UPoplarFrontendScreenBaseGFxObject
{
public:
	class TArray<struct FOptionDescription>            Descriptions;                                  // 0x00F0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class FString                                      SpinnerOptionOn;                               // 0x0100 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      SpinnerOptionOff;                              // 0x0110 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      SpinnerOptionTeam;                             // 0x0120 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      SpinnerOptionGlobal;                           // 0x0130 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      SpinnerOptionNoTag;                            // 0x0140 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      SpinnerOptionDifficulty0;                      // 0x0150 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      SpinnerOptionDifficulty1;                      // 0x0160 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      SpinnerOptionOptimalDataCenter;                // 0x0170 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LoadingPrivateMatchOptionsMessage;             // 0x0180 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      BotsOnTeamFill;                                // 0x0190 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      NavigationBreadcrumbLabelOptions;              // 0x01A0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      NavigationBreadcrumbLabelMapSelection;         // 0x01B0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      NavigationBreadcrumbLabelMissionOptions;       // 0x01C0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      NavigationBreadcrumbLabelMissionSelection;     // 0x01D0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class UPanelButtonListGFxObject*                   MainPanelButtonList;                           // 0x01E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UScrollingPanelButtonListGFxObject*          MapSelectionPanelButtonList;                   // 0x01E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  Tooltips;                                      // 0x01F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            SelectedMapIndex;                              // 0x01F8 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bStatsReadInProgress : 1;                      // 0x01FC (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	class TArray<class FString>                        ValidCharacterSelectStyleNames;                // 0x0200 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarFrontendScreenPrivateMatchGFxObject");
		}

		return uClassPointer;
	};

	void UpdateDescriptionText(int32_t EventId);
	class FString GetDescription(int32_t EventId);
	void ClearDescriptions();
	void AddDescription(int32_t EventId, const class FString& Description);
	void OnReadPlayerStatsDataComplete(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
	void OnWriteProfileForStartMatchComplete(const struct FPlatformUserId& UserId, ESaveDataOperationResult Result);
	void OnMainPanelButtonSpinnerOptionChange(int32_t PanelId, int32_t NewSpinnerOptionIndex);
	void HandleMapSelectionPanelLayoutChanged();
	void HandleMapSelectionPanelButtonRollOver(int32_t PanelId);
	void HandleMapSelectionPanelButtonFocusIn(int32_t PanelId);
	void HandleMapSelectionPanelButtonClicked(int32_t PanelId, int32_t ControllerIndex);
	void HandleMainPanelButtonRollOver(int32_t PanelId);
	void HandleMainPanelButtonFocusIn(int32_t PanelId);
	void HandleMainPanelButtonClicked(int32_t PanelId, int32_t ControllerIndex);
};

// Class PoplarGame.PoplarFrontendScreenVotingGFxObject
// 0x0038 (0x00F0 - 0x0128)
class UPoplarFrontendScreenVotingGFxObject : public UPoplarFrontendScreenBaseGFxObject
{
public:
	class TArray<struct FVoteOptionPlayerIdentifier>   VoteOptionPlayerIdentifiers;                   // 0x00F0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class FString                                      AbstainVoteOptionImageTextureName;             // 0x0100 (0x0010) [0x0000000000404000] (CPF_Config | CPF_NeedCtorLink)
	float                                              VoteCountdownAudioTime;                        // 0x0110 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              VoteCountdownTime;                             // 0x0114 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UPoplarFrontendVoteOptionButtonGroupGFxObject* VoteOptionButtonGroup;                         // 0x0118 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            AlreadyVotedMessageId;                         // 0x0120 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bStatsReadInProgress : 1;                      // 0x0124 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarFrontendScreenVotingGFxObject");
		}

		return uClassPointer;
	};

	void OnReadPlayerStatsDataComplete(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
	void OnVoteOptionButtonGroupRequestOptionData(int32_t CurrentOptionIndex, int32_t CurrentButtonIndex);
	void OnProfileImageRequestComplete(bool bWasSuccessful, const struct FUniqueNetId& NetId, class UTexture* ImageTexture);
	void HandleVoteOptionButtonClicked(int32_t VoteOptionIndex, int32_t ControllerIndex);
};

// Class PoplarGame.PoplarFrontendScreenContainerGFxObject
// 0x0018 (0x00D8 - 0x00F0)
class UPoplarFrontendScreenContainerGFxObject : public UGFxObject
{
public:
	class TArray<class UPoplarFrontendScreenBaseGFxObject*> ScreenList;                                    // 0x00D8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UPoplarFrontendScreenBaseGFxObject*          CurrentScreen;                                 // 0x00E8 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarFrontendScreenContainerGFxObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarGameConstantBuffer
// 0x0040 (0x0080 - 0x00C0)
class UPoplarGameConstantBuffer : public UConstantBuffer
{
public:
	struct FPoplarGameConstantBufferStruct             ConstantBufferData;                            // 0x0080 (0x0040) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarGameConstantBuffer");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarGameEngine
// 0x0090 (0x0C38 - 0x0CC8)
class UPoplarGameEngine : public UWillowGameEngine
{
public:
	class TArray<struct FLoadingMovieMapping>          LoadingMovieMappings;                          // 0x0C38 (0x0010) [0x0000000000404000] (CPF_Config | CPF_NeedCtorLink)
	class FString                                      CustomLoadingMovie;                            // 0x0C48 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	uint32_t                                           bCustomMovieIsPlaying : 1;                     // 0x0C58 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bPlayCustomLoadingMovieToEnd : 1;              // 0x0C58 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bIsScaleformMovie : 1;                         // 0x0C58 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	struct FFullScreenMovieParameters                  CustomLoadingMovieParameters;                  // 0x0C60 (0x0020) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UPoplarImageManager*                         ImageManagerInstance;                          // 0x0C80 (0x0008) [0x0000000000000000]               
	struct FDurangoHeroProgressStruct                  DurangoHeroProgress[0x2];                      // 0x0C88 (0x0040) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarGameEngine");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarGameInfo
// 0x0428 (0x05D0 - 0x09F8)
class APoplarGameInfo : public AWillowGameInfo
{
public:
	struct FPointer                                    VfTable_FCallbackEventDevice;                  // 0x05D0 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_ISparkUpdateCallback;                  // 0x05D8 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIStreamingDataEvent;                  // 0x05E0 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class TArray<class APoplarTeamInfo*>               Teams;                                         // 0x05E8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FPointer                                    BehaviorModelFile;                             // 0x05F8 (0x0008) [0x0000000000001001] (CPF_Edit | CPF_Native)
	class FString                                      PlayerLeaverBotName;                           // 0x0600 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class TArray<struct FExperienceProviderDefinitionOverride> ExperienceProviderDefinitionOverrides;         // 0x0610 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FCreditsProviderDefinitionOverride> CreditsProviderDefinitionOverrides;            // 0x0620 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FSpawnBotArgs>                 SpawnBotArgsList;                              // 0x0630 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class APoplarSwitchPadObject*>        SwitchPadsList;                                // 0x0640 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class APoplarCheckpoint*                           CurrentCheckpoint;                             // 0x0650 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarCharacterIntroCoordinator*            CharacterIntroCoordinator;                     // 0x0658 (0x0008) [0x0000000000002000] (CPF_Transient)
	class TArray<class UPoplarChallengeDefinition*>    FiredTeamChallengeNotifications;               // 0x0660 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            TeamMinSizeForStart;                           // 0x0670 (0x0004) [0x0000000000000000]               
	int32_t                                            PlayerLevelForStart;                           // 0x0674 (0x0004) [0x0000000000000000]               
	uint32_t                                           bBotsOnlyMatch : 1;                            // 0x0678 (0x0004) [0x0000000000000000] [0x00000001] 
	uint32_t                                           bSetRemainingTime : 1;                         // 0x0678 (0x0004) [0x0000000000000000] [0x00000002] 
	uint32_t                                           bSentFirstBloodMessageToUI : 1;                // 0x0678 (0x0004) [0x0000000000000000] [0x00000004] 
	uint32_t                                           bTournamentMode : 1;                           // 0x0678 (0x0004) [0x0000000000004000] [0x00000008] (CPF_Config)
	uint32_t                                           bRankedPlay : 1;                               // 0x0678 (0x0004) [0x0000000000004000] [0x00000010] (CPF_Config)
	uint32_t                                           bAllowBotSubs : 1;                             // 0x0678 (0x0004) [0x0000000000004000] [0x00000020] (CPF_Config)
	uint32_t                                           bProcessStats : 1;                             // 0x0678 (0x0004) [0x0000000000000000] [0x00000040] 
	uint32_t                                           bPunishAbandonedPlayers : 1;                   // 0x0678 (0x0004) [0x0000000000000000] [0x00000080] 
	uint32_t                                           bSupportsFirstBlood : 1;                       // 0x0678 (0x0004) [0x0000000000004000] [0x00000100] (CPF_Config)
	uint32_t                                           bHasAwardedFirstBlood : 1;                     // 0x0678 (0x0004) [0x0000000000002000] [0x00000200] (CPF_Transient)
	uint32_t                                           bSpawnAsPlayerClass : 1;                       // 0x0678 (0x0004) [0x0000000000000000] [0x00000400] 
	uint32_t                                           bUseCustomSpawnLocation : 1;                   // 0x0678 (0x0004) [0x0000000000002000] [0x00000800] (CPF_Transient)
	uint32_t                                           bSpawnBots : 1;                                // 0x0678 (0x0004) [0x0000000000002000] [0x00001000] (CPF_Transient)
	uint32_t                                           bBotSpawningInProgress : 1;                    // 0x0678 (0x0004) [0x0000000000002000] [0x00002000] (CPF_Transient)
	uint32_t                                           bForceGlobalChat : 1;                          // 0x0678 (0x0004) [0x0000000000002000] [0x00004000] (CPF_Transient)
	uint32_t                                           bRequireUniqueCharactersPerTeamGIDOverridden : 1;// 0x0678 (0x0004) [0x0000000000002000] [0x00008000] (CPF_Transient)
	uint32_t                                           bRequireUniqueCharactersPerTeam : 1;           // 0x0678 (0x0004) [0x0000000000002000] [0x00010000] (CPF_Transient)
	uint32_t                                           bWarmupTimeOverridden : 1;                     // 0x0678 (0x0004) [0x0000000000002000] [0x00020000] (CPF_Transient)
	uint32_t                                           bLockDownTrackingLists : 1;                    // 0x0678 (0x0004) [0x0000000000002000] [0x00040000] (CPF_Transient)
	uint32_t                                           bMatchEndedDueToSurrender : 1;                 // 0x0678 (0x0004) [0x0000000000000000] [0x00080000] 
	uint32_t                                           bMatchEndedDueToTeamDrop : 1;                  // 0x0678 (0x0004) [0x0000000000000000] [0x00100000] 
	uint32_t                                           bMatchEndedTooFewPlayers : 1;                  // 0x0678 (0x0004) [0x0000000000000000] [0x00200000] 
	uint32_t                                           bPrepareServerTravelError : 1;                 // 0x0678 (0x0004) [0x0000000000002000] [0x00400000] (CPF_Transient)
	int32_t                                            DebugDailyTime;                                // 0x067C (0x0004) [0x0000000000000000]               
	int32_t                                            MatchCompletionTimeInSeconds;                  // 0x0680 (0x0004) [0x0000000000000000]               
	uint8_t                                            bHardcoreMode;                                 // 0x0684 (0x0001) [0x4000000000000000]               
	int32_t                                            StartingPreMatchTime;                          // 0x0688 (0x0004) [0x0000000000004000] (CPF_Config)  
	int32_t                                            PreMatchDropTime;                              // 0x068C (0x0004) [0x0000000000004000] (CPF_Config)  
	int32_t                                            ClashViewTime;                                 // 0x0690 (0x0004) [0x0000000000004000] (CPF_Config)  
	int32_t                                            WarmupTime;                                    // 0x0694 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            PostMatchTime;                                 // 0x0698 (0x0004) [0x0000000000004000] (CPF_Config)  
	class FString                                      PlayerAchievedFirstBlood;                      // 0x06A0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class UPoplarTeamDefinition*                       TeamThatAchievedFirstBlood;                    // 0x06B0 (0x0008) [0x0000000000000000]               
	class FString                                      SpawnPlayerClassName;                          // 0x06B8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	uint8_t                                           UnknownData00[0x50];                           // 0x06C8 (0x0050) UNKNOWN PROPERTY: MapProperty PoplarGame.PoplarGameInfo.GameInfoVariables
	class UPoplarOnlineServerPlayerService*            PlayerService;                                 // 0x0718 (0x0008) [0x0000000000000000]               
	struct FVector                                     CustomSpawnLocation;                           // 0x0720 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FRotator                                    CustomSpawnRotation;                           // 0x072C (0x000C) [0x0000000000002000] (CPF_Transient)
	class FString                                      SpawnBotsTeamA;                                // 0x0738 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class FString                                      SpawnBotsTeamB;                                // 0x0748 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            NumPlayersInvolvedInLastKill;                  // 0x0758 (0x0004) [0x8000000000002000] (CPF_Transient)
	int32_t                                            NumPlayersInvolvedInLastKillBaseValue;         // 0x075C (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            NumPlayersInvolvedInLastKillModifierStack;     // 0x0760 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            ExpLevelOfPlayerKilled;                        // 0x0770 (0x0004) [0x8000000000002000] (CPF_Transient)
	int32_t                                            ExpLevelOfPlayerKilledBaseValue;               // 0x0774 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            ExpLevelOfPlayerKilledModifierStack;           // 0x0778 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	struct FGameObjectCollection                       GameObjects;                                   // 0x0788 (0x01A0) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<class APoplarAlertPoint*>             AlertPointActorPool;                           // 0x0928 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FPointer>                      EntitlementsToGrantToAllPlayers;               // 0x0938 (0x0010) [0x0000000000103000] (CPF_Native | CPF_Transient)
	class TArray<struct FPointer>                      EntitlementsToGrantToWinningTeam;              // 0x0948 (0x0010) [0x0000000000103000] (CPF_Native | CPF_Transient)
	int32_t                                            MinionCount;                                   // 0x0958 (0x0004) [0x0000000000000000]               
	int32_t                                            NextPlayerSpawnerIndex;                        // 0x095C (0x0004) [0x0000000000000000]               
	int32_t                                            MatchDocumentActiveTimeout;                    // 0x0960 (0x0004) [0x0000000000004000] (CPF_Config)  
	int32_t                                            MatchDocumentActiveTimeout_NoConnection;       // 0x0964 (0x0004) [0x0000000000004000] (CPF_Config)  
	int32_t                                            CharacterSelectStyleOption;                    // 0x0968 (0x0004) [0x0000000000002000] (CPF_Transient)
	class FString                                      CharacterSelectStyleOptionString;              // 0x0970 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UPoplarTeamDefinition*                       SuccessfullySurrenderedTeamDef;                // 0x0980 (0x0008) [0x0000000000000000]               
	class TArray<struct FPlayerEntitlement>            EntitlementsToAward;                           // 0x0988 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class APoplarPlayerStartStrategy*                  PlayerStartStrategy;                           // 0x0998 (0x0008) [0x0000000000000000]               
	class UClass*                                      SpectatorControllerClass;                      // 0x09A0 (0x0008) [0x0000000000000000]               
	float                                              AveragePercentageOfMaxLevel;                   // 0x09A8 (0x0004) [0x4000000000000000]               
	class TArray<struct FMetaRewardListener>           MetaRewardListeners;                           // 0x09B0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FPrivateMatchOptionDesc>       ValidPrivateMatchOptions;                      // 0x09C0 (0x0010) [0x0000000000404000] (CPF_Config | CPF_NeedCtorLink)
	int32_t                                            MatchResultRequestId;                          // 0x09D0 (0x0004) [0x0000000000000000]               
	class FString                                      DisplayCommandRankStyle;                       // 0x09D8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __BotSpawnedDelegate__Delegate;                // 0x09E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarGameInfo");
		}

		return uClassPointer;
	};

	void EndMatchDueToSurrender();
	void eventKickIdler(class APlayerController* PC);
	void InitAFKSystem();
	void PostBeginPlay();
	void Leviathan_ServerLoginRejected(const class FString& Address, const class FString& Reason, const class FString& ServiceHardware);
	void Leviathan_Shutdown(bool bMatchEnded, int32_t PlayerCount, const class FString& ServiceHardware);
	void Leviathan_Quarantined(bool bMatchEnded, int32_t PlayerCount, const class FString& ServiceHardware);
	void Leviathan_ServerSparkError(int32_t ServiceResult, const class FString& RequestName, const class FString& ServiceHardware);
	void CreateMetaPRI(const struct FUniqueNetId& PlayerUniqueId, class APoplarPlayerStateInfo* PlayerStateInfo);
	void RequestExit(const class FString& Reason, bool bForce);
	void RegisterSpawnedActor(class AActor* SpawnedActor);
	void TriggerStartMatchSkillsForPlayer(class UISkillInstigator* PlayerSkillInstigator, class UPoplarPlayerClassDefinition* PoplarPlayerClassDef);
	int32_t GetNextPlayerSpawnerIndex();
	bool ConvertDamageToHealing(float Damage, class APawn* DamagedPawn, class AController* DamageInstigator, const struct FVector& HitLocation, class UClass* DamageSource, const struct FTraceHitInfo& optionalHitInfo, class UDamagePipeline* optionalPipeline);
	void BotSwitchTeam(class APoplarAIPawn* BotPawn);
	void UpdateSpawnBots();
	void SpawnBot(uint8_t TeamIndex, const class FString& ClassDefinitionName, bool SpawnAtPlayerLookAt);
	void KillBots();
	void SpawnBots();
	void PlayerLeftGameNotification(class APlayerController* PC);
	void PlayerEnteredGameNotification(class APlayerController* PC);
	void eventGetSeamlessTravelActorList(bool bToEntry, class TArray<class AActor*>& ActorList);
	void OnShutdownComplete();
	void ShutdownServer();
	void OnQuarantineComplete();
	void QuarantineServer();
	void OnReadPlayersStatsDataCompleted(int32_t ServiceResult, class TArray<struct FServerPlayerStatsData>& ReadPlayersStatsData);
	void OnServerHeartbeatComplete(int32_t ServiceResult, bool bShutdown);
	void OnUpdateMatchEndAwardedEntitlementsCompleted(int32_t ServiceResult);
	void OnUpdateInMatchAwardedEntitlementsCompleted(int32_t ServiceResult);
	void OnUpdateMatchDocumentCompleted(int32_t ServiceResult);
	void OnUpdatePlayerMetaData(int32_t ServiceResult);
	void PoplarEndGame(class UPoplarTeamDefinition* TheWinningTeam, EMatchDocumentStatus MatchDocumentStatus);
	void AwardEndOfMatchMetaRewards();
	void CleanUpEverythingForMatchEnd();
	bool CanSpectate(class APlayerController* Viewer, class APlayerReplicationInfo* ViewTarget);
	int32_t GetCurrentMinionCount();
	class APoplarTeamInfo* GetTeamInfoForTeamDefinition(class UPoplarTeamDefinition* InTeamDefinition);
	bool IsFriendlyFire(class APawn* injured, class UITargetable* InstigatingTargetable);
	void NotifyKilledPoplar(class AActor* KilledActor, class AController* KilledController, class AController* KillerController, class UIDamageCauser* DamageCauser, class UClass* DamageType, class UDamagePipeline* Pipeline);
	void NotifyKilled(class AController* Killer, class AController* Killed, class APawn* KilledPawn, class UClass* DamageType, class UDamagePipeline* Pipeline);
	void Killed(class AController* Killer, class AController* KilledPlayer, class APawn* KilledPawn, class UClass* DamageType, class UDamagePipeline* Pipeline);
	void SetPlayerDefaults(class APawn* PlayerPawn);
	void OnPlayerSpawned(class APawn* PlayerPawn);
	float RatePlayerStart(class APlayerStart* P, uint8_t Team, class AController* Player);
	class APlayerStart* eventChoosePlayerStart(class AController* Player, uint8_t optionalInTeam);
	class AActor* FindPlayerStart(class AController* Player, uint8_t optionalInTeam, const class FString& optionalIncomingName);
	class APlayerController* eventLogin(const class FString& Portal, const class FString& Options, const struct FUniqueNetId& UniqueId, class FString& ErrorMessage);
	void InitializeTeams();
	void InitializeGameInfoDefinition();
	bool ChangeTeam(class AController* Other, int32_t TeamNum, bool bNewTeam);
	int32_t GetTeamIndex(class UPoplarTeamDefinition* TeamDef);
	uint8_t PickTeam(uint8_t Num, const struct FUniqueNetId& UniqueId);
	void PawnReceivedBuff(struct FBuffRegisterActionData& BuffActionData);
	void PawnReceivedDamage(class AController* Victim, class AController* Attacker, class UIDamageCauser* DamageCauser, class UClass* DamageType, class UDamagePipeline* Pipeline);
	void NotifySpawnerDeactivated(class UIPoplarSpawner* TheSpawner);
	void NotifySpawnerActivated(class UIPoplarSpawner* TheSpawner);
	void NotifyChallengeFailed(class UPoplarChallengeDefinition* ChallengeDef);
	void NotifyChallengeComplete(class UPoplarChallengeDefinition* ChallengeDef, float TimeRemaining);
	void GetLaneTrackersForTeam(class UPoplarTeamDefinition* TeamDef, class TArray<class UMinionLaneTracker*>& OutTrackers);
	void NotifyMinionWaveSpawnComplete(class APoplarMinionSpawner* MinionSpawner);
	class UMinionLaneTracker* GetOpposingLaneTracker(class UMinionLaneTracker* Tracker);
	class UMinionLaneTracker* GetMinionLaneTracker(class UPoplarLaneDefinition* LaneDef, class UPoplarTeamDefinition* TeamDef);
	void RegisterSpawner(class UIPoplarSpawner* NewSpawner);
	bool IsRegisteredWithBehaviorKernel();
	void eventRestartPlayer(class AController* NewPlayer);
	void eventPostLogin(class APlayerController* NewPlayer);
	class APawn* SpawnDefaultPawnFor(class AController* NewPlayer, class AActor* optionalStartSpot);
	void StartHumans();
	void DebugKillMinions();
	void eventHandleSeamlessTravelPlayer(class AController*& C);
	void eventPostSeamlessTravel();
	void Logout(class AController* Exiting);
	void SetRemainingTime(float RemainingTime);
	void GenericPlayerInitialization(class AController* C);
	class APlayerController* SpawnSpectatorController(const struct FVector& SpawnLocation, const struct FRotator& SpawnRotation);
	void eventPreBeginPlay();
	void UnregisterServer();
	void eventGameEnding();
	void OnUpdateMatchDocumentFailure(int32_t ServiceResult);
	void OnUpdateMatchDocumentActive(int32_t ServiceResult);
	void OnResolveHostNameComplete(const class FString& HostName, class FString& IPAddress);
	void ResolveHostName();
	void OnReadPlayerMetaData(int32_t ServiceResult, class TArray<struct FServerPlayerMetaData>& ReadPlayerMetaData);
	void OnNotifyTabulatorOfMatch(int32_t ServiceResult);
	void OnReadMatchDocument(int32_t ServiceResult, struct FServerMatchDocument& MatchDocument);
	void ReadMatchDocument();
	void OnSparkInitialized(const struct FPlatformUserId& UserId, EInitializedResult InitializedResult, class UGearboxData* Data);
	void OnGetTitleStorageFile(struct FSparkResult& Result);
	bool IsInitializationComplete();
	void OnForcedServerSparkRestartAuthenticationComplete(const struct FPlatformUserId& UserId, EInitializedResult InitializedResult);
	void RegisterServer();
	void OnWaitForSessionAssignmentComplete(bool bSuccess);
	void InitGameReplicationInfo();
	void eventInitGame(const class FString& Options, class FString& ErrorMessage);
	void BotSpawnedDelegate(class AActor* SpawnedBot);
};

// Class PoplarGame.PoplarGameInfoConstruct
// 0x0048 (0x09F8 - 0x0A40)
class APoplarGameInfoConstruct : public APoplarGameInfo
{
public:
	struct FPointer                                    VfTable_IIBehaviorConsumer;                    // 0x09F8 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FBehaviorConsumerHandle                     ConsumerHandle;                                // 0x0A00 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UPoplarGameInfoDefinition*                   GameInfoDefinition;                            // 0x0A08 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarCreditRewardsDefinition*              CreditRewardsDefinition;                       // 0x0A10 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarExperienceRewardsDefinition*          ExperienceRewardsDefinition;                   // 0x0A18 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              NextExperienceTrickleAwardTime;                // 0x0A20 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CachedExpTeamStartingTrickleFlatBonus;         // 0x0A24 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              NextCashTrickleAwardTime;                      // 0x0A28 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CachedTeamStartingTrickleFlatBonus;            // 0x0A2C (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FGIDAlias>                     GIDAliases;                                    // 0x0A30 (0x0010) [0x0000000000444000] (CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarGameInfoConstruct");
		}

		return uClassPointer;
	};

	void InitializeTeams();
	void InitializeGameInfoDefinition();
	void NotifyKilledPoplar(class AActor* KilledActor, class AController* KilledController, class AController* KillerController, class UIDamageCauser* DamageCauser, class UClass* DamageType, class UDamagePipeline* Pipeline);
	void NotifyChallengeFailed(class UPoplarChallengeDefinition* ChallengeDef);
	void NotifyChallengeComplete(class UPoplarChallengeDefinition* ChallengeDef, float TimeRemaining);
	void NotifyMinionWaveSpawnComplete(class APoplarMinionSpawner* MinionSpawner);
	void NotifySpawnerDeactivated(class UIPoplarSpawner* TheSpawner);
	void NotifySpawnerActivated(class UIPoplarSpawner* TheSpawner);
	bool IsRegisteredWithBehaviorKernel();
	struct FBehaviorConsumerHandle GetBehaviorConsumerHandle();
	class UPoplarGameInfoDefinition* FindGID(const class FString& Path);
};

// Class PoplarGame.PoplarGameInfoFrontend
// 0x01C0 (0x0A40 - 0x0C00)
class APoplarGameInfoFrontend : public APoplarGameInfoConstruct
{
public:
	int32_t                                            BestSessionIndex;                              // 0x0A40 (0x0004) [0x0000000000000000]               
	class TArray<int32_t>                              ReservationsWithNoSpace;                       // 0x0A48 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FUniqueNetId>                  SessionsToIgnore;                              // 0x0A58 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UPoplarPersistentBeaconManager*              BeaconManager;                                 // 0x0A68 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarMatchmakingTeamSearch*                TeamSearch;                                    // 0x0A70 (0x0008) [0x0000000000000000]               
	class UPoplarMatchmakingGameSearch*                GameSearch;                                    // 0x0A78 (0x0008) [0x0000000000000000]               
	int32_t                                            MaxPing;                                       // 0x0A80 (0x0004) [0x0000000000000000]               
	int32_t                                            TeamSearchCount;                               // 0x0A84 (0x0004) [0x0000000000000000]               
	int32_t                                            MaxTeamSearchCount;                            // 0x0A88 (0x0004) [0x0000000000004000] (CPF_Config)  
	float                                              MaxIdleHostTime;                               // 0x0A8C (0x0004) [0x0000000000004000] (CPF_Config)  
	ENATType                                           CanHostNatType;                                // 0x0A90 (0x0001) [0x0000000000004000] (CPF_Config)  
	EMatchmakingState                                  CurrentMatchmakingState;                       // 0x0A91 (0x0001) [0x0000000000002000] (CPF_Transient)
	EMatchmakingUIState                                CurrentMatchmakingUIState;                     // 0x0A92 (0x0001) [0x0000000000002000] (CPF_Transient)
	EPoplarMatchmakingCancellationReason               CancelMatchmakingReason;                       // 0x0A93 (0x0001) [0x0000000000002000] (CPF_Transient)
	EExperienceMatchmakingType                         CancelExperienceMatchmakingType;               // 0x0A94 (0x0001) [0x0000000000002000] (CPF_Transient)
	float                                              GameMatchmakingHostChance;                     // 0x0A98 (0x0004) [0x0000000000004000] (CPF_Config)  
	float                                              TeamMatchmakingHostChancePerPlayer;            // 0x0A9C (0x0004) [0x0000000000004000] (CPF_Config)  
	float                                              StartAsHostChance;                             // 0x0AA0 (0x0004) [0x0000000000004000] (CPF_Config)  
	int32_t                                            TeamSkillToleranceExpansionLevel;              // 0x0AA4 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            GameSkillToleranceExpansionLevel;              // 0x0AA8 (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<float>                                TeamSkillToleranceMultiplier;                  // 0x0AB0 (0x0010) [0x0000000000404000] (CPF_Config | CPF_NeedCtorLink)
	class TArray<float>                                GameSkillToleranceMultiplier;                  // 0x0AC0 (0x0010) [0x0000000000404000] (CPF_Config | CPF_NeedCtorLink)
	uint32_t                                           bForceMatchmakingHost : 1;                     // 0x0AD0 (0x0004) [0x0000000000004000] [0x00000001] (CPF_Config)
	uint32_t                                           bCampaignMatchmakingShouldUseMinimumTeamSize : 1;// 0x0AD0 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bRestartingSmartMatch : 1;                     // 0x0AD0 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           bTellClientsToJoin : 1;                        // 0x0AD0 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	uint32_t                                           bCancellingMatchmaking : 1;                    // 0x0AD0 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	int32_t                                            VoteTimeInSeconds;                             // 0x0AD4 (0x0004) [0x0000000000004000] (CPF_Config)  
	float                                              CampaignFullTeamSearchTimeoutInSeconds;        // 0x0AD8 (0x0004) [0x0000000000004000] (CPF_Config)  
	float                                              StepStartTime;                                 // 0x0ADC (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              MatchmakingStartTime;                          // 0x0AE0 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              StepTotalDuration[0xF];                        // 0x0AE4 (0x003C) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FPlatformUserId>               PendingRegisterWithZeppelin;                   // 0x0B20 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class FString                                      MatchmakingGuid;                               // 0x0B30 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<struct FPendingCastVoteData>          PendingCastVotes;                              // 0x0B40 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<struct FTelemetryVoteData>            TelemetryCastVotes;                            // 0x0B50 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	float                                              ResumeMatchmakingTime;                         // 0x0B60 (0x0004) [0x0000000000004000] (CPF_Config)  
	float                                              SmartMatch_TeamConnectTimeout;                 // 0x0B64 (0x0004) [0x0000000000004000] (CPF_Config)  
	float                                              SmartMatch_GameConnectTimeout;                 // 0x0B68 (0x0004) [0x0000000000004000] (CPF_Config)  
	float                                              SmartMatch_BecomeHostTimeout;                  // 0x0B6C (0x0004) [0x0000000000004000] (CPF_Config)  
	float                                              SmartMatch_WaitForHostTimeout;                 // 0x0B70 (0x0004) [0x0000000000004000] (CPF_Config)  
	float                                              SmartMatch_MatchmakingTicketTimeout;           // 0x0B74 (0x0004) [0x0000000000004000] (CPF_Config)  
	struct FDouble                                     SmartMatch_TeamMatchmakingStartTime;           // 0x0B78 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            SmartMatch_ExpectedTeamPlayerCount;            // 0x0B80 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            SmartMatch_ExpectedGamePlayerCount;            // 0x0B84 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            NumFindTeamMatchTicketsCreated;                // 0x0B88 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            NumFillTeamMatchTicketsCreated;                // 0x0B8C (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            NumFindGameMatchTicketsCreated;                // 0x0B90 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            NumTeamSearchResults;                          // 0x0B94 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            NumGameSearchResults;                          // 0x0B98 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            NumTeamReservationRequests;                    // 0x0B9C (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            NumGameReservationRequests;                    // 0x0BA0 (0x0004) [0x0000000000002000] (CPF_Transient)
	class FString                                      ClusterTimeoutMessage;                         // 0x0BA8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	int32_t                                            BlockingMessageId;                             // 0x0BB8 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            PreparingGameMessageId;                        // 0x0BBC (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CancelMatchmakingServiceResult;                // 0x0BC0 (0x0004) [0x0000000000002000] (CPF_Transient)
	class FString                                      CancelMatchmakingDebugCode;                    // 0x0BC8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<struct FPartyReservation>             ReservationSnapshot;                           // 0x0BD8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            MaxInitializationFailures;                     // 0x0BE8 (0x0004) [0x0000000000004000] (CPF_Config)  
	int32_t                                            InitializationFailureCount;                    // 0x0BEC (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            ExpectedQueueTime_Short;                       // 0x0BF0 (0x0004) [0x0000000000004000] (CPF_Config)  
	int32_t                                            ExpectedQueueTime_Long;                        // 0x0BF4 (0x0004) [0x0000000000004000] (CPF_Config)  
	int32_t                                            GetDedicatedServerAttempt;                     // 0x0BF8 (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarGameInfoFrontend");
		}

		return uClassPointer;
	};

	void SmartMatch_ClientGameSessionReady(EMatchmakingResult Result);
	void SmartMatch_ClientTeamSessionReady(EMatchmakingResult Result);
	void SmartMatch_GameMatchmakingFailsafeTimedOut();
	void SmartMatch_TeamMatchmakingFailsafeTimedOut();
	void SmartMatch_DestroyTeamSessionComplete(const struct FName& SessionName, EOnlineSubsystemResult Result);
	void SmartMatch_DestroyGameSessionComplete(const struct FName& SessionName, EOnlineSubsystemResult Result);
	void SmartMatch_TeamBeaconDestroyed();
	void SmartMatch_HostGameBeaconDestroyed();
	void SmartMatch_CancelMatchmakingComplete(bool bWasSuccessful);
	void SmartMatch_DestroyOnlineGameComplete(const struct FName& SessionName, EOnlineSubsystemResult Result);
	void SmartMatch_WaitForHostComplete(bool bWasSuccessful, const struct FName& SessionName);
	void SmartMatch_BecomeHostComplete(bool bWasSuccessful, const struct FName& SessionName, bool bIsHost);
	void SmartMatch_GameConnectTimedOut();
	void SmartMatch_GameReservationChange();
	void SmartMatch_GameReservationsFull();
	void SmartMatch_DestroyClientGameBeaconComplete();
	void SmartMatch_RequestGameReservationComplete(EPartyReservationResult Result);
	void SmartMatch_CreateClientGameBeaconComplete(EOnlineSubsystemResult Result, class UPoplarPartyBeaconClient* GameBeacon);
	void SmartMatch_CreateHostGameBeaconComplete(EOnlineSubsystemResult Result, class UPoplarPartyBeaconHost* GameBeacon);
	void SmartMatch_JoinGameSessionComplete(const struct FName& SessionName, EOnlineSubsystemResult Result);
	void SmartMatch_ResolveGameSessionComplete(bool bWasSuccessful, const struct FOnlineGameSearchResult& Result);
	void SmartMatch_FindGameComplete(EMatchmakingResult Result);
	void SmartMatch_InvalidTicketSessionTeamBeaconDestroyed();
	void SmartMatch_FillTeamComplete(EMatchmakingResult Result);
	void SmartMatch_PrepareForGameMatchmaking();
	void SmartMatch_TeamConnectTimedOut();
	void SmartMatch_TeamReservationChange();
	void SmartMatch_TeamReservationsFull();
	void SmartMatch_DestroyClientTeamBeaconComplete();
	void SmartMatch_RequestTeamReservationComplete(EPartyReservationResult Result);
	void SmartMatch_CreateClientTeamBeaconComplete(EOnlineSubsystemResult Result, class UPoplarPartyBeaconClient* TeamBeacon);
	void SmartMatch_CreateHostTeamBeaconComplete(EOnlineSubsystemResult Result, class UPoplarPartyBeaconHost* TeamBeacon);
	void SmartMatch_JoinTeamSessionComplete(const struct FName& SessionName, EOnlineSubsystemResult Result);
	void SmartMatch_ResolveTeamSessionComplete(bool bWasSuccessful, const struct FOnlineGameSearchResult& Result);
	void SmartMatch_FindTeamComplete(EMatchmakingResult Result);
	void DelayedResumeMatchmaking();
	bool IsMatchmaking();
	struct FPlatformUserId GetPrimaryUserId();
	class APoplarPlayerController* GetPrimaryPlayerController();
	void DebugForceConnectToCustomServer(const class FString& ServerAddress);
	EMatchmakingState GetMatchmakingState();
	void SetMatchmakingState(EMatchmakingState NewState);
	void eventInitGame(const class FString& Options, class FString& ErrorMessage);
	void OnCampaignMatchmakingTeamSearchTimeout();
	void OnGetDedicatedServerEstimatedWait();
	void OnGetDedicatedServerTimeout();
	void HandleSparkError(int32_t ServiceResult, const class FString& DebugCode, const class FString& RequestName);
	void ConnectToDedicatedServer(const class FString& ServerAddress, const class FString& ServerKey);
	void OnGetDedicatedServerComplete(const struct FPlatformUserId& PlayerID, int32_t ServiceResult, struct FGetDedicatedServerData& ServerData);
	void GetDedicatedServerInfo();
	void OnVoteForOptionsComplete(const struct FPlatformUserId& PlayerID, int32_t ServiceResult, const class FString& DebugCode);
	void ConfirmVoteOptionChoice(const struct FPlatformUserId& PlayerID, int32_t VoteOptionId);
	void VoteForOptions();
	void OnRegisterZeppelinTicketComplete(const struct FPlatformUserId& PlayerID, int32_t ServiceResult, const class FString& DebugCode);
	void RegisterZeppelinTicket();
	void ClientReceiveZeppelinTicketFromHost(const class FString& ZeppelinTicket);
	void OnGetZeppelinTicketComplete(const struct FPlatformUserId& PlayerID, int32_t ServiceResult, const class FString& DebugCode, struct FZeppelinTicketData& TicketData);
	void AcquireZeppelinTicket();
	void OnDestroyHostGameBeaconForMatchmakingCleanupComplete();
	void OnCancelHostGameBeaconForMatchmakingCleanupComplete();
	void OnAllPartiesInSession();
	void OnAllPartiesConnectedToBeacon();
	void OnJoinRequestReceived(const struct FName& SessionName, class UClass* SearchClass, const struct FPlatformSessionData& PlatformSpecificInfo);
	void OnReservationRequestComplete(EPartyReservationResult ReservationResult);
	void DelayedFindAnyMatch();
	void FindAnyMatch();
	void DelayedFindBestMatch();
	void FindBestMatch();
	void OnHostBeaconDestroyed();
	void OnHostBeaconCancelled();
	void OnClientBeaconCancelled();
	void OnCreateHostBeaconForSwitchToHostComplete(EOnlineSubsystemResult Result, class UPoplarPartyBeaconHost* NewBeacon);
	void OnCreateClientBeaconForRequestReservationComplete(EOnlineSubsystemResult Result, class UPoplarPartyBeaconClient* NewBeacon);
	void ContinueMatching();
	void OnHostBeaconReservationChange();
	void OnFindAnyMatchComplete(bool bWasSuccessful);
	void OnFindBestMatchComplete(bool bWasSuccessful);
	void HostIdleTimer();
	void ClearTimers();
	void OnMatchmakingClientHasCancelled();
	void OnMatchmakingHostHasCancelled();
	void StartMatching();
	void OnClientBeaconDestroyed();
	void CancelHostBeacon(const struct FName& BeaconName);
	void ChooseBestSession(class UOnlineGameSearch* TheSearch);
	void ResetBestSessionVars();
	void BuildReservationPlayerList(class TArray<struct FPlayerReservation>& Members);
	void ClearMatchmakingDelegates();
	void CleanUpMatchmakingState();
	bool ShouldAllowMatchmakingCancel();
	void ChooseClientState(EMatchmakingState NewState);
	void OnSetLobbySessionJoinableComplete(EOnlineSubsystemResult Result);
	void OnMatchmakingBeaconsDestroyed();
	class FString GetMatchmakingStateString(EMatchmakingState StateId);
	bool StartMatchmaking(const struct FPlatformUserId& UserId);
};

// Class PoplarGame.PoplarGameInfoDefinition
// 0x0230 (0x0058 - 0x0288)
class UPoplarGameInfoDefinition : public UGBXDefinition
{
public:
	struct FPointer                                    VfTable_IIBehaviorProvider;                    // 0x0058 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UBehaviorProviderDefinition*                 BehaviorProviderDefinition;                    // 0x0060 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UObject*                                     UI_ObjectiveUnitDefinitions[0xA];              // 0x0068 (0x0050) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UGFxUIAction_Attach*                         ModeWidget;                                    // 0x00B8 (0x0008) [0x0000000004400009] (CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class TArray<struct FSpecializedBehaviorEvent>     SupportedGameInfoEvents;                       // 0x00C0 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	uint32_t                                           RequireUniqueCharactersPerTeam : 1;            // 0x00D0 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bAutomaticallyDisplayEnemyOutlinesWhenSeenByTeammates : 1;// 0x00D0 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	uint32_t                                           bKillModifiersAwardScore : 1;                  // 0x00D0 (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	uint32_t                                           bStatsAwardScore : 1;                          // 0x00D0 (0x0004) [0x0000000000000001] [0x00000008] (CPF_Edit)
	uint32_t                                           bEnableAnnouncer : 1;                          // 0x00D0 (0x0004) [0x0000000000000001] [0x00000010] (CPF_Edit)
	uint32_t                                           bEndMatchOnTeamDrop : 1;                       // 0x00D0 (0x0004) [0x0000000000000001] [0x00000020] (CPF_Edit)
	uint32_t                                           bOverrideBotDifficulty : 1;                    // 0x00D0 (0x0004) [0x0000000000000003] [0x00000040] (CPF_Edit | CPF_Const)
	uint32_t                                           bOverrideOvershieldCrowdControlBehavior : 1;   // 0x00D0 (0x0004) [0x0000000000000003] [0x00000080] (CPF_Edit | CPF_Const)
	uint32_t                                           bOvershieldPreventCrowdControl : 1;            // 0x00D0 (0x0004) [0x0000000000000003] [0x00000100] (CPF_Edit | CPF_Const)
	uint32_t                                           bPvE : 1;                                      // 0x00D0 (0x0004) [0x0000000000000001] [0x00000200] (CPF_Edit)
	uint32_t                                           bOperations : 1;                               // 0x00D0 (0x0004) [0x0000000000000001] [0x00000400] (CPF_Edit)
	class UPoplarCharacterIntroDefinition*             CharacterIntroDefinition;                      // 0x00D8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarGameTypeUIDataDefinition*             GameTypeUIDataDefinition;                      // 0x00E0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarGameTypeIDDefinition*                 GameTypeId;                                    // 0x00E8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                MatchLength;                                   // 0x00F0 (0x0020) [0x0000000000000001] (CPF_Edit)    
	struct FAttributeInitializationData                WarmupDuration;                                // 0x0110 (0x0020) [0x0000000000000001] (CPF_Edit)    
	int32_t                                            WarmupTime;                                    // 0x0130 (0x0004) [0x0000000020000000]  CPF_Deprecated)
	class TArray<struct FGameTimeEventData>            GameTimeEvents;                                // 0x0138 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class TArray<class UPoplarTeamDefinition*>         GameTeams;                                     // 0x0148 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class UPoplarCreditRewardsDefinition*              CreditRewardsDefinition;                       // 0x0158 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarExperienceRewardsDefinition*          ExperienceRewardsDefinition;                   // 0x0160 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UKillModifiersDefinition*                    KillModifiersDef;                              // 0x0168 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAssistModifiersDefinition*                  AssistModifiersDef;                            // 0x0170 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarSurrenderDefinition*                  SurrenderDef;                                  // 0x0178 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                CurrencyRetainedOnDeath;                       // 0x0180 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                GameModeHealingModifier;                       // 0x01A0 (0x0020) [0x0000000000000001] (CPF_Edit)    
	class UPoplarTeamDeathDefinition*                  DefaultTeamDeathDefinition;                    // 0x01C0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class TArray<class UPoplarUnitTypeDefinition*>     PlayerAlertOrderOfPriority;                    // 0x01C8 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<class FString>                        WhitelistEntitlements;                         // 0x01D8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class TArray<class FString>                        BlacklistEntitlements;                         // 0x01E8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FName                                       CharacterSelectLevelName;                      // 0x01F8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              SetupTimeoutTime;                              // 0x0200 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarScoreboardDefinition*                 ScoreboardDefinition;                          // 0x0208 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarPostMatchDefinition*                  PostMatchDefinition;                           // 0x0210 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarMusicDefinition*                      MusicDefinition;                               // 0x0218 (0x0008) [0x0000000020000002] (CPF_Const | CPF_Deprecated)
	class UGameModeStatDimensionValueDefinition*       StatDimensionValue;                            // 0x0220 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             GameModeTimesPlayedStat;                       // 0x0228 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             GameModeTimesWonStat;                          // 0x0230 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             ActivatedMissionObjectiveStat;                 // 0x0238 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             CompletedMissionObjectiveStat;                 // 0x0240 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       TeamADefinition;                               // 0x0248 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       TeamBDefinition;                               // 0x0250 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            OverrideBotDifficulty;                         // 0x0258 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       PvEDefaultDenTeam;                             // 0x0260 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FAttributeInitializationData                CooldownTimeAfterStructureDestroyed;           // 0x0268 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarGameInfoDefinition");
		}

		return uClassPointer;
	};

	void OnRespawnTicketsChanged(class UObject* TeamDefinition, int32_t OldRespawnTickets, int32_t NewRespawnTickets, class UObject* RespawnedPlayer, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnTeamDeadHardcoreMode(class UObject* TeamDefinition, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnTeamSurrendered(class UObject* TeamThatSurrendered, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnChallengeFailed(class UPoplarChallengeDefinition* ChallengeDef, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnChallengeCompleted(class UPoplarChallengeDefinition* ChallengeDef, float TimeRemaining, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnPlayerLostCurrencyFromDying(class UObject* Player, int32_t CurrencyLost, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnTeamDeadNoTickets(class UObject* TeamDefinition, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnTeamDropped(class UObject* TeamDefinition, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnBaseTeleportCompleted(class UObject* Player, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnBaseTeleportCanceled(class UObject* Player, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnBaseTeleportPreExecution(class UObject* Player, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnBaseTeleportRequested(class UObject* Player, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnPlayerAlertCreated(class UObject* PingInstigator, class UObject* PingTarget, const struct FVector& PingLocation, struct FBehaviorConsumerHandle& ConsumerHandle);
	void GameInfoEvent(const struct FName& SpecializedEventName, class UObject* Instigator, class UObject* Other, class UObject* LaneDefinition, class UObject* TeamDefinition, int32_t Index, float FloatParam, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnMinionWaveSpawnComplete(class UObject* Spawner, class UObject* LaneDefinition, class UObject* TeamDefinition, class UObject* SpawnerTypeDefinition, int32_t Index, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnSpawnerDeactivated(class UObject* Spawner, class UObject* LaneDefinition, class UObject* TeamDefinition, class UObject* SpawnerTypeDefinition, int32_t Index, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnSpawnerActivated(class UObject* Spawner, class UObject* LaneDefinition, class UObject* TeamDefinition, class UObject* SpawnerTypeDefinition, int32_t Index, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnPlayerDied(class UObject* KilledPlayer, class UObject* KilledPlayerTeam, int32_t TotalDeadOnTeam, int32_t TeamSize, float PercentageDeadOnTeam, const struct FVector& LastGoodPlayerLocation, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnPlayerSpawned(class UObject* SpawnedPlayer, class UObject* TeamDefinition, class UObject* UnitTypeDefinition, bool IsHuman, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnGameObjectDestroyed(class UObject* DestroyedObject, class UObject* LaneDefinition, class UObject* TeamDefinition, class UObject* UnitTypeDefinition, class UObject* Killer, int32_t Index, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnPlayInEditorSessionStarted(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnMatchTimeEvent(const struct FName& SpecializedEventName, float GameTimeRemaining, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnMatchTimeEnded(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnWarmupEnded(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnWarmupStarted(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnMatchStarted(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnMatchPendingStart(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnUnitRegistered(class UObject* NewUnit, class UObject* LaneDefinition, class UObject* TeamDefinition, class UObject* UnitTypeDefinition, int32_t Index, struct FBehaviorConsumerHandle& ConsumerHandle);
	void HandlePlayerAlert(class UObject* PlayerAlertInstigator, class UObject* PlayerAlertTarget, const struct FVector& PlayerAlertLocation);
};

// Class PoplarGame.PoplarGameInfoVariableDefinition
// 0x0028 (0x0058 - 0x0080)
class UPoplarGameInfoVariableDefinition : public UGBXDefinition
{
public:
	struct FPmtData                                    PmtData;                                       // 0x0058 (0x0028) [0x0000000000003000] (CPF_Native | CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarGameInfoVariableDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarGameInfoReplicatedVariableDefinition
// 0x0008 (0x0080 - 0x0088)
class UPoplarGameInfoReplicatedVariableDefinition : public UPoplarGameInfoVariableDefinition
{
public:
	int32_t                                            GameReplicationChannel;                        // 0x0080 (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarGameInfoReplicatedVariableDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarGameViewportClient
// 0x00B0 (0x0270 - 0x0320)
class UPoplarGameViewportClient : public UWillowGameViewportClient
{
public:
	class UPoplarGameInputEmulator*                    InputEmulator;                                 // 0x0270 (0x0008) [0x0000000000000000]               
	class UPersistentBeaconManager*                    BeaconManager;                                 // 0x0278 (0x0008) [0x0000000000000000]               
	class UClass*                                      BeaconManagerClass;                            // 0x0280 (0x0008) [0x0000000000000000]               
	class FString                                      SparkIDStringForWatermark;                     // 0x0288 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	EBeaconFlags                                       CachedBeaconFlags;                             // 0x0298 (0x0001) [0x0000000000002000] (CPF_Transient)
	EBeaconFlags                                       ReturnToMainMenuBeaconFlags;                   // 0x0299 (0x0001) [0x0000000000002000] (CPF_Transient)
	EOnlineSubsystemResult                             SavedInviteResult;                             // 0x029A (0x0001) [0x0000000000002000] (CPF_Transient)
	class UErrorReporter*                              ErrorReporter;                                 // 0x02A0 (0x0008) [0x0000000000000000]               
	uint32_t                                           bReturningToTitle : 1;                         // 0x02A8 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bReturningToMainMenu : 1;                      // 0x02A8 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bQueuedReturnToTitleScreen : 1;                // 0x02A8 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           bReturnToTitleScreenRemoveSplitPlayers : 1;    // 0x02A8 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	uint32_t                                           bPendingGameInvite : 1;                        // 0x02A8 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	uint32_t                                           bDeferInviteProcessingToFrontendMovie : 1;     // 0x02A8 (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	uint32_t                                           bKickSplitPlayerForInvite : 1;                 // 0x02A8 (0x0004) [0x0000000000002000] [0x00000040] (CPF_Transient)
	uint32_t                                           bSplitscreenJoinInProgress : 1;                // 0x02A8 (0x0004) [0x0000000000002000] [0x00000080] (CPF_Transient)
	uint32_t                                           bAwaitingHostLobbyBeaconResponse : 1;          // 0x02A8 (0x0004) [0x0000000000002000] [0x00000100] (CPF_Transient)
	uint32_t                                           bShowWatermark : 1;                            // 0x02A8 (0x0004) [0x0000000000002000] [0x00000200] (CPF_Transient)
	class FString                                      ReturnToMainMenuReason;                        // 0x02B0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class FString                                      ReturnToTitleScreenReason;                     // 0x02C0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FPlatformUserId                             SavedInviteUserId;                             // 0x02D0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FOnlineGameSearchResult                     SavedInviteSearchResult;                       // 0x02D8 (0x0010) [0x0000000000002000] (CPF_Transient)
	class UWillowGFxDialogBox*                         InviteDlg;                                     // 0x02E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FPlatformUserId                             CachedSplitJoinUserId;                         // 0x02F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              WatermarkMinAlpha;                             // 0x02F8 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              WatermarkMaxAlpha;                             // 0x02FC (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FUniqueNetId                                LastConnectionAttemptNetId;                    // 0x0300 (0x0014) [0x0000000000002000] (CPF_Transient)
	int32_t                                            BeaconMessageId;                               // 0x0314 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            RegisterSplitPlayerMessageId;                  // 0x0318 (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarGameViewportClient");
		}

		return uClassPointer;
	};

	void OnGameLicenseTypeChange(EGameLicenseType GameLicenseType);
	void OnGameInstallationStatusChange(bool bIsComplete);
	void OnPlayerDisplayDataChanged(const struct FPlatformUserId& UserId, const class FString& DisplayName);
	void OnFrontendMovieFadeoutForMigrationComplete(class UPoplarFrontendGFxMovie* TheMovie);
	void SplitJoinReservationRequestComplete(EPartyReservationResult ReservationResult);
	void RegisterSplitPlayerComplete(const struct FName& SessionName, const struct FUniqueNetId& PlayerID, bool bWasSuccessful);
	void InitializeSplitPlayerComplete(const struct FPlatformUserId& UserId, bool bWasSuccessful);
	void ShowPlatformUserUIComplete(bool bWasSuccessful, const struct FPlatformUserId& UserId);
	void NotifySystemResume();
	void NotifyServiceStatusChange(bool bIsConnected);
	void Leviathan_JoinLobbyBeaconFailed(const struct FPlatformUserId& UserId, EPartyReservationResult ReservationResult);
	void Leviathan_InviteFailed(const struct FPlatformUserId& UserId, const class FString& Reason);
	void Leviathan_AcceptInviteStrict(const struct FPlatformUserId& UserId);
	void Leviathan_InviteAccepted(const struct FPlatformUserId& UserId, bool bInGame);
	void OnCreateHostLobbyBeaconComplete(EOnlineSubsystemResult Result, class UPoplarPartyBeaconHost* NewBeacon);
	void OnInviteAborted();
	bool OnConfirmInviteFailed(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId);
	void OnConnectionFailed(const class FString& FailedReason);
	class FString GetReservationErrorMessage(EPartyReservationResult ReservationResult);
	void RemoveAllSplitscreenPlayers();
	void NotifyGameInviteProcessingStarted();
	void OnLobbyBeaconReservationRequestComplete(EPartyReservationResult ReservationResult);
	void OnCreateClientLobbyBeaconForInviteComplete(EOnlineSubsystemResult Result, class UPoplarPartyBeaconClient* NewBeacon);
	bool OnConfirmKickPlayersForInvite(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId);
	void PreOnGameInviteAccepted();
	void OnInviteJoinComplete(const struct FName& SessionName, EOnlineSubsystemResult Result);
	void OnLobbyBeaconDestroyedForInvite();
	void OnGameInviteAccepted(const struct FPlatformUserId& UserId, struct FOnlineGameSearchResult& InviteResult);
	void NotifyInviteFailed(const struct FPlatformUserId& UserId);
	void NotifyNotEnoughSpaceInInvite(const struct FPlatformUserId& UserId);
	void NotifyNotAllPlayersCanJoinInvite(const struct FPlatformUserId& UserId);
	void HandleInviteFailure(const struct FPlatformUserId& UserId, const class FString& DialogSection);
	void NotifyInviteFailedWithResult(const struct FPlatformUserId& UserId, EOnlineSubsystemResult Result);
	bool OnKickNetworkedPlayersForInvite_Confirm(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId);
	void ProceedWithInactiveInvite();
	void NonPrimaryOnGameInviteAccepted(const struct FPlatformUserId& InvitedUserId, const struct FOnlineGameSearchResult& InviteResult);
	void HandleActiveControllerInvite(const struct FPlatformUserId& UserId, struct FOnlineGameSearchResult& InviteResult);
	void HandleInactiveControllerInvite(const struct FPlatformUserId& UserId, struct FOnlineGameSearchResult& InviteResult);
	void HandleSplitscreenJoinViaInvite(const struct FPlatformUserId& UserId);
	bool IsPlayerInMyGame(const struct FUniqueNetId& UniqueId);
	bool IsInactiveController(const struct FPlatformUserId& UserId);
	void HandleControllerInvite(const struct FPlatformUserId& UserId);
	void InnerOnGameInviteAcceptedP(const struct FPlatformUserId& UserId, EOnlineSubsystemResult Result, struct FOnlineGameSearchResult& InviteResult);
	void InitializePlayerForInviteComplete(const struct FPlatformUserId& UserId, bool bWasSuccessful);
	void ResumeInviteProcess();
	void OnGameInviteAcceptedP(const struct FPlatformUserId& UserId, EOnlineSubsystemResult Result, struct FOnlineGameSearchResult& InviteResult);
	static void CleanUpPlayerForTitleScreen(class ULocalPlayer* LP, const struct FUniqueNetId& NetId);
	void OnSparkRestartAuthenticationComplete(const struct FPlatformUserId& UserId, EInitializedResult InitializedResult);
	void NotifyOnlinePrivilegeChanged(const struct FPlatformUserId& UserId, EOnlineFeature Feature, EFeaturePrivilegeLevel PrivilegeLevel);
	void FinishReturnToMainMenu();
	void OnEndLobbySessionComplete(const struct FName& SessionName, EOnlineSubsystemResult Result);
	void OnEndTeamSessionComplete(const struct FName& SessionName, EOnlineSubsystemResult Result);
	void OnDestroyTeamBeaconComplete();
	void OnDestroyGameBeaconComplete();
	void ReturnToMainMenu(const class FString& Reason, EBeaconFlags BeaconFlags);
	void ReturnToTitleScreen(const class FString& Reason, bool optionalBRemoveSplitPlayers);
	class FString ResolveReturnToMenuReason(const class FString& Message, const class FString& Title);
	void NotifyConnectionError(EProgressMessageType MessageType, const class FString& optionalMessage, const class FString& optionalTitle);
	void HandleLoginStatusChange(const struct FPlatformUserId& UserId, ELoginStatus PreviousStatus, ELoginStatus NewStatus, const struct FUniqueNetId& PreviousId, const struct FUniqueNetId& NewId);
	void NotifyLoginStatusChange(const struct FPlatformUserId& UserId, ELoginStatus PreviousStatus, ELoginStatus NewStatus, const struct FUniqueNetId& PreviousId, const struct FUniqueNetId& NewId);
	void HandleLinkStatusChange(bool bIsConnected);
	void NotifyLinkStatusChange(bool bIsConnected);
	void OnPlayerChatTextReceived(const struct FUniqueNetId& UniqueId, uint8_t Channel, const class FString& ChatText);
	class UPersistentBeaconManager* GetOrCreateBeaconManager();
	int32_t GetInitialNumSplitscreenPlayers();
	void InputEnableEmulator();
	void InputStartPlayback(const class FString& optionalFilename);
	void InputStopEmulator();
	void InputStartCapture();
	bool CreateInitialPlayer(class FString& OutError);
	void InitializeInputEmulator(bool optionalBForce);
	bool Init(class FString& OutError);
};

// Class PoplarGame.PoplarGameInputEmulator
// 0x0080 (0x0058 - 0x00D8)
class UPoplarGameInputEmulator : public UObject
{
public:
	EInputEmulatorState                                State;                                         // 0x0058 (0x0001) [0x0000000000000000]               
	struct FPointer                                    FileAr;                                        // 0x0060 (0x0008) [0x0000000000003000] (CPF_Native | CPF_Transient)
	struct FMap_Mirror                                 InputAxisKeyStates;                            // 0x0068 (0x0050) [0x0000000000003000] (CPF_Native | CPF_Transient)
	class FString                                      CurrentPlaybackFileName;                       // 0x00B8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	uint32_t                                           ShouldLoopPlayback : 1;                        // 0x00C8 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	float                                              PlaybackDeltaTime;                             // 0x00CC (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              PlaybackNextDeltaTime;                         // 0x00D0 (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarGameInputEmulator");
		}

		return uClassPointer;
	};

	void StopInputPlayback();
	void StartInputPlayback(const class FString& Filename);
	void StopInputCapture();
	void StartInputCapture();
	void Update(float DeltaTime);
};

// Class PoplarGame.PoplarGameReplicationInfo
// 0x0F18 (0x0478 - 0x1390)
class APoplarGameReplicationInfo : public AWillowGameReplicationInfo
{
public:
	class FString                                      TeamOutcomeReasons[0x2];                       // 0x0478 (0x0020) [0x0000000000402020] (CPF_Net | CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            TeamScores[0x2];                               // 0x0498 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	struct FMatchStateData                             CurrentMatchState;                             // 0x04A0 (0x0028) [0x0000000100402020] (CPF_Net | CPF_Transient | CPF_NeedCtorLink)
	float                                              GameTimeSeconds;                               // 0x04C8 (0x0004) [0x4000000000002000] (CPF_Transient)
	class UPoplarGameInfoDefinition*                   GameInfoDefinition;                            // 0x04D0 (0x0008) [0x0000000100002020] (CPF_Net | CPF_Transient)
	class APoplarMapManager*                           MapManager;                                    // 0x04D8 (0x0008) [0x0000000100002020] (CPF_Net | CPF_Transient)
	class APoplarMatchScoreReplicationInfo*            MatchScoreInfo;                                // 0x04E0 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class UPoplarScoreboardDefinition*                 ScoreboardDefinition;                          // 0x04E8 (0x0008) [0x0000000100002020] (CPF_Net | CPF_Transient)
	class UPoplarPostMatchDefinition*                  PostMatchDefinition;                           // 0x04F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarMissionTracker*                       MatchMissionTracker;                           // 0x04F8 (0x0008) [0x0000000100002020] (CPF_Net | CPF_Transient)
	class UKillModifiersDefinition*                    KillModifiersDef;                              // 0x0500 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UAssistModifiersDefinition*                  AssistModifiersDef;                            // 0x0508 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarSurrenderDefinition*                  SurrenderDef;                                  // 0x0510 (0x0008) [0x0000000000002000] (CPF_Transient)
	class TArray<class UPoplarTeamDeathDefinition*>    TeamDeathDefinitions;                          // 0x0518 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            GameInfoVariables[0x10];                       // 0x0528 (0x0040) [0x0000000100000020] (CPF_Net)     
	int32_t                                            MaxPlayersPerTeam;                             // 0x0568 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class TArray<class APoplarMetaPlayerReplicationInfo*> MetaPRIArray;                                  // 0x0570 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int32_t                                            ExpectedCharacterUsabilityEntries;             // 0x0580 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	struct FCharacterUsabilityData                     ReplicatedCharacterUsability[0x64];            // 0x0588 (0x0960) [0x0000000100402020] (CPF_Net | CPF_Transient | CPF_NeedCtorLink)
	uint32_t                                           ServerIsTrackingMatch : 1;                     // 0x0EE8 (0x0004) [0x0000000100002020] [0x00000001] (CPF_Net | CPF_Transient)
	uint32_t                                           bHardcoreMode : 1;                             // 0x0EE8 (0x0004) [0x0000000100002020] [0x00000002] (CPF_Net | CPF_Transient)
	uint32_t                                           bProcessStats : 1;                             // 0x0EE8 (0x0004) [0x0000000000002020] [0x00000004] (CPF_Net | CPF_Transient)
	uint32_t                                           bMatchTimerStarted : 1;                        // 0x0EE8 (0x0004) [0x0000000000002020] [0x00000008] (CPF_Net | CPF_Transient)
	uint32_t                                           bPlayerRejoined : 1;                           // 0x0EE8 (0x0004) [0x0000000000000020] [0x00000010] (CPF_Net)
	uint32_t                                           bForceGlobalChat : 1;                          // 0x0EE8 (0x0004) [0x0000000000000020] [0x00000020] (CPF_Net)
	uint32_t                                           bRequireUniqueCharactersPerTeam : 1;           // 0x0EE8 (0x0004) [0x0000000000000020] [0x00000040] (CPF_Net)
	float                                              TimeMatchTrackingStarted;                      // 0x0EEC (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FArray_Mirror                               AllRelevantUnits[0x10];                        // 0x0EF0 (0x0100) [0x0000000000001000] (CPF_Native)  
	struct FKillEventStruct                            RecentKillEvents[0xA];                         // 0x0FF0 (0x0280) [0x0000000100002020] (CPF_Net | CPF_Transient)
	int32_t                                            NextKillEventIndex;                            // 0x1270 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            PreMatchDisplayTime;                           // 0x1274 (0x0004) [0x0000000100002020] (CPF_Net | CPF_Transient)
	int32_t                                            StartingPreMatchTime;                          // 0x1278 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class TArray<struct FGameTimeEventData>            FiredEvents;                                   // 0x1280 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class FString                                      PmtMatchGuid;                                  // 0x1290 (0x0010) [0x0000000100400020] (CPF_Net | CPF_NeedCtorLink)
	class FString                                      PmtMatchTags;                                  // 0x12A0 (0x0010) [0x0000000100400020] (CPF_Net | CPF_NeedCtorLink)
	class UDifficultyStatDimensionValueDefinition*     DifficultyDimensionValue;                      // 0x12B0 (0x0008) [0x0000000000000020] (CPF_Net)     
	class UHardcoreStatDimensionValueDefinition*       HardcoreDimensionValue;                        // 0x12B8 (0x0008) [0x0000000000000020] (CPF_Net)     
	class UTeamSizeStatDimensionValueDefinition*       TeamSizeDimensionValue;                        // 0x12C0 (0x0008) [0x0000000000000020] (CPF_Net)     
	class URankedSeasonStatDimensionValueDefinition*   SeasonDimensionValue;                          // 0x12C8 (0x0008) [0x0000000000000020] (CPF_Net)     
	int32_t                                            SeasonPlacementMatchWinsRequired;              // 0x12D0 (0x0004) [0x0000000000000020] (CPF_Net)     
	class APoplarCharacterSelectManager*               CharacterSelectManager;                        // 0x12D8 (0x0008) [0x0000000100002020] (CPF_Net | CPF_Transient)
	struct FSurrenderData                              CurrentSurrenderData[0x2];                     // 0x12E0 (0x0090) [0x0000000100400020] (CPF_Net | CPF_NeedCtorLink)
	float                                              OverriddenSurrenderFirstAvailableTimeInSeconds;// 0x1370 (0x0004) [0x0000000000000020] (CPF_Net)     
	float                                              MatchLengthSeconds;                            // 0x1374 (0x0004) [0x0000000000000020] (CPF_Net)     
	EMapControlTeam                                    UI_MapControlTeam;                             // 0x1378 (0x0001) [0x0000000000000020] (CPF_Net)     
	class FString                                      DisplayCommandRankStyle;                       // 0x1380 (0x0010) [0x0000000000400020] (CPF_Net | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarGameReplicationInfo");
		}

		return uClassPointer;
	};

	float GetSurrenderFirstAvailableTimeInSeconds();
	void OnNoConnectionTimeout();
	void MatchDocumentActiveTimerExpired();
	float GetCurrentMatchStateValue();
	void SetTeam(int32_t Index, class ATeamInfo* TI);
	void OnRep_ScoreboardDefinition(class UPoplarScoreboardDefinition* PreviousValue);
	void OnRep_CurrentMatchState(const struct FMatchStateData& PreviousState);
	void DumpRelevantUnitData();
	void eventTimer();
	void PreBeginPlay();
	void StartMatch();
	void RemoveMetaPRI(class APoplarMetaPlayerReplicationInfo* MetaPRI);
	class APoplarMetaPlayerReplicationInfo* GetMetaPRI(const struct FUniqueNetId& UniqueId);
	void AddMetaPRI(class APoplarMetaPlayerReplicationInfo* MetaPRI);
	void eventPostBeginPlay();
	void eventReplicatedArrayEvent(const struct FName& VarName, int32_t ArrayIndex);
	void eventReplicatedEvent(const struct FName& VarName);
};

// Class PoplarGame.PoplarGameTypeIDDefinition
// 0x0000 (0x0058 - 0x0058)
class UPoplarGameTypeIDDefinition : public UGBXDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarGameTypeIDDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarGameTypeUIDataDefinition
// 0x0000 (0x0058 - 0x0058)
class UPoplarGameTypeUIDataDefinition : public UGBXDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarGameTypeUIDataDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.BombardmentGameTypeUIDataDefinition
// 0x0030 (0x0058 - 0x0088)
class UBombardmentGameTypeUIDataDefinition : public UPoplarGameTypeUIDataDefinition
{
public:
	class UPoplarGameInfoReplicatedVariableDefinition* TeamAMissileCount;                             // 0x0058 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarGameInfoReplicatedVariableDefinition* TeamBMissileCount;                             // 0x0060 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarGameInfoReplicatedVariableDefinition* MissileBombardmentStarted;                     // 0x0068 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarGameInfoReplicatedVariableDefinition* MissileBombardmentDelay;                       // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       TeamADefinition;                               // 0x0078 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       TeamBDefinition;                               // 0x0080 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.BombardmentGameTypeUIDataDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.BrawlGameTypeUIDataDefinition
// 0x0028 (0x0058 - 0x0080)
class UBrawlGameTypeUIDataDefinition : public UPoplarGameTypeUIDataDefinition
{
public:
	class UPoplarGameInfoReplicatedVariableDefinition* TeamAScore;                                    // 0x0058 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarGameInfoReplicatedVariableDefinition* TeamBScore;                                    // 0x0060 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarGameInfoReplicatedVariableDefinition* WinGoal;                                       // 0x0068 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       TeamADefinition;                               // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       TeamBDefinition;                               // 0x0078 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.BrawlGameTypeUIDataDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.GolemFightGameTypeUIDataDefinition
// 0x0040 (0x0058 - 0x0098)
class UGolemFightGameTypeUIDataDefinition : public UPoplarGameTypeUIDataDefinition
{
public:
	class UPoplarGameInfoReplicatedVariableDefinition* TeamAControlPoints;                            // 0x0058 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarGameInfoReplicatedVariableDefinition* TeamBControlPoints;                            // 0x0060 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarGameInfoReplicatedVariableDefinition* TeamAPointRate;                                // 0x0068 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarGameInfoReplicatedVariableDefinition* TeamBPointRate;                                // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarGameInfoReplicatedVariableDefinition* WinGoal;                                       // 0x0078 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarGameInfoReplicatedVariableDefinition* StartCountdown;                                // 0x0080 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       TeamADefinition;                               // 0x0088 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       TeamBDefinition;                               // 0x0090 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.GolemFightGameTypeUIDataDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.HeadHunterGameTypeUIDataDefinition
// 0x0058 (0x0058 - 0x00B0)
class UHeadHunterGameTypeUIDataDefinition : public UPoplarGameTypeUIDataDefinition
{
public:
	class UDesignerAttributeDefinition*                PlayerHeadsHeldCutoffFewDef;                   // 0x0058 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UDesignerAttributeDefinition*                PlayerHeadsHeldCutoffSomeDef;                  // 0x0060 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UDesignerAttributeDefinition*                PlayerHeadsHeldCutoffManyDef;                  // 0x0068 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UDesignerAttributeDefinition*                HeadsHeldByPlayerStat;                         // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarGameInfoReplicatedVariableDefinition* WinGoal;                                       // 0x0078 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarGameInfoReplicatedVariableDefinition* TimeLeftInSeconds;                             // 0x0080 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarGameInfoReplicatedVariableDefinition* HeadsHeldByTeamA;                              // 0x0088 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarGameInfoReplicatedVariableDefinition* HeadsHeldByTeamB;                              // 0x0090 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarGameInfoReplicatedVariableDefinition* StartCountdown;                                // 0x0098 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       TeamADefinition;                               // 0x00A0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       TeamBDefinition;                               // 0x00A8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.HeadHunterGameTypeUIDataDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PVEGameTypeUIDataDefinition
// 0x0020 (0x0058 - 0x0078)
class UPVEGameTypeUIDataDefinition : public UPoplarGameTypeUIDataDefinition
{
public:
	class UPoplarGameInfoReplicatedVariableDefinition* RespawnTicketsLeft;                            // 0x0058 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarGameInfoReplicatedVariableDefinition* Score;                                         // 0x0060 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarGameInfoReplicatedVariableDefinition* OpsPoints;                                     // 0x0068 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UScoreboardStatDefinition*                   PlayerScoreScoreboardStat;                     // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PVEGameTypeUIDataDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.ScortGameTypeUIDataDefinition
// 0x0048 (0x0058 - 0x00A0)
class UScortGameTypeUIDataDefinition : public UPoplarGameTypeUIDataDefinition
{
public:
	class UPoplarGameInfoReplicatedVariableDefinition* WinGoal;                                       // 0x0058 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarGameInfoReplicatedVariableDefinition* TimeLeftInSeconds;                             // 0x0060 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarGameInfoReplicatedVariableDefinition* StartCountdown;                                // 0x0068 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarGameInfoReplicatedVariableDefinition* TeamAUltraMinionLevel;                         // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarGameInfoReplicatedVariableDefinition* TeamBUltraMinionLevel;                         // 0x0078 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarGameInfoReplicatedVariableDefinition* FinaleLeadingTeam;                             // 0x0080 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarGameInfoReplicatedVariableDefinition* FinaleHUDState;                                // 0x0088 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       TeamADefinition;                               // 0x0090 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       TeamBDefinition;                               // 0x0098 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.ScortGameTypeUIDataDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.WreckageGameTypeUIDataDefinition
// 0x0060 (0x0058 - 0x00B8)
class UWreckageGameTypeUIDataDefinition : public UPoplarGameTypeUIDataDefinition
{
public:
	class UPoplarGameInfoReplicatedVariableDefinition* GameLength;                                    // 0x0058 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarGameInfoReplicatedVariableDefinition* TeamACores;                                    // 0x0060 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarGameInfoReplicatedVariableDefinition* TeamBCores;                                    // 0x0068 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarGameInfoReplicatedVariableDefinition* TeamASmallTurretCount;                         // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarGameInfoReplicatedVariableDefinition* TeamABigTurretCount;                           // 0x0078 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarGameInfoReplicatedVariableDefinition* TeamBSmallTurretCount;                         // 0x0080 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarGameInfoReplicatedVariableDefinition* TeamBBigTurretCount;                           // 0x0088 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarGameInfoReplicatedVariableDefinition* StartCountdown;                                // 0x0090 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarGameInfoReplicatedVariableDefinition* BossSpawned;                                   // 0x0098 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarGameInfoReplicatedVariableDefinition* BossDied;                                      // 0x00A0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       TeamADefinition;                               // 0x00A8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       TeamBDefinition;                               // 0x00B0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.WreckageGameTypeUIDataDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarGearboxAccountGFxMovie
// 0x0080 (0x0450 - 0x04D0)
class UPoplarGearboxAccountGFxMovie : public UWillowGFxMovie
{
public:
	class UPoplarGearboxAccountGFxObject*              GearboxAccountObj;                             // 0x0450 (0x0008) [0x0000000000002000] (CPF_Transient)
	class TArray<class FString>                        ScreenStack;                                   // 0x0458 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class FString                                      CurrentAgeString;                              // 0x0468 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            authenticationAttempts;                        // 0x0478 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bIsFirstWelcome : 1;                           // 0x047C (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bCtrl : 1;                                     // 0x047C (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bHasSeenOffers : 1;                            // 0x047C (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           bIsClosing : 1;                                // 0x047C (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	int32_t                                            SparkInteractionWaitInSeconds;                 // 0x0480 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            NextSparkInteractionTime;                      // 0x0484 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UWillowPauseTicker*                          SparkTicker;                                   // 0x0488 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  LastSelectedEvent;                             // 0x0490 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            DefaultInitTime;                               // 0x0498 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            MinInitTime;                                   // 0x049C (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            MaxInitTime;                                   // 0x04A0 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UWillowPauseTicker*                          InitTicker;                                    // 0x04A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	EKeyboardInputType                                 CachedInputType;                               // 0x04B0 (0x0001) [0x0000000000002000] (CPF_Transient)
	int32_t                                            BlockingMessageId;                             // 0x04B4 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FPlatformUserId                             OwnerUserId;                                   // 0x04B8 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __OnConsoleInputComplete__Delegate;            // 0x04C0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarGearboxAccountGFxMovie");
		}

		return uClassPointer;
	};

	bool HandleGearboxAccountSignUpSuccessClicked(class UWillowGFxDialogBox* DialogBox, const struct FPlatformUserId& UserId);
	void ReadPlayerDisplayDataComplete(const struct FPlatformUserId& PlayerID, int32_t ServiceResult, class TArray<struct FPlayerDisplayData>& DisplayDataList);
	void RequestProfileImageComplete(bool bWasSuccessful, const struct FUniqueNetId& NetId, class UTexture* ImageTexture);
	void HandleHintInput(const struct FPlatformUserId& InUserId, const struct FName& HintTag);
	void PopulateHintBar();
	void OnConfirmPasswordButtonFocus(class UGFxObject* EventObj);
	void OnPasswordButtonFocus(class UGFxObject* EventObj);
	void OnShiftTextChange(class UGFxObject* EventObj);
	void OnShiftButtonClick(class UGFxObject* EventObj);
	void OnShiftButtonFocus(class UGFxObject* EventObj);
	bool IsSparkTimerActive(const struct FName& FuncName);
	void ClearSparkTimer(const struct FName& FuncName);
	void SetSparkTimer(float Rate, bool bLoop, const struct FName& FuncName);
	bool CanRunSparkInteraction(const struct FName& FuncName);
	void DelayNextSparkInteraction();
	void extRequestCurrentOffers();
	void extRequestConsoleCodeEntry();
	void extRequestConfigureSignUpAdditionalTextMessage(const class FString& MessagePath);
	void extRequestConfigureAdditionalBenefitsMessage(const class FString& MessagePath);
	void extGearboxAccountOnLoad(const class FString& TargetPath);
	void TryPasteKeyCode();
	void PopulateOffers();
	void OnEntitlementsUpdated(class UGearboxAccountData* GearboxAccount);
	void PerformRedeemCode();
	void OnRedeemCodeButtonClick(class UGFxObject* EventObj);
	void PerformSignUp();
	void OnSignUpScreenSignUpButtonClick(class UGFxObject* EventObj);
	void PerformResetPassword();
	void OnResetPasswordScreenResetPasswordButtonClick(class UGFxObject* EventObj);
	void OnSignInScreenResetPasswordButtonClick(class UGFxObject* EventObj);
	void PerformSignIn();
	void OnSignInScreenSignInButtonClick(class UGFxObject* EventObj);
	void OnWelcomeScreenSignUpButtonClick(class UGFxObject* EventObj);
	void OnWelcomeScreenSignInButtonClick(class UGFxObject* EventObj);
	void OnConfirmPasswordButtonClick(class UGFxObject* EventObj);
	void OnPasswordButtonClick(class UGFxObject* EventObj);
	void OnSignInPasswordButtonClick(class UGFxObject* EventObj);
	void OnConfirmEmailButtonClick(class UGFxObject* EventObj);
	void OnEmailButtonClick(class UGFxObject* EventObj);
	void OnSignInEmailButtonClick(class UGFxObject* EventObj);
	int32_t IsConsole();
	int32_t IsSignedIn();
	int32_t IsAuthenticated();
	int32_t IsFirstWelcome();
	void AttachFunctions();
	void OnKeyboardInputComplete(bool bSuccessful, bool bWasCancelled, const class FString& KeyboardResults);
	void ConsolePlayerInput(EKeyboardInputType InputType, const class FString& TitleText, const class FString& DescriptionText, EShowKeyboardType KeyboardType, int32_t optionalMaxLength);
	bool ValidateConfirmPassword();
	bool ValidatePassword();
	bool ValidateConfirmEmail();
	bool ValidateEmail();
	void UpdateSignInStatus();
	void SetPlayerNameAndImage();
	void ReturnToWelcomeScreen();
	bool PopScreen();
	void PushScreen(const class FString& Screen);
	void HideGearboxAccount();
	void HandleCodeRedeemed(ECodeRedeemedResult Result);
	void HandleResetPassword(EResetPasswordResult Result);
	void HandleAccountSignUp(ESignUpResult Result);
	void HandleAccountSignIn(ESignInResult Result);
	bool HandleInitializedTimeoutClicked(class UWillowGFxDialogBox* DialogBox, const struct FPlatformUserId& UserId);
	void HandleInitializedTimeout();
	void HandleInitialized(const struct FPlatformUserId& UserId, EInitializedResult InitializedResult, class UGearboxData* Data);
	void eventOnClose();
	void extOnSelectedOfferChange(int32_t OfferIndex);
	void extDisplaySupportID();
	void extConfigureForViewOffers();
	void ResetSparkAndHideMovie();
	void UpdateFrameForAspectRatio(EAspectRatio AspectRatio);
	void eventOnTick();
	bool HandleInputKey(const struct FPlatformUserId& UserId, const struct FName& ukey, EInputEvent uevent);
	void OnConsoleInputComplete(bool bUserCancelled);
	bool IsKeyValid(const class FString& Key);
	bool eventStart(bool optionalBStartPaused);
};

// Class PoplarGame.PoplarGearboxAccountGFxObject
// 0x0000 (0x00D8 - 0x00D8)
class UPoplarGearboxAccountGFxObject : public UGFxObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarGearboxAccountGFxObject");
		}

		return uClassPointer;
	};

	int32_t SelectIsEnabled();
	void ClearKeyCode();
	void TrySetKeyCode(const class FString& KeyCode);
	void ConfigureForViewOffers();
	void ConfigureForRedeemCode();
	int32_t IsDisplayingOffers();
	void SetOfferData(const class TArray<class UGFxObject*>& OfferData);
	void ScrollMessageDown();
	void ScrollMessageUp();
	void SetShiftURLString(const class FString& URLString);
	void SetTooltips(const class FString& Tooltips);
	void SetFocusedConsoleCodeSegment(const class FString& CodeSegment);
	void SetConfirmPassword(const class FString& Password);
	void SetPassword(const class FString& Password);
	void SetConfirmEmail(const class FString& Email);
	void SetEmail(const class FString& Email);
	class FString GetConfirmPassword();
	class FString GetPassword();
	class FString GetKeyCode();
	class FString GetConfirmEmail();
	class FString GetEmail();
	int32_t GetAgeYear();
	int32_t GetAgeDay();
	int32_t GetAgeMonth();
	void SetCurrentDate(int32_t Month, int32_t Day, int32_t Year);
	bool OffersBoxIsChecked();
	void RefreshWelcomeScreen();
	void DisplayScreen(const class FString& Screen);
};

// Class PoplarGame.PoplarGFxThirdPersonMovie
// 0x0000 (0x0660 - 0x0660)
class UPoplarGFxThirdPersonMovie : public UWillowGFxThirdPersonMovie
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarGFxThirdPersonMovie");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarGFxUIManager
// 0x0000 (0x00C0 - 0x00C0)
class UPoplarGFxUIManager : public UWillowGFxUIManager
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarGFxUIManager");
		}

		return uClassPointer;
	};

	void OnRequestProfileImageComplete(bool bWasSuccessful, const struct FUniqueNetId& NetId, class UTexture* ImageTexture);
};

// Class PoplarGame.PoplarGlobalData
// 0x00F8 (0x0058 - 0x0150)
class UPoplarGlobalData : public UGearboxGlobalData
{
public:
	class TArray<class UPoplarChallengeListDefinition*> RegisteredChallengeLists;                      // 0x0058 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class UPoplarChallengeManager*>       RegisteredChallengeManagers;                   // 0x0068 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class UPoplarChallengePatchDefinition*> RegisteredChallengePatches;                    // 0x0078 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class UPoplarChallengeListDefinition*> SequentialChallengeLists;                      // 0x0088 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class UCharacterStatDimensionValueDefinition*> RegisteredCharacterStatDimensionValues;        // 0x0098 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class UDifficultyStatDimensionValueDefinition*> RegisteredDifficultyStatDimensionValues;       // 0x00A8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class UFactionStatDimensionValueDefinition*> RegisteredFactionStatDimensionValues;          // 0x00B8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class UGameModeStatDimensionValueDefinition*> RegisteredGameModeStatDimensionValues;         // 0x00C8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class UHardcoreStatDimensionValueDefinition*> RegisteredHardcoreStatDimensionValues;         // 0x00D8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class ULevelStatDimensionValueDefinition*> RegisteredLevelStatDimensionValues;            // 0x00E8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class UTeamSizeStatDimensionValueDefinition*> RegisteredTeamSizeStatDimensionValues;         // 0x00F8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class URoleStatDimensionValueDefinition*> RegisteredRoleStatDimensionValues;             // 0x0108 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class URankedSeasonStatDimensionValueDefinition*> RegisteredSeasonStatDimensionValues;           // 0x0118 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<struct FPostMatchDefLookupEntry>      PostMatchDefinitionLookup;                     // 0x0128 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UPoplarCharacterSelectManagerDefinition*     CharacterSelectManagerDefinition;              // 0x0138 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UCompetitiveSkillRatingGlobalsDefinition*    SkillRatingGlobalsDef;                         // 0x0140 (0x0008) [0x0000000000002000] (CPF_Transient)
	class URankedPlayGlobalsDefinition*                RankedPlayGlobalsDef;                          // 0x0148 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarGlobalData");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarGlobals
// 0x6240 (0x02C0 - 0x6500)
class UPoplarGlobals : public UWillowGlobals
{
public:
	class FString                                      DefaultPoplarGlobalsDefinitionName;            // 0x02C0 (0x0010) [0x0000000000404000] (CPF_Config | CPF_NeedCtorLink)
	class UPoplarGlobalsDefinition*                    ThePoplarGlobalsDefinition;                    // 0x02D0 (0x0008) [0x0000000000000000]               
	class TArray<class UCurrencyPipeline*>             CurrencyPipelinePool;                          // 0x02D8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class UExperiencePipeline*>           ExperiencePipelinePool;                        // 0x02E8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class UPoplarScorePipeline*>          ScorePipelinePool;                             // 0x02F8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class AActor*>                        TeamAffiliatedActors;                          // 0x0308 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class ATeamAwarePointLightActor*>     TeamAwarePointLightActorList;                  // 0x0318 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UPoplarManagedActorManager*                  ManagedActorManager;                           // 0x0328 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarMatchTracker*                         MatchTracker;                                  // 0x0330 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarDedicatedServerStatManager*           DedicatedServerStatManager;                    // 0x0338 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarCombatantActionTracker*               CombatantActionTracker;                        // 0x0340 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarBuffManager*                          PoplarBuffManager;                             // 0x0348 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarCharacterIntroCoordinator*            CharacterIntroCoordinator;                     // 0x0350 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APerkAttributeContextHelper*                 GlobalPerkHelper;                              // 0x0358 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FPointer                                    GlobalLogiHelper;                              // 0x0360 (0x0008) [0x0000000000001000] (CPF_Native)  
	struct FPoplarQueuedLootSpawnRequest               PoplarDataForLootSpawnRequests;                // 0x0368 (0x00F0) [0x0000000000000000]               
	struct FPoplarQueuedLootSpawnRequest               PendingLootSpawnRequests[0x64];                // 0x0458 (0x5DC0) [0x0000000000000000]               
	int32_t                                            HeadNdx;                                       // 0x6218 (0x0004) [0x0000000000000000]               
	int32_t                                            TailNdx;                                       // 0x621C (0x0004) [0x0000000000000000]               
	struct FPlayerStandInSet                           AssignedStandInSets[0x2];                      // 0x6220 (0x0140) [0x0000000000002000] (CPF_Transient)
	class TArray<class APoplarPlayerStandIn*>          RegisteredStandIns;                            // 0x6360 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	EPlayerStandInAudioMode                            StandInAudioMode;                              // 0x6370 (0x0001) [0x0000000000002000] (CPF_Transient)
	float                                              GamerTagHeightOffset;                          // 0x6374 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              GamerTagHeightOrigin;                          // 0x6378 (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<class UPoplarMissionObjectiveWaypointComponent*> RegisteredWaypoints;                           // 0x6380 (0x0010) [0x0000000004482008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_NeedCtorLink | CPF_EditInline)
	struct FPostMatchLoadingMovieData                  WonMatchLoadingMovieData;                      // 0x6390 (0x0050) [0x0000000000404000] (CPF_Config | CPF_NeedCtorLink)
	struct FPostMatchLoadingMovieData                  LostMatchLoadingMovieData;                     // 0x63E0 (0x0050) [0x0000000000404000] (CPF_Config | CPF_NeedCtorLink)
	struct FPostMatchLoadingMovieData                  CompleteMissionLoadingMovieData;               // 0x6430 (0x0050) [0x0000000000404000] (CPF_Config | CPF_NeedCtorLink)
	struct FPostMatchLoadingMovieData                  FailedMissionLoadingMovieData;                 // 0x6480 (0x0050) [0x0000000000404000] (CPF_Config | CPF_NeedCtorLink)
	class TArray<struct FMapSpecificLoadingMovieData>  CustomMapLoadingMovieData;                     // 0x64D0 (0x0010) [0x0000000000404000] (CPF_Config | CPF_NeedCtorLink)
	class TArray<struct FModeSpecficLoadingMovieData>  CustomModeLoadingMovieData;                    // 0x64E0 (0x0010) [0x0000000000404000] (CPF_Config | CPF_NeedCtorLink)
	class FString                                      MasteredDisplayName;                           // 0x64F0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarGlobals");
		}

		return uClassPointer;
	};

	class UPoplarDedicatedServerStatManager* GetDedicatedServerStatManager();
	class UPoplarMatchTracker* GetPoplarMatchTracker();
	static int32_t GetDamageTags(struct FDamageTags& Tags);
	void NotifyActorDied(class AActor* TheActor, bool bKeepBody);
	class UPoplarManagedActorManager* GetManagedActorManager();
	class UPoplarPlayerNameIdentifierDefinition* GetPlayerNameIdentifierByCharacterStatDimensionValue(const class FString& DimensionValue);
	class UPoplarPlayerNameIdentifierDefinition* GetPlayerNameIdentifierDefinitionByClassName(const class FString& ClassName);
	class UPoplarScorePipeline* GetScorePipelineObject();
	class UExperiencePipeline* GetExperiencePipelineObject();
	class UCurrencyPipeline* GetCurrencyPipelineObject();
	class UDamagePipeline* GetDamagePipelineObject();
	class UPoplarGlobalsDefinition* GetPoplarGlobalsDefinition();
};

// Class PoplarGame.PoplarGlobalsDefinition
// 0x0588 (0x0058 - 0x05E0)
class UPoplarGlobalsDefinition : public UGBXDefinition
{
public:
	class UDeathRecapDefinition*                       DeathRecapDef;                                 // 0x0058 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDeathDefinition*                  DefaultTeamDeathDefinition;                    // 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarInteractiveObjectDefinition*          ReviveCrystalIO;                               // 0x0068 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       RevivedProxyAttachPoint;                       // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       RevivedCameraMode;                             // 0x0078 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              RevivedCameraBlendOutTime;                     // 0x0080 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class USkelControlBase*                            ReviveIdleControl;                             // 0x0088 (0x0008) [0x0000000004000001] (CPF_Edit | CPF_EditInline)
	class USpecialMoveDefinition*                      RevivePoseSMD;                                 // 0x0090 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UCoordinatedEffectDefinition*                DownedEffect;                                  // 0x0098 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UCoordinatedEffectDefinition*                RevivedEffect;                                 // 0x00A0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UCoordinatedEffectDefinition*                BledOutEffect;                                 // 0x00A8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarExperienceRewardsDefinition*          DefaultExperienceRewardsDefinition;            // 0x00B0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FAttributeInitializationData                BaseIOExperienceFormula;                       // 0x00B8 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UParticleSystem*                             ExperienceDisplayParticles;                    // 0x00D8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       ExperienceDisplayParticleColorParamName;       // 0x00E0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FLinearColor                                ExperienceParticleColor;                       // 0x00E8 (0x0010) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       ExperienceDisplayParticleAmountParamName;      // 0x00F8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       ExperienceDisplayParticleSizeParamName;        // 0x0100 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              ExperienceDisplayParticleSizeMinDist;          // 0x0108 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              ExperienceDisplayParticleSizeMaxDist;          // 0x010C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarCreditRewardsDefinition*              DefaultCreditRewardsDefinition;                // 0x0110 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UParticleSystem*                             CreditsDisplayParticles;                       // 0x0118 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       CreditsDisplayParticleColorParamName;          // 0x0120 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FLinearColor                                CreditsParticleColor;                          // 0x0128 (0x0010) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       CreditsDisplayParticleAmountParamName;         // 0x0138 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       CreditsDisplayParticleSizeParamName;           // 0x0140 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              CreditsDisplayParticleSizeMinDist;             // 0x0148 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              CreditsDisplayParticleSizeMaxDist;             // 0x014C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class USkillDefinition*                            SkillToRunOnMatchBegin;                        // 0x0150 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class USkillDefinition*                            SkillToRunOnMatchRejoin;                       // 0x0158 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              PercentageOfMaxHealthConsideredLow;            // 0x0160 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            CreditLevelToTellPlayerToGoShopping;           // 0x0164 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarScoreboardGFxMovieDefinition*         ScoreboardMovieDefinition;                     // 0x0168 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class USwfMovie*                                   MetaTitleIconMovie;                            // 0x0170 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UWillowGFxMovie3DDefinition*                 PlayerDetailsMovieDefinition;                  // 0x0178 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarCharacterSelectGFxMovieDefinition*    CharacterSelectMovieDefinition;                // 0x0180 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarShopGFxMovieDefinition*               ShopMovieDefinition;                           // 0x0188 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarEULAGFxMovieDefinition*               EULAMovieDefinition;                           // 0x0190 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarInputBindingGFxMovieDefinition*       InputBindingMovieDefintion;                    // 0x0198 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarControllerInputBindingGFxMovieDefinition* ControllerInputBindingMovieDefintion;          // 0x01A0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarSpeakerAnglesGFxMovieDefinition*      SpeakerAnglesMovieDefinition;                  // 0x01A8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UWillowGFxMovie3DDefinition*                 MenuSubtitlesMovieDefinition;                  // 0x01B0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UWillowAnimDefinition*                       TeleportEndAnim;                               // 0x01B8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UWillowAnimDefinition*                       TeleportExitAnim;                              // 0x01C0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              TeleportTime;                                  // 0x01C8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int32_t                                            MaxActiveMinionWaves;                          // 0x01CC (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<class UPoplarLaneDefinition*>         AlwaysAttackLanes;                             // 0x01D0 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	uint32_t                                           BotSubsSpawnAtDisconnectedPlayerLocation : 1;  // 0x01E0 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           ShowEnemyNameplatesEvenWhenNoLOS : 1;          // 0x01E0 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	uint32_t                                           bShieldsPreventCriticalHits : 1;               // 0x01E0 (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	uint32_t                                           bOvershieldPreventCrowdControl : 1;            // 0x01E0 (0x0004) [0x0000000000000003] [0x00000008] (CPF_Edit | CPF_Const)
	uint32_t                                           bAutoAimAdjustOnMoveOnly : 1;                  // 0x01E0 (0x0004) [0x0000000000000003] [0x00000010] (CPF_Edit | CPF_Const)
	uint32_t                                           bLevelUpResetsHealthInPvE : 1;                 // 0x01E0 (0x0004) [0x0000000000000003] [0x00000020] (CPF_Edit | CPF_Const)
	class TArray<struct FTeamRelativeColorStruct>      TeamRelativeColors;                            // 0x01E8 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	struct FTeamRelativeColorStruct                    TeamNeutralColor;                              // 0x01F8 (0x0048) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class UPoplarHUDDefinition*                        HUDDefinition;                                 // 0x0240 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarMinimapIconDefinition*                CursorIconDef;                                 // 0x0248 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarMinimapIconDefinition*                MissionIconDef;                                // 0x0250 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarMinimapIconDefinition*                NorthMarkerIconDef;                            // 0x0258 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              PlayerAlertRetriggerDelay;                     // 0x0260 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarAlertPointDefinition*                 PlayerAlertPointDefinition;                    // 0x0268 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarAlertPointDefinition*                 PlayerAlertUnitDefinition;                     // 0x0270 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarHighlightDefinition*                  PlayerAlertOutlineDefinition;                  // 0x0278 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarHighlightDefinition*                  OutlineDefinitionTeamAndEnemy;                 // 0x0280 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarHighlightDefinition*                  OutlineDefinitionTeamOnly;                     // 0x0288 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              MinPlayerAlertDotProduct;                      // 0x0290 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              MaxDotDiffToConsiderSame;                      // 0x0294 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              MaxDistFromMinimapPlayerAlert;                 // 0x0298 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<class UPoplarUnitTypeDefinition*>     PlayerAlertOrderOfPriority;                    // 0x02A0 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	float                                              PlayerAlertMaxDist;                            // 0x02B0 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              MaxDistanceToShowEnemyHealthWidget;            // 0x02B4 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              MinDistanceToShowEnemyNameplates;              // 0x02B8 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              MaxDistanceToShowEnemyNameplates;              // 0x02BC (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              MultiKillTimeWindowSeconds;                    // 0x02C0 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            UnansweredKillsNeededToBecomeNemesis;          // 0x02C4 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UKillModifiersDefinition*                    DefaultKillModifiersDefinition;                // 0x02C8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAssistModifiersDefinition*                  DefaultAssistModifiersDefinition;              // 0x02D0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              GlobalCriticalHitDamageBonus;                  // 0x02D8 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              GlobalCriticalHitDamageBonusAgainstAI;         // 0x02DC (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              KillAssistCreditTimeWindowSeconds;             // 0x02E0 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarActionDefinition*                     DefaultDamagingActionDefinition;               // 0x02E8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarActionDefinition*                     DefaultHealingActionDefinition;                // 0x02F0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarActionDefinition*                     DefaultBuffingActionDefinition;                // 0x02F8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarActionDefinition*                     DefaultDebuffingActionDefinition;              // 0x0300 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarActionDefinition*                     DefaultOvershieldingActionDefinition;          // 0x0308 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarActionDefinition*                     DefaultLifeStealActionDefinition;              // 0x0310 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UGBXCameraModeSetDefinition*                 DefaultCameraModeSetDefinition;                // 0x0318 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarLaneDefinition*                       DefaultLaneDef;                                // 0x0320 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              SellbackPercentage;                            // 0x0328 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            SellbackRounding;                              // 0x032C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              StaminaReduceSprintSpeed;                      // 0x0330 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              StaminaRecoverSprintSpeed;                     // 0x0334 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FInterpCurveFloat                           StaminaJumpVelocityScaleCurve;                 // 0x0338 (0x0018) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	struct FInterpCurveFloat                           StaminaMovementSpeedScaleCurve;                // 0x0350 (0x0018) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	float                                              StaminaMinSpeedPct;                            // 0x0368 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarMetagameGlobalsDefinition*            MetagameGlobalsDef;                            // 0x0370 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<class UCrowdControlDefinition*>       CrowdControlEffects;                           // 0x0378 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class UParticleSystem*                             CrowdControl1stPersonParticleSystem;           // 0x0388 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UParticleSystem*                             CrowdControl3rdPersonParticleSystem;           // 0x0390 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                StunLookSpeedMultiplierFormula;                // 0x0398 (0x0020) [0x0000000000000001] (CPF_Edit)    
	class UPoplarAugSet*                               DefaultAugSet;                                 // 0x03B8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       NeutralTeamDefinition;                         // 0x03C0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<struct FTeamAnnouncerData>            TeamAnnouncers;                                // 0x03C8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class TArray<class UDialogSet*>                    AnnouncerDialogSets;                           // 0x03D8 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	class UGearboxDialogNameTag*                       AnnouncerNameTag;                              // 0x03E8 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UPoplarMessageDefinition*                    SkillUnlockedMessageDefinition;                // 0x03F0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarMessageDefinition*                    PlayerLeftMatchMessageDefinition;              // 0x03F8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarMessageDefinition*                    SpectatorLeftMatchMessageDefinition;           // 0x0400 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarMessageDefinition*                    PlayerRejoinedMatchMessageDefinition;          // 0x0408 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarMessageDefinition*                    SpectatorRejoinedMatchMessageDefinition;       // 0x0410 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarMessageDefinition*                    PlayerEarnedDoubleKillMessageDefinition;       // 0x0418 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarMessageDefinition*                    PlayerEarnedTripleKillMessageDefinition;       // 0x0420 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarMessageDefinition*                    PlayerEarnedQuadrupleKillMessageDefinition;    // 0x0428 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarMessageDefinition*                    PlayerEarnedPentaKillMessageDefinition;        // 0x0430 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarMessageDefinition*                    PlayerEarnedGreaterThanPentaKillMessageDefinition;// 0x0438 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTrainingMessageListDefinition*        PlayerTrainingMessages;                        // 0x0440 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarScoreboardDefinition*                 DefaultScoreboardDefinition;                   // 0x0448 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarPostMatchDefinition*                  DefaultPostMatchDefinition;                    // 0x0450 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UMaterialInstance*                           CharacterStandinGoldenPedestalMaterial;        // 0x0458 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UMaterialInstance*                           CharacterStandinStandardPedestalMaterial;      // 0x0460 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatGlobalsDefinition*                      StatGlobalsDef;                                // 0x0468 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarChallengeManagerDefinition*           ChallengeManagerDef;                           // 0x0470 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    UIMuteMapDuringPlayerSelectionAkEvent;         // 0x0478 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    UIUnMuteMapDuringPlayerSelectionAkEvent;       // 0x0480 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            GlobalMusicCuePriority;                        // 0x0488 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            TeamMusicCuePriority;                          // 0x048C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            IndividualMusicCuePriority;                    // 0x0490 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    AkEventForSpeakerTest;                         // 0x0498 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    AkEventForSubwooferTest;                       // 0x04A0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarMusicDefinition*                      MenuMusicDefinition;                           // 0x04A8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              CombatMusicStaleEnemyTimeout;                  // 0x04B0 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              CombatMusicInactiveDuration;                   // 0x04B4 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              CombatMusicThreatScaleBase;                    // 0x04B8 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    PostMatchVictorySplashSound;                   // 0x04C0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    PostMatchDefeatSplashSound;                    // 0x04C8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEffect*                                   CharacterSelectReverb;                         // 0x04D0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkBank*                                     CharacterSelectReverbBank;                     // 0x04D8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              CharacterSelectReverbDryPercent;               // 0x04E0 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            EnabledHitNotifyOverridesMask;                 // 0x04E4 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    OverrideHitNotify;                             // 0x04E8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    OverrideCriticalHitNotify;                     // 0x04F0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    OverrideOvershieldHitNotify;                   // 0x04F8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    OverrideImmuneHitNotify;                       // 0x0500 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    OverrideHeroHitNotify;                         // 0x0508 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkSwitch*                                   PawnIsEnemySwitch;                             // 0x0510 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkSwitch*                                   PawnIsFriendSwitch;                            // 0x0518 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UServerLookupDefinition*                     LookupTables;                                  // 0x0520 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UCoordinatedEffectDefinition*                HealthHitHighlight;                            // 0x0528 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UCoordinatedEffectDefinition*                CriticalHealthHitHighlight;                    // 0x0530 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UCoordinatedEffectDefinition*                ShieldHitHighlight;                            // 0x0538 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UCoordinatedEffectDefinition*                OvershieldHitHighlight;                        // 0x0540 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UParticleSystem*                             HitScreenFX;                                   // 0x0548 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              CrosshairTargetLineCheckDistance;              // 0x0550 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<class UPoplarFactionDefinition*>      PlayerFactions;                                // 0x0558 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UPoplarControlledMoveDefinition*             JumpPadControlledMove;                         // 0x0568 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarSurrenderDefinition*                  DefaultSurrenderDef;                           // 0x0570 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarMessageDefinition*                    InitiateSurrenderTooEarlyMessageDef;           // 0x0578 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarMessageDefinition*                    InitiateSurrenderTooLateMessageDef;            // 0x0580 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarMessageDefinition*                    InitiateSurrenderAlreadyActiveMessageDef;      // 0x0588 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarMessageDefinition*                    InitiateSurrenderCooldownActiveMessageDef;     // 0x0590 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarMessageDefinition*                    SurrenderSuccessMessageDef;                    // 0x0598 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarMessageDefinition*                    SurrenderFailureMessageDef;                    // 0x05A0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              ChatDisplayLengths[0x3];                       // 0x05A8 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            MinControllerSensitivity;                      // 0x05B4 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            MaxControllerSensitivity;                      // 0x05B8 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              ControllerSensitivityIncrement;                // 0x05BC (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UParticleSystem*                             TauntScreenFadeParticleSystem;                 // 0x05C0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarMessageDefinition*                    FirstBloodMessageDef;                          // 0x05C8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarMessageDefinition*                    TeamAnnihilatedMessageDef;                     // 0x05D0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarMessageDefinition*                    VictoryMessageDef;                             // 0x05D8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarGlobalsDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarHighlightComponent
// 0x0760 (0x0090 - 0x07F0)
class UPoplarHighlightComponent : public UActorComponent
{
public:
	uint32_t                                           HighlightRequestPending : 1;                   // 0x0090 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	struct FHighlightReplicationStruct                 PendingHighlightRequest;                       // 0x0098 (0x0020) [0x0000000000002000] (CPF_Transient)
	EHighlightFunctionality                            FunctionalityToggle;                           // 0x00B8 (0x0001) [0x0000000000000002] (CPF_Const)   
	class UIUnit*                                      UnitOwner_Object;                              // 0x00C0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UIUnit*                                      UnitOwner_Interface;                           // 0x00C8 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FRunningHighlightViewport                   HighlightViewport[0x4];                        // 0x00D0 (0x0720) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarHighlightComponent");
		}

		return uClassPointer;
	};

	void HandleReplicatedHighlightEffect(struct FHighlightReplicationStruct& ReplicatedHighlightData);
	void RequestStopHighlightEffect(class UPoplarHighlightDefinition* HighlightDef, class UPoplarTeamDefinition* InstigatingTeam, class APlayerReplicationInfo* InstigatingPlayer, bool optionalBImmediateStop);
	void RequestHighlightEffect(class UPoplarHighlightDefinition* HighlightDef, class UPoplarTeamDefinition* InstigatingTeam, class APlayerReplicationInfo* InstigatingPlayer);
};

// Class PoplarGame.PoplarHighlightDefinition
// 0x0030 (0x0058 - 0x0088)
class UPoplarHighlightDefinition : public UGBXDefinition
{
public:
	uint32_t                                           NeedsUpdate : 1;                               // 0x0058 (0x0004) [0x0000000000000000] [0x00000001] 
	uint32_t                                           NeverPaused : 1;                               // 0x0058 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	uint32_t                                           HideEffectWhenRecipientUnseen : 1;             // 0x0058 (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	uint32_t                                           AllowsMultipleInstances : 1;                   // 0x0058 (0x0004) [0x0000000000000003] [0x00000008] (CPF_Edit | CPF_Const)
	EHighlightPriority                                 Priority;                                      // 0x005C (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EHighlightVisibilityScheme                         Visibility;                                    // 0x005D (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                EffectDuration;                                // 0x0060 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            Channel;                                       // 0x0080 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              FadeSpeed;                                     // 0x0084 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarHighlightDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarOutlineHighlightDefinition
// 0x0030 (0x0088 - 0x00B8)
class UPoplarOutlineHighlightDefinition : public UPoplarHighlightDefinition
{
public:
	class TArray<class UBehaviorBase*>                 BehaviorsToRunFirstInstance;                   // 0x0088 (0x0010) [0x0000000004400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink | CPF_EditInline)
	class TArray<class UBehaviorBase*>                 BehaviorsToRunAllInstances;                    // 0x0098 (0x0010) [0x0000000004400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink | CPF_EditInline)
	uint32_t                                           bApplyOutlineEffect : 1;                       // 0x00A8 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	EOutlineShaderColorScheme                          ColorScheme;                                   // 0x00AC (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FColor                                      ColorDisplayedToSelfAndTeammates;              // 0x00B0 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FColor                                      ColorDisplayedToEnemies;                       // 0x00B4 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarOutlineHighlightDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarHitReactionDefinition
// 0x0018 (0x0058 - 0x0070)
class UPoplarHitReactionDefinition : public UHitReactionDefinition
{
public:
	float                                              MinCooldownTime;                               // 0x0058 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              MaxCooldownTime;                               // 0x005C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<struct FPoplarHitReactionItem>        HitReactions;                                  // 0x0060 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarHitReactionDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarHotSpot
// 0x0208 (0x0058 - 0x0260)
class UPoplarHotSpot : public UObject
{
public:
	class UPoplarHotSpot*                              Prev;                                          // 0x0058 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarHotSpot*                              Next;                                          // 0x0060 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarHotSpotOwnerRef*                      OwnerListHead;                                 // 0x0068 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarHotSpotOwnerRef*                      OwnerListTail;                                 // 0x0070 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            OwnerCount;                                    // 0x0078 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            RefCount;                                      // 0x007C (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            Id;                                            // 0x0080 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TimeCreated;                                   // 0x0084 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TimeUpdated;                                   // 0x0088 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              UnderAttackTimer;                              // 0x008C (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            TeamIndex;                                     // 0x0090 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UPoplarTeamDefinition*                       TeamDefinition;                                // 0x0098 (0x0008) [0x0000000000002000] (CPF_Transient)
	EPoplarHotSpotCategory                             Category;                                      // 0x00A0 (0x0001) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bIsStationary : 1;                             // 0x00A4 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           NavMeshDataIsValid : 1;                        // 0x00A4 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	struct FVector                                     Location;                                      // 0x00A8 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     Velocity;                                      // 0x00B4 (0x000C) [0x0000000000002000] (CPF_Transient)
	float                                              Radius;                                        // 0x00C0 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FInfluencePointRef                          InfluencePointRef;                             // 0x00C8 (0x0010) [0x0000000000002000] (CPF_Transient)
	struct FGBXNavMeshPolyRef                          NavMeshPolyRef;                                // 0x00D8 (0x0010) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     NavMeshLocation;                               // 0x00E8 (0x000C) [0x0000000000002000] (CPF_Transient)
	int32_t                                            UnitCount;                                     // 0x00F4 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            UnitTypeCountTable[0xE];                       // 0x00F8 (0x0038) [0x0000000000002000] (CPF_Transient)
	int32_t                                            TeamDataCount;                                 // 0x0130 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FPoplarHotSpotTeamData                      TeamData[0x4];                                 // 0x0138 (0x0120) [0x0000000000002000] (CPF_Transient)
	float                                              BaseDistPct;                                   // 0x0258 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              DamageCapacityPct;                             // 0x025C (0x0004) [0x4000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarHotSpot");
		}

		return uClassPointer;
	};

	float GetTimeAlive();
};

// Class PoplarGame.PoplarHotSpotOwnerRef
// 0x0028 (0x0058 - 0x0080)
class UPoplarHotSpotOwnerRef : public UObject
{
public:
	class UPoplarHotSpotOwnerRef*                      Prev;                                          // 0x0058 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarHotSpotOwnerRef*                      Next;                                          // 0x0060 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FWeakUPtr_map                               Owner;                                         // 0x0068 (0x0008) [0x0000000000003000] (CPF_Native | CPF_Transient)
	class UPoplarHotSpot*                              HotSpot;                                       // 0x0070 (0x0008) [0x0000000000002000] (CPF_Transient)
	EPoplarHotSpotCategory                             Category;                                      // 0x0078 (0x0001) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bIsStationary : 1;                             // 0x007C (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarHotSpotOwnerRef");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarHUD
// 0x0020 (0x0678 - 0x0698)
class APoplarHUD : public AWillowHUD
{
public:
	class APoplarPlayerPawn*                           MyPoplarPlayerPawn;                            // 0x0678 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarPlayerController*                     PoplarPlayerOwner;                             // 0x0680 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarHUDDefinition*                        PoplarHUDDef;                                  // 0x0688 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bDebugShowBuffs : 1;                           // 0x0690 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bDebugShowTeamXPTotals : 1;                    // 0x0690 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bDebugShowPerks : 1;                           // 0x0690 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           bShowExpensiveActors : 1;                      // 0x0690 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	uint32_t                                           bPauseMenuOpened : 1;                          // 0x0690 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarHUD");
		}

		return uClassPointer;
	};

	void InspectSelf();
	void FadeIn(float optionalFadeLength);
	void FadeOut(float optionalFadeLength);
	void eventOnLostFocusPause(bool Enable);
	void eventDisplayPlayerDeathDebug();
	void ShowTeamVis();
	void ShowBuffActors();
	void ShowNetRelevancy();
	void ShowBoundsUpdates();
	void ShowAsyncActors();
	void ShowPreAsyncActors();
	void ShowActorChannels();
	void ShowInterpActors();
	void ShowSkelMeshes();
	void ShowEncroachers();
	void ShowTickingActors();
	void ShowPerks();
	void ShowTeamXPTotals();
	void ShowBuffs();
	void NotifyHUDProfileSettingsChanged();
	void NotifyHUDRelativeColorsChanged();
	void NotifyHUDPauseClosed();
	void NotifyHUDPauseOpened();
	bool ShrinkMinimap();
	bool ExpandMinimap();
	void DrawHUD();
	bool CreateModularHUDMovie();
	void PostBeginPlay();
};

// Class PoplarGame.PoplarHUDDefinition
// 0x0010 (0x0110 - 0x0120)
class UPoplarHUDDefinition : public UHUDDefinition
{
public:
	float                                              MatchEventFeedCycleTime;                       // 0x0110 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class USwfMovie*                                   ChallengeUpdateMatchFeedClip;                  // 0x0118 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarHUDDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarImageManager
// 0x0078 (0x0058 - 0x00D0)
class UPoplarImageManager : public UObject
{
public:
	struct FPointer                                    VfTable_FTickableObject;                       // 0x0058 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_ISparkUpdateCallback;                  // 0x0060 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class TArray<struct FImageRequestData>             ImageRequests;                                 // 0x0068 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               RequestImageCompleteDelegates;                 // 0x0078 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               RequestProfileImageCompleteDelegates;          // 0x0088 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int32_t                                            ImagePoolMaxSize;                              // 0x0098 (0x0004) [0x0000000000004000] (CPF_Config)  
	float                                              TelemetryTime;                                 // 0x009C (0x0004) [0x0000000000000000]               
	float                                              TelemetryRate;                                 // 0x00A0 (0x0004) [0x0000000000004000] (CPF_Config)  
	int32_t                                            PreviousPoolSize;                              // 0x00A4 (0x0004) [0x0000000000000000]               
	int32_t                                            PreviousPoolCount;                             // 0x00A8 (0x0004) [0x0000000000000000]               
	struct FScriptDelegate                             __OnRequestImageComplete__Delegate;            // 0x00B0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnRequestProfileImageComplete__Delegate;     // 0x00C0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarImageManager");
		}

		return uClassPointer;
	};

	void OnReadProfileImageComplete(const struct FUniqueNetId& PlayerID, bool bWasSuccessful, class UTexture2D* ProfileImage);
	void OnRequestProfileImageComplete(bool bWasSuccessful, const struct FUniqueNetId& NetId, class UTexture* ImageTexture);
	void OnRequestImageComplete(bool bWasSuccessful, const class FString& ImageUrl, class UTexture* ImageTexture);
};

// Class PoplarGame.PoplarInputBindingGFxMovie
// 0x0050 (0x0450 - 0x04A0)
class UPoplarInputBindingGFxMovie : public UWillowGFxMovie
{
public:
	class UPoplarOptionsGFxMovie*                      MyOptionsMovie;                                // 0x0450 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarInputBindingGFxObject*                InputBindingObj;                               // 0x0458 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UWillowGFxDialogBox*                         BindingDlg;                                    // 0x0460 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UWillowGFxDialogBox*                         KeySwapDlg;                                    // 0x0468 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UWillowGFxDialogBox*                         ResetKeyBindDlg;                               // 0x0470 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UInputDeviceCollectionDefinition*            DeviceCollection;                              // 0x0478 (0x0008) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FKeyBindInfo>                  KeyBinds;                                      // 0x0480 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            CurrentKeyBindSelection;                       // 0x0490 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bNeedsToSaveKeyBinds : 1;                      // 0x0494 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bUsingGamepad : 1;                             // 0x0494 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint8_t                                            CurrentInputType;                              // 0x0498 (0x0001) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarInputBindingGFxMovie");
		}

		return uClassPointer;
	};

	bool OnResetKeyBindsButtonClicked(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId);
	void ShowRestKeyBindDialog();
	bool HandleKeySwapDialog(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId, const struct FName& ukey, EInputEvent uevent);
	void BindCurrentSelection(const struct FName& Key);
	bool HandleBindInputKey(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId, const struct FName& ukey, EInputEvent uevent);
	void DoBind();
	bool AllowBindKey(const struct FName& Key);
	bool IsGamepadKey(const struct FName& Key);
	class FString GetLocalizedKeyName(const struct FName& InputKeyName);
	int32_t FindBinding(const struct FName& Tag);
	void extOnPopulateKeys();
	void extOnKeySelectionChange(const class FString& Tag);
	void extOnKeyClicked(const class FString& Tag);
	void InitDeviceCollection();
	void HandleHintInput(const struct FPlatformUserId& InUserId, const struct FName& HintTag);
	void PopulateHintBar();
	void extOnLoad(const class FString& Path);
	void eventOnClose();
	bool Start(bool optionalStartPaused);
};

// Class PoplarGame.PoplarInputBindingGFxMovieDefinition
// 0x0000 (0x0100 - 0x0100)
class UPoplarInputBindingGFxMovieDefinition : public UGFxMovieDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarInputBindingGFxMovieDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarInputBindingGFxObject
// 0x0000 (0x00D8 - 0x00D8)
class UPoplarInputBindingGFxObject : public UGFxObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarInputBindingGFxObject");
		}

		return uClassPointer;
	};

	void SetHeader(const class FString& Header);
	void ForceRefresh();
	void SetCustomizeTip(const class FString& Label);
	class UGFxObject* AddKeyData(const class FString& _tag, const class FString& _caption, const class FString& _value);
	void EmptyKeyData();
	void InvalidateKeyData();
	void Init();
};

// Class PoplarGame.PoplarInteractiveObject
// 0x20B0 (0x08E8 - 0x2998)
class APoplarInteractiveObject : public AWillowInteractiveObject
{
public:
	struct FPointer                                    VfTable_IIUnit;                                // 0x08E8 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIHighlightable;                       // 0x08F0 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIMinimapObject;                       // 0x08F8 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIExperienceProvider;                  // 0x0900 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IICombatant;                           // 0x0908 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIGBXTargetSearch;                     // 0x0910 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIReapBehavior;                        // 0x0918 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIBuffable;                            // 0x0920 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIResourcePoolProvider;                // 0x0928 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIScoreBehavior;                       // 0x0930 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IILootablePoplar;                      // 0x0938 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIPoplarSkinConsumer;                  // 0x0940 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IINamedObject;                         // 0x0948 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UPoplarContentSkinDefinition*                AppliedSkin;                                   // 0x0950 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarContentSkinDefinition*                Skin;                                          // 0x0958 (0x0008) [0x0000000100002020] (CPF_Net | CPF_Transient)
	class UPoplarHotSpotOwnerRef*                      HotSpotRef;                                    // 0x0960 (0x0008) [0x0000000004402008] (CPF_ExportObject | CPF_Transient | CPF_NeedCtorLink | CPF_EditInline)
	struct FPmtData                                    PmtData;                                       // 0x0968 (0x0028) [0x0000000000003000] (CPF_Native | CPF_Transient)
	class UPoplarInteractiveObjectDefinition*          PoplarIODef;                                   // 0x0990 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarLaneDefinition*                       LaneDefinition;                                // 0x0998 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarTeamInfo*                             MyTeamInfo;                                    // 0x09A0 (0x0008) [0x0000000100002020] (CPF_Net | CPF_Transient)
	class UIPoplarSpawner*                             MySpawner_Object;                              // 0x09A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UIPoplarSpawner*                             MySpawner_Interface;                           // 0x09B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarHighlightComponent*                   HighlightComponent;                            // 0x09B8 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	struct FHighlightReplicationStruct                 ReplicatedHighlightData;                       // 0x09C0 (0x0020) [0x0000000100002020] (CPF_Net | CPF_Transient)
	int32_t                                            LastHighlightFlashCount;                       // 0x09E0 (0x0004) [0x0000000000002000] (CPF_Transient)
	EHighlightFunctionality                            HighlightFunctionalityToggle;                  // 0x09E4 (0x0001) [0x0000000100002020] (CPF_Net | CPF_Transient)
	uint8_t                                            CanBeUsedByAllegiance[0x3];                    // 0x09E5 (0x0003) [0x0000000000002000] (CPF_Transient)
	EFlinchType                                        CurrentFlinchType;                             // 0x09E8 (0x0001) [0x0000000000002000] (CPF_Transient)
	uint8_t                                            NoLOSVisionCheck;                              // 0x09E9 (0x0001) [0x8000000000002000] (CPF_Transient)
	uint8_t                                            NoLOSVisionCheckBaseValue;                     // 0x09EA (0x0001) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            NoLOSVisionCheckModifierStack;                 // 0x09F0 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	class UPoplarMinimapIconDefinition*                SpecialIconDefinition;                         // 0x0A00 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class UPoplarUnitTypeDefinition*                   MyUnitTypeDefinition;                          // 0x0A08 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bOccupied : 1;                                 // 0x0A10 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bShouldSkipUnitRegistration : 1;               // 0x0A10 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bHasCalledNotifyKilledPoplar : 1;              // 0x0A10 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	class AResourcePoolManager*                        ResourcePoolManager;                           // 0x0A18 (0x0008) [0x0000000000000000]               
	struct FResourcePoolReference                      ShieldArmor;                                   // 0x0A20 (0x0018) [0x0000002000000020] (CPF_Net)     
	float                                              FlatArmorPenetration;                          // 0x0A38 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              FlatArmorPenetrationBaseValue;                 // 0x0A3C (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            FlatArmorPenetrationModifierStack;             // 0x0A40 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              PercentageArmorPenetration;                    // 0x0A50 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              PercentageArmorPenetrationBaseValue;           // 0x0A54 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            PercentageArmorPenetrationModifierStack;       // 0x0A58 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              FlatArmorReduction;                            // 0x0A68 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              FlatArmorReductionBaseValue;                   // 0x0A6C (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            FlatArmorReductionModifierStack;               // 0x0A70 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              PercentageArmorReduction;                      // 0x0A80 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              PercentageArmorReductionBaseValue;             // 0x0A84 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            PercentageArmorReductionModifierStack;         // 0x0A88 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              SkillPower;                                    // 0x0A98 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              SkillPowerBaseValue;                           // 0x0A9C (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            SkillPowerModifierStack;                       // 0x0AA0 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              AttackPower;                                   // 0x0AB0 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              AttackPowerBaseValue;                          // 0x0AB4 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            AttackPowerModifierStack;                      // 0x0AB8 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              Armor;                                         // 0x0AC8 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              ArmorBaseValue;                                // 0x0ACC (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            ArmorModifierStack;                            // 0x0AD0 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              LifestealPercentage;                           // 0x0AE0 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              LifestealPercentageBaseValue;                  // 0x0AE4 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            LifestealPercentageModifierStack;              // 0x0AE8 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              LifestealScalarForActions;                     // 0x0AF8 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              LifestealScalarForActionsBaseValue;            // 0x0AFC (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            LifestealScalarForActionsModifierStack;        // 0x0B00 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              LifestealReductionPercentage;                  // 0x0B10 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              LifestealReductionPercentageBaseValue;         // 0x0B14 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            LifestealReductionPercentageModifierStack;     // 0x0B18 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              ShieldstealPercentage;                         // 0x0B28 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              ShieldstealPercentageBaseValue;                // 0x0B2C (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            ShieldstealPercentageModifierStack;            // 0x0B30 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              ShieldstealScalarForActions;                   // 0x0B40 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              ShieldstealScalarForActionsBaseValue;          // 0x0B44 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            ShieldstealScalarForActionsModifierStack;      // 0x0B48 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              ShieldstealReductionPercentage;                // 0x0B58 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              ShieldstealReductionPercentageBaseValue;       // 0x0B5C (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            ShieldstealReductionPercentageModifierStack;   // 0x0B60 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              ShieldPenetration;                             // 0x0B70 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              ShieldPenetrationBaseValue;                    // 0x0B74 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            ShieldPenetrationModifierStack;                // 0x0B78 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              ShieldPenetrationReduction;                    // 0x0B88 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              ShieldPenetrationReductionBaseValue;           // 0x0B8C (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            ShieldPenetrationReductionModifierStack;       // 0x0B90 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              InstigatedPhysicalDamageModifier;              // 0x0BA0 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              InstigatedPhysicalDamageModifierBaseValue;     // 0x0BA4 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            InstigatedPhysicalDamageModifierModifierStack; // 0x0BA8 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              InstigatedTrueDamageModifier;                  // 0x0BB8 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              InstigatedTrueDamageModifierBaseValue;         // 0x0BBC (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            InstigatedTrueDamageModifierModifierStack;     // 0x0BC0 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              DamagedPhysicalDamageModifier;                 // 0x0BD0 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              DamagedPhysicalDamageModifierBaseValue;        // 0x0BD4 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            DamagedPhysicalDamageModifierModifierStack;    // 0x0BD8 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              DamagedTrueDamageModifier;                     // 0x0BE8 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              DamagedTrueDamageModifierBaseValue;            // 0x0BEC (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            DamagedTrueDamageModifierModifierStack;        // 0x0BF0 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              XPGainedForKillingScalar;                      // 0x0C00 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              XPGainedForKillingScalarBaseValue;             // 0x0C04 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            XPGainedForKillingScalarModifierStack;         // 0x0C08 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	class TArray<struct FConditionalDamageModifier>    AttackingDamageModifiers;                      // 0x0C18 (0x0010) [0x0000000000500000] (CPF_NeedCtorLink)
	class TArray<struct FConditionalDamageModifier>    DefendingDamageModifiers;                      // 0x0C28 (0x0010) [0x0000000000500000] (CPF_NeedCtorLink)
	class UInteractionIconDefinition*                  AllegianceBasedIcons[0x3];                     // 0x0C38 (0x0018) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CostsToUseByAllegiance[0x3];                   // 0x0C50 (0x000C) [0x0000000000002000] (CPF_Transient)
	class UBuffComponent*                              BuffComponent;                                 // 0x0C60 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	struct FBuffInfo                                   ReplicatedBuffs[0x32];                         // 0x0C68 (0x1C20) [0x0000000100402020] (CPF_Net | CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            ReplicatedBuffsArraySize;                      // 0x2888 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CurrentOvershieldValue;                        // 0x288C (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	float                                              MaxOvershieldValue;                            // 0x2890 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	float                                              CrowdControlDurationModifier;                  // 0x2894 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              CrowdControlDurationModifierBaseValue;         // 0x2898 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            CrowdControlDurationModifierModifierStack;     // 0x28A0 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              GlobalBuffImmunity;                            // 0x28B0 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              GlobalBuffImmunityBaseValue;                   // 0x28B4 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            GlobalBuffImmunityModifierStack;               // 0x28B8 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            ReplicatedNumEnemyAlertPointsOnMe;             // 0x28C8 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class TArray<class APoplarAlertPoint*>             FriendlyAlertPointsOnMe;                       // 0x28D0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class APoplarAlertPoint*>             EnemyAlertPointsOnMe;                          // 0x28E0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	float                                              NextSoftFlinchTime;                            // 0x28F0 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              NextHardFlinchTime;                            // 0x28F4 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CheckSpottedByAIRate;                          // 0x28F8 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              DetectionRadius;                               // 0x28FC (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              DetectionRadiusBaseValue;                      // 0x2900 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            DetectionRadiusModifierStack;                  // 0x2908 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            VisionConeAngle;                               // 0x2918 (0x0004) [0x8000000000002000] (CPF_Transient)
	int32_t                                            VisionConeAngleBaseValue;                      // 0x291C (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            VisionConeAngleModifierStack;                  // 0x2920 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            BaseScore;                                     // 0x2930 (0x0004) [0x8000000000002000] (CPF_Transient)
	int32_t                                            BaseScoreBaseValue;                            // 0x2934 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            BaseScoreModifierStack;                        // 0x2938 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            QuickKillScore;                                // 0x2948 (0x0004) [0x8000000000002000] (CPF_Transient)
	int32_t                                            QuickKillScoreBaseValue;                       // 0x294C (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            QuickKillScoreModifierStack;                   // 0x2950 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            QuickKillTimeLimit;                            // 0x2960 (0x0004) [0x8000000000002000] (CPF_Transient)
	int32_t                                            QuickKillTimeLimitBaseValue;                   // 0x2964 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            QuickKillTimeLimitModifierStack;               // 0x2968 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	class TArray<class AController*>                   MastersList;                                   // 0x2978 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class AController*                                 MostRelevantMaster;                            // 0x2988 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class UPoplarNameplateTypeDefinition*              NameplateTypeDefinition;                       // 0x2990 (0x0008) [0x0000000000000020] (CPF_Net)     

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarInteractiveObject");
		}

		return uClassPointer;
	};

	void DroppedLootSpawned(class AWillowInventory* SpawnedItem, const struct FQueuedLootSpawnRequest& Params);
	void AttachedLootSpawned(class AWillowInventory* SpawnedItem, const struct FQueuedLootSpawnRequest& Params);
	void HardFlinchFinished();
	void SoftFlinchFinished();
	void SetAllegianceBasedIcon(class UInteractionIconDefinition* Icon, EOpinion AllegianceOpinion);
	class APlayerStateInfo* GetUnitPSI();
	class APlayerReplicationInfo* GetUnitPRI();
	struct FVector GetUnitTargetableLocation();
	class UPawnAllegiance* GetUnitAllegiance();
	bool IsUnitDead();
	float GetUnitMaxEnergy();
	float GetUnitEnergy();
	float GetUnitMaxOvershield();
	float GetUnitOvershield();
	float GetUnitMaxShield();
	float GetUnitShield();
	float GetUnitMaxHealth();
	float GetUnitHealth();
	int32_t GetUnitLevel();
	bool ShowUnitWidget();
	void SetUsabilityCostByAllegiance(EOpinion AllegianceOpinion, int32_t CostAmount);
	void SetUsabilityCost(int32_t CostAmount);
	void eventSetAllegianceUsability(EChangeStatus ChangeType, EOpinion AllegianceType);
	void eventUsedByOtherUnit(class UIUnit* User);
	void eventUnTouch(class AActor* Other);
	void eventTouch(class AActor* Other, class UPrimitiveComponent* OtherComp, const struct FVector& HitLocation, const struct FVector& HitNormal);
	void PlayUntouchEffect(class AActor* Other);
	void PlayTouchEffect(class AActor* Other, const struct FVector& HitLocation, const struct FVector& HitNormal);
	void eventHandleHealthDepleted(class APawn* EventInstigator, class UDamagePipeline* optionalPipeline);
	int32_t GetQuickKillTimeLimit();
	int32_t GetQuickKillScore();
	int32_t GetBaseScore();
	void Behavior_AwardTeamBonusScore(int32_t Amount);
	void Behavior_AwardScore(int32_t Amount);
	void SetShieldResourcePoolDefinition(class UIResourcePoolProvider* ResourcePoolProvider, class UResourcePoolDefinition* Definition);
	void SetShieldStrength(float ShieldValue, bool optionalBResetRegeneration);
	float GetMaxShieldStrength();
	float GetShieldStrength();
	class UIResourcePoolProvider* GetResourcePoolProvider();
	class AActor* GetResourcePoolProviderActor();
	void SetResourcePoolManager(class AResourcePoolManager* InManager);
	class AResourcePoolManager* GetResourcePoolManager();
	struct FResourcePoolReference GetResourcePoolForResourceDefinition(class UResourceDefinition* Resource, bool optionalBCreatePoolIfOneDoesntExist);
	void SetAutoAimProfile(EAutoAimProfile NewProfile);
	EAutoAimProfile GetAutoAimProfile();
	bool IsTargetable(int32_t optionalTargetFlags);
	class AActor* GetTargetSearchDefaultTarget();
	void GetTargetSearchSourceLocationAndRotation(struct FVector& OutLocation, struct FRotator& OutRotation);
	class AActor* GetTargetSearchSourceActor();
	void HandleDeathCleanUp();
	void ClearAlertPoints(class UPoplarAlertPointDefinition* optionalTargetDefinition, bool optionalBClearAll);
	bool ShouldShowHighlight();
	void NotifyUntaggedByAlertPoint(class APoplarAlertPoint* OldAlertPoint);
	void NotifyTaggedByAlertPoint(class APoplarAlertPoint* NewAlertPoint, bool Friendly);
	void RefreshRunningHighlightEffects();
	bool HighlightFunctionalityEnabled();
	void SetHighlightFunctionality(EHighlightFunctionality NewFunctionality);
	void RequestStopHighlightEffect(class UPoplarHighlightDefinition* HighlightDef, class UPoplarTeamDefinition* InstigatingTeam, class APlayerReplicationInfo* InstigatingPlayer, bool optionalBImmediateStop);
	void RequestHighlightEffect(class UPoplarHighlightDefinition* HighlightDef, class UPoplarTeamDefinition* InstigatingTeam, class APlayerReplicationInfo* InstigatingPlayer);
	void NotifyLaneEvent(const struct FName& EventName, class AController* EventInstigator, class UPoplarTeamDefinition* InstigatorTeam);
	void CheckIfSpottedByAI();
	bool IsUnitVisibleToMe(class AActor* TargetUnit, bool optionalBIgnoreDetectionRadius, bool optionalBNoLOSCheck);
	bool IsVisibleToTeam(class APoplarTeamInfo* OneTeamInfo);
	void GetDamagedStatArray(class TArray<class UStatDefinition*>& DamagedStats);
	void GetKilledStatArray(class TArray<class UStatDefinition*>& KilledStats);
	bool IsSubUnit();
	float GetCurrentDetectionRadius();
	float GetEnemySeenTimeout();
	bool IsInVisionCone(const struct FVector& Position);
	int32_t GetUnitVisionConeAngle();
	bool IsTaggedBy(class UPoplarUnitTypeTag* UnitTag);
	bool IsHuman();
	void SetInTeamBase(bool bInBase);
	bool IsInTeamBase();
	void SetUnitExpLevel(int32_t NewLevel, bool optionalBAwardSkillPoints, bool optionalBShowHUDFanfare);
	int32_t GetUnitExpLevel();
	int32_t GetSpawnerIndex();
	struct FVector GetUnitLocation();
	class UPoplarLaneDefinition* GetLaneDefinition();
	class UIPoplarSpawner* GetSpawner();
	void SetSpawner(class UIPoplarSpawner* InSpawner);
	void SetLaneDefinition(class UPoplarLaneDefinition* InLaneDef);
	bool SetUnitTypeDefinition(class UPoplarUnitTypeDefinition* NewUnitTypeDefinition, bool optionalSkipGameInfoRegistration);
	class UPoplarNameplateTypeDefinition* GetNameplateTypeDefinition();
	class UPoplarUnitTypeDefinition* GetUnitTypeDefinition();
	class AActor* GetUnitActor();
	class UPoplarTeamDefinition* GetPoplarTeamDefinition();
	void SetPoplarTeamInfo(class APoplarTeamInfo* InTeamInfo);
	class APoplarTeamInfo* GetPoplarTeamInfo();
	void ForceColorRefresh();
	class UGBXDefinition* GetTeamDefinition();
	void SetTeamInfo(class ATeamInfo* InTeamInfo);
	class ATeamInfo* GetTeamInfo();
	void GetCreditsProviderData(struct FCreditsProviderData& Data);
	void GetExperienceProviderData(struct FExperienceProviderData& Data);
	uint8_t GetTeamNum();
	void UnregisterFromGRI();
	void RegisterWithGRI();
	void eventDestroyed();
	void CleanupKilledInteractiveObject();
	void InitializeFromDefinition(class UInteractiveObjectDefinition* Definition, bool bSkipBehaviorSetsInitialization);
	void eventReplicatedEvent(const struct FName& VarName);
};

// Class PoplarGame.PoplarBuildNodeObject
// 0x00B8 (0x2998 - 0x2A50)
class APoplarBuildNodeObject : public APoplarInteractiveObject
{
public:
	struct FPointer                                    VfTable_IISpawnPoint;                          // 0x2998 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UPoplarBuildNodeObjectDefinition*            BuildNodeIODef;                                // 0x29A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            MAX_BUILDABLES;                                // 0x29A8 (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	uint8_t                                            ReplicatedBuildableStates[0x3];                // 0x29AC (0x0003) [0x0000000100002020] (CPF_Net | CPF_Transient)
	uint8_t                                            BuildNodeUseState;                             // 0x29AF (0x0001) [0x0000000100002020] (CPF_Net | CPF_Transient)
	uint8_t                                            CooldownPercentage;                            // 0x29B0 (0x0001) [0x0000000100002020] (CPF_Net | CPF_Transient)
	int32_t                                            CurrentUpgradeLevel;                           // 0x29B4 (0x0004) [0x0000000100002020] (CPF_Net | CPF_Transient)
	class UPoplarBuildableDefinition*                  AvailableBuildable;                            // 0x29B8 (0x0008) [0x0000000100002020] (CPF_Net | CPF_Transient)
	class AActor*                                      CurrentlyPlacedBuildable;                      // 0x29C0 (0x0008) [0x0000000100002020] (CPF_Net | CPF_Transient)
	class APoplarPlayerStateInfo*                      CurrentUser;                                   // 0x29C8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarTeamDefinition*                       PreferredTeam;                                 // 0x29D0 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              CooldownTime;                                  // 0x29D8 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CooldownTimeTotal;                             // 0x29DC (0x0004) [0x0000000000002000] (CPF_Transient)
	class AController*                                 CurrentSpawnDefinitionMaster;                  // 0x29E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bHasBeenSeenByEnemy : 1;                       // 0x29E8 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bCanUpdateParticleFeedback : 1;                // 0x29E8 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bInBuildableDestructionHandling : 1;           // 0x29E8 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	float                                              SpottedRadius;                                 // 0x29EC (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              MAX_PROGRESS_PERCENT;                          // 0x29F0 (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	float                                              MIN_PROGRESS_PERCENT;                          // 0x29F4 (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	float                                              CheckFeedbackDelay;                            // 0x29F8 (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	float                                              TimeSinceCheckedFeedback;                      // 0x29FC (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TimeSinceCycledParticle;                       // 0x2A00 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CurrentParticlePreviewIndex;                   // 0x2A04 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CostOfPurchase;                                // 0x2A08 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UParticleSystemComponent*                    TypeFeedbackComponent;                         // 0x2A10 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class UParticleSystemComponent*                    StateFeedbackComponent[0x2];                   // 0x2A18 (0x0010) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class UParticleSystem*                             CurrentTypeFeedbackTemplate;                   // 0x2A28 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UParticleSystem*                             CurrentStateFeedbackTemplate[0x2];             // 0x2A30 (0x0010) [0x0000000000002000] (CPF_Transient)
	class TArray<class UIBuildNodeObserver*>           BuildNodeObservers;                            // 0x2A40 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarBuildNodeObject");
		}

		return uClassPointer;
	};

	void eventReplicatedEvent(const struct FName& VarName);
	void CheckBuildNodeState();
	void InitializeFromDefinition(class UInteractiveObjectDefinition* Definition, bool bSkipBehaviorSetsInitialization);
	void CheckIfSpottedByAI();
	void PostBeginPlay();
	class AActor* GetInitialDestination();
	EInitialActionType GetInitialAction();
};

// Class PoplarGame.PoplarCheckpoint
// 0x0078 (0x2998 - 0x2A10)
class APoplarCheckpoint : public APoplarInteractiveObject
{
public:
	uint32_t                                           bBasePoint : 1;                                // 0x2998 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	uint32_t                                           bEnabled : 1;                                  // 0x2998 (0x0004) [0x0000000000200001] [0x00000002] (CPF_Edit)
	uint32_t                                           bAllowPlayerReactivation : 1;                  // 0x2998 (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	uint32_t                                           bMoveSpawnPointsOnEditorMove : 1;              // 0x2998 (0x0004) [0x0000000800000001] [0x00000008] (CPF_Edit)
	uint32_t                                           bPlaceSpawnPointsOnGroundOnEditorMove : 1;     // 0x2998 (0x0004) [0x0000000800000001] [0x00000010] (CPF_Edit)
	uint32_t                                           bUpdateSpawnPointLocations : 1;                // 0x2998 (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	uint32_t                                           bWasEnabled : 1;                               // 0x2998 (0x0004) [0x0000000000002000] [0x00000040] (CPF_Transient)
	class TArray<struct FPoplarCheckpointSpawnPoint>   SpawnPoints;                                   // 0x29A0 (0x0010) [0x0000000000600001] (CPF_Edit | CPF_NeedCtorLink)
	struct FPoplarCheckpointRegion                     ActivationRegion;                              // 0x29B0 (0x0010) [0x0000000000000001] (CPF_Edit)    
	struct FPoplarCheckpointRegion                     RegenRegion;                                   // 0x29C0 (0x0010) [0x0000000000000001] (CPF_Edit)    
	struct FPoplarCheckpointRegion                     ModAccessRegion;                               // 0x29D0 (0x0010) [0x0000000000000001] (CPF_Edit)    
	class UPoplarTeamDefinition*                       TeamDefinition;                                // 0x29E0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarCheckpointDefinition*                 CheckpointDef;                                 // 0x29E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              NextTestRegionTime;                            // 0x29F0 (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<class APawn*>                         RegeneratingPlayers;                           // 0x29F8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            ExpectedNumberOfPlayers;                       // 0x2A08 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            NumPlayersDebug;                               // 0x2A0C (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCheckpoint");
		}

		return uClassPointer;
	};

	void OnToggle(class USeqAct_Toggle* ToggleAction);
};

// Class PoplarGame.PoplarJumpPadObject
// 0x0028 (0x2998 - 0x29C0)
class APoplarJumpPadObject : public APoplarInteractiveObject
{
public:
	class UPoplarJumpPadObjectDefinition*              JumpPadDefinition;                             // 0x2998 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarControlledMoveDefinition*             ControlledMove;                                // 0x29A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APhysicsJumpNode*                            JumpNode;                                      // 0x29A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UParticleSystemComponent*                    DirectionParticleComponent;                    // 0x29B0 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	uint32_t                                           bJumpPadEnabled : 1;                           // 0x29B8 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarJumpPadObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSwitchPadObject
// 0x0208 (0x2998 - 0x2BA0)
class APoplarSwitchPadObject : public APoplarInteractiveObject
{
public:
	struct FPointer                                    VfTable_IIWorldIconObject;                     // 0x2998 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UPoplarSwitchPadObjectDefinition*            SwitchPadDefinition;                           // 0x29A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarSwitchPadSpawner*                     SwitchHub;                                     // 0x29A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            SwitchID;                                      // 0x29B0 (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<class APlayerReplicationInfo*>        PlayersOnPad;                                  // 0x29B8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            NumPlayersOnPad;                               // 0x29C8 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            NumPlayersOnPadPerTeam[0x2];                   // 0x29CC (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              CheckForPlayerDelay;                           // 0x29D4 (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	float                                              TimeSinceCheckedForPlayer;                     // 0x29D8 (0x0004) [0x0000000000002000] (CPF_Transient)
	ESwitchPadType                                     SwitchPadType;                                 // 0x29DC (0x0001) [0x0000000100002020] (CPF_Net | CPF_Transient)
	uint8_t                                            CaptureBarPercentage;                          // 0x29DD (0x0001) [0x0000000100002020] (CPF_Net | CPF_Transient)
	uint8_t                                            IndicatorIndex;                                // 0x29DE (0x0001) [0x0000000100002020] (CPF_Net | CPF_Transient)
	ECapturePadState                                   CaptureState;                                  // 0x29DF (0x0001) [0x0000000100002020] (CPF_Net | CPF_Transient)
	EOnStateChangedEventOutputs                        PadState;                                      // 0x29E0 (0x0001) [0x0000000100002020] (CPF_Net | CPF_Transient)
	uint8_t                                            CaptureProgressTeamIndex;                      // 0x29E1 (0x0001) [0x0000000100002020] (CPF_Net | CPF_Transient)
	uint8_t                                            CapturingTeamIndex;                            // 0x29E2 (0x0001) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bWaitingOnHealthDepleted : 1;                  // 0x29E4 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bRemainInOnState : 1;                          // 0x29E4 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bAnyLocalPlayerPendingRegistryWithHUD : 1;     // 0x29E4 (0x0004) [0x0000000000000000] [0x00000004] 
	class APoplarTeamInfo*                             CapturingTeamInfo;                             // 0x29E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              CaptureTime;                                   // 0x29F0 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CaptureTimeTotal;                              // 0x29F4 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CaptureSpeedPerTeam[0x2];                      // 0x29F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              DecayRate;                                     // 0x2A00 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FInWorldObject                              WorldObject;                                   // 0x2A08 (0x0190) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	float                                              PressureSwitchCaptureTime;                     // 0x2B98 (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSwitchPadObject");
		}

		return uClassPointer;
	};

	bool IsPadDisabled();
	bool IsPadOn();
	bool IsPadOff();
	void eventDestroyed();
	void eventHandleHealthDepleted(class APawn* EventInstigator, class UDamagePipeline* optionalPipeline);
	void InitializeFromDefinition(class UInteractiveObjectDefinition* Definition, bool bSkipBehaviorSetsInitialization);
};

// Class PoplarGame.PoplarInteractiveObjectDefinition
// 0x00B8 (0x0268 - 0x0320)
class UPoplarInteractiveObjectDefinition : public UInteractiveObjectDefinition
{
public:
	struct FPointer                                    VfTable_IIPoplarSkinInfoProvider;              // 0x0268 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UPoplarUnitTypeDefinition*                   UnitTypeDefinition;                            // 0x0270 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarNameplateTypeDefinition*              NameplateTypeDefinition;                       // 0x0278 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class TArray<class UPoplarUnitTypeTag*>            UnitTypeTags;                                  // 0x0280 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	uint32_t                                           OverrideUnitTypeDefinitionTags : 1;            // 0x0290 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	uint32_t                                           bTransparentToAI : 1;                          // 0x0290 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	uint32_t                                           bOnlyBlockWeapons : 1;                         // 0x0290 (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	uint32_t                                           bIsForceShield : 1;                            // 0x0290 (0x0004) [0x0000000000000003] [0x00000008] (CPF_Edit | CPF_Const)
	uint32_t                                           bDestroyWhenReaped : 1;                        // 0x0290 (0x0004) [0x0000000000000003] [0x00000010] (CPF_Edit | CPF_Const)
	uint32_t                                           bClientsHandleTouchEvents : 1;                 // 0x0290 (0x0004) [0x0000000000000003] [0x00000020] (CPF_Edit | CPF_Const)
	uint32_t                                           bPlayTouchImpacts : 1;                         // 0x0290 (0x0004) [0x0000000000000003] [0x00000040] (CPF_Edit | CPF_Const)
	uint32_t                                           bOverrideTargetableRange : 1;                  // 0x0290 (0x0004) [0x0000000000000003] [0x00000080] (CPF_Edit | CPF_Const)
	uint32_t                                           bHasDefaultSkin : 1;                           // 0x0290 (0x0004) [0x0000000000000003] [0x00000100] (CPF_Edit | CPF_Const)
	class UCreditsProviderDefinition*                  CreditsProvDef;                                // 0x0298 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UExperienceProviderDefinition*               ExperienceProvDef;                             // 0x02A0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              ReapedLifeSpan;                                // 0x02A8 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UWillowImpactDefinition*                     DefaultTouchImpact;                            // 0x02B0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UWillowImpactDefinition*                     DefaultUntouchImpact;                          // 0x02B8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EAutoAimProfile                                    AutoAimProfile;                                // 0x02C0 (0x0001) [0x0000000000000001] (CPF_Edit)    
	float                                              TargetableRangeOverride;                       // 0x02C4 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UResourcePoolDefinition*                     ShieldPoolDefinition;                          // 0x02C8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UHitReactionDefinition*                      SoftFlinches;                                  // 0x02D0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UHitReactionDefinition*                      HardFlinches;                                  // 0x02D8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<struct FSnapLocationData>             SnapLocations;                                 // 0x02E0 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<class UStatDefinition*>               KilledStatList;                                // 0x02F0 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<class UStatDefinition*>               KilledAssistStatList;                          // 0x0300 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<class UStatDefinition*>               DamagedStatList;                               // 0x0310 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarInteractiveObjectDefinition");
		}

		return uClassPointer;
	};

	void OnSwitchHubStateChanged(EOnStateChangedEventOutputs EventOutput, class AActor* Instigator, int32_t SpawnerIndex, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnSwitchStateChanged(EOnStateChangedEventOutputs EventOutput, class AActor* Instigator, int32_t SpawnerIndex, int32_t SwitchID, bool bCausedHubStateChange, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnUpgradedByBuildNode(int32_t PreviousLevel, int32_t NewLevel, class AActor* MasterOfStructure, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnReaped(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnLaneEvent(const struct FBehaviorConsumerHandle& Consumer, const struct FName& SpecializedEventName, class UObject* InstigatorTeam, class UObject* InstigatorPawn, class UObject* InstigatorController);
	void OnTeamSetOrChanged(class UObject* NewTeamDefinition, class UObject* NewAllegiance, struct FBehaviorConsumerHandle& ConsumerHandle);
};

// Class PoplarGame.PoplarBuildNodeObjectDefinition
// 0x0078 (0x0320 - 0x0398)
class UPoplarBuildNodeObjectDefinition : public UPoplarInteractiveObjectDefinition
{
public:
	class UPoplarBuildableSetDefinition*               BuildSetDefinition;                            // 0x0320 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarMinimapIconDefinition*                StructureBuiltIconDefinition;                  // 0x0328 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bShouldBroadcastBuildNodeEvents : 1;           // 0x0330 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	class UPoplarMessageDefinition*                    StructureCreated;                              // 0x0338 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarMessageDefinition*                    StructureDestroyed;                            // 0x0340 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarMessageDefinition*                    StructureDestroyed_NoKiller;                   // 0x0348 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarMessageDefinition*                    StructureDestroyed_NoMaster;                   // 0x0350 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarMessageDefinition*                    StructureDestroyed_NoKillerNoMaster;           // 0x0358 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              FeedbackRadius;                                // 0x0360 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UParticleSystem*                             CanAffordParticle;                             // 0x0368 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UParticleSystem*                             CannotAffordParticle;                          // 0x0370 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UParticleSystem*                             InUseParticle;                                 // 0x0378 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UParticleSystem*                             OnCooldownParticle;                            // 0x0380 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UParticleSystem*                             MinionWaitingParticle;                         // 0x0388 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UParticleSystem*                             FullyUpgradedParticle;                         // 0x0390 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarBuildNodeObjectDefinition");
		}

		return uClassPointer;
	};

	void OnFailedPurchase(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnUpgradedCurrentBuildable(int32_t PreviousLevel, int32_t NewLevel, class AActor* MasterOfStructure, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnStructureCreated(class AActor* MasterOfStructure, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnStructureDestroyed(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnClosedBuildNodeMenu(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnOpenedBuildNodeMenu(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnSuccessfulPurchase(class AActor* Master, class AActor* Buildable, int32_t UpgradeLevel, int32_t Cost, struct FBehaviorConsumerHandle& ConsumerHandle);
};

// Class PoplarGame.PoplarCheckpointDefinition
// 0x0018 (0x0320 - 0x0338)
class UPoplarCheckpointDefinition : public UPoplarInteractiveObjectDefinition
{
public:
	class UPoplarInteractiveObjectDefinition*          BasePadDefinition;                             // 0x0320 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     BasePadOffset;                                 // 0x0328 (0x000C) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCheckpointDefinition");
		}

		return uClassPointer;
	};

	void OnStopPlayerRegeneration(class APawn* Player, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnStartPlayerRegeneration(class APawn* Player, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnDeactivated(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnActivated(struct FBehaviorConsumerHandle& ConsumerHandle);
};

// Class PoplarGame.PoplarJumpPadObjectDefinition
// 0x0010 (0x0320 - 0x0330)
class UPoplarJumpPadObjectDefinition : public UPoplarInteractiveObjectDefinition
{
public:
	uint32_t                                           bUseCustomControlledMove : 1;                  // 0x0320 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	class UPoplarControlledMoveDefinition*             JumpPadControlledMove;                         // 0x0328 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarJumpPadObjectDefinition");
		}

		return uClassPointer;
	};

	void OnJumpPadUsabilityChanged(bool bUsable, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnTouchedJumpPad(class AActor* Instigator, const struct FVector& TargetLocation, struct FBehaviorConsumerHandle& ConsumerHandle);
};

// Class PoplarGame.PoplarSwitchPadObjectDefinition
// 0x0080 (0x0320 - 0x03A0)
class UPoplarSwitchPadObjectDefinition : public UPoplarInteractiveObjectDefinition
{
public:
	ESwitchPadType                                     SwitchPadType;                                 // 0x0320 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	ECapturePadIconType                                CapturePadIconType;                            // 0x0321 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                TimeItTakesToCapture;                          // 0x0328 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                TimeItTakesToNeutralize;                       // 0x0348 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                DecayRate;                                     // 0x0368 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              IconLockPositionX;                             // 0x0388 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              IconLockPositionY;                             // 0x038C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              IconMinimumScale;                              // 0x0390 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              IconMaxSizeDistanceThreshold;                  // 0x0394 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              IconMinSizeDistanceThreshold;                  // 0x0398 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bNPCsCanCapture : 1;                           // 0x039C (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSwitchPadObjectDefinition");
		}

		return uClassPointer;
	};

	void PlayerSteppedOff(class UObject* Player, struct FBehaviorConsumerHandle& ConsumerHandle);
	void PlayerSteppedOn(class UObject* Player, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnNeutralized(class UPoplarTeamDefinition* TeamNeutralizedBy, const class TArray<class UObject*>& NeutralizingPlayers, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnCaptured(class UPoplarTeamDefinition* TeamCapturedBy, const class TArray<class UObject*>& CapturingPlayers, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnBeginIdle(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnBeginDecaying(int32_t CapturePercentage, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnBeginNeutralizing(class UPoplarTeamDefinition* NeutralizingTeam, int32_t CapturePercentage, const class TArray<class UObject*>& NeutralizingPlayers, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnBeginCapturing(class UPoplarTeamDefinition* CapturingTeam, int32_t CapturePercentage, const class TArray<class UObject*>& CapturingPlayers, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnMyHubStateChanged(EOnStateChangedEventOutputs EventOutput, int32_t SwitchInstigatorID, class AActor* Instigator, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnMyStateChanged(EOnStateChangedEventOutputs EventOutput, class AActor* Instigator, struct FBehaviorConsumerHandle& ConsumerHandle);
};

// Class PoplarGame.PoplarInventoryManager
// 0x0000 (0x02B0 - 0x02B0)
class APoplarInventoryManager : public AWillowInventoryManager
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarInventoryManager");
		}

		return uClassPointer;
	};

	bool AddInventory(class AInventory* NewItem, bool bReady, bool optionalBDoNotActivate, bool optionalBPlayPickupSound);
	void eventGetWeaponList(bool optionalBIncludeUnreadied, bool optionalBIncludeReadied, EPlayerDroppability optionalMaxDroppability, bool optionalBIncludeBackpackTransitions, class TArray<class AWillowWeapon*>& WeaponList);
	void RemoveFromInventory(class AInventory* ItemToRemove, bool optionalBCanDrop);
	void SetupFor(class APawn* P);
};

// Class PoplarGame.PoplarLaneDefinition
// 0x0010 (0x0058 - 0x0068)
class UPoplarLaneDefinition : public UGBXDefinition
{
public:
	class FString                                      ReadableName;                                  // 0x0058 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarLaneDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarLaneFormationComponent
// 0x0010 (0x0380 - 0x0390)
class UPoplarLaneFormationComponent : public UWillowFormationComponent
{
public:
	class APoplarMind*                                 Mind;                                          // 0x0380 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint8_t                                           UnknownData00[0x8];                            // 0x0388 (0x0008) MISSED OFFSET

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarLaneFormationComponent");
		}

		return uClassPointer;
	};

	struct FRotator GetFormationRotation();
	struct FVector GetFormationLocation(bool bFlying);
};

// Class PoplarGame.PoplarLaneTargetingComponent
// 0x0000 (0x01B8 - 0x01B8)
class UPoplarLaneTargetingComponent : public UWillowTargetingComponent
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarLaneTargetingComponent");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarLeviathanService
// 0x0000 (0x0060 - 0x0060)
class UPoplarLeviathanService : public ULeviathanService
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarLeviathanService");
		}

		return uClassPointer;
	};

	static bool IsLeviathanEnabled();
	static void PublishEvents();
};

// Class PoplarGame.PoplarLightProjectileManager
// 0x0000 (0x1288 - 0x1288)
class APoplarLightProjectileManager : public AWillowLightProjectileManager
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarLightProjectileManager");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarLocalMessage
// 0x0008 (0x0068 - 0x0070)
class UPoplarLocalMessage : public UWillowLocalMessage
{
public:
	struct FColor                                      DefaultTrainingMessageColor;                   // 0x0068 (0x0004) [0x0000000000000000]               

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarLocalMessage");
		}

		return uClassPointer;
	};

	static class FString GetLocalStringForPoplarMessageKey(class AWillowPlayerController* WPC, const class FString& MessageKey);
	static void ClientReceivePoplarMessageDefinition(class APoplarPlayerController* PPC, int32_t Switch, class UPoplarMessageDefinition* MsgDefinition, const struct FPoplarMessageDefParams& Params);
};

// Class PoplarGame.PoplarLootDropDefinition
// 0x0038 (0x0240 - 0x0278)
class UPoplarLootDropDefinition : public UWillowInventoryDefinition
{
public:
	struct FPointer                                    VfTable_IIBehaviorProvider;                    // 0x0240 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UBehaviorProviderDefinition*                 BehaviorProviderDefinition;                    // 0x0248 (0x0008) [0x0000000000000000]               
	class UPoplarPickupDefinition*                     PickupDefinition;                              // 0x0250 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<struct FPickupConstraintData>         PickupConstraints;                             // 0x0258 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<class UPoplarPickupTagDefinition*>    PickupTags;                                    // 0x0268 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarLootDropDefinition");
		}

		return uClassPointer;
	};

	void OnPickup(class AActor* Recipient, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnSpawn(struct FBehaviorConsumerHandle& ConsumerHandle);
};

// Class PoplarGame.PoplarManagedActorDefinition
// 0x0048 (0x0058 - 0x00A0)
class UPoplarManagedActorDefinition : public UGBXDefinition
{
public:
	struct FAttributeInitializationData                MaxCount;                                      // 0x0058 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bDestroyOnOwnerDeath : 1;                      // 0x0078 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bDisplayInUI : 1;                              // 0x0078 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	EReapOrder                                         DeathReapOrder;                                // 0x007C (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                DeathReapPercent;                              // 0x0080 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarManagedActorDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarManagedActorManager
// 0x0010 (0x0058 - 0x0068)
class UPoplarManagedActorManager : public UObject
{
public:
	class TArray<struct FManagedActorOwnerEntry>       ManagedList;                                   // 0x0058 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarManagedActorManager");
		}

		return uClassPointer;
	};

	int32_t GetManagedActorCount(class UPoplarManagedActorDefinition* TypeActor, class AActor* TheOwner);
	void NotifyActorDied(class AActor* TheActor);
	void RemoveActor(class AActor* TheActor, bool bActorDied);
	void RemoveManagedActor(class AActor* TheActor, bool bDestroyActor);
	void AddManagedActor(class UPoplarManagedActorDefinition* Type, class AActor* TheActor, class AActor* TheOwner);
};

// Class PoplarGame.PoplarMapInfo
// 0x0310 (0x0078 - 0x0388)
class UPoplarMapInfo : public UWillowMapInfo
{
public:
	class UPoplarGameInfoDefinition*                   GameInfoDefinition;                            // 0x0078 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarMissionDefinition*                    Mission;                                       // 0x0080 (0x0008) [0x0000000000000001] (CPF_Edit)    
	int32_t                                            MaxPlayersThisMap;                             // 0x0088 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UTexture2D*                                  MapImage;                                      // 0x0090 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class USwfMovie*                                   MapMovie;                                      // 0x0098 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FColor                                      MapFadeColor;                                  // 0x00A0 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bDoNotApplyPerTeamMapYawOffset : 1;            // 0x00A4 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bChangeActiveMinionWaves : 1;                  // 0x00A4 (0x0004) [0x0000000000000002] [0x00000002] (CPF_Const)
	uint32_t                                           bOverrideTeamColors : 1;                       // 0x00A4 (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	int32_t                                            MaxActiveMinionWaves;                          // 0x00A8 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FColor                                      WorldSilhouetteColor;                          // 0x00AC (0x0004) [0x0000000020000003] (CPF_Edit | CPF_Const | CPF_Deprecated)
	float                                              WorldSilhouetteDistance;                       // 0x00B0 (0x0004) [0x0000000020000003] (CPF_Edit | CPF_Const | CPF_Deprecated)
	float                                              WorldSilhouetteRamp;                           // 0x00B4 (0x0004) [0x0000000020000003] (CPF_Edit | CPF_Const | CPF_Deprecated)
	float                                              MaxWorldSilhouetteBrightness;                  // 0x00B8 (0x0004) [0x0000000020000003] (CPF_Edit | CPF_Const | CPF_Deprecated)
	float                                              MinWorldSilhouetteBrightness;                  // 0x00BC (0x0004) [0x0000000020000003] (CPF_Edit | CPF_Const | CPF_Deprecated)
	float                                              WorldSilhouetteDesaturation;                   // 0x00C0 (0x0004) [0x0000000020000003] (CPF_Edit | CPF_Const | CPF_Deprecated)
	float                                              WorldSilhouetteBrightness;                     // 0x00C4 (0x0004) [0x0000000020000003] (CPF_Edit | CPF_Const | CPF_Deprecated)
	struct FVector                                     WindDirection;                                 // 0x00C8 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              WindOscillationRate;                           // 0x00D4 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              WindOscillationMagnitude;                      // 0x00D8 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarConstantBufferParametersComponent*    ConstantBufferComponent;                       // 0x00E0 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	uint8_t                                            bPlayersCanWalkBackToBase;                     // 0x00E8 (0x0001) [0x4000000000000003] (CPF_Edit | CPF_Const)
	class TArray<struct FDefinitionLookup>             HUDOverrideDefinitionDataMapping;              // 0x00F0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class ULevelStatDimensionValueDefinition*          StatDimensionValue;                            // 0x0100 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             MapPersonalBestTeamMatchScoreStat;             // 0x0108 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             MapTimesPlayedStat;                            // 0x0110 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             MapTimesWonStat;                               // 0x0118 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FLinearColor                                Allied_TextColor;                              // 0x0120 (0x0010) [0x0000000000000001] (CPF_Edit)    
	struct FLinearColor                                Allied_ShapeColor;                             // 0x0130 (0x0010) [0x0000000000000001] (CPF_Edit)    
	struct FLinearColor                                Allied_MaterialColor;                          // 0x0140 (0x0010) [0x0000000000000001] (CPF_Edit)    
	struct FLinearColor                                Enemy_TextColor;                               // 0x0150 (0x0010) [0x0000000000000001] (CPF_Edit)    
	struct FLinearColor                                Enemy_ShapeColor;                              // 0x0160 (0x0010) [0x0000000000000001] (CPF_Edit)    
	struct FLinearColor                                Enemy_MaterialColor;                           // 0x0170 (0x0010) [0x0000000000000001] (CPF_Edit)    
	class TArray<struct FTeamFallbackCameraView>       TeamFallbackCameraViews;                       // 0x0180 (0x0010) [0x0000000004400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink | CPF_EditInline)
	struct FSpectatorFixedCameraView                   SpectatorFixedCameraViews[0xA];                // 0x0190 (0x01E0) [0x0000000004400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink | CPF_EditInline)
	class FString                                      DefaultGIDPath;                                // 0x0370 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	class UStarRatingMapDefinition*                    StarRatingDefinition;                          // 0x0380 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMapInfo");
		}

		return uClassPointer;
	};

	class UPoplarGameInfoDefinition* GetDefaultGID();
};

// Class PoplarGame.PoplarMapInfoContextResolver
// 0x0000 (0x0058 - 0x0058)
class UPoplarMapInfoContextResolver : public UAttributeContextResolver
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMapInfoContextResolver");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMapManager
// 0x48A8 (0x0240 - 0x4AE8)
class APoplarMapManager : public AActor
{
public:
	struct FMinimapObjectGroup                         LocalMinimapObjects;                           // 0x0240 (0x0020) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FMinimapObjectStaticData                    ReplicatedStaticData[0x100];                   // 0x0260 (0x1800) [0x0000000100002020] (CPF_Net | CPF_Transient)
	struct FMinimapObjectDynamicData                   ReplicatedDynamicData[0x100];                  // 0x1A60 (0x0C00) [0x0000000100002020] (CPF_Net | CPF_Transient)
	struct FMinimapObjectStaticData                    ReplicatedStaticData2[0x100];                  // 0x2660 (0x1800) [0x0000000100002020] (CPF_Net | CPF_Transient)
	struct FMinimapObjectDynamicData                   ReplicatedDynamicData2[0x100];                 // 0x3E60 (0x0C00) [0x0000000100002020] (CPF_Net | CPF_Transient)
	struct FMinimapObjectGroup                         ReplicatedMinimapObjects;                      // 0x4A60 (0x0020) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class USwfMovie*                                   OverrideMapMovie;                              // 0x4A80 (0x0008) [0x0000000100002020] (CPF_Net | CPF_Transient)
	class UIMinimap*                                   Minimaps_Object[0x4];                               // 0x4A88 (0x0038) [0x0000000000002000] (CPF_Transient)
	class UIMinimap*                                   Minimaps_Interface[0x4];                            // 0x4A90 (0x0038) [0x0000000000002000] (CPF_Transient)
	class APoplarGameReplicationInfo*                  GRI;                                           // 0x4AC8 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bForceUpdateAllIcons : 1;                      // 0x4AD0 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bShowThreats : 1;                              // 0x4AD0 (0x0004) [0x0000000000044000] [0x00000002] (CPF_Config | CPF_GlobalConfig)
	int32_t                                            AvailableAreaWaypointIndices[0x4];             // 0x4AD4 (0x0010) [0x0000000000002000] (CPF_Transient)
	float                                              LocationUpdateThresholdSq;                     // 0x4AE4 (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMapManager");
		}

		return uClassPointer;
	};

	void eventReplicatedArrayEvent(const struct FName& VarName, int32_t ArrayIndex);
	void eventReplicatedEvent(const struct FName& VarName);
	bool UnregisterMinimapObject(class UIMinimapObject* optionalMO, class APoplarPlayerReplicationInfo* optionalPRI);
	bool RegisterMinimapObject(class UIMinimapObject* optionalMO, class APoplarPlayerReplicationInfo* optionalPRI);
	void UnregisterMinimap(class UIMinimap* Minimap, bool optionalBMinimapIsBeingDeinitialized);
	void RegisterMinimap(class UIMinimap* Minimap);
	void Initialize(class APoplarGameReplicationInfo* InGRI);
};

// Class PoplarGame.PoplarMatchmakingGameSearch
// 0x0000 (0x0158 - 0x0158)
class UPoplarMatchmakingGameSearch : public UOnlineGameSearch
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMatchmakingGameSearch");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMatchmakingGameSettings
// 0x0000 (0x0190 - 0x0190)
class UPoplarMatchmakingGameSettings : public UOnlineGameSettings
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMatchmakingGameSettings");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMatchmakingLobbySearch
// 0x0000 (0x0158 - 0x0158)
class UPoplarMatchmakingLobbySearch : public UOnlineGameSearch
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMatchmakingLobbySearch");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMatchmakingLobbySettings
// 0x0008 (0x0190 - 0x0198)
class UPoplarMatchmakingLobbySettings : public UOnlineGameSettings
{
public:
	int32_t                                            NumLobbyTeams;                                 // 0x0190 (0x0004) [0x0000000000000000]               

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMatchmakingLobbySettings");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMatchmakingTeamSearch
// 0x0040 (0x0158 - 0x0198)
class UPoplarMatchmakingTeamSearch : public UOnlineGameSearch
{
public:
	struct FOnlineGameSearchQuery                      AnyFilterQuery;                                // 0x0158 (0x0020) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	struct FOnlineGameSearchQuery                      BestFilterQuery;                               // 0x0178 (0x0020) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMatchmakingTeamSearch");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMatchmakingTeamSettings
// 0x0000 (0x0190 - 0x0190)
class UPoplarMatchmakingTeamSettings : public UOnlineGameSettings
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMatchmakingTeamSettings");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMatchStateExpressionEvaluator
// 0x0008 (0x0058 - 0x0060)
class UPoplarMatchStateExpressionEvaluator : public UExpressionEvaluator
{
public:
	EMatchState                                        FirstState;                                    // 0x0058 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EMatchState                                        LastState;                                     // 0x0059 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMatchStateExpressionEvaluator");
		}

		return uClassPointer;
	};

	bool Evaluate(class UObject* ContextSource);
};

// Class PoplarGame.PoplarMatchTracker
// 0x0020 (0x0058 - 0x0078)
class UPoplarMatchTracker : public UObject
{
public:
	class FString                                      EndpointUrl;                                   // 0x0058 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class FString>                        MatchTags;                                     // 0x0068 (0x0010) [0x0000000000404000] (CPF_Config | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMatchTracker");
		}

		return uClassPointer;
	};

	void eventCreateMatchPlayer(const class FString& MatchGuid, const class FString& PlayerName, const class FString& CharacterName, int32_t TeamID);
	void eventEndMatch(const class FString& MatchGuid, const class FString& EndTime);
	void OnCreateMatchCompleted(struct FSparkResult& RequestResult);
	bool eventCreateMatch(const class FString& MatchGuid, const class FString& IPAddress, const class FString& ServerName, const class FString& GameType, const class FString& MapName, int32_t BuildNumber, const class FString& StartTime, const class FString& Tag);
	class FString eventGetEndpointUrl();
};

// Class PoplarGame.PoplarMeleeCrosshairDefinition
// 0x0010 (0x0058 - 0x0068)
class UPoplarMeleeCrosshairDefinition : public UGBXDefinition
{
public:
	class FString                                      FlashMeleeFrameName;                           // 0x0058 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMeleeCrosshairDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMeleeDefinition
// 0x0080 (0x0240 - 0x02C0)
class UPoplarMeleeDefinition : public UMeleeDefinition
{
public:
	class UPoplarActionDefinition*                     TrackedActionDefinition;                       // 0x0240 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarSkillDefinition*                      TrackedSkillDefinition;                        // 0x0248 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FDamageTags                                 DamageTags;                                    // 0x0250 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                LifestealFormula;                              // 0x0258 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                ShieldstealFormula;                            // 0x0278 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                ShieldPenetrationFormula;                      // 0x0298 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             TargetHitStatDefinition;                       // 0x02B8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMeleeDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMenuSubtitlesGFxMovie
// 0x0010 (0x0450 - 0x0460)
class UPoplarMenuSubtitlesGFxMovie : public UWillowGFxMovie
{
public:
	class UGFxObject*                                  MenuSubtitlesClip;                             // 0x0450 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CachedHighestPrioritySubtitleID;               // 0x0458 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bEnabled : 1;                                  // 0x045C (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMenuSubtitlesGFxMovie");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMessageDefinition
// 0x00B8 (0x0058 - 0x0110)
class UPoplarMessageDefinition : public UGBXDefinition
{
public:
	ELocalMessageType                                  MessageType;                                   // 0x0058 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bHeadlineMatchEvent : 1;                       // 0x005C (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bAllowStackingInHeadline : 1;                  // 0x005C (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	uint32_t                                           bIsKOEvent : 1;                                // 0x005C (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	uint32_t                                           bPostToOnlineFeed : 1;                         // 0x005C (0x0004) [0x0000000000000003] [0x00000008] (CPF_Edit | CPF_Const)
	uint32_t                                           bPostToEventFeed : 1;                          // 0x005C (0x0004) [0x0000000000000003] [0x00000010] (CPF_Edit | CPF_Const)
	uint32_t                                           bPinToEventFeed : 1;                           // 0x005C (0x0004) [0x0000000000000003] [0x00000020] (CPF_Edit | CPF_Const)
	uint32_t                                           bIsHighPriorityMessage : 1;                    // 0x005C (0x0004) [0x0000000000000003] [0x00000040] (CPF_Edit | CPF_Const)
	uint32_t                                           bTeamColorEvent : 1;                           // 0x005C (0x0004) [0x0000000000000003] [0x00000080] (CPF_Edit | CPF_Const)
	class USwfMovie*                                   MatchEventClipGFxMovie;                        // 0x0060 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class FString                                      KOEventFlashFrameName;                         // 0x0068 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class USwfMovie*                                   MatchEventFeedClipGFxMovie;                    // 0x0078 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class FString                                      TitleKey;                                      // 0x0080 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class FString                                      InstigatingTeamMessageKey;                     // 0x0090 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class FString                                      OpposingTeamMessageKey;                        // 0x00A0 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class FString                                      InstigatingPlayerMessageKey;                   // 0x00B0 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class FString                                      OpposingPlayerMessageKey;                      // 0x00C0 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class FString                                      AllPlayersMessageKey;                          // 0x00D0 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	float                                              MinDuration;                                   // 0x00E0 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              MaxDuration;                                   // 0x00E4 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    AudioEventInstigatingTeam;                     // 0x00E8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkEvent*                                    AudioEventOpposingTeam;                        // 0x00F0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkEvent*                                    AudioEventInstigatingPlayer;                   // 0x00F8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkEvent*                                    AudioEventOpposingPlayer;                      // 0x0100 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkEvent*                                    AudioEventAllPlayers;                          // 0x0108 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMessageDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMetagameGlobalsDefinition
// 0x08E8 (0x0058 - 0x0940)
class UPoplarMetagameGlobalsDefinition : public UGBXDefinition
{
public:
	class UPoplarMetaLoadoutDefinition*                PerkLoadoutDef;                                // 0x0058 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              PerkActivationCostModifier;                    // 0x0060 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FColor                                      RarityColorCommon;                             // 0x0064 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FColor                                      RarityColorUncommon;                           // 0x0068 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FColor                                      RarityColorRare;                               // 0x006C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FColor                                      RarityColorVeryRare;                           // 0x0070 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FColor                                      RarityColorLegendary;                          // 0x0074 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FColor                                      InsufficientFundsColor;                        // 0x0078 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FColor                                      LockedTextColor;                               // 0x007C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FColor                                      PurchasedTextColor;                            // 0x0080 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FColor                                      PromotionalTextColor;                          // 0x0084 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FColor                                      EarnedCurrencyColor;                           // 0x0088 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FColor                                      PurchasedCurrencyColor;                        // 0x008C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FColor                                      PerkBackgroundColor;                           // 0x0090 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FColor                                      LoadoutBackgroundColor;                        // 0x0094 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FColor                                      CurrencyBackgroundColor;                       // 0x0098 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FColor                                      CharacterBackgroundColor;                      // 0x009C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<struct FMetaGameTypeInfo>             MetaItemTypeInfos;                             // 0x00A0 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class USwfMovie*                                   GlobalFallbackMetaItemIcon;                    // 0x00B0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class USwfMovie*                                   GlobalFallbackRewardModifierTrophyIconMovie;   // 0x00B8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class FString                                      GlobalFallbackRewardUnlockSoundEvent;          // 0x00C0 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	struct FMetaGameImplicitReward                     ImplicitRewardWonPVP;                          // 0x00D0 (0x0018) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	struct FMetaGameImplicitReward                     ImplicitRewardLostPVP;                         // 0x00E8 (0x0018) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	struct FMetaGameImplicitReward                     ImplicitRewardWonPVE;                          // 0x0100 (0x0018) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	struct FMetaGameImplicitReward                     ImplicitRewardLostPVE;                         // 0x0118 (0x0018) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	struct FMetaGameImplicitReward                     ImplicitRewardBonus;                           // 0x0130 (0x0018) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	int32_t                                            MaxUnclampedItemLevelFromMetaLevel;            // 0x0148 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            MaxUnclampedItemLevelFromRandom;               // 0x014C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            MaxClampedItemLevel;                           // 0x0150 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class USwfMovie*                                   MutationsUnlockFallbackMovie;                  // 0x0158 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            MaxMetaLevel;                                  // 0x0160 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            MaxCharacterMetaLevel;                         // 0x0164 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class FString                                      BlankTitleMetaID;                              // 0x0168 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<struct FExperienceCommandRankRestrictions> CommandRankMatchmakingRestrictions;            // 0x0178 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	struct FChallengeRewardIconInfo                    ChallengeIconInfos[0x21];                      // 0x0188 (0x0318) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FChallengeRewardDisplayNameInfo             ChallengeCurrencyRewardInfos[0x21];            // 0x04A0 (0x0420) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class TArray<class FString>                        ServerEntitlementBlacklist;                    // 0x08C0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class TArray<class FString>                        ServerEntitlementWhitelist;                    // 0x08D0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class TArray<class FString>                        SteamEntitlementBlacklist;                     // 0x08E0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class TArray<class FString>                        OrbisEntitlementBlacklist;                     // 0x08F0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class TArray<class FString>                        DurangoEntitlementBlacklist;                   // 0x0900 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class FString                                      StorySKUMetaID;                                // 0x0910 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class FString                                      StorySKUPrefixMetaID;                          // 0x0920 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<class UPoplarExperienceTagDefinition*> ExperienceTagDefinitions;                      // 0x0930 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMetagameGlobalsDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMetagameInventory
// 0x0108 (0x0058 - 0x0160)
class UPoplarMetagameInventory : public UObject
{
public:
	int32_t                                            DataSourcesNeededForInitialization;            // 0x0058 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            NumPendingRequests;                            // 0x005C (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bEmptyFirstPartyMarketplace : 1;               // 0x0060 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bPlayerMetaDataDirty : 1;                      // 0x0060 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bNeedsExperienceRefresh : 1;                   // 0x0060 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	class APoplarPlayerController*                     OwningPlayerController;                        // 0x0068 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FPlayerTransactions                         PlayerTransactions;                            // 0x0070 (0x0020) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class FString                                      LatestEntitlementTimestamp;                    // 0x0090 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UWillowGFxDialogBox*                         ErrorDlg;                                      // 0x00A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint8_t                                           UnknownData00[0x50];                           // 0x00A8 (0x0050) UNKNOWN PROPERTY: MapProperty PoplarGame.PoplarMetagameInventory.MessageToMessageIdMap
	struct FPointer                                    PurchasedItem;                                 // 0x00F8 (0x0008) [0x0000000000003000] (CPF_Native | CPF_Transient)
	class TArray<struct FScriptDelegate>               InventoryRequestDelegates;                     // 0x0100 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               TransactionDataRequestDelegates;               // 0x0110 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               RefundRequestDelegates;                        // 0x0120 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FScriptDelegate                             __InventoryOperationRequestComplete__Delegate; // 0x0130 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __PlayerTransactionDataRequestComplete__Delegate;// 0x0140 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __RefundRequestComplete__Delegate;             // 0x0150 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMetagameInventory");
		}

		return uClassPointer;
	};

	void OnTransactionRefunded(const struct FPlatformUserId& PlayerID, int32_t ServiceResult, struct FPlayerTransactions& ReadPlayerTransactionData, struct FPlayerEntitlementData& ReadPlayerEntitlementData);
	void OnReceivePlayerTransactionData(const struct FPlatformUserId& PlayerID, int32_t ServiceResult, struct FPlayerTransactions& ReadPlayerTransactionData);
	void OnConsumeMetaItemRequestComplete(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
	void OnReceivePlayerSideboardDataFromHydra(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
	void OnPurchaseMetaItem(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
	void OnReceivePlayerEntitlementDataFromHydra(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
	void OnReceiveMarketplaceDataFromHydra(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
	void OnReceiveItemUnlockScheduleFromHydra(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
	void OnReceivePlayerMetaDataFromHydra(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
	void OnReadFirstPartyMarketplaceContentListComplete(const struct FPlatformUserId& PlayerID, EOnlineSubsystemResult Result);
	void OnCheckFirstPartyMarketplaceContentList(const struct FPlatformUserId& PlayerID, EOnlineSubsystemResult Result, bool bMarketplaceContentListAvailable);
	void OnReadFirstPartyEntitlementListComplete(const struct FPlatformUserId& PlayerID, EOnlineSubsystemResult Result);
	void OnContentPurchased(const struct FPlatformUserId& PlayerID);
	void OnFirstPartyTransactionCancellation(const struct FPlatformUserId& UserId, const struct FQWord& OrderId, bool bCancelled);
	void OnFirstPartyTransactionFinalization(const struct FPlatformUserId& UserId, const struct FQWord& OrderId, bool bFinalized);
	void OnFirstPartyTransactionAuthorization(const struct FQWord& OrderId, bool bAuthorized);
	void OnFirstPartyTransactionInitialization(const struct FPlatformUserId& UserId, const class FString& ItemId, bool bInitialized, const class FString& ErrorCode);
	bool ErrorDialogCallback(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId);
	void RefundRequestComplete(const struct FPlatformUserId& UserId, int32_t ServiceResult, struct FPlayerTransactions& TransactionHistory);
	void PlayerTransactionDataRequestComplete(const struct FPlatformUserId& UserId, int32_t ServiceResult, struct FPlayerTransactions& RequestedTransactionPage);
	void InventoryOperationRequestComplete(const struct FPlatformUserId& UserId, int32_t ServiceResult);
};

// Class PoplarGame.PoplarMetaItemDefinition
// 0x0138 (0x0058 - 0x0190)
class UPoplarMetaItemDefinition : public UGBXDefinition
{
public:
	class FString                                      InternalName;                                  // 0x0058 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class FString                                      MetaItemContentID;                             // 0x0068 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	EMetaItemType                                      MetaItemType;                                  // 0x0078 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class FString                                      ItemName;                                      // 0x0080 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      ItemDescription;                               // 0x0090 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class TArray<class UMarkupAttributePresentationDefinition*> DescriptionPresentations;                      // 0x00A0 (0x0010) [0x000000000440000B] (CPF_Edit | CPF_Const | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class TArray<struct FSortTableEntry>               SortTableEntries;                              // 0x00B0 (0x0010) [0x0000000000500001] (CPF_Edit | CPF_NeedCtorLink)
	class USwfMovie*                                   IconGFxMovie;                                  // 0x00C0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class USwfMovie*                                   AlternateIconGFxMovie;                         // 0x00C8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class USwfMovie*                                   RewardModifierTrophyIconGFxMovie;              // 0x00D0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    RewardTrainSound;                              // 0x00D8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class FString                                      AssetTrackerKey;                               // 0x00E0 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)
	class UPoplarActivityFeedDefinition*               ActivityFeedDef;                               // 0x00F0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bHideEarnedCurrencyCostFromTrialPlayers : 1;   // 0x00F8 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bHidePremiumCurrencyCostFromTrialPlayers : 1;  // 0x00F8 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	uint32_t                                           bHideHeroKeyCostFromTrialPlayers : 1;          // 0x00F8 (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	uint32_t                                           bHydraEnabled : 1;                             // 0x00F8 (0x0004) [0x0000000000020001] [0x00000008] (CPF_Edit | CPF_EditConst)
	uint32_t                                           bHydraCanUse : 1;                              // 0x00F8 (0x0004) [0x0000000000020001] [0x00000010] (CPF_Edit | CPF_EditConst)
	uint32_t                                           bHydraRefundable : 1;                          // 0x00F8 (0x0004) [0x0000000000020001] [0x00000020] (CPF_Edit | CPF_EditConst)
	int32_t                                            HydraDatabaseID;                               // 0x00FC (0x0004) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
	class FString                                      HydraItemWebToolAddress;                       // 0x0100 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)
	class TArray<class FString>                        HydraItemNames;                                // 0x0110 (0x0010) [0x0000000000520001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)
	class TArray<class FString>                        HydraItemDescriptions;                         // 0x0120 (0x0010) [0x0000000000520001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)
	class FString                                      HydraApolloData;                               // 0x0130 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)
	class FString                                      HydraCreationTimestamp;                        // 0x0140 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)
	class FString                                      HydraLastUpdateTimestamp;                      // 0x0150 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)
	class FString                                      HydraImageURL;                                 // 0x0160 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)
	int32_t                                            HydraMaxCount;                                 // 0x0170 (0x0004) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
	int32_t                                            HydraRequiredLevel;                            // 0x0174 (0x0004) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
	int32_t                                            HydraSellValueInPremiumCurrency;               // 0x0178 (0x0004) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
	int32_t                                            HydraSellValueInEarnedCurrency;                // 0x017C (0x0004) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
	class FString                                      RarityString;                                  // 0x0180 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMetaItemDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarFactionDefinition
// 0x0050 (0x0190 - 0x01E0)
class UPoplarFactionDefinition : public UPoplarMetaItemDefinition
{
public:
	class FString                                      FactionName;                                   // 0x0190 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedFactionBio;                           // 0x01A0 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class USwfMovie*                                   FactionIcon;                                   // 0x01B0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EPoplarFaction                                     FactionEnumeration;                            // 0x01B8 (0x0001) [0x0000000000000001] (CPF_Edit)    
	class UFactionStatDimensionValueDefinition*        StatDimensionValue;                            // 0x01C0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             PlayedAsFactionStatDef;                        // 0x01C8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             WonAsFactionStatDef;                           // 0x01D0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             PlayerKilledAsFactionStatDef;                  // 0x01D8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarFactionDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMetaEarnedCurrencyDefinition
// 0x0010 (0x0190 - 0x01A0)
class UPoplarMetaEarnedCurrencyDefinition : public UPoplarMetaItemDefinition
{
public:
	class FString                                      Icon;                                          // 0x0190 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMetaEarnedCurrencyDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMetaItemBankPageDefinition
// 0x0000 (0x0190 - 0x0190)
class UPoplarMetaItemBankPageDefinition : public UPoplarMetaItemDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMetaItemBankPageDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMetaItemBoosterDefinition
// 0x0068 (0x0190 - 0x01F8)
class UPoplarMetaItemBoosterDefinition : public UPoplarMetaItemDefinition
{
public:
	class UPoplarBuffDefinition*                       BuffToApply;                                   // 0x0190 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class TArray<class FString>                        TemporaryEntitledItemTypes;                    // 0x0198 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class TArray<class FString>                        BlacklistedMetaIDs;                            // 0x01A8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class FString                                      AssociatedTitleMetaID;                         // 0x01B8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	int32_t                                            StackingBonusMetaXP;                           // 0x01C8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int32_t                                            StackingBonusCharacterXP;                      // 0x01CC (0x0004) [0x0000000000000001] (CPF_Edit)    
	int32_t                                            StackingBonusEarnedCurrency;                   // 0x01D0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int32_t                                            StackingBonusPremiumCurrency;                  // 0x01D4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class TArray<class UPoplarMetaItemPackDefinition*> StackingBonusLoot;                             // 0x01D8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UPoplarMetaItemPackDefinition*               ConsolationPrize;                              // 0x01E8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bShouldAutomaticallyActivate : 1;              // 0x01F0 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bHideFromFullRetailPlayers : 1;                // 0x01F0 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	uint32_t                                           bMustBeActiveForExperienceTag : 1;             // 0x01F0 (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	EMetaBoostType                                     UIFlag;                                        // 0x01F4 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMetaItemBoosterDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMetaItemPlayerCosmeticBoosterDefinition
// 0x0000 (0x01F8 - 0x01F8)
class UPoplarMetaItemPlayerCosmeticBoosterDefinition : public UPoplarMetaItemBoosterDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMetaItemPlayerCosmeticBoosterDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMetaItemPlayerKillCosmeticBoosterDefinition
// 0x0000 (0x01F8 - 0x01F8)
class UPoplarMetaItemPlayerKillCosmeticBoosterDefinition : public UPoplarMetaItemPlayerCosmeticBoosterDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMetaItemPlayerKillCosmeticBoosterDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMetaItemPlayerTauntCosmeticBoosterDefinition
// 0x0000 (0x01F8 - 0x01F8)
class UPoplarMetaItemPlayerTauntCosmeticBoosterDefinition : public UPoplarMetaItemPlayerCosmeticBoosterDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMetaItemPlayerTauntCosmeticBoosterDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMetaItemBundleDefinition
// 0x0028 (0x0190 - 0x01B8)
class UPoplarMetaItemBundleDefinition : public UPoplarMetaItemDefinition
{
public:
	class TArray<class UPoplarMetaItemDefinition*>     BundledItems;                                  // 0x0190 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	uint32_t                                           bHideFromBundlesTab : 1;                       // 0x01A0 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bHideFromFullRetailPlayers : 1;                // 0x01A0 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	class TArray<struct FBundleVisibilityCriteria>     VisibilityCriteria;                            // 0x01A8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMetaItemBundleDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMetaItemCharacterDefinition
// 0x0010 (0x0190 - 0x01A0)
class UPoplarMetaItemCharacterDefinition : public UPoplarMetaItemDefinition
{
public:
	class UPoplarPlayerNameIdentifierDefinition*       Character;                                     // 0x0190 (0x0008) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bShouldPopulateInCharacterSelect : 1;          // 0x0198 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMetaItemCharacterDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMetaItemMetaTitleDefinition
// 0x0038 (0x0190 - 0x01C8)
class UPoplarMetaItemMetaTitleDefinition : public UPoplarMetaItemDefinition
{
public:
	uint32_t                                           bHideIfLocked : 1;                             // 0x0190 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	class FString                                      FrameName;                                     // 0x0198 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class FString                                      UnlockDescription;                             // 0x01A8 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class FString                                      AssociatedBoosterMetaID;                       // 0x01B8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMetaItemMetaTitleDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMetaItemPackDefinition
// 0x0038 (0x0190 - 0x01C8)
class UPoplarMetaItemPackDefinition : public UPoplarMetaItemDefinition
{
public:
	class TArray<class UPoplarMetaItemProbabilityDefinition*> PackItemSlots;                                 // 0x0190 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class FString                                      FrameName;                                     // 0x01A0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UAkEvent*                                    PackOpenSound;                                 // 0x01B0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	EPerkRarity                                        PerkPackRarity;                                // 0x01B8 (0x0001) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bOverrideRarityColor : 1;                      // 0x01BC (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	struct FColor                                      OverrideColor;                                 // 0x01C0 (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMetaItemPackDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMetaLoadoutDefinition
// 0x0090 (0x0190 - 0x0220)
class UPoplarMetaLoadoutDefinition : public UPoplarMetaItemDefinition
{
public:
	class TArray<struct FLoadoutSlotData>              LoadoutSlots;                                  // 0x0190 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class FString                                      UnlockedSlotTitle;                             // 0x01A0 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      UnlockedSlotDescription;                       // 0x01B0 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      SparkLoadoutKeyword;                           // 0x01C0 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class FString                                      SparkLoadoutIndexKeyword;                      // 0x01D0 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class FString                                      SparkSlotKeyword;                              // 0x01E0 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class FString                                      SparkVersionKeyword;                           // 0x01F0 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class FString                                      SparkNameKeyword;                              // 0x0200 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class FString                                      SparkSlotActiveKeyword;                        // 0x0210 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMetaLoadoutDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMetaLoadoutItemDefinition
// 0x0048 (0x0190 - 0x01D8)
class UPoplarMetaLoadoutItemDefinition : public UPoplarMetaItemDefinition
{
public:
	struct FPmtData                                    PmtData;                                       // 0x0190 (0x0028) [0x0000000000003000] (CPF_Native | CPF_Transient)
	int32_t                                            MetaLevelRequirement;                          // 0x01B8 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bUseLoadoutBuff : 1;                           // 0x01BC (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	int32_t                                            SharedBuffSkillIndex;                          // 0x01C0 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<struct FSkillEffectGroupData>         SharedBuffAttributeEffects;                    // 0x01C8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMetaLoadoutItemDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMetaMutationDefinition
// 0x0010 (0x01D8 - 0x01E8)
class UPoplarMetaMutationDefinition : public UPoplarMetaLoadoutItemDefinition
{
public:
	class UPoplarMetaItemCharacterDefinition*          CharDef;                                       // 0x01D8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bIsLoading : 1;                                // 0x01E0 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMetaMutationDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMetaPerkDefinition
// 0x0000 (0x01D8 - 0x01D8)
class UPoplarMetaPerkDefinition : public UPoplarMetaLoadoutItemDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMetaPerkDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMetaTauntDefinition
// 0x0020 (0x01D8 - 0x01F8)
class UPoplarMetaTauntDefinition : public UPoplarMetaLoadoutItemDefinition
{
public:
	class UPoplarMetaItemCharacterDefinition*          CharDef;                                       // 0x01D8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bDefault : 1;                                  // 0x01E0 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	class FString                                      TauntPath;                                     // 0x01E8 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMetaTauntDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMetaPremiumCurrencyDefinition
// 0x0008 (0x0190 - 0x0198)
class UPoplarMetaPremiumCurrencyDefinition : public UPoplarMetaItemDefinition
{
public:
	int32_t                                            PremiumCurrencyAmount;                         // 0x0190 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMetaPremiumCurrencyDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMetaRewardModifierDefinition
// 0x0000 (0x0190 - 0x0190)
class UPoplarMetaRewardModifierDefinition : public UPoplarMetaItemDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMetaRewardModifierDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMetaSkinDefinition
// 0x0028 (0x0190 - 0x01B8)
class UPoplarMetaSkinDefinition : public UPoplarMetaItemDefinition
{
public:
	class UPoplarPlayerNameIdentifierDefinition*       CharacterNameId;                               // 0x0190 (0x0008) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
	class FString                                      SkinPath;                                      // 0x0198 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)
	class UPoplarMetaItemCharacterDefinition*          CharDef;                                       // 0x01A8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bDefault : 1;                                  // 0x01B0 (0x0004) [0x0000000000020001] [0x00000001] (CPF_Edit | CPF_EditConst)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMetaSkinDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarRecipeDefinition
// 0x0010 (0x0190 - 0x01A0)
class UPoplarRecipeDefinition : public UPoplarMetaItemDefinition
{
public:
	class TArray<struct FRecipePerkInputRequirements>  InputSlots;                                    // 0x0190 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarRecipeDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarRecipeCreateDefinition
// 0x0010 (0x01A0 - 0x01B0)
class UPoplarRecipeCreateDefinition : public UPoplarRecipeDefinition
{
public:
	class TArray<class UPoplarMetaItemProbabilityDefinition*> OutputItems;                                   // 0x01A0 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarRecipeCreateDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarRecipeUpgradeDefinition
// 0x0010 (0x01A0 - 0x01B0)
class UPoplarRecipeUpgradeDefinition : public UPoplarRecipeDefinition
{
public:
	class TArray<struct FRecipeOutputUpgrades>         OutputItems;                                   // 0x01A0 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarRecipeUpgradeDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMetaItemLootDefinition
// 0x0078 (0x0240 - 0x02B8)
class UPoplarMetaItemLootDefinition : public UWillowInventoryDefinition
{
public:
	class UPoplarMetaItemDefinition*                   MetaItemDefinition;                            // 0x0240 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarPerkFunction*                         PerkItemDefinition;                            // 0x0248 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bAwardInstantly : 1;                           // 0x0250 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                EarnedCurrencyAmount_AttID;                    // 0x0258 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                PlayerExperienceAmount_AttID;                  // 0x0278 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                CharacterExperienceAmount_AttID;               // 0x0298 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMetaItemLootDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMetaItemProbabilityDefinition
// 0x0010 (0x0058 - 0x0068)
class UPoplarMetaItemProbabilityDefinition : public UGBXDefinition
{
public:
	class TArray<struct FItemProbability>              ItemProbabilities;                             // 0x0058 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMetaItemProbabilityDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarPerkProbabilityDefinition
// 0x0050 (0x0068 - 0x00B8)
class UPoplarPerkProbabilityDefinition : public UPoplarMetaItemProbabilityDefinition
{
public:
	class TArray<struct FPerkFamilyProbability>        PerkFamilyProbabilities;                       // 0x0068 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<struct FRarityProbability>            RarityProbabilities;                           // 0x0078 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class UPoplarPerkFunction*                         FunctionSpecifiers[0x6];                       // 0x0088 (0x0030) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPerkProbabilityDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMetaItemPurchaseDialogGFxMovie
// 0x0098 (0x0450 - 0x04E8)
class UPoplarMetaItemPurchaseDialogGFxMovie : public UWillowGFxMovie
{
public:
	class FString                                      LocalizedGoToPC;                               // 0x0450 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedCantAfford;                           // 0x0460 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedCantUnlock;                           // 0x0470 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedPurchasing;                           // 0x0480 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LocalizedPurchaseBooster;                      // 0x0490 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MultiplierIndicator;                           // 0x04A0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class APoplarPlayerController*                     PPCOwner;                                      // 0x04B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarMetagameInventory*                    MetagameInventory;                             // 0x04B8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  MainClip;                                      // 0x04C0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarCommandPageGFxMovie*                  OwningMovie;                                   // 0x04C8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FPointer>                      CurrentMetagameItems;                          // 0x04D0 (0x0010) [0x0000000000003000] (CPF_Native | CPF_Transient)
	int32_t                                            TargetPurchaseIndex;                           // 0x04E0 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bPurchaseRequestSent : 1;                      // 0x04E4 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bIntroAnimComplete : 1;                        // 0x04E4 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bWaitingForPlayerToScroll : 1;                 // 0x04E4 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMetaItemPurchaseDialogGFxMovie");
		}

		return uClassPointer;
	};

	void extOnScrolledFullDescription();
	void extOnIntroAnimComplete();
	void extOnRequestPurchaseRealWorld();
	void extOnRequestPurchaseWithCharacterToken();
	void extOnRequestPurchaseWithPremiumCurrency(int32_t ButtonIndex);
	void extOnRequestPurchaseWithEarnedCurrency();
	void OnPurchaseComplete(const struct FPlatformUserId& UserId, int32_t ServiceResult);
	bool HandleInputKey(const struct FPlatformUserId& InUserId, const struct FName& ukey, EInputEvent uevent);
	void HandleHintInput(const struct FPlatformUserId& UserId, const struct FName& HintTag);
	void PopulateHintBar();
	void eventOnClose();
	bool eventStart(bool optionalStartPaused);
};

// Class PoplarGame.PoplarMetaItemPurchaseDialogGFxMovieDefinition
// 0x0068 (0x0138 - 0x01A0)
class UPoplarMetaItemPurchaseDialogGFxMovieDefinition : public UWillowGFxMovie3DDefinition
{
public:
	class UInputButtonDefinition*                      PurchaseWithECConsole;                         // 0x0138 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UInputButtonDefinition*                      PurchaseWithECPC;                              // 0x0140 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UInputButtonDefinition*                      PurchaseWithPCConsole;                         // 0x0148 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UInputButtonDefinition*                      PurchaseWithPCPC;                              // 0x0150 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UInputButtonDefinition*                      PurchaseWithCTConsole;                         // 0x0158 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UInputButtonDefinition*                      PurchaseWithCTPC;                              // 0x0160 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UInputButtonDefinition*                      PurchaseWithCTJapanRegionPromptConsole;        // 0x0168 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UInputButtonDefinition*                      PurchaseFirstItemConsole;                      // 0x0170 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UInputButtonDefinition*                      PurchaseFirstItemPC;                           // 0x0178 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UInputButtonDefinition*                      PurchaseSecondItemConsole;                     // 0x0180 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UInputButtonDefinition*                      PurchaseSecondItemPC;                          // 0x0188 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UInputButtonDefinition*                      PurchaseThirdItemConsole;                      // 0x0190 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UInputButtonDefinition*                      PurchaseThirdItemPC;                           // 0x0198 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMetaItemPurchaseDialogGFxMovieDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMetaItemSortDialogGFxMovie
// 0x0010 (0x0450 - 0x0460)
class UPoplarMetaItemSortDialogGFxMovie : public UWillowGFxMovie
{
public:
	class UGFxObject*                                  MainClip;                                      // 0x0450 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarCommandPageGFxMovie*                  OwningMovie;                                   // 0x0458 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMetaItemSortDialogGFxMovie");
		}

		return uClassPointer;
	};

	void HandleHintInput(const struct FPlatformUserId& UserId, const struct FName& HintTag);
	void PopulateHintBar();
	bool HandleInputKey(const struct FPlatformUserId& InUserId, const struct FName& ukey, EInputEvent uevent);
	void extSortButtonFocused(int32_t ButtonIndex);
	void extSetSort(int32_t SortButtonSelection);
	void eventOnClose();
	bool eventStart(bool optionalStartPaused);
};

// Class PoplarGame.PoplarMetaItemSortDialogGFxMovieDefinition
// 0x0000 (0x0138 - 0x0138)
class UPoplarMetaItemSortDialogGFxMovieDefinition : public UWillowGFxMovie3DDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMetaItemSortDialogGFxMovieDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMetaPlayerReplicationInfo
// 0xC378 (0x0240 - 0xC5B8)
class APoplarMetaPlayerReplicationInfo : public AReplicationInfo
{
public:
	uint32_t                                           RequireRoles : 1;                              // 0x0240 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	class UPoplarPlayerNameIdentifierDefinition*       PlayerClass;                                   // 0x0248 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            NextPostMatchEntitlementNdx;                   // 0x0250 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            ReceivedStaticEntitlements;                    // 0x0254 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            ReceivedLoadoutEntitlements;                   // 0x0258 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            BonusMatchPlayerExperience;                    // 0x025C (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            BonusMatchCharacterExperience;                 // 0x0260 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            BonusMatchEarnedCurrency;                      // 0x0264 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            BonusMatchPremiumCurrency;                     // 0x0268 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CharacterMetaLevel;                            // 0x026C (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<class UIMetaPlayerObserver*>          MetaPlayerObservers;                           // 0x0270 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class UIMetaLoadoutObserver*>         LoadoutObservers;                              // 0x0280 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class FString>                        MetaIdsForCharacterTokenReturns;               // 0x0290 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            MetaLevel;                                     // 0x02A0 (0x0004) [0x0000000100002020] (CPF_Net | CPF_Transient)
	class FString                                      Roles[0x100];                                  // 0x02A8 (0x1000) [0x0000000100402020] (CPF_Net | CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            MetaXP;                                        // 0x12A8 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	int32_t                                            GamesWon;                                      // 0x12AC (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	struct FUniqueNetId                                UniqueId;                                      // 0x12B0 (0x0014) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class APoplarPlayerStateInfo*                      PoplarPSI;                                     // 0x12C8 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	struct FMetaLoadoutInstance                        ReplicatedLoadouts[0x4B];                      // 0x12D0 (0x7080) [0x0000002100402020] (CPF_Net | CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            NumLoadoutEntitlements;                        // 0x8350 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	struct FMetaLoadoutInstance                        CurrentLoadout;                                // 0x8358 (0x0180) [0x0000002100402020] (CPF_Net | CPF_Transient | CPF_NeedCtorLink)
	class UPoplarMetaTauntDefinition*                  CurrentTaunt;                                  // 0x84D8 (0x0008) [0x0000000100002020] (CPF_Net | CPF_Transient)
	class UPoplarMetaSkinDefinition*                   CurrentCharacterSkin;                          // 0x84E0 (0x0008) [0x0000000100002020] (CPF_Net | CPF_Transient)
	class UPoplarMetaMutationDefinition*               UnlockedMutations[0x5];                        // 0x84E8 (0x0028) [0x0000000100002020] (CPF_Net | CPF_Transient)
	class FString                                      PostMatchEntitlements[0xA];                    // 0x8510 (0x00A0) [0x0000000100402020] (CPF_Net | CPF_Transient | CPF_NeedCtorLink)
	class UPoplarMetaItemDefinition*                   StaticEntitlements[0x800];                     // 0x85B0 (0x4000) [0x0000000000002020] (CPF_Net | CPF_Transient)
	int32_t                                            NumStaticEntitlements;                         // 0xC5B0 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMetaPlayerReplicationInfo");
		}

		return uClassPointer;
	};

	void eventDestroyed();
	void eventPostBeginPlay();
};

// Class PoplarGame.PoplarMind
// 0x00C0 (0x08C8 - 0x0988)
class APoplarMind : public AWillowMind
{
public:
	struct FPointer                                    VfTable_IIStatBehavior;                        // 0x08C8 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIScoreBehavior;                       // 0x08D0 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class APoplarPlayerStateInfo*                      PoplarPSI;                                     // 0x08D8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarAIPawn*                               MyPoplarPawn;                                  // 0x08E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMinionLaneTracker*                          TheLaneTracker;                                // 0x08E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarAIComponent*                          PoplarAIComponent;                             // 0x08F0 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class APoplarMinionSpawner*                        MinionSpawner;                                 // 0x08F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarPlayerReplicationInfo*                MyPoplarPRI;                                   // 0x0900 (0x0008) [0x0000000000002000] (CPF_Transient)
	class AActor*                                      FirstValidTargetToDamagePlayer;                // 0x0908 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              CachedLaneWidth;                               // 0x0910 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     CachedLaneDirection;                           // 0x0914 (0x000C) [0x0000000000002000] (CPF_Transient)
	float                                              CachedDistanceToEndOfLane;                     // 0x0920 (0x0004) [0x0000000000002000] (CPF_Transient)
	class AGearboxAIMoveNode*                          CachedLaneNode;                                // 0x0928 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UFormationComponent*                         LastFormation;                                 // 0x0930 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	struct FFlag                                       CanUseMinionFormation;                         // 0x0938 (0x0010) [0x4000000000002000] (CPF_Transient)
	float                                              LastEndOfLaneCalcTime;                         // 0x0948 (0x0004) [0x0000000000002000] (CPF_Transient)
	class AGearboxAIMoveNode*                          CurrLaneNode;                                  // 0x0950 (0x0008) [0x0000000000002000] (CPF_Transient)
	class AGearboxAIMoveNode*                          PrevLaneNode;                                  // 0x0958 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarAIPawn*                               BotArchetype;                                  // 0x0960 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarPlayerSkillTree*                      PlayerSkillTree;                               // 0x0968 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarPlayerClassDefinition*                PlayerClass;                                   // 0x0970 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FPointer                                    BotBehaviorModel;                              // 0x0978 (0x0008) [0x0000000000001000] (CPF_Native)  
	float                                              FirstDamageTimestamp;                          // 0x0980 (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMind");
		}

		return uClassPointer;
	};

	int32_t GetQuickKillTimeLimit();
	int32_t GetQuickKillScore();
	int32_t GetBaseScore();
	void Behavior_AwardTeamBonusScore(int32_t Amount);
	void Behavior_AwardScore(int32_t Amount);
	void OnSkillEvent(class USkillDefinition* SkillDef, ESkillEventType EventType, class AActor* EventRecipient, class UClass* DamageSource, class UDamagePipeline* Pipeline, class UObject* ContextObject);
	class UPlayerSkillTree* GetPlayerSkillTree();
	void Behavior_UpdateStat(class UStatDefinition* Stat, EStatCategoryTypes StatCategory, int32_t NewValue);
	void Behavior_IncrementStat(class UStatDefinition* Stat, int32_t Amount);
	void CheckSkillActivation(class USkillDefinition* SkillToCheck);
	void Behavior_UpgradeSkill(class USkillDefinition* SkillToUpgrade, int32_t NumberOfLevelsToRaise, int32_t MaximumLevelToRaiseSkill, bool bPostSharedEventMessageIfSkillUpgraded);
	void eventOnExpLevelChange();
	void CacheLaneData(class AGearboxAIMoveNode* PrevNode, class AGearboxAIMoveNode* CurrNode);
	float GetDistanceAlongLane(struct FVector& TestLoc);
	float GetDistanceFromLane(struct FVector& TestLoc);
	bool IsWithinLane(struct FVector& TestLoc);
	struct FVector GetLaneDirection();
	float GetLaneWidth();
	bool IsFriendlyWithNextSpawner();
	class UIAIInterface* GetAIParent();
	void eventPossess(class APawn* inPawn, bool bVehicleTransition);
	void ApplyCharacterClassDefaults(class APawn* P, class UCharacterClassDefinition* CharClass);
	void InitializeCharacterClass();
	void DestroyBehaviorModel();
	void CreateBehaviorModel();
};

// Class PoplarGame.PoplarMindTargetInfo
// 0x0128 (0x03A0 - 0x04C8)
class UPoplarMindTargetInfo : public UWillowMindTargetInfo
{
public:
	class UPoplarTargetingComponent*                   PTargetingComp;                                // 0x03A0 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UPoplarTargetingDefinition*                  PTargetingDef;                                 // 0x03A8 (0x0008) [0x0000000000000000]               
	class UIStealthable*                               TargetStealthable_Object;                      // 0x03B0 (0x0008) [0x0000000000000000] 
	class UIStealthable*                               TargetStealthable_Interface;                   // 0x03B8 (0x0008) [0x0000000000000000]               
	struct FFlag                                       Stealthed;                                     // 0x03C0 (0x0010) [0x4000000000000000]               
	struct FFlag                                       WithinLane;                                    // 0x03D0 (0x0010) [0x4000000000000000]               
	float                                              DistanceFromLane;                              // 0x03E0 (0x0004) [0x4000000000000000]               
	float                                              DistanceAlongLane;                             // 0x03E4 (0x0004) [0x4000000000000000]               
	float                                              TimeSinceInLane;                               // 0x03E8 (0x0004) [0x4000000000000000]               
	float                                              DistanceToEndOfLane;                           // 0x03EC (0x0004) [0x4000000000000000]               
	float                                              LastTimeInLane;                                // 0x03F0 (0x0004) [0x0000000000000000]               
	float                                              FirstValidTargetTime;                          // 0x03F4 (0x0004) [0x0000000000000000]               
	struct FFlag                                       FirstToDamagePlayerWhileValidTarget;           // 0x03F8 (0x0010) [0x4000000000000000]               
	struct FFlag                                       IsInCombat;                                    // 0x0408 (0x0010) [0x4000000000000000]               
	float                                              TimeSinceLastAttack;                           // 0x0418 (0x0004) [0x4000000000000000]               
	float                                              TimeSinceLastAttacked;                         // 0x041C (0x0004) [0x4000000000000000]               
	float                                              TimeSinceAttackedPlayer;                       // 0x0420 (0x0004) [0x4000000000000000]               
	float                                              TimeSinceAttackedMinion;                       // 0x0424 (0x0004) [0x4000000000000000]               
	float                                              TimeSinceAttackedSentry;                       // 0x0428 (0x0004) [0x4000000000000000]               
	struct FFlag                                       MatchesFormation;                              // 0x042C (0x0010) [0x4000000000000000]               
	uint32_t                                           bCalculatedFormation : 1;                      // 0x043C (0x0004) [0x0000000000000000] [0x00000001] 
	class UFormationComponent*                         MyFormation;                                   // 0x0440 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UFormationComponent*                         TargetFormation;                               // 0x0448 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	struct FFlag                                       IsMyHotSpot;                                   // 0x0450 (0x0010) [0x4000000000000000]               
	struct FFlag                                       CausedHardFlinch;                              // 0x0460 (0x0010) [0x4000000000000000]               
	struct FFlag                                       CausedSoftFlinch;                              // 0x0470 (0x0010) [0x4000000000000000]               
	float                                              SkillUtilityMax;                               // 0x0480 (0x0004) [0x4000000000000000]               
	float                                              SkillUtilityTable[0x5];                        // 0x0484 (0x0014) [0x0000000000000000]               
	struct FFlag                                       IsAlertPointTarget;                            // 0x0498 (0x0010) [0x4000000000000000]               
	struct FFlag                                       IsFriendlyAlertPointTarget;                    // 0x04A8 (0x0010) [0x4000000000000000]               
	struct FFlag                                       IsEnemyAlertPointTarget;                       // 0x04B8 (0x0010) [0x4000000000000000]               

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMindTargetInfo");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMinimapIconDefinition
// 0x0008 (0x0058 - 0x0060)
class UPoplarMinimapIconDefinition : public UGBXDefinition
{
public:
	float                                              PredictionTravelDistanceLimit;                 // 0x0058 (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMinimapIconDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMinimapIconDefinition_InteractiveObject
// 0x0008 (0x0060 - 0x0068)
class UPoplarMinimapIconDefinition_InteractiveObject : public UPoplarMinimapIconDefinition
{
public:
	class UPoplarMinimapIconType*                      NormalIcon;                                    // 0x0060 (0x0008) [0x0000000004000001] (CPF_Edit | CPF_EditInline)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMinimapIconDefinition_InteractiveObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMinimapIconDefinition_SingleIcon
// 0x0008 (0x0060 - 0x0068)
class UPoplarMinimapIconDefinition_SingleIcon : public UPoplarMinimapIconDefinition
{
public:
	class UPoplarMinimapIconType*                      IconType;                                      // 0x0060 (0x0008) [0x0000000004000001] (CPF_Edit | CPF_EditInline)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMinimapIconDefinition_SingleIcon");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMinimapIconDefinition_Team
// 0x0018 (0x0060 - 0x0078)
class UPoplarMinimapIconDefinition_Team : public UPoplarMinimapIconDefinition
{
public:
	class UPoplarMinimapIconType*                      FriendlyIcon;                                  // 0x0060 (0x0008) [0x0000000004000001] (CPF_Edit | CPF_EditInline)
	class UPoplarMinimapIconType*                      EnemyIcon;                                     // 0x0068 (0x0008) [0x0000000004000001] (CPF_Edit | CPF_EditInline)
	class UPoplarMinimapIconType*                      NeutralIcon;                                   // 0x0070 (0x0008) [0x0000000004000001] (CPF_Edit | CPF_EditInline)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMinimapIconDefinition_Team");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMinimapIconDefinition_Player
// 0x0010 (0x0078 - 0x0088)
class UPoplarMinimapIconDefinition_Player : public UPoplarMinimapIconDefinition_Team
{
public:
	class UPoplarMinimapIconType*                      SelfIcon;                                      // 0x0078 (0x0008) [0x0000000004000001] (CPF_Edit | CPF_EditInline)
	class UPoplarMinimapIconType*                      LocalTeammateIcon;                             // 0x0080 (0x0008) [0x0000000004000001] (CPF_Edit | CPF_EditInline)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMinimapIconDefinition_Player");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMinimapIconDefinition_Waypoint
// 0x0020 (0x0060 - 0x0080)
class UPoplarMinimapIconDefinition_Waypoint : public UPoplarMinimapIconDefinition
{
public:
	class UPoplarMinimapIconType*                      WaypointIconTypes[0x4];                        // 0x0060 (0x0020) [0x0000000004000001] (CPF_Edit | CPF_EditInline)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMinimapIconDefinition_Waypoint");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMinimapIconGroupDefinition
// 0x0018 (0x0058 - 0x0070)
class UPoplarMinimapIconGroupDefinition : public UGBXDefinition
{
public:
	int32_t                                            DrawDepth;                                     // 0x0058 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MinThrottleFPS;                                // 0x005C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxThrottleFPS;                                // 0x0060 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaximumDistanceThreshold;                      // 0x0064 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MinimumDistanceThreshold;                      // 0x0068 (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMinimapIconGroupDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMinimapIconType
// 0x0080 (0x0058 - 0x00D8)
class UPoplarMinimapIconType : public UObject
{
public:
	class USwfMovie*                                   IconMovie;                                     // 0x0058 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class FString                                      ClipSymbolName;                                // 0x0060 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class FString                                      ClipInstanceName;                              // 0x0070 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class FString                                      FrameName;                                     // 0x0080 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	int32_t                                            FirstIconClipIndex;                            // 0x0090 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class TArray<class FString>                        TeamColoredElements;                           // 0x0098 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UPoplarMinimapIconGroupDefinition*           IconGroupDefinition;                           // 0x00A8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bHideWhenOverlapped : 1;                       // 0x00B0 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	uint32_t                                           bSticky : 1;                                   // 0x00B0 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	uint32_t                                           bRotateWithObject : 1;                         // 0x00B0 (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	uint32_t                                           bRotateWithTopography : 1;                     // 0x00B0 (0x0004) [0x0000000000000001] [0x00000008] (CPF_Edit)
	uint32_t                                           bUsesSubClips : 1;                             // 0x00B0 (0x0004) [0x0000000000000000] [0x00000010] 
	float                                              InnerScale;                                    // 0x00B4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              InnerScaleRadius;                              // 0x00B8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              OuterScale;                                    // 0x00BC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              OuterScaleRadius;                              // 0x00C0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              ExpandScale;                                   // 0x00C4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              InnerAlpha;                                    // 0x00C8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              InnerAlphaRadius;                              // 0x00CC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              OuterAlpha;                                    // 0x00D0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              OuterAlphaRadius;                              // 0x00D4 (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMinimapIconType");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMinimapIconType_Ally
// 0x0000 (0x00D8 - 0x00D8)
class UPoplarMinimapIconType_Ally : public UPoplarMinimapIconType
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMinimapIconType_Ally");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMinimapIconType_Cursor
// 0x0000 (0x00D8 - 0x00D8)
class UPoplarMinimapIconType_Cursor : public UPoplarMinimapIconType
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMinimapIconType_Cursor");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMinimapIconType_Waypoint
// 0x0048 (0x00D8 - 0x0120)
class UPoplarMinimapIconType_Waypoint : public UPoplarMinimapIconType
{
public:
	uint32_t                                           bOptionalObjective : 1;                        // 0x00D8 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	class FString                                      OptionalObjectiveClipName;                     // 0x00E0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class FString                                      AboveClipName;                                 // 0x00F0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class FString                                      BelowClipName;                                 // 0x0100 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class FString                                      ArrowClipName;                                 // 0x0110 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMinimapIconType_Waypoint");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMinionSpawner
// 0x0110 (0x0348 - 0x0458)
class APoplarMinionSpawner : public APointSpawner
{
public:
	struct FPointer                                    VfTable_IIPoplarSpawner;                       // 0x0348 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIMinimapObject;                       // 0x0350 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	uint32_t                                           bAlwaysShowLanes : 1;                          // 0x0358 (0x0004) [0x0000000800000001] [0x00000001] (CPF_Edit)
	uint32_t                                           bUseMinionWaveSize : 1;                        // 0x0358 (0x0004) [0x0000000000000002] [0x00000002] (CPF_Const)
	uint32_t                                           bUsingWaveRespawnDelayFormula : 1;             // 0x0358 (0x0004) [0x0000000000000002] [0x00000004] (CPF_Const)
	uint32_t                                           HasPermissionToSpawn : 1;                      // 0x0358 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	uint32_t                                           PendingDeactivation : 1;                       // 0x0358 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	uint32_t                                           bFinishedCurrentWave : 1;                      // 0x0358 (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	class TArray<class USpawnDefinition*>              MinionWaves;                                   // 0x0360 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	int32_t                                            MinionWaveSize;                                // 0x0370 (0x0004) [0x0000000000000002] (CPF_Const)   
	struct FAttributeInitializationData                MinionWaveSizeFormula;                         // 0x0378 (0x0020) [0x0000000000000001] (CPF_Edit)    
	EMinionSpawnType                                   SpawnType;                                     // 0x0398 (0x0001) [0x0000000000000001] (CPF_Edit)    
	int32_t                                            SpawnOnWaveX;                                  // 0x039C (0x0004) [0x0000000000000001] (CPF_Edit)    
	int32_t                                            SpawnEveryWaveX;                               // 0x03A0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int32_t                                            SpawnEveryWaveOffset;                          // 0x03A4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FAttributeInitializationData                WaveRespawnDelayFormula;                       // 0x03A8 (0x0020) [0x0000000000000001] (CPF_Edit)    
	float                                              WaveRespawnDelay;                              // 0x03C8 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              PerMinionSpawnDelay;                           // 0x03CC (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UPawnAllegiance*                             MinionAllegiance;                              // 0x03D0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            SpawnerIndex;                                  // 0x03D8 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarSpawnerTypeDefinition*                SpawnerTypeDefinition;                         // 0x03E0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       TeamDefinition;                                // 0x03E8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarLaneDefinition*                       LaneDefinition;                                // 0x03F0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              LaneWidth;                                     // 0x03F8 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UIPoplarSpawner*                             OnlySpawnIfThisIsHostile_Object;               // 0x0400 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UIPoplarSpawner*                             OnlySpawnIfThisIsHostile_Interface;            // 0x0408 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              LastWaveSpawnTime;                             // 0x0410 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              LastSingleMinionSpawnTime;                     // 0x0414 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CurrentMinionSpawnIndex;                       // 0x0418 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CurrentMinionWaveIndex;                        // 0x041C (0x0004) [0x0000000000002000] (CPF_Transient)
	class UMinionLaneTracker*                          TheMinionLaneTracker;                          // 0x0420 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UMinionLaneTracker*                          OpposingMinionLaneTracker;                     // 0x0428 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            LaneWaveIndex;                                 // 0x0430 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            ExpLevel;                                      // 0x0434 (0x0004) [0x4000000000002000] (CPF_Transient)
	int32_t                                            SpawnLevel;                                    // 0x0438 (0x0004) [0x4000000000002000] (CPF_Transient)
	int32_t                                            NumTotalInSpawnDef;                            // 0x043C (0x0004) [0x0000000000000000]               
	class TArray<int32_t>                              NumInSpawnDefEntry;                            // 0x0440 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UPoplarMinimapIconDefinition*                SpecialIconDefinition;                         // 0x0450 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMinionSpawner");
		}

		return uClassPointer;
	};

	void SetMaxWaveCount(int32_t NewMaxWaveCount);
	class AGearboxAIMoveNode* GetFirstNode(int32_t& OutDistance);
	class AActor* GetInitialDestination();
	void CopyStateFrom(class APoplarMinionSpawner* OtherSpawner);
	void InitializeMinion(class APoplarAIPawn* MinionPawn, int32_t optionalOverrideWaveIdx);
	void DoSpawning(class USpawnMaster* SpawnMaster);
	void SetSpawnerSpawnLevel(int32_t NewSpawnLevel);
	int32_t GetSpawnerSpawnLevel();
	void SetSpawnerExpLevel(int32_t NewLevel);
	int32_t GetSpawnerExpLevel();
	void SetSpawnerIndex(int32_t NewIndex);
	int32_t GetSpawnerIndex();
	void NotifyLaneEvent(const struct FName& EventName, class UObject* OtherObject, class AController* EventInstigator, class UPoplarTeamDefinition* InstigatorTeam);
	void GrantSpawnPermissionIfActivated(bool PermissionGranted);
	bool IsActivated();
	void ActivateSpawner(bool bShouldActivate);
	void SetLaneDefinition(class UPoplarLaneDefinition* NewLaneDefinition);
	class UPoplarLaneDefinition* GetLaneDefinition();
	void SetPoplarTeamDefinition(class UPoplarTeamDefinition* NewTeamDefinition);
	class UPoplarTeamDefinition* GetPoplarTeamDefinition();
	class UPoplarSpawnerTypeDefinition* GetSpawnerTypeDefinition();
	void eventPostBeginPlay();
};

// Class PoplarGame.PoplarMinionSpawnerRenderingComponent
// 0x0000 (0x0360 - 0x0360)
class UPoplarMinionSpawnerRenderingComponent : public UPrimitiveComponent
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMinionSpawnerRenderingComponent");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMissionBehaviorProviderDefinition
// 0x0000 (0x00E0 - 0x00E0)
class UPoplarMissionBehaviorProviderDefinition : public UBehaviorProviderDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMissionBehaviorProviderDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMissionDefinition
// 0x0040 (0x0058 - 0x0098)
class UPoplarMissionDefinition : public UGBXDefinition
{
public:
	struct FPointer                                    VfTable_IIBehaviorProvider;                    // 0x0058 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class FString                                      MissionName;                                   // 0x0060 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class TArray<class UPoplarMissionObjectiveDefinition*> Objectives;                                    // 0x0070 (0x0010) [0x0000000000420003] (CPF_Edit | CPF_Const | CPF_EditConst | CPF_NeedCtorLink)
	uint32_t                                           bAutoComplete : 1;                             // 0x0080 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	class UBehaviorProviderDefinition*                 BehaviorProvider;                              // 0x0088 (0x0008) [0x0000000000000000]               
	class UBehaviorProviderDefinition*                 UpgradeOnly;                                   // 0x0090 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMissionDefinition");
		}

		return uClassPointer;
	};

	void OnShardCountdownComplete(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnChallengeFailed(class UPoplarChallengeDefinition* ChallengeDef, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnChallengeCompleted(class UPoplarChallengeDefinition* ChallengeDef, float TimeRemaining, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnMinionWaveSpawnComplete(class UObject* Spawner, class UObject* LaneDefinition, class UObject* TeamDefinition, class UObject* SpawnerTypeDefinition, int32_t Index, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnSpawnerDeactivated(class UObject* Spawner, class UObject* LaneDefinition, class UObject* TeamDefinition, class UObject* SpawnerTypeDefinition, int32_t Index, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnSpawnerActivated(class UObject* Spawner, class UObject* LaneDefinition, class UObject* TeamDefinition, class UObject* SpawnerTypeDefinition, int32_t Index, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnUnitRegistered(class UObject* NewUnit, class UObject* LaneDefinition, class UObject* TeamDefinition, class UObject* UnitTypeDefinition, int32_t Index, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnGameObjectDestroyed(class UObject* DestroyedObject, class UObject* LaneDefinition, class UObject* TeamDefinition, class UObject* UnitTypeDefinition, class UObject* Killer, int32_t Index, struct FBehaviorConsumerHandle& ConsumerHandle);
	int32_t GetObjectiveIndexW(class UPoplarMissionObjectiveDefinition* MissionObjective);
};

// Class PoplarGame.PoplarMissionObjectiveDefinition
// 0x0040 (0x0058 - 0x0098)
class UPoplarMissionObjectiveDefinition : public UGBXDefinition
{
public:
	class FString                                      ProgressMessage;                               // 0x0058 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	EPoplarMissionObjectiveType                        ObjectiveType;                                 // 0x0068 (0x0001) [0x0000000000000001] (CPF_Edit)    
	uint8_t                                            ObjectiveCount;                                // 0x0069 (0x0001) [0x0000000000000002] (CPF_Const)   
	uint32_t                                           bObjectiveIsOptional : 1;                      // 0x006C (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bAutoActivate : 1;                             // 0x006C (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	uint32_t                                           bAutoCompleteWhenSubObjectivesComplete : 1;    // 0x006C (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	uint32_t                                           bAutoTrackOnActivate : 1;                      // 0x006C (0x0004) [0x0000000000000001] [0x00000008] (CPF_Edit)
	uint32_t                                           bRemainOnHUDAfterCompletion : 1;               // 0x006C (0x0004) [0x0000000000000001] [0x00000010] (CPF_Edit)
	uint32_t                                           bIndented : 1;                                 // 0x006C (0x0004) [0x0000000000000001] [0x00000020] (CPF_Edit)
	class UPoplarMissionObjectiveDefinition*           ParentObjective;                               // 0x0070 (0x0008) [0x0000000000020003] (CPF_Edit | CPF_Const | CPF_EditConst)
	class TArray<class UPoplarMissionObjectiveDefinition*> SubObjectives;                                 // 0x0078 (0x0010) [0x0000000000420003] (CPF_Edit | CPF_Const | CPF_EditConst | CPF_NeedCtorLink)
	struct FName                                       StatId;                                        // 0x0088 (0x0008) [0x0000000000000002] (CPF_Const)   
	int32_t                                            ObjectiveIndex;                                // 0x0090 (0x0004) [0x0000000000020003] (CPF_Edit | CPF_Const | CPF_EditConst)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMissionObjectiveDefinition");
		}

		return uClassPointer;
	};

	class FString GetMissionName();
	class FString GetObjectiveNameW();
};

// Class PoplarGame.PoplarMissionObjectiveWaypointComponent
// 0x01C0 (0x0090 - 0x0250)
class UPoplarMissionObjectiveWaypointComponent : public UActorComponent
{
public:
	struct FPointer                                    VfTable_IIMinimapObject;                       // 0x0090 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIWorldIconObject;                     // 0x0098 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPoplarMissionObjectiveWaypointData         WaypointInfo;                                  // 0x00A0 (0x0010) [0x0000000000000000]               
	int32_t                                            WaypointRadius;                                // 0x00B0 (0x0004) [0x0000000000000000]               
	float                                              ShowInWorldRadiusSq;                           // 0x00B4 (0x0004) [0x0000000000000000]               
	float                                              HideInWorldRadiusSq;                           // 0x00B8 (0x0004) [0x0000000000000000]               
	uint32_t                                           bNeedsReplication : 1;                         // 0x00BC (0x0004) [0x0000000000000000] [0x00000001] 
	uint32_t                                           bRegistered : 1;                               // 0x00BC (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bActive : 1;                                   // 0x00BC (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           bIsAnimatingOut : 1;                           // 0x00BC (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	struct FInWorldObject                              WorldObject;                                   // 0x00C0 (0x0190) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMissionObjectiveWaypointComponent");
		}

		return uClassPointer;
	};

	void RemoveWaypoint();
};

// Class PoplarGame.PoplarMissionSpawnerAspect
// 0x0028 (0x0058 - 0x0080)
class UPoplarMissionSpawnerAspect : public USpawnerAspect
{
public:
	struct FPointer                                    VfTable_IIPoplarMission;                       // 0x0058 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UPoplarMissionObjectiveDefinition*           MissionObjective;                              // 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	EObjectiveSpawnerActivation                        Activation;                                    // 0x0068 (0x0001) [0x0000000000000001] (CPF_Edit)    
	EObjectiveUpdateSetting                            ObjectiveUpdateSetting;                        // 0x0069 (0x0001) [0x0000000000000001] (CPF_Edit)    
	ESpawnerWaypointSetting                            WaypointSetting;                               // 0x006A (0x0001) [0x0000000000000001] (CPF_Edit)    
	ESpawnerWaypointActorSetting                       WaypointActorSetting;                          // 0x006B (0x0001) [0x0000000000000001] (CPF_Edit)    
	class UPoplarMissionObjectiveDefinition*           OverrideObjective;                             // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	int32_t                                            AreaRadius;                                    // 0x0078 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bActiveWaypoint : 1;                           // 0x007C (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bInitialized : 1;                              // 0x007C (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMissionSpawnerAspect");
		}

		return uClassPointer;
	};

	void eventMissionReactionObjectiveComplete(const struct FPoplarMissionEventData& EventData);
	void eventMissionReactionObjectiveCleared(const struct FPoplarMissionEventData& EventData);
	void eventMissionReactionObjectiveUpdated(const struct FPoplarMissionEventData& EventData);
	void eventMissionReactionStatusChanged(const struct FPoplarMissionEventData& EventData);
	void eventMissionReactionInitialized(const struct FPoplarMissionEventData& EventData);
	void eventDenStatRemoved(class APawn* DenPawn);
	void eventDenStatAdded(class APawn* DenPawn);
	void eventEnabledStatusChanged(bool bIsEnabled, bool bHasActiveActors);
	void eventAllActorsRemoved(bool bFinishedSpawning);
	void eventOnActorDeath(class AActor* DeadActor);
	void eventOnSpawnActor(class AActor* SpawnedActor);
	void eventInitialize();
};

// Class PoplarGame.PoplarMissionTracker
// 0x0370 (0x0240 - 0x05B0)
class APoplarMissionTracker : public AActor
{
public:
	struct FPointer                                    VfTable_IIBehaviorConsumer;                    // 0x0240 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIPlayerBehavior;                      // 0x0248 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UPoplarMissionDefinition*                    Mission;                                       // 0x0250 (0x0008) [0x0000000100002020] (CPF_Net | CPF_Transient)
	EPoplarMissionStatus                               Status;                                        // 0x0258 (0x0001) [0x0000000100002020] (CPF_Net | CPF_Transient)
	uint8_t                                            ObjectivesProgress[0x80];                      // 0x0259 (0x0080) [0x0000000100002020] (CPF_Net | CPF_Transient)
	int32_t                                            NumObjectives;                                 // 0x02DC (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class UPoplarMissionObjectiveDefinition*           TrackedMissionObjective;                       // 0x02E0 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	struct FReplicatedWaypointData                     ReplicatedWaypoints[0x14];                     // 0x02E8 (0x0140) [0x0000002100002020] (CPF_Net | CPF_Transient)
	struct FReplicatedWaypointData                     CachedReplicatedWaypoints[0x14];               // 0x0428 (0x0140) [0x0000000000002000] (CPF_Transient)
	int32_t                                            NumReplicatedWaypoints;                        // 0x0568 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class TArray<class UPoplarMissionObjectiveWaypointComponent*> MissionWaypoints;                              // 0x0570 (0x0010) [0x0000000004482008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_NeedCtorLink | CPF_EditInline)
	class TArray<class UIPoplarMission*>               MissionObservers;                              // 0x0580 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FBehaviorConsumerHandle                     BehaviorConsumerHandle;                        // 0x0590 (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FPoplarMissionObjectiveUpdateData> PendingObjectiveUpdates;                       // 0x0598 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	uint32_t                                           bProcessingObjectiveUpdates : 1;               // 0x05A8 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bAutoCompleteMission : 1;                      // 0x05A8 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bInitializedWaypoints : 1;                     // 0x05A8 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMissionTracker");
		}

		return uClassPointer;
	};

	void Behavior_SetCurrentProjectile(class UProjectileDefinition* CurrentProjectile);
	void Behavior_StopForceFeedback();
	void Behavior_ForceFeedback(class UForceFeedbackWaveform* FFWaveform, bool optionalForWeaponFiring);
	class AWillowProjectile* Behavior_SpawnCurrentProjectile(class UProjectileDefinition* optionalCurrentProjectile, bool optionalBLeftHand, bool optionalBConsumeResource, bool optionalBNoVelocity);
	void Behavior_UnlockAchievementForAllPlayers(int32_t AchievementId, int32_t MinimumPlayersRequired);
	void Behavior_DetachMeleeWeapon(bool bApplyToThirdPerson, bool bApplyToFirstPerson);
	void Behavior_AttachMeleeWeapon(bool bApplyToThirdPerson, bool bApplyToFirstPerson);
	void Behavior_UnlockAchievement(int32_t AchievementId);
	void Behavior_SendMessageToPlayersW(bool bShouldSendToInstigator, class UClass* SendMsgClass);
	void Behavior_CameraAnim(class UCameraAnim* Anim);
	void Behavior_ViewShake(const struct FGearboxViewShakeInfo& ShakeInfo);
	void Behavior_Reload();
	struct FBehaviorConsumerHandle GetBehaviorConsumerHandle();
	void RunMissionCustomEvent(const struct FName& EventName, class UObject* Self);
	void NotifyWaypoints(EPoplarMissionEvent MissionEvent);
	void NotifyMissionObservers(EPoplarMissionEvent MissionEvent, class UPoplarMissionObjectiveDefinition* optionalObjectiveDef);
	class UPoplarMissionObjectiveDefinition* GetTrackedMissionObjective();
	void SetTrackedMissionObjective(class UPoplarMissionObjectiveDefinition* MissionObjective);
	void GetCurrentObjectives(bool optionalBRequiredObjectivesOnly, bool optionalBReturnCompletedObjectives, class TArray<class UPoplarMissionObjectiveDefinition*>& CurrentObjectives);
	int32_t GetObjectiveCountW(class UPoplarMissionObjectiveDefinition* MissionObjective);
	bool IsMissionObjectiveActive(class UPoplarMissionObjectiveDefinition* MissionObjective);
	bool IsMissionObjectiveComplete(class UPoplarMissionObjectiveDefinition* MissionObjective);
	void GetObjectivesProgressW(class TArray<int32_t>& OutObjectivesProgress);
	bool UpdateObjective(class UPoplarMissionObjectiveDefinition* MissionObjective, EPoplarMissionObjectiveEvent Event);
	void UnregisterWaypoint(class UPoplarMissionObjectiveWaypointComponent* Waypoint);
	void RegisterWaypoint(class UPoplarMissionObjectiveWaypointComponent* Waypoint);
	void UnregisterMissionObserver(class UIPoplarMission* MissionObserver);
	void RegisterMissionObserver(class UIPoplarMission* MissionObserver);
	bool IsMissionComplete();
	bool IsMissionActive();
	bool IsMissionStarted();
	bool SetMissionStatus(EPoplarMissionStatus MissionStatus);
	class UPoplarMissionDefinition* GetMission();
	bool SetMission(class UPoplarMissionDefinition* InMission);
	void eventReplicatedArrayEvent(const struct FName& VarName, int32_t ArrayIndex);
	void eventReplicatedEvent(const struct FName& VarName);
};

// Class PoplarGame.PoplarMusicDefinition
// 0x0020 (0x0058 - 0x0078)
class UPoplarMusicDefinition : public UGBXDefinition
{
public:
	struct FPointer                                    VfTable_IIBehaviorProvider;                    // 0x0058 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UBehaviorProviderDefinition*                 BehaviorProviderDefinition;                    // 0x0060 (0x0008) [0x0000000000000002] (CPF_Const)   
	class TArray<struct FSpecializedBehaviorEvent>     SupportedMusicSystemEvents;                    // 0x0068 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMusicDefinition");
		}

		return uClassPointer;
	};

	void CharacterSelectConfirmed(class UObject* Target, class UPoplarFactionDefinition* Faction, struct FBehaviorConsumerHandle& ConsumerHandle);
	void StopTitleMusic(struct FBehaviorConsumerHandle& ConsumerHandle);
	void PlayTitleMusic(struct FBehaviorConsumerHandle& ConsumerHandle);
	void PlayPressStart(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnDeactivated(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnActivated(struct FBehaviorConsumerHandle& ConsumerHandle);
	void MusicSystemEvent(const struct FName& SpecializedEventName, class UObject* Target, int32_t WholeData, float DecimalData, struct FBehaviorConsumerHandle& ConsumerHandle);
};

// Class PoplarGame.PoplarMusicSystem
// 0x0228 (0x0078 - 0x02A0)
class UPoplarMusicSystem : public UWwiseMusicManager
{
public:
	struct FPointer                                    VfTable_IIBehaviorConsumer;                    // 0x0078 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FBehaviorConsumerHandle                     ConsumerHandle;                                // 0x0080 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            DefaultGlobalPriorityLevel;                    // 0x0084 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            DefaultTeamPriorityLevel;                      // 0x0088 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            DefaultIndividualPriorityLevel;                // 0x008C (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            BroadcastIndex;                                // 0x0090 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FMusicSystemConfiguration                   ServerConfig;                                  // 0x0098 (0x0058) [0x0000000000002000] (CPF_Transient)
	struct FServerMusicCue                             LastGlobalCue;                                 // 0x00F0 (0x0048) [0x0000000000002000] (CPF_Transient)
	class UPoplarMusicDefinition*                      ActiveMusicDefinition;                         // 0x0138 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              CombatMusicCurrentThreatLevel;                 // 0x0140 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CombatMusicTargetThreatLevel;                  // 0x0144 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UAkState*                                    CombatMusicCurrentMusicState;                  // 0x0148 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bIsInElevatedCombatState : 1;                  // 0x0150 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bStateShouldSwitch : 1;                        // 0x0150 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bIsPlayingMusic : 1;                           // 0x0150 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           bIsPlayingNowOrNever : 1;                      // 0x0150 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	class TArray<struct FPoplarCombatMusicThreat>      ThreatList;                                    // 0x0158 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FPlayerMusicState                           ClientMusicState;                              // 0x0168 (0x0098) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CurrentCueTarget;                              // 0x0200 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CurrentCueBroadcastIndex;                      // 0x0204 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CurrentCueStartTime;                           // 0x0208 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CurrentCueEndTime;                             // 0x020C (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            NowOrNeverPriority;                            // 0x0210 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FMusicSystemConfiguration                   ClientConfig;                                  // 0x0218 (0x0058) [0x0000000000002000] (CPF_Transient)
	int32_t                                            LastPostedStartEventID;                        // 0x0270 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              MaxTargetThreatLevel;                          // 0x0274 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              MaxAchievedThreatLevel;                        // 0x0278 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            AmbientStateCount;                             // 0x027C (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            AlarmedStateCount;                             // 0x0280 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CombatStateCount;                              // 0x0284 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              StateChangeTimeStamp;                          // 0x0288 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TotalTimeAmbient;                              // 0x028C (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TotalTimeAlarmed;                              // 0x0290 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TotalTimeCombat;                               // 0x0294 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FName                                       LastMusicSystemEventName;                      // 0x0298 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMusicSystem");
		}

		return uClassPointer;
	};

	void MusicSystemEvent(const struct FName& SpecializedEventName, class UObject* Target, int32_t WholeData, float DecimalData, class TArray<class UBehaviorProviderDefinition*>& Providers);
	bool IsRegisteredWithBehaviorKernel();
	struct FBehaviorConsumerHandle GetBehaviorConsumerHandle();
};

// Class PoplarGame.PoplarNameplateTypeDefinition
// 0x0008 (0x0058 - 0x0060)
class UPoplarNameplateTypeDefinition : public UGBXDefinition
{
public:
	uint32_t                                           ShowNameForAlly : 1;                           // 0x0058 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	uint32_t                                           ShowNameForEnemy : 1;                          // 0x0058 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	uint32_t                                           ShowNameForNeutral : 1;                        // 0x0058 (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	uint32_t                                           ShowHealthForAlly : 1;                         // 0x0058 (0x0004) [0x0000000000000001] [0x00000008] (CPF_Edit)
	uint32_t                                           ShowHealthForEnemy : 1;                        // 0x0058 (0x0004) [0x0000000000000001] [0x00000010] (CPF_Edit)
	uint32_t                                           ShowHealthForNeutral : 1;                      // 0x0058 (0x0004) [0x0000000000000001] [0x00000020] (CPF_Edit)
	uint32_t                                           ShowLevelForAlly : 1;                          // 0x0058 (0x0004) [0x0000000000000001] [0x00000040] (CPF_Edit)
	uint32_t                                           ShowLevelForEnemy : 1;                         // 0x0058 (0x0004) [0x0000000000000001] [0x00000080] (CPF_Edit)
	uint32_t                                           ShowLevelForNeutral : 1;                       // 0x0058 (0x0004) [0x0000000000000001] [0x00000100] (CPF_Edit)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarNameplateTypeDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarNavigationHandle
// 0x0000 (0x0440 - 0x0440)
class UPoplarNavigationHandle : public UWillowNavigationHandle
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarNavigationHandle");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarNovaTrainingDefinition
// 0x0018 (0x0058 - 0x0070)
class UPoplarNovaTrainingDefinition : public UGBXDefinition
{
public:
	struct FPointer                                    VfTable_IIBehaviorProvider;                    // 0x0058 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UBehaviorProviderDefinition*                 BehaviorProviderDefinition;                    // 0x0060 (0x0008) [0x0000000000000000]               
	class UWillowGFxMovie3DDefinition*                 NovaTrainingMovieDef;                          // 0x0068 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarNovaTrainingDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarNovaTrainingGFxMovie
// 0x0010 (0x05B0 - 0x05C0)
class UPoplarNovaTrainingGFxMovie : public UWillowGFxMovie3D
{
public:
	class UGFxObject*                                  NovaTrainingClip;                              // 0x05B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint8_t                                           UnknownData00[0x8];                            // 0x05B8 (0x0008) MISSED OFFSET

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarNovaTrainingGFxMovie");
		}

		return uClassPointer;
	};

	void extOnFadeOutComplete();
	bool eventStart(bool optionalBStartPaused);
};

// Class PoplarGame.PoplarOnlineClientPlayerServiceAttributeContextResolver
// 0x0000 (0x0058 - 0x0058)
class UPoplarOnlineClientPlayerServiceAttributeContextResolver : public UAttributeContextResolver
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarOnlineClientPlayerServiceAttributeContextResolver");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarOnlineMessageGFxMovie
// 0x0000 (0x0470 - 0x0470)
class UPoplarOnlineMessageGFxMovie : public UOnlineMessageGFxMovie
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarOnlineMessageGFxMovie");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarOnlineService
// 0x0000 (0x0058 - 0x0058)
class UPoplarOnlineService : public UOnlineService
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarOnlineService");
		}

		return uClassPointer;
	};

	static class FString GetServiceResultMessage(int32_t ServiceResult);
};

// Class PoplarGame.PoplarOnlineClientService
// 0x0010 (0x0058 - 0x0068)
class UPoplarOnlineClientService : public UPoplarOnlineService
{
public:
	class TArray<struct FClientRequest>                ClientRequests;                                // 0x0058 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarOnlineClientService");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarOnlineClientItemService
// 0x02E8 (0x0068 - 0x0350)
class UPoplarOnlineClientItemService : public UPoplarOnlineClientService
{
public:
	struct FPointer                                    VfTable_FTickableObject;                       // 0x0068 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class TArray<struct FPurchaseWithMetaCurrencyRequest> PendingPurchaseWithMetaCurrencyRequests;       // 0x0070 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class FString                                      DigitalDeluxeEntitlementId;                    // 0x0080 (0x0010) [0x0000000000404000] (CPF_Config | CPF_NeedCtorLink)
	class FString                                      SeasonPassEntitlementId;                       // 0x0090 (0x0010) [0x0000000000404000] (CPF_Config | CPF_NeedCtorLink)
	class FString                                      PremiumCurrencyTag;                            // 0x00A0 (0x0010) [0x0000000000404000] (CPF_Config | CPF_NeedCtorLink)
	class FString                                      EntitlementTagType;                            // 0x00B0 (0x0010) [0x0000000000404000] (CPF_Config | CPF_NeedCtorLink)
	class FString                                      MarketplaceTagType;                            // 0x00C0 (0x0010) [0x0000000000404000] (CPF_Config | CPF_NeedCtorLink)
	class FString                                      RegionTagName;                                 // 0x00D0 (0x0010) [0x0000000000404000] (CPF_Config | CPF_NeedCtorLink)
	class FString                                      PrivilegeEntitlementIds[0x1D];                 // 0x00E0 (0x01D0) [0x0000000000404000] (CPF_Config | CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               ReadPlayerMarketplaceDataCompleteDelegates;    // 0x02B0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               PurchaseWithMetaCurrencyCompleteDelegates;     // 0x02C0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               ReadPlayerTransactionDataCompleteDelegates;    // 0x02D0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               RefundTransactionCompleteDelegates;            // 0x02E0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               SaveDebugPerkToHydraCompleteDelegates;         // 0x02F0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnReadPlayerMarketplaceData__Delegate;       // 0x0300 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnPurchaseWithMetaCurrency__Delegate;        // 0x0310 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnReadPlayerTransactionData__Delegate;       // 0x0320 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnRefundTransaction__Delegate;               // 0x0330 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnSaveDebugPerkToHydra__Delegate;            // 0x0340 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarOnlineClientItemService");
		}

		return uClassPointer;
	};

	void OnDebugPerkSavedToHydra(struct FSparkResult& RequestResult);
	void RefundTransactionComplete(struct FSparkResult& RequestResult);
	void ReadPlayerTransactionDataComplete(struct FSparkResult& RequestResult);
	void PurchaseWithMetaCurrencyJobRequestComplete(struct FSparkResult& RequestResult);
	void PurchaseWithMetaCurrencyRequestComplete(struct FSparkResult& RequestResult);
	void ReadPlayerMarketplaceDataRequestComplete(struct FSparkResult& RequestResult);
	void OnSaveDebugPerkToHydra(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
	void OnRefundTransaction(const struct FPlatformUserId& PlayerID, int32_t ServiceResult, struct FPlayerTransactions& ReadPlayerTransactions, struct FPlayerEntitlementData& ReadPlayerEntitlementData);
	void OnReadPlayerTransactionData(const struct FPlatformUserId& PlayerID, int32_t ServiceResult, struct FPlayerTransactions& ReadPlayerTransactions);
	void OnPurchaseWithMetaCurrency(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
	void OnReadPlayerMarketplaceData(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
};

// Class PoplarGame.PoplarOnlineClientPlayerService
// 0x0430 (0x0068 - 0x0498)
class UPoplarOnlineClientPlayerService : public UPoplarOnlineClientService
{
public:
	struct FPointer                                    VfTable_IIStatValueProvider;                   // 0x0068 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_FTickableObject;                       // 0x0070 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	int32_t                                            ServiceIdsMaxSize;                             // 0x0078 (0x0004) [0x0000000000000000]               
	class TArray<struct FPlayerEULAData>               CachedPlayerEULAData;                          // 0x0080 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               ReadEULAChainCompleteDelegates;                // 0x0090 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               AcceptDeclineAgreementsCompleteDelegates;      // 0x00A0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               ReportNATTypeCompleteDelegates;                // 0x00B0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               GetNATTypeCompleteDelegates;                   // 0x00C0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               ReadPlayerEntitlementDataCompleteDelegates;    // 0x00D0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               SideboardOperationDelegates;                   // 0x00E0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               ConsumeMetagameItemDelegates;                  // 0x00F0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FReadFirstPartyEntitlementRequest> PendingFirstPartyEntitlementRequests;          // 0x0100 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<struct FMetagameOperationRequest>     ConsumeMetaItemPendingRequests;                // 0x0110 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FMetagameOperationRequest>     ActivateBoosterPendingRequests;                // 0x0120 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               ReadPlayerMetaDataCompleteDelegates;           // 0x0130 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               ReadItemUnlockScheduleDataCompleteDelegates;   // 0x0140 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FPlayerMetaData>               CachedPlayerMetaData;                          // 0x0150 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               ReadPlayerLoadoutsCompleteDelegates;           // 0x0160 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               ReadPlayerDisplayDataCompleteDelegates;        // 0x0170 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	float                                              DisplayDataRetryTime;                          // 0x0180 (0x0004) [0x0000000000000000]               
	class TArray<struct FPlayerDisplayData>            CachedPlayerDisplayData;                       // 0x0188 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FDisplayDataRequest>           PendingDisplayDataRequests;                    // 0x0198 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FReadExperienceDataRequest>    PendingExperienceDataRequests;                 // 0x01A8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               ReadPlayerExperienceDataCompleteDelegates;     // 0x01B8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               ReadExperienceDataByGuidCompleteDelegates;     // 0x01C8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FPlayerBuildStatusData>        CachedBuildStatusData;                         // 0x01D8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FPlayerExperienceData>         CachedExperienceData;                          // 0x01E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               ReadPlayerQosServerDataCompleteDelegates;      // 0x01F8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FPlayerQosServerData>          CachedQosServerData;                           // 0x0208 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               GetZeppelinTicketCompleteDelegates;            // 0x0218 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               RegisterZeppelinTicketCompleteDelegates;       // 0x0228 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FZeppelinTicketData                         CachedZeppelinTicketData;                      // 0x0238 (0x0020) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               VoteForOptionsCompleteDelegates;               // 0x0258 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               GetDedicatedServerCompleteDelegates;           // 0x0268 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FPlayerRejoinServerData>       CachedPlayerRejoinServerData;                  // 0x0278 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FNonLocalPlayerRejoinServerData> CachedNonLocalPlayerRejoinServerData;          // 0x0288 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               QueryForRejoinCompleteDelegates;               // 0x0298 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               ReadMatchHistoryDataCompleteDelegates;         // 0x02A8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               ReadMatchHistoryEntriesCompleteDelegates;      // 0x02B8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FPlatformUserId>               StatReadsInProgress;                           // 0x02C8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               ReadPlayerStatsDataCompleteDelegates;          // 0x02D8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FPlayerStatsData>              CachedStatsData;                               // 0x02E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FChallengeManagerData>         ChallengeManagers;                             // 0x02F8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FMatchHistoryEntrySet>         CachedMatchHistoryEntrySets;                   // 0x0308 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FsPostMatchData>               CachedMatchHistoryData;                        // 0x0318 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FMatchHistoryRequestInfo>      MatchHistoryRequests;                          // 0x0328 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class FString                                      LastMatchId;                                   // 0x0338 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	uint32_t                                           bReadStatsFromMatchHistory : 1;                // 0x0348 (0x0004) [0x0000000000000000] [0x00000001] 
	class TArray<struct FScriptDelegate>               InitPlayerMetaProfileCompleteDelegates;        // 0x0350 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class FString                                      CurrentCampaignPrivateMatchMapGuid;            // 0x0360 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class APoplarPlayerController*                     PlayerControllerForStatRetrieval;              // 0x0370 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __MetagameOperationDelegate__Delegate;         // 0x0378 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnReadPlayerDisplayData__Delegate;           // 0x0388 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnReadPlayerExperienceData__Delegate;        // 0x0398 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnReadExperienceDataByGuid__Delegate;        // 0x03A8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnReadPlayerQosServerData__Delegate;         // 0x03B8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnGetZeppelinTicket__Delegate;               // 0x03C8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnRegisterZeppelinTicket__Delegate;          // 0x03D8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnVoteForOptions__Delegate;                  // 0x03E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnGetDedicatedServer__Delegate;              // 0x03F8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnReadMatchHistoryData__Delegate;            // 0x0408 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnReadMatchHistoryEntries__Delegate;         // 0x0418 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnQueryForRejoin__Delegate;                  // 0x0428 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnReadEULAChain__Delegate;                   // 0x0438 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnAcceptDeclineAgreements__Delegate;         // 0x0448 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnReportNATType__Delegate;                   // 0x0458 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnGetNATType__Delegate;                      // 0x0468 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnReadPlayerStatsData__Delegate;             // 0x0478 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnInitPlayerMetaProfile__Delegate;           // 0x0488 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarOnlineClientPlayerService");
		}

		return uClassPointer;
	};

	void ReadOnlinePlayerDisplayDataComplete(bool bWasSuccessful, const class TArray<struct FOnlinePlayerDisplayData>& DisplayDataList);
	void InitPlayerMetaProfileComplete(struct FSparkResult& RequestResult);
	void ReadPlayerStatsDataRequestComplete(struct FSparkResult& RequestResult);
	void GetNATTypeRequestComplete(struct FSparkResult& RequestResult);
	void ReportNATTypeRequestComplete(struct FSparkResult& RequestResult);
	void AcceptDeclineAgreementsRequestComplete(struct FSparkResult& RequestResult);
	void ReadEULAChainRequestComplete(struct FSparkResult& RequestResult);
	void QueryForRejoinRequestComplete(struct FSparkResult& RequestResult);
	void ReadMatchHistoryEntriesRequestComplete(struct FSparkResult& RequestResult);
	void ReadMatchHistoryDataRequestComplete(struct FSparkResult& RequestResult);
	void GetDedicatedServerRequestComplete(struct FSparkResult& RequestResult);
	void CastOptionVoteRequestComplete(struct FSparkResult& RequestResult);
	void RegisterWithZeppelinRequestComplete(struct FSparkResult& RequestResult);
	void GetZeppelinTicketRequestComplete(struct FSparkResult& RequestResult);
	void ReadPlayerQosServerDataRequestComplete(struct FSparkResult& RequestResult);
	void ReadExperienceDataByGuidRequestComplete(struct FSparkResult& RequestResult);
	void ReadPlayerExperienceDataJobRequestComplete(struct FSparkResult& RequestResult);
	void ReadPlayerExperienceDataRequestComplete(struct FSparkResult& RequestResult);
	void GetBuildStatusRequestComplete(struct FSparkResult& RequestResult);
	void ReadPlayerDisplayDataRequestComplete(struct FSparkResult& RequestResult);
	void ReadPlayerCharacterLoadoutsComplete(struct FSparkResult& RequestResult);
	void ReadItemUnlockScheduleDataRequestComplete(struct FSparkResult& RequestResult);
	void ReadPlayerMetaDataRequestComplete(struct FSparkResult& RequestResult);
	void ReadPlayerSideboardDataRequestComplete(struct FSparkResult& RequestResult);
	void ReadFirstPartyEntitlementsJobRequestComplete(struct FSparkResult& RequestResult);
	void ReadFirstPartyEntitlementsRequestComplete(struct FSparkResult& RequestResult);
	void SetPlayerMetaTitleComplete(struct FSparkResult& RequestResult);
	void ActivateBoosterRequestComplete(struct FSparkResult& RequestResult);
	void ConsumeMetaItemRequestComplete(struct FSparkResult& RequestResult);
	void ReadHydraEntitlementDataRequestComplete(struct FSparkResult& RequestResult);
	void OnTransferSideboardItemsComplete(struct FSparkResult& RequestResult);
	void OnSellMetagameItemsComplete(struct FSparkResult& RequestResult);
	void OnInitPlayerMetaProfile(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
	void OnReadPlayerStatsData(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
	void OnGetNATType(const struct FPlatformUserId& PlayerID, int32_t ServiceResult, class TArray<struct FNATTypeData>& PlayerNATTypeData);
	void OnReportNATType(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
	void OnAcceptDeclineAgreements(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
	void OnReadEULAChain(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
	void OnQueryForRejoin(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
	void OnReadMatchHistoryEntries(const struct FPlatformUserId& PlayerID, int32_t ServiceResult, struct FMatchHistoryEntrySet& ReadMatchHistorySet);
	void OnReadMatchHistoryData(const struct FPlatformUserId& PlayerID, int32_t ServiceResult, struct FsPostMatchData& ReadPlayerMatchResultData);
	void OnGetDedicatedServer(const struct FPlatformUserId& PlayerID, int32_t ServiceResult, struct FGetDedicatedServerData& ServerData);
	void OnVoteForOptions(const struct FPlatformUserId& PlayerID, int32_t ServiceResult, const class FString& DebugCode);
	void OnRegisterZeppelinTicket(const struct FPlatformUserId& PlayerID, int32_t ServiceResult, const class FString& DebugCode);
	void OnGetZeppelinTicket(const struct FPlatformUserId& PlayerID, int32_t ServiceResult, const class FString& DebugCode, struct FZeppelinTicketData& TicketData);
	void OnReadPlayerQosServerData(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
	void OnReadExperienceDataByGuid(const struct FPlatformUserId& PlayerID, int32_t ServiceResult, struct FExperienceData& ReadExperienceData);
	void OnReadPlayerExperienceData(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
	void OnReadPlayerDisplayData(const struct FPlatformUserId& PlayerID, int32_t ServiceResult, class TArray<struct FPlayerDisplayData>& DisplayData);
	void MetagameOperationDelegate(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
};

// Class PoplarGame.PoplarOnlineClientPresenceService
// 0x0018 (0x0068 - 0x0080)
class UPoplarOnlineClientPresenceService : public UPoplarOnlineClientService
{
public:
	struct FPointer                                    VfTable_FTickableObject;                       // 0x0068 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class TArray<struct FPlayerPresenceData>           ActivePlayers;                                 // 0x0070 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarOnlineClientPresenceService");
		}

		return uClassPointer;
	};

	void UpdatePlayerPresenceComplete(struct FSparkResult& RequestResult);
};

// Class PoplarGame.PoplarOnlineServerService
// 0x0010 (0x0058 - 0x0068)
class UPoplarOnlineServerService : public UPoplarOnlineService
{
public:
	class TArray<int32_t>                              ServerRequests;                                // 0x0058 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarOnlineServerService");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarOnlineServerPlayerService
// 0x02D8 (0x0068 - 0x0340)
class UPoplarOnlineServerPlayerService : public UPoplarOnlineServerService
{
public:
	struct FPointer                                    VfTable_FTickableObject;                       // 0x0068 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class TArray<struct FScriptDelegate>               ReadMatchDocumentCompleteDelegates;            // 0x0070 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FServerMatchDocument                        CachedMatchDocument;                           // 0x0080 (0x0188) [0x0000000000400000] (CPF_NeedCtorLink)
	EMatchDocumentStatus                               CachedMatchDocumentStatus;                     // 0x0208 (0x0001) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FScriptDelegate>               UpdateMatchDocumentCompleteDelegates;          // 0x0210 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               NotifyTabulatorOfMatchCompleteDelegates;       // 0x0220 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               ReadPlayerMetaDataCompleteDelegates;           // 0x0230 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FServerPlayerMetaData>         CachedPlayerMetaData;                          // 0x0240 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               UpdatePlayerMetaDataCompleteDelegates;         // 0x0250 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               ReadPlayersStatsDataCompleteDelegates;         // 0x0260 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               UpdateAwardedEntitlementsCompleteDelegates;    // 0x0270 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               ServerHeartbeatCompleteDelegates;              // 0x0280 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FServerPlayerStatsData>        CachedStatsData;                               // 0x0290 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	uint32_t                                           bHeartbeatEnabled : 1;                         // 0x02A0 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	float                                              HeartbeatElapsed;                              // 0x02A4 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            HeartbeatInterval;                             // 0x02A8 (0x0004) [0x0000000000002000] (CPF_Transient)
	class FString                                      HeartbeatActivateTime;                         // 0x02B0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnReadMatchDocument__Delegate;               // 0x02C0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnUpdateMatchDocument__Delegate;             // 0x02D0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnNotifyTabulatorOfMatch__Delegate;          // 0x02E0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnReadPlayerMetaData__Delegate;              // 0x02F0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnUpdatePlayerMetaData__Delegate;            // 0x0300 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnReadPlayersStatsData__Delegate;            // 0x0310 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnUpdateAwardedEntitlements__Delegate;       // 0x0320 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnServerHeartbeat__Delegate;                 // 0x0330 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarOnlineServerPlayerService");
		}

		return uClassPointer;
	};

	void ServerHeartbeatRequestComplete(struct FSparkResult& RequestResult);
	void UpdateAwardedEntitlementsRequestComplete(struct FSparkResult& RequestResult);
	void ReadPlayersStatsDataRequestComplete(struct FSparkResult& RequestResult);
	void UpdatePlayerMetaDataRequestComplete(struct FSparkResult& RequestResult);
	void ReadPlayerMetaDataRequestComplete(struct FSparkResult& RequestResult);
	void UpdateMatchDocumentRequestComplete(struct FSparkResult& RequestResult);
	void NotifyTabulatorOfMatchRequestComplete(struct FSparkResult& RequestResult);
	void ReadMatchDocumentRequestComplete(struct FSparkResult& RequestResult);
	void OnServerHeartbeat(int32_t ServiceResult, bool bShutdown);
	void OnUpdateAwardedEntitlements(int32_t ServiceResult);
	void OnReadPlayersStatsData(int32_t ServiceResult, class TArray<struct FServerPlayerStatsData>& ReadPlayersStatsData);
	void OnUpdatePlayerMetaData(int32_t ServiceResult);
	void OnReadPlayerMetaData(int32_t ServiceResult, class TArray<struct FServerPlayerMetaData>& ReadPlayerMetaData);
	void OnNotifyTabulatorOfMatch(int32_t ServiceResult);
	void OnUpdateMatchDocument(int32_t ServiceResult);
	void OnReadMatchDocument(int32_t ServiceResult, struct FServerMatchDocument& MatchDocument);
};

// Class PoplarGame.PoplarOptionsGFxMovie
// 0x0078 (0x0450 - 0x04C8)
class UPoplarOptionsGFxMovie : public UWillowGFxMovie
{
public:
	class UOptionsGFxObject*                           OptionsObj;                                    // 0x0450 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarScrollingList*                        TheList;                                       // 0x0458 (0x0008) [0x0000000000002000] (CPF_Transient)
	class FString                                      TooltipSpacing;                                // 0x0460 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class FString                                      PreviousMenuHeader;                            // 0x0470 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UWillowSystemSettings*                       SystemSettings;                                // 0x0480 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarScrollingListDataProviderOptionsBase* HandleInputKeyHook;                            // 0x0488 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bTrainingWasEnabled : 1;                       // 0x0490 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	class UPoplarInputBindingGFxMovie*                 InputBindingsMovie;                            // 0x0498 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarControllerInputBindingGFxMovie*       ControllerInputBindingsMovie;                  // 0x04A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarSpeakerAnglesGFxMovie*                SpeakerAnglesMovie;                            // 0x04A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UWillowGFxDialogBox*                         SupportInfoDialog;                             // 0x04B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class FString                                      BackTooltip;                                   // 0x04B8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarOptionsGFxMovie");
		}

		return uClassPointer;
	};

	void ReadPlayerDisplayDataComplete(const struct FPlatformUserId& PlayerID, int32_t ServiceResult, class TArray<struct FPlayerDisplayData>& DisplayDataList);
	void RequestProfileImageComplete(bool bWasSuccessful, const struct FUniqueNetId& NetId, class UTexture* ImageTexture);
	void extOptionsMenuOnLoad(const class FString& TargetPath, const class FString& ListTargetPath);
	bool HandleInputKey(const struct FPlatformUserId& UserId, const struct FName& ukey, EInputEvent uevent);
	void UpdateTooltips();
	void OnSaveOptionsComplete(const struct FPlatformUserId& UserId, ESaveDataOperationResult Result);
	void OnScollingListSelectedIndexChanged(int32_t NewSelectedIndex);
	void OnScrollingListChanged();
	void HandleHintInput(const struct FPlatformUserId& InUserId, const struct FName& HintTag);
	void PopulateHintBar();
	void eventOnTick();
	void eventOnClose();
	bool eventStart(bool optionalStartPaused);
};

// Class PoplarGame.PoplarOvershieldExpressionEvaluator
// 0x0028 (0x0058 - 0x0080)
class UPoplarOvershieldExpressionEvaluator : public UExpressionEvaluator
{
public:
	struct FAttributeInitializationData                AttributeToCompare;                            // 0x0058 (0x0020) [0x0000000000000001] (CPF_Edit)    
	EOvershieldExpressionConstraint                    ConstraintType;                                // 0x0078 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarOvershieldExpressionEvaluator");
		}

		return uClassPointer;
	};

	bool Evaluate(class UObject* ContextSource);
};

// Class PoplarGame.PoplarPartyBeaconClient
// 0x01C0 (0x0A18 - 0x0BD8)
class UPoplarPartyBeaconClient : public UPartyBeaconClient
{
public:
	class TArray<struct FPartyReservation>             RemoteParties;                                 // 0x0A18 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            NumTeams;                                      // 0x0A28 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            NumPlayersPerTeam;                             // 0x0A2C (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            NumReservations;                               // 0x0A30 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __OnMatchmakingStateUpdated__Delegate;         // 0x0A38 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnMatchmakingUIStateUpdated__Delegate;       // 0x0A48 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnExperienceDataUpdated__Delegate;           // 0x0A58 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnPrivateMatchOptionChanged__Delegate;       // 0x0A68 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnClusterTimedOut__Delegate;                 // 0x0A78 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnRequestConnectToHostBeacon__Delegate;      // 0x0A88 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnRequestConnectToHostBeaconForNewHost__Delegate;// 0x0A98 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnRequestCancelMatchmaking__Delegate;        // 0x0AA8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnRemotePlayerAdded__Delegate;               // 0x0AB8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnRemotePlayerRemoved__Delegate;             // 0x0AC8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnRequestReceiveZeppelinTicketFromHost__Delegate;// 0x0AD8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnUpdateInviteFlags__Delegate;               // 0x0AE8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnNumTeamPlayersFoundUpdated__Delegate;      // 0x0AF8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnRequestDebugForceConnectToDedicatedServer__Delegate;// 0x0B08 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnRequestFrontendStateUpdateComplete__Delegate;// 0x0B18 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnRequestSessionReservationComplete__Delegate;// 0x0B28 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnPrepareForGameMatchmakingReceived__Delegate;// 0x0B38 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnJoinTeamReceived__Delegate;                // 0x0B48 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnJoinGameReceived__Delegate;                // 0x0B58 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnRemainingTimeUpdated__Delegate;            // 0x0B68 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnClientCancelled__Delegate;                 // 0x0B78 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnHostHostCancelled__Delegate;               // 0x0B88 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnReportVoteOptionResult__Delegate;          // 0x0B98 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnAllPlayersHaveVoted__Delegate;             // 0x0BA8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnCustomEvent__Delegate;                     // 0x0BB8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnClientFailedToEstablishExpectedReservation__Delegate;// 0x0BC8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPartyBeaconClient");
		}

		return uClassPointer;
	};

	void OnReadExperienceDataByGuid(const struct FPlatformUserId& UserId, int32_t ServiceResult, struct FExperienceData& ReadExperienceData);
	void OnClientFailedToEstablishExpectedReservation();
	void OnCustomEvent(EPoplarBeaconCustomEvent EventId);
	void OnAllPlayersHaveVoted();
	void OnReportVoteOptionResult(const struct FUniqueNetId& VotingPlayerId, int32_t VoteOptionId);
	void OnHostHostCancelled(EPartyReservationCancellationReason Reason);
	void OnClientCancelled(EPartyReservationCancellationReason Reason);
	void OnRemainingTimeUpdated(float RemainingTime);
	void OnJoinGameReceived(const class FString& SessionId);
	void OnJoinTeamReceived(const class FString& SessionId);
	void OnPrepareForGameMatchmakingReceived();
	void OnRequestSessionReservationComplete(bool bWasSuccessful, const struct FUniqueNetId& ReservedPlayer);
	void OnRequestFrontendStateUpdateComplete(EMatchmakingState CurrentMatchmakingState, EMatchmakingUIState CurrentMatchmakingUIState);
	void OnRequestDebugForceConnectToDedicatedServer(const class FString& ServerAddress);
	void OnNumTeamPlayersFoundUpdated(int32_t NewNumTeamPlayersFound);
	void OnUpdateInviteFlags(bool bAllowInvites, bool bAllowJoinViaPresence, bool bAllowJoinViaPresenceFriendsOnly);
	void OnRequestReceiveZeppelinTicketFromHost(const class FString& ZeppelinTicket);
	void OnRemotePlayerRemoved(const struct FUniqueNetId& RemovedPlayerId, bool bShowNotification);
	void OnRemotePlayerAdded(const struct FUniqueNetId& AddedPlayerId, bool bShowNotification);
	void OnRequestCancelMatchmaking(EPoplarMatchmakingCancellationReason Reason);
	void OnRequestConnectToHostBeaconForNewHost(const struct FName& NewBeaconName, struct FPartyBeaconHostData& NewHost);
	void OnRequestConnectToHostBeacon(const struct FName& NewBeaconName);
	void OnClusterTimedOut();
	void OnPrivateMatchOptionChanged(int32_t PanelId, int32_t NewOptionIndex);
	void OnExperienceDataUpdated(const struct FSelectedExperienceData& HostExperienceData);
	void OnMatchmakingUIStateUpdated(EMatchmakingUIState NewMatchmakingUIState);
	void OnMatchmakingStateUpdated(EMatchmakingState NewMatchmakingState);
};

// Class PoplarGame.PoplarPartyBeaconHost
// 0x00A8 (0x0950 - 0x09F8)
class UPoplarPartyBeaconHost : public UPartyBeaconHost
{
public:
	class TArray<struct FUniqueNetId>                  RegisteredPlayers;                             // 0x0950 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	uint8_t                                            ForceInitialTeamNum;                           // 0x0960 (0x0001) [0x0000000000000000]               
	uint32_t                                           bAllowTeamChanges : 1;                         // 0x0964 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	struct FScriptDelegate                             __OnAllPartiesConnectedToBeacon__Delegate;     // 0x0968 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnAllPartiesInSession__Delegate;             // 0x0978 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnRemotePlayerAdded__Delegate;               // 0x0988 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnRemotePlayerRemoved__Delegate;             // 0x0998 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnClientFailedToEstablishExpectedReservation__Delegate;// 0x09A8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnClientFrontendStateUpdateRequest__Delegate;// 0x09B8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnReportVoteOptionResult__Delegate;          // 0x09C8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnAllPlayersHaveVoted__Delegate;             // 0x09D8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnClientRegistrationFailed__Delegate;        // 0x09E8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPartyBeaconHost");
		}

		return uClassPointer;
	};

	void OnClientRegistrationFailed();
	void OnAllPlayersHaveVoted();
	void OnReportVoteOptionResult(const struct FUniqueNetId& VotingPlayerId, int32_t VoteOptionId);
	void OnClientFrontendStateUpdateRequest(const struct FUniqueNetId& RequestingPartyLeader);
	void OnClientFailedToEstablishExpectedReservation();
	void OnRemotePlayerRemoved(const struct FUniqueNetId& RemovedPlayerId);
	void OnRemotePlayerAdded(const struct FUniqueNetId& AddedPlayerId);
	void OnAllPartiesInSession();
	void OnAllPartiesConnectedToBeacon();
};

// Class PoplarGame.PoplarPauseGFxMovie
// 0x0038 (0x0450 - 0x0488)
class UPoplarPauseGFxMovie : public UWillowGFxMovie
{
public:
	class UWillowGFxDialogBox*                         PauseDlg;                                      // 0x0450 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarScrollingList*                        PauseList;                                     // 0x0458 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarOptionsGFxMovie*                      OptionsMovie;                                  // 0x0460 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bBackingVisible : 1;                           // 0x0468 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	class UGFxObject*                                  PauseMovieObj;                                 // 0x0470 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FPauseSurrenderData                         CachedPausedSurrenderData;                     // 0x0478 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ScrollBar;                                     // 0x0480 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPauseGFxMovie");
		}

		return uClassPointer;
	};

	void ReadPlayerDisplayDataComplete(const struct FPlatformUserId& PlayerID, int32_t ServiceResult, class TArray<struct FPlayerDisplayData>& DisplayDataList);
	void RequestProfileImageComplete(bool bWasSuccessful, const struct FUniqueNetId& NetId, class UTexture* ImageTexture);
	bool HandleInput(const struct FPlatformUserId& UserId, const struct FName& ukey, EInputEvent uevent);
	void ApplyPriorityVisibilityEffect(bool bRemoveEffect);
	void ApplyPriorityBlurEffect(bool bRemoveEffect);
	void HideOptions();
	void ShowOptions(class AWillowPlayerController* WPC);
	void CompleteQuitToMenu(bool bIsSplitPlayer);
	bool PromptQuit_Ok(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId);
	bool IsOverlayMenuOpen();
	void PromptQuit();
	void extOnPauseMenuLoaded(const class FString& ClipPath);
	void eventOnClose();
	void CheckAndCloseMenu();
	void HandleHintInput(const struct FPlatformUserId& UserId, const struct FName& HintTag);
	bool eventStart(bool optionalStartPaused);
	void PopulateHintBar();
};

// Class PoplarGame.PoplarPawn
// 0x2490 (0x17C8 - 0x3C58)
class APoplarPawn : public AWillowPawn
{
public:
	struct FPointer                                    VfTable_IIHighlightable;                       // 0x17C8 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIUnit;                                // 0x17D0 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIBuffable;                            // 0x17D8 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IICombatant;                           // 0x17E0 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIMinimapObject;                       // 0x17E8 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIControlledMove;                      // 0x17F0 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIWeaponAction;                        // 0x17F8 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIPoplarSkinConsumer;                  // 0x1800 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IITeleportBehavior;                    // 0x1808 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIPoplarInventoryOwner;                // 0x1810 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIStealthable;                         // 0x1818 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIDamageBlocker;                       // 0x1820 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IICounterable;                         // 0x1828 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UPoplarHotSpotOwnerRef*                      HotSpotRef;                                    // 0x1830 (0x0008) [0x0000000004402008] (CPF_ExportObject | CPF_Transient | CPF_NeedCtorLink | CPF_EditInline)
	struct FPmtData                                    PmtData;                                       // 0x1838 (0x0028) [0x0000000000003000] (CPF_Native | CPF_Transient)
	class APoplarPlayerStateInfo*                      PoplarPSI;                                     // 0x1860 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class UPoplarPlayerClassDefinition*                PoplarPlayerClassDef;                          // 0x1868 (0x0008) [0x0000000100002020] (CPF_Net | CPF_Transient)
	class UPoplarContentSkinDefinition*                AppliedSkin;                                   // 0x1870 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FPoplarSkinRepData                          SkinData;                                      // 0x1878 (0x0010) [0x0000002100002020] (CPF_Net | CPF_Transient)
	class UPoplarSkinDefinition*                       SkinDefinition;                                // 0x1888 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UWeaponActionComponent*                      CurrentWeaponActionComponent;                  // 0x1890 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class UControlledMoveComponent*                    ControlledMoveComponent;                       // 0x1898 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	struct FReplicatedControlledMoveData               ReplicatedCMData;                              // 0x18A0 (0x0040) [0x0000000100002020] (CPF_Net | CPF_Transient)
	struct FAttackTimeData                             AttackTimes;                                   // 0x18E0 (0x0014) [0x0000000000002000] (CPF_Transient)
	struct FFlag                                       IsCapturingPoint;                              // 0x18F4 (0x0010) [0x4000000000002000] (CPF_Transient)
	class UPoplarHighlightComponent*                   HighlightComponent;                            // 0x1908 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	struct FHighlightReplicationStruct                 ReplicatedHighlightData;                       // 0x1910 (0x0020) [0x0000000100002020] (CPF_Net | CPF_Transient)
	int32_t                                            LastHighlightFlashCount;                       // 0x1930 (0x0004) [0x0000000000002000] (CPF_Transient)
	EHighlightFunctionality                            HighlightFunctionalityToggle;                  // 0x1934 (0x0001) [0x0000000100002020] (CPF_Net | CPF_Transient)
	EBaseTeleportState                                 LocalTeleportState;                            // 0x1935 (0x0001) [0x0000000000000000]               
	uint8_t                                            ReplicatedTeleportState;                       // 0x1936 (0x0001) [0x0000000100002020] (CPF_Net | CPF_Transient)
	EReviveState                                       ReviveState;                                   // 0x1937 (0x0001) [0x0000000100002020] (CPF_Net | CPF_Transient)
	uint8_t                                            bSkillUseBreaksStealth;                        // 0x1938 (0x0001) [0x8000000000002000] (CPF_Transient)
	uint8_t                                            bSkillUseBreaksStealthBaseValue;               // 0x1939 (0x0001) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            bSkillUseBreaksStealthModifierStack;           // 0x1940 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	uint8_t                                            bAttacksBreakStealth;                          // 0x1950 (0x0001) [0x8000000000002000] (CPF_Transient)
	uint8_t                                            bAttacksBreakStealthBaseValue;                 // 0x1951 (0x0001) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            bAttacksBreakStealthModifierStack;             // 0x1958 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	uint8_t                                            NoLOSVisionCheck;                              // 0x1968 (0x0001) [0x8000000000002020] (CPF_Net | CPF_Transient)
	uint8_t                                            NoLOSVisionCheckBaseValue;                     // 0x1969 (0x0001) [0x4000000000000022] (CPF_Const | CPF_Net)
	class TArray<class UAttributeModifier*>            NoLOSVisionCheckModifierStack;                 // 0x1970 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	class APoplarTeamInfo*                             MyTeamInfo;                                    // 0x1980 (0x0008) [0x0000000100002020] (CPF_Net | CPF_Transient)
	class UPoplarLaneDefinition*                       LaneDefinition;                                // 0x1988 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarSharedEventProviderDefinition*        SharedEventProviderDef;                        // 0x1990 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarSharedEventProviderDefinition*        PlayerClassSpecificEventDef;                   // 0x1998 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarBodyClassDefinition*                  PoplarBodyClass;                               // 0x19A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FFlag                                       bInTeamBase;                                   // 0x19A8 (0x0010) [0x4000000000002000] (CPF_Transient)
	struct FResourcePoolReference                      EnergyPool;                                    // 0x19B8 (0x0018) [0x0000002000000020] (CPF_Net)     
	float                                              FlatArmorPenetration;                          // 0x19D0 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              FlatArmorPenetrationBaseValue;                 // 0x19D4 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            FlatArmorPenetrationModifierStack;             // 0x19D8 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              PercentageArmorPenetration;                    // 0x19E8 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              PercentageArmorPenetrationBaseValue;           // 0x19EC (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            PercentageArmorPenetrationModifierStack;       // 0x19F0 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              FlatArmorReduction;                            // 0x1A00 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              FlatArmorReductionBaseValue;                   // 0x1A04 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            FlatArmorReductionModifierStack;               // 0x1A08 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              PercentageArmorReduction;                      // 0x1A18 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              PercentageArmorReductionBaseValue;             // 0x1A1C (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            PercentageArmorReductionModifierStack;         // 0x1A20 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              SkillPower;                                    // 0x1A30 (0x0004) [0x8000000000002020] (CPF_Net | CPF_Transient)
	float                                              SkillPowerBaseValue;                           // 0x1A34 (0x0004) [0x4000000000000022] (CPF_Const | CPF_Net)
	class TArray<class UAttributeModifier*>            SkillPowerModifierStack;                       // 0x1A38 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              AttackPower;                                   // 0x1A48 (0x0004) [0x8000000000002020] (CPF_Net | CPF_Transient)
	float                                              AttackPowerBaseValue;                          // 0x1A4C (0x0004) [0x4000000000000022] (CPF_Const | CPF_Net)
	class TArray<class UAttributeModifier*>            AttackPowerModifierStack;                      // 0x1A50 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              Armor;                                         // 0x1A60 (0x0004) [0x8000000000002020] (CPF_Net | CPF_Transient)
	float                                              ArmorBaseValue;                                // 0x1A64 (0x0004) [0x4000000000000022] (CPF_Const | CPF_Net)
	class TArray<class UAttributeModifier*>            ArmorModifierStack;                            // 0x1A68 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              ShieldPenetration;                             // 0x1A78 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              ShieldPenetrationBaseValue;                    // 0x1A7C (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            ShieldPenetrationModifierStack;                // 0x1A80 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              ShieldPenetrationReduction;                    // 0x1A90 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              ShieldPenetrationReductionBaseValue;           // 0x1A94 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            ShieldPenetrationReductionModifierStack;       // 0x1A98 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              InstigatedPhysicalDamageModifier;              // 0x1AA8 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              InstigatedPhysicalDamageModifierBaseValue;     // 0x1AAC (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            InstigatedPhysicalDamageModifierModifierStack; // 0x1AB0 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              InstigatedTrueDamageModifier;                  // 0x1AC0 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              InstigatedTrueDamageModifierBaseValue;         // 0x1AC4 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            InstigatedTrueDamageModifierModifierStack;     // 0x1AC8 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              DamagedPhysicalDamageModifier;                 // 0x1AD8 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              DamagedPhysicalDamageModifierBaseValue;        // 0x1ADC (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            DamagedPhysicalDamageModifierModifierStack;    // 0x1AE0 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              DamagedTrueDamageModifier;                     // 0x1AF0 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              DamagedTrueDamageModifierBaseValue;            // 0x1AF4 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            DamagedTrueDamageModifierModifierStack;        // 0x1AF8 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              KillRelatedPercentageBonusCredits;             // 0x1B08 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              KillRelatedPercentageBonusCreditsBaseValue;    // 0x1B0C (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            KillRelatedPercentageBonusCreditsModifierStack;// 0x1B10 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              KillRelatedFlatBonusCredits;                   // 0x1B20 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              KillRelatedFlatBonusCreditsBaseValue;          // 0x1B24 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            KillRelatedFlatBonusCreditsModifierStack;      // 0x1B28 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              NonKillRelatedPercentageBonusCredits;          // 0x1B38 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              NonKillRelatedPercentageBonusCreditsBaseValue; // 0x1B3C (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            NonKillRelatedPercentageBonusCreditsModifierStack;// 0x1B40 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              NonKillRelatedFlatBonusCredits;                // 0x1B50 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              NonKillRelatedFlatBonusCreditsBaseValue;       // 0x1B54 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            NonKillRelatedFlatBonusCreditsModifierStack;   // 0x1B58 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              TrickleFlatBonusCredits;                       // 0x1B68 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              TrickleFlatBonusCreditsBaseValue;              // 0x1B6C (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            TrickleFlatBonusCreditsModifierStack;          // 0x1B70 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              TrickleFlatBonusExperience;                    // 0x1B80 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              TrickleFlatBonusExperienceBaseValue;           // 0x1B84 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            TrickleFlatBonusExperienceModifierStack;       // 0x1B88 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              LifestealPercentage;                           // 0x1B98 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              LifestealPercentageBaseValue;                  // 0x1B9C (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            LifestealPercentageModifierStack;              // 0x1BA0 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              LifestealScalarForActions;                     // 0x1BB0 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              LifestealScalarForActionsBaseValue;            // 0x1BB4 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            LifestealScalarForActionsModifierStack;        // 0x1BB8 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              LifestealReductionPercentage;                  // 0x1BC8 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              LifestealReductionPercentageBaseValue;         // 0x1BCC (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            LifestealReductionPercentageModifierStack;     // 0x1BD0 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              ShieldstealPercentage;                         // 0x1BE0 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              ShieldstealPercentageBaseValue;                // 0x1BE4 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            ShieldstealPercentageModifierStack;            // 0x1BE8 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              ShieldstealScalarForActions;                   // 0x1BF8 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              ShieldstealScalarForActionsBaseValue;          // 0x1BFC (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            ShieldstealScalarForActionsModifierStack;      // 0x1C00 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              ShieldstealReductionPercentage;                // 0x1C10 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              ShieldstealReductionPercentageBaseValue;       // 0x1C14 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            ShieldstealReductionPercentageModifierStack;   // 0x1C18 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              CurrencyRetainedOnDeathFlatRate;               // 0x1C28 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              CurrencyRetainedOnDeathFlatRateBaseValue;      // 0x1C2C (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            CurrencyRetainedOnDeathFlatRateModifierStack;  // 0x1C30 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              CurrencyRetainedOnDeathPercentage;             // 0x1C40 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              CurrencyRetainedOnDeathPercentageBaseValue;    // 0x1C44 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            CurrencyRetainedOnDeathPercentageModifierStack;// 0x1C48 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              AttackSpeedScale;                              // 0x1C58 (0x0004) [0x8000000000002020] (CPF_Net | CPF_Transient)
	float                                              AttackSpeedScaleBaseValue;                     // 0x1C5C (0x0004) [0x4000000000000022] (CPF_Const | CPF_Net)
	class TArray<class UAttributeModifier*>            AttackSpeedScaleModifierStack;                 // 0x1C60 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              LastDamageAmountBlocked;                       // 0x1C70 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              LastDamageAmountBlockedBaseValue;              // 0x1C74 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            LastDamageAmountBlockedModifierStack;          // 0x1C78 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	uint32_t                                           SentOnSpawnedEvent : 1;                        // 0x1C88 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bShouldPlaySpawnSound : 1;                     // 0x1C88 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bPlayedDeathHitNotify : 1;                     // 0x1C88 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           bTargetableByAI : 1;                           // 0x1C88 (0x0004) [0x0000000000000001] [0x00000008] (CPF_Edit)
	uint32_t                                           bDebugTeleport : 1;                            // 0x1C88 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	uint32_t                                           bBlocking : 1;                                 // 0x1C88 (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	uint32_t                                           bCountering : 1;                               // 0x1C88 (0x0004) [0x0000000000002000] [0x00000040] (CPF_Transient)
	uint32_t                                           bRevivingPawn : 1;                             // 0x1C88 (0x0004) [0x0000000100002020] [0x00000080] (CPF_Net | CPF_Transient)
	uint32_t                                           bWasRevived : 1;                               // 0x1C88 (0x0004) [0x0000000000002020] [0x00000100] (CPF_Net | CPF_Transient)
	uint32_t                                           bPauseBleedOut : 1;                            // 0x1C88 (0x0004) [0x0000000000002020] [0x00000200] (CPF_Net | CPF_Transient)
	uint32_t                                           bShouldPlayRespawnAnimation : 1;               // 0x1C88 (0x0004) [0x0000000000002020] [0x00000400] (CPF_Net | CPF_Transient)
	uint32_t                                           bRespawning : 1;                               // 0x1C88 (0x0004) [0x0000000000002000] [0x00000800] (CPF_Transient)
	uint32_t                                           bSetupReviveBodyState : 1;                     // 0x1C88 (0x0004) [0x0000000000002000] [0x00001000] (CPF_Transient)
	uint32_t                                           bPlayedPostReviveEffects : 1;                  // 0x1C88 (0x0004) [0x0000000000002000] [0x00002000] (CPF_Transient)
	uint32_t                                           DumpHighlightSystem : 1;                       // 0x1C88 (0x0004) [0x0000000000000000] [0x00004000] 
	uint32_t                                           bShouldSkipUnitRegistration : 1;               // 0x1C88 (0x0004) [0x0000000000002000] [0x00008000] (CPF_Transient)
	uint32_t                                           bTaunting : 1;                                 // 0x1C88 (0x0004) [0x0000000100000020] [0x00010000] (CPF_Net)
	uint32_t                                           bAllowPhysicsAssetUpdate : 1;                  // 0x1C88 (0x0004) [0x0000000000000020] [0x00020000] (CPF_Net)
	int32_t                                            ReplicatedNumEnemyAlertPointsOnMe;             // 0x1C8C (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class TArray<class APoplarAlertPoint*>             FriendlyAlertPointsOnMe;                       // 0x1C90 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class APoplarAlertPoint*>             EnemyAlertPointsOnMe;                          // 0x1CA0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	float                                              DetectionRadius;                               // 0x1CB0 (0x0004) [0x8000000000002020] (CPF_Net | CPF_Transient)
	float                                              DetectionRadiusBaseValue;                      // 0x1CB4 (0x0004) [0x4000000000000022] (CPF_Const | CPF_Net)
	class TArray<class UAttributeModifier*>            DetectionRadiusModifierStack;                  // 0x1CB8 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            VisionConeAngle;                               // 0x1CC8 (0x0004) [0x8000000000002020] (CPF_Net | CPF_Transient)
	int32_t                                            VisionConeAngleBaseValue;                      // 0x1CCC (0x0004) [0x4000000000000022] (CPF_Const | CPF_Net)
	class TArray<class UAttributeModifier*>            VisionConeAngleModifierStack;                  // 0x1CD0 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	struct FFlag                                       bForceVisibleToEnemies;                        // 0x1CE0 (0x0010) [0x4000000000002000] (CPF_Transient)
	float                                              StealthBrokenDuration;                         // 0x1CF0 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              StealthBrokenDurationBaseValue;                // 0x1CF4 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            StealthBrokenDurationModifierStack;            // 0x1CF8 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              TimeStampLastAttackInitiated;                  // 0x1D08 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TimeStampLastActionSkill;                      // 0x1D0C (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              ForceCritChance;                               // 0x1D10 (0x0004) [0x4000000000002000] (CPF_Transient)
	class UCreditsProviderDefinition*                  CreditsProvDef;                                // 0x1D18 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UExperienceProviderDefinition*               ExperienceProvDef;                             // 0x1D20 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              CombatMusicThreatValue;                        // 0x1D28 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     RecallRequestLocation;                         // 0x1D2C (0x000C) [0x0000000000002000] (CPF_Transient)
	float                                              RecallRequestStartTime;                        // 0x1D38 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              RecallBaseTimeToPreMove;                       // 0x1D3C (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              RecallServerNextTeleportStateTime;             // 0x1D40 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              RecallClientNextTeleportStateTime;             // 0x1D44 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              RecallBreakRequestDistance;                    // 0x1D48 (0x0004) [0x0000000000000002] (CPF_Const)   
	int32_t                                            TeleportCinematicModeToken;                    // 0x1D4C (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FConditionalDamageModifier>    AttackingDamageModifiers;                      // 0x1D50 (0x0010) [0x0000000000500000] (CPF_NeedCtorLink)
	class TArray<struct FConditionalDamageModifier>    DefendingDamageModifiers;                      // 0x1D60 (0x0010) [0x0000000000500000] (CPF_NeedCtorLink)
	float                                              StunImmunityPercentage;                        // 0x1D70 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              StunImmunityPercentageBaseValue;               // 0x1D74 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            StunImmunityPercentageModifierStack;           // 0x1D78 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              SlowImmunityPercentage;                        // 0x1D88 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              SlowImmunityPercentageBaseValue;               // 0x1D8C (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            SlowImmunityPercentageModifierStack;           // 0x1D90 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              ImmobileImmunityPercentage;                    // 0x1DA0 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              ImmobileImmunityPercentageBaseValue;           // 0x1DA4 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            ImmobileImmunityPercentageModifierStack;       // 0x1DA8 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              SilenceImmunityPercentage;                     // 0x1DB8 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              SilenceImmunityPercentageBaseValue;            // 0x1DBC (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            SilenceImmunityPercentageModifierStack;        // 0x1DC0 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              KnockupImmunityPercentage;                     // 0x1DD0 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              KnockupImmunityPercentageBaseValue;            // 0x1DD4 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            KnockupImmunityPercentageModifierStack;        // 0x1DD8 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              KnockbackImmunityPercentage;                   // 0x1DE8 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              KnockbackImmunityPercentageBaseValue;          // 0x1DEC (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            KnockbackImmunityPercentageModifierStack;      // 0x1DF0 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              CounterImmunityPercentage;                     // 0x1E00 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              CounterImmunityPercentageBaseValue;            // 0x1E04 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            CounterImmunityPercentageModifierStack;        // 0x1E08 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              CharmImmunityPercentage;                       // 0x1E18 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              CharmImmunityPercentageBaseValue;              // 0x1E1C (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            CharmImmunityPercentageModifierStack;          // 0x1E20 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              ForcedMoveImmunityPercentage;                  // 0x1E30 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              ForcedMoveImmunityPercentageBaseValue;         // 0x1E34 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            ForcedMoveImmunityPercentageModifierStack;     // 0x1E38 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              ProvokeImmunityPercentage;                     // 0x1E48 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              ProvokeImmunityPercentageBaseValue;            // 0x1E4C (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            ProvokeImmunityPercentageModifierStack;        // 0x1E50 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              BlindImmunityPercentage;                       // 0x1E60 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              BlindImmunityPercentageBaseValue;              // 0x1E64 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            BlindImmunityPercentageModifierStack;          // 0x1E68 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              StealthImmunityPercentage;                     // 0x1E78 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              StealthImmunityPercentageBaseValue;            // 0x1E7C (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            StealthImmunityPercentageModifierStack;        // 0x1E80 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              JammingImmunityPercentage;                     // 0x1E90 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              JammingImmunityPercentageBaseValue;            // 0x1E94 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            JammingImmunityPercentageModifierStack;        // 0x1E98 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              NegativeDebuffImmunityPercentage;              // 0x1EA8 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              NegativeDebuffImmunityPercentageBaseValue;     // 0x1EAC (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            NegativeDebuffImmunityPercentageModifierStack; // 0x1EB0 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              WoundImmunityPercentage;                       // 0x1EC0 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              WoundImmunityPercentageBaseValue;              // 0x1EC4 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            WoundImmunityPercentageModifierStack;          // 0x1EC8 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              GlobalBuffImmunity;                            // 0x1ED8 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              GlobalBuffImmunityBaseValue;                   // 0x1EDC (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            GlobalBuffImmunityModifierStack;               // 0x1EE0 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              MaxCounteringAngle;                            // 0x1EF0 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              MaxCounteringAngleBaseValue;                   // 0x1EF4 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            MaxCounteringAngleModifierStack;               // 0x1EF8 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              MaxBlockingAngle;                              // 0x1F08 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              MaxBlockingAngleBaseValue;                     // 0x1F0C (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            MaxBlockingAngleModifierStack;                 // 0x1F10 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              DirectPhysicalBlockingProtectionPercentage;    // 0x1F20 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              DirectPhysicalBlockingProtectionPercentageBaseValue;// 0x1F24 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            DirectPhysicalBlockingProtectionPercentageModifierStack;// 0x1F28 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              RadialPhysicalBlockingProtectionPercentage;    // 0x1F38 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              RadialPhysicalBlockingProtectionPercentageBaseValue;// 0x1F3C (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            RadialPhysicalBlockingProtectionPercentageModifierStack;// 0x1F40 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	class UBuffComponent*                              BuffComponent;                                 // 0x1F50 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	struct FBuffInfo                                   ReplicatedBuffs[0x32];                         // 0x1F58 (0x1C20) [0x0000000100402020] (CPF_Net | CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            ReplicatedBuffsArraySize;                      // 0x3B78 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CurrentOvershieldValue;                        // 0x3B7C (0x0004) [0x0000000100002020] (CPF_Net | CPF_Transient)
	float                                              MaxOvershieldValue;                            // 0x3B80 (0x0004) [0x0000000100002020] (CPF_Net | CPF_Transient)
	float                                              PreviousOvershieldValue;                       // 0x3B84 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              PreviousMaxOvershieldValue;                    // 0x3B88 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CrowdControlDurationModifier;                  // 0x3B8C (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              CrowdControlDurationModifierBaseValue;         // 0x3B90 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            CrowdControlDurationModifierModifierStack;     // 0x3B98 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	class APoplarInteractiveObject*                    CurrentlyInUseIO;                              // 0x3BA8 (0x0008) [0x0000000100002020] (CPF_Net | CPF_Transient)
	class TArray<class AController*>                   MastersList;                                   // 0x3BB0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class AController*                                 MostRelevantMaster;                            // 0x3BC0 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	float                                              TimeToBleedOutMP;                              // 0x3BC8 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TimeToBleedOut;                                // 0x3BCC (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class APoplarInteractiveObject*                    ReviveProxy;                                   // 0x3BD0 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	float                                              BleedOutTime;                                  // 0x3BD8 (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<class APoplarPawn*>                   Revivers;                                      // 0x3BE0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class USkelControlBase*                            ReviveIdleControl;                             // 0x3BF0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     LastValidReviveLocation;                       // 0x3BF8 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FRotator                                    LastValidReviveRotation;                       // 0x3C04 (0x000C) [0x0000000000002000] (CPF_Transient)
	float                                              NextReviveLocationTestTime;                    // 0x3C10 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CombatantID;                                   // 0x3C14 (0x0004) [0x0000000100002020] (CPF_Net | CPF_Transient)
	class UPoplarSpecialMove_Taunt*                    TauntSMD;                                      // 0x3C18 (0x0008) [0x0000000000000020] (CPF_Net)     
	class UPoplarNameplateTypeDefinition*              NameplateTypeDefinition;                       // 0x3C20 (0x0008) [0x0000000000000020] (CPF_Net)     
	struct FWearableData                               WearableStaticMeshComponents[0x3];             // 0x3C28 (0x0030) [0x0000000000482000] (CPF_Transient | CPF_Component | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPawn");
		}

		return uClassPointer;
	};

	bool IsMostRelevantMasterDead();
	bool IsMostRelevantMasterTaunting();
	void CounteredFinished();
	void ClientSetupReviveBodyState(const struct FVector& BodyLocation, const struct FRotator& BodyRotation);
	void DelayedAutoRevive();
	float GetRevivingRate();
	float GetBleedOutPct();
	float GetTimeUntilBleedOut();
	void PostSpectateBleedOut();
	void RevivedAnimFinished();
	void PlayDying(class UClass* DamageType, class UDamageTypeDefinition* DamageTypeDefinition, class UImpactDefinition* ImpactDefinition, const struct FVector& HitLoc);
	bool Died(class AController* Killer, class UClass* DamageType, const struct FVector& HitLocation, class UDamagePipeline* optionalPipeline);
	bool eventGetUniqueInstanceData(const struct FName& DataName, class TArray<struct FInstanceDataItem2>& InstanceData);
	bool eventRemoveInstanceData(const struct FName& DataName);
	bool SetInstanceData(const struct FInstanceDataItem2& InstanceData, bool optionalBAllowDuplicateNames);
	void ClientTeleported(const struct FVector& TeleportLocation, const struct FRotator& TeleportRotation, bool optionalBResetCamera);
	void SetRecallToBaseCinematicMode(bool bEnabled);
	void RecallToBaseFailed();
	void RecallToBaseNormalTerminationClientEffects();
	void RecallToBaseEarlyTerminationClientEffects();
	void RecallToBaseClientEffects();
	int32_t GetTeleportFlashCount();
	EBaseTeleportState GetReplicatedTeleportState();
	void SetReplicatedTeleportState(EBaseTeleportState NewState);
	bool IsTeleportingToBase();
	void ServerInterruptTeleportToBase();
	void InterruptTeleportToBase(bool optionalBForce);
	void RequestRecallToBase();
	void ServerStopAttackSequenceBlock();
	void ServerStartAttackSequenceBlock(int32_t SeqNodeIndex);
	void ServerStartAttackSequence(class UWillowAnimDefinition* SMD, float PlayRateScale);
	void ClientStopAttackSequence();
	void ClientStopWeaponFiring();
	bool StopWeaponFiring();
	void PostBeginPlay();
	void SetSharedEventDef(class UPoplarSharedEventProviderDefinition* EventDef);
	void PossessedBy(class AController* C, bool bVehicleTransition);
	void ApplyAttributeStartingValues();
	void ApplyBodyClassStartingValues();
	void NotifyDamageTaken(struct FDamageEventSummary& DamageSummary);
	void eventTakeDamage(float Damage, class AController* InstigatedBy, const struct FVector& HitLocation, const struct FVector& Momentum, class UClass* DamageType, const struct FTraceHitInfo& optionalHitInfo, class UIDamageCauser* optionalDamageCauser, class UDamagePipeline* optionalPipeline);
	void PlayLanded(float ImpactVel, class AActor* optionalFloorActor);
	void eventLanded(const struct FVector& HitNormal, class AActor* FloorActor);
	bool DoJump(bool bUpdating);
	void ServerPostSharedEventMessage(EPoplarSharedEventMessage PSEM, const struct FSharedEventMessageData& MsgData);
	void eventPostSharedEventMessage(EPoplarSharedEventMessage PSEM, bool optionalBClientAndServerEvent, struct FSharedEventMessageData& MsgData);
	void BodyClassChanged();
	void eventDestroyed();
	void eventReplicatedEvent(const struct FName& VarName);
	void eventLatentWeaponActionFinished(class UWeaponActionComponent* TheAction);
	void StopLatentWeaponAction(bool bInterrupted);
	void StartLatentWeaponAction(class UWeaponActionComponent* TheAction, float optionalOverrideActionSpeedScale);
	void GetSnapRegions(class TArray<struct FTargetSnapRegion>& SnapRegions);
	void InitializeBehaviorProvidersForConsumer();
	void SetFocusState(bool bEnabled);
	bool GetFocusState();
	void GetEnergyResourcePoolReference(struct FResourcePoolReference& PoolReference);
	void SetEnergyResourcePoolDefinition(class UIResourcePoolProvider* ResourcePoolProvider, class UResourcePoolDefinition* Definition);
	float GetCurrentPercentageOfMaxDamageCapacity();
	float GetMaxDamageCapacity();
	float GetCurrentDamageCapacity();
	void OnForceMoved();
	void OnBlindEnded();
	void OnBlinded();
	void OnStunEnded();
	void OnStunned();
	class UPoplarTeamDefinition* GetPoplarTeamDefinition();
	void SetPoplarTeamInfo(class APoplarTeamInfo* InTeamInfo);
	class APoplarTeamInfo* GetPoplarTeamInfo();
	void ForceColorRefresh();
	void SetTeamInfo(class ATeamInfo* InTeamInfo);
	class ATeamInfo* GetTeamInfo();
	void GetDamagedStatArray(class TArray<class UStatDefinition*>& DamagedStats);
	void GetKilledStatArray(class TArray<class UStatDefinition*>& KilledStats);
	bool IsSubUnit();
	float GetEnemySeenTimeout();
	float GetCurrentDetectionRadius();
	bool IsInVisionCone(const struct FVector& Position);
	int32_t GetUnitVisionConeAngle();
	class APlayerStateInfo* GetUnitPSI();
	class APlayerReplicationInfo* GetUnitPRI();
	class UPawnAllegiance* GetUnitAllegiance();
	bool IsUnitDead();
	float GetUnitMaxEnergy();
	float GetUnitEnergy();
	float GetUnitMaxOvershield();
	float GetUnitOvershield();
	float GetUnitMaxShield();
	float GetUnitShield();
	float GetUnitMaxHealth();
	float GetUnitHealth();
	int32_t GetUnitLevel();
	bool ShowUnitWidget();
	bool IsHuman();
	void SetInTeamBase(bool bInBase);
	bool IsInTeamBase();
	void SetUnitExpLevel(int32_t NewLevel, bool optionalBAwardSkillPoints, bool optionalBShowHUDFanfare);
	int32_t GetUnitExpLevel();
	int32_t GetSpawnerIndex();
	struct FVector GetUnitLocation();
	class UPoplarLaneDefinition* GetLaneDefinition();
	class UIPoplarSpawner* GetSpawner();
	void SetSpawner(class UIPoplarSpawner* InSpawner);
	void SetLaneDefinition(class UPoplarLaneDefinition* InLaneDef);
	bool SetUnitTypeDefinition(class UPoplarUnitTypeDefinition* NewUnitTypeDefinition, bool optionalSkipGameInfoRegistration);
	class UPoplarNameplateTypeDefinition* GetNameplateTypeDefinition();
	class UPoplarUnitTypeDefinition* GetUnitTypeDefinition();
	class AActor* GetUnitActor();
	void eventUsedByOtherUnit(class UIUnit* User);
	void NotifyLaneEvent(const struct FName& EventName, class AController* EventInstigator, class UPoplarTeamDefinition* InstigatorTeam);
	void UnregisterFromGRI();
	void RegisterWithGRI();
	bool IsTaggedBy(class UPoplarUnitTypeTag* UnitTag);
	bool IsVisibleToTeam(class APoplarTeamInfo* OneTeamInfo);
	bool IsUnitVisibleToMe(class AActor* TargetUnit, bool optionalBIgnoreDetectionRadius, bool optionalBNoLOSCheck);
	struct FVector GetUnitTargetableLocation();
	class UGBXDefinition* GetTeamDefinition();
	void ClearPlayerOutlines(bool optionalBRemoveAll, bool optionalBImmediateRemoval);
	void ClearAlertPoints(class UPoplarAlertPointDefinition* optionalTargetDefinition, bool optionalBClearAll);
	bool ShouldShowHighlight();
	void NotifyUntaggedByAlertPoint(class APoplarAlertPoint* OldAlertPoint);
	void NotifyTaggedByAlertPoint(class APoplarAlertPoint* NewAlertPoint, bool Friendly);
	void RefreshRunningHighlightEffects();
	bool HighlightFunctionalityEnabled();
	void SetHighlightFunctionality(EHighlightFunctionality NewFunctionality);
	void RequestStopHighlightEffect(class UPoplarHighlightDefinition* HighlightDef, class UPoplarTeamDefinition* InstigatingTeam, class APlayerReplicationInfo* InstigatingPlayer, bool optionalBImmediateStop);
	void RequestHighlightEffect(class UPoplarHighlightDefinition* HighlightDef, class UPoplarTeamDefinition* InstigatingTeam, class APlayerReplicationInfo* InstigatingPlayer);
	void TauntInterrupted();
	void TauntFailed();
	void EndTaunt(bool bInterrupted);
};

// Class PoplarGame.WillowAIPawnOld
// 0x0288 (0x3C58 - 0x3EE0)
class AWillowAIPawnOld : public APoplarPawn
{
public:
	struct FPointer                                    VfTable_IINPCBehavior;                         // 0x3C58 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIFocusable;                           // 0x3C60 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIChangeUsabilityBehavior;             // 0x3C68 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IITimerBehavior;                       // 0x3C70 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class TArray<class UCylinderComponent*>            SecondaryCylinders;                            // 0x3C78 (0x0010) [0x0000000004482008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_NeedCtorLink | CPF_EditInline)
	class UPrimitiveComponent*                         LastEncroachedPrimitive;                       // 0x3C88 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class AWillowMind*                                 MyWillowMind;                                  // 0x3C90 (0x0008) [0x0000000000002000] (CPF_Transient)
	class ASpawnPoint*                                 MySpawnPoint;                                  // 0x3C98 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class UWillowClanDefinition*                       ClanDef;                                       // 0x3CA0 (0x0008) [0x0000000100002020] (CPF_Net | CPF_Transient)
	class AWillowPawn*                                 SpawnParent;                                   // 0x3CA8 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	int32_t                                            ExpLevel;                                      // 0x3CB0 (0x0004) [0x4000000000000020] (CPF_Net)     
	int32_t                                            GameStageForSpawnedInventory;                  // 0x3CB4 (0x0004) [0x0000000000000000]               
	int32_t                                            AwesomeLevel;                                  // 0x3CB8 (0x0004) [0x4000000000000000]               
	float                                              ExperiencePointMultiplier;                     // 0x3CBC (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              ExperiencePointMultiplierBaseValue;            // 0x3CC0 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            ExperiencePointMultiplierModifierStack;        // 0x3CC8 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            NumLevelUps;                                   // 0x3CD8 (0x0004) [0x4000000000000000]               
	struct FName                                       MountedInstanceDataName;                       // 0x3CDC (0x0008) [0x0000000000002000] (CPF_Transient)
	EAITransformed                                     TransformType;                                 // 0x3CE4 (0x0001) [0x0000000000002020] (CPF_Net | CPF_Transient)
	uint8_t                                            bInjured;                                      // 0x3CE5 (0x0001) [0x4000000000002020] (CPF_Net | CPF_Transient)
	uint8_t                                            bUsable[0x2];                                  // 0x3CE6 (0x0002) [0x0000000000002000] (CPF_Transient)
	uint8_t                                            bCostsToUse[0x2];                              // 0x3CE8 (0x0002) [0x0000000000002000] (CPF_Transient)
	ECurrencyType                                      CostsToUseType[0x2];                           // 0x3CEA (0x0002) [0x0000000000002000] (CPF_Transient)
	class UAIClassDefinition*                          AIClass;                                       // 0x3CF0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bOverrideAutoAimRange : 1;                     // 0x3CF8 (0x0004) [0x0000000000000002] [0x00000001] (CPF_Const)
	uint32_t                                           bOverrideAutoAimOrigin : 1;                    // 0x3CF8 (0x0004) [0x0000000000000002] [0x00000002] (CPF_Const)
	uint32_t                                           bDefaultInventoryAdded : 1;                    // 0x3CF8 (0x0004) [0x0000000000000000] [0x00000004] 
	uint32_t                                           bDebugUsingAIInspector : 1;                    // 0x3CF8 (0x0004) [0x0000000000000000] [0x00000008] 
	uint32_t                                           DoesVehicleAllowMeToDropLoot : 1;              // 0x3CF8 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	uint32_t                                           bIsCharging : 1;                               // 0x3CF8 (0x0004) [0x0000000000002020] [0x00000020] (CPF_Net | CPF_Transient)
	uint32_t                                           bInKnockback : 1;                              // 0x3CF8 (0x0004) [0x0000000000002000] [0x00000040] (CPF_Transient)
	uint32_t                                           bHideInfoOnHud : 1;                            // 0x3CF8 (0x0004) [0x0000000000002000] [0x00000080] (CPF_Transient)
	uint32_t                                           bPlayingRotationAudio : 1;                     // 0x3CF8 (0x0004) [0x0000000100002020] [0x00000100] (CPF_Net | CPF_Transient)
	uint32_t                                           bDisableServerRotation : 1;                    // 0x3CF8 (0x0004) [0x0000000000000000] [0x00000200] 
	uint32_t                                           bAwardedExperienceForKill : 1;                 // 0x3CF8 (0x0004) [0x0000000000002000] [0x00000400] (CPF_Transient)
	uint32_t                                           bHeadLookOnHold : 1;                           // 0x3CF8 (0x0004) [0x0000000000002020] [0x00000800] (CPF_Net | CPF_Transient)
	float                                              AutoAimRangeOverride;                          // 0x3CFC (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FVector                                     AutoAimOriginOverride;                         // 0x3D00 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FName                                       TargetableSocket;                              // 0x3D0C (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UMaterialInstance*                           DebugPawnMarkerInst;                           // 0x3D18 (0x0008) [0x0000000000002000] (CPF_Transient)
	class URB_BodyInstance*                            PhysicsVehicleCollisionBody;                   // 0x3D20 (0x0008) [0x0000000000002000] (CPF_Transient)
	class URB_BodySetup*                               PhysicsVehicleCollisionBodySetup;              // 0x3D28 (0x0008) [0x0000000000002000] (CPF_Transient)
	class AVehicle*                                    LastRunOverByVehicle;                          // 0x3D30 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            LastRunOverByWheelIndex;                       // 0x3D38 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              LastRunOverByTime;                             // 0x3D3C (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              EnteredVehicleTime;                            // 0x3D40 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              ExitedVehicleTime;                             // 0x3D44 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FStaggerStateData                           StaggerState;                                  // 0x3D48 (0x0048) [0x0000000100082020] (CPF_Net | CPF_Transient | CPF_Component)
	class UWillowStaggerAnimNodeBlend*                 StaggerRecoveryBlend;                          // 0x3D90 (0x0008) [0x0000000000000000]               
	uint8_t                                           UnknownData00[0x8];                            // 0x3D98 (0x0008) MISSED OFFSET
	struct FRigidBodyState                             RBState;                                       // 0x3DA0 (0x0040) [0x0000000000001022] (CPF_Const | CPF_Net | CPF_Native)
	float                                              AngErrorAccumulator;                           // 0x3DE0 (0x0004) [0x0000000000001002] (CPF_Const | CPF_Native)
	class UParticleSystemComponent*                    MissionDirectorParticle;                       // 0x3DE8 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class UChargeDefinition*                           ChargeDef;                                     // 0x3DF0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class TArray<class APawn*>                         PawnsUsingMe;                                  // 0x3DF8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FDamageLocationData                         DamageLocationInfo;                            // 0x3E08 (0x0010) [0x0000000100002020] (CPF_Net | CPF_Transient)
	struct FTimerBehaviorUserState                     BehaviorTimers;                                // 0x3E18 (0x0024) [0x0000000000000000]               
	float                                              ItemTossSpeed;                                 // 0x3E3C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<class AActor*>                        ItemTossTargetActors;                          // 0x3E40 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UInteractionIconDefinition*                  InteractionIconOverride[0x2];                  // 0x3E50 (0x0010) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CostsToUseAmount[0x2];                         // 0x3E60 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FSplineAnimPathData                         SAP_Data;                                      // 0x3E68 (0x0018) [0x0000000100000020] (CPF_Net)     
	class UAnimNodeSequence*                           SAP_AnimSeq;                                   // 0x3E80 (0x0008) [0x0000000000000000]               
	float                                              SAP_TotalAnimDistance;                         // 0x3E88 (0x0004) [0x0000000000000000]               
	float                                              SAP_TotalSplineDistance;                       // 0x3E8C (0x0004) [0x0000000000000000]               
	float                                              SAP_CurrentSplineDistance;                     // 0x3E90 (0x0004) [0x0000000000000000]               
	float                                              SAP_LastAnimTime;                              // 0x3E94 (0x0004) [0x0000000000000000]               
	struct FRotator                                    SAP_TotalRotationOffset;                       // 0x3E98 (0x000C) [0x0000000000000000]               
	struct FVector                                     CachedCrawlerFloorAdjust;                      // 0x3EA4 (0x000C) [0x0000000000002000] (CPF_Transient)
	float                                              LastCrawlerFloorAdjustTime;                    // 0x3EB0 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CachedCrawlerFloorAdjustHeight;                // 0x3EB4 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UParticleSystemComponent*                    TargetingLaserComponent;                       // 0x3EB8 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	struct FRotator                                    ServerRotation;                                // 0x3EC0 (0x000C) [0x0000000000000020] (CPF_Net)     
	class UWillowClientNavigationHandle*               ClientNavigationHandle;                        // 0x3ED0 (0x0008) [0x0000000000000000]               
	uint8_t                                           UnknownData01[0x8];                            // 0x3ED8 (0x0008) MISSED OFFSET

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.WillowAIPawnOld");
		}

		return uClassPointer;
	};

	bool GetDebugUsingAIInspector();
	void SetIsCharging(bool In);
	bool GetIsCharging();
	void SetWillowMind(class AWillowMind* In);
	class AWillowMind* GetWillowMind();
	void SetTransformType(EAITransformed InTT);
	EAITransformed GetTransformType();
	void SetClanDefinition(class UWillowClanDefinition* InClanDef);
	class UAIClassDefinition* GetAIClass();
	void SetUsableSimple(int32_t Index, uint8_t Value);
	class UMaterialInstance* GetDebugPawnMarkerInst();
	void SetDebugUsingAIInspector(bool In);
	bool GetAwardedExperienceForKill();
	void SetAwardedExperienceForKill(bool In);
	void SetMySpawnPoint(class ASpawnPoint* In);
	void SetMountedInstanceDataName(const struct FName& InName);
	void AddTossTargetActor(class AActor* InTargetActor);
	bool IsAIPawnClass();
	void OnPlayerClosedMissionUI(class AWillowPlayerController* ThePlayer);
	void OnPlayerOpenedMissionUI(class AWillowPlayerController* ThePlayer);
	void SetSplineAnimPath(class ASplineActor* StartSpline, const struct FName& AnimSeqName, bool bReversePath);
	void UpdateClientFloorValue();
	class UGearboxNavigationHandle* GetNavigationHandle();
	void ResetDefaultRotationRate();
	void PlayFootStepSound(int32_t FootDown, bool bFirstPerson);
	void ConditionalCreateDebugPawnMarkerInst(class UMaterial* ParentMaterial);
	void ClearPlayerInjuredState();
	struct FVector GetItemTossVelocity(bool optionalBWeapon);
	class AActor* GetClosestTossTarget();
	void eventOnTimerEvent(EBehaviorTimerEvent EventType, const struct FBehaviorParameters& optionalEventData);
	bool SetTimerState(EBehaviorTimerID TimerId, const struct FBehaviorTimerState& TimerState);
	bool GetTimerState(EBehaviorTimerID TimerId, struct FBehaviorTimerState& TimerState);
	float GetTimeSeconds();
	void GetMeleeTraceSourceLocationAndRotation(struct FVector& OutTraceStart, struct FRotator& OutTraceStartRotation);
	void RemoveDenStat(EDenStat StatType);
	void AddDenStat(EDenStat StatType);
	class UBodyClassDefinition* GetHitLocationBody();
	void AddHitLocation(const struct FVector& NewHitLoc);
	void Behavior_ChangeUsabilityCost(EChangeStatus ChangeType, ECurrencyType CostType, int32_t CostAmount, EUsabilityType UsedType);
	void SetUsable(bool bNewUsable, class UActorComponent* UsedComponent, EUsabilityType UsedType);
	void Behavior_ChangeUsability(EChangeStatus ChangeType, class UPrimitiveComponent* UsedComponent, EUsabilityType UsedType);
	bool IsNeutral(class UObject* anObject);
	bool IsEnemy(class UObject* anObject);
	void PlayUnprovokedAnim();
	void PlayProvokedAnim(class AActor* Provoker);
	bool HasAnyMissionsForPlayer();
	struct FVector GetMissionDirectorLocation();
	int32_t GetAllDirectorData();
	void ReleaseAIFromMatinee();
	void HoldAIForMatinee(bool bDemiGod);
	void LastMatineeAnimFinished();
	void eventMAT_FinishAIGroup();
	void eventMAT_BeginAIGroup(const struct FVector& StartLoc, const struct FRotator& StartRot, EInterpGroupAlignmentTypes AlignmentType, float LerpTime, bool bDemiGod);
	void Dismount();
	class AWillowPawn* GetMount();
	bool IsMounted();
	void MatchTransform(const struct FVector& StartLoc, const struct FRotator& StartRot);
	bool CanBeBaseForPawn(class APawn* aPawn);
	void DoKismetAttachment(class AActor* Attachment, class USeqAct_AttachToActor* Action);
	class UPathingObstacleInfo* GetObstacleInfo(bool optionalBFillInfo);
	class APawn* GetParent();
	EMoveStyle GetMoveStyle();
	bool CanUseAimOffsets();
	struct FVector GetFocusScreenOffset();
	float GetFocusRadius();
	struct FVector GetFocusLocation();
	void EndFocus(class APawn* User);
	void BeginFocus(class APawn* User);
	void OnUsersAreLingering();
	void StartLingerTimer();
	void ClearMissionsAcceptedByPrimaryUser();
	void eventOnNewPrimaryUser();
	class APawn* GetPrimaryUser();
	void EndUse(class APawn* User);
	void BeginUse(class APawn* User);
	void FireOnUnableToAffordBehaviors(ENPCOnUsedOutputs OnUsedOutput, class APawn* User, class UActorComponent* UsedComponent, EUsabilityType UsedType);
	void FireOnUsedBehaviors(ENPCOnUsedOutputs OnUsedOutput, class APawn* User, class UActorComponent* UsedComponent, EUsabilityType UsedType);
	bool IsComponentUsable(class UActorComponent* UsableComponent, EUsabilityType UsedType);
	void CountMyMissionsByState(class AWillowPlayerController* WPC, int32_t& NumEligibleMissions, int32_t& NumInProgressMissions, int32_t& NumRedeemableMissions);
	void HandleMomentum(const struct FVector& Momentum, const struct FVector& HitLocation, class UClass* DamageType, const struct FTraceHitInfo& optionalHitInfo);
	void CheckCharging(class AActor* ChargeActor);
	void eventHitWall(const struct FVector& HitNormal, class AActor* Wall, class UPrimitiveComponent* WallComp);
	void eventTouch(class AActor* Other, class UPrimitiveComponent* OtherComp, const struct FVector& HitLocation, const struct FVector& HitNormal);
	void eventUnTouch(class AActor* Other);
	void OnShieldDepleted(class AController* DamageInstigator, EDamageType DamageType);
	void SetInjuredDialogLoop();
	void CheckInjured(const struct FVector& HitLocation, class UBodyHitRegionDefinition* HitRegion, bool bDot, class AController* InstigatedBy);
	float StartLeapAtActor(class AActor* Target, const struct FTrajectoryData& Options);
	void PlacePhysicsBody();
	void SetupRagdollPhysics();
	class UStaggerDefinition* GetStaggerSettings();
	void eventPlayStagger();
	void UnStagger();
	void eventStagger(class APawn* optionalStaggerInstigator);
	bool CanBeStaggered();
	bool GetInstanceData(const struct FName& DataName, class TArray<struct FInstanceDataItem2>& InstanceData);
	void SetInfoBarVisibility(bool bVisible);
	bool HideTargetInfoOnHud(class APawn* optionalHUDOwner);
	bool IsChampion();
	bool IsBoss();
	struct FName GetTransformedKillStat();
	class FString GetTransformedName();
	bool SuggestLeapVelocity(class AActor* Target, float flLeapSpeed, struct FVector& vecLeapVelocity);
	void PlayDying(class UClass* DamageType, class UDamageTypeDefinition* DamageTypeDefinition, class UImpactDefinition* ImpactDefinition, const struct FVector& HitLoc);
	bool Died(class AController* Killer, class UClass* DamageType, const struct FVector& HitLocation, class UDamagePipeline* optionalPipeline);
	bool CanPlayDeathAnim();
	void eventTraceTouch(class AActor* Other, class UComponent* ComponentHit, const struct FVector& TouchLocation, const struct FVector& TouchNormal, const struct FVector& End, const struct FVector& Start, const struct FVector& Extent, const struct FQWord& TraceFlags, float TouchTime);
	void TookDamageFromFriendly(float Damage, class AController* InstigatedBy, const struct FVector& HitLocation, const struct FVector& Momentum, class UClass* DamageType, const struct FTraceHitInfo& optionalHitInfo, class UIDamageCauser* optionalDamageCauser, class UDamagePipeline* optionalPipeline);
	void eventTakeDamage(float Damage, class AController* InstigatedBy, const struct FVector& HitLocation, const struct FVector& Momentum, class UClass* DamageType, const struct FTraceHitInfo& optionalHitInfo, class UIDamageCauser* optionalDamageCauser, class UDamagePipeline* optionalPipeline);
	void CrushedByActor(class AActor* Other);
	void AILevelUp();
	int32_t GetNumLevelUps();
	EPhysics GetDefaultPhysics();
	void eventLanded(const struct FVector& HitNormal, class AActor* FloorActor);
	void eventPostRenderForAlways(class APlayerController* PC, class UCanvas* Canvas, class AWillowHUD* WHUD);
	class UProjectileDefinition* GetCurrentProjectile();
	void AddDefaultWeapon();
	void DiscardInventory(bool optionalBDestroyContents);
	bool OverrideDestroyInventoryContents(bool bDestroyContents);
	void PostStartingInventoryAdded();
	void SavedInventoryAddedFromSpawnSystem();
	void AddDefaultInventory();
	void InitializeBehaviorProviders();
	void eventDestroyed();
	void BodyClassChanged();
	void ApplyBalanceDefinitionCustomizations();
	void UpdatePlayThroughMaterial();
	void UpdateClan();
	void PostSpawn();
	void UpdatePlayerMaster();
	void PostBeginPlay();
	void PreBeginPlay();
	void SetSecondaryCollisionEnabled(bool bEnabled);
	void eventReplicatedEvent(const struct FName& VarName);
	bool IsInjured();
	bool IsTargetable(int32_t optionalTargetFlags);
	bool IsStaggered();
	void FullyReplenishShields();
	void FullyReplenishLife();
	struct FVector GetMagnetismOrigin();
	float GetMagnetismRange();
	bool IsAutoAimTarget();
	void SetExpLevel(int32_t NewExpLevel);
	void SetAwesomeLevel(int32_t NewAwesomeLevel);
	void SetGameStageForSpawnedInventory(int32_t NewInventoryGameStage);
	int32_t GetExpLevel();
	int32_t GetAwesomeLevel();
	int32_t GetGameStageForSpawnedInventory();
};

// Class PoplarGame.PoplarAIPawn
// 0x00F0 (0x3EE0 - 0x3FD0)
class APoplarAIPawn : public AWillowAIPawnOld
{
public:
	struct FPointer                                    VfTable_IIExperienceProvider;                  // 0x3EE0 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IICreditsProvider;                     // 0x3EE8 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIPoplarMeleeAttacker;                 // 0x3EF0 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIAugmentable;                         // 0x3EF8 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIReapBehavior;                        // 0x3F00 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIGBXTargetSearch;                     // 0x3F08 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIScoreBehavior;                       // 0x3F10 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UPoplarUnitTypeDefinition*                   UnitTypeDefinition;                            // 0x3F18 (0x0008) [0x0000000100002020] (CPF_Net | CPF_Transient)
	class UIPoplarSpawner*                             MySpawner_Object;                              // 0x3F20 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UIPoplarSpawner*                             MySpawner_Interface;                           // 0x3F28 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            PlayerSpawnerIndex;                            // 0x3F30 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UPoplarAIEventProviderDefinition*            PoplarAIEventProvider;                         // 0x3F38 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarMinimapIconDefinition*                SpecialIconDefinition;                         // 0x3F40 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	int32_t                                            MinionWaveSize;                                // 0x3F48 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            MinionWaveIndex;                               // 0x3F4C (0x0004) [0x0000000000002000] (CPF_Transient)
	class APoplarMinionSpawner*                        MinionSpawner;                                 // 0x3F50 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarPlayerClassDefinition*                PoplarBotPlayerClassDef;                       // 0x3F58 (0x0008) [0x0000000100002020] (CPF_Net | CPF_Transient)
	uint32_t                                           DeathNotificationsSent : 1;                    // 0x3F60 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bBot : 1;                                      // 0x3F60 (0x0004) [0x0000000000000000] [0x00000002] 
	uint8_t                                            MeleeHitCounter;                               // 0x3F64 (0x0001) [0x0000000100002020] (CPF_Net | CPF_Transient)
	int32_t                                            BaseScore;                                     // 0x3F68 (0x0004) [0x8000000000002000] (CPF_Transient)
	int32_t                                            BaseScoreBaseValue;                            // 0x3F6C (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            BaseScoreModifierStack;                        // 0x3F70 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            QuickKillScore;                                // 0x3F80 (0x0004) [0x8000000000002000] (CPF_Transient)
	int32_t                                            QuickKillScoreBaseValue;                       // 0x3F84 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            QuickKillScoreModifierStack;                   // 0x3F88 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            QuickKillTimeLimit;                            // 0x3F98 (0x0004) [0x8000000000002000] (CPF_Transient)
	int32_t                                            QuickKillTimeLimitBaseValue;                   // 0x3F9C (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            QuickKillTimeLimitModifierStack;               // 0x3FA0 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	class TArray<struct FBotActionSkillData>           ActionSkillData;                               // 0x3FB0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class USkeletalMeshComponent*                      BotArms;                                       // 0x3FC0 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	uint8_t                                           UnknownData00[0x8];                            // 0x3FC8 (0x0008) MISSED OFFSET

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarAIPawn");
		}

		return uClassPointer;
	};

	void eventPostSharedEventMessage(EPoplarSharedEventMessage PSEM, bool optionalBClientAndServerEvent, struct FSharedEventMessageData& MsgData);
	void PostSpawn();
	void eventHitWall(const struct FVector& HitNormal, class AActor* Wall, class UPrimitiveComponent* WallComp);
	void eventTouch(class AActor* Other, class UPrimitiveComponent* OtherComp, const struct FVector& HitLocation, const struct FVector& HitNormal);
	class AActor* GetTargetSearchDefaultTarget();
	void GetTargetSearchSourceLocationAndRotation(struct FVector& OutLocation, struct FRotator& OutRotation);
	class AActor* GetTargetSearchSourceActor();
	int32_t GetSkillGrade(class USkillDefinition* Skill);
	void BotActionSkillEnded(class UPoplarSkillDefinition* SkillDef);
	void BotActionSkillStarted(class UPoplarSkillDefinition* SkillDef);
	bool BotCanRunActionSkill(class UPoplarSkillDefinition* SkillDef);
	bool eventHandleHealthDepleted(class AController* InstigatedBy, class UClass* DamageType, const struct FVector& HitLocation, class UIDamageCauser* DamageCauser, const struct FTraceHitInfo& optionalHitInfo, class UDamagePipeline* optionalPipeline);
	void SpawnDefaultController();
	void TrackDamage(float Damage, class AController* InstigatedBy);
	void eventTakeDamage(float Damage, class AController* InstigatedBy, const struct FVector& HitLocation, const struct FVector& Momentum, class UClass* DamageType, const struct FTraceHitInfo& optionalHitInfo, class UIDamageCauser* optionalDamageCauser, class UDamagePipeline* optionalPipeline);
	void TookDamageFromEnemy(class AController* InstigatedBy, class UCharacterClassDefinition* MyCharacterClass, const struct FVector& HitLocation, const struct FVector& Momentum, class UClass* DamageType, const struct FTraceHitInfo& optionalHitInfo, class UIDamageCauser* optionalDamageCauser, class UDamagePipeline* optionalPipeline);
	void TryMeleeHitSlowdown();
	void OnOutgoingMeleeAttackHit(class AActor* HitActor, const struct FVector& HitLocation);
	void DestroyEnergyPool();
	void eventDestroyed();
	void PlayDying(class UClass* DamageType, class UDamageTypeDefinition* DamageTypeDefinition, class UImpactDefinition* ImpactDefinition, const struct FVector& HitLoc);
	bool Died(class AController* Killer, class UClass* DamageType, const struct FVector& HitLocation, class UDamagePipeline* optionalPipeline);
	void HandleDeathCleanUp(class AController* Killer);
	void ApplyAttributeStartingValues();
	void ApplyBodyClassStartingValues();
	void BodyClassChanged();
	void eventReplicatedEvent(const struct FName& VarName);
	void SetAllegiance(class UPawnAllegiance* NewAllegiance);
	void SetWaveInfo(int32_t NewWaveSize, int32_t NewWaveIndex, class APoplarMinionSpawner* NewMinionSpawner);
	bool MatchesWaveInfo(class APoplarAIPawn* Other);
	void NotifyLaneEvent(const struct FName& EventName, class AController* EventInstigator, class UPoplarTeamDefinition* InstigatorTeam);
	EShopAugmentationType GetShopType();
	int32_t TryBuyNextTierForAugmentation(class UPoplarAugDefinition* AugDef);
	void OnShieldDepleted(class AController* DamageInstigator, EDamageType DamageType);
	int32_t GetQuickKillTimeLimit();
	int32_t GetQuickKillScore();
	int32_t GetBaseScore();
	void Behavior_AwardTeamBonusScore(int32_t Amount);
	void Behavior_AwardScore(int32_t Amount);
	void OnStunEnded();
	void OnStunned();
	bool IsVisibleToTeam(class APoplarTeamInfo* OneTeamInfo);
	void SetFocusState(bool bEnabled);
	bool GetFocusState();
	class UPoplarActionDefinition* GetDefaultDamagingActionDefinition();
	void GetDamagedStatArray(class TArray<class UStatDefinition*>& DamagedStats);
	void GetKilledStatArray(class TArray<class UStatDefinition*>& KilledStats);
	bool IsTaggedBy(class UPoplarUnitTypeTag* UnitTag);
	bool IsHuman();
	void SetInTeamBase(bool bInBase);
	void SetUnitExpLevel(int32_t NewLevel, bool optionalBAwardSkillPoints, bool optionalBShowHUDFanfare);
	int32_t GetSpawnerIndex();
	class UIPoplarSpawner* GetSpawner();
	void SetSpawner(class UIPoplarSpawner* InSpawner);
	bool SetUnitTypeDefinition(class UPoplarUnitTypeDefinition* NewUnitTypeDefinition, bool optionalSkipGameInfoRegistration);
	class UPoplarNameplateTypeDefinition* GetNameplateTypeDefinition();
	class UPoplarUnitTypeDefinition* GetUnitTypeDefinition();
	void SetPoplarTeamInfo(class APoplarTeamInfo* InTeamInfo);
	void ForceColorRefresh();
	void GetCreditsProviderData(struct FCreditsProviderData& Data);
	void GetExperienceProviderData(struct FExperienceProviderData& Data);
	class ATeamInfo* GetTeam();
};

// Class PoplarGame.WillowPlayerPawnOld
// 0x0188 (0x3C58 - 0x3DE0)
class AWillowPlayerPawnOld : public APoplarPawn
{
public:
	struct FPointer                                    VfTable_IIWeatherBehavior;                     // 0x3C58 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIGFxActorMovie;                       // 0x3C60 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	float                                              LastCombatActionTime;                          // 0x3C68 (0x0004) [0x0000000000000020] (CPF_Net)     
	class USkeletalMeshComponent*                      Arms;                                          // 0x3C70 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class UMaterialInstance*                           ArmsMaterialInstance;                          // 0x3C78 (0x0008) [0x0000000000002000] (CPF_Transient)
	class TArray<class UMaterialInstance*>             TeamColorForMeshMaterialInstances;             // 0x3C80 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	uint32_t                                           bFirstPersonVisibilityLocked : 1;              // 0x3C90 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bLowHealth : 1;                                // 0x3C90 (0x0004) [0x0000000000000000] [0x00000002] 
	uint32_t                                           bUpdateAfterMapCommit : 1;                     // 0x3C90 (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	uint32_t                                           bActionSkillWasRunning : 1;                    // 0x3C90 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	uint32_t                                           bGrabWeaponPickup : 1;                         // 0x3C90 (0x0004) [0x0000000000000020] [0x00000010] (CPF_Net)
	uint32_t                                           bWasFalling : 1;                               // 0x3C90 (0x0004) [0x0000000000000000] [0x00000020] 
	uint32_t                                           bBoundaryWarningOn : 1;                        // 0x3C90 (0x0004) [0x0000000000000000] [0x00000040] 
	uint32_t                                           bLastMenuMeshHidden : 1;                       // 0x3C90 (0x0004) [0x0000000000002000] [0x00000080] (CPF_Transient)
	uint32_t                                           bViewingThirdPersonMenu : 1;                   // 0x3C90 (0x0004) [0x0000000000002020] [0x00000100] (CPF_Net | CPF_Transient)
	uint32_t                                           bViewingStatusMenu : 1;                        // 0x3C90 (0x0004) [0x0000000100002020] [0x00000200] (CPF_Net | CPF_Transient)
	uint32_t                                           bValidControllerAndPRI : 1;                    // 0x3C90 (0x0004) [0x0000000000002000] [0x00000400] (CPF_Transient)
	uint32_t                                           bCreatingMenuMesh : 1;                         // 0x3C90 (0x0004) [0x0000000000002000] [0x00000800] (CPF_Transient)
	int32_t                                            LastAnimSetsArmsCount;                         // 0x3C94 (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<class UAnimSet*>                      WeaponArmsAnimSets;                            // 0x3C98 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UMaterialInstance*                           CustomizationHeadMaterialInstance;             // 0x3CA8 (0x0008) [0x0000000000000000]               
	class UMaterialInstance*                           CustomizationBodyMaterialInstance;             // 0x3CB0 (0x0008) [0x0000000000000000]               
	class UMaterialInstance*                           CustomizationArmsMaterialInstance;             // 0x3CB8 (0x0008) [0x0000000000000000]               
	float                                              HitByVehicleTime;                              // 0x3CC0 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     TransitionLandmarkOffset;                      // 0x3CC4 (0x000C) [0x0000000000000000]               
	class UDynamicLightEnvironmentComponent*           ArmsDynamicLightEnvironment;                   // 0x3CD0 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	float                                              LastKillTime;                                  // 0x3CD8 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              KillStreakScore;                               // 0x3CDC (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FExtraMuzzleEffect                          ExtraMuzzleEffect_LastShot;                    // 0x3CE0 (0x0010) [0x0000000000002020] (CPF_Net | CPF_Transient)
	float                                              ShouldGetResurrected;                          // 0x3CF0 (0x0004) [0x8000000000002001] (CPF_Edit | CPF_Transient)
	float                                              ShouldGetResurrectedBaseValue;                 // 0x3CF4 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            ShouldGetResurrectedModifierStack;             // 0x3CF8 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              PlayerFallDuration;                            // 0x3D08 (0x0004) [0x4000000000000000]               
	class UStaticMeshComponent*                        AttachedMeleeWeaponMesh;                       // 0x3D10 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	struct FVector                                     LocationFellFrom;                              // 0x3D18 (0x000C) [0x0000000000002000] (CPF_Transient)
	float                                              SprintExhaustion;                              // 0x3D24 (0x0004) [0x4000000000002000] (CPF_Transient)
	class TArray<struct FSpeedTravelData>              SpeedTravelInfo;                               // 0x3D28 (0x0010) [0x0000000000402001] (CPF_Edit | CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            NumWarningZones;                               // 0x3D38 (0x0004) [0x0000000000000000]               
	EResurrectReason                                   LastResurrectReason;                           // 0x3D3C (0x0001) [0x0000000000002000] (CPF_Transient)
	class APlayerReplicationInfo*                      LastPlayerDiedPRI;                             // 0x3D40 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              ZoomTimeModifier;                              // 0x3D48 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              ZoomTimeModifierBaseValue;                     // 0x3D4C (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            ZoomTimeModifierModifierStack;                 // 0x3D50 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	struct FInstanceData2                              MenuInstanceDataState;                         // 0x3D60 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FWeatherSystemEffects                       WeatherSystem;                                 // 0x3D70 (0x0010) [0x0000000100002020] (CPF_Net | CPF_Transient)
	class APawnInteractionProxy*                       TradeInteractionProxy;                         // 0x3D80 (0x0008) [0x0000000000000000]               
	class AStationTeleporterDestination*               ResurrectStation;                              // 0x3D88 (0x0008) [0x0000000000000000]               
	class AActor*                                      ResurrectLocationActor;                        // 0x3D90 (0x0008) [0x0000000000000000]               
	class UWillowOnDemandPackageMarker*                LinkedOnDemandPackage;                         // 0x3D98 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AActor*                                      TemporaryNonBlockedBy;                         // 0x3DA0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FAttachmentData                             AttachedToData;                                // 0x3DA8 (0x0030) [0x0000000100000020] (CPF_Net)     
	float                                              FriendlyFireDamageAccepted;                    // 0x3DD8 (0x0004) [0x4000000000000000]               
	float                                              FriendlyFireDamageMultiplier;                  // 0x3DDC (0x0004) [0x4000000000000000]               

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.WillowPlayerPawnOld");
		}

		return uClassPointer;
	};

	float GetLastCombatActionTime();
	void SetLastCombatActionTime(float In);
	bool IsPlayerPawnClass();
	void eventOnAttachPlayerPawnToBase(class USeqAct_AttachPlayerPawnToBase* Action);
	void DoAttachPlayerToBase(class AActor* ActorToAttachTo, const struct FVector& optionalAttachRelativeOffset, const struct FRotator& optionalAttachRelativeRotation, const struct FName& optionalNewBaseBoneName, EPhysics optionalNewPhysicsMode);
	void SetExtraMuzzleEffect(EBulletFromClip BulletFromClip, const struct FExtraMuzzleEffect& NewEffect);
	void eventUnTouch(class AActor* Other);
	struct FVector GetAimDirection();
	void DisplayDebug(class AHUD* HUD, float& out_YL, float& out_YPos);
	void Behavior_Destroy();
	void eventStartCrouch(float HeightAdjust);
	void Behavior_Killed(class AActor* Killer, class UDamageTypeDefinition* optionalTechFilter, EScriptedKillType optionalDeathType);
	void SetUpTradeInteraction();
	void DestroyTradeInteraction();
	void ServerSetViewingThirdPersonMenu(bool bNewViewingThirdPersonMenu, bool bIsStatusMenu);
	void OnSetViewingStatusMenu();
	void ChangeInstanceDataSwitch(const struct FName& Switch, int32_t Value, class AActor* Self);
	void SetViewingThirdPersonMenu(bool bNewViewingThirdPersonMenu, bool bIsStatusMenu);
	bool eventGetUniqueInstanceData(const struct FName& DataName, class TArray<struct FInstanceDataItem2>& InstanceData);
	void DestroyWeatherSystem();
	void CreateWeatherSystem(class UParticleSystem* NewWeatherSystemTemplate, class UParticleSystem* NewScreenEffectsTemplate);
	void GFx_NotifyMovieDestroy(class UGearboxGFxMovie* Movie);
	void GFx_NotifyMovieCreate(class UGearboxGFxMovie* Movie);
	class AActor* GFx_GetMovieActor();
	void eventPostInitAnimTree(class USkeletalMeshComponent* SkelComp);
	void ClimbLadder(class ALadderVolume* L);
	void EndClimbLadder(class ALadderVolume* OldLadder);
	bool CanGrabLadder();
	class UWillowGFxThirdPersonMovie* GetThirdPersonMovie();
	void SetMenuMeshVisibility(bool bVisible, bool optionalBInspecting);
	void SetInstanceDataMenuState(bool bVisible, bool bInspecting);
	void InitializePawnMeshes();
	void GetPetActors(class TArray<class AActor*>& out_PetActorList);
	void PlayUIAkEvent(class UAkEvent* Event);
	void SetAllegiance(class UPawnAllegiance* NewAllegiance);
	bool Died(class AController* Killer, class UClass* DamageType, const struct FVector& HitLocation, class UDamagePipeline* optionalPipeline);
	void FaceRotation(const struct FRotator& NewRotation, float DeltaTime);
	void NativeFaceRotation(const struct FRotator& NewRotation, float DeltaTime);
	void CheckPhaseWalkExit();
	class AWillowPlayerController* GetPlayerController();
	void DumpAnimSets(const class FString& optionalEventStr);
	void PlayLanded(float ImpactVel, class AActor* optionalFloorActor);
	void OnPlayArmAnimation(class UWillowSeqAct_PlayArmAnimation* inAction);
	void StopWeaponRecoilAnim(bool bStopPrimaryHand, bool bStopOffHand);
	void WeaponChanged(class AWeapon* TheWeapon, bool optionalBOffHandWeapon);
	void UpdateAnimSets();
	bool eventRestoreAnimSetsToDefault();
	void OnMarkExitedRegion(class UWillowSeqAct_MarkExitedRegion* inAction);
	void OnMarkEnteredRegion(class UWillowSeqAct_MarkEnteredRegion* inAction);
	void ProcessFallDistance(const struct FVector& FallDistance);
	void eventFalling();
	void eventLanded(const struct FVector& HitNormal, class AActor* FloorActor);
	bool DoJump(bool bUpdating);
	bool CanJump();
	bool IsOnGroundOrShortFall();
	bool CanStuckJump();
	bool HideTargetInfoOnHud(class APawn* optionalHUDOwner);
	bool GetTargetableIsHidden();
	void DetachMeleeWeaponMesh(bool bApplyToThirdPerson, bool bApplyToFirstPerson);
	void AttachMeleeWeaponMesh(bool bApplyToThirdPerson, bool bApplyToFirstPerson);
	void SetWeaponSnagFailsafeTimer(float Value);
	void OnWeaponSnag();
	void ReceiveLocalizedMessage(class UClass* Message, int32_t optionalSwitch, class APlayerReplicationInfo* optionalRelatedPRI, class APlayerReplicationInfo* optionalRelatedPRI01, class UObject* optionalOptionalObject);
	struct FLinearColor GetLinearColor(const struct FColor& C);
	void SetTeamColorForMesh(class USkeletalMeshComponent* TheMesh, const struct FLinearColor& PrimaryColor, const struct FLinearColor& SecondaryColor, const struct FLinearColor& TertiaryColor);
	void SetTeamColor(const struct FLinearColor& PrimaryColor, const struct FLinearColor& SecondaryColor, const struct FLinearColor& TertiaryColor);
	void eventCheckLowHealthState();
	void eventShowAndUnlockFirstPerson();
	void eventHideAndLockFirstPerson();
	void eventRaiseFirstPersonHands();
	void eventLowerFirstPersonHands();
	void ToggleFirstPersonWeaponVisibility();
	void SetFirstPersonVisibility(bool bVisible);
	void SetOwnerVisibility(bool bVisible);
	void OnNativeApplyBodyClassStartingValuesHook();
	void ApplyBodyClassStartingValues();
	void PlayDamageCameraShake(int32_t Damage, const struct FVector& HitDir);
	void DeRezzedGearFinished();
	void DeRezGear();
	void RezGear();
	void SetShadowCasting(bool Value);
	void ServerNotifyIWentDown();
	void AddKillStreakScore();
	void KilledEnemy(class AWillowPawn* aTargetPawn);
	static void SpawnTeleportEffect(const struct FVector& TeleportEffectLocation, const struct FRotator& TeleportEffectRotation, bool bReplicated);
	void SpawnTeleportEffectAtCurrentLocation();
	void NotifyTeleported();
	void MarkClientDLEsForUpdate();
	void MarkDLEsForUpdate();
	void ResurrectAtLocation(class AActor* TeleportLoc, EResurrectReason ResurrectReason, class APlayerReplicationInfo* optionalDeadPlayerPRI);
	void HitByVehicle(class AVehicle* Collider);
	bool eventOutsideWorldBounds();
	void eventFellOutOfWorld(class UClass* dmgType);
	void PlacePlayerInLevel(bool optionalBSkipHoldingCell);
	void ResurrectPlayer(EResurrectReason optionalResurrectReason, bool optionalBSkipHoldingCell, class APlayerReplicationInfo* optionalDeadPlayerPRI);
	class AActor* GetBestPlayerStartPoint();
	class ATeleporterDestination* GetBestPlayerPlacementPoint(bool optionalBLevelTravel);
	void CrushedByActor(class AActor* Other);
	void CrushedBy(class APawn* OtherPawn);
	bool eventHandleHealthDepleted(class AController* InstigatedBy, class UClass* DamageType, const struct FVector& HitLocation, class UIDamageCauser* DamageCauser, const struct FTraceHitInfo& optionalHitInfo, class UDamagePipeline* optionalPipeline);
	void ProcessDamageTakenSkillEvents(class UDamagePipeline* Pipeline, class AController* InstigatedBy, class UClass* DamageType);
	void ProcessDamageDealtSkillEvents(class UDamagePipeline* Pipeline, class AActor* Victim, class UClass* DamageType);
	void AdjustDamage(class AController* InstigatedBy, const struct FVector& HitLocation, class UClass* DamageType, class UIDamageCauser* optionalDamageCauser, class UDamagePipeline* optionalPipeline, float& InDamage, float& DamageSeverityPercent, struct FVector& Momentum, struct FTraceHitInfo& HitInfo);
	void eventTakeDamage(float Damage, class AController* InstigatedBy, const struct FVector& HitLocation, const struct FVector& Momentum, class UClass* DamageType, const struct FTraceHitInfo& optionalHitInfo, class UIDamageCauser* optionalDamageCauser, class UDamagePipeline* optionalPipeline);
	void eventReplicatedEvent(const struct FName& VarName);
	int32_t GetNextExpLevelPoints();
	bool IsVulnerableToFriendlyFire();
	void SetExpLevel(int32_t NewExpLevel);
	void SetAwesomeLevel(int32_t NewAwesomeLevel);
	int32_t GetExpLevel();
	int32_t GetAwesomeLevel();
};

// Class PoplarGame.PoplarPlayerPawn
// 0x0118 (0x3DE0 - 0x3EF8)
class APoplarPlayerPawn : public AWillowPlayerPawnOld
{
public:
	struct FPointer                                    VfTable_IIExperienceProvider;                  // 0x3DE0 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IICreditsProvider;                     // 0x3DE8 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIPoplarMeleeAttacker;                 // 0x3DF0 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIGBXTargetSearch;                     // 0x3DF8 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIAugmentable;                         // 0x3E00 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class TArray<class UPrimitiveComponent*>           FirstPersonBodyChildComponents;                // 0x3E08 (0x0010) [0x0000000004482008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_NeedCtorLink | CPF_EditInline)
	class APoplarPlayerController*                     MyPoplarPlayerController;                      // 0x3E18 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              MinPctStaminaToStartSprinting;                 // 0x3E20 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              StaminaCostToJump;                             // 0x3E24 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              StaminaCostToJumpBaseValue;                    // 0x3E28 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            StaminaCostToJumpModifierStack;                // 0x3E30 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	uint32_t                                           bFocusing : 1;                                 // 0x3E40 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bJumpRecoveryAttributesApplied : 1;            // 0x3E40 (0x0004) [0x0000000000002002] [0x00000002] (CPF_Const | CPF_Transient)
	uint32_t                                           bAverageReplicatedControllerRotationComputed : 1;// 0x3E40 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           bIsBeingSpectatedInFirstPerson_Client : 1;     // 0x3E40 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	uint32_t                                           bIsBeingSpectatedInFirstPerson_Server : 1;     // 0x3E40 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	uint32_t                                           bNeedsReapplyWearables : 1;                    // 0x3E40 (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	struct FResourcePoolReference                      StaminaPool;                                   // 0x3E48 (0x0018) [0x0000002000000020] (CPF_Net)     
	class TArray<struct FAppliedAttributeEffect>       JumpAttributeModifiers;                        // 0x3E60 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	uint8_t                                            MeleeHitCounter;                               // 0x3E70 (0x0001) [0x0000000100002020] (CPF_Net | CPF_Transient)
	class USkelControlLimb*                            LeftHandIK_FP;                                 // 0x3E78 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            SpawnerIndex;                                  // 0x3E80 (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FAIHoldData>                   MovementHolds;                                 // 0x3E88 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<struct FAIHoldData>                   LookHolds;                                     // 0x3E98 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FVector                                     CachedCameraAnchorLocation;                    // 0x3EA8 (0x000C) [0x0000000000002000] (CPF_Transient)
	int32_t                                            TauntCinematicModeToken;                       // 0x3EB4 (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<class AActor*>                        ActorsToPushAwayFrom;                          // 0x3EB8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            ReplicatedControllerPitchAndYawForSpectators;  // 0x3EC8 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	struct FRotator                                    PastControllerRotations[0x3];                  // 0x3ECC (0x0024) [0x0000000000002000] (CPF_Transient)
	float                                              NextReapplyWearablesTime;                      // 0x3EF0 (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPlayerPawn");
		}

		return uClassPointer;
	};

	void ClientTryReapplyWearables();
	void eventFellOutOfWorld(class UClass* dmgType);
	void HideCastBar(bool bTeleportBar);
	void ShowCastBar(const struct FCastBarData& CastBarInfo);
	void RezGear();
	void DeRezGear();
	void eventServerOnSpeechRecognized(const class FString& Speech);
	void OnSpeechRecognized(const class FString& Speech);
	void StopWeaponRecoilAnim(bool bStopPrimaryHand, bool bStopOffHand);
	void CheckLeftHandIK();
	void ForceEndCrouch();
	void eventEndCrouch(float HeightAdjust);
	void eventStartCrouch(float HeightAdjust);
	void UpdateWeaponsCrouchModifiers();
	void SetFirstPersonVisibility(bool bVisible);
	bool AreFirstPersonWeaponsInForeground();
	void SetAimOffsetProfile(const struct FName& ProfileName);
	void eventPostInitAnimTree(class USkeletalMeshComponent* SkelComp);
	void PostBeginPlay();
	class AActor* GetTargetSearchDefaultTarget();
	void GetTargetSearchSourceLocationAndRotation(struct FVector& OutLocation, struct FRotator& OutRotation);
	class AActor* GetTargetSearchSourceActor();
	void eventPostSharedEventMessage(EPoplarSharedEventMessage PSEM, bool optionalBClientAndServerEvent, struct FSharedEventMessageData& MsgData);
	void TauntInterrupted();
	void TauntFailed();
	void EndTaunt(bool bInterrupted);
	void eventAddEnergyImpulse(float Amount);
	float GetEneryCurrentValue();
	void TookDamageFromFriendly(float Damage, class AController* InstigatedBy, const struct FVector& HitLocation, const struct FVector& Momentum, class UClass* DamageType, const struct FTraceHitInfo& optionalHitInfo, class UIDamageCauser* optionalDamageCauser, class UDamagePipeline* optionalPipeline);
	void TookDamageFromEnemy(class AController* InstigatedBy, class UCharacterClassDefinition* MyCharacterClass, const struct FVector& HitLocation, const struct FVector& Momentum, class UClass* DamageType, const struct FTraceHitInfo& optionalHitInfo, class UIDamageCauser* optionalDamageCauser, class UDamagePipeline* optionalPipeline);
	bool CanContinueSprinting();
	bool DoSprint(bool bIsUpdating, bool bFromInput);
	bool CanSprint();
	void eventLanded(const struct FVector& HitNormal, class AActor* FloorActor);
	void eventFalling();
	float GetNormalizedStamina();
	float GetJumpVelocity();
	void RemoveJumpRecoveryAttributeModifiers();
	bool DoJump(bool bUpdating);
	bool CanJump();
	void TryMeleeHitSlowdown();
	void OnOutgoingMeleeAttackHit(class AActor* HitActor, const struct FVector& HitLocation);
	void eventEndViewTarget(class APlayerController* PC);
	void eventBecomeViewTarget(class APlayerController* PC);
	struct FVector GetCameraAnchorLocation();
	struct FVector GetPawnViewLocation();
	void SetUpTradeInteraction();
	void NotifyActionSkillFakePause(bool bPaused);
	void NotifyActionSkillWeaponSwitched(class AWeapon* OldWeapon, class AWeapon* NewWeapon);
	void NotifyActionSkillOfKilledEnemy(class AWillowPawn* aTargetPawn);
	void eventHitWall(const struct FVector& HitNormal, class AActor* Wall, class UPrimitiveComponent* WallComp);
	void eventTouch(class AActor* Other, class UPrimitiveComponent* OtherComp, const struct FVector& HitLocation, const struct FVector& HitNormal);
	bool Died(class AController* Killer, class UClass* DamageType, const struct FVector& HitLocation, class UDamagePipeline* optionalPipeline);
	class AActor* GetBestPlayerStartPoint();
	bool eventHandleHealthDepleted(class AController* InstigatedBy, class UClass* DamageType, const struct FVector& HitLocation, class UIDamageCauser* DamageCauser, const struct FTraceHitInfo& optionalHitInfo, class UDamagePipeline* optionalPipeline);
	bool eventOnHandleHealthDepleted(class AController* InstigatedBy, class UClass* DamageType, const struct FVector& HitLocation, class UIDamageCauser* DamageCauser, const struct FTraceHitInfo& optionalHitInfo, class UDamagePipeline* optionalPipeline);
	void CausePlayerDeath(bool bFellIntoPlayerKillVolume);
	void NotifyDamageTaken(struct FDamageEventSummary& DamageSummary);
	void eventTakeDamage(float Damage, class AController* InstigatedBy, const struct FVector& HitLocation, const struct FVector& Momentum, class UClass* DamageType, const struct FTraceHitInfo& optionalHitInfo, class UIDamageCauser* optionalDamageCauser, class UDamagePipeline* optionalPipeline);
	void ResurrectAtLocation(class AActor* TeleportLoc, EResurrectReason ResurrectReason, class APlayerReplicationInfo* optionalDeadPlayerPRI);
	void ResurrectPlayer(EResurrectReason optionalResurrectReason, bool optionalBSkipHoldingCell, class APlayerReplicationInfo* optionalDeadPlayerPRI);
	bool UpdateViewModelTransform(struct FVector& ViewModelLocation, struct FQuat& ViewModelRotation);
	void UpdateCameraInputs(class UGBXCameraInputs* Inputs);
	void DestroyEnergyPool();
	void eventDestroyed();
	void Suicide();
	void ApplyAttributeStartingValues();
	void ApplyBodyClassStartingValues();
	void OnPossessed();
	void OnUnPossessed();
	void UnPossessed();
	void PossessedBy(class AController* C, bool bVehicleTransition);
	void eventReplicatedEvent(const struct FName& VarName);
	void StartOffHandFire(uint8_t FireModeNum);
	void StartFire(uint8_t FireModeNum);
	EShopAugmentationType GetShopType();
	int32_t TryBuyNextTierForAugmentation(class UPoplarAugDefinition* AugDef);
	class APoplarActionSkill* GetActionSkillForSlot(EActionSkillSlot ActionSkillSlot);
	void NotifyLaneEvent(const struct FName& EventName, class AController* EventInstigator, class UPoplarTeamDefinition* InstigatorTeam);
	bool IsVisibleToTeam(class APoplarTeamInfo* OneTeamInfo);
	void eventServerSetFocusState(bool bEnabled);
	void SetFocusState(bool bEnabled);
	bool GetFocusState();
	void GetStaminaResourcePoolReference(struct FResourcePoolReference& PoolReference);
	void SetStaminaResourcePoolDefinition(class UIResourcePoolProvider* ResourcePoolProvider, class UResourcePoolDefinition* Definition);
	class UPoplarActionDefinition* GetDefaultDamagingActionDefinition();
	void OnShieldDepleted(class AController* DamageInstigator, EDamageType DamageType);
	void OnForceMoved();
	void OnStunned();
	void OnBlindEnded();
	void OnBlinded();
	bool IsHuman();
	void SetInTeamBase(bool bInBase);
	void SetUnitExpLevel(int32_t NewLevel, bool optionalBAwardSkillPoints, bool optionalBShowHUDFanfare);
	int32_t GetSpawnerIndex();
	class UIPoplarSpawner* GetSpawner();
	void SetSpawner(class UIPoplarSpawner* InSpawner);
	bool SetUnitTypeDefinition(class UPoplarUnitTypeDefinition* NewUnitTypeDefinition, bool optionalSkipGameInfoRegistration);
	void GetCreditsProviderData(struct FCreditsProviderData& Data);
	void GetExperienceProviderData(struct FExperienceProviderData& Data);
};

// Class PoplarGame.PoplarPawnCollisionGridComponent
// 0x0010 (0x00D8 - 0x00E8)
class UPoplarPawnCollisionGridComponent : public UGearboxCollisionGridComponent
{
public:
	float                                              CollisionRadiusAgainstEnemy;                   // 0x00D8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bUseEnemyRadiusForFriendlyPlayerPawns : 1;     // 0x00DC (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	uint32_t                                           bBlockFriendlyPlayerPawns : 1;                 // 0x00DC (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bHasPlayerOwner : 1;                           // 0x00DC (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	class UPoplarTeamDefinition*                       TeamDef;                                       // 0x00E0 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPawnCollisionGridComponent");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarPerkFamilyDefinition
// 0x0068 (0x0058 - 0x00C0)
class UPoplarPerkFamilyDefinition : public UGBXDefinition
{
public:
	class FString                                      ReadableName;                                  // 0x0058 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class USwfMovie*                                   FamilyIcon;                                    // 0x0068 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FPerkFunctionPool                           CommonPool;                                    // 0x0070 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FPerkFunctionPool                           UncommonPool;                                  // 0x0080 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FPerkFunctionPool                           RarePools;                                     // 0x0090 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FPerkFunctionPool                           VeryRarePools;                                 // 0x00A0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FPerkFunctionPool                           LegendaryPools;                                // 0x00B0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPerkFamilyDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarPerkSelectorGFxMovie
// 0x0040 (0x05B0 - 0x05F0)
class UPoplarPerkSelectorGFxMovie : public UWillowGFxMovie3D
{
public:
	class UPoplarPerkSelectorGFxMovieDefinition*       PerkSelectorMovieDef;                          // 0x05B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  RootClip;                                      // 0x05B8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  PerkSelectorClip;                              // 0x05C0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarPlayerController*                     PPCOwner;                                      // 0x05C8 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CurrentSelectedIndex;                          // 0x05D0 (0x0004) [0x0000000000000000]               
	uint32_t                                           bShowDescription : 1;                          // 0x05D4 (0x0004) [0x0000000000000000] [0x00000001] 
	class FString                                      HeaderTitleString;                             // 0x05D8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	uint8_t                                           UnknownData00[0x8];                            // 0x05E8 (0x0008) MISSED OFFSET

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPerkSelectorGFxMovie");
		}

		return uClassPointer;
	};

	void extOnPerkClicked(int32_t ClickedPerkIndex);
	void HandleHintInput(const struct FPlatformUserId& InUserId, const struct FName& HintTag);
	void PopulateHintBar();
	bool HandleInputKey(const struct FPlatformUserId& InUserId, const struct FName& ukey, EInputEvent uevent);
	void eventOnClose();
	bool eventStart(bool optionalBStartPaused);
};

// Class PoplarGame.PoplarPerkSelectorGFxMovieDefinition
// 0x0000 (0x0138 - 0x0138)
class UPoplarPerkSelectorGFxMovieDefinition : public UWillowGFxMovie3DDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPerkSelectorGFxMovieDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarPersistentBeaconManager
// 0x0280 (0x00B0 - 0x0330)
class UPoplarPersistentBeaconManager : public UPersistentBeaconManager
{
public:
	int32_t                                            LobbyBeaconPort;                               // 0x00B0 (0x0004) [0x0000000000004000] (CPF_Config)  
	int32_t                                            TeamBeaconPort;                                // 0x00B4 (0x0004) [0x0000000000004000] (CPF_Config)  
	int32_t                                            GameBeaconPort;                                // 0x00B8 (0x0004) [0x0000000000004000] (CPF_Config)  
	int32_t                                            LobbyBeaconVoicePort;                          // 0x00BC (0x0004) [0x0000000000004000] (CPF_Config)  
	int32_t                                            TeamBeaconVoicePort;                           // 0x00C0 (0x0004) [0x0000000000004000] (CPF_Config)  
	int32_t                                            GameBeaconVoicePort;                           // 0x00C4 (0x0004) [0x0000000000004000] (CPF_Config)  
	int32_t                                            SkillDataRequestTimeoutSeconds;                // 0x00C8 (0x0004) [0x0000000000004000] (CPF_Config)  
	int32_t                                            LobbyBeaconVoicePriority;                      // 0x00CC (0x0004) [0x0000000000000000]               
	int32_t                                            TeamBeaconVoicePriority;                       // 0x00D0 (0x0004) [0x0000000000000000]               
	int32_t                                            GameBeaconVoicePriority;                       // 0x00D4 (0x0004) [0x0000000000000000]               
	struct FSelectedExperienceData                     HostExperienceData;                            // 0x00D8 (0x0108) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class FString                                      FallbackHostExperienceGuid;                    // 0x01E0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            NumTeamPlayersFound;                           // 0x01F0 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FPartyBeaconHostData                        CachedNewTeamHostData;                         // 0x01F8 (0x0018) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FPartyBeaconHostData                        CachedNewGameHostData;                         // 0x0210 (0x0018) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UOnlineGameInterface*                        CachedGameInterface_Object;                    // 0x0228 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UOnlineGameInterface*                        CachedGameInterface_Interface;                 // 0x0230 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarMatchmakingLobbySettings*             LobbySettings;                                 // 0x0238 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarMatchmakingTeamSettings*              TeamSettings;                                  // 0x0240 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarMatchmakingGameSettings*              GameSettings;                                  // 0x0248 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bRejoinSessionDestructionInProgress : 1;       // 0x0250 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bLobbyPartyModified : 1;                       // 0x0250 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bNotifyRematchFailed : 1;                      // 0x0250 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           bNotifyLobbyHostLost : 1;                      // 0x0250 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	uint32_t                                           bClientGameDestroyInProgress : 1;              // 0x0250 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	uint32_t                                           bPendingClientTeamDestroy : 1;                 // 0x0250 (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	uint32_t                                           bSkipClientCancel : 1;                         // 0x0250 (0x0004) [0x0000000000002000] [0x00000040] (CPF_Transient)
	int32_t                                            CachedLobbyReservations;                       // 0x0254 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            LobbyUpdatesInProgress;                        // 0x0258 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            LobbyUpdateMessageId;                          // 0x025C (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            StateUpdateMessageId;                          // 0x0260 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            UpdateInviteFlagsMessageId;                    // 0x0264 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            GameBeaconCleanupMessageId;                    // 0x0268 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            TeamBeaconCleanupMessageId;                    // 0x026C (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FUniqueNetId>                  ConnectedPlayers;                              // 0x0270 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FUniqueNetId>                  SkillDataRequestIds;                           // 0x0280 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnLobbyBeaconDestroyComplete__Delegate;      // 0x0290 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnTeamBeaconDestroyComplete__Delegate;       // 0x02A0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnGameBeaconDestroyComplete__Delegate;       // 0x02B0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnHostBeaconCreationComplete__Delegate;      // 0x02C0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnClientBeaconCreationComplete__Delegate;    // 0x02D0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnDestroyMatchmakingBeaconsComplete__Delegate;// 0x02E0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnDestroyAllBeaconsComplete__Delegate;       // 0x02F0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnRejoinSessionDestroyComplete__Delegate;    // 0x0300 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnSetLobbySessionJoinableComplete__Delegate; // 0x0310 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnRequestSkillDataFromLobbyClientsComplete__Delegate;// 0x0320 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPersistentBeaconManager");
		}

		return uClassPointer;
	};

	void OnHostSkillRatingUpdateRequestReceived(const class FString& SkillVersion);
	void OnSkillDataUpdated(const struct FUniqueNetId& PlayerID, const struct FReservationSkillRating& SkillRating);
	void OnRequestSkillDataFromLobbyClientsComplete();
	void OnReadPlayerEntitlementDataComplete(const struct FPlatformUserId& UserId, int32_t ServiceResult);
	void OnGameBeaconClientRegistrationFailed();
	void OnLobbyBeaconClientRegistrationFailed();
	void OnSetLobbySessionJoinableComplete(EOnlineSubsystemResult Result);
	void OnClientLobbyBeaconClientFailedToEstablishExpectedReservation();
	void OnClientTeamBeaconClientFailedToEstablishExpectedReservation();
	void OnClientBeaconCustomEvent(EPoplarBeaconCustomEvent EventId);
	void OnGameBeaconAllPlayersHaveVoted();
	void OnGameBeaconReceivedVoteOptionResult(const struct FUniqueNetId& VotingPlayerId, int32_t VoteOptionId);
	void OnJoinGameReceived(const class FString& SessionId);
	void OnJoinTeamReceived(const class FString& SessionId);
	void OnClientLobbyHostHostCancelled(EPartyReservationCancellationReason Reason);
	void OnClientTeamHostHostCancelled(EPartyReservationCancellationReason Reason);
	void OnClientCancelled(EPartyReservationCancellationReason Reason);
	void OnRequestReceiveZeppelinTicketFromHost(const class FString& ZeppelinTicket);
	void ClearDelegatesForTravel();
	void OnClientGameBeaconHostIsReady();
	void OnClientTeamBeaconHostIsReady();
	void OnDestroyGameBeaconForGameHostCancelComplete();
	void OnClientGameBeaconHostHasCancelled(EPartyReservationCancellationReason Reason);
	void OnClientGameBeaconExpectedReservationConfirmationComplete(EPartyReservationResult Result);
	void OnCreateClientGameBeaconForNewHostComplete(EOnlineSubsystemResult Result, class UPoplarPartyBeaconClient* NewBeacon);
	void OnClientTeamBeaconRequestConnectToHostBeaconForNewHost(const struct FName& NewBeaconName, struct FPartyBeaconHostData& NewHost);
	void OnCreateClientGameBeaconComplete(EOnlineSubsystemResult Result, class UPoplarPartyBeaconClient* NewBeacon);
	void OnClientTeamBeaconRequestConnectToHostBeacon(const struct FName& NewBeaconName);
	void OnDestroyTeamBeaconForTeamHostCancelComplete();
	void OnClientTeamBeaconHostHasCancelled(EPartyReservationCancellationReason Reason);
	void OnClientTeamBeaconExpectedReservationConfirmationComplete(EPartyReservationResult Result);
	void OnClientLobbyBeaconHostKickedParty();
	void OnClientLobbyBeaconRequestCancelMatchmaking(EPoplarMatchmakingCancellationReason Reason);
	void OnCreateClientTeamBeaconForNewHostComplete(EOnlineSubsystemResult Result, class UPoplarPartyBeaconClient* NewBeacon);
	void OnClientLobbyBeaconRequestConnectToHostBeaconForNewHost(const struct FName& NewBeaconName, struct FPartyBeaconHostData& NewHost);
	void OnCreateClientTeamBeaconComplete(EOnlineSubsystemResult Result, class UPoplarPartyBeaconClient* NewBeacon);
	void OnClientLobbyBeaconRequestConnectToHostBeacon(const struct FName& NewBeaconName);
	void OnClientLobbyBeaconHostHasCancelled(EPartyReservationCancellationReason Reason);
	void OnClientGameBeaconRemotePlayerRemoved(const struct FUniqueNetId& RemovedPlayerId);
	void OnClientGameBeaconRemotePlayerAdded(const struct FUniqueNetId& AddedPlayerId);
	void OnHostGameBeaconRemotePlayerRemoved(const struct FUniqueNetId& RemovedPlayerId);
	void OnHostGameBeaconRemotePlayerAdded(const struct FUniqueNetId& AddedPlayerId);
	void OnClientTeamBeaconRemotePlayerRemoved(const struct FUniqueNetId& RemovedPlayerId);
	void OnClientTeamBeaconRemotePlayerAdded(const struct FUniqueNetId& AddedPlayerId);
	void OnHostTeamBeaconRemotePlayerRemoved(const struct FUniqueNetId& RemovedPlayerId);
	void OnHostTeamBeaconRemotePlayerAdded(const struct FUniqueNetId& AddedPlayerId);
	void OnClientLobbyBeaconRemotePlayerRemoved(const struct FUniqueNetId& RemovedPlayerId, bool bShowNotification);
	void OnClientLobbyBeaconRemotePlayerAdded(const struct FUniqueNetId& AddedPlayerId, bool bShowNotification);
	void OnHostLobbyBeaconRemotePlayerRemoved(const struct FUniqueNetId& RemovedPlayerId, bool bShowNotification);
	void OnHostLobbyBeaconRemotePlayerAdded(const struct FUniqueNetId& AddedPlayerId, bool bShowNotification);
	void OnClientBeaconClusterTimedOut();
	void OnClientBeaconPrivateMatchOptionChanged(int32_t PanelId, int32_t NewOptionIndex);
	void OnClientBeaconRemainingTimeUpdated(float RemainingTime);
	void OnClientBeaconFrontendStateUpdateComplete(EMatchmakingState CurrentMatchmakingState, EMatchmakingUIState CurrentMatchmakingUIState);
	void OnBeaconClientFrontendStateUpdateRequest(class UPoplarPartyBeaconHost* HostBeacon, const struct FUniqueNetId& RequestingPartyLeader);
	void OnHostTeamBeaconClientFrontendStateUpdateRequest(const struct FUniqueNetId& RequestingPartyLeader);
	void OnHostLobbyBeaconClientFrontendStateUpdateRequest(const struct FUniqueNetId& RequestingPartyLeader);
	void OnHostLobbyBeaconClientFailedToEstablishExpectedReservation();
	void OnHostTeamBeaconClientFailedToEstablishExpectedReservation();
	void OnClientBeaconNumTeamPlayersFoundUpdated(int32_t NewNumTeamPlayersFound);
	void OnGameBeaconDestroyForMatchmakingCleanupComplete();
	void OnHostBeaconClientCancellationReceived(const struct FUniqueNetId& PartyLeader, EPartyReservationCancellationReason Reason);
	void OnClientBeaconJoinSessionRequestReceived(const struct FName& SessionName, class UClass* SearchClass, const struct FPlatformSessionData& PlatformSpecificInfo);
	void OnClientBeaconRequestDebugForceConnectToDedicatedServer(const class FString& ServerAddress);
	void OnClientBeaconExperienceDataUpdated(const struct FSelectedExperienceData& NewHostExperienceData);
	void OnClientBeaconReservationCountUpdated(int32_t NumRemaining);
	void OnClientUpdateInviteFlagsComplete(const struct FName& SessionName, EOnlineSubsystemResult Result);
	void OnClientLobbyBeaconUpdateInviteFlags(bool bAllowInvites, bool bAllowJoinViaPresence, bool bAllowJoinViaPresenceFriendsOnly);
	void OnClientBeaconMatchmakingUIStateUpdated(EMatchmakingUIState NewMatchmakingUIState);
	void OnClientBeaconMatchmakingStateUpdated(EMatchmakingState NewMatchmakingState);
	void OnHostBeaconReservationChange();
	bool RequestFrontendStateUpdateFromTeamHost();
	bool RequestFrontendStateUpdateFromLobbyHost();
	class FString GetMatchmakingCancellationMessage(bool bLocal, EPoplarMatchmakingCancellationReason Reason);
	void UpdateNumTeamPlayersFound();
	bool IsLobbyFull();
	void RefreshFrontendPlayerList();
	void NotifyLocalPlayerTravelToSessionComplete(const struct FName& SessionName, EOnlineSubsystemResult Result);
	void OnUpdateLobbySessionComplete(const struct FName& SessionName, EOnlineSubsystemResult Result);
	void UpdateLobbyInviteJoinSettingsFromProfile();
	void UnregisterRemotePlayerFromSession(const struct FName& SessionName, const struct FUniqueNetId& NetId);
	void RegisterRemotePlayerWithSession(const struct FName& SessionName, const struct FUniqueNetId& NetId);
	void OnCheckDestroyAllBeaconsComplete();
	void OnCheckDestroyMatchmakingBeaconsComplete();
	void DestroyMatchmakingBeacons();
	void OnDestroyRejoinSessionComplete(const struct FName& SessionName, EOnlineSubsystemResult Result);
	void OnEndRejoinSessionComplete(const struct FName& SessionName, EOnlineSubsystemResult Result);
	void OnRejoinSessionDestroyComplete();
	void OnDestroyGameSessionComplete(const struct FName& SessionName, EOnlineSubsystemResult Result);
	void OnEndGameSessionComplete(const struct FName& SessionName, EOnlineSubsystemResult Result);
	void DestroyGameBeaconInternal(class UPartyBeacon* TheBeacon, const struct FScriptDelegate& OnDestroyCompleteDelegate);
	void DestroyClientGameBeacon(const struct FScriptDelegate& optionalOnDestroyCompleteDelegate);
	void DestroyHostGameBeacon(const struct FScriptDelegate& optionalOnDestroyCompleteDelegate);
	void OnDestroyTeamSessionComplete(const struct FName& SessionName, EOnlineSubsystemResult Result);
	void OnEndTeamSessionComplete(const struct FName& SessionName, EOnlineSubsystemResult Result);
	void DestroyTeamBeaconInternal(class UPartyBeacon* TheBeacon, const struct FScriptDelegate& OnDestroyCompleteDelegate);
	void DestroyClientTeamBeacon(const struct FScriptDelegate& optionalOnDestroyCompleteDelegate);
	void DestroyHostTeamBeacon(const struct FScriptDelegate& optionalOnDestroyCompleteDelegate);
	void OnDestroyLobbySessionComplete(const struct FName& SessionName, EOnlineSubsystemResult Result);
	void OnEndLobbySessionComplete(const struct FName& SessionName, EOnlineSubsystemResult Result);
	void DestroyLobbyBeaconInternal(class UPartyBeacon* TheBeacon, const struct FScriptDelegate& OnDestroyCompleteDelegate);
	void DestroyClientLobbyBeacon(const struct FScriptDelegate& optionalOnDestroyCompleteDelegate);
	void DestroyHostLobbyBeacon(const struct FScriptDelegate& optionalOnDestroyCompleteDelegate);
	class UPoplarPartyBeaconClient* GetClientGameBeacon();
	class UPoplarPartyBeaconHost* GetHostGameBeacon();
	class UPoplarPartyBeaconClient* GetClientTeamBeacon();
	class UPoplarPartyBeaconHost* GetHostTeamBeacon();
	class UPoplarPartyBeaconClient* GetClientLobbyBeacon();
	class UPoplarPartyBeaconHost* GetHostLobbyBeacon();
	void CreateClientGameBeacon();
	void FinishCreateHostGameBeaconInternal(EOnlineSubsystemResult Result);
	void OnCreateGameSessionComplete(const struct FName& SessionName, EOnlineSubsystemResult Result);
	void CreateClientTeamBeacon();
	void FinishCreateHostTeamBeaconInternal(EOnlineSubsystemResult Result);
	void OnCreateTeamSessionComplete(const struct FName& SessionName, EOnlineSubsystemResult Result);
	void CreateClientLobbyBeacon();
	void AddLocalPlayerToHostLobbyBeacon(const struct FPlatformUserId& LocalPlayerId);
	void FinishCreateHostLobbyBeaconInternal(EOnlineSubsystemResult Result);
	void OnCreateLobbySessionComplete(const struct FName& SessionName, EOnlineSubsystemResult Result);
	void CreateHostLobbyBeacon(const struct FPlatformUserId& PrimaryPlayerId);
	class UOnlineGameInterface* GetOnlineGameInterface();
	void OnDestroyAllBeaconsComplete();
	void OnDestroyMatchmakingBeaconsComplete();
	void OnClientBeaconCreationComplete(EOnlineSubsystemResult Result, class UPoplarPartyBeaconClient* NewBeacon);
	void OnHostBeaconCreationComplete(EOnlineSubsystemResult Result, class UPoplarPartyBeaconHost* NewBeacon);
	int32_t GetMaxLobbyPlayers();
	void ResetMatchmakingData();
	uint8_t GetLocalTeamNum();
	void CancelMatchmakingBeacons(EPartyReservationCancellationReason Reason);
	bool CreateInitialHostGameBeaconReservations(bool bExcludeRemoteParties);
	bool CreateInitialHostTeamBeaconReservations(bool bExcludeRemoteParties);
	bool GetLocalPartyReservationInfo(struct FUniqueNetId& PartyLeaderId, class TArray<struct FPlayerReservation>& LocalPlayers);
	static class UPoplarPersistentBeaconManager* GetPoplarPersistentBeaconManager();
	void OnGameBeaconDestroyComplete();
	void OnTeamBeaconDestroyComplete();
	void OnLobbyBeaconDestroyComplete();
};

// Class PoplarGame.PoplarPersistentDataCache
// 0x0020 (0x0058 - 0x0078)
class UPoplarPersistentDataCache : public UObject
{
public:
	uint32_t                                           bPrimaryPlayerDataActive : 1;                  // 0x0058 (0x0004) [0x0000000000000000] [0x00000001] 
	struct FPointer                                    PrimaryPlayerData;                             // 0x0060 (0x0008) [0x0000000000803000] (CPF_Native | CPF_Transient | CPF_NoExport)
	struct FPointer                                    SecondaryPlayerData;                           // 0x0068 (0x0008) [0x0000000000803000] (CPF_Native | CPF_Transient | CPF_NoExport)
	struct FPointer                                    Allocator;                                     // 0x0070 (0x0008) [0x0000000000803000] (CPF_Native | CPF_Transient | CPF_NoExport)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPersistentDataCache");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarPickup
// 0x00F8 (0x0D10 - 0x0E08)
class APoplarPickup : public AWillowInventory
{
public:
	struct FPointer                                    VfTable_IIBodyCompositionInstance;             // 0x0D10 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIInstanceData;                        // 0x0D18 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIBehaviorConsumer;                    // 0x0D20 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIUsable;                              // 0x0D28 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIUnit;                                // 0x0D30 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIMinimapObject;                       // 0x0D38 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UPoplarHotSpotOwnerRef*                      HotSpotRef;                                    // 0x0D40 (0x0008) [0x0000000004402008] (CPF_ExportObject | CPF_Transient | CPF_NeedCtorLink | CPF_EditInline)
	struct FPmtData                                    PmtData;                                       // 0x0D48 (0x0028) [0x0000000000003000] (CPF_Native | CPF_Transient)
	class UPoplarPickupDefinition*                     PickupDefinition;                              // 0x0D70 (0x0008) [0x0000000100000020] (CPF_Net)     
	class UPoplarLootDropDefinition*                   LootDropDefinition;                            // 0x0D78 (0x0008) [0x0000000000000000]               
	struct FInstanceData2                              InstanceState;                                 // 0x0D80 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FCompressedBodyState2                       CompressedBodyState;                           // 0x0D90 (0x0010) [0x0000000000002020] (CPF_Net | CPF_Transient)
	struct FBehaviorConsumerHandle                     ConsumerHandle;                                // 0x0DA0 (0x0004) [0x0000000000000000]               
	class UCylinderComponent*                          CylinderComponent;                             // 0x0DA8 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UCylinderComponent*                          PickupRegion;                                  // 0x0DB0 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class UStaticMeshComponent*                        ObjectMesh;                                    // 0x0DB8 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class UPoplarUnitTypeDefinition*                   UnitTypeDef;                                   // 0x0DC0 (0x0008) [0x0000000000000000]               
	class UPoplarLaneDefinition*                       LaneDef;                                       // 0x0DC8 (0x0008) [0x0000000000000000]               
	class APoplarTeamInfo*                             MyTeamInfo;                                    // 0x0DD0 (0x0008) [0x0000000000000000]               
	class APawn*                                       Recipient;                                     // 0x0DD8 (0x0008) [0x0000000100000020] (CPF_Net)     
	float                                              Lifetime;                                      // 0x0DE0 (0x0004) [0x0000000000000000]               
	uint32_t                                           bCanBeUsed : 1;                                // 0x0DE4 (0x0004) [0x0000000000000020] [0x00000001] (CPF_Net)
	uint32_t                                           bPickedUp : 1;                                 // 0x0DE4 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bInitializedBody : 1;                          // 0x0DE4 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           bShouldSkipUnitRegistration : 1;               // 0x0DE4 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	uint32_t                                           bIgnoreClientSidePhysics : 1;                  // 0x0DE4 (0x0004) [0x0000000000000020] [0x00000010] (CPF_Net)
	struct FPickupMethodOverrideInfo                   PickupMethodOverride;                          // 0x0DE8 (0x0008) [0x0000000000000020] (CPF_Net)     
	class UPoplarNameplateTypeDefinition*              NameplateTypeDefinition;                       // 0x0DF0 (0x0008) [0x0000000000000020] (CPF_Net)     
	struct FPointer                                    ServerBody;                                    // 0x0DF8 (0x0008) [0x0000000000203000] (CPF_Native | CPF_Transient)
	struct FPointer                                    ParityConstraint;                              // 0x0E00 (0x0008) [0x0000000000203000] (CPF_Native | CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPickup");
		}

		return uClassPointer;
	};

	void eventTornOff();
	void TearOff();
	void ForceColorRefresh();
	class UGBXDefinition* GetTeamDefinition();
	void SetTeamInfo(class ATeamInfo* InTeamInfo);
	class ATeamInfo* GetTeamInfo();
	class UPoplarTeamDefinition* GetPoplarTeamDefinition();
	void SetPoplarTeamInfo(class APoplarTeamInfo* InTeamInfo);
	class APoplarTeamInfo* GetPoplarTeamInfo();
	void GetDamagedStatArray(class TArray<class UStatDefinition*>& DamagedStats);
	void GetKilledStatArray(class TArray<class UStatDefinition*>& KilledStats);
	bool IsSubUnit();
	bool IsTaggedBy(class UPoplarUnitTypeTag* UnitTag);
	float GetCurrentDetectionRadius();
	float GetEnemySeenTimeout();
	bool IsInVisionCone(const struct FVector& Position);
	int32_t GetUnitVisionConeAngle();
	bool IsUnitVisibleToMe(class AActor* TargetUnit, bool optionalBIgnoreDetectionRadius, bool optionalBNoLOSCheck);
	void UnregisterFromGRI();
	void RegisterWithGRI();
	struct FVector GetUnitTargetableLocation();
	class UPawnAllegiance* GetUnitAllegiance();
	bool IsUnitDead();
	float GetUnitMaxEnergy();
	float GetUnitEnergy();
	float GetUnitMaxOvershield();
	float GetUnitOvershield();
	float GetUnitMaxShield();
	float GetUnitShield();
	float GetUnitMaxHealth();
	float GetUnitHealth();
	int32_t GetUnitLevel();
	bool ShowUnitWidget();
	bool IsHuman();
	bool IsVisibleToTeam(class APoplarTeamInfo* OneTeamInfo);
	void NotifyLaneEvent(const struct FName& EventName, class AController* EventInstigator, class UPoplarTeamDefinition* InstigatorTeam);
	void SetInTeamBase(bool bInBase);
	bool IsInTeamBase();
	void SetUnitExpLevel(int32_t NewLevel, bool optionalBAwardSkillPoints, bool optionalBShowHUDFanfare);
	int32_t GetUnitExpLevel();
	int32_t GetSpawnerIndex();
	struct FVector GetUnitLocation();
	class UPoplarLaneDefinition* GetLaneDefinition();
	class UIPoplarSpawner* GetSpawner();
	void SetSpawner(class UIPoplarSpawner* InSpawner);
	void SetLaneDefinition(class UPoplarLaneDefinition* InLaneDef);
	bool SetUnitTypeDefinition(class UPoplarUnitTypeDefinition* NewUnitTypeDefinition, bool optionalSkipGameInfoRegistration);
	class APlayerStateInfo* GetUnitPSI();
	class APlayerReplicationInfo* GetUnitPRI();
	class UPoplarNameplateTypeDefinition* GetNameplateTypeDefinition();
	class UPoplarUnitTypeDefinition* GetUnitTypeDefinition();
	class AActor* GetUnitActor();
	void eventUsedByOtherUnit(class UIUnit* User);
	bool GetInstanceDataState(struct FInstanceData2& OutInstanceDataState);
	bool eventRemoveInstanceData(const struct FName& DataName);
	bool eventGetInstanceData(const struct FName& DataName, class TArray<struct FInstanceDataItem2>& InstanceData);
	bool eventSetInstanceData(const struct FInstanceDataItem2& InstanceData, bool optionalBAllowDuplicateNames);
	struct FBehaviorConsumerHandle GetBehaviorConsumerHandle();
	void TemporaryDisableExpired();
	void eventInitializeFromDefinition(class UPoplarPickupDefinition* InDefinition);
	void Expire();
	void OnUsed(class APoplarPawn* User);
	void eventTouch(class AActor* Other, class UPrimitiveComponent* OtherComp, const struct FVector& HitLocation, const struct FVector& HitNormal);
	void eventDestroyed();
	void InitBody();
	void eventReplicatedEvent(const struct FName& VarName);
};

// Class PoplarGame.PoplarPickupDefinition
// 0x0150 (0x0058 - 0x01A8)
class UPoplarPickupDefinition : public UGBXDefinition
{
public:
	struct FPointer                                    VfTable_IIBodyProvider;                        // 0x0058 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIBehaviorProvider;                    // 0x0060 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UBodyProviderDefinition*                     BodyProvider;                                  // 0x0068 (0x0008) [0x0000000000000000]               
	class UBehaviorProviderDefinition*                 BehaviorProviderDefinition;                    // 0x0070 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UInteractionIconDefinition*                  Icon;                                          // 0x0078 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UInteractionIconDefinition*                  CannotUseIcon;                                 // 0x0080 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarUnitTypeDefinition*                   UnitTypeDefinition;                            // 0x0088 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarNameplateTypeDefinition*              NameplateTypeDefinition;                       // 0x0090 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class TArray<class UPoplarUnitTypeTag*>            UnitTypeTags;                                  // 0x0098 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	uint32_t                                           OverrideUnitTypeDefinitionTags : 1;            // 0x00A8 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	uint32_t                                           bEnableClientSidePhysics : 1;                  // 0x00A8 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	class TArray<class UPoplarPickupTagDefinition*>    PickupTags;                                    // 0x00B0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	EPoplarPickupMethod                                Method;                                        // 0x00C0 (0x0001) [0x0000000000000001] (CPF_Edit)    
	EPickupRelevanceDistance                           RelevanceDistance;                             // 0x00C1 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                Lifetime;                                      // 0x00C8 (0x0020) [0x0000000000000001] (CPF_Edit)    
	float                                              FlyToRecipientSpeed;                           // 0x00E8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              FlyToRecipientDrawScale;                       // 0x00EC (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              FlyToCloseEnough;                              // 0x00F0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              FlyToRotationSpeed;                            // 0x00F4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              FlyToHeightAdjustment;                         // 0x00F8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class TArray<struct FPickupConstraintData>         PickupConstraints;                             // 0x0100 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	struct FName                                       Socket;                                        // 0x0110 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              ClientSidePhysicsBaseLifetime;                 // 0x0118 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              ClientSideSimulationDeviation;                 // 0x011C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              ClientSideSimulationDeviationErrorTolerance;   // 0x0120 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              DeviationStiffness;                            // 0x0124 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              DeviationDamping;                              // 0x0128 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              MinVerticalAngle;                              // 0x012C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxVerticalAngle;                              // 0x0130 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MinHorizontalAngle;                            // 0x0134 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxHorizontalAngle;                            // 0x0138 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MinImpulse;                                    // 0x013C (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxImpulse;                                    // 0x0140 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     Direction;                                     // 0x0144 (0x000C) [0x0000000020000000]  CPF_Deprecated)
	struct FRelativeDirectionData                      DirectionData;                                 // 0x0150 (0x0038) [0x0000000000000001] (CPF_Edit)    
	float                                              InitialDistance;                               // 0x0188 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     Offset;                                        // 0x018C (0x000C) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     RotationOverride;                              // 0x0198 (0x000C) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPickupDefinition");
		}

		return uClassPointer;
	};

	void OnCollided(class UObject* HitObject, const struct FVector& HitLocation, class UAkSwitch* MaterialAkSwitch, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnDestroyed(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnPickup(EBehaviorEventNetworkRole EventOutput, class AActor* Recipient, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnSpawn(struct FBehaviorConsumerHandle& ConsumerHandle);
};

// Class PoplarGame.PoplarPickupTagDefinition
// 0x0000 (0x0058 - 0x0058)
class UPoplarPickupTagDefinition : public UGBXDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPickupTagDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarPlayerCharacterExpressionEvaluator
// 0x0010 (0x0058 - 0x0068)
class UPoplarPlayerCharacterExpressionEvaluator : public UExpressionEvaluator
{
public:
	ECharacterExpressionState                          PNIDState;                                     // 0x0058 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarPlayerNameIdentifierDefinition*       CharacterPNID;                                 // 0x0060 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPlayerCharacterExpressionEvaluator");
		}

		return uClassPointer;
	};

	bool Evaluate(class UObject* ContextSource);
};

// Class PoplarGame.PoplarPlayerClassDefinition
// 0x0258 (0x0250 - 0x04A8)
class UPoplarPlayerClassDefinition : public UPlayerClassDefinition
{
public:
	class APoplarPlayerPawn*                           PawnArchetype;                                 // 0x0250 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class APoplarAIPawn*                               BotArchetype;                                  // 0x0258 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FPointer                                    BotBehaviorModelFile;                          // 0x0260 (0x0008) [0x0000000000001001] (CPF_Edit | CPF_Native)
	class USkillTreeDefinition*                        SkillTree;                                     // 0x0268 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class TArray<class UPoplarSkillDefinition*>        SkillsToStartOnMatchBegin;                     // 0x0270 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UPoplarAugSet*                               AugSet;                                        // 0x0280 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarUnitTypeDefinition*                   UnitTypeDefinition;                            // 0x0288 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class TArray<class UPoplarUnitTypeTag*>            UnitTypeTags;                                  // 0x0290 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	uint32_t                                           OverrideUnitTypeDefinitionTags : 1;            // 0x02A0 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	uint32_t                                           bOverrideLeftAmmoBar : 1;                      // 0x02A0 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	uint32_t                                           bShowLeftPoolValue : 1;                        // 0x02A0 (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	uint32_t                                           bOverrideRightAmmoBar : 1;                     // 0x02A0 (0x0004) [0x0000000000000003] [0x00000008] (CPF_Edit | CPF_Const)
	uint32_t                                           bShowRightPoolValue : 1;                       // 0x02A0 (0x0004) [0x0000000000000003] [0x00000010] (CPF_Edit | CPF_Const)
	class UPoplarMeleeCrosshairDefinition*             MeleeCrosshairDef;                             // 0x02A8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarNameplateTypeDefinition*              NameplateTypeDefinition;                       // 0x02B0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class FString                                      LocalizedCharacterAbiltiesDescription;         // 0x02B8 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class TArray<struct FPoplarWeaponData>             Weapons;                                       // 0x02C8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class TArray<class UGBXCameraModeSetDefinition*>   CustomCameraModeSetDefinitions;                // 0x02D8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UResourcePoolDefinition*                     EnergyPoolDefinition;                          // 0x02E8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UResourcePoolDefinition*                     StaminaPoolDefinition;                         // 0x02F0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarActionDefinition*                     DefaultDamagingActionDefinition;               // 0x02F8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              ReducedSprintingPct;                           // 0x0300 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<struct FAttributeEffectData>          JumpAttributeEffects;                          // 0x0308 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	float                                              JumpRecoveryAttributeDuration;                 // 0x0318 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<struct FAttributeEffectData>          JumpRecoveryAttributeEffects;                  // 0x0320 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	float                                              SprintingFOVModifier;                          // 0x0330 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              ReducedSprintingFOVModifier;                   // 0x0334 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              SprintingEyeHeightModifier;                    // 0x0338 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarAutoAimStrategyDefinition*            AutoAimStrategy;                               // 0x0340 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class TArray<class UStatDefinition*>               KilledStatList;                                // 0x0348 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<class UStatDefinition*>               KilledAssistStatList;                          // 0x0358 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<class UStatDefinition*>               DamagedStatList;                               // 0x0368 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	struct FCharacterStat                              CharacterStats[0x4];                           // 0x0378 (0x00C0) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class UStatDefinition*                             PlayedAsCharacterStatDef;                      // 0x0438 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             WonAsCharacterStatDef;                         // 0x0440 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarChallengeListDefinition*              CharacterChallengeList;                        // 0x0448 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarLoreChallengeListDefinition*          LoreChallengeList;                             // 0x0450 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<class USwfMovie*>                     LargeSwfImageReferences;                       // 0x0458 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<struct FConditionalDamageModifier>    AttackingDamageModifiers;                      // 0x0468 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class TArray<struct FConditionalDamageModifier>    DefendingDamageModifiers;                      // 0x0478 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UResourcePoolDefinition*                     LeftOverridePool;                              // 0x0488 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAmmoBarOverrideTypeDefinition*              LeftOverrideTypeDef;                           // 0x0490 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UResourcePoolDefinition*                     RightOverridePool;                             // 0x0498 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAmmoBarOverrideTypeDefinition*              RightOverrideTypeDef;                          // 0x04A0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPlayerClassDefinition");
		}

		return uClassPointer;
	};

	void eventApplyInventory(class APoplarPawn* InvPawn, class UPoplarSkinDefinition* Skin);
	void OnTeamSetOrChanged(class UObject* NewTeamDefinition, class UObject* NewAllegiance, struct FBehaviorConsumerHandle& ConsumerHandle);
};

// Class PoplarGame.PoplarPlayerClassIdentifierDefinition
// 0x0020 (0x00B8 - 0x00D8)
class UPoplarPlayerClassIdentifierDefinition : public UPlayerClassIdentifierDefinition
{
public:
	class FString                                      CharacterClassPath;                            // 0x00B8 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class FString                                      CharacterBotPath;                              // 0x00C8 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPlayerClassIdentifierDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarPlayerClassStandInDefinition
// 0x0020 (0x0058 - 0x0078)
class UPoplarPlayerClassStandInDefinition : public UGBXDefinition
{
public:
	class UPoplarWeaponTypeDefinition*                 MainHandWeapon;                                // 0x0058 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UPoplarWeaponTypeDefinition*                 OffHandWeapon;                                 // 0x0060 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UFeatureProviderDefinition*                  FeatureProviderDefinition;                     // 0x0068 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UWillowOnDemandPackageMarker*                LinkedOnDemandPackage;                         // 0x0070 (0x0008) [0x0000000000000000]               

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPlayerClassStandInDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarAimBotPlayerController
// 0x0010 (0x1680 - 0x1690)
class APoplarAimBotPlayerController : public APoplarPlayerController
{
public:
	class UITargetable*                                AimTarget_Object;                              // 0x1680 (0x0008) [0x0000000000000000] 
	class UITargetable*                                AimTarget_Interface;                           // 0x1688 (0x0008) [0x0000000000000000]               

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarAimBotPlayerController");
		}

		return uClassPointer;
	};

	struct FRotator GetAdjustedAimFor(class AWeapon* W, const struct FVector& StartFireLoc);
	void ServerSetAimTarget(class UITargetable* NewTarget);
	void eventAimBotStopFire();
	void eventAimBotStartFire();
	void StartFire(uint8_t optionalFireModeNum);
};

// Class PoplarGame.PoplarPendingLevelPlayerController
// 0x0000 (0x1680 - 0x1680)
class APoplarPendingLevelPlayerController : public APoplarPlayerController
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPendingLevelPlayerController");
		}

		return uClassPointer;
	};

	ELoginStatus eventGetLoginStatus();
	void ClearPlayerStandIn();
	class APlayerStandIn* GetPlayerStandIn();
	void GenericPlayerInitialization();
	bool IsPendingLevelPlayerController();
};

// Class PoplarGame.PoplarSpectatorController
// 0x01C0 (0x1680 - 0x1840)
class APoplarSpectatorController : public APoplarPlayerController
{
public:
	EPoplarSpectatorState                              CurrentState;                                  // 0x1680 (0x0001) [0x0000000000002000] (CPF_Transient)
	EPoplarSpectatorState                              PreviousState;                                 // 0x1681 (0x0001) [0x0000000000002000] (CPF_Transient)
	ESpectatorFirstPersonPreference                    CachedFirstPersonPreference;                   // 0x1682 (0x0001) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bDeclinedToWatchTaunt : 1;                     // 0x1684 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           HoldCameraUpdatesForPendingStateChange : 1;    // 0x1684 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           DoingQuickZoomIn : 1;                          // 0x1684 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           bCycleFixedCams : 1;                           // 0x1684 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	uint32_t                                           bHUDHasBeenInitialized : 1;                    // 0x1684 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	uint32_t                                           bCharacterSelectLayoutNeedsRefreshing : 1;     // 0x1684 (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	struct FRotator                                    HeldCameraRotation;                            // 0x1688 (0x000C) [0x0000000000002000] (CPF_Transient)
	class UPoplarCameraBehavior_OffsetCameraRelative*  CachedCameraBehaviorOffset;                    // 0x1698 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarCameraBehavior_CollisionOffsetTrace*  CachedCameraBehaviorTrace;                     // 0x16A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            LastSpectatedPlayerIndex;                      // 0x16A8 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            LastSpectatedFixedCamIndex;                    // 0x16AC (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              ZoomInOverspill;                               // 0x16B0 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CameraZoomDirection;                           // 0x16B4 (0x0004) [0x0000000000000000]               
	float                                              CameraZoomCurrentVelocity;                     // 0x16B8 (0x0004) [0x0000000000000000]               
	float                                              MinZoomDistance;                               // 0x16BC (0x0004) [0x0000000000000000]               
	float                                              CameraZoomAcceleration;                        // 0x16C0 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              CameraMaxZoomSpeed;                            // 0x16C4 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              CameraMaxZoomSpeedGamepad;                     // 0x16C8 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              CameraZoomFalloffDuration;                     // 0x16CC (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              MinZoomDistanceStandard;                       // 0x16D0 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              MinZoomDistanceForBigPlayers;                  // 0x16D4 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              MaxZoomDistance;                               // 0x16D8 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              SlowFreeCamMoveSpeed;                          // 0x16DC (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              FastFreeCamMoveSpeed;                          // 0x16E0 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              FreeCamMoveSpeedDelta;                         // 0x16E4 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              ZoomInThresholdToGoFirstPerson;                // 0x16E8 (0x0004) [0x0000000000000002] (CPF_Const)   
	struct FVector                                     CameraOffsetWhenSwitchingFromFirstPersonToFreeCam;// 0x16EC (0x000C) [0x0000000000000002] (CPF_Const)   
	int32_t                                            CharacterSelectViewingTeamIndex;               // 0x16F8 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FSpectatorFixedCameraView                   CustomCameraViews[0x5];                        // 0x1700 (0x00F0) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class UISpectatorControlsObserver*>   SpectatorControlsObservers;                    // 0x17F0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class APlayerReplicationInfo*                      CurrentSpectatedPRI;                           // 0x1800 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APlayerReplicationInfo*                      KillerPRI;                                     // 0x1808 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              TimeUntilForgetKiller;                         // 0x1810 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              NextCharacterHackUpdateTime;                   // 0x1814 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              ForgetForcedTeleportTime;                      // 0x1818 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     ForcedTeleportLoc;                             // 0x181C (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FRotator                                    ForcedTeleportRot;                             // 0x1828 (0x000C) [0x0000000000002000] (CPF_Transient)
	float                                              ForcedTeleportGracePeriod;                     // 0x1834 (0x0004) [0x0000000000000002] (CPF_Const)   
	uint8_t                                           UnknownData00[0x8];                            // 0x1838 (0x0008) MISSED OFFSET

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSpectatorController");
		}

		return uClassPointer;
	};

	void ClientNotifyForcedTeleportCompleted();
	void AskForPawn();
	void GivePawn(class APawn* NewPawn);
	void eventPossess(class APawn* aPawn, bool bVehicleTransition);
	void SwitchToPendingPlayerClass();
	class AActor* GetTraceActorForSpectating();
	void ClientDeactivateCommandRing();
	void ClientActivateCommandRing(class APawn* ForPawn, class UCommandRingDefinition* CommandRingDef);
	void ClientOnCharacterTauntSelection(class UPoplarMetaTauntDefinition* SkinSelection, EMetaItemSelectionResult ResultMessage);
	void ClientOnCharacterSkinSelection(class UPoplarMetaSkinDefinition* SkinSelection, EMetaItemSelectionResult ResultMessage);
	void eventServerSelectCharacterTaunt(class UPoplarMetaTauntDefinition* SelectedTaunt);
	void eventServerSelectCharacterSkin(class UPoplarMetaSkinDefinition* SelectedSkin);
	void ClientOnCharacterSelection(class UPoplarPlayerNameIdentifierDefinition* CharacterSelection, EMetaItemSelectionResult ResultMessage);
	void eventServerSelectCharacter(class UPoplarPlayerNameIdentifierDefinition* SelectedCharacter, class UPoplarMetaSkinDefinition* PreferredSkin, class UPoplarMetaTauntDefinition* PreferredTaunt, bool bLockIn);
	void ApplyCharacterSelection();
	struct FName GetCurrentInputContext();
	void EnterStartState();
	void Behavior_SwitchToFreeCamAndMoveToLocation(bool bForceTeleport, int32_t FixedCamIndex, const struct FVector& optionalDesiredTeleportLocation, const struct FRotator& optionalDesiredTeleportRotation);
	void ServerSpectateActor(class AActor* ActorToSpectate, EPoplarSpectatorState ForState, bool bTransitionToFixed);
	void TimerSpectateFirstPlayer();
	void GoThirdPerson();
	void GoFirstPerson();
	void SpectatePlayerIAmLookingAt();
	void SpectatePlayerByIndex(int32_t PlayerIndex);
	void GoFreeCam();
};

// Class PoplarGame.PoplarPlayerDetailsGFxMovie
// 0x0100 (0x05B0 - 0x06B0)
class UPoplarPlayerDetailsGFxMovie : public UWillowGFxMovie3D
{
public:
	class UPoplarPlayerDetailsGFxObject*               PlayerDetailsObject;                           // 0x05B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class FString                                      JoinGameCaption;                               // 0x05B8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      InviteGameCaption;                             // 0x05C8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      ViewGamercardCaption;                          // 0x05D8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MuteCaption;                                   // 0x05E8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      UnmuteCaption;                                 // 0x05F8 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      KickCaption;                                   // 0x0608 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      BackCaption;                                   // 0x0618 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      ReportCaption;                                 // 0x0628 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      ReportCheatingCaption;                         // 0x0638 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      ReportIdleCaption;                             // 0x0648 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      ReportAbusiveCaption;                          // 0x0658 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      ReportQuitCaption;                             // 0x0668 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	int32_t                                            CurrentButtonIndex;                            // 0x0678 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __OnLoad__Delegate;                            // 0x0680 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnSelect__Delegate;                          // 0x0690 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnBack__Delegate;                            // 0x06A0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPlayerDetailsGFxMovie");
		}

		return uClassPointer;
	};

	void HandleDetailsDialogButtonFocus(int32_t NewCurrentIndex);
	void HandleHintInput(const struct FPlatformUserId& UserId, const struct FName& HintTag);
	void PopulateHintBar();
	void PopulatePlayerDetailsDialog(const struct FUniqueNetId& UniqueId, class UPoplarPlayerDetailsGFxObject* InPlayerDetailsDialog, const class FString& NickName);
	bool HandleInputKey(const struct FPlatformUserId& UserId, const struct FName& ukey, EInputEvent uevent);
	void extClosed();
	void extOnLoad(const class FString& Path);
	void eventOnClose();
	bool eventStart(bool optionalStartPaused);
	void SetInputDelegates(class UObject* Context, const struct FName& SelectFunctionName, const struct FName& BackFunctionName);
	void OnBack();
	void OnSelect(int32_t Index);
	void OnLoad(class UPoplarPlayerDetailsGFxObject* PlayerDetailsObj);
};

// Class PoplarGame.PoplarPlayerDetailsGFxObject
// 0x0008 (0x00D8 - 0x00E0)
class UPoplarPlayerDetailsGFxObject : public UGFxObject
{
public:
	uint32_t                                           bHidden : 1;                                   // 0x00D8 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPlayerDetailsGFxObject");
		}

		return uClassPointer;
	};

	void SetClickHandler(class UObject* Context, const struct FName& FunctionName);
	void NavigateDown();
	void NavigateUp();
	void FocusButton(int32_t Index);
	void ConfigureButton(int32_t ButtonIndex, const class FString& ButtonText, bool bDisabled);
	void SetPresenceText(const class FString& PresenceText);
	void SetGamertag(const class FString& NickName);
	void Hide();
	void Show();
};

// Class PoplarGame.PoplarPlayerInput
// 0x0000 (0x03F0 - 0x03F0)
class UPoplarPlayerInput : public UWillowPlayerInput
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPlayerInput");
		}

		return uClassPointer;
	};

	void eventPlayerInput(float DeltaTime);
};

// Class PoplarGame.PoplarPlayerManager
// 0x00D8 (0x0128 - 0x0200)
class UPoplarPlayerManager : public UWillowPlayerManager
{
public:
	struct FPointer                                    VfTable_FTickableObject;                       // 0x0128 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UPoplarStartupProcess*                       StartupProcess;                                // 0x0130 (0x0008) [0x0000000000000000]               
	EOnlineEnumerationReadState                        StartupProcessState;                           // 0x0138 (0x0001) [0x0000000000000000]               
	class TArray<class UGearboxProcess*>               ActiveProcesses;                               // 0x0140 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FPlatformUserId>               InitializedPlayers;                            // 0x0150 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             ProcessCompleteCallback;                       // 0x0160 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	float                                              DownloadPatcherFilesTimeout;                   // 0x0170 (0x0004) [0x0000000000004000] (CPF_Config)  
	uint32_t                                           bDownloadingPatcherFiles : 1;                  // 0x0174 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bHasDownloadedPatcherFile : 1;                 // 0x0174 (0x0004) [0x0000000000000000] [0x00000002] 
	uint32_t                                           bSkipLegal : 1;                                // 0x0174 (0x0004) [0x0000000000000000] [0x00000004] 
	uint32_t                                           bShouldRunAutoSignin : 1;                      // 0x0174 (0x0004) [0x0000000000000000] [0x00000008] 
	uint32_t                                           bInitialFrontendOpening : 1;                   // 0x0174 (0x0004) [0x0000000000000000] [0x00000010] 
	class TArray<uint8_t>                              TitleFileCache;                                // 0x0178 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<struct FScriptDelegate>               DownloadPatcherFilesCompleteDelegates;         // 0x0188 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UPoplarOnlineClientPlayerService*            ClientPlayerService;                           // 0x0198 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarOnlineClientItemService*              ClientItemService;                             // 0x01A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarOnlineClientPresenceService*          ClientPresenceService;                         // 0x01A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FPendingUserStartupWork>       PendingStartupWork;                            // 0x01B0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UWillowGFxDialogBox*                         ErrorDlg;                                      // 0x01C0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class FString                                      ReturnToTitleReason;                           // 0x01C8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	int32_t                                            BlockingMessageId;                             // 0x01D8 (0x0004) [0x0000000000000000]               
	class TArray<struct FUniqueNetId>                  ReportedIDs;                                   // 0x01E0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnDownloadPatcherFilesComplete__Delegate;    // 0x01F0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPlayerManager");
		}

		return uClassPointer;
	};

	void RaisePlayerLeft(const struct FPlatformUserId& UserId);
	void RaisePlayerJoined(const struct FPlatformUserId& UserId);
	static bool IsLocalPlayerId(const struct FUniqueNetId& UniqueId);
	static bool IsLobbyLeader();
	static bool CanKick(const struct FPlatformUserId& UserId, const struct FUniqueNetId& UniqueId, bool bIsMatchmaking);
	static bool CanUnmute(const struct FPlatformUserId& UserId, const struct FUniqueNetId& UniqueId);
	static bool eventIsPlayerMuted(const struct FPlatformUserId& UserId, const struct FUniqueNetId& UniqueId);
	static bool CanMute(const struct FPlatformUserId& UserId, const struct FUniqueNetId& UniqueId);
	static bool CanViewGamercard(const struct FPlatformUserId& UserId, const struct FUniqueNetId& UniqueId);
	bool CanInvite(const struct FUniqueNetId& UniqueId, bool bIsMatchmaking, class TArray<struct FOnlineFriend>& OnlineFriends);
	bool CanJoin(const struct FUniqueNetId& UniqueId, class TArray<struct FOnlineFriend>& OnlineFriends);
	static bool IsInCurrentGame(const struct FUniqueNetId& UniqueId);
	static bool GetFriend(const class TArray<struct FOnlineFriend>& OnlineFriends, const struct FUniqueNetId& UniqueId, struct FOnlineFriend& out_Friend);
	bool GetShouldRunAutoSignin();
	void SetShouldRunAutoSignin(bool bValue);
	bool GetSkipLegalScreen();
	void SetSkipLegalScreen(bool bValue);
	class FString GetReturnedToTitleReason();
	void SetReturnedToTitleReason(const class FString& Reason);
	void ClearPendingWork(const struct FPlatformUserId& UserId);
	bool IsEntitlementsUpdatedPending(const struct FPlatformUserId& UserId);
	bool IsReadProfilePending(const struct FPlatformUserId& UserId);
	bool IsSparkInitializedPending(const struct FPlatformUserId& UserId, EInitializedResult& InitResult, class UGearboxData*& Data);
	void EnqueueEntitlementsUpdated(const struct FPlatformUserId& UserId);
	void EnqueueSparkInitialized(const struct FPlatformUserId& UserId, EInitializedResult InitResult, class UGearboxData* Data);
	void EnqueueReadProfile(const struct FPlatformUserId& UserId);
	int32_t AddPendingStartupWork(const struct FPlatformUserId& UserId);
	int32_t GetPendingStartupWorkIndex(const struct FPlatformUserId& UserId);
	void ClearDownloadPatcherFilesCompleteDelegate(const struct FScriptDelegate& DownloadPatcherFilesCompleteDelegate);
	void AddDownloadPatcherFilesCompleteDelegate(const struct FScriptDelegate& DownloadPatcherFilesCompleteDelegate);
	void DownloadPatcherFilesComplete();
	void OnDownloadedPatcherFile(bool bWasSuccessful);
	void OnDownloadPatcherFilesComplete();
	void HandleDownloadPatcherFileResponse(struct FSparkResult& Result);
	void DownloadPatcherFiles(const struct FPlatformUserId& UserId);
	bool HasDownloadedPatcherFile();
	void StartupProcessUpdated(const struct FPlatformUserId& UserId, bool bPaused, int32_t NewState);
	void TriggerCompletionDelegate(const struct FPlatformUserId& UserId, bool bWasSuccessful);
	bool AuthenticationErrorDialogCallback(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId);
	bool ErrorDialogCallback(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId);
	class FString GetServiceErrorDescription(int32_t ServiceErrorCode);
	class FString GetGenericErrorDescription(int32_t ErrorCode);
	class FString GetErrorStepName(int32_t ErrorStep);
	void ShowServiceError(int32_t ErrorStep, int32_t ErrorCode);
	void ShowStepError(int32_t ErrorStep, int32_t ErrorCode);
	void ShowProfileError(int32_t ErrorCode);
	void ShowCheckPatchError(int32_t ErrorCode);
	void ShowPermissionsError(int32_t ErrorCode);
	void ShowAcceptDeclineAgreementsError(int32_t ErrorCode);
	void ShowGenericError(int32_t ErrorCode);
	void DisplayOkBox(const class FString& File, const class FString& Section);
	void StartupProcessComplete(const struct FPlatformUserId& UserId, bool bWasSuccessful, int32_t ErrorStep, int32_t ErrorCode);
	class APoplarPlayerController* GetUIPlayerController(const struct FPlatformUserId& UserId);
	void CleanUpErrorDialog();
	void ClearPlayerInitialization(const struct FPlatformUserId& UserId, int32_t ErrorCode);
	int32_t GetInitializedPlayerIndex(const struct FPlatformUserId& UserId);
	void ClearOnlineDelegates();
	void RegisterOnlineDelegates();
	void OnSystemResume();
	void OnServiceStatusChange(bool bIsConnected);
	void OnLinkStatusChanged(bool bIsConnected);
	void OnLoginStatusChanged(const struct FPlatformUserId& UserId, ELoginStatus PreviousStatus, ELoginStatus NewStatus, const struct FUniqueNetId& PreviousId, const struct FUniqueNetId& NewId);
};

// Class PoplarGame.PoplarPlayerNameIdentifierDefinition
// 0x01D8 (0x00C0 - 0x0298)
class UPoplarPlayerNameIdentifierDefinition : public UPlayerNameIdentifierDefinition
{
public:
	struct FPmtData                                    PmtData;                                       // 0x00C0 (0x0028) [0x0000000000003000] (CPF_Native | CPF_Transient)
	uint32_t                                           bAvailableAsPlayerBot : 1;                     // 0x00E8 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	class UCharacterStatDimensionValueDefinition*      StatDimensionValue;                            // 0x00F0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarMetaLoadoutDefinition*                LoadoutItem;                                   // 0x00F8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class FString                                      LocalizedCharacterBiography;                   // 0x0100 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class UPoplarCharacterRoleDefinition*              CharacterRole;                                 // 0x0110 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class USwfMovie*                                   CharacterSelectIconGFxMovie;                   // 0x0118 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class USwfMovie*                                   CharacterSelectBigIconGFxMovie;                // 0x0120 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class USwfMovie*                                   CharacterHUDIconGFxMovie;                      // 0x0128 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class USwfMovie*                                   CharacterSelectCircleIconGfxMovie;             // 0x0130 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class USwfMovie*                                   CharacterMetaMarketplaceIconGFxMovie;          // 0x0138 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class USwfMovie*                                   CharacterSkillGFxMovie[0x6];                   // 0x0140 (0x0030) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class FString                                      CharacterActionSkillName[0x4];                 // 0x0170 (0x0040) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CharacterActionSkillDescription[0x4];          // 0x01B0 (0x0040) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class UPoplarCharacterAdjectiveDefinition*         CharacterAdjectives[0x3];                      // 0x01F0 (0x0018) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class USwfMovie*                                   CharacterSkill0GFxMovie;                       // 0x0208 (0x0008) [0x0000000020000002] (CPF_Const | CPF_Deprecated)
	class USwfMovie*                                   CharacterSkill1GFxMovie;                       // 0x0210 (0x0008) [0x0000000020000002] (CPF_Const | CPF_Deprecated)
	class USwfMovie*                                   CharacterSkill2GFxMovie;                       // 0x0218 (0x0008) [0x0000000020000002] (CPF_Const | CPF_Deprecated)
	class USwfMovie*                                   CharacterSkill3GFxMovie;                       // 0x0220 (0x0008) [0x0000000020000002] (CPF_Const | CPF_Deprecated)
	class USwfMovie*                                   CharacterSkill4GFxMovie;                       // 0x0228 (0x0008) [0x0000000020000002] (CPF_Const | CPF_Deprecated)
	class USwfMovie*                                   CharacterSkill5GFxMovie;                       // 0x0230 (0x0008) [0x0000000020000002] (CPF_Const | CPF_Deprecated)
	class USwfMovie*                                   CharacterScoreboardIconSwfMovie;               // 0x0238 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class USwfMovie*                                   BattlebornPortraitGFxMovie;                    // 0x0240 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarFactionDefinition*                    Faction;                                       // 0x0248 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarMinimapIconType*                      CharacterMinimapIcon;                          // 0x0250 (0x0008) [0x0000000004000003] (CPF_Edit | CPF_Const | CPF_EditInline)
	class UPoplarMinimapIconType*                      DeadCharacterMinimapIcon;                      // 0x0258 (0x0008) [0x0000000004000003] (CPF_Edit | CPF_Const | CPF_EditInline)
	class FString                                      DefaultSkinName;                               // 0x0260 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      DefaultSkinDescription;                        // 0x0270 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class USwfMovie*                                   DefaultSkinIcon;                               // 0x0280 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FPoplarStatSpecification                    StatSpec;                                      // 0x0288 (0x0010) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPlayerNameIdentifierDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarPlayerReplicationInfo
// 0x0B38 (0x0768 - 0x12A0)
class APoplarPlayerReplicationInfo : public AWillowPlayerReplicationInfo
{
public:
	struct FPointer                                    VfTable_IIAugmentable;                         // 0x0768 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIBehaviorConsumer;                    // 0x0770 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class APoplarPlayerStateInfo*                      PoplarPSI;                                     // 0x0778 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	uint32_t                                           bNPC : 1;                                      // 0x0780 (0x0004) [0x0000000000000020] [0x00000001] (CPF_Net)
	uint32_t                                           bDigitalDelux : 1;                             // 0x0780 (0x0004) [0x0000000000000020] [0x00000002] (CPF_Net)
	uint32_t                                           bRanStartMatchBehaviors : 1;                   // 0x0780 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           bCreatedTestLoadouts : 1;                      // 0x0780 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	uint32_t                                           bStatsInitialized : 1;                         // 0x0780 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	uint32_t                                           bShowingTeamClashStandIn : 1;                  // 0x0780 (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	uint32_t                                           bPlayBrowsingTaunt : 1;                        // 0x0780 (0x0004) [0x0000000100000020] [0x00000040] (CPF_Net)
	uint32_t                                           bIsBrowsingSkins : 1;                          // 0x0780 (0x0004) [0x0000000000002000] [0x00000080] (CPF_Transient)
	uint32_t                                           bIsPvEMatch : 1;                               // 0x0780 (0x0004) [0x0000000000002020] [0x00000100] (CPF_Net | CPF_Transient)
	uint32_t                                           bBehaviorProvidersInitialized : 1;             // 0x0780 (0x0004) [0x0000000000002000] [0x00000200] (CPF_Transient)
	uint32_t                                           bNeedsToCastSurrenderVote : 1;                 // 0x0780 (0x0004) [0x0000000000000020] [0x00000400] (CPF_Net)
	class APoplarPlayerReplicationInfo*                BotOwnerPRI;                                   // 0x0788 (0x0008) [0x0000000000000020] (CPF_Net)     
	int32_t                                            BotDifficulty;                                 // 0x0790 (0x0004) [0x0000000000000020] (CPF_Net)     
	class APoplarAlertPoint*                           MyAlertPoint;                                  // 0x0798 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	int32_t                                            KillStreakCount;                               // 0x07A0 (0x0004) [0x4000000000000000]               
	int32_t                                            AssistStreakCount;                             // 0x07A4 (0x0004) [0x4000000000000000]               
	int32_t                                            TempCharacterSelectIndex;                      // 0x07A8 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            LastPlayerKillOrAssistTruncatedCreditsAwarded; // 0x07AC (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              AssistCreditsBonusPercent;                     // 0x07B0 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              AssistCreditsBonusPercentBaseValue;            // 0x07B4 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            AssistCreditsBonusPercentModifierStack;        // 0x07B8 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	class TArray<class UStatDefinition*>               CreditsEarnedStatList;                         // 0x07C8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UStatDefinition*                             MatchCreditsEarnedStat;                        // 0x07D8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UStatDefinition*                             MatchCreditsSpentStat;                         // 0x07E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UStatDefinition*                             CreditsEarnedPerMinStat;                       // 0x07E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UStatDefinition*                             MatchPlayerScoreStat;                          // 0x07F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UStatDefinition*                             MatchTeamBonusScoreStat;                       // 0x07F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UStatDefinition*                             MaxCreditsOnHandStat;                          // 0x0800 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UStatDefinition*                             FriendlyTeamScoreStat;                         // 0x0808 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UStatDefinition*                             EnemyTeamScoreStat;                            // 0x0810 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            FinalFriendlyTeamScore;                        // 0x0818 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            FinalEnemyTeamScore;                           // 0x081C (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              XPEarned;                                      // 0x0820 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              XPEarnedPerMin;                                // 0x0824 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              XPPercentToNextLevel;                          // 0x0828 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TrickleXP;                                     // 0x082C (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FPointer                                    CreditsStatTracker;                            // 0x0830 (0x0008) [0x0000000000001000] (CPF_Native)  
	struct FPointer                                    XPStatTracker;                                 // 0x0838 (0x0008) [0x0000000000001000] (CPF_Native)  
	struct FResourcePoolReference                      EnergyPool;                                    // 0x0840 (0x0018) [0x0000002000000020] (CPF_Net)     
	class UPoplarUnitTypeDefinition*                   UnitTypeDefinition;                            // 0x0858 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class APoplarStatReplicationInfo*                  StatReplicationInfo;                           // 0x0860 (0x0008) [0x0000000100000020] (CPF_Net)     
	struct FPoplarChallengeLevelData                   PinnedChallengeHistory[0x5];                   // 0x0868 (0x0280) [0x0000000100400020] (CPF_Net | CPF_NeedCtorLink)
	int32_t                                            CurrentPinnedChallengeIndex;                   // 0x0AE8 (0x0004) [0x0000000000000000]               
	int32_t                                            NumMultiKills;                                 // 0x0AEC (0x0004) [0x0000000000000000]               
	float                                              LastKillTime;                                  // 0x0AF0 (0x0004) [0x0000000000000000]               
	int32_t                                            MultiKillStreak;                               // 0x0AF4 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            NumMultiAssists;                               // 0x0AF8 (0x0004) [0x0000000000000000]               
	float                                              LastAssistTime;                                // 0x0AFC (0x0004) [0x0000000000000000]               
	int32_t                                            MultiAssistStreak;                             // 0x0B00 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            NumHighElevationKills;                         // 0x0B04 (0x0004) [0x0000000000000000]               
	float                                              HighElevationThreshold;                        // 0x0B08 (0x0004) [0x0000000000000000]               
	int32_t                                            NumMeleeKills;                                 // 0x0B0C (0x0004) [0x0000000000000000]               
	int32_t                                            NumMeleeDeaths;                                // 0x0B10 (0x0004) [0x0000000000000000]               
	int32_t                                            NumRevengeDeaths;                              // 0x0B14 (0x0004) [0x0000000000000000]               
	class APoplarPlayerReplicationInfo*                NemesisPRIArray[0x5];                          // 0x0B18 (0x0028) [0x0000000000002020] (CPF_Net | CPF_Transient)
	uint8_t                                           UnknownData00[0x50];                           // 0x0B40 (0x0050) UNKNOWN PROPERTY: MapProperty PoplarGame.PoplarPlayerReplicationInfo.VictimsMap
	class APoplarPlayerReplicationInfo*                LastKilledPRI;                                 // 0x0B90 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarPlayerReplicationInfo*                RevengePRI;                                    // 0x0B98 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FManagedActorCountData                      ManagedActorCounts[0x3];                       // 0x0BA0 (0x0030) [0x0000000000002020] (CPF_Net | CPF_Transient)
	float                                              LastDamagedPlayerTime;                         // 0x0BD0 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint8_t                                            ReplicatedRespawnTimeRemaining;                // 0x0BD4 (0x0001) [0x0000000100002020] (CPF_Net | CPF_Transient)
	uint8_t                                            LocalInitialRespawnTime;                       // 0x0BD5 (0x0001) [0x0000000000002000] (CPF_Transient)
	ECharacterMenuSelectionState                       CharacterSelectionState;                       // 0x0BD6 (0x0001) [0x0000000100000020] (CPF_Net)     
	float                                              ServerRespawnTimeRemaining;                    // 0x0BD8 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              LocalRespawnTimeRemaining;                     // 0x0BDC (0x0004) [0x0000000000002000] (CPF_Transient)
	class UPoplarHotSpot*                              AIHotSpot;                                     // 0x0BE0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UUtilityDefinition*                          HotSpotUtilityDef;                             // 0x0BE8 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            ActivatedPerkFlags[0x3];                       // 0x0BF0 (0x000C) [0x0000000000002020] (CPF_Net | CPF_Transient)
	struct FReplicatedPerkItem                         Perks[0x3];                                    // 0x0C00 (0x0168) [0x0000000100402020] (CPF_Net | CPF_Transient | CPF_NeedCtorLink)
	float                                              TotalPhysicalDamageReceived;                   // 0x0D68 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TotalTrueDamageReceived;                       // 0x0D6C (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TotalHealingDamageReceived;                    // 0x0D70 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TotalShieldDamageReceived;                     // 0x0D74 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TotalOvershieldDamageReceived;                 // 0x0D78 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TotalShieldHealingDamageReceived;              // 0x0D7C (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TotalOvershieldHealingDamageReceived;          // 0x0D80 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CumulativeDamageReceived;                      // 0x0D84 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CumulativeDamageGiven;                         // 0x0D88 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TotalPhysicalDamageGiven;                      // 0x0D8C (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TotalTrueDamageGiven;                          // 0x0D90 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TotalHealingDamageGiven;                       // 0x0D94 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TotalShieldDamageGiven;                        // 0x0D98 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TotalOvershieldDamageGiven;                    // 0x0D9C (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TotalShieldHealingDamageGiven;                 // 0x0DA0 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TotalOvershieldHealingDamageGiven;             // 0x0DA4 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UStatDefinition*                             TotalPhysicalDamageReceivedStat;               // 0x0DA8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UStatDefinition*                             TotalTrueDamageReceivedStat;                   // 0x0DB0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UStatDefinition*                             TotalHealingDamageReceivedStat;                // 0x0DB8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UStatDefinition*                             TotalShieldDamageReceivedStat;                 // 0x0DC0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UStatDefinition*                             TotalOvershieldDamageReceivedStat;             // 0x0DC8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UStatDefinition*                             TotalShieldHealingDamageReceivedStat;          // 0x0DD0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UStatDefinition*                             TotalOvershieldHealingDamageReceivedStat;      // 0x0DD8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UStatDefinition*                             CumulativeDamageReceivedStat;                  // 0x0DE0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UStatDefinition*                             CumulativeDamageGivenStat;                     // 0x0DE8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UStatDefinition*                             MaxCumulativeDamageTakenStat;                  // 0x0DF0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UStatDefinition*                             MaxCumulativeDamageDealtStat;                  // 0x0DF8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UStatDefinition*                             MaxCumulativeHealingGivenStat;                 // 0x0E00 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UStatDefinition*                             TotalPhysicalDamageGivenStat;                  // 0x0E08 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UStatDefinition*                             TotalTrueDamageGivenStat;                      // 0x0E10 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UStatDefinition*                             TotalHealingDamageGivenStat;                   // 0x0E18 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UStatDefinition*                             TotalShieldDamageGivenStat;                    // 0x0E20 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UStatDefinition*                             TotalOvershieldDamageGivenStat;                // 0x0E28 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UStatDefinition*                             TotalShieldHealingDamageGivenStat;             // 0x0E30 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UStatDefinition*                             TotalOvershieldHealingDamageGivenStat;         // 0x0E38 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UStatDefinition*                             CriticalHitsReceivedStat;                      // 0x0E40 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UStatDefinition*                             CriticalHitsGivenStat;                         // 0x0E48 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UStatDefinition*                             ShouldTeleportToBaseStat;                      // 0x0E50 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UStatDefinition*                             TeleportedToBaseStat;                          // 0x0E58 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              NearDeathTeleportThreshold;                    // 0x0E60 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              OvershieldStrength;                            // 0x0E64 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	float                                              MaxOvershieldValue;                            // 0x0E68 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class UPlayerNameIdentifierDefinition*             BrowseCharacterNameIdDef;                      // 0x0E70 (0x0008) [0x0000000100002020] (CPF_Net | CPF_Transient)
	class UPoplarMetaSkinDefinition*                   BrowseSkinIdDef;                               // 0x0E78 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarMetaSkinDefinition*                   SkinIdDef;                                     // 0x0E80 (0x0008) [0x0000000100002020] (CPF_Net | CPF_Transient)
	struct FAugSetInstance                             Augs;                                          // 0x0E88 (0x0378) [0x0000002000000020] (CPF_Net)     
	class FString                                      UpgradedAugListString;                         // 0x1200 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FBehaviorConsumerHandle                     ConsumerHandle;                                // 0x1210 (0x0004) [0x0000000000000000]               
	struct FReplicatedBehaviorConsumerState            ReplicatedBehaviorConsumerState;               // 0x1214 (0x000C) [0x0000000100000020] (CPF_Net)     
	struct FReplicatedBehaviorEvent                    ReplicatedBehaviorEvent;                       // 0x1220 (0x0010) [0x0000000100000020] (CPF_Net)     
	class TArray<class UIMetaLoadoutObserver*>         LoadoutObservers;                              // 0x1230 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FCinematicModeOptions                       ReplicatedCinematicModeOptions;                // 0x1240 (0x0008) [0x0000000100002020] (CPF_Net | CPF_Transient)
	float                                              TimePlayed;                                    // 0x1248 (0x0004) [0x0000000000003000] (CPF_Native | CPF_Transient)
	float                                              TimeSinceLastTryGetName;                       // 0x124C (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TryGetNameDelay;                               // 0x1250 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CreditsReceivedScalar;                         // 0x1254 (0x0004) [0x4000000000000000]               
	float                                              CreditsSharedScalar;                           // 0x1258 (0x0004) [0x4000000000000000]               
	class UPoplarPlayerWearableDefinition*             SavedCurrentWearableDefinitions[0x3];          // 0x1260 (0x0018) [0x0000000000002000] (CPF_Transient)
	class UPoplarPlayerWearableDefinition*             CurrentWearableDefinitions[0x3];               // 0x1278 (0x0018) [0x0000000000002020] (CPF_Net | CPF_Transient)
	float                                              HealthLostPctOnDisconnect;                     // 0x1290 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              ShieldLostPctOnDisconnect;                     // 0x1294 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              OvershieldOnDisconnect;                        // 0x1298 (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPlayerReplicationInfo");
		}

		return uClassPointer;
	};

	void IncrementShouldTeleportBackToBaseStat();
	void SetFinalTeamScores(int32_t InFinalFriendlyTeamScore, int32_t InFinalEnemyTeamScore);
	void ServerReadyToStartCharacterIntros();
	bool IsNPC();
	void ServerPlayCharacterSelectTaunt();
	void eventServerSetPlayerName(const class FString& NewPlayerName, const class FString& NewPlayerNameHTML);
	bool OnConfirmCharacterSelection(class UWillowGFxDialogBox* DialogBox, struct FPlatformUserId& UserId);
	void SetupTeamStats();
	void OnRep_ReplicatedCinematicModeOptions(const struct FCinematicModeOptions& PreviousReplicatedCinematicModeOptions);
	void OnRep_bPlayBrowsingTaunt(bool PreviousbPlayBrowsingTaunt);
	void OnRep_PinnedChallengeHistory(int32_t ArrayIndex, const struct FPoplarChallengeLevelData& PreviousState);
	void OnRep_Perks(int32_t ArrayIndex, const struct FReplicatedPerkItem& PreviousState);
	void OnRep_ReplicatedRespawnTimeRemaining(uint8_t PreviousReplicatedRespawnTimeRemaining);
	void OnRep_Team(class ATeamInfo* PreviousTeam);
	void ServerSetCharacterSelectionState(ECharacterMenuSelectionState NewState);
	struct FBehaviorConsumerHandle GetBehaviorConsumerHandle();
	void eventIncrementDeaths(int32_t optionalAmt);
	void UnregisterPlayerFromSession();
	void ResetAugs();
	void eventServerTryBuyNextTierForAugmentation(class UPoplarAugDefinition* AugDef);
	int32_t TryBuyNextTierForAugmentation(class UPoplarAugDefinition* AugDef);
	EShopAugmentationType GetShopType();
	void InitializeAugmentations(class UPoplarAugSet* AugSetDef);
	void SetCharacterSkinIdDef(class UPoplarMetaSkinDefinition* InSkinIdDef);
	void SetPlayerTeam(class ATeamInfo* NewTeam);
	void ClientInitialize(class AController* C);
	void eventExpLevelUp(bool optionalBCheated);
	void eventExpSetLevel(int32_t NewLevel, bool optionalBAwardSkillPoints, bool optionalBFeedback);
	static void CheckForCausedPlayerDamage(class AController* InstigatedBy, class APawn* DamagedPawn);
	void eventPostBeginPlay();
	void AddCurrencyOnHand(ECurrencyType FormOfCurrency, float AddValue);
	void SetCurrencyOnHand(ECurrencyType FormOfCurrency, float NewValue);
	class APoplarMetaPlayerReplicationInfo* GetMetaPRI();
	void SetMetaPRI(const struct FUniqueNetId& PlayerUniqueId);
	void SetUniqueId(const struct FUniqueNetId& PlayerUniqueId);
	void HandlePlayerJoinWithValidName();
	void CopyProperties(class APlayerReplicationInfo* PRI);
	void SeamlessTravelTo(class APlayerReplicationInfo* NewPRI);
	bool AreRequirementsMetToSpawnCharacter();
	static void DisplayManagedActorDebug(class AHUD* HUD, float& out_YL, float& out_YPos);
	static void DisplayCreditsDebug(class AHUD* HUD, float& out_YL, float& out_YPos);
	static void DisplayExperienceDebug(class AHUD* HUD, float& out_YL, float& out_YPos);
	void eventSetCharacterNameIdDef(class UPlayerNameIdentifierDefinition* NameIDDef);
	void eventDestroyed();
	void eventReplicatedEvent(const struct FName& VarName);
};

// Class PoplarGame.PoplarPlayerReplicationInfoFrontend
// 0x0000 (0x12A0 - 0x12A0)
class APoplarPlayerReplicationInfoFrontend : public APoplarPlayerReplicationInfo
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPlayerReplicationInfoFrontend");
		}

		return uClassPointer;
	};

	void eventPostBeginPlay();
	void SetMetaPRI(const struct FUniqueNetId& PlayerUniqueId);
};

// Class PoplarGame.PoplarPlayerSkillTree
// 0x0010 (0x0108 - 0x0118)
class UPoplarPlayerSkillTree : public UPlayerSkillTree
{
public:
	class UISkillInstigator*                           SkillInstigatorOwner_Object;                   // 0x0108 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UISkillInstigator*                           SkillInstigatorOwner_Interface;                // 0x0110 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPlayerSkillTree");
		}

		return uClassPointer;
	};

	void AutoActivatePassiveSkills();
	void PlayerLeveledUp(int32_t NewExpLevel);
	bool UpgradeSkill(class USkillDefinition* Skill);
};

// Class PoplarGame.PoplarPlayerStandIn
// 0x1E78 (0x0240 - 0x20B8)
class APoplarPlayerStandIn : public APlayerStandIn
{
public:
	struct FPointer                                    VfTable_IIBodyCompositionInstance;             // 0x0240 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIStreamingDataEvent;                  // 0x0248 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IITeamAffiliated;                      // 0x0250 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIInventoryOwner;                      // 0x0258 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_ISpecialMoveInterface;                 // 0x0260 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIBehaviorConsumer;                    // 0x0268 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIInstanceData;                        // 0x0270 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIFeatureConsumer;                     // 0x0278 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIFeatureProvider;                     // 0x0280 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIFoleySystemBehavior;                 // 0x0288 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIAkMixControlProvider;                // 0x0290 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIViewTarget;                          // 0x0298 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIBuffable;                            // 0x02A0 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_FFoleyImplementer;                     // 0x02A8 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	int32_t                                            PlayerIndex;                                   // 0x02B0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              NormalizedCharacterHeight;                     // 0x02B4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bDisplayGear : 1;                              // 0x02B8 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	uint32_t                                           bGroundPivot : 1;                              // 0x02B8 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	uint32_t                                           bOverrideLightingChannels : 1;                 // 0x02B8 (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	uint32_t                                           bMuteAudio : 1;                                // 0x02B8 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	uint32_t                                           bWaitingForClassDataRequest : 1;               // 0x02B8 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	uint32_t                                           bWaitingForSkinDataRequest : 1;                // 0x02B8 (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	uint32_t                                           bCalledStartLoadingEvent : 1;                  // 0x02B8 (0x0004) [0x0000000000002000] [0x00000040] (CPF_Transient)
	uint32_t                                           bDelaySkinStreaming : 1;                       // 0x02B8 (0x0004) [0x0000000000002000] [0x00000080] (CPF_Transient)
	uint32_t                                           bPendingPlayTaunt : 1;                         // 0x02B8 (0x0004) [0x0000000000002000] [0x00000100] (CPF_Transient)
	uint32_t                                           bDisplayingDefaultIcon : 1;                    // 0x02B8 (0x0004) [0x0000000000002000] [0x00000200] (CPF_Transient)
	uint32_t                                           bRotatingStandIn : 1;                          // 0x02B8 (0x0004) [0x0000000000002000] [0x00000400] (CPF_Transient)
	uint32_t                                           bRotateRight : 1;                              // 0x02B8 (0x0004) [0x0000000000002000] [0x00000800] (CPF_Transient)
	uint32_t                                           bDigitalDelux : 1;                             // 0x02B8 (0x0004) [0x0000000000002000] [0x00001000] (CPF_Transient)
	uint32_t                                           bShouldPlaySpawnAudio : 1;                     // 0x02B8 (0x0004) [0x0000000000002000] [0x00002000] (CPF_Transient)
	EPlayerStandInType                                 StandInType;                                   // 0x02BC (0x0001) [0x0000000000000001] (CPF_Edit)    
	class UPoplarPlayerStandInDefinition*              StandInDefinition;                             // 0x02C0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FLightingChannelContainer                   OverriddenLightingChannels;                    // 0x02C8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class APoplarPlayerReplicationInfo*                OwningPRI;                                     // 0x02D0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FBehaviorConsumerHandle                     ConsumerHandle;                                // 0x02D8 (0x0004) [0x0000000000002000] (CPF_Transient)
	class USpecialMoveComponent*                       SMComponent;                                   // 0x02E0 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	class ULightEnvironmentComponent*                  LightEnvironment;                              // 0x02E8 (0x0008) [0x0000000004080008] (CPF_ExportObject | CPF_Component | CPF_EditInline)
	int32_t                                            CurrentState;                                  // 0x02F0 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            DesiredState;                                  // 0x02F4 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            NextState;                                     // 0x02F8 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CurrentTransitionState;                        // 0x02FC (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              PrevScale;                                     // 0x0300 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UPoplarPlayerNameIdentifierDefinition*       CharacterNameIdDef;                            // 0x0308 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarMetaSkinDefinition*                   SkinIdDef;                                     // 0x0310 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarMetaTauntDefinition*                  TauntDef;                                      // 0x0318 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarPlayerClassDefinition*                PlayerClass;                                   // 0x0320 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarPlayerClassStandInDefinition*         PlayerClassStandIn;                            // 0x0328 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarSkinDefinition*                       PlayerSkin;                                    // 0x0330 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarSpecialMove_Taunt*                    PlayerTaunt;                                   // 0x0338 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              LastClassDataRequestTimeStamp;                 // 0x0340 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              LastSkinDataRequestTimeStamp;                  // 0x0344 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              LastTauntDataRequestTimeStamp;                 // 0x0348 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UPoplarPlayerClassDefinition*                PendingPlayerClass;                            // 0x0350 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarPlayerClassStandInDefinition*         PendingPlayerClassStandIn;                     // 0x0358 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarSkinDefinition*                       PendingPlayerSkin;                             // 0x0360 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarPlayerNameIdentifierDefinition*       DesiredCharacterNameIdDef;                     // 0x0368 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarMetaSkinDefinition*                   DesiredSkinIdDef;                              // 0x0370 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarMetaTauntDefinition*                  DesiredTauntDef;                               // 0x0378 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarBodyClassDefinition*                  BodyClass;                                     // 0x0380 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UBodyProviderDefinition*                     BodyProvider;                                  // 0x0388 (0x0008) [0x0000000000002000] (CPF_Transient)
	class USkeletalMeshComponent*                      PlayerMeshComp;                                // 0x0390 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class UCylinderComponent*                          BodyCylinderComponent;                         // 0x0398 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	float                                              AppliedNormalizedCharacterHeight;              // 0x03A0 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     BodyMeshOffset;                                // 0x03A4 (0x000C) [0x0000000000002000] (CPF_Transient)
	class APoplarWeaponStandIn*                        Weapon[0x2];                                   // 0x03B0 (0x0010) [0x0000000000002000] (CPF_Transient)
	struct FInstanceData2                              InstanceState;                                 // 0x03C0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FCompressedBodyState2                       CompressedBodyState;                           // 0x03D0 (0x0010) [0x0000000000002000] (CPF_Transient)
	float                                              PreviewYaw;                                    // 0x03E0 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              RotationAccelerationTime;                      // 0x03E4 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              GamepadDelta;                                  // 0x03E8 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              SavedAnimTime;                                 // 0x03EC (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FSpecialMoveData                            SavedAnimData;                                 // 0x03F0 (0x0038) [0x0000000000002000] (CPF_Transient)
	struct FAkPlayingInfo                              SpawnAudioPlayingInfo;                         // 0x0428 (0x0010) [0x0000000000082000] (CPF_Transient | CPF_Component)
	struct FFeatureConsumerState                       FeatureConsumerState;                          // 0x0438 (0x0028) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UFeatureProviderDefinition*                  FeatureProviderDefinition;                     // 0x0460 (0x0008) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FScriptDelegate>               StandInCharacterLoadedDelegates;               // 0x0468 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UBuffComponent*                              BuffComponent;                                 // 0x0478 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	struct FBuffInfo                                   ReplicatedBuffs[0x32];                         // 0x0480 (0x1C20) [0x0000000100402020] (CPF_Net | CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            ReplicatedBuffsArraySize;                      // 0x20A0 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FScriptDelegate                             __StandInCharacterLoadComplete__Delegate;      // 0x20A8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPlayerStandIn");
		}

		return uClassPointer;
	};

	void eventServerSpecialMove_StopAny(bool optionalBClearQueue, bool optionalBInterrupted);
	void eventServerSpecialMove_Stop(class USpecialMoveDefinition* OldSMD, bool optionalBClearQueue, bool optionalBInterrupted);
	void eventTick(float DeltaTime);
	void eventServerSpecialMove_Queue(class USpecialMoveDefinition* NewSMD, float optionalPlayRateScale, float optionalDuration, const struct FName& optionalCallbackName, class UObject* optionalCallbackObject, class UObject* optionalData, bool optionalBSendCallbackAtEndOfSequence, bool optionalBStartOfSequence);
	void eventServerSpecialMove_Play(class USpecialMoveDefinition* NewSMD, float optionalPlayRateScale, float optionalDuration, const struct FName& optionalCallbackName, class UObject* optionalCallbackObject, class UObject* optionalData, bool optionalBSendCallbackAtEndOfSequence);
	void SetReplicatedSMData(bool optionalBInterrupted, struct FSpecialMoveData& NewSMData);
	ERootMotionRotationMode GetDefaultRootMotionRotationMode();
	ERootMotionMode GetDefaultRootMotionMode();
	class USkeletalMeshComponent* GetSkelMesh();
	class USpecialMoveComponent* GetSMComponent();
	class AActor* GetActor();
	bool GetInstanceDataState(struct FInstanceData2& OutInstanceDataState);
	bool eventRemoveInstanceData(const struct FName& DataName);
	bool eventGetInstanceData(const struct FName& DataName, class TArray<struct FInstanceDataItem2>& InstanceData);
	bool eventSetInstanceData(const struct FInstanceDataItem2& InstanceData, bool optionalBAllowDuplicateNames);
	struct FBehaviorConsumerHandle GetBehaviorConsumerHandle();
	void StopPlayingAudio();
	void CustomSMDFinished(bool bInterrupted);
	void TransitionFinished(bool bInterrupted);
	void Refresh();
	void SetupTauntDelayed();
	void SetupForPlayerDelayed();
	void eventAttach(class AActor* Other);
	void eventDestroyed();
	void eventPostBeginPlay();
	class UPoplarTeamDefinition* GetPoplarTeamDefinition();
	void SetPoplarTeamInfo(class APoplarTeamInfo* InTeamInfo);
	class APoplarTeamInfo* GetPoplarTeamInfo();
	void ForceColorRefresh();
	class UGBXDefinition* GetTeamDefinition();
	void SetTeamInfo(class ATeamInfo* InTeamInfo);
	class ATeamInfo* GetTeamInfo();
	void StandInCharacterLoadComplete(class APoplarPlayerStandIn* StandIn);
};

// Class PoplarGame.PoplarPlayerStandInDefinition
// 0x0028 (0x0058 - 0x0080)
class UPoplarPlayerStandInDefinition : public UGBXDefinition
{
public:
	struct FPointer                                    VfTable_IIBehaviorProvider;                    // 0x0058 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class USkeletalMeshComponent*                      DefaultIcon;                                   // 0x0060 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class TArray<struct FPlayerStandInState>           States;                                        // 0x0068 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class UBehaviorProviderDefinition*                 BehaviorProviderDefinition;                    // 0x0078 (0x0008) [0x0000000000000002] (CPF_Const)   

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPlayerStandInDefinition");
		}

		return uClassPointer;
	};

	void SetSpawnParticleVisibility(bool bVisible, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnStopLoading(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnStartLoading(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnEnterState(const struct FName& SpecializedEventName, struct FBehaviorConsumerHandle& ConsumerHandle);
};

// Class PoplarGame.PoplarPlayerStart
// 0x0058 (0x0270 - 0x02C8)
class APoplarPlayerStart : public APlayerStart
{
public:
	struct FPointer                                    VfTable_IIPoplarSpawner;                       // 0x0270 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UPoplarTeamDefinition*                       Team;                                          // 0x0278 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarLaneDefinition*                       Lane;                                          // 0x0280 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarSpawnerTypeDefinition*                SpawnerDef;                                    // 0x0288 (0x0008) [0x0000000000000001] (CPF_Edit)    
	int32_t                                            SpawnerIndex;                                  // 0x0290 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int32_t                                            SpawnLevel;                                    // 0x0294 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UIPoplarSpawner*                             MyBase_Object;                                 // 0x0298 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UIPoplarSpawner*                             MyBase_Interface;                              // 0x02A0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<class UIPoplarSpawner*>               AdjacentBases;                                 // 0x02A8 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	uint32_t                                           bShouldUseRespawnAnimation : 1;                // 0x02B8 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	uint32_t                                           bSkipRespawnAnimationOnInitialSpawn : 1;       // 0x02B8 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	class UPoplarHotSpotOwnerRef*                      HotSpotRef;                                    // 0x02C0 (0x0008) [0x0000000004402008] (CPF_ExportObject | CPF_Transient | CPF_NeedCtorLink | CPF_EditInline)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPlayerStart");
		}

		return uClassPointer;
	};

	static void DisplayPlayerStartDebug(class AHUD* HUD);
	void eventPostBeginPlay();
	struct FVector GetSpawnLocation(class APawn* PawnToSpawn);
	float GetPriority(class UPoplarTeamDefinition* PlayerTeam);
	void SetSpawnerSpawnLevel(int32_t NewSpawnLevel);
	int32_t GetSpawnerSpawnLevel();
	void SetSpawnerExpLevel(int32_t NewLevel);
	int32_t GetSpawnerExpLevel();
	void SetSpawnerIndex(int32_t NewIndex);
	int32_t GetSpawnerIndex();
	void NotifyLaneEvent(const struct FName& EventName, class UObject* OtherObject, class AController* EventInstigator, class UPoplarTeamDefinition* InstigatorTeam);
	void GrantSpawnPermissionIfActivated(bool PermissionGranted);
	bool IsActivated();
	void ActivateSpawner(bool bShouldActivate);
	void SetLaneDefinition(class UPoplarLaneDefinition* NewLaneDefinition);
	class UPoplarLaneDefinition* GetLaneDefinition();
	void SetPoplarTeamDefinition(class UPoplarTeamDefinition* NewTeamDefinition);
	class UPoplarTeamDefinition* GetPoplarTeamDefinition();
	class UPoplarSpawnerTypeDefinition* GetSpawnerTypeDefinition();
};

// Class PoplarGame.PoplarCheckpointPlayerStart
// 0x0030 (0x02C8 - 0x02F8)
class APoplarCheckpointPlayerStart : public APoplarPlayerStart
{
public:
	struct FPointer                                    VfTable_IIBodyCompositionInstance;             // 0x02C8 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FInstanceData2                              InstanceState;                                 // 0x02D0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FCompressedBodyState2                       CompressedBodyState;                           // 0x02E0 (0x0010) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bActivatesIfNumPlayersIs1 : 1;                 // 0x02F0 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	uint32_t                                           bActivatesIfNumPlayersIs2 : 1;                 // 0x02F0 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	uint32_t                                           bActivatesIfNumPlayersIs3 : 1;                 // 0x02F0 (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	uint32_t                                           bActivatesIfNumPlayersIs4 : 1;                 // 0x02F0 (0x0004) [0x0000000000000001] [0x00000008] (CPF_Edit)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarCheckpointPlayerStart");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarPlayerStartStrategy
// 0x0018 (0x0240 - 0x0258)
class APoplarPlayerStartStrategy : public AActor
{
public:
	class TArray<struct FTeamAssignedStart>            TeamAssignedStarts;                            // 0x0240 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	uint32_t                                           StrategyHasBeenInitialized : 1;                // 0x0250 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPlayerStartStrategy");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarPlayerStatAttributeValueResolver
// 0x0018 (0x0058 - 0x0070)
class UPoplarPlayerStatAttributeValueResolver : public UAttributeValueResolver
{
public:
	EStatCategoryTypes                                 StatCategoryType;                              // 0x0058 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EBinaryMathOperation                               Operation;                                     // 0x0059 (0x0001) [0x0000000000000001] (CPF_Edit)    
	class UStatDefinition*                             StatDefA;                                      // 0x0060 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             StatDefB;                                      // 0x0068 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPlayerStatAttributeValueResolver");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarPlayerStateInfo
// 0x0A58 (0x0F10 - 0x1968)
class APoplarPlayerStateInfo : public AWillowPlayerStateInfo
{
public:
	struct FPointer                                    VfTable_IIRemoteController;                    // 0x0F10 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIBuffable;                            // 0x0F18 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIRespawnable;                         // 0x0F20 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIAttackSequence;                      // 0x0F28 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIStreamingDataEvent;                  // 0x0F30 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPmtData                                    PmtData;                                       // 0x0F38 (0x0028) [0x0000000000003000] (CPF_Native | CPF_Transient)
	class APoplarPawn*                                 PoplarPawn;                                    // 0x0F60 (0x0008) [0x0000000100002020] (CPF_Net | CPF_Transient)
	class APoplarPlayerController*                     PoplarPC;                                      // 0x0F68 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarMind*                                 PoplarMind;                                    // 0x0F70 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarPlayerReplicationInfo*                PoplarPRI;                                     // 0x0F78 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class UPoplarSkinDefinition*                       PlayerSkin;                                    // 0x0F80 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarSkinDefinition*                       ReplicatedPlayerSkinForSpectators;             // 0x0F88 (0x0008) [0x0000000100002020] (CPF_Net | CPF_Transient)
	class UPoplarSpecialMove_Taunt*                    PlayerTaunt;                                   // 0x0F90 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarPlayerNameIdentifierDefinition*       PlayerClassNameId;                             // 0x0F98 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPlayerClassDefinition*                      PreloadedPlayerClass;                          // 0x0FA0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarSkinDefinition*                       PreloadedSkin;                                 // 0x0FA8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarSpecialMove_Taunt*                    PreloadedTaunt;                                // 0x0FB0 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            ReplicatedActivateSkills;                      // 0x0FB8 (0x0004) [0x0000000100000020] (CPF_Net)     
	struct FResourcePoolReference                      SkillCooldownPools[0x5];                       // 0x0FC0 (0x0078) [0x0000002000000020] (CPF_Net)     
	class UPoplarSkillDefinition*                      ActionSkillSlotToSkillTable[0x5];              // 0x1038 (0x0028) [0x0000000000001000] (CPF_Native)  
	struct FPlayerRecentDamageTakenEventData           RecentDamageTakenEvents[0xF];                  // 0x1060 (0x0168) [0x0000000100002020] (CPF_Net | CPF_Transient)
	int32_t                                            NextDamageTakenEventIndex;                     // 0x11C8 (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	struct FPlayerDeathRecapData                       DeathRecap;                                    // 0x11D0 (0x0308) [0x0000002100002020] (CPF_Net | CPF_Transient)
	uint32_t                                           bDeathRecapDataFreshFromServer : 1;            // 0x14D8 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bCurrentlySpectating : 1;                      // 0x14D8 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bWaitingToRespawn : 1;                         // 0x14D8 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           bWasRevived : 1;                               // 0x14D8 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	uint32_t                                           bRestoreFullHealthOnRevive : 1;                // 0x14D8 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	uint32_t                                           bPendingAutoRevive : 1;                        // 0x14D8 (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	uint32_t                                           bCanBeRevived : 1;                             // 0x14D8 (0x0004) [0x0000000000002020] [0x00000040] (CPF_Net | CPF_Transient)
	uint32_t                                           bConsumeCurrencyWhenReviving : 1;              // 0x14D8 (0x0004) [0x0000000000002000] [0x00000080] (CPF_Transient)
	uint32_t                                           bPrimaryWeaponUseRestricted : 1;               // 0x14D8 (0x0004) [0x0000000000002000] [0x00000100] (CPF_Transient)
	uint32_t                                           bOffHandWeaponUseRestricted : 1;               // 0x14D8 (0x0004) [0x0000000000002000] [0x00000200] (CPF_Transient)
	uint32_t                                           bHelixMenuOpen : 1;                            // 0x14D8 (0x0004) [0x0000000000002000] [0x00000400] (CPF_Transient)
	uint32_t                                           bRemoteCommandRingActive : 1;                  // 0x14D8 (0x0004) [0x0000000000002000] [0x00000800] (CPF_Transient)
	uint32_t                                           bRemoteCommandRingTargetUpdated : 1;           // 0x14D8 (0x0004) [0x0000000000002000] [0x00001000] (CPF_Transient)
	uint32_t                                           bHasModAccess : 1;                             // 0x14D8 (0x0004) [0x0000000000002020] [0x00002000] (CPF_Net | CPF_Transient)
	uint32_t                                           bHasActivityFeedRequestInFlight : 1;           // 0x14D8 (0x0004) [0x0000000000002000] [0x00004000] (CPF_Transient)
	struct FPlayerRecentRewardEventData                RecentRewardEvents[0x6];                       // 0x14E0 (0x0240) [0x0000000100002020] (CPF_Net | CPF_Transient)
	int32_t                                            CurrentRewardsEventIndex;                      // 0x1720 (0x0004) [0x0000000000000002] (CPF_Const)   
	int32_t                                            CombatantID;                                   // 0x1724 (0x0004) [0x0000000100002020] (CPF_Net | CPF_Transient)
	struct FPlayerMusicState                           MusicState;                                    // 0x1728 (0x0098) [0x0000002100002020] (CPF_Net | CPF_Transient)
	struct FMusicSystemConfiguration                   MusicSystemConfiguration;                      // 0x17C0 (0x0058) [0x0000002100002020] (CPF_Net | CPF_Transient)
	class APoplarActionSkill*                          MyActionSkills[0x5];                           // 0x1818 (0x0028) [0x0000000100002020] (CPF_Net | CPF_Transient)
	int32_t                                            ActionSkillDebugState;                         // 0x1840 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              ActionSkillTime0;                              // 0x1844 (0x0004) [0x4000000000002020] (CPF_Net | CPF_Transient)
	float                                              ActionSkillTime1;                              // 0x1848 (0x0004) [0x4000000000002020] (CPF_Net | CPF_Transient)
	float                                              ActionSkillTime2;                              // 0x184C (0x0004) [0x4000000000002020] (CPF_Net | CPF_Transient)
	float                                              ActionSkillTime3;                              // 0x1850 (0x0004) [0x4000000000002020] (CPF_Net | CPF_Transient)
	float                                              ActionSkillTime4;                              // 0x1854 (0x0004) [0x4000000000002020] (CPF_Net | CPF_Transient)
	float                                              LastReviveTime;                                // 0x1858 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            NumSuccessiveInjuries;                         // 0x185C (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              RevivingCurrencyConsumedRemainder;             // 0x1860 (0x0004) [0x0000000000002000] (CPF_Transient)
	EeSkillCastStyle                                   ActionSkillCastingStyle;                       // 0x1864 (0x0001) [0x0000000000002000] (CPF_Transient)
	class UIRemoteControllable*                        RemoteControlledActor_Object;                  // 0x1868 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UIRemoteControllable*                        RemoteControlledActor_Interface;               // 0x1870 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FRemoteControlInfo                          ReplicatedRCInfo;                              // 0x1878 (0x0018) [0x0000002100002020] (CPF_Net | CPF_Transient)
	class UAttackSequenceState*                        AttackSeqState;                                // 0x1890 (0x0008) [0x0000000000002000] (CPF_Transient)
	class FString                                      DefaultPlayerCharacterClassNameId;             // 0x1898 (0x0010) [0x0000000000404000] (CPF_Config | CPF_NeedCtorLink)
	class UBuffComponent*                              BuffComponent;                                 // 0x18A8 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class TArray<struct FServerSideBuffInfo>           ServerSideBuffBackupCache;                     // 0x18B0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class UPoplarSkill*>                  SecondarySkillStack;                           // 0x18C0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class UPoplarPlayerSkillTree*                      PoplarPST;                                     // 0x18D0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UCommandRingDefinition*                      ActiveCommandRingDefinition;                   // 0x18D8 (0x0008) [0x0000000100002020] (CPF_Net | CPF_Transient)
	class ACommandRing*                                CommandRing;                                   // 0x18E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class AActor*                                      RemoteCommandRingTargetActor;                  // 0x18E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     RemoteCommandRingTargetLocation;               // 0x18F0 (0x000C) [0x0000000000002000] (CPF_Transient)
	class AActor*                                      RemoteCommandRingTargetLocationBase;           // 0x1900 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              BuildNodeDiscount;                             // 0x1908 (0x0004) [0x8000000000002020] (CPF_Net | CPF_Transient)
	float                                              BuildNodeDiscountBaseValue;                    // 0x190C (0x0004) [0x4000000000000022] (CPF_Const | CPF_Net)
	class TArray<class UAttributeModifier*>            BuildNodeDiscountModifierStack;                // 0x1910 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              CaptureSpeedMultiplier;                        // 0x1920 (0x0004) [0x4000000000002020] (CPF_Net | CPF_Transient)
	class APoplarPlayerStart*                          OldPlayerStart;                                // 0x1928 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UStatDefinition*                             SecondsPlayerSpentDeadStat;                    // 0x1930 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              OwnerDeadSecondsAccumulator;                   // 0x1938 (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FOutstandingActivityFeedData>  OutstandingActivityFeedQueue;                  // 0x1940 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	float                                              NextAllowedActivityFeedPostTime;               // 0x1950 (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<class UPoplarActionSkillDefinition*>  CachedActionSkillDefs;                         // 0x1958 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPlayerStateInfo");
		}

		return uClassPointer;
	};

	void CheckHaveSpectatorClientsLoadedPlayerSkin();
	void ConsumeCurrencyWhenReviving(bool bEnabled);
	void UpdateHelixMenuState(bool bNewIsInHelix);
	void StopHackingBuildNode(class APoplarBuildNodeObject* BuildNode);
	void CloseBuildNode(class APoplarBuildNodeObject* BuildNode, bool bCloseBuildNodeMovie);
	void RequestPurchaseBuildable(class APoplarBuildNodeObject* BuildNode, int32_t UpgradeLevel);
	void ClearRemoteCommandRingTarget();
	void SetRemoteCommandRingTarget(class AActor* TargetActor, const struct FVector& TargetLocation, class AActor* TargetLocationBase);
	void ClientDeactivateCommandRing();
	void ClientActivateCommandRing(class UCommandRingDefinition* CommandRingDef);
	void ProcessMusicRealtimeCue(const struct FMusicCue& Cue);
	int32_t RecordDamageEvent(class APawn* InstigatorPawn, float DamageSeverityPercent, int32_t DamageTags, EPlayerDamageType DamageType);
	void Destroyed();
	void NotifyControlledActorDied(class UIRemoteControllable* ControlledActor);
	void SetRemoteControlInfo(const struct FRemoteControlInfo& RCInfo);
	void eventUpdateRemoteControlledActor();
	bool BeginSprinting();
	void InitializeResourcePools();
	bool SwitchPlayerClass(class UPlayerClassDefinition* NewPlayerClass, class UPoplarSkinDefinition* NewPlayerSkin, class UPoplarSpecialMove_Taunt* NewPlayerTaunt);
	bool ApplyPlayerClass(class UPlayerClassDefinition* NewPlayerClass, class UPoplarPlayerNameIdentifierDefinition* NewPlayerClassNameId, class UPoplarSkinDefinition* NewPlayerSkin, class UPoplarSpecialMove_Taunt* NewPlayerTaunt);
	void ApplyInventoryAndBuffs();
	void OnSpawningProcessComplete();
	void ClientStopAttackSequence();
	void SetAttackSeqTransitionState(EAttackTransitionState NewState);
	bool AttackSequenceInput(EAttackButton Button, EAttackButtonAction Action);
	void eventUpdateAttackSequenceDefinition();
	void OffHandWeaponUseRestored();
	void PrimaryWeaponUseRestored();
	void CycleZoomLevel();
	void PrevZoomLevel();
	void NextZoomLevel();
	bool PerformReload(bool optionalBOnlyReloadIfNeeded);
	bool StopFire(uint8_t optionalFireModeNum, bool optionalBOffHand);
	bool StartFire(uint8_t optionalFireModeNum, bool optionalBOffHand);
	bool CanUseOffHandWeapon(uint8_t optionalFireModeNum);
	bool CanUsePrimaryWeapon(uint8_t optionalFireModeNum);
	bool eventOverrideCrosshairVisibility(bool bHasCrosshair, bool bScopeCrosshair);
	void OnWeaponsRestrictedChange();
	void NotifyActionSkills_StoppedWalking();
	void NotifyActionSkills_BeganWalking();
	void NotifyActionSkills_StoppedFalling();
	void NotifyActionSkills_BeganFalling();
	void NotifyActionSkills_WeaponsRestricted();
	void NotifyActionSkills_FakePause(bool bPaused);
	void NotifyActionSkills_WeaponSwitched(class AWeapon* OldWeapon, class AWeapon* NewWeapon);
	void NotifyActionSkills_KilledEnemy(class AWillowPawn* TargetPawn);
	void NotifyActionSkills_HitWall(const struct FVector& HitNormal, class AActor* Wall, class UPrimitiveComponent* WallComp);
	void NotifyActionSkills_TouchedActor(class AActor* TouchedActor, class UPrimitiveComponent* TouchedComp, const struct FVector& HitLocation, const struct FVector& HitNormal);
	void NotifyActionSkills_OwnerDied();
	void EndActionSkillSlot(int32_t ActionSkillSlot);
	void OnSkillEvent(class USkillDefinition* SkillDef, ESkillEventType EventType, class AActor* EventRecipient, class UClass* DamageSource, class UDamagePipeline* Pipeline, class UObject* ContextObject);
	EeSkillCastStyle GetActionSkillCastingStyle();
	bool IsAnyActionSkillRunning();
	void OnRep_ActiveCommandRingDefinition(class UCommandRingDefinition* OldActiveCommandRingDefinition);
	void OnRep_ReplicatedActivateSkills(int32_t OldReplicatedActivateSkills);
	void ToggleActionSlotSkillDebug(EActionSkillSlot ActionSkillSlot);
	void EnableActionSkillSlot(EActionSkillSlot ActionSkillSlot, bool bEnable, class UPoplarSkillDefinition* optionalSkill, class AActor* optionalTarget);
	void ActionSkillSlotEnded(class UPoplarSkillDefinition* Skill);
	void ActionSkillSlotStarted(class UPoplarSkillDefinition* Skill);
	bool HasActionSkillInputRestriction(EPlayerInputRestriction RestrictionType);
	bool IsActionSkillAvailable(EActionSkillSlot ActionSkillSlot);
	void SetActionSkillTimes();
	bool GetPreferredTargetForActionSkill(EActionSkillSlot ActionSkillSlot, bool optionalBRelativeLocation, class AActor*& TargetActor, struct FVector& TargetLocation, class AActor*& TargetLocationBase);
	void InitPlayerSkillTree();
	void ResetSkillSlotCooldown(uint8_t Slot);
	bool CanResetActionSkillSlot(EActionSkillSlot ActionSkillSlot);
	void DeactivateSkillSlot(EActionSkillSlot ActionSkillSlot, bool optionalBIgnoreSkillInstigator);
	void ResetActionSkillSlots(bool bCheckIfResetAllowed, bool bIsPawnDead);
	void NotifyActionSkillConfirmComplete();
	void CancelActionSkill(bool optionalBWithFinalAuthority, bool optionalBForceDeactivate);
	bool ConfirmActionSkill(class AActor* InputTargetActor, bool optionalBWithFinalAuthority);
	bool StartActionSkillCooldownAbilitySlot(EActionSkillSlot ActionSkillSlot, class AActor* SkillTarget);
	bool StartActionSkillActiveAbilityBySlot(EActionSkillSlot ActionSkillSlot, class AActor* SkillTarget);
	bool StartActionSkillActiveAbilitySlot(EActionSkillSlot ActionSkillSlot, class AActor* SkillTarget, bool bNotifyClient);
	bool CanStartActionSkillSlot(EActionSkillSlot ActionSkillSlot);
	bool StartActionSkillSlot(EActionSkillSlot ActionSkillSlot, class AActor* SkillTarget, const struct FVector& SkillTargetLocation, class AActor* SkillTargetLocationBase, EeSkillCastStyle LatestCastSetting, bool optionalBIgnoreCooldown, bool optionalBIgnoreTargetReq, ESkillActivationFailedReason& FailedReason);
	void ActionSkillCallback(class USkill* ActivatedSkill, bool bActivated);
	void ResetActionSkillSlotCooldown(EActionSkillSlot ActionSkillSlot);
	float GetActionSkillSlotCooldownTimeRemaining(EActionSkillSlot ActionSkillSlot);
	float GetActionSkillSlotCooldownTime(EActionSkillSlot ActionSkillSlot);
	void StartActiveSkillSlotCooldown(EActionSkillSlot ActionSkillSlot);
	void SetupActiveSkillSlotForCooldown(EActionSkillSlot ActionSkillSlot);
	bool IsActionSkillSlotCooldownRunning(EActionSkillSlot ActionSkillSlot);
	bool HasActionSkillStartedExecution(EActionSkillSlot ActionSkillSlot);
	bool IsActionSkillSlotRunning(EActionSkillSlot ActionSkillSlot);
	class APoplarActionSkill* GetActionSkillForSlot(EActionSkillSlot ActionSkillSlot);
	float GetActionSkillTimeForSlot(EActionSkillSlot ActionSkillSlot);
	class UPoplarSkillDefinition* GetSkillDefForSkillSlot(EActionSkillSlot ActionSkillSlot);
	float GetActionSkillSlotDuration(EActionSkillSlot ActionSkillSlot);
	void InitPlayerStateInfo();
	void eventReplicatedArrayEvent(const struct FName& VarName, int32_t ArrayIndex);
	void eventReplicatedEvent(const struct FName& VarName);
};

// Class PoplarGame.PoplarPlayerTestDefinition
// 0x0040 (0x0058 - 0x0098)
class UPoplarPlayerTestDefinition : public UGBXDefinition
{
public:
	class UGameTestDefinition*                         InvokePrimaryFire;                             // 0x0058 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UGameTestDefinition*                         InvokeSecondaryFire;                           // 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UGameTestDefinition*                         InvokeMelee;                                   // 0x0068 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UGameTestDefinition*                         InvokeLeftSkill;                               // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UGameTestDefinition*                         InvokeRightSkill;                              // 0x0078 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UGameTestDefinition*                         InvokeUltimate;                                // 0x0080 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class TArray<struct FNamedTest>                    NamedTests;                                    // 0x0088 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPlayerTestDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarPlayerWearableDefinition
// 0x07E0 (0x0058 - 0x0838)
class UPoplarPlayerWearableDefinition : public UGBXDefinition
{
public:
	class FString                                      WearableName;                                  // 0x0058 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      WearableDescription;                           // 0x0068 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	EPlayerWearableTypes                               PlayerWearableType;                            // 0x0078 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EPlayerWearableAttachmentTarget                    AttachmentTargetMesh;                          // 0x0079 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<struct FStandardWearableMeshData>     WearableMeshData;                              // 0x0080 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class TArray<struct FStandardWearableParticleData> WearableParticleData;                          // 0x0090 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)
	uint32_t                                           bVisibleInFirstPerson : 1;                     // 0x00A0 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bVisibleInThirdPerson : 1;                     // 0x00A0 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	struct FPlayerWearableMeshData                     PerCharacterWearableMeshData[0x1E];            // 0x00A8 (0x03C0) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FPlayerWearableParticleData                 PerCharacterWearableParticleData[0x1E];        // 0x0468 (0x03C0) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)
	class FString                                      AssetTrackerKey;                               // 0x0828 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPlayerWearableDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarPlayerWearableDefinitionList
// 0x0010 (0x0058 - 0x0068)
class UPoplarPlayerWearableDefinitionList : public UGBXDefinition
{
public:
	class TArray<class UPoplarPlayerWearableDefinition*> Wearables;                                     // 0x0058 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPlayerWearableDefinitionList");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarPointSpawner
// 0x0058 (0x0348 - 0x03A0)
class APoplarPointSpawner : public APointSpawner
{
public:
	struct FPointer                                    VfTable_IIPoplarSpawner;                       // 0x0348 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIMinimapObject;                       // 0x0350 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	int32_t                                            SpawnerIndex;                                  // 0x0358 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarSpawnerTypeDefinition*                SpawnerTypeDefinition;                         // 0x0360 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       TeamDefinition;                                // 0x0368 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarLaneDefinition*                       LaneDefinition;                                // 0x0370 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarUnitTypeDefinition*                   UnitTypeOverride;                              // 0x0378 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UIUnit*                                      LastSpawnedUnit_Object;                        // 0x0380 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UIUnit*                                      LastSpawnedUnit_Interface;                     // 0x0388 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            ExpLevel;                                      // 0x0390 (0x0004) [0x4000000000002000] (CPF_Transient)
	class UPoplarMinimapIconDefinition*                SpecialIconDefinition;                         // 0x0398 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPointSpawner");
		}

		return uClassPointer;
	};

	void eventPostBeginPlay();
	void SetSpawnerSpawnLevel(int32_t NewSpawnLevel);
	int32_t GetSpawnerSpawnLevel();
	void SetSpawnerExpLevel(int32_t NewLevel);
	int32_t GetSpawnerExpLevel();
	void SetSpawnerIndex(int32_t NewIndex);
	int32_t GetSpawnerIndex();
	void NotifyLaneEvent(const struct FName& EventName, class UObject* OtherObject, class AController* EventInstigator, class UPoplarTeamDefinition* InstigatorTeam);
	bool IsActivated();
	void GrantSpawnPermissionIfActivated(bool PermissionGranted);
	void ActivateSpawner(bool bShouldActivate);
	void SetLaneDefinition(class UPoplarLaneDefinition* NewLaneDefinition);
	class UPoplarLaneDefinition* GetLaneDefinition();
	void SetPoplarTeamDefinition(class UPoplarTeamDefinition* NewTeamDefinition);
	class UPoplarTeamDefinition* GetPoplarTeamDefinition();
	class UPoplarSpawnerTypeDefinition* GetSpawnerTypeDefinition();
};

// Class PoplarGame.PoplarJumpPadSpawner
// 0x0008 (0x03A0 - 0x03A8)
class APoplarJumpPadSpawner : public APoplarPointSpawner
{
public:
	class APhysicsJumpNode*                            JumpNode;                                      // 0x03A0 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarJumpPadSpawner");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSwitchPadSpawner
// 0x0058 (0x03A0 - 0x03F8)
class APoplarSwitchPadSpawner : public APoplarPointSpawner
{
public:
	class TArray<class ASpawner*>                      Watchers;                                      // 0x03A0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	uint32_t                                           bSwitchesRemainOnOnceHubResolvesToTrue : 1;    // 0x03B0 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	uint32_t                                           bLimitSwitchesToNumberOfActivePlayers : 1;     // 0x03B0 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	uint32_t                                           bNPCsCanActivateSwitches : 1;                  // 0x03B0 (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	class TArray<class APoplarSwitchPadObject*>        MySwitchPads;                                  // 0x03B8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	EOnStateChangedEventOutputs                        HubState;                                      // 0x03C8 (0x0001) [0x0000000000002000] (CPF_Transient)
	class APoplarInteractiveObject*                    HubObject;                                     // 0x03D0 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            PrevNumPlayers;                                // 0x03D8 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            ExpectedNumSwitches;                           // 0x03DC (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FNumPlayerSpawnConstraint>     NumPlayerSpawnConstraints;                     // 0x03E0 (0x0010) [0x0000000000400043] (CPF_Edit | CPF_Const | CPF_EditConstArray | CPF_NeedCtorLink)
	int32_t                                            NumPlayersDebug;                               // 0x03F0 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSwitchPadSpawner");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarPostMatchDefinition
// 0x0070 (0x0058 - 0x00C8)
class UPoplarPostMatchDefinition : public UGBXDefinition
{
public:
	class TArray<class UScoreboardStatDefinition*>     PostMatchStats;                                // 0x0058 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class UStatDefinition*                             PlayerLevelStatDef;                            // 0x0068 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<class UScoreboardStatDefinition*>     StatsTrackedInTeammatePanel;                   // 0x0070 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class UStatDefinition*                             PlayerStarRatingStat;                          // 0x0080 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             TeamScorePVEStat;                              // 0x0088 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             BonusScorePVEStat;                             // 0x0090 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             MatchTimeStat;                                 // 0x0098 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FName                                       PostMatchLineupInputContextName;               // 0x00A0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              PostMatchLineupViewTime;                       // 0x00A8 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<class FString>                        GameModeNames;                                 // 0x00B0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	uint32_t                                           bSpectatorPostMatch : 1;                       // 0x00C0 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	uint32_t                                           bHideMatchScore : 1;                           // 0x00C0 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPostMatchDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarPostMatchGFxMovie
// 0x11E0 (0x05B0 - 0x1790)
class UPoplarPostMatchGFxMovie : public UWillowGFxMovie3D
{
public:
	struct FPointer                                    VfTable_IIStreamingDataEvent;                  // 0x05B0 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UPoplarPlayerClassDefinition*                LoadedCharacter;                               // 0x05B8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class FString                                      PendingClassDefRequestString;                  // 0x05C0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UPoplarPostMatchGFxMovieDefinition*          PostMatchMovieDef;                             // 0x05D0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  PostMatchClip;                                 // 0x05D8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class TArray<EPostMatchState>                      PageOrdering;                                  // 0x05E0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UGFxObject*                                  ExpTabClip;                                    // 0x05F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  PlayerMetaXPBox;                               // 0x05F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  CharacterMetaXPBox;                            // 0x0600 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ChallengeTabClip;                              // 0x0608 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  StatTabClip;                                   // 0x0610 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  PlayerTabClip;                                 // 0x0618 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPerkIconGFxObject*                          MapRewardTrainPerkIcon;                        // 0x0620 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarPlayerController*                     PPCOwner;                                      // 0x0628 (0x0008) [0x0000000000002000] (CPF_Transient)
	EPostMatchState                                    State;                                         // 0x0630 (0x0001) [0x0000000000002000] (CPF_Transient)
	EPostMatchRewardTrainState                         RewardTrainState;                              // 0x0631 (0x0001) [0x0000000000002000] (CPF_Transient)
	class UWillowPauseTicker*                          Ticker;                                        // 0x0638 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FPoplarScoreboardPlayerSelectList           StatTabPlayerSelectList;                       // 0x0640 (0x0018) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            StatTabPlayerInfosTeamOrder[0x2];              // 0x0658 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CurrentMatchRewardIndex;                       // 0x0660 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FPostMatchExperienceClips                   MetaXPClips;                                   // 0x0668 (0x0040) [0x0000000000002000] (CPF_Transient)
	struct FPostMatchExperienceClips                   CharXPClips;                                   // 0x06A8 (0x0040) [0x0000000000002000] (CPF_Transient)
	struct FPostMatchXpPlayerData                      XpPlayerDatas[0x2];                            // 0x06E8 (0x0470) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	float                                              ECSliderTimer;                                 // 0x0B58 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CurrentMatchStatOffsetIndex;                   // 0x0B5C (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            MatchStatLabelCount;                           // 0x0B60 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            MaxShownKillModifiers;                         // 0x0B64 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CurrentCharacterRewardIndex;                   // 0x0B68 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CurrentECRewardIndex;                          // 0x0B6C (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CurrentCommandRewardIndex;                     // 0x0B70 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CurrentMapRewardIndex;                         // 0x0B74 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CurrentRewardPopDelay;                         // 0x0B78 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            LastHighlightedTeamIndex;                      // 0x0B7C (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            LastHighlightedRowIndex;                       // 0x0B80 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            LoadingRefCount;                               // 0x0B84 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bCommandRewardsRevealed : 1;                   // 0x0B88 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bCharacterRewardsRevealed : 1;                 // 0x0B88 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bReadyToVerifyDataAndReadyUI : 1;              // 0x0B88 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           bShowCharacterUnlocks : 1;                     // 0x0B88 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	uint32_t                                           bIsCharacterUnlockOuttro : 1;                  // 0x0B88 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	uint32_t                                           bHasShownCharacterUnlocks : 1;                 // 0x0B88 (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	uint32_t                                           bIsRevealingRewardTrain : 1;                   // 0x0B88 (0x0004) [0x0000000000002000] [0x00000040] (CPF_Transient)
	uint32_t                                           bViewGearOpen : 1;                             // 0x0B88 (0x0004) [0x0000000000002000] [0x00000080] (CPF_Transient)
	uint32_t                                           bUseSplitTabs : 1;                             // 0x0B88 (0x0004) [0x0000000000002000] [0x00000100] (CPF_Transient)
	uint32_t                                           bUsingReplayData : 1;                          // 0x0B88 (0x0004) [0x0000000000002000] [0x00000200] (CPF_Transient)
	uint32_t                                           bPlayerInfoRefreshRequested : 1;               // 0x0B88 (0x0004) [0x0000000000002000] [0x00000400] (CPF_Transient)
	uint32_t                                           bReadyToReveal : 1;                            // 0x0B88 (0x0004) [0x0000000000002000] [0x00000800] (CPF_Transient)
	uint32_t                                           bRevealed : 1;                                 // 0x0B88 (0x0004) [0x0000000000002000] [0x00001000] (CPF_Transient)
	uint32_t                                           bIsFromMatchHistory : 1;                       // 0x0B88 (0x0004) [0x0000000000002000] [0x00002000] (CPF_Transient)
	uint32_t                                           bSpectatorPostMatch : 1;                       // 0x0B88 (0x0004) [0x0000000000002000] [0x00004000] (CPF_Transient)
	class TArray<struct FsChallengeInfo>               ChallengesInfos;                               // 0x0B90 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            CharacterUnlockRevealIndex;                    // 0x0BA0 (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FPostMatchCharacterUnlockInfo> CharacterUnlocks;                              // 0x0BA8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            RewardTrainStarRating;                         // 0x0BB8 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              AudioTickTimer;                                // 0x0BBC (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            LastChallengesScrollPos;                       // 0x0BC0 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  PerksBoxClip;                                  // 0x0BC8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarPlayerDetailsGFxMovie*                PlayerDetailsMovie;                            // 0x0BD0 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            BlockingMessageId;                             // 0x0BD8 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UPoplarPlayerNameIdentifierDefinition*       CurrentStandInCharacter;                       // 0x0BE0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class FString                                      MatchResultsDefeatBannerString;                // 0x0BE8 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MatchResultsVictoryBannerString;               // 0x0BF8 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MatchResultsSpectatorTeam1VictoryBannerString; // 0x0C08 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MatchResultsSpectatorTeam2VictoryBannerString; // 0x0C18 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MatchResultsDefeatBannerStringPVE;             // 0x0C28 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MatchResultsVictoryBannerStringPVE;            // 0x0C38 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MatchResultsTieBannerString;                   // 0x0C48 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      AbandondedMatchString;                         // 0x0C58 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MatchRewardsLevelUpTitleString;                // 0x0C68 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MatchRewardsLevelUpDescString;                 // 0x0C78 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      XPBarMaxLevelString;                           // 0x0C88 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      RewardXPLabelString;                           // 0x0C98 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      RewardECLabelString;                           // 0x0CA8 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      TabExperienceLabelString;                      // 0x0CB8 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      TabChallengesLabelString;                      // 0x0CC8 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      TabStatisticsLabelString;                      // 0x0CD8 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      TabAccomplishmentsLabelString;                 // 0x0CE8 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      StatsColumnTitlePlayersString;                 // 0x0CF8 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      StatsTeamTotalsTitleString;                    // 0x0D08 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      StatsMatchTimeTitleString;                     // 0x0D18 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      StatsFinalScoreTitleString;                    // 0x0D28 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      StatsBonusTitleString;                         // 0x0D38 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      ChallengeLabelString;                          // 0x0D48 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      ProgressLabelString;                           // 0x0D58 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      PersonalBestString;                            // 0x0D68 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      KillModifierTitleString;                       // 0x0D78 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CommandRankString;                             // 0x0D88 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CharacterRankString;                           // 0x0D98 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      XPToNextCommandLevelString;                    // 0x0DA8 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      XPToNextCharacterLevelString;                  // 0x0DB8 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      NewCharacterAwardString;                       // 0x0DC8 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CharacterAwardMutationString;                  // 0x0DD8 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CharacterAwardSkinString;                      // 0x0DE8 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CharacterAwardTauntString;                     // 0x0DF8 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CharacterAwardMetaTitleString;                 // 0x0E08 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CharacterAwardGenericString;                   // 0x0E18 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CharacterAwardTitleString;                     // 0x0E28 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      ChallengeCompleteString;                       // 0x0E38 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      BySurrenderString;                             // 0x0E48 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      SummaryString;                                 // 0x0E58 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CommandXPString;                               // 0x0E68 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      CharacterXPString;                             // 0x0E78 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      EarnedCurrencyString;                          // 0x0E88 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      TeamScoreString;                               // 0x0E98 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      XPAbbrvLabelString;                            // 0x0EA8 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      NewCharacterUnlockedString;                    // 0x0EB8 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      NewCharacterUnlockedSplitString;               // 0x0EC8 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MaxRankString;                                 // 0x0ED8 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      RankString;                                    // 0x0EE8 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      ProgressString;                                // 0x0EF8 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      RewardsString;                                 // 0x0F08 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MaxRankAchievedString;                         // 0x0F18 (0x0010) [0x000000000040A002] (CPF_Const | CPF_Transient | CPF_Localized | CPF_NeedCtorLink)
	struct FsPostMatchData                             PostMatchData;                                 // 0x0F28 (0x0370) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UPoplarPostMatchDefinition*                  PostMatchDef;                                  // 0x1298 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FPostMatchReplayData                        MyReplayData;                                  // 0x12A0 (0x04A8) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            PlayerDetailsTeamIndex;                        // 0x1748 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            PlayerDetailsPlayerIndex;                      // 0x174C (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<int32_t>                              PlayerDetailsIdMap;                            // 0x1750 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UPoplarChallengeManager*                     ChallengeManager;                              // 0x1760 (0x0008) [0x0000000000002000] (CPF_Transient)
	class ULevelStatDimensionValueDefinition*          CurrentLevelDimensionDef;                      // 0x1768 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGameModeStatDimensionValueDefinition*       CurrentGameModeDimensionDef;                   // 0x1770 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UDifficultyStatDimensionValueDefinition*     CurrentDifficultyDimensionDef;                 // 0x1778 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UHardcoreStatDimensionValueDefinition*       CurrentHardcoreDimensionDef;                   // 0x1780 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UTeamSizeStatDimensionValueDefinition*       CurrentTeamSizeDimensionDef;                   // 0x1788 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPostMatchGFxMovie");
		}

		return uClassPointer;
	};

	void ReadPlayerDisplayDataComplete(const struct FPlatformUserId& PlayerID, int32_t ServiceResult, class TArray<struct FPlayerDisplayData>& DisplayDataList);
	void RequestProfileImageComplete(bool bWasSuccessful, const struct FUniqueNetId& NetId, class UTexture* ImageTexture);
	void extOnChallengeListItemFocused(int32_t ChallengeListIndex);
	void extBattleMarkSelected(int32_t Index, bool WasChanged);
	void extPopulateChallengesData(int32_t NewTopLine, int32_t NumRenderers);
	void extShowPlayerSelectedDialog(int32_t TeamIndex, int32_t RowIndex);
	void extOnRowHighlighted(int32_t TeamIndex, int32_t RowIndex, bool FromCursor);
	void OnReadMatchHistoryData(const struct FPlatformUserId& PlayerID, int32_t ServiceResult, struct FsPostMatchData& ReadMatchHistoryData);
	bool ErrorDialogClicked(class UWillowGFxDialogBox* DialogBox, const struct FPlatformUserId& UserId);
	void HandleHintInput(const struct FPlatformUserId& UserId, const struct FName& HintTag);
	void PopulateHintBar();
	bool MainInputKey(const struct FPlatformUserId& UserId, const struct FName& ukey, EInputEvent uevent);
	void UpdateFrameForAspectRatio(EAspectRatio AspectRatio);
	void eventOnClose();
	bool eventStart(bool optionalBStartPaused);
	void ShowNextCharacterUnlock();
	void BeginNextRewardTrainState();
	void OnRefreshInventoryComplete(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
	void OnReadPlayerDisplayDataComplete(const struct FPlatformUserId& UserId, int32_t ServiceResult, class TArray<struct FPlayerDisplayData>& DisplayDataList);
	void extCharacterLevelUpAnimComplete();
	void extMetaLevelUpAnimComplete();
	void extOnPrevPageArrowClicked(int32_t ControllerId, int32_t Index);
	void extOnNextPageArrowClicked(int32_t ControllerId, int32_t Index);
	void extOnTabClicked(int32_t Index);
	void PresentNextMapReward();
	void PresentNextCharacterReward();
	void PresentNextCommandReward();
	void Show(bool bFromMatchHistory, bool bIsSplitscreen, bool bShowCharacterUnlockReveals, const struct FPlatformUserId& PrimaryUserId);
	bool StartNative(bool optionalBStartPaused);
};

// Class PoplarGame.PoplarPostMatchGFxMovieDefinition
// 0x0068 (0x0138 - 0x01A0)
class UPoplarPostMatchGFxMovieDefinition : public UWillowGFxMovie3DDefinition
{
public:
	float                                              InitialDelayToShowSliders;                     // 0x0138 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            MaxSliderValue;                                // 0x013C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              SliderFillRate;                                // 0x0140 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            MaxTimerFrames;                                // 0x0144 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              DeltaXPItemRevealTime;                         // 0x0148 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              DeltaXPItemRevealBarFillTime;                  // 0x014C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              RewardPopDelayInitial;                         // 0x0150 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              RewardPopDelayReductionPerReward;              // 0x0154 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              RewardPopDelayFinal;                           // 0x0158 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              BackgroundMatineeTimeBlank;                    // 0x015C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              BackgroundMatineeTimeXpPage;                   // 0x0160 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              BackgroundMatineeTimeChallengePage;            // 0x0164 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              BackgroundMatineeTimeStatsPage;                // 0x0168 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              BackgroundMatineeTimePlayerPage;               // 0x016C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              RewardTrainScoreTimePVP;                       // 0x0170 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              RewardTrainScoreTimePVE;                       // 0x0174 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              RewardTrainScoreTimePVENoMedal;                // 0x0178 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              RewardTrainMapRewardsTime;                     // 0x017C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              RewardTrainXpTime;                             // 0x0180 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              RewardTrainXpPostDelayTime;                    // 0x0184 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              RewardTrainRewardsTime;                        // 0x0188 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              RewardTrainEcTime;                             // 0x018C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              RewardTrainSummaryTime;                        // 0x0190 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              RewardTrainSingleMapRewardTime;                // 0x0194 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              CharacterUnlockOuttroTime;                     // 0x0198 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              AudioTickTime;                                 // 0x019C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPostMatchGFxMovieDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarPostMatchLineup
// 0x0010 (0x0258 - 0x0268)
class APoplarPostMatchLineup : public ATeleporterDestination
{
public:
	class UPoplarTeamDefinition*                       TeamDefinition;                                // 0x0258 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class ACameraActor*                                CameraView;                                    // 0x0260 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPostMatchLineup");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarPressStartBackgroundGFxMovie
// 0x0008 (0x0450 - 0x0458)
class UPoplarPressStartBackgroundGFxMovie : public UWillowGFxMovie
{
public:
	class APoplarPlayerController*                     OwnerPPC;                                      // 0x0450 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPressStartBackgroundGFxMovie");
		}

		return uClassPointer;
	};

	void eventOnClose();
	bool eventStart(bool optionalStartPaused);
};

// Class PoplarGame.PoplarPressStartGFxMovie
// 0x0060 (0x05B0 - 0x0610)
class UPoplarPressStartGFxMovie : public UWillowGFxMovie3D
{
public:
	class FString                                      Legal_ESRBDisclaimer;                          // 0x05B0 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      Legal_GearboxTrademarks;                       // 0x05C0 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      Legal_GearboxTrademarks_Console;               // 0x05D0 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	uint32_t                                           bMutedWorld : 1;                               // 0x05E0 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bPressedStart : 1;                             // 0x05E0 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bPendingContinueToMenu : 1;                    // 0x05E0 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	class UWillowPauseTicker*                          TimerPauseTicker;                              // 0x05E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UWillowGFxDialogBox*                         ConfirmQuitDlg;                                // 0x05F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            FFS_State;                                     // 0x05F8 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            BlockingMessageId;                             // 0x05FC (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CancelMessageId;                               // 0x0600 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint8_t                                           UnknownData00[0xC];                            // 0x0604 (0x000C) MISSED OFFSET

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPressStartGFxMovie");
		}

		return uClassPointer;
	};

	void SetLobbySessionJoinableComplete(EOnlineSubsystemResult Result);
	void CancelMatchmakingBeaconsComplete();
	void extSetDisclaimerText();
	void extSetLegalText();
	bool IsTimerActive(const struct FName& FuncName);
	void ClearTimer(const struct FName& FuncName);
	void SetTimer(float Rate, bool bLoop, const struct FName& FuncName);
	void eventOnClose();
	void ClearDelegates();
	void extAsyncDone();
	void ContinueToMenu();
	class UGFxMovieDefinition* GetFrontEndMovieDef();
	bool ErrorDialogCallback(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId);
	void HandleStartupProcessFailure();
	void OnCreateHostLobbyBeaconForStartupComplete(EOnlineSubsystemResult Result, class UPoplarPartyBeaconHost* NewBeacon);
	void CreateLobbyBeacon();
	void InitializePlayerComplete(const struct FPlatformUserId& UserId, bool bWasSuccessful);
	void BeginStartupProcess();
	void CustomPlay(const class FString& Frame);
	void extContinue();
	void extBeginWait();
	void extOnClickToStart(int32_t ControllerId);
	void extCheckSkip();
	void UserPressedStart(const struct FPlatformUserId& UserId);
	void ShowPlatformUserUIComplete(bool bWasSuccessful, const struct FPlatformUserId& ResultId);
	bool HandleInputKey_AtTitle(const struct FPlatformUserId& UserId, const struct FName& ukey, EInputEvent uevent);
	bool OnConfirmQuit(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId);
	void HandleHintInput(const struct FPlatformUserId& UserId, const struct FName& HintTag);
	void PopulateHintBar();
	void eventResumeStartScreen();
	void eventPauseStartScreen();
	bool SkipMovies();
	bool CheckFFS();
	bool FFS_InputHandler(const struct FPlatformUserId& UserId, const struct FName& ukey, EInputEvent uevent);
	bool HandleInputKey_ShowingLegal(const struct FPlatformUserId& UserId, const struct FName& ukey, EInputEvent uevent);
	bool ConditionalSkipToMenu();
	bool OnReturnToTitleScreen_Click(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId);
	void UpdateFrameForAspectRatio(EAspectRatio AspectRatio);
	void eventOnTick();
	bool eventStart(bool optionalStartPaused);
};

// Class PoplarGame.PoplarProjectile
// 0x0110 (0x06B0 - 0x07C0)
class APoplarProjectile : public AWillowProjectile
{
public:
	struct FPointer                                    VfTable_IIPoplarTeamAffiliated;                // 0x06B0 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIGBXTargetSearch;                     // 0x06B8 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIReapBehavior;                        // 0x06C0 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_ISpecialMoveInterface;                 // 0x06C8 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IISimpleAnimPlayer;                    // 0x06D0 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIRemoteControllable;                  // 0x06D8 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIPoplarSkinConsumer;                  // 0x06E0 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPmtData                                    PmtData;                                       // 0x06E8 (0x0028) [0x0000000000003000] (CPF_Native | CPF_Transient)
	struct FPoplarProjectileDefinitionData             DefinitionData;                                // 0x0710 (0x0010) [0x0000002100000021] (CPF_Edit | CPF_Net)
	float                                              StrengthModifier;                              // 0x0720 (0x0004) [0x8000000000002020] (CPF_Net | CPF_Transient)
	float                                              StrengthModifierBaseValue;                     // 0x0724 (0x0004) [0x4000000000000022] (CPF_Const | CPF_Net)
	class TArray<class UAttributeModifier*>            StrengthModifierModifierStack;                 // 0x0728 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	class USpecialMoveComponent*                       SMComponent;                                   // 0x0738 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	struct FReplicatedSpecialMoveData                  ReplicatedSMData;                              // 0x0740 (0x0028) [0x0000000100002020] (CPF_Net | CPF_Transient)
	int32_t                                            SimpleAnimState;                               // 0x0768 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            RepSimpleAnimState;                            // 0x076C (0x0004) [0x0000000100002020] (CPF_Net | CPF_Transient)
	class TArray<struct FSimpleAnimData>               SimpleAnimInfo;                                // 0x0770 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UIRemoteController*                          RemoteController_Object;                       // 0x0780 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UIRemoteController*                          RemoteController_Interface;                    // 0x0788 (0x0008) [0x0000000000002000] (CPF_Transient)
	class TArray<class UParticleSystemComponent*>      Effects;                                       // 0x0790 (0x0010) [0x0000000004480008] (CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_EditInline)
	class UPoplarProjectileDefinition*                 PoplarDefinition;                              // 0x07A0 (0x0008) [0x0000000000000000]               
	class APoplarTeamInfo*                             MyTeamInfo;                                    // 0x07A8 (0x0008) [0x0000000100002020] (CPF_Net | CPF_Transient)
	class UPoplarUnitTypeDefinition*                   DamageInstigatorUnitDefinition;                // 0x07B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            DamageInstigatorCombatantID;                   // 0x07B8 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint8_t                                            bProjectileIsInCenterOfGroup;                  // 0x07BC (0x0001) [0x4000000000002020] (CPF_Net | CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarProjectile");
		}

		return uClassPointer;
	};

	void Behavior_CauseRadiusDamage(float Radius, float DamageAmount, bool bFullDamage, float Momentum, class UClass* DamageType, class UDamagePipeline* Pipeline, const struct FVector& optionalOffset, class UIDamageCauser* optionalDamageCauser, bool optionalBSkipTraceTest, EOpinion optionalAllegianceFilter, class TArray<class AActor*>& ActorsHurt);
	void Behavior_CauseDamage(class AActor* Target, float DamageAmount, float Momentum, class UClass* DamageType, class UDamagePipeline* Pipeline, class UIDamageCauser* optionalDamageCauser);
	void SetAltDamageInstigator(class APawn* NewInstigator);
	class UImpactDefinition* GetUntouchImpact();
	class UImpactDefinition* GetTouchImpact();
	bool IsBlockedByWillowInteractiveObject(class AActor* Other);
	void eventServerSpecialMove_StopAny(bool optionalBClearQueue, bool optionalBInterrupted);
	void eventServerSpecialMove_Stop(class USpecialMoveDefinition* OldSMD, bool optionalBClearQueue, bool optionalBInterrupted);
	void eventServerSpecialMove_Queue(class USpecialMoveDefinition* NewSMD, float optionalPlayRateScale, float optionalDuration, const struct FName& optionalCallbackName, class UObject* optionalCallbackObject, class UObject* optionalData, bool optionalBSendCallbackAtEndOfSequence, bool optionalBStartOfSequence);
	void eventServerSpecialMove_Play(class USpecialMoveDefinition* NewSMD, float optionalPlayRateScale, float optionalDuration, const struct FName& optionalCallbackName, class UObject* optionalCallbackObject, class UObject* optionalData, bool optionalBSendCallbackAtEndOfSequence);
	void SetReplicatedSMData(bool optionalBInterrupted, struct FSpecialMoveData& NewSMData);
	ERootMotionRotationMode GetDefaultRootMotionRotationMode();
	ERootMotionMode GetDefaultRootMotionMode();
	class USkeletalMeshComponent* GetSkelMesh();
	class USpecialMoveComponent* GetSMComponent();
	class AActor* GetActor();
	void ConsumeRelevantInput(class UPlayerInput* RemoteInput, class URemoteControlDefinition* RCDefinition);
	void ProcessRemoteInput(float DeltaTime, class UPlayerInput* RemoteInput, class URemoteControlDefinition* RCDefinition);
	void LeaveRemoteControl(class UIRemoteController* Controller);
	void EnterRemoteControl(class UIRemoteController* Controller, class URemoteControlDefinition* RCDefinition);
	class AActor* GetTargetSearchDefaultTarget();
	void GetTargetSearchSourceLocationAndRotation(struct FVector& OutLocation, struct FRotator& OutRotation);
	class AActor* GetTargetSearchSourceActor();
	class UPoplarTeamDefinition* GetPoplarTeamDefinition();
	void SetPoplarTeamInfo(class APoplarTeamInfo* InTeamInfo);
	class APoplarTeamInfo* GetPoplarTeamInfo();
	void ForceColorRefresh();
	class UGBXDefinition* GetTeamDefinition();
	void SetTeamInfo(class ATeamInfo* InTeamInfo);
	class ATeamInfo* GetTeamInfo();
	void DisableProjectile();
	void InitializeFromDefinition(class UProjectileDefinition* InDefinition, int32_t InExpLevel, class UWillowDamageTypeDefinition* optionalCustomDamageTypeDefinition, bool optionalBSkipOnSpawn, class UParticleSystem* optionalCustomInFlightEffect, class UExplosionDefinition* optionalCustomExplosionDefinition);
	void Destroyed();
	void ShutDown();
	void DoOnSpawn();
	void eventReplicatedEvent(const struct FName& VarName);
};

// Class PoplarGame.PoplarLocalOnlyProjectile
// 0x0000 (0x07C0 - 0x07C0)
class APoplarLocalOnlyProjectile : public APoplarProjectile
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarLocalOnlyProjectile");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarServerSideProjectile
// 0x0028 (0x07C0 - 0x07E8)
class APoplarServerSideProjectile : public APoplarProjectile
{
public:
	struct FVector                                     ServerLocation;                                // 0x07C0 (0x000C) [0x0000000000000020] (CPF_Net)     
	struct FVector                                     ServerVelocity;                                // 0x07CC (0x000C) [0x0000000000000020] (CPF_Net)     
	struct FVector                                     ServerAcceleration;                            // 0x07D8 (0x000C) [0x0000000000000020] (CPF_Net)     
	uint8_t                                            ForceReplicationOfAttachmentProperties;        // 0x07E4 (0x0001) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarServerSideProjectile");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarTrajectometerProjectile
// 0x0028 (0x07C0 - 0x07E8)
class APoplarTrajectometerProjectile : public APoplarProjectile
{
public:
	uint32_t                                           bSimulationFinished : 1;                       // 0x07C0 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bDrawDebugTrajectory : 1;                      // 0x07C0 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	struct FVector                                     ImpactLocation;                                // 0x07C4 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     ImpactNormal;                                  // 0x07D0 (0x000C) [0x0000000000002000] (CPF_Transient)
	float                                              InitialMaxSpeed;                               // 0x07DC (0x0004) [0x0000000000002000] (CPF_Transient)
	class UPoplarTargetSearchFilter_Base*              CustomCollisionFilter;                         // 0x07E0 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarTrajectometerProjectile");
		}

		return uClassPointer;
	};

	void eventFellOutOfWorld(class UClass* dmgType);
	void HandleTouch(class AActor* Other, class UPrimitiveComponent* OtherComp, const struct FVector& HitLocation, const struct FVector& HitNormal, bool bIsProximityTouch);
	void DoHitWall(const struct FVector& HitNormal, class AActor* Other, class UPrimitiveComponent* OtherComp, const struct FVector& HitLocation);
	void InitWithVelocity(const struct FVector& StartingVelocity, bool optionalBUpdateRotation);
	void InitializeFromDefinition(class UProjectileDefinition* InDefinition, int32_t InExpLevel, class UWillowDamageTypeDefinition* optionalCustomDamageTypeDefinition, bool optionalBSkipOnSpawn, class UParticleSystem* optionalCustomInFlightEffect, class UExplosionDefinition* optionalCustomExplosionDefinition);
	void StopSimulation(const struct FVector& InLocation, const struct FVector& InNormal);
};

// Class PoplarGame.PoplarProjectileDefinition
// 0x0050 (0x0338 - 0x0388)
class UPoplarProjectileDefinition : public UProjectileDefinition
{
public:
	struct FPointer                                    VfTable_IIPoplarSkinInfoProvider;              // 0x0338 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPmtData                                    PmtData;                                       // 0x0340 (0x0028) [0x0000000000003000] (CPF_Native | CPF_Transient)
	uint32_t                                           bBlockedByShield : 1;                          // 0x0368 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bPlayHitNotification : 1;                      // 0x0368 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	uint32_t                                           bHasDefaultSkin : 1;                           // 0x0368 (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	class UWillowImpactDefinition*                     TouchImpactDefinition;                         // 0x0370 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UWillowImpactDefinition*                     UntouchImpactDefinition;                       // 0x0378 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             TargetHitStatDefinition;                       // 0x0380 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarProjectileDefinition");
		}

		return uClassPointer;
	};

	void OnDestroyed(class UObject* Instigator, class UObject* Projectile, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnReaped(struct FBehaviorConsumerHandle& ConsumerHandle);
};

// Class PoplarGame.PoplarPureEchoAnnouncer
// 0x0030 (0x0290 - 0x02C0)
class APoplarPureEchoAnnouncer : public ADialogPureEchoActor
{
public:
	struct FPointer                                    VfTable_IIDialogEventListener;                 // 0x0290 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IITeamAffiliated;                      // 0x0298 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class TArray<class UDialogSet*>                    DialogSets;                                    // 0x02A0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class ATeamInfo*                                   MyTeamInfo;                                    // 0x02B0 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class UGBXDefinition*                              MyTeamDefinition;                              // 0x02B8 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPureEchoAnnouncer");
		}

		return uClassPointer;
	};

	void ForceColorRefresh();
	class UGBXDefinition* GetTeamDefinition();
	void SetTeamInfo(class ATeamInfo* InTeamInfo);
	class ATeamInfo* GetTeamInfo();
};

// Class PoplarGame.PoplarRewardMessageDefinition
// 0x0018 (0x0058 - 0x0070)
class UPoplarRewardMessageDefinition : public UGBXDefinition
{
public:
	class FString                                      LookupKey;                                     // 0x0058 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	float                                              Priority;                                      // 0x0068 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bCanCombineWithoutMatchingActors : 1;          // 0x006C (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarRewardMessageDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarRotationComponent
// 0x0010 (0x0198 - 0x01A8)
class UPoplarRotationComponent : public UWillowRotationComponent
{
public:
	class APoplarPawn*                                 PoplarPawn;                                    // 0x0198 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarMind*                                 PoplarMind;                                    // 0x01A0 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarRotationComponent");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarScoreboardDefinition
// 0x0040 (0x0058 - 0x0098)
class UPoplarScoreboardDefinition : public UGBXDefinition
{
public:
	class TArray<class UScoreboardStatDefinition*>     StatsTrackedInTeammatePanel;                   // 0x0058 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class UScoreboardStatDefinition*                   StatTrackedInModeBonusPanel;                   // 0x0068 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<class UScoreboardStatDefinition*>     StatsTrackedPerPlayer;                         // 0x0070 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	EScoreboardType                                    ScoreboardType;                                // 0x0080 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            MAX_PLAYER_STATS;                              // 0x0084 (0x0004) [0x0000000000000002] (CPF_Const)   
	int32_t                                            MAX_TEAMMATE_STATS;                            // 0x0088 (0x0004) [0x0000000000000002] (CPF_Const)   
	float                                              TeammateComparisonStatThrottle;                // 0x008C (0x0004) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bViewOpposingTeamInScoreboardDuringCharacterSelect : 1;// 0x0090 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarScoreboardDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarScoreboardGFxMovie
// 0x00F0 (0x05B0 - 0x06A0)
class UPoplarScoreboardGFxMovie : public UWillowGFxMovie3D
{
public:
	struct FPointer                                    VfTable_IIMetaLoadoutObserver;                 // 0x05B0 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIMetaPlayerObserver;                  // 0x05B8 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class APoplarPlayerController*                     PPCOwner;                                      // 0x05C0 (0x0008) [0x0000000000000000]               
	class UPoplarScoreboardGFxMovieDefinition*         MyMovieDefinition;                             // 0x05C8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ScoreboardClip;                                // 0x05D0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarPlayerDetailsGFxMovie*                PlayerDetailsMovie;                            // 0x05D8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class TArray<int32_t>                              PlayerDetailsIdMap;                            // 0x05E0 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FUniqueNetId                                PlayerDetailsUniqueId;                         // 0x05F0 (0x0014) [0x0000000000002000] (CPF_Transient)
	class APoplarGameReplicationInfo*                  CurrentGRI;                                    // 0x0608 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarScoreboardDefinition*                 ScoreboardDef;                                 // 0x0610 (0x0008) [0x0000000000002000] (CPF_Transient)
	class TArray<int32_t>                              SortedPlayerMapping;                           // 0x0618 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<int32_t>                              ScoreboardTeamMapping;                         // 0x0628 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FPlayerDetailInfo>             CachedPlayerInfo;                              // 0x0638 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FScoreboardTeamSumStats>       TeamSumStats;                                  // 0x0648 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            FIRST_PING_BAR_RANGE;                          // 0x0658 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            PING_BAR_RANGE;                                // 0x065C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            TOTAL_PING_BARS;                               // 0x0660 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              PreviousRefreshTime;                           // 0x0664 (0x0004) [0x0000000000000000]               
	uint32_t                                           bShowingCursor : 1;                            // 0x0668 (0x0004) [0x0000000000000000] [0x00000001] 
	uint32_t                                           bDisplayMuteAll : 1;                           // 0x0668 (0x0004) [0x0000000000000000] [0x00000002] 
	uint32_t                                           bMatchEnded : 1;                               // 0x0668 (0x0004) [0x0000000000000000] [0x00000004] 
	uint32_t                                           bHasRunFirstTimeSetup : 1;                     // 0x0668 (0x0004) [0x0000000000000000] [0x00000008] 
	uint32_t                                           bForceInitNoSS : 1;                            // 0x0668 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	uint32_t                                           bForceRefreshSums : 1;                         // 0x0668 (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	int32_t                                            curSelectedTeamIndex;                          // 0x066C (0x0004) [0x0000000000000000]               
	int32_t                                            curSelectedRowIndex;                           // 0x0670 (0x0004) [0x0000000000000000]               
	int32_t                                            CachedCurrentSSState;                          // 0x0674 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  Team1Clip;                                     // 0x0678 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  Team2Clip;                                     // 0x0680 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  PVEClip;                                       // 0x0688 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            MAX_SCOREBOARD_PLAYERS;                        // 0x0690 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint8_t                                           UnknownData00[0xC];                            // 0x0694 (0x000C) MISSED OFFSET

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarScoreboardGFxMovie");
		}

		return uClassPointer;
	};

	void OnMetaXPChanged(class APoplarMetaPlayerReplicationInfo* MPRI, int32_t NewXP);
	void OnPlayerTalkingStateChange(const struct FUniqueNetId& PlayerID, bool bIsTalking);
	void AddPlayerDetailsButton(int32_t Id, const class FString& Caption, bool optionalBDisabled);
	class APoplarPlayerReplicationInfo* GetPlayerPRIFromMapping(int32_t mappedIndex);
	void OnPlayerDetailsLoaded(class UPoplarPlayerDetailsGFxObject* InPlayerDetailsDialog);
	void HidePlayerDetailsMovie();
	void HandlePlayerDetailsButtonClick(int32_t Index);
	void extShowPlayerSelectedDialog(int32_t TeamIndex, int32_t RowIndex);
	void HandleHintInput(const struct FPlatformUserId& UserId, const struct FName& HintTag);
	void ToggleMuteAllPlayers();
	void UpdateMuteAllVisibility();
	void PopulateHintBar();
	void OnInputTypeChanged(bool bNewUsingGamepad);
	void extUpdateSelectedTeamAndRowIndex(int32_t TeamIndex, int32_t RowIndex);
	void AddIgnoreKeys();
	bool HandleInputKey(const struct FPlatformUserId& UserId, const struct FName& ukey, EInputEvent uevent);
	void StartMatchEnded(int32_t RemainingTime, int32_t MaxTime);
	void eventOnClose();
	bool eventStart(bool optionalBStartPaused);
	int32_t GetDisplayedPlayerIndex(int32_t TeamIndex, int32_t PlayerIndex);
	void MovePlayerSelection(bool bMoveDown);
	void DestroyMovie();
	void ShowScoreboard();
	void HideScoreboard();
	void OnNativeTick();
	bool StartNative(bool optionalBStartPaused);
};

// Class PoplarGame.PoplarScoreboardGFxMovieDefinition
// 0x0000 (0x0138 - 0x0138)
class UPoplarScoreboardGFxMovieDefinition : public UWillowGFxMovie3DDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarScoreboardGFxMovieDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarScorePipeline
// 0x00E8 (0x0098 - 0x0180)
class UPoplarScorePipeline : public UGBXPipeline
{
public:
	class APoplarGameInfo*                             PGI;                                           // 0x0098 (0x0008) [0x0000000000000000]               
	class APoplarGameInfoConstruct*                    PGIC;                                          // 0x00A0 (0x0008) [0x0000000000000000]               
	class UPoplarGlobalsDefinition*                    PoplarGlobalsDef;                              // 0x00A8 (0x0008) [0x0000000000000000]               
	struct FScoreEventSummary                          ScoreSummary;                                  // 0x00B0 (0x00C8) [0x0000000000400000] (CPF_NeedCtorLink)
	uint32_t                                           bAwardScoreToCombatParticipants : 1;           // 0x0178 (0x0004) [0x0000000000000000] [0x00000001] 
	uint32_t                                           bAwardScoreToTeam : 1;                         // 0x0178 (0x0004) [0x0000000000000000] [0x00000002] 

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarScorePipeline");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarScrollingList
// 0x0060 (0x00E8 - 0x0148)
class UPoplarScrollingList : public UWillowGFxClikWidget
{
public:
	class TArray<struct FDataProviderInfo>             DataProviderStack;                             // 0x00E8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<int32_t>                              IndexToEventId;                                // 0x00F8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class UWillowGFxMovie*                             MyOwnerMovie;                                  // 0x0108 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bSuppressMovementSound : 1;                    // 0x0110 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bDontFocusFirstAvailableListItem : 1;          // 0x0110 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	class FString                                      BackCaption;                                   // 0x0118 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnListChanged__Delegate;                     // 0x0128 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnSelectedIndexChanged__Delegate;            // 0x0138 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarScrollingList");
		}

		return uClassPointer;
	};

	void PlaySound_VerticalMovement();
	void OnSpinnerValueChange(int32_t EntryIndex, int32_t NewChoiceIndex, const class FString& NewChoiceValue);
	void OnSliderValueChange(int32_t EntryIndex, float NewValue);
	void OnClikEvent(const struct FEventData& Data);
	void ProcessClickEvent(int32_t Idx, const class FString& DataType);
	int32_t GetEventIDForIndex(int32_t Index);
	int32_t GetSelectedIndex();
	void SetSelectedIndex(int32_t Index);
	void SetFocused(int32_t FocusIndex);
	int32_t IsSpinnerListItemInternal();
	bool IsSpinnerListItem();
	int32_t IsSliderListItemInternal();
	bool IsSliderListItem();
	void FocusFirstAvailableListItem();
	void ClearListItems();
	void CommitListItems();
	void AddSliderListItemInternal(const class FString& Caption, bool bDisabled, float StartingValue, float MinValue, float MaxValue, float Increment);
	void AddSliderListItem(int32_t EventId, const class FString& Caption, bool bDisabled, float StartingValue, float MinValue, float MaxValue, float Increment);
	void AddSpinnerListItemInternal(const class FString& Caption, bool bDisabled, int32_t StartingChoiceIndex, const class TArray<class FString>& Choices);
	void AddSpinnerListItem(int32_t EventId, const class FString& Caption, bool bDisabled, int32_t StartingChoiceIndex, const class TArray<class FString>& Choices);
	void AddListItemInternal(const class FString& Item, bool bDisabled, bool bNew);
	void AddListItem(int32_t EventId, const class FString& Caption, bool bDisabled, bool optionalBNew);
	bool HandlePopList();
	void Refresh();
	void PushDataProvider(class UIPoplarScrollingListDataProvider* DataProvider);
	class UIPoplarScrollingListDataProvider* GetCurrentDataProvider();
	void Cleanup();
	void Init(class UWillowGFxMovie* OwnerMovie, class UIPoplarScrollingListDataProvider* DefaultDataProvider);
	void OnSelectedIndexChanged(int32_t NewSelectedIndex);
	void OnListChanged();
};

// Class PoplarGame.PoplarScrollingListDataProviderBase
// 0x0028 (0x0058 - 0x0080)
class UPoplarScrollingListDataProviderBase : public UObject
{
public:
	struct FPointer                                    VfTable_IIPoplarScrollingListDataProvider;     // 0x0058 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class FString                                      MenuDisplayName;                               // 0x0060 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      MenuTooltip;                                   // 0x0070 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarScrollingListDataProviderBase");
		}

		return uClassPointer;
	};

	void Cleanup(class UPoplarScrollingList* TheList);
	class UIPoplarScrollingListDataProvider* GetSubmenuForEvent(int32_t EventId, class UPoplarScrollingList* TheList);
	void Populate(class UPoplarScrollingList* TheList);
	bool HandleSpinnerChange(int32_t EventId, int32_t NewChoiceIndex, const class FString& NewChoiceValue, class UPoplarScrollingList* TheList);
	bool HandleSliderChange(int32_t EventId, float NewSliderValue, class UPoplarScrollingList* TheList);
	bool HandleSelectionRollover(int32_t EventId, class UPoplarScrollingList* TheList);
	bool HandleSelectionChange(int32_t EventId, class UPoplarScrollingList* TheList);
	bool HandleInputKey(const struct FName& ukey, EInputEvent uevent);
	bool HandleClick(int32_t EventId, class UPoplarScrollingList* TheList);
	void OnPop(class UPoplarScrollingList* TheList);
	void OnPush(class UPoplarScrollingList* TheList);
	class FString GetMenuTooltip();
	class FString GetMenuDisplayName();
};

// Class PoplarGame.PoplarScrollingListDataProviderMapList
// 0x0008 (0x0080 - 0x0088)
class UPoplarScrollingListDataProviderMapList : public UPoplarScrollingListDataProviderBase
{
public:
	class UPoplarTestMapsListDefinition*               PoplarMapListDef;                              // 0x0080 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarScrollingListDataProviderMapList");
		}

		return uClassPointer;
	};

	void Populate(class UPoplarScrollingList* TheList);
	bool HandleClick(int32_t EventId, class UPoplarScrollingList* TheList);
	class FString GetMenuDisplayName();
	void Initialize(class UPoplarTestMapsListDefinition* NewPoplarMapListDef);
};

// Class PoplarGame.PoplarScrollingListDataProviderOptionsBase
// 0x0028 (0x0080 - 0x00A8)
class UPoplarScrollingListDataProviderOptionsBase : public UPoplarScrollingListDataProviderBase
{
public:
	class UPoplarOptionsGFxMovie*                      MyOptionsMovie;                                // 0x0080 (0x0008) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FSystemOption>                 RestartSettingInitialValues;                   // 0x0088 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<struct FDescriptionEntry>             Descriptions;                                  // 0x0098 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarScrollingListDataProviderOptionsBase");
		}

		return uClassPointer;
	};

	void OnPop(class UPoplarScrollingList* TheList);
	bool HandleSpinnerChange(int32_t EventId, int32_t NewChoiceIndex, const class FString& NewChoiceValue, class UPoplarScrollingList* TheList);
};

// Class PoplarGame.PoplarScrollingListDataProviderApplyRequiredOption
// 0x0030 (0x00A8 - 0x00D8)
class UPoplarScrollingListDataProviderApplyRequiredOption : public UPoplarScrollingListDataProviderOptionsBase
{
public:
	int32_t                                            CurrentSettingValue;                           // 0x00A8 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            CurrentSpinnerValue;                           // 0x00AC (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FName                                       SettingName;                                   // 0x00B0 (0x0008) [0x0000000000000002] (CPF_Const)   
	class FString                                      LocalizedSettingCaptionString;                 // 0x00B8 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)
	class FString                                      LocalizedSettingDescriptionString;             // 0x00C8 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarScrollingListDataProviderApplyRequiredOption");
		}

		return uClassPointer;
	};

	bool HandleSpinnerChange(int32_t EventId, int32_t NewChoiceIndex, const class FString& NewChoiceValue, class UPoplarScrollingList* TheList);
	void Populate(class UPoplarScrollingList* TheList);
	bool HandleClick(int32_t EventId, class UPoplarScrollingList* TheList);
};

// Class PoplarGame.PoplarScrollingListDataProviderResolutionOptions
// 0x0000 (0x00D8 - 0x00D8)
class UPoplarScrollingListDataProviderResolutionOptions : public UPoplarScrollingListDataProviderApplyRequiredOption
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarScrollingListDataProviderResolutionOptions");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarScrollingListDataProviderWindowModeOptions
// 0x0000 (0x00D8 - 0x00D8)
class UPoplarScrollingListDataProviderWindowModeOptions : public UPoplarScrollingListDataProviderApplyRequiredOption
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarScrollingListDataProviderWindowModeOptions");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarScrollingListDataProviderAudioOptions
// 0x0020 (0x00A8 - 0x00C8)
class UPoplarScrollingListDataProviderAudioOptions : public UPoplarScrollingListDataProviderOptionsBase
{
public:
	EAudio_LoopingExample                              CurrentlyLoopingAudio;                         // 0x00A8 (0x0001) [0x0000000000002000] (CPF_Transient)
	class APoplarPlayerController*                     PPCOwner;                                      // 0x00B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UWillowProfile*                              Profile;                                       // 0x00B8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarScrollingList*                        OptionsList;                                   // 0x00C0 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarScrollingListDataProviderAudioOptions");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarScrollingListDataProviderExtrasOptions
// 0x0010 (0x00A8 - 0x00B8)
class UPoplarScrollingListDataProviderExtrasOptions : public UPoplarScrollingListDataProviderOptionsBase
{
public:
	class UWillowProfile*                              Profile;                                       // 0x00A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarScrollingList*                        OptionsList;                                   // 0x00B0 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarScrollingListDataProviderExtrasOptions");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarScrollingListDataProviderGameOptions
// 0x0028 (0x00A8 - 0x00D0)
class UPoplarScrollingListDataProviderGameOptions : public UPoplarScrollingListDataProviderOptionsBase
{
public:
	class APoplarPlayerController*                     PPCOwner;                                      // 0x00A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UWillowProfile*                              Profile;                                       // 0x00B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarScrollingList*                        OptionsList;                                   // 0x00B8 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bMinimapNeedsReinit : 1;                       // 0x00C0 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bDisableResetTrainingOption : 1;               // 0x00C0 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	class UWillowGFxDialogBox*                         WarningDlg;                                    // 0x00C8 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarScrollingListDataProviderGameOptions");
		}

		return uClassPointer;
	};

	bool OnClearBreadcrumbsClick(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId);
	bool OnResetWarnClick(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& UserId);
	bool HandleClick(int32_t EventId, class UPoplarScrollingList* TheList);
	bool HandleSpinnerChange(int32_t EventId, int32_t NewChoiceIndex, const class FString& NewChoiceValue, class UPoplarScrollingList* TheList);
};

// Class PoplarGame.PoplarScrollingListDataProviderGamepadOptions
// 0x0000 (0x00A8 - 0x00A8)
class UPoplarScrollingListDataProviderGamepadOptions : public UPoplarScrollingListDataProviderOptionsBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarScrollingListDataProviderGamepadOptions");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarScrollingListDataProviderKeyboardMouseOptions
// 0x0008 (0x00A8 - 0x00B0)
class UPoplarScrollingListDataProviderKeyboardMouseOptions : public UPoplarScrollingListDataProviderOptionsBase
{
public:
	class AWillowPlayerController*                     WPCOwner;                                      // 0x00A8 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarScrollingListDataProviderKeyboardMouseOptions");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarScrollingListDataProviderPartyOptions
// 0x0018 (0x00A8 - 0x00C0)
class UPoplarScrollingListDataProviderPartyOptions : public UPoplarScrollingListDataProviderOptionsBase
{
public:
	int32_t                                            InitialChoiceIndex;                            // 0x00A8 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            SelectedChoiceIndex;                           // 0x00AC (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<EPartyNetworkOptions>                 PartyTypeMapping;                              // 0x00B0 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarScrollingListDataProviderPartyOptions");
		}

		return uClassPointer;
	};

	void OnPop(class UPoplarScrollingList* TheList);
};

// Class PoplarGame.PoplarScrollingListDataProviderSpeakerAngles
// 0x0020 (0x00A8 - 0x00C8)
class UPoplarScrollingListDataProviderSpeakerAngles : public UPoplarScrollingListDataProviderOptionsBase
{
public:
	class APoplarPlayerController*                     PPCOwner;                                      // 0x00A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UWillowProfile*                              Profile;                                       // 0x00B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarScrollingList*                        OptionsList;                                   // 0x00B8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarSpeakerAnglesGFxMovie*                SpeakerAnglesMovie;                            // 0x00C0 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarScrollingListDataProviderSpeakerAngles");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarScrollingListDataProviderSpectatorOptions
// 0x0010 (0x00A8 - 0x00B8)
class UPoplarScrollingListDataProviderSpectatorOptions : public UPoplarScrollingListDataProviderOptionsBase
{
public:
	class UWillowProfile*                              Profile;                                       // 0x00A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarScrollingList*                        OptionsList;                                   // 0x00B0 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarScrollingListDataProviderSpectatorOptions");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarScrollingListDataProviderTeamColorOptions
// 0x0020 (0x00A8 - 0x00C8)
class UPoplarScrollingListDataProviderTeamColorOptions : public UPoplarScrollingListDataProviderOptionsBase
{
public:
	class APoplarPlayerController*                     PPCOwner;                                      // 0x00A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UWillowProfile*                              Profile;                                       // 0x00B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            AlliedColorIndexValue;                         // 0x00B8 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            EnemyColorIndexValue;                          // 0x00BC (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            AlliedDefaultColorIndex;                       // 0x00C0 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            EnemyDefaultColorIndex;                        // 0x00C4 (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarScrollingListDataProviderTeamColorOptions");
		}

		return uClassPointer;
	};

	void OnSaveOptionsComplete(const struct FPlatformUserId& UserId, ESaveDataOperationResult Result);
};

// Class PoplarGame.PoplarScrollingListDataProviderTopLevelOptions
// 0x0008 (0x00A8 - 0x00B0)
class UPoplarScrollingListDataProviderTopLevelOptions : public UPoplarScrollingListDataProviderOptionsBase
{
public:
	int32_t                                            BlockingMessageId;                             // 0x00A8 (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarScrollingListDataProviderTopLevelOptions");
		}

		return uClassPointer;
	};

	void OnPop(class UPoplarScrollingList* TheList);
	void OnGetSupportInfo(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
};

// Class PoplarGame.PoplarScrollingListDataProviderVideoOptions
// 0x0020 (0x00A8 - 0x00C8)
class UPoplarScrollingListDataProviderVideoOptions : public UPoplarScrollingListDataProviderOptionsBase
{
public:
	class UHUDScaleGuideGFxMovie*                      ScaleGuide;                                    // 0x00A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class APoplarPlayerController*                     PPCOwner;                                      // 0x00B0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UWillowProfile*                              Profile;                                       // 0x00B8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarScrollingList*                        OptionsList;                                   // 0x00C0 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarScrollingListDataProviderVideoOptions");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarScrollingListDataProviderPause
// 0x0000 (0x0080 - 0x0080)
class UPoplarScrollingListDataProviderPause : public UPoplarScrollingListDataProviderBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarScrollingListDataProviderPause");
		}

		return uClassPointer;
	};

	void Populate(class UPoplarScrollingList* TheList);
	bool HandleClick(int32_t EventId, class UPoplarScrollingList* TheList);
};

// Class PoplarGame.PoplarSeqAct_ActivateInstancedMissionBehaviorSequences
// 0x0020 (0x00E8 - 0x0108)
class UPoplarSeqAct_ActivateInstancedMissionBehaviorSequences : public USequenceAction
{
public:
	class UPoplarMissionDefinition*                    Mission;                                       // 0x00E8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarMissionObjectiveDefinition*           MissionObjective;                              // 0x00F0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       SequenceName;                                  // 0x00F8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bCustomObjComment : 1;                         // 0x0100 (0x0004) [0x0000000800000000] [0x00000001] 

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSeqAct_ActivateInstancedMissionBehaviorSequences");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSeqAct_ActivateMusicDefinition
// 0x0008 (0x00E8 - 0x00F0)
class UPoplarSeqAct_ActivateMusicDefinition : public USequenceAction
{
public:
	class UPoplarMusicDefinition*                      MusicDefinition;                               // 0x00E8 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSeqAct_ActivateMusicDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSeqAct_CharacterLayout
// 0x0028 (0x0210 - 0x0238)
class UPoplarSeqAct_CharacterLayout : public USeqAct_Interp
{
public:
	class TArray<struct FCharacterLayoutKey>           CharacterLayouts;                              // 0x0210 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	uint32_t                                           bPreviewLayouts : 1;                           // 0x0220 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bLayoutChanged : 1;                            // 0x0220 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	int32_t                                            CurrentTeamSize;                               // 0x0224 (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<class APoplarPlayerReplicationInfo*>  Teammates;                                     // 0x0228 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSeqAct_CharacterLayout");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSeqAct_CharacterLevelStreaming
// 0x0000 (0x0128 - 0x0128)
class UPoplarSeqAct_CharacterLevelStreaming : public USeqAct_LevelStreaming
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSeqAct_CharacterLevelStreaming");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSeqAct_CompleteMission
// 0x0008 (0x00E8 - 0x00F0)
class UPoplarSeqAct_CompleteMission : public USequenceAction
{
public:
	class UPoplarMissionDefinition*                    AssociatedMission;                             // 0x00E8 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSeqAct_CompleteMission");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSeqAct_FailPlayerChallenge
// 0x0010 (0x00E8 - 0x00F8)
class UPoplarSeqAct_FailPlayerChallenge : public USequenceAction
{
public:
	class UPoplarChallengeDefinition*                  Challenge;                                     // 0x00E8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bFailAllPlayers : 1;                           // 0x00F0 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSeqAct_FailPlayerChallenge");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSeqAct_GetPackToOpen
// 0x0000 (0x00E8 - 0x00E8)
class UPoplarSeqAct_GetPackToOpen : public USequenceAction
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSeqAct_GetPackToOpen");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSeqAct_GiveChallengeToPlayer
// 0x0050 (0x00E8 - 0x0138)
class UPoplarSeqAct_GiveChallengeToPlayer : public USequenceAction
{
public:
	class UPoplarChallengeDefinition*                  Challenge;                                     // 0x00E8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bPinToHUD : 1;                                 // 0x00F0 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bGiveToAllPlayers : 1;                         // 0x00F0 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                OptionalChallengeTime;                         // 0x00F8 (0x0020) [0x0000000000000001] (CPF_Edit)    
	struct FAttributeInitializationData                OptionalChallengeLevel;                        // 0x0118 (0x0020) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSeqAct_GiveChallengeToPlayer");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSeqAct_MainMenuStandinLayout
// 0x0010 (0x0210 - 0x0220)
class UPoplarSeqAct_MainMenuStandinLayout : public USeqAct_Interp
{
public:
	class APoplarPlayerController*                     PPCOwner;                                      // 0x0210 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              CurrentBackgroundMatineeTime;                  // 0x0218 (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSeqAct_MainMenuStandinLayout");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSeqAct_MissionCustomEvent
// 0x0010 (0x00E8 - 0x00F8)
class UPoplarSeqAct_MissionCustomEvent : public USequenceAction
{
public:
	class UPoplarMissionDefinition*                    AssociatedMission;                             // 0x00E8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       EventName;                                     // 0x00F0 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSeqAct_MissionCustomEvent");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSeqAct_MusicRemoteEvent
// 0x0008 (0x00E8 - 0x00F0)
class UPoplarSeqAct_MusicRemoteEvent : public USequenceAction
{
public:
	struct FName                                       CustomEventName;                               // 0x00E8 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSeqAct_MusicRemoteEvent");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSeqAct_MusicSystemEvent
// 0x0010 (0x00E8 - 0x00F8)
class UPoplarSeqAct_MusicSystemEvent : public USequenceAction
{
public:
	class UPoplarMusicDefinition*                      TargetMusicDefinition;                         // 0x00E8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       CustomEventName;                               // 0x00F0 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSeqAct_MusicSystemEvent");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSeqAct_SendEventToGameInfo
// 0x0030 (0x00E8 - 0x0118)
class UPoplarSeqAct_SendEventToGameInfo : public USequenceAction
{
public:
	struct FName                                       EventToTrigger;                                // 0x00E8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AActor*                                      InstigatorActor;                               // 0x00F0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AActor*                                      OtherActor;                                    // 0x00F8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarTeamDefinition*                       TeamDef;                                       // 0x0100 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarLaneDefinition*                       LaneDef;                                       // 0x0108 (0x0008) [0x0000000000000001] (CPF_Edit)    
	int32_t                                            Index;                                         // 0x0110 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AddedFloatParam;                               // 0x0114 (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSeqAct_SendEventToGameInfo");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSeqAct_SendEventToGameTest
// 0x0028 (0x00E8 - 0x0110)
class UPoplarSeqAct_SendEventToGameTest : public USequenceAction
{
public:
	struct FName                                       EventToTrigger;                                // 0x00E8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AActor*                                      InstigatorActor;                               // 0x00F0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class AActor*                                      OtherActor;                                    // 0x00F8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarTeamDefinition*                       TeamDef;                                       // 0x0100 (0x0008) [0x0000000000000001] (CPF_Edit)    
	int32_t                                            Index;                                         // 0x0108 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              AddedFloatParam;                               // 0x010C (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSeqAct_SendEventToGameTest");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSeqAct_SetEscort
// 0x0018 (0x00E8 - 0x0100)
class UPoplarSeqAct_SetEscort : public USequenceAction
{
public:
	class UObject*                                     EscortPawn;                                    // 0x00E8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class APoplarEscortNode*                           EscortNode;                                    // 0x00F0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              UpdatePeriod;                                  // 0x00F8 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSeqAct_SetEscort");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSeqAct_SpawnBot
// 0x0050 (0x0100 - 0x0150)
class UPoplarSeqAct_SpawnBot : public USeqAct_Latent
{
public:
	struct FPointer                                    VfTable_IIStreamingDataEvent;                  // 0x0100 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UPlayerNameIdentifierDefinition*             PlayerBot;                                     // 0x0108 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       BotTeam;                                       // 0x0110 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bIsNPC : 1;                                    // 0x0118 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	class TArray<class UPoplarMetaSkinDefinition*>     Skins;                                         // 0x0120 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	int32_t                                            SkinIndex;                                     // 0x0130 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int32_t                                            Difficulty;                                    // 0x0134 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarPlayerClassDefinition*                BotPlayerClass;                                // 0x0138 (0x0008) [0x0000000000002002] (CPF_Const | CPF_Transient)
	class UPoplarSkinDefinition*                       BotSkin;                                       // 0x0140 (0x0008) [0x0000000000002002] (CPF_Const | CPF_Transient)
	class AActor*                                      SpawnedBot;                                    // 0x0148 (0x0008) [0x0000000000002002] (CPF_Const | CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSeqAct_SpawnBot");
		}

		return uClassPointer;
	};

	void OnBotSpawned(class AActor* BotSpawned);
};

// Class PoplarGame.PoplarSeqAct_StartControlledMove
// 0x0038 (0x00E8 - 0x0120)
class UPoplarSeqAct_StartControlledMove : public USequenceAction
{
public:
	class UPoplarControlledMoveDefinition*             ControlledMove;                                // 0x00E8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              SpeedOverride;                                 // 0x00F0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              DurationOverride;                              // 0x00F4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              LaunchAngleOverride;                           // 0x00F8 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class AActor*                                      TargetActor;                                   // 0x0100 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FVector                                     TargetLocation;                                // 0x0108 (0x000C) [0x0000000000000001] (CPF_Edit)    
	class AActor*                                      Instigator;                                    // 0x0118 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSeqAct_StartControlledMove");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSeqAct_WaypointObjective
// 0x0020 (0x00E8 - 0x0108)
class UPoplarSeqAct_WaypointObjective : public USequenceAction
{
public:
	uint32_t                                           bRemoveObjective : 1;                          // 0x00E8 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	struct FPoplarMissionObjectiveWaypointData         WaypointInfo;                                  // 0x00F0 (0x0010) [0x0000000000000001] (CPF_Edit)    
	class UPoplarMissionObjectiveDefinition*           WaypointObjective;                             // 0x0100 (0x0008) [0x0000000000000000]               

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSeqAct_WaypointObjective");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSeqEvent_MatchState
// 0x0008 (0x0118 - 0x0120)
class UPoplarSeqEvent_MatchState : public USequenceEvent
{
public:
	EMatchStateEvent                                   Event;                                         // 0x0118 (0x0001) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSeqEvent_MatchState");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSeqEvent_MissionRemoteEvent
// 0x0010 (0x0118 - 0x0128)
class UPoplarSeqEvent_MissionRemoteEvent : public USequenceEvent
{
public:
	class UPoplarMissionDefinition*                    AssociatedMissionDefinition;                   // 0x0118 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FName                                       EventName;                                     // 0x0120 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSeqEvent_MissionRemoteEvent");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSeqEvent_OnHubStateChanged
// 0x0008 (0x0118 - 0x0120)
class UPoplarSeqEvent_OnHubStateChanged : public USequenceEvent
{
public:
	int32_t                                            SpawnerIndex;                                  // 0x0118 (0x0004) [0x0000000000000000]               

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSeqEvent_OnHubStateChanged");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSeqEvent_OnSwitchStateChanged
// 0x0008 (0x0118 - 0x0120)
class UPoplarSeqEvent_OnSwitchStateChanged : public USequenceEvent
{
public:
	int32_t                                            SpawnerIndex;                                  // 0x0118 (0x0004) [0x0000000000000000]               
	int32_t                                            SwitchID;                                      // 0x011C (0x0004) [0x0000000000000000]               

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSeqEvent_OnSwitchStateChanged");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSeqEvent_SpawnedMissionPickup
// 0x0000 (0x0118 - 0x0118)
class UPoplarSeqEvent_SpawnedMissionPickup : public USequenceEvent
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSeqEvent_SpawnedMissionPickup");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSharedEventProviderDefinition
// 0x0000 (0x0068 - 0x0068)
class UPoplarSharedEventProviderDefinition : public USharedEventProviderDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSharedEventProviderDefinition");
		}

		return uClassPointer;
	};

	void OnMatchEnded(class AActor* ThePawn, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnReviveGiveUp(class AActor* ThePawn, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnBledOut(class AActor* ThePawn, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnWaitingForRevive(class AActor* ThePawn, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnReviveCallForHelp(class AActor* ThePawn, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnBuildNodeHackEndedUnsuccessful(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnBuildNodeHackEndedSuccessful(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnBuildNodeHackStart(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnBuildableRepaired(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnBuildablePurchased(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnBuildNodeMenuSelectionChanged(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnBuildNodeMenuClosed(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnBuildNodeMenuOpened(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnCreatedPlayerAlertInMinimap(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnMinimapClosed(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnMinimapOpened(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnHelixSelectionMade(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnHelixClosed(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnHelixOpened(struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnAssistModifierAchieved(EAssistModifier EventOutput, class AActor* KillerPawn, class AActor* VictimPawn, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnKillModifierAchieved(EKillModifier EventOutput, class AActor* KillerPawn, class AActor* VictimPawn, int32_t DamageTags, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnNoKillModifierAchieved(class AActor* KillerPawn, class AActor* VictimPawn, int32_t DamageTags, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnMeleeAttack(class AActor* ThePawn, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnLanded(class AActor* ThePawn, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnJumped(class AActor* ThePawn, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnEnemySeen(class AActor* Enemy, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnRevived(class AActor* ThePawn, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnSpawned(class AActor* ThePawn, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnDied(class AActor* KilledPawn, class AActor* KillerPawn, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnKilledEnemy(class AActor* KillerPawn, class AActor* KilledEnemyPawn, int32_t DamageTags, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnHitEnemy(class AActor* DamagedPawn, class AActor* DamageInstigator, bool bWasCrit, float HealthDamage, float ShieldDamage, bool bWasInjured, const struct FVector& HitLocation, float ExcessDamageDone, int32_t PenetrationCount, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnHealed(class AActor* HealedPawn, class AActor* Healer, float HealthHealAmount, float ShieldHealAmount, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnTakeDamage(class AActor* DamagedPawn, class AActor* DamageInstigator, bool bWasCrit, float HealthDamage, float ShieldDamage, bool bWasInjured, const struct FVector& HitLocation, float ExcessDamageDone, int32_t PenetrationCount, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void TranslateEventToBehaviorEvent(int32_t EventOutput, struct FBehaviorConsumerHandle& TheConsumerHandle, struct FSharedEventMessageData& MsgData);
};

// Class PoplarGame.PoplarAIEventProviderDefinition
// 0x0000 (0x0068 - 0x0068)
class UPoplarAIEventProviderDefinition : public UPoplarSharedEventProviderDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarAIEventProviderDefinition");
		}

		return uClassPointer;
	};

	void OnMinionWaveMemberDied(class AActor* Minion, class AActor* DeadMinion, int32_t NumRemainingInWave, int32_t NumTotalInWave, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnMinionWaveStopSpawning(class AActor* LastMinion, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnMinionWaveStartSpawning(class AActor* FirstMinion, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void TranslateEventToBehaviorEvent(int32_t EventOutput, struct FBehaviorConsumerHandle& TheConsumerHandle, struct FSharedEventMessageData& MsgData);
};

// Class PoplarGame.PoplarPlayerEventProviderDefinition
// 0x0000 (0x0068 - 0x0068)
class UPoplarPlayerEventProviderDefinition : public UPoplarSharedEventProviderDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPlayerEventProviderDefinition");
		}

		return uClassPointer;
	};

	void OnOvershieldRenewed(class AActor* TargetActor, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnOvershieldGained(class AActor* TargetActor, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnOvershieldDepleted(class AActor* TargetActor, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnShieldNowIdle(class AActor* TargetActor, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnShieldNowNotRegenerating(class AActor* TargetActor, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnShieldRegenerating(class AActor* TargetActor, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnShieldNowNotFullyCharged(class AActor* TargetActor, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnShieldFullyCharged(class AActor* TargetActor, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnShieldNowNotDepleted(class AActor* TargetActor, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnShieldDepleted(class AActor* TargetActor, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnTargetedAlertPoint(class AActor* TargetActor, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnAreaAlertPoint(const struct FVector& AlertLocation, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnTeleportSucceeded(class AActor* ThePlayerPawn, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnTeleportPostMove(class AActor* ThePlayerPawn, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnTeleportPreMove(class AActor* ThePlayerPawn, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnTeleportInterrupted(class AActor* ThePlayerPawn, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnTeleportStarted(class AActor* ThePlayerPawn, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnLeveledUp(class AActor* ThePawn, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnSkillsBlockedByCrowdControlDebuffFeedback(struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnSkillActivationFailure(class AActor* ThePlayerPawn, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnHasCashSurplus(class AActor* ThePlayerPawn, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnDamagedByTower(class AActor* ThePlayerPawn, class AActor* TheTower, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnHasLowHealth(class AActor* ThePlayerPawn, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnUsedSkill(class AActor* ThePlayerPawn, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnReceivingStealthCoverage(class AActor* ThePlayerPawn, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnExitedBase(class AActor* ThePlayerPawn, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnEnteredBase(class AActor* ThePlayerPawn, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnActionSkillEnergyRequirementFailed(struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnActionSkillCooldownRequirementFailed(struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnActionSkillTargetRequirementFailed(struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnJoinedGame(class AActor* ThePlayerPawn, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void TranslateEventToBehaviorEvent(int32_t EventOutput, struct FBehaviorConsumerHandle& TheConsumerHandle, struct FSharedEventMessageData& MsgData);
};

// Class PoplarGame.PoplarShop3GFxMovie
// 0x0268 (0x0450 - 0x06B8)
class UPoplarShop3GFxMovie : public UWillowGFxMovie
{
public:
	struct FPointer                                    VfTable_IIHelixParentMovie;                    // 0x0450 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class APoplarPlayerController*                     PPCOwner;                                      // 0x0458 (0x0008) [0x0000000000000000]               
	class UPoplarShopGFxMovieDefinition*               ShopMovieDef;                                  // 0x0460 (0x0008) [0x0000000000000000]               
	class UPoplarShop3StorePanelGFxObject*             StorePanel;                                    // 0x0468 (0x0008) [0x0000000000000000]               
	class UPoplarShop3ItemPanelGFxObject*              ItemPanelLeft;                                 // 0x0470 (0x0008) [0x0000000000000000]               
	class UPoplarShop3ItemPanelGFxObject*              ItemPanelRight;                                // 0x0478 (0x0008) [0x0000000000000000]               
	class UPoplarShop3ItemPanelGFxObject*              MutationPanel;                                 // 0x0480 (0x0008) [0x0000000000000000]               
	struct FPointer                                    CurrentAugLeft;                                // 0x0488 (0x0008) [0x0000000000001000] (CPF_Native)  
	struct FPointer                                    CurrentAugRight;                               // 0x0490 (0x0008) [0x0000000000001000] (CPF_Native)  
	struct FPointer                                    CurrentAugMutation;                            // 0x0498 (0x0008) [0x0000000000001000] (CPF_Native)  
	class FString                                      LocalizedUnlockString;                         // 0x04A0 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class UGFxObject*                                  ItemTitle;                                     // 0x04B0 (0x0008) [0x0000000000000000]               
	class UGFxObject*                                  ItemDesc;                                      // 0x04B8 (0x0008) [0x0000000000000000]               
	uint32_t                                           OverviewMode : 1;                              // 0x04C0 (0x0004) [0x0000000000000000] [0x00000001] 
	uint32_t                                           bSkillsInitialized : 1;                        // 0x04C0 (0x0004) [0x0000000000000000] [0x00000002] 
	class UGFxObject*                                  SkillDescriptionsClip;                         // 0x04C8 (0x0008) [0x0000000000000000]               
	struct FSkillDisplayData                           SkillData[0x6];                                // 0x04D0 (0x01E0) [0x0000000000400000] (CPF_NeedCtorLink)
	float                                              LastWidgetUpdateTime;                          // 0x06B0 (0x0004) [0x0000000000000000]               
	float                                              UpdateWidgetDelay;                             // 0x06B4 (0x0004) [0x0000000000000000]               

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarShop3GFxMovie");
		}

		return uClassPointer;
	};

	void HandleHintInput(const struct FPlatformUserId& UserId, const struct FName& HintTag);
	void PopulateHintBar();
	void ToggleOverview();
	bool HandleInputKey(const struct FPlatformUserId& InUserId, const struct FName& ukey, EInputEvent uevent);
	void UpdateSelection(int32_t Row);
	void extOnStoreItemClicked(int32_t Row, int32_t Column);
	void extOnStoreItemFocused(int32_t Row);
	void extOnStorePanelLoaded(class UPoplarShop3StorePanelGFxObject* StorePanelClip);
	void extOnItemPanelLoaded(class UPoplarShop3ItemPanelGFxObject* ItemPanelClip, const class FString& PanelName);
	void OnCurrentAugsChanged();
	void eventOnClose();
	bool InitSkillDescriptions();
	bool SetStaticData();
	void TrySetStaticData();
	bool eventStart(bool optionalStartPaused);
};

// Class PoplarGame.PoplarShop3ItemPanelGFxObject
// 0x0038 (0x00D8 - 0x0110)
class UPoplarShop3ItemPanelGFxObject : public UGFxObject
{
public:
	class UIHelixParentMovie*                          ParentMovie_Object;                            // 0x00D8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UIHelixParentMovie*                          ParentMovie_Interface;                         // 0x00E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  SelectionName;                                 // 0x00E8 (0x0008) [0x0000000000000000]               
	class UGFxObject*                                  SelectionDescription;                          // 0x00F0 (0x0008) [0x0000000000000000]               
	int32_t                                            CurrentCurrency;                               // 0x00F8 (0x0004) [0x0000000000000000]               
	int32_t                                            CachedCurrency;                                // 0x00FC (0x0004) [0x0000000000000000]               
	int32_t                                            CurrentItemCost;                               // 0x0100 (0x0004) [0x0000000000000000]               
	int32_t                                            CachedItemCost;                                // 0x0104 (0x0004) [0x0000000000000000]               
	class UPoplarAugDefinition*                        CurrentAug;                                    // 0x0108 (0x0008) [0x0000000000000000]               

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarShop3ItemPanelGFxObject");
		}

		return uClassPointer;
	};

	void RefreshPanel();
	void Init(class UWillowGFxMovie* InParentMovie);
};

// Class PoplarGame.PoplarShop3StorePanelGFxObject
// 0x12E8 (0x00D8 - 0x13C0)
class UPoplarShop3StorePanelGFxObject : public UGFxObject
{
public:
	struct FShopAugData                                ItemGrid[0x14];                                // 0x00D8 (0x0BE0) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FShopAugData                                MutationGrid[0xA];                             // 0x0CB8 (0x05F0) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FPointer                                    Augs;                                          // 0x12A8 (0x0008) [0x0000000000001000] (CPF_Native)  
	struct FAugInstance                                MutationAugInstances[0xA];                     // 0x12B0 (0x00F0) [0x0000000000000000]               
	class UIHelixParentMovie*                          ParentMovie_Object;                            // 0x13A0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UIHelixParentMovie*                          ParentMovie_Interface;                         // 0x13A8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGFxObject*                                  ShopWindow;                                    // 0x13B0 (0x0008) [0x0000000000000000]               
	int32_t                                            SelectionRow;                                  // 0x13B8 (0x0004) [0x0000000000000000]               

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarShop3StorePanelGFxObject");
		}

		return uClassPointer;
	};

	void Autoscroll();
	void ClickPurchase(int32_t Row, int32_t Column);
	void NavigateDown();
	void NavigateUp();
	void Update();
	void Init(class UWillowGFxMovie* inParent);
};

// Class PoplarGame.PoplarShopGFxMovieDefinition
// 0x0058 (0x0100 - 0x0158)
class UPoplarShopGFxMovieDefinition : public UGFxMovieDefinition
{
public:
	float                                              ShopScrollDelay;                               // 0x0100 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UInputButtonDefinition*                      PurchaseLeftAugConsole;                        // 0x0108 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UInputButtonDefinition*                      PurchaseLeftAugPC;                             // 0x0110 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UInputButtonDefinition*                      PurchaseRightAugConsole;                       // 0x0118 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UInputButtonDefinition*                      PurchaseRightAugPC;                            // 0x0120 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UInputButtonDefinition*                      PurchaseMutationConsole;                       // 0x0128 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UInputButtonDefinition*                      PurchaseMutationPC;                            // 0x0130 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UInputButtonDefinition*                      ToggleOverviewConsole;                         // 0x0138 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UInputButtonDefinition*                      ToggleOverviewPC;                              // 0x0140 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UInputButtonDefinition*                      CloseShopConsole;                              // 0x0148 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UInputButtonDefinition*                      CloseShopPC;                                   // 0x0150 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarShopGFxMovieDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSkelControl_AttributeAnimatedBone
// 0x00F8 (0x0120 - 0x0218)
class UPoplarSkelControl_AttributeAnimatedBone : public USkelControlSingleBone
{
public:
	struct FAttributeInitializationData                Attribute;                                     // 0x0120 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FRotator                                    IdleRotationExtent;                            // 0x0140 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FRotator                                    ActiveRotationExtent;                          // 0x014C (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeBoneRotationState                 IdleRotationState;                             // 0x0158 (0x0010) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeBoneRotationState                 ActiveRotationState;                           // 0x0168 (0x0010) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeBoneRotationState                 RecoverRotationState;                          // 0x0178 (0x0010) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FVector                                     IdleTranslationExtent;                         // 0x0188 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FVector                                     ActiveTranslationExtent;                       // 0x0194 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeBoneTranslationState              IdleTranslationState;                          // 0x01A0 (0x0010) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeBoneTranslationState              ActiveTranslationState;                        // 0x01B0 (0x0010) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeBoneTranslationState              RecoverTranslationState;                       // 0x01C0 (0x0010) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bApplyScale : 1;                               // 0x01D0 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bWasActive : 1;                                // 0x01D0 (0x0004) [0x0000000000002002] [0x00000002] (CPF_Const | CPF_Transient)
	uint32_t                                           bRotationReversed : 1;                         // 0x01D0 (0x0004) [0x0000000000002002] [0x00000004] (CPF_Const | CPF_Transient)
	uint32_t                                           bTranslationReversed : 1;                      // 0x01D0 (0x0004) [0x0000000000002002] [0x00000008] (CPF_Const | CPF_Transient)
	uint32_t                                           bScaleReversed : 1;                            // 0x01D0 (0x0004) [0x0000000000002002] [0x00000010] (CPF_Const | CPF_Transient)
	uint32_t                                           bRotationRecovering : 1;                       // 0x01D0 (0x0004) [0x0000000000002002] [0x00000020] (CPF_Const | CPF_Transient)
	uint32_t                                           bTranslationRecovering : 1;                    // 0x01D0 (0x0004) [0x0000000000002002] [0x00000040] (CPF_Const | CPF_Transient)
	uint32_t                                           bScaleRecovering : 1;                          // 0x01D0 (0x0004) [0x0000000000002002] [0x00000080] (CPF_Const | CPF_Transient)
	float                                              IdleScaleExtent;                               // 0x01D4 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              ActiveScaleExtent;                             // 0x01D8 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeBoneScaleState                    IdleScaleState;                                // 0x01DC (0x0010) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeBoneScaleState                    ActiveScaleState;                              // 0x01EC (0x0010) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeBoneScaleState                    RecoverScaleState;                             // 0x01FC (0x0010) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              CurrentRotationalSpeed;                        // 0x020C (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	float                                              CurrentLinearSpeed;                            // 0x0210 (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)
	float                                              CurrentScalarSpeed;                            // 0x0214 (0x0004) [0x0000000000002002] (CPF_Const | CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSkelControl_AttributeAnimatedBone");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSkelControl_LeftHandGripWeapon
// 0x0010 (0x0158 - 0x0168)
class UPoplarSkelControl_LeftHandGripWeapon : public USkelControlLimb
{
public:
	uint32_t                                           bEditWeaponHoldIKInfo : 1;                     // 0x0158 (0x0004) [0x0000000800002001] [0x00000001] (CPF_Edit | CPF_Transient)
	class UPoplarBodyClassDefinition*                  CachedBodyClass;                               // 0x0160 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSkelControl_LeftHandGripWeapon");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSkill
// 0x0028 (0x0130 - 0x0158)
class UPoplarSkill : public USkill
{
public:
	class UPoplarSkillDefinition*                      PoplarDefinition;                              // 0x0130 (0x0008) [0x0000000000000000]               
	struct FBuffSkillData                              BuffData;                                      // 0x0138 (0x0018) [0x0000000000002000] (CPF_Transient)
	EPoplarSkillConfirmationStage                      ConfirmationStage;                             // 0x0150 (0x0001) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bDeactivationProcessRunning : 1;               // 0x0154 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSkill");
		}

		return uClassPointer;
	};

	class AActionSkill* GetActionSkill();
	void NotifySkillShieldEvent(EShieldEvent ShieldEvent, class AActor* EventInstigator);
	void NotifySkillCrowdControlEvent(ECrowdControlState CrowdControlType, class AActor* EventInstigator, class AActor* EventRecipient, ECrowdControlEventType EventType);
	void NotifyActionSkillEvent(EActionSkillEventType EventType, EActionSkillSlot ActionSkillSlot, class AController* EventRecipient, class AActor* optionalActionSkillTarget);
	void NotifySkillDamagedEvent(ESkillEventType EventType, class AActor* EventRecipient, class UClass* DamageSource, class UDamagePipeline* optionalPipeline);
	void NotifySkillEvent(ESkillEventType EventType, class AActor* EventRecipient, class UClass* optionalDamageSource, class UDamagePipeline* optionalPipeline, class UObject* optionalContextObject);
	void eventCancelForExecution();
	void eventConfirmForExecution();
	void eventQueueCancelForExecution();
	void eventQueueConfirmForExecution();
	bool IsPendingConfirm();
	void SetWaitingForConfirmation();
	void NotifyMatchTrackerSkillDeactivated();
	void NotifyMatchTrackerSkillActivated();
	void eventDeactivate(bool optionalBForceDeactivate);
	bool IsSkillInstigatorValid();
	void SkillExecutionEvents(bool bWithConfirmation);
	bool eventActivate();
};

// Class PoplarGame.PoplarSkillAssistEventConstraints
// 0x0008 (0x0058 - 0x0060)
class UPoplarSkillAssistEventConstraints : public UObject
{
public:
	uint32_t                                           bMustHaveHealedKiller : 1;                     // 0x0058 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bMustHaveHealedAssister : 1;                   // 0x0058 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	uint32_t                                           bMustHaveShieldedKiller : 1;                   // 0x0058 (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	uint32_t                                           bMustHaveShieldedAssister : 1;                 // 0x0058 (0x0004) [0x0000000000000003] [0x00000008] (CPF_Edit | CPF_Const)
	uint32_t                                           bMustHaveBuffedKiller : 1;                     // 0x0058 (0x0004) [0x0000000000000003] [0x00000010] (CPF_Edit | CPF_Const)
	uint32_t                                           bMustHaveDamagedVictim : 1;                    // 0x0058 (0x0004) [0x0000000000000003] [0x00000020] (CPF_Edit | CPF_Const)
	uint32_t                                           bMustHaveDidntDamagedVictim : 1;               // 0x0058 (0x0004) [0x0000000000000003] [0x00000040] (CPF_Edit | CPF_Const)
	uint32_t                                           bMustHaveNeverDamagedByVictim : 1;             // 0x0058 (0x0004) [0x0000000000000003] [0x00000080] (CPF_Edit | CPF_Const)
	uint32_t                                           bMustHaveTopDamageDealer : 1;                  // 0x0058 (0x0004) [0x0000000000000003] [0x00000100] (CPF_Edit | CPF_Const)
	uint32_t                                           bMustHaveStunnedVictim : 1;                    // 0x0058 (0x0004) [0x0000000000000003] [0x00000200] (CPF_Edit | CPF_Const)
	uint32_t                                           bMustHaveBlindedVictim : 1;                    // 0x0058 (0x0004) [0x0000000000000003] [0x00000400] (CPF_Edit | CPF_Const)
	uint32_t                                           bMustHaveSlowedVictim : 1;                     // 0x0058 (0x0004) [0x0000000000000003] [0x00000800] (CPF_Edit | CPF_Const)
	uint32_t                                           bMustHaveDebuffedVictim : 1;                   // 0x0058 (0x0004) [0x0000000000000003] [0x00001000] (CPF_Edit | CPF_Const)
	uint32_t                                           bMustHaveMarkedVictimWithPlayerAlert : 1;      // 0x0058 (0x0004) [0x0000000000000003] [0x00002000] (CPF_Edit | CPF_Const)
	uint32_t                                           bMustHaveGenericallyCrowdControlledVictim : 1; // 0x0058 (0x0004) [0x0000000000000003] [0x00004000] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSkillAssistEventConstraints");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSkillDamageEventConstraints
// 0x0008 (0x0078 - 0x0080)
class UPoplarSkillDamageEventConstraints : public USkillDamageEventConstraints
{
public:
	EDamageTagTest                                     DamageTagsTest;                                // 0x0078 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FDamageTags                                 DamageTags;                                    // 0x007C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSkillDamageEventConstraints");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSkillDefinition
// 0x0088 (0x01D0 - 0x0258)
class UPoplarSkillDefinition : public USkillDefinition
{
public:
	struct FPmtData                                    PmtData;                                       // 0x01D0 (0x0028) [0x0000000000003000] (CPF_Native | CPF_Transient)
	class UPoplarActionSkillDefinition*                ActionSkillDefinition;                         // 0x01F8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bReceiveAllActionSkillAbilityNotifications : 1;// 0x0200 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bUsesSecondarySkillEvents : 1;                 // 0x0200 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	class UPoplarActionSkillDefinition*                ActionSkillAbilityNotificationTag;             // 0x0208 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class TArray<struct FSkillAssistEventData>         AssistEvents;                                  // 0x0210 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UPoplarActionDefinition*                     TrackedActionDefinition;                       // 0x0220 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<class UMarkupAttributePresentationDefinition*> SkillDescriptionPresentations;                 // 0x0228 (0x0010) [0x000000000440000B] (CPF_Edit | CPF_Const | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class FString                                      NextLevelDescription;                          // 0x0238 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      NextLevelString;                               // 0x0248 (0x0010) [0x0000000000408002] (CPF_Const | CPF_Localized | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSkillDefinition");
		}

		return uClassPointer;
	};

	void OnPurchasedBuildable(class UObject* Buildable, int32_t Cost, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnCooldownStarted(class AActor* SkillInstigator, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnShieldEvent(EShieldEvent EventOutput, class UObject* EventInstigator, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnCrowdControlEnded(ECrowdControlState EventOutput, class UObject* EventInstigator, class UObject* EventRecipient, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnCrowdControlled(ECrowdControlState EventOutput, class UObject* EventInstigator, class UObject* EventRecipient, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnTauntEnded(class AActor* SkillInstigator, bool bInterrupted, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnTauntStarted(class AActor* SkillInstigator, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnAssistedKillingEnemy(const struct FName& SpecializedEventName, class AActor* SkillInstigator, class AActor* Enemy, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnSecondarySkillEvent(const struct FName& SpecializedEventName, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnCapturedCapturePad(class AActor* SkillInstigator, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnNeutralizedCapturePad(class AActor* SkillInstigator, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnPickupCollected(class AActor* SkillInstigator, class UObject* PoplarPickup, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnLanded(class AActor* SkillInstigator, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnStealthBroken(class AActor* SkillInstigator, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnStealthed(class AActor* SkillInstigator, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnConfirmationCanceled(class AActor* SkillInstigator, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnConfirmationApproved(class AActor* SkillInstigator, struct FBehaviorConsumerHandle& TheConsumerHandle);
	void OnActionSkillDeactivated(class AActor* SkillInstigator, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnActionSkillActivated(class AActor* SkillInstigator, class AActor* AutoAimTarget, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnBlockedEnemy(class AActor* SkillInstigator, class UObject* Enemy, float BlockedDamage, int32_t DamageTags, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnBlockedByEnemy(const struct FName& SpecializedEventName, class AActor* SkillInstigator, class AActor* Enemy, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnCounteredEnemy(class AActor* SkillInstigator, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnCounteredByEnemy(class AActor* SkillInstigator, class AActor* Enemy, struct FBehaviorConsumerHandle& ConsumerHandle);
	class AActionSkill* GetActionSkillArchetype();
	class AActionSkill* GetActionSkill(class AController* InController);
};

// Class PoplarGame.PoplarSkillEffectManager
// 0x0010 (0x0278 - 0x0288)
class APoplarSkillEffectManager : public ASkillEffectManager
{
public:
	class TArray<struct FDeferredBuffSkillActivationData> DeferredBuffSkillActivationList;               // 0x0278 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSkillEffectManager");
		}

		return uClassPointer;
	};

	void NotifySkillDamagedEvent(ESkillEventType EventType, class UISkillInstigator* EventInstigator, class AActor* EventRecipient, class UClass* DamageSource, class UDamagePipeline* optionalPipeline);
	void NotifySkillEvent(ESkillEventType EventType, class UISkillInstigator* EventInstigator, class AActor* EventRecipient, class UClass* optionalDamageSource, class UDamagePipeline* optionalPipeline, class UObject* optionalContextObject);
	void NotifySkillShieldEvent(EShieldEvent ShieldEvent, class AActor* EventInstigator);
	void NotifySkillCrowdControlEvent(ECrowdControlState CrowdControlType, class AActor* EventInstigator, class AActor* EventRecipient, ECrowdControlEventType EventType);
	void NotifyActionSkillEvent(EActionSkillEventType EventType, EActionSkillSlot ActionSkillSlot, class UISkillInstigator* EventInstigator, class AActor* ActionSkillTarget);
};

// Class PoplarGame.PoplarSkinData
// 0x0000 (0x0058 - 0x0058)
class UPoplarSkinData : public UObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSkinData");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSkinData_Audio
// 0x0038 (0x0058 - 0x0090)
class UPoplarSkinData_Audio : public UPoplarSkinData
{
public:
	uint32_t                                           bReplaceFoleyMain : 1;                         // 0x0058 (0x0004) [0x0000000000000000] [0x00000001] 
	uint32_t                                           bReplaceDialogComponent : 1;                   // 0x0058 (0x0004) [0x0000000000000000] [0x00000002] 
	class UFoleyMainComponent*                         NewFoleyMain;                                  // 0x0060 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class TArray<struct FPoplarSkinFoleyAccessorySwap> FoleyAccessorySwaps;                           // 0x0068 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class USelfContainedDialogComponent*               NewDialogComponent;                            // 0x0078 (0x0008) [0x0000000004080009] (CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline)
	class TArray<struct FPoplarSkinAkEventSwap>        AkEventSwaps;                                  // 0x0080 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSkinData_Audio");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSkinData_LightParameter
// 0x0018 (0x0058 - 0x0070)
class UPoplarSkinData_LightParameter : public UPoplarSkinData
{
public:
	struct FName                                       LightID;                                       // 0x0058 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bModifyColor : 1;                              // 0x0060 (0x0004) [0x0000000000000000] [0x00000001] 
	uint32_t                                           bModifyBrightness : 1;                         // 0x0060 (0x0004) [0x0000000000000000] [0x00000002] 
	struct FColor                                      LightColor;                                    // 0x0064 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              Brightness;                                    // 0x0068 (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSkinData_LightParameter");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSkinData_Material
// 0x0010 (0x0058 - 0x0068)
class UPoplarSkinData_Material : public UPoplarSkinData
{
public:
	struct FName                                       MaterialID;                                    // 0x0058 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UMaterialInstance*                           Material;                                      // 0x0060 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSkinData_Material");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSkinData_ParticleParameter
// 0x0018 (0x0058 - 0x0070)
class UPoplarSkinData_ParticleParameter : public UPoplarSkinData
{
public:
	struct FName                                       ParticleID;                                    // 0x0058 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<struct FParticleSysParam>             Parameters;                                    // 0x0060 (0x0010) [0x0000000004400001] (CPF_Edit | CPF_NeedCtorLink | CPF_EditInline)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSkinData_ParticleParameter");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSkinDefinition
// 0x0030 (0x0058 - 0x0088)
class UPoplarSkinDefinition : public UGBXDefinition
{
public:
	class UPoplarSkinDefinition*                       ParentSkin;                                    // 0x0058 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<class UPoplarContentSkinDefinition*>  ContentSkins;                                  // 0x0060 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class UWillowOnDemandPackageMarker*                LinkedOnDemandPackage;                         // 0x0070 (0x0008) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
	class FString                                      CookedDefaultSkinPath;                         // 0x0078 (0x0010) [0x0000000000400002] (CPF_Const | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSkinDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSpark
// 0x0000 (0x0168 - 0x0168)
class UPoplarSpark : public USparkInterfaceImpl
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSpark");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSpawnerDebugRenderingComponent
// 0x0020 (0x0360 - 0x0380)
class UPoplarSpawnerDebugRenderingComponent : public UPrimitiveComponent
{
public:
	float                                              IconScreenHeightOffset;                        // 0x0360 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              IconSpacing;                                   // 0x0364 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FColor                                      MatchingSpawnerLinesColor;                     // 0x0368 (0x0004) [0x0000000000000001] (CPF_Edit)    
	class UTexture2D*                                  InvalidSpawnerTexture;                         // 0x0370 (0x0008) [0x0000000000000000]               
	class UTexture2D*                                  NumbersTexture;                                // 0x0378 (0x0008) [0x0000000000000000]               

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSpawnerDebugRenderingComponent");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSpawnerTypeDefinition
// 0x0008 (0x0058 - 0x0060)
class UPoplarSpawnerTypeDefinition : public UGBXDefinition
{
public:
	class UPoplarMinimapIconDefinition*                MinimapIconDefinition;                         // 0x0058 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSpawnerTypeDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSpawnMaster
// 0x0000 (0x00B8 - 0x00B8)
class UPoplarSpawnMaster : public UWillowSpawnMaster
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSpawnMaster");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSpawnPoint
// 0x0000 (0x0420 - 0x0420)
class APoplarSpawnPoint : public AWillowSpawnPoint
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSpawnPoint");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSpawnPoint_Dynamic
// 0x0000 (0x0420 - 0x0420)
class APoplarSpawnPoint_Dynamic : public APoplarSpawnPoint
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSpawnPoint_Dynamic");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSpeakerAnglesGFxMovie
// 0x0018 (0x0450 - 0x0468)
class UPoplarSpeakerAnglesGFxMovie : public UWillowGFxMovie
{
public:
	class UPoplarSpeakerAnglesGFxObject*               SpeakerAnglesObj;                              // 0x0450 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarScrollingList*                        TheList;                                       // 0x0458 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarOptionsGFxMovie*                      MyOptionsMovie;                                // 0x0460 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSpeakerAnglesGFxMovie");
		}

		return uClassPointer;
	};

	void HandleHintInput(const struct FPlatformUserId& InUserId, const struct FName& HintTag);
	void PopulateHintBar();
	void extOnLoad(const class FString& Path, const class FString& ListTargetPath);
	void eventOnClose();
};

// Class PoplarGame.PoplarSpeakerAnglesGFxMovieDefinition
// 0x0000 (0x0100 - 0x0100)
class UPoplarSpeakerAnglesGFxMovieDefinition : public UGFxMovieDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSpeakerAnglesGFxMovieDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSpeakerAnglesGFxObject
// 0x0000 (0x00D8 - 0x00D8)
class UPoplarSpeakerAnglesGFxObject : public UGFxObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSpeakerAnglesGFxObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSpecialMove_Melee
// 0x0038 (0x0170 - 0x01A8)
class UPoplarSpecialMove_Melee : public USpecialMove_WeaponAction
{
public:
	class USpecialMove_FirstPerson*                    FirstPersonSM;                                 // 0x0170 (0x0008) [0x0000000024400008] (CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_Deprecated)
	class TArray<struct FSMMeleeHitData>               HitList;                                       // 0x0178 (0x0010) [0x0000000020400000] (CPF_NeedCtorLink | CPF_Deprecated)
	float                                              HitStartTime;                                  // 0x0188 (0x0004) [0x0000000020000000]  CPF_Deprecated)
	class UPoplarMeleeDefinition*                      HitCheckDef;                                   // 0x0190 (0x0008) [0x0000000020000000]  CPF_Deprecated)
	class UDynamicPlayRateControlDefinition*           HitSlowdownDef;                                // 0x0198 (0x0008) [0x000000000440000B] (CPF_Edit | CPF_Const | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UDynamicPlayRateControlDefinition*           SharedHitSlowdownDef;                          // 0x01A0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSpecialMove_Melee");
		}

		return uClassPointer;
	};

	void eventStartHitSlowdown(class USpecialMoveInterface* SMI);
	class UDynamicPlayRateControlDefinition* GetHitSlowdownDef();
};

// Class PoplarGame.PoplarSpecialMove_Taunt
// 0x0020 (0x0170 - 0x0190)
class UPoplarSpecialMove_Taunt : public USpecialMove_WeaponAction
{
public:
	struct FName                                       CameraMode;                                    // 0x0170 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              CameraStartTransitionTimeOverride;             // 0x0178 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              CameraEndTransitionTimeOverride;               // 0x017C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bHideCrosshair : 1;                            // 0x0180 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bFadeOut : 1;                                  // 0x0180 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	class UWillowOnDemandPackageMarker*                LinkedOnDemandPackage;                         // 0x0188 (0x0008) [0x0000000000200001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSpecialMove_Taunt");
		}

		return uClassPointer;
	};

	void eventClientFinished(class USpecialMoveInterface* SMI, bool bInterrupted);
	float eventClientStarted(class USpecialMoveInterface* SMI, struct FSpecialMoveData& SMData);
};

// Class PoplarGame.PoplarStartupProcess
// 0x0070 (0x00B0 - 0x0120)
class UPoplarStartupProcess : public UWillowStartupProcess
{
public:
	struct FPlatformUserId                             UserId;                                        // 0x00B0 (0x0008) [0x0000000000000000]               
	int32_t                                            ProcessErrorCode;                              // 0x00B8 (0x0004) [0x0000000000000000]               
	class UOnlineSubsystem*                            OnlineSub;                                     // 0x00C0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UWillowGFxDialogBox*                         ErrorDlg;                                      // 0x00C8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UWillowGFxDialogBox*                         ControllerPairingDlg;                          // 0x00D0 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bEstablishedControllerPairing : 1;             // 0x00D8 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	class UWillowGFxDialogBox*                         NATHelpDlg;                                    // 0x00E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UWillowGFxDialogBox*                         LoginWarningDlg;                               // 0x00E8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarEULAGFxMovie*                         EULAMovie;                                     // 0x00F0 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarOnlineClientPlayerService*            ClientPlayerService;                           // 0x00F8 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarOnlineClientItemService*              ClientItemService;                             // 0x0100 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              StepStartTime;                                 // 0x0108 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              StartTime;                                     // 0x010C (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<class FString>                        PendingImages;                                 // 0x0110 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarStartupProcess");
		}

		return uClassPointer;
	};

	void ApplyStagedReveal();
	void OnReadPlayerStatsDataComplete(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
	void OnReadGameLicenseTypeComplete(EOnlineSubsystemResult Result, EGameLicenseType GameLicenseType);
	void OnReadPlayerMarketplaceDataComplete(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
	void OnReadEntitlementsComplete(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
	void OnReadMarketplaceContentListComplete(const struct FPlatformUserId& PlayerID, EOnlineSubsystemResult Result);
	void OnCheckMarketplaceContentListComplete(const struct FPlatformUserId& PlayerID, EOnlineSubsystemResult Result, bool bMarketplaceContentListAvailable);
	void Leviathan_StartupProcessCompleted(float ProcessDelta);
	void Leviathan_StartupProcessFailed(EPoplarStartupProcessState Step, int32_t ErrorCode, float StepDelta, float ProcessDelta);
	void Leviathan_StartupProcessStopped(EPoplarStartupProcessState Step, float StepDelta, float ProcessDelta);
	void Leviathan_StartupStepCompleted(EPoplarStartupProcessState Step, float StepDelta, float ProcessDelta);
	void Leviathan_StartupProcessStarted();
	void OnRequestImageComplete(bool bWasSuccessful, const class FString& ImageUrl, class UTexture* ImageTexture);
	void OnNewsRetrieved(ENewsRetrievalResult Result);
	void InitMetaProfileComplete(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
	bool NeedsToSignAgreements();
	void DownloadExperienceDataComplete(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
	bool LoginWarning_Clicked(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& InUserId);
	bool NATHelp_Clicked(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& InUserId);
	void CloseNATHelpDialog();
	void DisplayNATHelpDialog();
	void CheckStrictNATSettings();
	void ReportNATSettingComplete(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
	void CheckNATSettings();
	void AcceptDeclineAgreementsComplete(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
	void AcceptDeclineAgreements();
	void ShowAgreements();
	void DownloadAgreementsComplete(const struct FPlatformUserId& PlayerID, int32_t ServiceResult);
	void DownloadAgreements();
	void DownloadUserData();
	void OnReadPlayerQosServerDataComplete(const struct FPlatformUserId& InUserId, int32_t ServiceResult);
	void OnDeleteCorruptProfileComplete(const struct FPlatformUserId& InUserId, ESaveDataOperationResult Result);
	bool OnConfirmCorruptProfileOverwrite(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& InUserId);
	void HandleCorruptProfile(const struct FPlatformUserId& InUserId);
	void HandleReadProfile(const struct FPlatformUserId& InUserId, class UWillowProfile* Profile);
	void ReadProfileComplete(const struct FPlatformUserId& InUserId, ESaveDataOperationResult Result, class UWillowProfile* Profile);
	void ReadProfileSettings();
	void ApplyProvidence();
	void DownloadAndRunMicropatcher();
	void SparkInitializationComplete(const struct FPlatformUserId& InUserId, EInitializedResult InitializedResult, class UGearboxData* Data);
	void EntitlementsUpdated(class UGearboxAccountData* GbxAccount);
	void DoSparkAuthentication();
	void PatcherDownloadProcessComplete();
	void DownloadPatcherFiles();
	void ShowMembershipMarketplaceUIComplete(const struct FPlatformUserId& InUserId, EOnlineFeature Feature, EFeaturePrivilegeLevel Level);
	void ReadOnlinePrivilegesComplete(const struct FPlatformUserId& InUserId, bool bWasSuccessful);
	void CheckPermissions();
	void CheckPatchAvailable();
	void OnPatchCheckComplete(bool bWasSuccessful, bool bPatchAvailable, const struct FQWord& PlatformError);
	void ControllerPairingUserSelected(bool bWasSuccessful, const struct FPlatformUserId& SelectedUserId);
	bool EstablishControllerPairing_Clicked(class UWillowGFxDialogBox* Dlg, const struct FPlatformUserId& InUserId);
	void ClearDelegates();
	void ProcessFailed();
	void ProcessComplete();
	void PerformStep();
	void StepFailed();
	void StepFailedWithError(int32_t ErrorCode);
	void StepSucceeded();
	void StopProcess();
	bool StartProcess();
	void InitProcess(const struct FPlatformUserId& InUserId, const struct FScriptDelegate& CompleteDelegate, const struct FScriptDelegate& StepUpdatedDelegate);
	class APoplarPlayerController* GetPoplarPC();
};

// Class PoplarGame.PoplarStatProfileMappingDefinition
// 0x0060 (0x0058 - 0x00B8)
class UPoplarStatProfileMappingDefinition : public UGBXDefinition
{
public:
	class TArray<class UStatDefinition*>               ProfileMapping;                                // 0x0058 (0x0010) [0x0000000000420003] (CPF_Edit | CPF_Const | CPF_EditConst | CPF_NeedCtorLink)
	uint8_t                                           UnknownData00[0x50];                           // 0x0068 (0x0050) UNKNOWN PROPERTY: MapProperty PoplarGame.PoplarStatProfileMappingDefinition.StatMap

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarStatProfileMappingDefinition");
		}

		return uClassPointer;
	};

	int32_t GetMappingIndex(class UStatDefinition* Stat);
};

// Class PoplarGame.PoplarStatReplicationInfo
// 0x54B8 (0x0240 - 0x56F8)
class APoplarStatReplicationInfo : public AStatReplicationInfo
{
public:
	struct FPointer                                    VfTable_IIStatValueProvider;                   // 0x0240 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	int32_t                                            OwnerMatchGameStatValues[0x180];               // 0x0248 (0x0600) [0x0000000000000020] (CPF_Net)     
	int32_t                                            OwnerLifetimeGameStatValues[0x180];            // 0x0848 (0x0600) [0x0000000000000020] (CPF_Net)     
	int32_t                                            OwnerTeamMatchGameStatValues[0x180];           // 0x0E48 (0x0600) [0x0000000000000020] (CPF_Net)     
	int32_t                                            OwnerTeamLifetimeGameStatValues[0x180];        // 0x1448 (0x0600) [0x0000000000000020] (CPF_Net)     
	int32_t                                            OwnerCareerGameStatValues[0x180];              // 0x1A48 (0x0600) [0x0000000000000020] (CPF_Net)     
	class UStatDefinition*                             OwnerGameStats[0x180];                         // 0x2048 (0x0C00) [0x0000000100000020] (CPF_Net)     
	int32_t                                            NumOwnerGameStats;                             // 0x2C48 (0x0004) [0x0000000000000020] (CPF_Net)     
	int32_t                                            GlobalMatchGameStatValues[0x180];              // 0x2C4C (0x0600) [0x0000000000000020] (CPF_Net)     
	int32_t                                            GlobalLifetimeGameStatValues[0x180];           // 0x324C (0x0600) [0x0000000000000020] (CPF_Net)     
	int32_t                                            GlobalTeamMatchGameStatValues[0x180];          // 0x384C (0x0600) [0x0000000000000020] (CPF_Net)     
	int32_t                                            GlobalTeamLifetimeGameStatValues[0x180];       // 0x3E4C (0x0600) [0x0000000000000020] (CPF_Net)     
	int32_t                                            GlobalCareerGameStatValues[0x180];             // 0x444C (0x0600) [0x0000000000000020] (CPF_Net)     
	class UStatDefinition*                             GlobalGameStats[0x180];                        // 0x4A50 (0x0C00) [0x0000000100000020] (CPF_Net)     
	int32_t                                            NumGlobalGameStats;                            // 0x5650 (0x0004) [0x0000000000000020] (CPF_Net)     
	struct FMaxStatsExceededMessage                    LastMaxStatsExceeded;                          // 0x5658 (0x0010) [0x0000000100000020] (CPF_Net)     
	class UPoplarTrainingStatsNotifier*                TrainingStatsNotifier;                         // 0x5668 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bKillModifiersAwardScore : 1;                  // 0x5670 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bStatsAwardScore : 1;                          // 0x5670 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bStatsInitialized : 1;                         // 0x5670 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           bStatValuesInitialized : 1;                    // 0x5670 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	uint32_t                                           bPreventFurtherStatIncrements : 1;             // 0x5670 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	class APoplarPlayerController*                     InitializeForPPC;                              // 0x5678 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FMap_Mirror                                 StatIdMap;                                     // 0x5680 (0x0050) [0x0000000000003000] (CPF_Native | CPF_Transient)
	class UPoplarChallengeManager*                     ChallengeManager;                              // 0x56D0 (0x0008) [0x0000000000000000]               
	struct FDurangoHeroProgressStruct                  DurangoHeroProgress;                           // 0x56D8 (0x0020) [0x0000000100400020] (CPF_Net | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarStatReplicationInfo");
		}

		return uClassPointer;
	};

	void InitializeChallenges();
	void PopulateStatCareerValuesFromSparkDataDelayed();
	void OnRep_DurangoHeroProgress(const struct FDurangoHeroProgressStruct& PreviousValue);
	void OnRep_LastMaxStatsExceeded(const struct FMaxStatsExceededMessage& PreviousValue);
	void OnRep_GlobalGameStats(int32_t ArrayIndex, class UStatDefinition* PreviousValue);
	void OnRep_OwnerGameStats(int32_t ArrayIndex, class UStatDefinition* PreviousValue);
	void ClearActiveTrainingStatListeners(class APoplarPlayerController* PPCOwner);
	void ResetTrainingStatsListeners(class APoplarPlayerController* PPCOwner);
	void ResetTrainingStatsListenersDelayed();
	void RegisterTrainingStatListener(class UPoplarTrainingStatsNotifier* Notifier, class UPoplarTrainingMessageDefinition* TrainingMessageDef, class APoplarPlayerController* PPCOwner);
	int32_t GetProfileStatValue(class UStatDefinition* Stat);
	void UpdateStat(class UStatDefinition* Stat, EStatCategoryTypes StatCategory, int32_t optionalAmount, float optionalAARechargeModifier, float optionalXPModifier, float optionalScoreModifier, float optionalCurrencyModifier);
	void IncrementStat(class UStatDefinition* Stat, int32_t optionalAmount, float optionalAARechargeModifier, float optionalXPModifier, float optionalScoreModifier, float optionalCurrencyModifier);
	void IncrementEnemyKilledStats(class AController* Victim, float AARechargeModifier, const struct FQWord& KillFlags, struct FKillModAwardData& ModAwards);
	void ClientInitialize(class APlayerReplicationInfo* PRI);
	void InitializeGameStats();
	void InitializeSettingsFromGameInfo();
	void eventPostBeginPlay();
};

// Class PoplarGame.PoplarStatReplicationInfoAttributeContextResolver
// 0x0000 (0x0058 - 0x0058)
class UPoplarStatReplicationInfoAttributeContextResolver : public UAttributeContextResolver
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarStatReplicationInfoAttributeContextResolver");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarSurrenderDefinition
// 0x0010 (0x0058 - 0x0068)
class UPoplarSurrenderDefinition : public UGBXDefinition
{
public:
	float                                              DelayBeforeEndingMatchInSeconds;               // 0x0058 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              SurrenderFirstAvailableTimeInSeconds;          // 0x005C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              FailedSurrenderCooldownTimeInSeconds;          // 0x0060 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              SurrenderVotingTimeInSeconds;                  // 0x0064 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarSurrenderDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarTargetingComponent
// 0x0028 (0x01B8 - 0x01E0)
class UPoplarTargetingComponent : public UWillowTargetingComponent
{
public:
	class UIUnit*                                      MyUnitInterface_Object;                        // 0x01B8 (0x0008) [0x0000000000000002] (CPF_Const)
	class UIUnit*                                      MyUnitInterface_Interface;                     // 0x01C0 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UIPoplarTeamAffiliated*                      MyTeamInterface_Object;                        // 0x01C8 (0x0008) [0x0000000000000002] (CPF_Const)
	class UIPoplarTeamAffiliated*                      MyTeamInterface_Interface;                     // 0x01D0 (0x0008) [0x0000000000000002] (CPF_Const)   
	class UPoplarTargetingDefinition*                  PTargetingDef;                                 // 0x01D8 (0x0008) [0x0000000000000002] (CPF_Const)   

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarTargetingComponent");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarTargetingDefinition
// 0x0010 (0x00B8 - 0x00C8)
class UPoplarTargetingDefinition : public UTargetingDefinition
{
public:
	uint32_t                                           bUseDefaultAwareness : 1;                      // 0x00B8 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bAlwaysAware : 1;                              // 0x00B8 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	uint32_t                                           bCanTargetStealthed : 1;                       // 0x00B8 (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	float                                              UnawareValidTime;                              // 0x00BC (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UExpressionEvaluator*                        CanTargetStealthedIf;                          // 0x00C0 (0x0008) [0x0000000004000003] (CPF_Edit | CPF_Const | CPF_EditInline)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarTargetingDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarTargetSearchDefinition
// 0x0000 (0x0098 - 0x0098)
class UPoplarTargetSearchDefinition : public UGBXTargetSearchDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarTargetSearchDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarTargetSearchFilter_Base
// 0x0048 (0x0080 - 0x00C8)
class UPoplarTargetSearchFilter_Base : public UGBXTargetSearchFilter_Base
{
public:
	uint32_t                                           bTargetDeadPlayers : 1;                        // 0x0080 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bBlockedByShield : 1;                          // 0x0080 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	class TArray<class UPoplarUnitTypeDefinition*>     IncludeUnitTypes;                              // 0x0088 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class TArray<class UPoplarUnitTypeDefinition*>     ExcludeUnitTypes;                              // 0x0098 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class TArray<class UPoplarUnitTypeTag*>            IncludeUnitTypeTags;                           // 0x00A8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class TArray<class UPoplarUnitTypeTag*>            ExcludeUnitTypeTags;                           // 0x00B8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarTargetSearchFilter_Base");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarTcpLink
// 0x0018 (0x02B8 - 0x02D0)
class APoplarTcpLink : public ATcpLink
{
public:
	class FString                                      LinkName;                                      // 0x02B8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	uint8_t                                            NextByte;                                      // 0x02C8 (0x0001) [0x0000000000000000]               
	int32_t                                            RemotePort;                                    // 0x02CC (0x0004) [0x0000000000000000]               

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarTcpLink");
		}

		return uClassPointer;
	};

	void eventClosed();
	void eventReceivedBinary(int32_t Count, uint8_t B);
	void SendNextByte();
	void eventOpened();
	void eventResolved(const struct FIpAddr& Addr);
};

// Class PoplarGame.PoplarTeamBehaviorVolume
// 0x0008 (0x03B8 - 0x03C0)
class APoplarTeamBehaviorVolume : public ABehaviorVolume
{
public:
	class UPoplarTeamDefinition*                       TeamDefinition;                                // 0x03B8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarTeamBehaviorVolume");
		}

		return uClassPointer;
	};

	void eventBehaviorVolumeImpact(class AActor* Other, const struct FVector& HitLocation, const struct FVector& HitNormal, EBehaviorVolumeAction Action);
};

// Class PoplarGame.PoplarTeamDeathDefinition
// 0x0158 (0x0058 - 0x01B0)
class UPoplarTeamDeathDefinition : public UGBXDefinition
{
public:
	uint32_t                                           bSupportsRevival : 1;                          // 0x0058 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bSoloPlayerSkipsRevival : 1;                   // 0x0058 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	uint32_t                                           bRespawnPlayersAsTeam : 1;                     // 0x0058 (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	uint32_t                                           bUseRespawnTickets : 1;                        // 0x0058 (0x0004) [0x0000000000000003] [0x00000008] (CPF_Edit | CPF_Const)
	uint32_t                                           bSupportsKillCamera : 1;                       // 0x0058 (0x0004) [0x0000000000000003] [0x00000010] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                ReviveBleedOutTime;                            // 0x0060 (0x0020) [0x0000000000000001] (CPF_Edit)    
	float                                              PostBleedOutViewTime;                          // 0x0080 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                MaxTimeBetweenRevives;                         // 0x0088 (0x0020) [0x0000000000000001] (CPF_Edit)    
	struct FAttributeInitializationData                MaxDesiredSuccessiveInjuries;                  // 0x00A8 (0x0020) [0x0000000000000001] (CPF_Edit)    
	struct FAttributeInitializationData                RevivePercentOfMaxHealth;                      // 0x00C8 (0x0020) [0x0000000000000001] (CPF_Edit)    
	struct FAttributeInitializationData                ReviveCurrencySpendRate;                       // 0x00E8 (0x0020) [0x0000000000000001] (CPF_Edit)    
	struct FAttributeInitializationData                CurrencyReviveRateModifier;                    // 0x0108 (0x0020) [0x0000000000000001] (CPF_Edit)    
	struct FAttributeInitializationData                PlayerRespawnTickRate;                         // 0x0128 (0x0020) [0x0000000000000001] (CPF_Edit)    
	struct FAttributeInitializationData                PlayerRespawnTicks;                            // 0x0148 (0x0020) [0x0000000000000001] (CPF_Edit)    
	struct FAttributeInitializationData                PlayerMinDeadTicks;                            // 0x0168 (0x0020) [0x0000000000000001] (CPF_Edit)    
	struct FAttributeInitializationData                StartingRespawnTickets;                        // 0x0188 (0x0020) [0x0000000000000001] (CPF_Edit)    
	float                                              ViewDeathRagdollTime;                          // 0x01A8 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              ViewKillCameraTime;                            // 0x01AC (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarTeamDeathDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarTeamDefinition
// 0x0040 (0x0058 - 0x0098)
class UPoplarTeamDefinition : public UGBXDefinition
{
public:
	struct FColor                                      TeamColor;                                     // 0x0058 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class FString                                      TeamName;                                      // 0x0060 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class UPawnAllegiance*                             TeamAllegiance;                                // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           IsHumanJoinableTeam : 1;                       // 0x0078 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           IsNPCOnlyTeam : 1;                             // 0x0078 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	ESpectatorColorOption                              SpectatorColorChoice;                          // 0x007C (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              MapYawOffsetInDegrees;                         // 0x0080 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<class UPoplarTeamDefinition*>         OpposingTeams;                                 // 0x0088 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarTeamDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarTeamFilteredMoveNode
// 0x0010 (0x02E0 - 0x02F0)
class APoplarTeamFilteredMoveNode : public AWillowAIMoveNode
{
public:
	class UPoplarTeamDefinition*                       TeamDefinition;                                // 0x02E0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bOverrideLaneWidth : 1;                        // 0x02E8 (0x0004) [0x0000000000000002] [0x00000001] (CPF_Const)
	float                                              SectionLaneWidth;                              // 0x02EC (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarTeamFilteredMoveNode");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarTeamInfo
// 0x0378 (0x0260 - 0x05D8)
class APoplarTeamInfo : public ATeamInfo
{
public:
	struct FPointer                                    VfTable_IIStatBehavior;                        // 0x0260 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UPoplarTeamDefinition*                       TeamDefinition;                                // 0x0268 (0x0008) [0x0000000100000020] (CPF_Net)     
	class UObject*                                     UI_PVETrackedUnits[0x2];                       // 0x0270 (0x0010) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class UObject*                                     UI_PVEAddTrackedUnits[0x2];                    // 0x0280 (0x0010) [0x0000000000002000] (CPF_Transient)
	struct FUI_PVECurrentTeamState                     UI_PVEState;                                   // 0x0290 (0x00A0) [0x0000000000402020] (CPF_Net | CPF_Transient | CPF_NeedCtorLink)
	float                                              UI_PVEEscortObjectivePipLocations[0xA];        // 0x0330 (0x0028) [0x0000000000002020] (CPF_Net | CPF_Transient)
	int32_t                                            UI_PVEEscortObjectivePipCount;                 // 0x0358 (0x0004) [0x0000000000002020] (CPF_Net | CPF_Transient)
	uint32_t                                           UI_bShowFlinch : 1;                            // 0x035C (0x0004) [0x0000000000002020] [0x00000001] (CPF_Net | CPF_Transient)
	uint32_t                                           UI_bServerTrackingShardCountdown : 1;          // 0x035C (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bTrackedObjectivePawnsSpawned : 1;             // 0x035C (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           MyTeamMemberSeenByAtLeastOneEnemy : 1;         // 0x035C (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	uint32_t                                           bHasLostRespawnTicket : 1;                     // 0x035C (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	uint32_t                                           bRespawnEnabled : 1;                           // 0x035C (0x0004) [0x0000000000002000] [0x00000020] (CPF_Transient)
	int32_t                                            UI_ServerTrackingShardCountdownStartTime;      // 0x0360 (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<class AActor*>                        RegisteredTeamVisionActors;                    // 0x0368 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<class AActor*>                        RegisteredVisibilityAlertActors;               // 0x0378 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class TArray<struct FTrackedEnemyPlayerStruct>     TrackedEnemyPlayers;                           // 0x0388 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class UIUnit*>                        UI_TrackedObjectiveUnits;                      // 0x0398 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class APawn*                                       VisibleEnemyPlayersReplicated[0x28];           // 0x03A8 (0x0140) [0x0000000100000020] (CPF_Net)     
	float                                              UI_ObjectiveHealthAlphas[0xA];                 // 0x04E8 (0x0028) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class TArray<struct FTrackedEnemyPlayerStruct>     VisibleAlertUnits;                             // 0x0510 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	float                                              TeamTrickleFlatBonusCredits;                   // 0x0520 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              TeamTrickleFlatBonusCreditsBaseValue;          // 0x0524 (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            TeamTrickleFlatBonusCreditsModifierStack;      // 0x0528 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              TeamTrickleFlatBonusExperience;                // 0x0538 (0x0004) [0x8000000000002000] (CPF_Transient)
	float                                              TeamTrickleFlatBonusExperienceBaseValue;       // 0x053C (0x0004) [0x4000000000000002] (CPF_Const)   
	class TArray<class UAttributeModifier*>            TeamTrickleFlatBonusExperienceModifierStack;   // 0x0540 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	int32_t                                            TeamTotalExperience;                           // 0x0550 (0x0004) [0x4000000000000020] (CPF_Net)     
	float                                              TeamXPTotalDifference;                         // 0x0554 (0x0004) [0x4000000000000020] (CPF_Net)     
	float                                              EnemyTeamXPTotalDifference;                    // 0x0558 (0x0004) [0x4000000000000020] (CPF_Net)     
	int32_t                                            VisibilityChecksPerTick;                       // 0x055C (0x0004) [0x0000000000000002] (CPF_Const)   
	int32_t                                            LastCachedTeamMemberIndex;                     // 0x0560 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            LastCachedEnemyIndex;                          // 0x0564 (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<class AActor*>                        CachedTeamMembersForVisibilityTest;            // 0x0568 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class AActor*>                        CachedEnemiesForVisibilityTest;                // 0x0578 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<class APoplarTeamInfo*>               EnemyTeamsToNotifyOfVisibility;                // 0x0588 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	float                                              TeamRespawnTicks;                              // 0x0598 (0x0004) [0x0000000000000000]               
	float                                              TeamRespawnTicksRemaining;                     // 0x059C (0x0004) [0x0000000000000000]               
	float                                              TeamRespawnTicksRate;                          // 0x05A0 (0x0004) [0x0000000000000000]               
	class TArray<struct FRespawnInfo>                  DeadTeamMembers;                               // 0x05A8 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	class AActor*                                      TeamBossActor;                                 // 0x05B8 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)
	class AActor*                                      TeamAnnouncer;                                 // 0x05C0 (0x0008) [0x0000000000002000] (CPF_Transient)
	int32_t                                            RemainingRespawnTickets;                       // 0x05C8 (0x0004) [0x4000000000000020] (CPF_Net)     
	class UPoplarTeamDeathDefinition*                  TeamDeathDefinition;                           // 0x05D0 (0x0008) [0x0000000000002020] (CPF_Net | CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarTeamInfo");
		}

		return uClassPointer;
	};

	void Behavior_UpdateStat(class UStatDefinition* Stat, EStatCategoryTypes StatCategory, int32_t NewValue);
	void Behavior_IncrementStat(class UStatDefinition* Stat, int32_t Amount);
	class AActor* GetTeamAnnouncer();
	void UnRegisterVisibilityAlertActor(class AActor* ActorToRemove);
	void RegisterVisibilityAlertActor(class AActor* NewAlertActor);
	void UnRegisterTeamVisionActor(class AActor* TeamVisionActorToRemove);
	void RegisterTeamVisionActor(class AActor* NewTeamVisionActor);
	class APoplarGameInfo* GetPoplarGameInfo();
	bool IsPlayerVisibleToEnemy(class APawn* OnePlayer);
	bool IsEnemyPlayerVisible(class APawn* OneEnemyPlayer);
	void eventReplicatedEvent(const struct FName& VarName);
	bool IsNPCOnlyTeam();
	bool IsHumanJoinableTeam();
	void SetTeamDefinition(class UPoplarTeamDefinition* InTeamDefinition);
};

// Class PoplarGame.PoplarTestMapsListDefinition
// 0x0020 (0x0068 - 0x0088)
class UPoplarTestMapsListDefinition : public UTestMapsListDefinition
{
public:
	class FString                                      MenuDisplayName;                               // 0x0068 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<struct FPoplarTestMapsListDatum>      PoplarListItems;                               // 0x0078 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarTestMapsListDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarTI_CalcAlertInfo
// 0x0000 (0x0070 - 0x0070)
class UPoplarTI_CalcAlertInfo : public UTI_Calc
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarTI_CalcAlertInfo");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarTI_CalcDistancesMinion
// 0x0000 (0x0070 - 0x0070)
class UPoplarTI_CalcDistancesMinion : public UWillowTI_CalcDistances
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarTI_CalcDistancesMinion");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarTI_CalcFirstToDamagePlayer
// 0x0000 (0x0070 - 0x0070)
class UPoplarTI_CalcFirstToDamagePlayer : public UTI_Calc
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarTI_CalcFirstToDamagePlayer");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarTI_CalcIsMyHotSpot
// 0x0000 (0x0070 - 0x0070)
class UPoplarTI_CalcIsMyHotSpot : public UTI_Calc
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarTI_CalcIsMyHotSpot");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarTI_CalcLastAttackTimes
// 0x0000 (0x0070 - 0x0070)
class UPoplarTI_CalcLastAttackTimes : public UTI_Calc
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarTI_CalcLastAttackTimes");
		}

		return uClassPointer;
	};

	static void UpdateAttackTimes(class AController* Instigator, class APawn* AttackedPawn);
};

// Class PoplarGame.PoplarTI_CalcMatchesFormation
// 0x0000 (0x0070 - 0x0070)
class UPoplarTI_CalcMatchesFormation : public UTI_Calc
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarTI_CalcMatchesFormation");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarTI_CalcSkillUtility
// 0x0000 (0x0070 - 0x0070)
class UPoplarTI_CalcSkillUtility : public UTI_Calc
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarTI_CalcSkillUtility");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarTI_NotifyTeamOfEnemyLocation
// 0x0000 (0x0070 - 0x0070)
class UPoplarTI_NotifyTeamOfEnemyLocation : public UTI_Calc
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarTI_NotifyTeamOfEnemyLocation");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarTI_PrioritizeAlertInfo
// 0x0008 (0x0078 - 0x0080)
class UPoplarTI_PrioritizeAlertInfo : public UTI_Prioritize
{
public:
	ETargetAllegiance                                  Allegiance;                                    // 0x0078 (0x0001) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxTimeSinceTargeted;                          // 0x007C (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarTI_PrioritizeAlertInfo");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarTI_PrioritizeLaneDistance
// 0x0008 (0x0078 - 0x0080)
class UPoplarTI_PrioritizeLaneDistance : public UTI_Prioritize
{
public:
	float                                              MaxDistance;                                   // 0x0078 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarTI_PrioritizeLaneDistance");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarTI_PrioritizeSkillUtility
// 0x0000 (0x0078 - 0x0078)
class UPoplarTI_PrioritizeSkillUtility : public UTI_Prioritize
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarTI_PrioritizeSkillUtility");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarTI_PrioritizeUnitType
// 0x0008 (0x0078 - 0x0080)
class UPoplarTI_PrioritizeUnitType : public UTI_Prioritize
{
public:
	class UPoplarUnitTypeDefinition*                   UnitType;                                      // 0x0078 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarTI_PrioritizeUnitType");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarTrainingMessageDefinition
// 0x0030 (0x0058 - 0x0088)
class UPoplarTrainingMessageDefinition : public UGBXDefinition
{
public:
	class UStatDefinition*                             Stat;                                          // 0x0058 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            StatTargetValue;                               // 0x0060 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarMessageDefinition*                    TrainingMessage;                               // 0x0068 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bMandatory : 1;                                // 0x0070 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	class UStatDefinition*                             ExceptIfStat;                                  // 0x0078 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            ExceptIfGreaterThan;                           // 0x0080 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarTrainingMessageDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarTrainingMessageListDefinition
// 0x0010 (0x0058 - 0x0068)
class UPoplarTrainingMessageListDefinition : public UGBXDefinition
{
public:
	class TArray<class UPoplarTrainingMessageDefinition*> TrainingMessages;                              // 0x0058 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarTrainingMessageListDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarTrainingStatsNotifier
// 0x0050 (0x0058 - 0x00A8)
class UPoplarTrainingStatsNotifier : public UObject
{
public:
	struct FMultiMap_Mirror                            StatIdListenerMap;                             // 0x0058 (0x0050) [0x0000000000001002] (CPF_Const | CPF_Native)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarTrainingStatsNotifier");
		}

		return uClassPointer;
	};

	void DisplayDebug(class AHUD* H, float& out_YL, float& out_YPos);
	void OnStatIncrement(class APoplarStatReplicationInfo* SRI, class UStatDefinition* Stat, int32_t Amount);
	void UnRegisterListeners(class APoplarPlayerController* PCOwner);
	void UnRegisterListener(struct FTrainingData& listener);
	void RegisterListener(struct FTrainingData& listener);
};

// Class PoplarGame.PoplarTrajectometerPawn
// 0x0050 (0x06B8 - 0x0708)
class APoplarTrajectometerPawn : public APawn
{
public:
	class APawn*                                       OwnerPawn;                                     // 0x06B8 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bSimulationFinished : 1;                       // 0x06C0 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bFollowsTrajectory : 1;                        // 0x06C0 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bControlledFalling : 1;                        // 0x06C0 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           bStopOnAnyHit : 1;                             // 0x06C0 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	uint32_t                                           bStopOnAnyWallHit : 1;                         // 0x06C0 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	struct FVector                                     FrameMoveVector;                               // 0x06C4 (0x000C) [0x0000000000002000] (CPF_Transient)
	float                                              TrajectoryGravity;                             // 0x06D0 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CustomGravityScaling;                          // 0x06D4 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              MinHitWall;                                    // 0x06D8 (0x0004) [0x0000000000002000] (CPF_Transient)
	class AActor*                                      TargetActor;                                   // 0x06E0 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     ImpactLocation;                                // 0x06E8 (0x000C) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     ImpactNormal;                                  // 0x06F4 (0x000C) [0x0000000000002000] (CPF_Transient)
	class UPoplarControlledMoveDefinition*             MoveDefinition;                                // 0x0700 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarTrajectometerPawn");
		}

		return uClassPointer;
	};

	void StopSimulation(const struct FVector& InLocation, const struct FVector& InNormal);
	void HandleHitWall(const struct FVector& HitNormal, class AActor* Wall, class UPrimitiveComponent* WallComp);
	void HandleTouchedActor(class AActor* Other, class UPrimitiveComponent* OtherComp, const struct FVector& HitLocation, const struct FVector& HitNormal);
	void eventLanded(const struct FVector& HitNormal, class AActor* FloorActor);
	void eventHitWall(const struct FVector& HitNormal, class AActor* Wall, class UPrimitiveComponent* WallComp);
	void eventTouch(class AActor* Other, class UPrimitiveComponent* OtherComp, const struct FVector& HitLocation, const struct FVector& HitNormal);
	bool Died(class AController* Killer, class UClass* DamageType, const struct FVector& HitLocation, class UDamagePipeline* optionalPipeline);
	void eventTakeDamage(float Damage, class AController* InstigatedBy, const struct FVector& HitLocation, const struct FVector& Momentum, class UClass* DamageType, const struct FTraceHitInfo& optionalHitInfo, class UIDamageCauser* optionalDamageCauser, class UDamagePipeline* optionalPipeline);
	void eventFellOutOfWorld(class UClass* dmgType);
};

// Class PoplarGame.PoplarTypes
// 0x0000 (0x0058 - 0x0058)
class UPoplarTypes : public UInterface
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarTypes");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarUIInteraction
// 0x04A0 (0x0AA0 - 0x0F40)
class UPoplarUIInteraction : public UWillowUIInteraction
{
public:
	struct FtMenuLayout                                LoadoutsMenuLayout;                            // 0x0AA0 (0x0090) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FtMenuLayout                                SkinsMenuLayout;                               // 0x0B30 (0x0090) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FtMenuLayout                                TauntsMenuLayout;                              // 0x0BC0 (0x0090) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FtMenuLayout                                WearablesMenuLayout;                           // 0x0C50 (0x0090) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FtMenuLayout                                StatsMenuLayout;                               // 0x0CE0 (0x0090) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FtMenuLayout                                MetaInventoryMenuLayout;                       // 0x0D70 (0x0090) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FtMenuLayout                                ChallengeMenuLayout;                           // 0x0E00 (0x0090) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FtMenuLayout                                MissionMenuLayout;                             // 0x0E90 (0x0090) [0x0000000000400000] (CPF_NeedCtorLink)
	int32_t                                            CurrentDebugLoadoutSlotIndex;                  // 0x0F20 (0x0004) [0x0000000000000000]               
	int32_t                                            CurrentDebugMaxLoadoutSlotNum;                 // 0x0F24 (0x0004) [0x0000000000000000]               
	uint32_t                                           WearablesInitialized : 1;                      // 0x0F28 (0x0004) [0x0000000000000000] [0x00000001] 
	class TArray<class UPoplarPlayerWearableDefinition*> Wearables;                                     // 0x0F30 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarUIInteraction");
		}

		return uClassPointer;
	};

	void SwitchDebugLoadoutSlot();
	void UpdateDebugLoadoutSlot();
	void RunDebugMenu(class AWillowPlayerController* PC);
	void ShowActiveMenu(bool optionalIsMenuReload);
	void CreateMainActorInfoMenu(class UObject* DebugTarget);
};

// Class PoplarGame.PoplarUnitTypeDefinition
// 0x00E8 (0x0058 - 0x0140)
class UPoplarUnitTypeDefinition : public UGBXDefinition
{
public:
	struct FPmtData                                    PmtData;                                       // 0x0058 (0x0028) [0x0000000000003000] (CPF_Native | CPF_Transient)
	uint32_t                                           RewardsMinionKillCreditUponDeath : 1;          // 0x0080 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	uint32_t                                           IsStationaryUnit : 1;                          // 0x0080 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	uint32_t                                           IsObjectiveUnit : 1;                           // 0x0080 (0x0004) [0x0000000000000001] [0x00000004] (CPF_Edit)
	uint32_t                                           IsBuffable : 1;                                // 0x0080 (0x0004) [0x0000000000000001] [0x00000008] (CPF_Edit)
	uint32_t                                           bIsCrowdControllable : 1;                      // 0x0080 (0x0004) [0x0000000000000001] [0x00000010] (CPF_Edit)
	uint32_t                                           bCanHaveOvershields : 1;                       // 0x0080 (0x0004) [0x0000000000000001] [0x00000020] (CPF_Edit)
	uint32_t                                           IsPingableWithoutLOS : 1;                      // 0x0080 (0x0004) [0x0000000000000001] [0x00000040] (CPF_Edit)
	uint32_t                                           IsImmuneToLifesteal : 1;                       // 0x0080 (0x0004) [0x0000000000000001] [0x00000080] (CPF_Edit)
	uint32_t                                           IsImmuneToShieldsteal : 1;                     // 0x0080 (0x0004) [0x0000000000000001] [0x00000100] (CPF_Edit)
	uint32_t                                           IsImmuneToShieldPen : 1;                       // 0x0080 (0x0004) [0x0000000000000001] [0x00000200] (CPF_Edit)
	uint32_t                                           bDeathIncrementsKillingStreaksAndMultiKills : 1;// 0x0080 (0x0004) [0x0000000000000001] [0x00000400] (CPF_Edit)
	uint32_t                                           bShowHealthInDeathRecap : 1;                   // 0x0080 (0x0004) [0x0000000000000003] [0x00000800] (CPF_Edit | CPF_Const)
	uint32_t                                           ShowOutline : 1;                               // 0x0080 (0x0004) [0x0000000000000001] [0x00001000] (CPF_Edit)
	uint32_t                                           AutoShowOutline : 1;                           // 0x0080 (0x0004) [0x0000000000000001] [0x00002000] (CPF_Edit)
	uint32_t                                           ShowNameForAlly : 1;                           // 0x0080 (0x0004) [0x0000000000000001] [0x00004000] (CPF_Edit)
	uint32_t                                           ShowNameForEnemy : 1;                          // 0x0080 (0x0004) [0x0000000000000001] [0x00008000] (CPF_Edit)
	uint32_t                                           ShowNameForNeutral : 1;                        // 0x0080 (0x0004) [0x0000000000000001] [0x00010000] (CPF_Edit)
	uint32_t                                           ShowHealthForAlly : 1;                         // 0x0080 (0x0004) [0x0000000000000001] [0x00020000] (CPF_Edit)
	uint32_t                                           ShowHealthForEnemy : 1;                        // 0x0080 (0x0004) [0x0000000000000001] [0x00040000] (CPF_Edit)
	uint32_t                                           ShowHealthForNeutral : 1;                      // 0x0080 (0x0004) [0x0000000000000001] [0x00080000] (CPF_Edit)
	uint32_t                                           ShowLevelForAlly : 1;                          // 0x0080 (0x0004) [0x0000000000000001] [0x00100000] (CPF_Edit)
	uint32_t                                           ShowLevelForEnemy : 1;                         // 0x0080 (0x0004) [0x0000000000000001] [0x00200000] (CPF_Edit)
	uint32_t                                           ShowLevelForNeutral : 1;                       // 0x0080 (0x0004) [0x0000000000000001] [0x00400000] (CPF_Edit)
	uint32_t                                           CanSeeEnemies : 1;                             // 0x0080 (0x0004) [0x0000000000000001] [0x00800000] (CPF_Edit)
	uint32_t                                           IgnoresStealth : 1;                            // 0x0080 (0x0004) [0x0000000000000001] [0x01000000] (CPF_Edit)
	uint32_t                                           FireVisibleEventOnSeen : 1;                    // 0x0080 (0x0004) [0x0000000000000001] [0x02000000] (CPF_Edit)
	uint32_t                                           NoLOSVisionCheck : 1;                          // 0x0080 (0x0004) [0x0000000000000001] [0x04000000] (CPF_Edit)
	uint32_t                                           MinimapIconAlwaysVisible : 1;                  // 0x0080 (0x0004) [0x0000000000000001] [0x08000000] (CPF_Edit)
	uint32_t                                           bShowUnitIconWhenKilledByPlayer : 1;           // 0x0080 (0x0004) [0x0000000000000003] [0x10000000] (CPF_Edit | CPF_Const)
	uint32_t                                           bShowUnitIconWhenPlayerIsKilled : 1;           // 0x0080 (0x0004) [0x0000000000000003] [0x20000000] (CPF_Edit | CPF_Const)
	uint32_t                                           bConsiderMasterDamageInstigator : 1;           // 0x0080 (0x0004) [0x0000000000000003] [0x40000000] (CPF_Edit | CPF_Const)
	class TArray<class UPoplarUnitTypeTag*>            UnitTypeTags;                                  // 0x0088 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	struct FBuffTagImmunity                            BuffTagImmunities;                             // 0x0098 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarRewardMessageDefinition*              KilledRewardMessage;                           // 0x00A0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarRewardMessageDefinition*              AssistRewardMessage;                           // 0x00A8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarRewardMessageDefinition*              KilledRewardMessageForMaster;                  // 0x00B0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarRewardMessageDefinition*              AssistRewardMessageForMaster;                  // 0x00B8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            VisionConeAngle;                               // 0x00C0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	int32_t                                            EnemySeenTimeout;                              // 0x00C4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	struct FAttributeInitializationData                BaseDetectionRadius;                           // 0x00C8 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarMinimapIconDefinition*                MinimapIconDefinition;                         // 0x00E8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UPoplarMinimapIconDefinition*                MinimapIconDefinition_Dead;                    // 0x00F0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class FString                                      UnitDisplayName;                               // 0x00F8 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	ECoderUnitType                                     CoderType;                                     // 0x0108 (0x0001) [0x0000000000000001] (CPF_Edit)    
	EMastersOptions                                    AwardExperienceTo;                             // 0x0109 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EMastersOptions                                    AwardKillsTo;                                  // 0x010A (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EMastersOptions                                    AwardAssistsTo;                                // 0x010B (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class USwfMovie*                                   UnitKillMessageIcon;                           // 0x0110 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    HitNotificationSound;                          // 0x0118 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkEvent*                                    CriticalHitNofiticationSound;                  // 0x0120 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkEvent*                                    OvershieldHitNotificationSound;                // 0x0128 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkEvent*                                    TargetCriticalHitNofiticationSound;            // 0x0130 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UAkEvent*                                    TargetOvershieldHitNotificationSound;          // 0x0138 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarUnitTypeDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarUnitTypeTagExpressionEvaluator
// 0x0018 (0x0058 - 0x0070)
class UPoplarUnitTypeTagExpressionEvaluator : public UExpressionEvaluator
{
public:
	class TArray<class UPoplarUnitTypeTag*>            UnitTypeTags;                                  // 0x0058 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	EExpressionConstraint                              ConstraintType;                                // 0x0068 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarUnitTypeTagExpressionEvaluator");
		}

		return uClassPointer;
	};

	bool Evaluate(class UObject* ContextSource);
};

// Class PoplarGame.PoplarUseActionComponent
// 0x0000 (0x0168 - 0x0168)
class UPoplarUseActionComponent : public UWillowUseActionComponent
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarUseActionComponent");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarVMCategoryDefinition
// 0x0010 (0x0058 - 0x0068)
class UPoplarVMCategoryDefinition : public UGBXDefinition
{
public:
	class FString                                      CategoryName;                                  // 0x0058 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarVMCategoryDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarWaypoint
// 0x0038 (0x0288 - 0x02C0)
class APoplarWaypoint : public AWillowTrigger
{
public:
	struct FPointer                                    VfTable_IIPoplarMission;                       // 0x0288 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPoplarMissionObjectiveWaypointData         WaypointInfo;                                  // 0x0290 (0x0010) [0x0000000000000001] (CPF_Edit)    
	int32_t                                            AreaRadius;                                    // 0x02A0 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bUpdateObjectiveOnPlayerTouch : 1;             // 0x02A4 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bEnabled : 1;                                  // 0x02A4 (0x0004) [0x0000000000000000] [0x00000002] 
	class TArray<class AVolume*>                       TouchVolumes;                                  // 0x02A8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	float                                              TransitionToWorldDistance;                     // 0x02B8 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarWaypoint");
		}

		return uClassPointer;
	};

	void eventMissionReactionObjectiveComplete(const struct FPoplarMissionEventData& EventData);
	void eventMissionReactionObjectiveCleared(const struct FPoplarMissionEventData& EventData);
	void eventMissionReactionObjectiveUpdated(const struct FPoplarMissionEventData& EventData);
	void eventMissionReactionObjectiveSetChanged(const struct FPoplarMissionEventData& EventData);
	void eventMissionReactionStatusChanged(const struct FPoplarMissionEventData& EventData);
	void eventMissionReactionInitialized(const struct FPoplarMissionEventData& EventData);
	void ProcessPlayerTouch();
	void eventTouch(class AActor* Other, class UPrimitiveComponent* OtherComp, const struct FVector& HitLocation, const struct FVector& HitNormal);
	void PostBeginPlay();
};

// Class PoplarGame.PoplarWeapon
// 0x01C0 (0x1648 - 0x1808)
class APoplarWeapon : public AWillowWeapon
{
public:
	struct FPointer                                    VfTable_IIWeaponAction;                        // 0x1648 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIPoplarSkinConsumer;                  // 0x1650 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPmtData                                    PmtData;                                       // 0x1658 (0x0028) [0x0000000000003000] (CPF_Native | CPF_Transient)
	struct FPoplarWeaponDefinitionData                 DefinitionData;                                // 0x1680 (0x0010) [0x0000002100000021] (CPF_Edit | CPF_Net)
	class UPoplarWeaponTypeDefinition*                 PoplarWeaponDef;                               // 0x1690 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bUsingBehaviorFireMode : 1;                    // 0x1698 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bEndFireCalledSinceLastAttack : 1;             // 0x1698 (0x0004) [0x0000000000002000] [0x00000002] (CPF_Transient)
	uint32_t                                           bBeginFireCalledDuringAttack : 1;              // 0x1698 (0x0004) [0x0000000000002000] [0x00000004] (CPF_Transient)
	uint32_t                                           bChargeCommitFire : 1;                         // 0x1698 (0x0004) [0x0000000000002000] [0x00000008] (CPF_Transient)
	uint32_t                                           bChargedFiring : 1;                            // 0x1698 (0x0004) [0x0000000000002000] [0x00000010] (CPF_Transient)
	class UFiringModeDefinition*                       OverrideFiringModeDefinition;                  // 0x16A0 (0x0008) [0x0000000100002020] (CPF_Net | CPF_Transient)
	class UFiringModeDefinition*                       OverrideZoomedFiringModeDefinition;            // 0x16A8 (0x0008) [0x0000000100002020] (CPF_Net | CPF_Transient)
	class UFiringModeDefinition*                       OverrideChargedFiringModeDefinition;           // 0x16B0 (0x0008) [0x0000000100002020] (CPF_Net | CPF_Transient)
	class UWeaponActionComponent*                      CurrentActionComponent;                        // 0x16B8 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	float                                              LastUseStartTime;                              // 0x16C0 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              NextFireTime;                                  // 0x16C4 (0x0004) [0x0000000000002000] (CPF_Transient)
	struct FVector                                     SyncedFireOffset;                              // 0x16C8 (0x000C) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FAppliedAttributeEffect>       CrouchExternalAttributeModifiers;              // 0x16D8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<struct FAppliedAttributeEffect>       CrouchWeaponAttributeModifiers;                // 0x16E8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	EWeaponChargeState                                 ChargeState;                                   // 0x16F8 (0x0001) [0x0000000100000020] (CPF_Net)     
	EWeaponChargeState                                 LastReplicatedChargeState;                     // 0x16F9 (0x0001) [0x0000000000000000]               
	float                                              ChargingTime;                                  // 0x16FC (0x0004) [0x8000000000002020] (CPF_Net | CPF_Transient)
	float                                              ChargingTimeBaseValue;                         // 0x1700 (0x0004) [0x4000000000000022] (CPF_Const | CPF_Net)
	class TArray<class UAttributeModifier*>            ChargingTimeModifierStack;                     // 0x1708 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              OverchargeHoldTime;                            // 0x1718 (0x0004) [0x8000000000002020] (CPF_Net | CPF_Transient)
	float                                              OverchargeHoldTimeBaseValue;                   // 0x171C (0x0004) [0x4000000000000022] (CPF_Const | CPF_Net)
	class TArray<class UAttributeModifier*>            OverchargeHoldTimeModifierStack;               // 0x1720 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              ChargeHeatRate;                                // 0x1730 (0x0004) [0x8000000000002020] (CPF_Net | CPF_Transient)
	float                                              ChargeHeatRateBaseValue;                       // 0x1734 (0x0004) [0x4000000000000022] (CPF_Const | CPF_Net)
	class TArray<class UAttributeModifier*>            ChargeHeatRateModifierStack;                   // 0x1738 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              ChargingCancelDelay;                           // 0x1748 (0x0004) [0x8000000000002020] (CPF_Net | CPF_Transient)
	float                                              ChargingCancelDelayBaseValue;                  // 0x174C (0x0004) [0x4000000000000022] (CPF_Const | CPF_Net)
	class TArray<class UAttributeModifier*>            ChargingCancelDelayModifierStack;              // 0x1750 (0x0010) [0x0000000000402002] (CPF_Const | CPF_Transient | CPF_NeedCtorLink)
	float                                              ChargeStartTime;                               // 0x1760 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              FireStrengthModifier;                          // 0x1764 (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<struct FAppliedAttributeEffect>       ChargingExternalAttributeModifiers;            // 0x1768 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<struct FAppliedAttributeEffect>       ChargingWeaponAttributeModifiers;              // 0x1778 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<struct FAppliedAttributeEffect>       ChargedExternalAttributeModifiers;             // 0x1788 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<struct FAppliedAttributeEffect>       ChargedWeaponAttributeModifiers;               // 0x1798 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<struct FAppliedAttributeEffect>       OverchargeExternalAttributeModifiers;          // 0x17A8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<struct FAppliedAttributeEffect>       OverchargeWeaponAttributeModifiers;            // 0x17B8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FWeaponEffectsData                          FirstPersonChargeEffect;                       // 0x17C8 (0x0020) [0x0000000000482000] (CPF_Transient | CPF_Component | CPF_NeedCtorLink)
	struct FWeaponEffectsData                          ThirdPersonChargeEffect;                       // 0x17E8 (0x0020) [0x0000000000482000] (CPF_Transient | CPF_Component | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarWeapon");
		}

		return uClassPointer;
	};

	void PlayHitNotificationAudio(const struct FImpactInfo& LastImpactInfo);
	void RemoveOverchargeAttributeEffects();
	void RemoveChargedAttributeEffects();
	void RemoveChargingAttributeEffects();
	void ApplyOverchargeAttributeEffects();
	void ApplyChargedAttributeEffects();
	void ApplyChargingAttributeEffects();
	void StopChargingEffects();
	void PlayWeaponOvercharged();
	void PlayWeaponCharged();
	void PlayStopWeaponCharging();
	void PlayWeaponCharging();
	float GetChargingPercent();
	bool IsCharged(bool bChargedFiringCounts);
	void StopLoopingSounds();
	void PlayStoppedFiringSound();
	float GetFireStrengthModifier();
	float GetBarrelRotationsPerSecondAtFullFireRate();
	EBarrelSpinMode GetBarrelSpinMode();
	void eventSetRefireTimer(float Time);
	void BehaviorDefinitionFire();
	class AProjectile* eventProjectileDefinitionFire(class UFiringModeDefinition* FireModeDef);
	void OnFiringModeDefinitionFired(class UFiringModeDefinition* FiringModeDefinition, float DamageAmount, struct FImpactInfo& Impact);
	void InstantFire();
	void SharedFireAmmunition();
	void TimeWeaponFiring(uint8_t FireModeNum);
	bool ShouldRefire();
	bool SupportsAltFireMode(uint8_t FireModeNum);
	void ClearAutoAimOverride();
	void OverrideAutoAim(class UWillowAutoAimStrategyDefinition* AutoAimDef);
	void DisplayLastAttackTiming();
	void ServerSetFireOffset(const struct FVector& InFireOffset);
	void StartFire(uint8_t FireModeNum);
	void ContinueOtherWeaponActions();
	void StopOtherWeaponActions();
	void SendToFiringState(uint8_t FireModeNum);
	class UPoplarActionDefinition* GetTrackedActionDefinitionForFiringMode(class UFiringModeDefinition* FiringMode);
	float GetProjectileDamage();
	struct FVector GetPhysicalFireStartLoc(const struct FVector& optionalAimDir);
	class UFiringModeDefinition* GetFiringModeDefinition();
	void AttackDone();
	void TryBackswing();
	float GetFireInterval(uint8_t FireModeNum);
	void ProcessInstantHitBullet(uint8_t FiringMode, const struct FImpactInfo& Impact, float BulletDamage, class UFiringModeDefinition* optionalFiringModeDefinition, class APawn* optionalInstigatorOverride, bool optionalBOvercharged, uint8_t optionalStatId, class UDamagePipeline*& PipelineObject);
	void eventLatentWeaponActionFinished(class UWeaponActionComponent* TheAction);
	void StopLatentWeaponAction(bool bInterrupted);
	void StartLatentWeaponAction(class UWeaponActionComponent* TheAction, float optionalOverrideActionSpeedScale);
	void ClientExternalConsumeAmmo(float Cost);
	void ServerExternalConsumeAmmo(float Cost);
	bool HasActiveAmmo(uint8_t FireModeNum, int32_t optionalAmount);
	bool HasAmmo(uint8_t FireModeNum, int32_t optionalAmount);
	bool ShowAmmoHUD();
	bool IsCrosshairEnabled(bool optionalBForScope);
	void AdjustMuzzleFlashForZoomState(struct FWeaponZoomState& NewZoom);
	bool CanUnZoom();
	bool GetDisableZoomSnapToTarget();
	void RemoveAllExternalAttributeEffects();
	void ApplyAllExternalAttributeEffects();
	void UpdateCrouchAttributeEffects(bool bIsCrouched);
	void UpdateFireOffset();
	bool DisableJumping();
	void GetWeaponDebug(class TArray<class FString>& DebugInfo);
	void ChoosePartListCollection();
	void ClientInitialWeaponSet(bool bEquipInOffHand, bool bOptionalSet, bool optionalBDoNotActivate);
	bool ClientWeaponSetWaitForAmmoPool();
	void ClientWeaponSet(bool bOptionalSet, bool optionalBDoNotActivate);
	static class UMeshComponent* eventInitConstructPreview(class UMeshComponent* Existing, class UWillowInventoryDefinition* InvDefinition);
	void InitMeshes();
	void CalculateWeaponBaseValues();
	bool ClientInitializeFromWeaponTypeDefinition();
	void InitializeInternal();
	void eventInitializeInventory(class UBaseBalanceDefinition* InBalanceDef, class UManufacturerDefinition* InManufacturer, int32_t InGradeIndex, class UObject* InAdditionalQueryInterfaceSource);
	void eventInitializeFromDefinitionDataEx(class UWeaponTypeDefinition* NewDefinition, class UPoplarContentSkinDefinition* NewSkin, class UObject* InAdditionalQueryInterfaceSource);
	void SetDefinition(class UWeaponTypeDefinition* NewDefinition);
	void eventReplicatedEvent(const struct FName& VarName);
	static bool IsAttackTimingDebugEnabled();
	static void ToggleAttackTimingDebug();
};

// Class PoplarGame.PoplarWeaponStandIn
// 0x0050 (0x0240 - 0x0290)
class APoplarWeaponStandIn : public AActor
{
public:
	struct FPointer                                    VfTable_IIBodyCompositionInstance;             // 0x0240 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPointer                                    VfTable_IIInstanceData;                        // 0x0248 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UPoplarWeaponTypeDefinition*                 Definition;                                    // 0x0250 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UPoplarContentSkinDefinition*                Skin;                                          // 0x0258 (0x0008) [0x0000000000002000] (CPF_Transient)
	class USkeletalMeshComponent*                      MeshComponent;                                 // 0x0260 (0x0008) [0x0000000004082008] (CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline)
	class UBodyProviderDefinition*                     BodyProvider;                                  // 0x0268 (0x0008) [0x0000000000002000] (CPF_Transient)
	struct FInstanceData2                              InstanceState;                                 // 0x0270 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FCompressedBodyState2                       CompressedBodyState;                           // 0x0280 (0x0010) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarWeaponStandIn");
		}

		return uClassPointer;
	};

	bool eventGetInstanceData(const struct FName& DataName, class TArray<struct FInstanceDataItem2>& InstanceData);
	bool GetInstanceDataState(struct FInstanceData2& OutInstanceDataState);
	bool eventRemoveInstanceData(const struct FName& DataName);
	bool eventSetInstanceData(const struct FInstanceDataItem2& InstanceData, bool optionalBAllowDuplicateNames);
};

// Class PoplarGame.PoplarWeaponTypeDefinition
// 0x0218 (0x08D8 - 0x0AF0)
class UPoplarWeaponTypeDefinition : public UWeaponTypeDefinition
{
public:
	struct FPointer                                    VfTable_IIPoplarSkinInfoProvider;              // 0x08D8 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FPmtData                                    PmtData;                                       // 0x08E0 (0x0028) [0x0000000000003000] (CPF_Native | CPF_Transient)
	struct FAttributeInitializationData                SpinUpDuration;                                // 0x0908 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                SpinDownDuration;                              // 0x0928 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint8_t                                            NumPhysicalBarrelsToFireFrom;                  // 0x0948 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EVisibleAmmoControlType                            VisibleAmmoControlType;                        // 0x0949 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              StartingSpinUpFireIntervalMultiplier;          // 0x094C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bScoped : 1;                                   // 0x0950 (0x0004) [0x0000000020000002] [0x00000001] (CPF_Const | CPF_Deprecated)
	uint32_t                                           bCanZoom : 1;                                  // 0x0950 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	uint32_t                                           ZoomSnapToTarget : 1;                          // 0x0950 (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	uint32_t                                           MatchSnapDurationToFOVShiftDuration : 1;       // 0x0950 (0x0004) [0x0000000000000003] [0x00000008] (CPF_Edit | CPF_Const)
	uint32_t                                           bVisibleAmmoControlsOnInstigator : 1;          // 0x0950 (0x0004) [0x0000000000000003] [0x00000010] (CPF_Edit | CPF_Const)
	uint32_t                                           bShowZoomCrosshair : 1;                        // 0x0950 (0x0004) [0x0000000000000003] [0x00000020] (CPF_Edit | CPF_Const)
	uint32_t                                           bIgnoreSplitCrosshairScaling : 1;              // 0x0950 (0x0004) [0x0000000000000003] [0x00000040] (CPF_Edit | CPF_Const)
	uint32_t                                           bUseDefaultFOVOnly : 1;                        // 0x0950 (0x0004) [0x0000000000000003] [0x00000080] (CPF_Edit | CPF_Const)
	uint32_t                                           bBlockOtherWeapons : 1;                        // 0x0950 (0x0004) [0x0000000000000003] [0x00000100] (CPF_Edit | CPF_Const)
	uint32_t                                           bUseAltFiringModes : 1;                        // 0x0950 (0x0004) [0x0000000000000003] [0x00000200] (CPF_Edit | CPF_Const)
	uint32_t                                           bChargingEnabled : 1;                          // 0x0950 (0x0004) [0x0000000000000003] [0x00000400] (CPF_Edit | CPF_Const)
	uint32_t                                           bFireWhenCharged : 1;                          // 0x0950 (0x0004) [0x0000000000000003] [0x00000800] (CPF_Edit | CPF_Const)
	uint32_t                                           bDisableJumpWhenCharging : 1;                  // 0x0950 (0x0004) [0x0000000000000003] [0x00001000] (CPF_Edit | CPF_Const)
	uint32_t                                           bChargeBeforeEachShot : 1;                     // 0x0950 (0x0004) [0x0000000000000003] [0x00002000] (CPF_Edit | CPF_Const)
	uint32_t                                           bForceZoomWhenCharged : 1;                     // 0x0950 (0x0004) [0x0000000000000003] [0x00004000] (CPF_Edit | CPF_Const)
	uint32_t                                           bRemoveChargedAttributeEffectsAfterFiring : 1; // 0x0950 (0x0004) [0x0000000000000003] [0x00008000] (CPF_Edit | CPF_Const)
	uint32_t                                           bHideAmmoHUD : 1;                              // 0x0950 (0x0004) [0x0000000000000003] [0x00010000] (CPF_Edit | CPF_Const)
	float                                              ZoomedInputAccelScale;                         // 0x0954 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            VisibleAmmoCount;                              // 0x0958 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            VisibleAmmoSwitchOnId;                         // 0x095C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            VisibleAmmoSwitchOffId;                        // 0x0960 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<struct FName>                         VisibleAmmoControlNames;                       // 0x0968 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class UWillowAutoAimStrategyDefinition*            FireAutoAimDefinition;                         // 0x0978 (0x0008) [0x0000000000000000]               
	class UForceFeedbackWaveform*                      TriggerPullForceFeedback;                      // 0x0980 (0x0008) [0x000000000440000B] (CPF_Edit | CPF_Const | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	float                                              ChargingTime;                                  // 0x0988 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              ChargingRequiredPct;                           // 0x098C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              ChargingCommitPct;                             // 0x0990 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              OverchargeHoldTime;                            // 0x0994 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              MinChargingFireStrength;                       // 0x0998 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              OverchargeFireStrength;                        // 0x099C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              ChargingCancelDelay;                           // 0x09A0 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<struct FAttributeEffectData>          ChargeExternalAttributeEffects;                // 0x09A8 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<struct FAttributeEffectData>          ChargeWeaponAttributeEffects;                  // 0x09B8 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<struct FAttributeEffectData>          ChargedExternalAttributeEffects;               // 0x09C8 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<struct FAttributeEffectData>          ChargedWeaponAttributeEffects;                 // 0x09D8 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<struct FAttributeEffectData>          OverchargeExternalAttributeEffects;            // 0x09E8 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<struct FAttributeEffectData>          OverchargeWeaponAttributeEffects;              // 0x09F8 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class UFiringModeDefinition*                       ChargedFiringModeDefinition;                   // 0x0A08 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UForceFeedbackWaveform*                      ChargeUpForceFeedback;                         // 0x0A10 (0x0008) [0x000000000440000B] (CPF_Edit | CPF_Const | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UForceFeedbackWaveform*                      OverchargeCompleteForceFeedback;               // 0x0A18 (0x0008) [0x000000000440000B] (CPF_Edit | CPF_Const | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	float                                              ChargeHeatRate;                                // 0x0A20 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<struct FConditionalAnimationData>     WeaponChargingAnimations;                      // 0x0A28 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<struct FConditionalAnimationData>     WeaponChargedAnimations;                       // 0x0A38 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<struct FConditionalAnimationData>     WeaponOverchargedAnimations;                   // 0x0A48 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<struct FConditionalSoundData>         ChargingSounds;                                // 0x0A58 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<struct FConditionalSoundData>         ChargedSounds;                                 // 0x0A68 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<struct FConditionalSoundData>         OverchargedSounds;                             // 0x0A78 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<struct FConditionalSoundData>         StopChargingSounds;                            // 0x0A88 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class UPoplarActionDefinition*                     TrackedActionDefinition;                       // 0x0A98 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAttackSequenceDefinition*                   AttackSequenceDefinition;                      // 0x0AA0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class TArray<struct FAttributeEffectData>          CrouchExternalAttributeEffects;                // 0x0AA8 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class TArray<struct FAttributeEffectData>          CrouchWeaponAttributeEffects;                  // 0x0AB8 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	float                                              JumpAccuracyImpulse;                           // 0x0AC8 (0x0004) [0x0000000020000002] (CPF_Const | CPF_Deprecated)
	class UAnimSet*                                    CharacterMenuAnimSet;                          // 0x0AD0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             WeaponFiredStatDef;                            // 0x0AD8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             TargetHitStatDef;                              // 0x0AE0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              PostSprintDelayFireAndZoomTime;                // 0x0AE8 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarWeaponTypeDefinition");
		}

		return uClassPointer;
	};

	void OnCancelCharging(class UObject* Instigator, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnStopCharge(class UObject* Instigator, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnOvercharged(class UObject* Instigator, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnCharged(class UObject* Instigator, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnCharging(class UObject* Instigator, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnBackswing(EWeaponFireModeOutputs EventOutput, class UObject* Instigator, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnUse(EWeaponFireModeOutputs EventOutput, class UObject* Instigator, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnStopUse(EWeaponFireModeOutputs EventOutput, class UObject* Instigator, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnButtonReleased(EWeaponFireModeOutputs EventOutput, class UObject* Instigator, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnStartUse(EWeaponFireModeOutputs EventOutput, class UObject* Instigator, struct FBehaviorConsumerHandle& ConsumerHandle);
};

// Class PoplarGame.PoplarWeaponUseComponent
// 0x0018 (0x0160 - 0x0178)
class UPoplarWeaponUseComponent : public UWillowWeaponUseComponent
{
public:
	class APoplarMind*                                 PMind;                                         // 0x0160 (0x0008) [0x0000000000000002] (CPF_Const)   
	class APoplarAIPawn*                               PPawn;                                         // 0x0168 (0x0008) [0x0000000000000002] (CPF_Const)   
	class APoplarWeapon*                               PWeapon;                                       // 0x0170 (0x0008) [0x0000000000000002] (CPF_Const)   

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarWeaponUseComponent");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarWeaponVisualData
// 0x0040 (0x0198 - 0x01D8)
class UPoplarWeaponVisualData : public UWillowWeaponVisualData
{
public:
	struct FWeaponEffectsData                          FirstPersonChargeEffect;                       // 0x0198 (0x0020) [0x0000000000482000] (CPF_Transient | CPF_Component | CPF_NeedCtorLink)
	struct FWeaponEffectsData                          ThirdPersonChargeEffect;                       // 0x01B8 (0x0020) [0x0000000000482000] (CPF_Transient | CPF_Component | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarWeaponVisualData");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarWorldSoundManager
// 0x0000 (0x0260 - 0x0260)
class APoplarWorldSoundManager : public AWorldSoundManager
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarWorldSoundManager");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.ProjectileBehavior_OrientToImpact
// 0x0038 (0x0070 - 0x00A8)
class UProjectileBehavior_OrientToImpact : public UProjectileBehaviorBase
{
public:
	struct FVector                                     HitNormal;                                     // 0x0070 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FVector                                     HitLocation;                                   // 0x007C (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FVector                                     LocalOffset;                                   // 0x0088 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FRotator                                    LocalRotation;                                 // 0x0094 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bAdjustLocationByCollisionRadius : 1;          // 0x00A0 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bAdjustLocationByCollisionCylinder : 1;        // 0x00A0 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	uint32_t                                           bValidateLocation : 1;                         // 0x00A0 (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	uint32_t                                           bResetPitch : 1;                               // 0x00A0 (0x0004) [0x0000000000000003] [0x00000008] (CPF_Edit | CPF_Const)
	uint32_t                                           bResetYaw : 1;                                 // 0x00A0 (0x0004) [0x0000000000000003] [0x00000010] (CPF_Edit | CPF_Const)
	uint32_t                                           bResetRoll : 1;                                // 0x00A0 (0x0004) [0x0000000000000003] [0x00000020] (CPF_Edit | CPF_Const)
	EPIAlignmentType                                   AlignmentType;                                 // 0x00A4 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.ProjectileBehavior_OrientToImpact");
		}

		return uClassPointer;
	};

	void OrientToImpact(class APoplarProjectile* SourceProj, const struct FVector& InHitNormal, const struct FVector& InHitLocation);
	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.RadiateDamageActor
// 0x0068 (0x0240 - 0x02A8)
class ARadiateDamageActor : public AActor
{
public:
	struct FPointer                                    VfTable_IIBehaviorConsumer;                    // 0x0240 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class URadiateDamageDefinition*                    Definition;                                    // 0x0248 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FBehaviorConsumerHandle                     ConsumerHandle;                                // 0x0250 (0x0004) [0x0000000000002000] (CPF_Transient)
	class UIGBXTargetSearch*                           TargetSearchSource_Object;                     // 0x0258 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UIGBXTargetSearch*                           TargetSearchSource_Interface;                  // 0x0260 (0x0008) [0x0000000000002000] (CPF_Transient)
	float                                              MaxLifespan;                                   // 0x0268 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              NormalizedLifeSpan;                            // 0x026C (0x0004) [0x4000000000002000] (CPF_Transient)
	float                                              MinDistance;                                   // 0x0270 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              MaxDistance;                                   // 0x0274 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              MaxStepUpHeight;                               // 0x0278 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              MaxStepDownHeight;                             // 0x027C (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              TraceZOffset;                                  // 0x0280 (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<class AActor*>                        DamagedActors;                                 // 0x0288 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FVector                                     LastSpawnLocation;                             // 0x0298 (0x000C) [0x0000000000002000] (CPF_Transient)
	float                                              LastSpawnDistance;                             // 0x02A4 (0x0004) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.RadiateDamageActor");
		}

		return uClassPointer;
	};

	struct FBehaviorConsumerHandle GetBehaviorConsumerHandle();
	void OnSpawn();
	void InitializeFromDefinition(class URadiateDamageDefinition* InDefinition, class UIGBXTargetSearch* InTargetSearchSource);
};

// Class PoplarGame.RadiateDamageDefinition
// 0x00F8 (0x0058 - 0x0150)
class URadiateDamageDefinition : public UGBXDefinition
{
public:
	struct FPointer                                    VfTable_IIBehaviorProvider;                    // 0x0058 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	struct FAttributeInitializationData                Duration;                                      // 0x0060 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                Rate;                                          // 0x0080 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                MinDistance;                                   // 0x00A0 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                MaxDistance;                                   // 0x00C0 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bMoveOnGround : 1;                             // 0x00E0 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bDamageTargetOnce : 1;                         // 0x00E0 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                MaxStepUpHeight;                               // 0x00E8 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                MaxStepDownHeight;                             // 0x0108 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FVector                                     TraceExtent;                                   // 0x0128 (0x000C) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              TraceZOffset;                                  // 0x0134 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              EffectZOffset;                                 // 0x0138 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarTargetSearchDefinition*               TargetSearchCriteria;                          // 0x0140 (0x0008) [0x000000000440000B] (CPF_Edit | CPF_Const | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline)
	class UBehaviorProviderDefinition*                 BehaviorProviderDefinition;                    // 0x0148 (0x0008) [0x0000000000000002] (CPF_Const)   

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.RadiateDamageDefinition");
		}

		return uClassPointer;
	};

	void OnSpawnEffect(const struct FVector& SpawnLocation, const struct FVector& SpawnNormal, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnDamage(class AActor* Instigator, class AActor* HitActor, const struct FVector& HitNormal, const struct FVector& HitLocation, int32_t BoneIndex, struct FBehaviorConsumerHandle& ConsumerHandle);
	void OnStart(struct FBehaviorConsumerHandle& ConsumerHandle);
};

// Class PoplarGame.RankedPlayGlobalsDefinition
// 0x03A0 (0x0058 - 0x03F8)
class URankedPlayGlobalsDefinition : public UGBXDefinition
{
public:
	struct FRankedTierData                             RankedTiers[0x4];                              // 0x0058 (0x0260) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	struct FRankedSeasonData                           RankedSeasons[0x6];                            // 0x02B8 (0x0120) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	class FString                                      UnrankedTierName;                              // 0x03D8 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	int32_t                                            UnrankedKValue;                                // 0x03E8 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             RankedPlayPlacementMatchesWonStat;             // 0x03F0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.RankedPlayGlobalsDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.ReloadBarIndicatorGFxObject
// 0x0000 (0x00D8 - 0x00D8)
class UReloadBarIndicatorGFxObject : public UGFxObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.ReloadBarIndicatorGFxObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.RemoteControlDefinition
// 0x0028 (0x0058 - 0x0080)
class URemoteControlDefinition : public UGBXDefinition
{
public:
	struct FPointer                                    VfTable_IIBehaviorProvider;                    // 0x0058 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UBehaviorProviderDefinition*                 BehaviorProviderDefinition;                    // 0x0060 (0x0008) [0x0000000000000002] (CPF_Const)   
	struct FName                                       InputContextName;                              // 0x0068 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	ERemoteInputInterceptionPolicy                     LookInputPolicy;                               // 0x0070 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	ERemoteInputInterceptionPolicy                     MovementInputPolicy;                           // 0x0071 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              LookInputScaleOverride;                        // 0x0074 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              MovementInputScaleOverride;                    // 0x0078 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.RemoteControlDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.ScoreboardStatDefinition
// 0x0038 (0x0058 - 0x0090)
class UScoreboardStatDefinition : public UGBXDefinition
{
public:
	class FString                                      DisplayName;                                   // 0x0058 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      JSONFriendlyName;                              // 0x0068 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class TArray<class UStatDefinition*>               StatsToAggregate;                              // 0x0078 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)
	EScoreboardStatPlayerOrder                         PlayerOrdering;                                // 0x0088 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EScoreboardStatPriority                            Priority;                                      // 0x0089 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EScoreboardStatRelevancyFormula                    RelevancyFormula;                              // 0x008A (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            RelevancyThreshold;                            // 0x008C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.ScoreboardStatDefinition");
		}

		return uClassPointer;
	};

	int32_t GetScoreboardStatValueForPlayer(class APoplarStatReplicationInfo* SRI);
};

// Class PoplarGame.ScrollingGridGFxObject
// 0x0050 (0x00D8 - 0x0128)
class UScrollingGridGFxObject : public UGFxObject
{
public:
	int32_t                                            MaxClipRows;                                   // 0x00D8 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            MaxClipColumns;                                // 0x00DC (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            LastFocusedOptionButtonIndex;                  // 0x00E0 (0x0004) [0x0000000000002000] (CPF_Transient)
	int32_t                                            FirstOptionIndex;                              // 0x00E4 (0x0004) [0x0000000000002000] (CPF_Transient)
	class TArray<class UGFxObject*>                    OptionButtons;                                 // 0x00E8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	class TArray<struct FScrollingGridOption>          Options;                                       // 0x00F8 (0x0010) [0x0000000000402000] (CPF_Transient | CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnOptionButtonClick__Delegate;               // 0x0108 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)
	struct FScriptDelegate                             __OnRequestOptionData__Delegate;               // 0x0118 (0x0010) [0x0000000000400000] (CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.ScrollingGridGFxObject");
		}

		return uClassPointer;
	};

	void InternalOnScrollDownClick();
	void InternalOnScrollUpClick();
	void InternalOnOptionButtonFocusIn(int32_t OptionButtonIndex);
	void InternalOnOptionButtonClick(int32_t OptionButtonIndex, int32_t ControllerIndex);
	void OnRequestOptionData(int32_t CurrentOptionIndex, int32_t CurrentButtonIndex);
	void OnOptionButtonClick(int32_t OptionButtonIndex, int32_t ControllerIndex);
};

// Class PoplarGame.PoplarFrontendPrivateMatchMapSelectionGFxObject
// 0x0000 (0x0128 - 0x0128)
class UPoplarFrontendPrivateMatchMapSelectionGFxObject : public UScrollingGridGFxObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarFrontendPrivateMatchMapSelectionGFxObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarFrontendVoteOptionButtonGroupGFxObject
// 0x0000 (0x0128 - 0x0128)
class UPoplarFrontendVoteOptionButtonGroupGFxObject : public UScrollingGridGFxObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarFrontendVoteOptionButtonGroupGFxObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.SeqAct_RewardUnlock
// 0x0018 (0x00E8 - 0x0100)
class USeqAct_RewardUnlock : public USequenceAction
{
public:
	uint32_t                                           bNotifyHUD : 1;                                // 0x00E8 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	uint32_t                                           bUnlock : 1;                                   // 0x00E8 (0x0004) [0x0000000000000001] [0x00000002] (CPF_Edit)
	class TArray<class UUnlockDefinition*>             Unlocks;                                       // 0x00F0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.SeqAct_RewardUnlock");
		}

		return uClassPointer;
	};

	void eventActivated();
};

// Class PoplarGame.SeqAct_TriggerAnnouncerDialog
// 0x0000 (0x0148 - 0x0148)
class USeqAct_TriggerAnnouncerDialog : public UGearboxSeqAct_TriggerDialog
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.SeqAct_TriggerAnnouncerDialog");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.SequenceEventEnableByPoplarMission
// 0x0028 (0x0058 - 0x0080)
class USequenceEventEnableByPoplarMission : public USequenceEventCustomEnableCondition
{
public:
	struct FPointer                                    VfTable_IIPoplarMission;                       // 0x0058 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UPoplarMissionDefinition*                    LinkedMission;                                 // 0x0060 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FPoplarMissionStateSelectionData            MissionStatesToLinkTo;                         // 0x0068 (0x0004) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bIsObjectiveSpecific : 1;                      // 0x006C (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)
	class UPoplarMissionObjectiveDefinition*           LinkedObjective;                               // 0x0070 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FPoplarMissionObjectiveStateSelectionData   ObjectiveStatesToLinkTo;                       // 0x0078 (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.SequenceEventEnableByPoplarMission");
		}

		return uClassPointer;
	};

	void eventMissionReactionObjectiveComplete(const struct FPoplarMissionEventData& EventData);
	void eventMissionReactionObjectiveCleared(const struct FPoplarMissionEventData& EventData);
	void eventMissionReactionObjectiveUpdated(const struct FPoplarMissionEventData& EventData);
	void eventMissionReactionObjectiveSetChanged(const struct FPoplarMissionEventData& EventData);
	void eventMissionReactionStatusChanged(const struct FPoplarMissionEventData& EventData);
	void eventMissionReactionInitialized(const struct FPoplarMissionEventData& EventData);
};

// Class PoplarGame.SeqVar_DamageTag
// 0x0000 (0x0090 - 0x0090)
class USeqVar_DamageTag : public USeqVar_Int
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.SeqVar_DamageTag");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.ServerLookupDefinition
// 0x0068 (0x0058 - 0x00C0)
class UServerLookupDefinition : public UGBXDefinition
{
public:
	class TArray<struct FFamilyPair>                   Families;                                      // 0x0058 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)
	class UPoplarFactionDefinition*                    Factions[0x7];                                 // 0x0068 (0x0038) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
	class UPoplarCharacterRoleDefinition*              Roles[0x4];                                    // 0x00A0 (0x0020) [0x0000000000020001] (CPF_Edit | CPF_EditConst)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.ServerLookupDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.SplitscreenOverlayGFxMovie
// 0x0038 (0x0450 - 0x0488)
class USplitscreenOverlayGFxMovie : public UWillowGFxMovie
{
public:
	struct FPointer                                    VfTable_IIGFxObjectManager;                    // 0x0450 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UModularHUDGFxMovie*                         OwnerHUD;                                      // 0x0458 (0x0008) [0x0000000000002000] (CPF_Transient)
	class USplitscreenOverlayGFxMovieDefinition*       MySplitscreenOverlayDef;                       // 0x0460 (0x0008) [0x0000000000002000] (CPF_Transient)
	class UGearboxGFxObjectManager*                    ObjMgr;                                        // 0x0468 (0x0008) [0x0000000000002000] (CPF_Transient)
	uint8_t                                            CachedSplitScreenMode;                         // 0x0470 (0x0001) [0x0000000000002000] (CPF_Transient)
	float                                              CachedHUDScaleE;                               // 0x0474 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CachedHUDScaleX;                               // 0x0478 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CachedHUDScaleY;                               // 0x047C (0x0004) [0x0000000000002000] (CPF_Transient)
	class UGFxUIAction_Attach*                         ModeWidget;                                    // 0x0480 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.SplitscreenOverlayGFxMovie");
		}

		return uClassPointer;
	};

	void eventOnClose();
	bool eventStart(bool optionalStartPaused);
	void extOnClipUnloaded(class UGFxObject* Clip);
	void extOnClipLoaded(class UGFxObject* Clip);
	class UClass* GetUCClassForASClass(const struct FName& ClassName);
	bool GetIsSpectatorMode();
	class UGFxLayoutDefinition* GetLayoutDefinition();
	class UGearboxGFxObjectManager* GetGFxObjectManager();
};

// Class PoplarGame.SplitscreenOverlayGFxMovieDefinition
// 0x0008 (0x0138 - 0x0140)
class USplitscreenOverlayGFxMovieDefinition : public UWillowGFxMovie3DDefinition
{
public:
	class UGFxLayoutDefinition*                        Layout;                                        // 0x0138 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.SplitscreenOverlayGFxMovieDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.StarRatingMapDefinition
// 0x0018 (0x0058 - 0x0070)
class UStarRatingMapDefinition : public UGBXDefinition
{
public:
	class ULevelStatDimensionValueDefinition*          StatDimensionValue;                            // 0x0058 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<struct FStarDifficulyMode>            Difficulties;                                  // 0x0060 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.StarRatingMapDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.StatDefinition
// 0x0120 (0x0058 - 0x0178)
class UStatDefinition : public UGBXDefinition
{
public:
	struct FAttributeInitializationData                ActionSkillCooldownAward;                      // 0x0058 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EActionSkillCooldownRewardTarget                   ActionSkillCooldownTarget;                     // 0x0078 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EOnlineStatIDList                                  OnlineStatId;                                  // 0x0079 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EStatEndOfMatchReportingStyle                      EndOfMatchReportingStyle;                      // 0x007A (0x0001) [0x0000000000000001] (CPF_Edit)    
	EStatUpdateConstraint                              UpdateConstraintType;                          // 0x007B (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                ExperienceToAward;                             // 0x0080 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                CurrencyToAward;                               // 0x00A0 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarRewardMessageDefinition*              ReasonForIncome;                               // 0x00C0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                ScorePointsToAward;                            // 0x00C8 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            GameStatFlags;                                 // 0x00E8 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bDerivedStat : 1;                              // 0x00EC (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	uint32_t                                           bEnableProfileMapping : 1;                     // 0x00EC (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	uint32_t                                           bLargerStatValueIsBetter : 1;                  // 0x00EC (0x0004) [0x0000000000000003] [0x00000004] (CPF_Edit | CPF_Const)
	class FString                                      JSONFriendlyName;                              // 0x00F0 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UStatDefinition*                             SourceStat;                                    // 0x0100 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UCharacterStatDimensionValueDefinition*      RequiredCharacter;                             // 0x0108 (0x0008) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
	class UDifficultyStatDimensionValueDefinition*     RequiredDifficulty;                            // 0x0110 (0x0008) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
	class UGameModeStatDimensionValueDefinition*       RequiredGameMode;                              // 0x0118 (0x0008) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
	class UHardcoreStatDimensionValueDefinition*       RequiredHardcoreMode;                          // 0x0120 (0x0008) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
	class ULevelStatDimensionValueDefinition*          RequiredLevel;                                 // 0x0128 (0x0008) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
	class UFactionStatDimensionValueDefinition*        RequiredFaction;                               // 0x0130 (0x0008) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
	class UTeamSizeStatDimensionValueDefinition*       RequiredTeamSize;                              // 0x0138 (0x0008) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
	class URoleStatDimensionValueDefinition*           RequiredRole;                                  // 0x0140 (0x0008) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
	class URankedSeasonStatDimensionValueDefinition*   RequiredSeason;                                // 0x0148 (0x0008) [0x0000000000020001] (CPF_Edit | CPF_EditConst)
	int32_t                                            ProfileStatID;                                 // 0x0150 (0x0004) [0x0000000000020003] (CPF_Edit | CPF_Const | CPF_EditConst)
	int32_t                                            PreviousProfileStatId;                         // 0x0154 (0x0004) [0x0000000000020003] (CPF_Edit | CPF_Const | CPF_EditConst)
	class FString                                      DisplayName;                                   // 0x0158 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class TArray<class UAttributeDefinition*>          AttributesToUpdateOnStatChange;                // 0x0168 (0x0010) [0x0000000000400003] (CPF_Edit | CPF_Const | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.StatDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.StatDimensionDefinition
// 0x0020 (0x0058 - 0x0078)
class UStatDimensionDefinition : public UGBXDefinition
{
public:
	class FString                                      SparkId;                                       // 0x0058 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class FString                                      DisplayName;                                   // 0x0068 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.StatDimensionDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.CharacterStatDimensionDefinition
// 0x0000 (0x0078 - 0x0078)
class UCharacterStatDimensionDefinition : public UStatDimensionDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.CharacterStatDimensionDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.DifficultyStatDimensionDefinition
// 0x0000 (0x0078 - 0x0078)
class UDifficultyStatDimensionDefinition : public UStatDimensionDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.DifficultyStatDimensionDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.FactionStatDimensionDefinition
// 0x0000 (0x0078 - 0x0078)
class UFactionStatDimensionDefinition : public UStatDimensionDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.FactionStatDimensionDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.GameModeStatDimensionDefinition
// 0x0000 (0x0078 - 0x0078)
class UGameModeStatDimensionDefinition : public UStatDimensionDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.GameModeStatDimensionDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.HardcoreStatDimensionDefinition
// 0x0000 (0x0078 - 0x0078)
class UHardcoreStatDimensionDefinition : public UStatDimensionDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.HardcoreStatDimensionDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.LevelStatDimensionDefinition
// 0x0000 (0x0078 - 0x0078)
class ULevelStatDimensionDefinition : public UStatDimensionDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.LevelStatDimensionDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.RankedSeasonStatDimensionDefinition
// 0x0000 (0x0078 - 0x0078)
class URankedSeasonStatDimensionDefinition : public UStatDimensionDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.RankedSeasonStatDimensionDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.RoleStatDimensionDefinition
// 0x0000 (0x0078 - 0x0078)
class URoleStatDimensionDefinition : public UStatDimensionDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.RoleStatDimensionDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.TeamSizeStatDimensionDefinition
// 0x0000 (0x0078 - 0x0078)
class UTeamSizeStatDimensionDefinition : public UStatDimensionDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.TeamSizeStatDimensionDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.StatDimensionValueDefinition
// 0x0028 (0x0058 - 0x0080)
class UStatDimensionValueDefinition : public UGBXDefinition
{
public:
	class FString                                      SparkId;                                       // 0x0058 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class FString                                      DisplayName;                                   // 0x0068 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	uint32_t                                           bUseContentNEXTPath : 1;                       // 0x0078 (0x0004) [0x0000000800000001] [0x00000001] (CPF_Edit)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.StatDimensionValueDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.CharacterStatDimensionValueDefinition
// 0x0000 (0x0080 - 0x0080)
class UCharacterStatDimensionValueDefinition : public UStatDimensionValueDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.CharacterStatDimensionValueDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.DifficultyStatDimensionValueDefinition
// 0x0008 (0x0080 - 0x0088)
class UDifficultyStatDimensionValueDefinition : public UStatDimensionValueDefinition
{
public:
	float                                              GameDifficulty;                                // 0x0080 (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.DifficultyStatDimensionValueDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.FactionStatDimensionValueDefinition
// 0x0000 (0x0080 - 0x0080)
class UFactionStatDimensionValueDefinition : public UStatDimensionValueDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.FactionStatDimensionValueDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.GameModeStatDimensionValueDefinition
// 0x0000 (0x0080 - 0x0080)
class UGameModeStatDimensionValueDefinition : public UStatDimensionValueDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.GameModeStatDimensionValueDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.HardcoreStatDimensionValueDefinition
// 0x0008 (0x0080 - 0x0088)
class UHardcoreStatDimensionValueDefinition : public UStatDimensionValueDefinition
{
public:
	uint32_t                                           bHardcoreEnabled : 1;                          // 0x0080 (0x0004) [0x0000000000000001] [0x00000001] (CPF_Edit)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.HardcoreStatDimensionValueDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.LevelStatDimensionValueDefinition
// 0x0008 (0x0080 - 0x0088)
class ULevelStatDimensionValueDefinition : public UStatDimensionValueDefinition
{
public:
	int32_t                                            ContextId;                                     // 0x0080 (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.LevelStatDimensionValueDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.RankedSeasonStatDimensionValueDefinition
// 0x0000 (0x0080 - 0x0080)
class URankedSeasonStatDimensionValueDefinition : public UStatDimensionValueDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.RankedSeasonStatDimensionValueDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.RoleStatDimensionValueDefinition
// 0x0000 (0x0080 - 0x0080)
class URoleStatDimensionValueDefinition : public UStatDimensionValueDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.RoleStatDimensionValueDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.TeamSizeStatDimensionValueDefinition
// 0x0008 (0x0080 - 0x0088)
class UTeamSizeStatDimensionValueDefinition : public UStatDimensionValueDefinition
{
public:
	int32_t                                            Count;                                         // 0x0080 (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.TeamSizeStatDimensionValueDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.StatGlobalsDefinition
// 0x04D8 (0x0058 - 0x0530)
class UStatGlobalsDefinition : public UGBXDefinition
{
public:
	class UPoplarStatProfileMappingDefinition*         StatProfileMappingDef;                         // 0x0058 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             LeveledUpStat;                                 // 0x0060 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             EnemyTooHighLevelStat;                         // 0x0068 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             GenericWeaponUsedStatDef;                      // 0x0070 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             SecondsPlayerSpentDeadStat;                    // 0x0078 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             SpentHelixPointsStat;                          // 0x0080 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             UnspentHelixPoint;                             // 0x0088 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             CanPurchaseGear;                               // 0x0090 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             ShouldTeleportToBase;                          // 0x0098 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              NearDeathTeleportThreshold;                    // 0x00A0 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UCharacterStatDimensionDefinition*           CharacterStatDimensionDef;                     // 0x00A8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UDifficultyStatDimensionDefinition*          DifficultyStatDimensionDef;                    // 0x00B0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UFactionStatDimensionDefinition*             FactionStatDimensionDef;                       // 0x00B8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UGameModeStatDimensionDefinition*            GameModeStatDimensionDef;                      // 0x00C0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class ULevelStatDimensionDefinition*               LevelStatDimensionDef;                         // 0x00C8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UTeamSizeStatDimensionDefinition*            TeamSizeStatDimensionDef;                      // 0x00D0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UHardcoreStatDimensionDefinition*            HardcoreStatDimensionDef;                      // 0x00D8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class URoleStatDimensionDefinition*                RoleStatDimensionDef;                          // 0x00E0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class URankedSeasonStatDimensionDefinition*        SeasonStatDimensionDef;                        // 0x00E8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             KillStreakStat;                                // 0x00F0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             RevengeStat;                                   // 0x00F8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             TauntKillStat;                                 // 0x0100 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             HelixKillStat;                                 // 0x0108 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             TeleportKillStat;                              // 0x0110 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             AvengeStat;                                    // 0x0118 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             DeathStat;                                     // 0x0120 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             AssistStat;                                    // 0x0128 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             HeadshotStat;                                  // 0x0130 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             SupportStat;                                   // 0x0138 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             DisruptStat;                                   // 0x0140 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             MatchPlayerScoreStat;                          // 0x0148 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             MatchTeamBonusScoreStat;                       // 0x0150 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             MatchTeamScoreStat;                            // 0x0158 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             TeamAScoreStat;                                // 0x0160 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UStatDefinition*                             TeamBScoreStat;                                // 0x0168 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UStatDefinition*                             TotalGearActivations;                          // 0x0170 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UStatDefinition*                             StarRatingStat;                                // 0x0178 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             BronzeRatingsEarnedStat;                       // 0x0180 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             SilverRatingsEarnedStat;                       // 0x0188 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             GoldRatingsEarnedStat;                         // 0x0190 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             DiamondRatingsEarnedStat;                      // 0x0198 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             TotalStarRatingsEarnedStat;                    // 0x01A0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<struct FStarRatingStatMapping>        StarRatingStatMappings;                        // 0x01A8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UStatDefinition*                             CurrencyLostOnDeathStat;                       // 0x01B8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             CreditsEarnedStat;                             // 0x01C0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             CreditsSpentStat;                              // 0x01C8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             MaxCreditsOnHandStat;                          // 0x01D0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             CreditsEarnedPerMinStat;                       // 0x01D8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             MinionCreditsEarnedStat;                       // 0x01E0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             PlayerCreditsEarnedStat;                       // 0x01E8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             StationaryCreditsEarnedStat;                   // 0x01F0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             GenericCreditsEarnedStat;                      // 0x01F8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             TrickleCreditsEarnedStat;                      // 0x0200 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             RespawnAfterDeathStat;                         // 0x0208 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             RevivesOnPlayerStat;                           // 0x0210 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             RevivesFromPlayerStat;                         // 0x0218 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             PlayerDownedStat;                              // 0x0220 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             TotalPhysicalDamageReceivedStat;               // 0x0228 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             TotalTrueDamageReceivedStat;                   // 0x0230 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             TotalHealingDamageReceivedStat;                // 0x0238 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             TotalShieldDamageReceivedStat;                 // 0x0240 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             TotalOvershieldDamageReceivedStat;             // 0x0248 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             TotalShieldHealingDamageReceivedStat;          // 0x0250 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             TotalOvershieldHealingDamageReceivedStat;      // 0x0258 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             TotalPhysicalDamageGivenStat;                  // 0x0260 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             TotalTrueDamageGivenStat;                      // 0x0268 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             TotalHealingDamageGivenStat;                   // 0x0270 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             TotalShieldDamageGivenStat;                    // 0x0278 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             TotalOvershieldDamageGivenStat;                // 0x0280 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             TotalShieldHealingDamageGivenStat;             // 0x0288 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             TotalOvershieldHealingDamageGivenStat;         // 0x0290 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             CriticalHitsReceivedStat;                      // 0x0298 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             CriticalHitsGivenStat;                         // 0x02A0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             CumulativeDamageReceivedStat;                  // 0x02A8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             CumulativeDamageGivenStat;                     // 0x02B0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             MaxCumulativeDamageTakenStat;                  // 0x02B8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             MaxCumulativeDamageDealtStat;                  // 0x02C0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             MaxCumulativeHealingGivenStat;                 // 0x02C8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             NoCampaignTicketsLostStat;                     // 0x02D0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             PrologueCompletedStat;                         // 0x02D8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             MatchCompletionTimeStat;                       // 0x02E0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class ULevelStatDimensionValueDefinition*          PrologueLevelStatDimensionValue;               // 0x02E8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             TeleportedToBaseStat;                          // 0x02F0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             VersusPrologueCompletedStat;                   // 0x02F8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             MaxFactionReputationStat;                      // 0x0300 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             AquireLegendaryPerkStat;                       // 0x0308 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             MaxCharacterMetaLevelStat;                     // 0x0310 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             MaxPlayerMetaLevelStat;                        // 0x0318 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             StartMatchmakingStat;                          // 0x0320 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             MatchesPlayedStat;                             // 0x0328 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             MatchesWonStat;                                // 0x0330 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             TimePlayedStat;                                // 0x0338 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             CampaignMatchesWonStat;                        // 0x0340 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             MatchesAbandoned;                              // 0x0348 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             ActionSkillOneUsed;                            // 0x0350 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UStatDefinition*                             ActionSkillTwoUsed;                            // 0x0358 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class UStatDefinition*                             ActionSkillThreeUsed;                          // 0x0360 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class TArray<struct FBestStatReportingSetting>     BestStatReportingSettings;                     // 0x0368 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UStatDefinition*                             HeroPvP_MatchesPlayedStat;                     // 0x0378 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             HeroPvP_MatchesWonStat;                        // 0x0380 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             HeroProgress_CompletionStat;                   // 0x0388 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             HeroProgress_PvE_RuinsStat;                    // 0x0390 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             HeroProgress_PvE_CavernsStat;                  // 0x0398 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             HeroProgress_PvE_CathedralStat;                // 0x03A0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             HeroProgress_PvE_EvacuationStat;               // 0x03A8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             HeroProgress_PvE_PortalStat;                   // 0x03B0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             HeroProgress_PvE_CaptainsStat;                 // 0x03B8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             HeroProgress_PvE_RefineryStat;                 // 0x03C0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             HeroProgress_PvE_ObservatoryStat;              // 0x03C8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             HeroProgress_PvP_BlissRuinsStat;               // 0x03D0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             HeroProgress_PvP_RavineStat;                   // 0x03D8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             HeroProgress_PvP_StrongholdStat;               // 0x03E0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             HeroProgress_PvP_ViaductStat;                  // 0x03E8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             HeroProgress_PvP_IceScortStat;                 // 0x03F0 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UStatDefinition*                             HeroProgress_PvP_SkirmishStat;                 // 0x03F8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarMetaItemCharacterDefinition*          HeroProgress_Char_MetaItemCharacterDef[0x19];  // 0x0400 (0x00C8) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class TArray<class UStatDefinition*>               Pickups_Stats;                                 // 0x04C8 (0x0010) [0x0000000000400001] (CPF_Edit | CPF_NeedCtorLink)
	class UStatDefinition*                             DailyChallengeIndexStats[0x3];                 // 0x04D8 (0x0018) [0x0000000000000001] (CPF_Edit)    
	class UStatDefinition*                             DailyChallengeUnlockTimes[0x3];                // 0x04F0 (0x0018) [0x0000000000000001] (CPF_Edit)    
	class UStatDefinition*                             DailyChallengeLastCompleted[0x5];              // 0x0508 (0x0028) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.StatGlobalsDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.TeamAttributeContextResolver
// 0x0010 (0x0058 - 0x0068)
class UTeamAttributeContextResolver : public UAttributeContextResolver
{
public:
	uint32_t                                           bGetSpecificTeam : 1;                          // 0x0058 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	class UPoplarTeamDefinition*                       TeamDefinition;                                // 0x0060 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.TeamAttributeContextResolver");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.TeamAwareDecalActor
// 0x0010 (0x0248 - 0x0258)
class ATeamAwareDecalActor : public ADecalActor
{
public:
	struct FPointer                                    VfTable_IIPoplarTeamAffiliated;                // 0x0248 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UPoplarTeamDefinition*                       TeamDefinition;                                // 0x0250 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.TeamAwareDecalActor");
		}

		return uClassPointer;
	};

	class UPoplarTeamDefinition* GetPoplarTeamDefinition();
	void SetPoplarTeamInfo(class APoplarTeamInfo* InTeamInfo);
	class APoplarTeamInfo* GetPoplarTeamInfo();
	void ForceColorRefresh();
	class UGBXDefinition* GetTeamDefinition();
	void SetTeamInfo(class ATeamInfo* InTeamInfo);
	class ATeamInfo* GetTeamInfo();
};

// Class PoplarGame.TeamAwarePointLightActor
// 0x0010 (0x0250 - 0x0260)
class ATeamAwarePointLightActor : public APointLight
{
public:
	struct FPointer                                    VfTable_IIPoplarTeamAffiliated;                // 0x0250 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UPoplarTeamDefinition*                       TeamDefinition;                                // 0x0258 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.TeamAwarePointLightActor");
		}

		return uClassPointer;
	};

	void eventDestroyed();
	class UPoplarTeamDefinition* GetPoplarTeamDefinition();
	void SetPoplarTeamInfo(class APoplarTeamInfo* InTeamInfo);
	class APoplarTeamInfo* GetPoplarTeamInfo();
	void ForceColorRefresh();
	class UGBXDefinition* GetTeamDefinition();
	void SetTeamInfo(class ATeamInfo* InTeamInfo);
	class ATeamInfo* GetTeamInfo();
};

// Class PoplarGame.TeamAwareStaticMeshActor
// 0x0010 (0x0248 - 0x0258)
class ATeamAwareStaticMeshActor : public AStaticMeshActor
{
public:
	struct FPointer                                    VfTable_IIPoplarTeamAffiliated;                // 0x0248 (0x0008) [0x0000000000801002] (CPF_Const | CPF_Native | CPF_NoExport)
	class UPoplarTeamDefinition*                       TeamDefinition;                                // 0x0250 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.TeamAwareStaticMeshActor");
		}

		return uClassPointer;
	};

	class UPoplarTeamDefinition* GetPoplarTeamDefinition();
	void SetPoplarTeamInfo(class APoplarTeamInfo* InTeamInfo);
	class APoplarTeamInfo* GetPoplarTeamInfo();
	void ForceColorRefresh();
	class UGBXDefinition* GetTeamDefinition();
	void SetTeamInfo(class ATeamInfo* InTeamInfo);
	class ATeamInfo* GetTeamInfo();
};

// Class PoplarGame.UnitAttributeContextResolver
// 0x0000 (0x0058 - 0x0058)
class UUnitAttributeContextResolver : public UAttributeContextResolver
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.UnitAttributeContextResolver");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.UnitTypeExpressionEvaluator
// 0x0010 (0x0058 - 0x0068)
class UUnitTypeExpressionEvaluator : public UExpressionEvaluator
{
public:
	EUnitState                                         UnitState;                                     // 0x0058 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarUnitTypeDefinition*                   UnitType;                                      // 0x0060 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.UnitTypeExpressionEvaluator");
		}

		return uClassPointer;
	};

	bool Evaluate(class UObject* ContextSource);
};

// Class PoplarGame.UnlockDefinition
// 0x00E0 (0x0058 - 0x0138)
class UUnlockDefinition : public UGBXDefinition
{
public:
	class FString                                      UnlockName;                                    // 0x0058 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      UnlockDescription;                             // 0x0068 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class UPoplarMetaItemDefinition*                   MetaItemDefinition;                            // 0x0078 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarPerkFunction*                         PerkItemDefinition;                            // 0x0080 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UItemPoolDefinition*                         ItemPoolDef;                                   // 0x0088 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UPoplarMetaItemProbabilityDefinition*        ItemProbabilityDefinition;                     // 0x0090 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bAwardInstantly : 1;                           // 0x0098 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bHiddenFromUI : 1;                             // 0x0098 (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	uint32_t                                           bRewardsFixedUpFromInts : 1;                   // 0x0098 (0x0004) [0x0000000000000000] [0x00000004] 
	int32_t                                            EarnedCurrencyAmount;                          // 0x009C (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                EarnedCurrencyAmount_AttID;                    // 0x00A0 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                PremiumCurrencyAmount;                         // 0x00C0 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            PlayerExperienceAmount;                        // 0x00E0 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                PlayerExperienceAmount_AttID;                  // 0x00E8 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            CharacterExperienceAmount;                     // 0x0108 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAttributeInitializationData                CharacterExperienceAmount_AttID;               // 0x0110 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class USwfMovie*                                   IconGFxMovie;                                  // 0x0130 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.UnlockDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.LoreUnlockDefinition
// 0x0048 (0x0138 - 0x0180)
class ULoreUnlockDefinition : public UUnlockDefinition
{
public:
	class USwfMovie*                                   SmallIcon;                                     // 0x0138 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class FString                                      LoreTitle;                                     // 0x0140 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	ELoreRewardType                                    LoreType;                                      // 0x0150 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UAkEvent*                                    AuidoClip;                                     // 0x0158 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class FString                                      LoreText;                                      // 0x0160 (0x0010) [0x0000000000408003] (CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink)
	class FString                                      LargeImagePath;                                // 0x0170 (0x0010) [0x0000000000420001] (CPF_Edit | CPF_EditConst | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.LoreUnlockDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.UnlockAchievementDefinition
// 0x0008 (0x0138 - 0x0140)
class UUnlockAchievementDefinition : public UUnlockDefinition
{
public:
	EAchievementList                                   AchievementId;                                 // 0x0138 (0x0001) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.UnlockAchievementDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.UnlockActivityFeedDefinition
// 0x0008 (0x0138 - 0x0140)
class UUnlockActivityFeedDefinition : public UUnlockDefinition
{
public:
	class UPoplarActivityFeedDefinition*               ActivityFeedDef;                               // 0x0138 (0x0008) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.UnlockActivityFeedDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.UnlockApplyBuffDefinition
// 0x0028 (0x0138 - 0x0160)
class UUnlockApplyBuffDefinition : public UUnlockDefinition
{
public:
	class UPoplarBuffDefinition*                       BuffDef;                                       // 0x0138 (0x0008) [0x0000000000000001] (CPF_Edit)    
	struct FAttributeInitializationData                Duration;                                      // 0x0140 (0x0020) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.UnlockApplyBuffDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.UnlockStatIncrementDefinition
// 0x0010 (0x0138 - 0x0148)
class UUnlockStatIncrementDefinition : public UUnlockDefinition
{
public:
	class UStatDefinition*                             Stat;                                          // 0x0138 (0x0008) [0x0000000000000001] (CPF_Edit)    
	int32_t                                            Amount;                                        // 0x0140 (0x0004) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.UnlockStatIncrementDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.UnlockTeamBonusScoreDefinition
// 0x0020 (0x0138 - 0x0158)
class UUnlockTeamBonusScoreDefinition : public UUnlockDefinition
{
public:
	struct FAttributeInitializationData                ScoreAmount;                                   // 0x0138 (0x0020) [0x0000000000000001] (CPF_Edit)    

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.UnlockTeamBonusScoreDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.UnlockProfileMappingDefinition
// 0x0010 (0x0058 - 0x0068)
class UUnlockProfileMappingDefinition : public UGBXDefinition
{
public:
	class TArray<class UUnlockDefinition*>             ProfileMapping;                                // 0x0058 (0x0010) [0x0000000000420003] (CPF_Edit | CPF_Const | CPF_EditConst | CPF_NeedCtorLink)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.UnlockProfileMappingDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.UtilityAxis_HotSpot
// 0x0028 (0x0058 - 0x0080)
class UUtilityAxis_HotSpot : public UUtilityAxis
{
public:
	EHotSpotUtilityType                                Type;                                          // 0x0058 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	EHotSpotUtilityAllegianceFilter                    AllowedAllegiance;                             // 0x0059 (0x0001) [0x0000000000000001] (CPF_Edit)    
	EHotSpotUtilityAllegianceFilter                    DisallowedAllegiance;                          // 0x005A (0x0001) [0x0000000000000001] (CPF_Edit)    
	uint32_t                                           bMeasureDistanceToCenter : 1;                  // 0x005C (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)
	uint32_t                                           bSkipWhenHasHotSpot : 1;                       // 0x005C (0x0004) [0x0000000000000003] [0x00000002] (CPF_Edit | CPF_Const)
	struct FAIRange                                    DistanceRange;                                 // 0x0060 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	struct FAIRange                                    UnitCountRange;                                // 0x0068 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	int32_t                                            AllowedCategoryBitfield;                       // 0x0070 (0x0004) [0x0000000000000000]               
	int32_t                                            DisallowedCategoryBitfield;                    // 0x0074 (0x0004) [0x0000000000000000]               
	class UExpressionEvaluator*                        OwnerFilter;                                   // 0x0078 (0x0008) [0x0000000004000003] (CPF_Edit | CPF_Const | CPF_EditInline)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.UtilityAxis_HotSpot");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.WeaponActionComponent
// 0x0000 (0x0090 - 0x0090)
class UWeaponActionComponent : public UActorComponent
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.WeaponActionComponent");
		}

		return uClassPointer;
	};

	void Stop(bool bInterrupted);
	void Start(float ActionSpeedScale);
};

// Class PoplarGame.HoldWeaponActionComponent
// 0x0018 (0x0090 - 0x00A8)
class UHoldWeaponActionComponent : public UWeaponActionComponent
{
public:
	class USpecialMoveDefinition*                      StartAction;                                   // 0x0090 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class USpecialMoveDefinition*                      StopAction;                                    // 0x0098 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              PlayRateScale;                                 // 0x00A0 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bStopCalled : 1;                               // 0x00A4 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.HoldWeaponActionComponent");
		}

		return uClassPointer;
	};

	void ActionFinished(bool bInterrupted);
	void HoldFinished(bool bInterrupted);
	void Stop(bool bInterrupted);
	void Start(float ActionSpeedScale);
};

// Class PoplarGame.WindUpWeaponActionComponent
// 0x0048 (0x0090 - 0x00D8)
class UWindUpWeaponActionComponent : public UWeaponActionComponent
{
public:
	class USpecialMoveDefinition*                      StartWindUp;                                   // 0x0090 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class USpecialMoveDefinition*                      StopWindUp;                                    // 0x0098 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class USpecialMoveDefinition*                      WindUpCharge;                                  // 0x00A0 (0x0008) [0x0000000000000001] (CPF_Edit)    
	class USpecialMoveDefinition*                      Action;                                        // 0x00A8 (0x0008) [0x0000000000000001] (CPF_Edit)    
	float                                              MaxWindUpHoldTime;                             // 0x00B0 (0x0004) [0x0000000000000001] (CPF_Edit)    
	float                                              CommitUseWindUpPct;                            // 0x00B4 (0x0004) [0x0000000000000001] (CPF_Edit)    
	EWindUpState                                       CurrentState;                                  // 0x00B8 (0x0001) [0x0000000000002000] (CPF_Transient)
	float                                              PlayRateScale;                                 // 0x00BC (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              StartTime;                                     // 0x00C0 (0x0004) [0x0000000000002000] (CPF_Transient)
	float                                              CommitActionTime;                              // 0x00C4 (0x0004) [0x0000000000002000] (CPF_Transient)
	uint32_t                                           bPendingAction : 1;                            // 0x00C8 (0x0004) [0x0000000000002000] [0x00000001] (CPF_Transient)
	class USpecialMoveDefinition*                      FinishSMD;                                     // 0x00D0 (0x0008) [0x0000000000002000] (CPF_Transient)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.WindUpWeaponActionComponent");
		}

		return uClassPointer;
	};

	void ActionFinished(bool bInterrupted);
	void HoldFinished();
	void WindUpChargeFinished(bool bInterrupted);
	void WindUpFinished(bool bInterrupted);
	void Stop(bool bInterrupted);
	void Start(float ActionSpeedScale);
};

// Class PoplarGame.WeaponBehaviorBase
// 0x0000 (0x0070 - 0x0070)
class UWeaponBehaviorBase : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.WeaponBehaviorBase");
		}

		return uClassPointer;
	};

	class APoplarWeapon* GetWeaponContext(class UObject* ContextObject);
};

// Class PoplarGame.WeaponBehavior_AttackDone
// 0x0000 (0x0070 - 0x0070)
class UWeaponBehavior_AttackDone : public UWeaponBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.WeaponBehavior_AttackDone");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.WeaponBehavior_ConsumeAmmo
// 0x0008 (0x0070 - 0x0078)
class UWeaponBehavior_ConsumeAmmo : public UWeaponBehaviorBase
{
public:
	float                                              AmmoCost;                                      // 0x0070 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	uint32_t                                           bReplicate : 1;                                // 0x0074 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.WeaponBehavior_ConsumeAmmo");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.WeaponBehavior_FireImpulse
// 0x0008 (0x0070 - 0x0078)
class UWeaponBehavior_FireImpulse : public UWeaponBehaviorBase
{
public:
	float                                              AccuracyImpulse;                               // 0x0070 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              KickImpulse;                                   // 0x0074 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.WeaponBehavior_FireImpulse");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.WeaponBehavior_OverrideFiringMode
// 0x0010 (0x0070 - 0x0080)
class UWeaponBehavior_OverrideFiringMode : public UWeaponBehaviorBase
{
public:
	EOverrideFiringModeChannel                         FiringModeChannel;                             // 0x0070 (0x0001) [0x0000000000000003] (CPF_Edit | CPF_Const)
	class UFiringModeDefinition*                       FiringMode;                                    // 0x0078 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.WeaponBehavior_OverrideFiringMode");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.WeaponBehavior_SpinBarrel
// 0x0008 (0x0070 - 0x0078)
class UWeaponBehavior_SpinBarrel : public UWeaponBehaviorBase
{
public:
	uint32_t                                           bEnabled : 1;                                  // 0x0070 (0x0004) [0x0000000000000003] [0x00000001] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.WeaponBehavior_SpinBarrel");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.WeaponBehavior_TryBackswing
// 0x0000 (0x0070 - 0x0070)
class UWeaponBehavior_TryBackswing : public UWeaponBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.WeaponBehavior_TryBackswing");
		}

		return uClassPointer;
	};

	void ApplyBehaviorToContext(class UObject* ContextObject, class UObject* SelfObject, class UObject* MyInstigatorObject, class UObject* OtherEventParticipantObject, const struct FBehaviorParameters& EventData, struct FBehaviorKernelInfo& KernelInfo);
};

// Class PoplarGame.Action_AnimAttack_Poplar
// 0x0000 (0x0340 - 0x0340)
class UAction_AnimAttack_Poplar : public UAction_AnimAttack
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Action_AnimAttack_Poplar");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Action_BotTactics
// 0x0000 (0x02C8 - 0x02C8)
class UAction_BotTactics : public UWillowActionSequencePawn
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Action_BotTactics");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Action_BotPushLane
// 0x0000 (0x02C8 - 0x02C8)
class UAction_BotPushLane : public UAction_BotTactics
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Action_BotPushLane");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Action_MinionSidestep
// 0x0000 (0x02C8 - 0x02C8)
class UAction_MinionSidestep : public UWillowActionSequencePawn
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Action_MinionSidestep");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Action_UseVendingMachine
// 0x0000 (0x02C8 - 0x02C8)
class UAction_UseVendingMachine : public UWillowActionSequencePawn
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Action_UseVendingMachine");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.ActorFactoryPoplarPlayerStartRegion
// 0x0000 (0x00C0 - 0x00C0)
class UActorFactoryPoplarPlayerStartRegion : public UActorFactory
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.ActorFactoryPoplarPlayerStartRegion");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Behavior_PoplarCauseDamage
// 0x0000 (0x01A8 - 0x01A8)
class UBehavior_PoplarCauseDamage : public UBehavior_CauseDamage
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarCauseDamage");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Behavior_PoplarStartGameTimer
// 0x0000 (0x0070 - 0x0070)
class UBehavior_PoplarStartGameTimer : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarStartGameTimer");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Behavior_PoplarStealth
// 0x0000 (0x0070 - 0x0070)
class UBehavior_PoplarStealth : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_PoplarStealth");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Behavior_SetBuildNodeParticleEffect
// 0x0000 (0x0070 - 0x0070)
class UBehavior_SetBuildNodeParticleEffect : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SetBuildNodeParticleEffect");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMatchScoreReplicationInfo
// 0x0000 (0x0240 - 0x0240)
class APoplarMatchScoreReplicationInfo : public AReplicationInfo
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMatchScoreReplicationInfo");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Behavior_SkillButtonRelease
// 0x0000 (0x0070 - 0x0070)
class UBehavior_SkillButtonRelease : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SkillButtonRelease");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Behavior_SkillMenu
// 0x0000 (0x0088 - 0x0088)
class UBehavior_SkillMenu : public UBehavior_UIBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_SkillMenu");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Behavior_StartBuildNodeCooldown
// 0x0000 (0x0070 - 0x0070)
class UBehavior_StartBuildNodeCooldown : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_StartBuildNodeCooldown");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Behavior_TeleportMove
// 0x0010 (0x00C8 - 0x00D8)
class UBehavior_TeleportMove : public UBehavior_Teleport
{
public:
	struct FName                                       CameraMode;                                    // 0x00C8 (0x0008) [0x0000000000000003] (CPF_Edit | CPF_Const)
	float                                              TransitionTime;                                // 0x00D0 (0x0004) [0x0000000000000003] (CPF_Edit | CPF_Const)

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_TeleportMove");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.Behavior_WaitForCommandRing
// 0x0000 (0x0070 - 0x0070)
class UBehavior_WaitForCommandRing : public UBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.Behavior_WaitForCommandRing");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.GBXPathConstraint_WithinTowerRadius
// 0x0000 (0x00C8 - 0x00C8)
class UGBXPathConstraint_WithinTowerRadius : public UGBXPathConstraint
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.GBXPathConstraint_WithinTowerRadius");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.LaneDistanceAttributeValueResolver
// 0x0000 (0x0058 - 0x0058)
class ULaneDistanceAttributeValueResolver : public UAttributeValueResolver
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.LaneDistanceAttributeValueResolver");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.MHW_AlertIcon
// 0x0000 (0x00E8 - 0x00E8)
class UMHW_AlertIcon : public UModularHUDWidgetGFxObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_AlertIcon");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.MHW_Challenges_Definition
// 0x0000 (0x0058 - 0x0058)
class UMHW_Challenges_Definition : public UGBXDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_Challenges_Definition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.MHW_GameModeBombardment
// 0x0000 (0x00E8 - 0x00E8)
class UMHW_GameModeBombardment : public UModularHUDWidgetGFxObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_GameModeBombardment");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.MHW_GameModeBrawl
// 0x0000 (0x00E8 - 0x00E8)
class UMHW_GameModeBrawl : public UModularHUDWidgetGFxObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_GameModeBrawl");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.MHW_SkillPurchaseMenu
// 0x0000 (0x00E8 - 0x00E8)
class UMHW_SkillPurchaseMenu : public UModularHUDWidgetGFxObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.MHW_SkillPurchaseMenu");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarActionSkill_ControlledMove
// 0x0000 (0x0358 - 0x0358)
class APoplarActionSkill_ControlledMove : public APoplarActionSkill
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarActionSkill_ControlledMove");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarAIFactory
// 0x0000 (0x0058 - 0x0058)
class UPoplarAIFactory : public UAIFactoryBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarAIFactory");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarPhaseDefinition
// 0x0000 (0x0058 - 0x0058)
class UPoplarPhaseDefinition : public UGBXDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPhaseDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarAssaultPhaseDefinition
// 0x0000 (0x0058 - 0x0058)
class UPoplarAssaultPhaseDefinition : public UPoplarPhaseDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarAssaultPhaseDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarAugManager
// 0x0000 (0x0240 - 0x0240)
class APoplarAugManager : public AActor
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarAugManager");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarChallengeTagDefinition
// 0x0000 (0x0058 - 0x0058)
class UPoplarChallengeTagDefinition : public UGBXDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarChallengeTagDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarChallengeCharacterTagDefinition
// 0x0000 (0x0058 - 0x0058)
class UPoplarChallengeCharacterTagDefinition : public UPoplarChallengeTagDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarChallengeCharacterTagDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarChallengeFactionTagDefinition
// 0x0000 (0x0058 - 0x0058)
class UPoplarChallengeFactionTagDefinition : public UPoplarChallengeTagDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarChallengeFactionTagDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarChallengeGameModeTagDefinition
// 0x0000 (0x0058 - 0x0058)
class UPoplarChallengeGameModeTagDefinition : public UPoplarChallengeTagDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarChallengeGameModeTagDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarChallengeLevelTagDefinition
// 0x0000 (0x0058 - 0x0058)
class UPoplarChallengeLevelTagDefinition : public UPoplarChallengeTagDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarChallengeLevelTagDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarChallengeLevelTagListDefinition
// 0x0000 (0x0058 - 0x0058)
class UPoplarChallengeLevelTagListDefinition : public UPoplarChallengeTagDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarChallengeLevelTagListDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarDamageIndicatorContainerGFxObject
// 0x0000 (0x00D8 - 0x00D8)
class UPoplarDamageIndicatorContainerGFxObject : public UGFxObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarDamageIndicatorContainerGFxObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarFlinchDefinition
// 0x0000 (0x0058 - 0x0058)
class UPoplarFlinchDefinition : public UGBXDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarFlinchDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarFrontendScreenMatchmakingExperienceGFxObject
// 0x0000 (0x0100 - 0x0100)
class UPoplarFrontendScreenMatchmakingExperienceGFxObject : public UPoplarFrontendScreenBaseScrollingListGFxObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarFrontendScreenMatchmakingExperienceGFxObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarFrontendScreenMatchmakingProgressGFxObject
// 0x0000 (0x00F0 - 0x00F0)
class UPoplarFrontendScreenMatchmakingProgressGFxObject : public UPoplarFrontendScreenBaseGFxObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarFrontendScreenMatchmakingProgressGFxObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarHUDGFxMovie
// 0x0000 (0x05B0 - 0x05B0)
class UPoplarHUDGFxMovie : public UWillowHUDGFxMovie
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarHUDGFxMovie");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarHUDGFxMovieDefinition
// 0x0000 (0x0138 - 0x0138)
class UPoplarHUDGFxMovieDefinition : public UWillowHUDGFxMovieDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarHUDGFxMovieDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarHUDWidget_Crosshairs
// 0x0000 (0x00D8 - 0x00D8)
class UPoplarHUDWidget_Crosshairs : public UHUDWidget_Crosshairs
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarHUDWidget_Crosshairs");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarHUDWidget_MatchEventsFeed
// 0x0000 (0x00D8 - 0x00D8)
class UPoplarHUDWidget_MatchEventsFeed : public UHUDWidget_Base
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarHUDWidget_MatchEventsFeed");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarHUDWidget_MatchEventsHeadline
// 0x0000 (0x00D8 - 0x00D8)
class UPoplarHUDWidget_MatchEventsHeadline : public UHUDWidget_Base
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarHUDWidget_MatchEventsHeadline");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarHUDWidget_Minimap
// 0x0000 (0x00D8 - 0x00D8)
class UPoplarHUDWidget_Minimap : public UHUDWidget_Minimap
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarHUDWidget_Minimap");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarHUDWidget_ResourceBar
// 0x0000 (0x00D8 - 0x00D8)
class UPoplarHUDWidget_ResourceBar : public UHUDWidget_Base
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarHUDWidget_ResourceBar");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarLaneAIComponent
// 0x0000 (0x0338 - 0x0338)
class UPoplarLaneAIComponent : public UWillowAIComponent
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarLaneAIComponent");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarLootTableDefinition
// 0x0000 (0x0058 - 0x0058)
class UPoplarLootTableDefinition : public UGBXDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarLootTableDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarLoreDefinition
// 0x0000 (0x0058 - 0x0058)
class UPoplarLoreDefinition : public UGBXDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarLoreDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMatchEndedPhaseDefinition
// 0x0000 (0x0058 - 0x0058)
class UPoplarMatchEndedPhaseDefinition : public UPoplarPhaseDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMatchEndedPhaseDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMatchScheduleDefinition
// 0x0000 (0x0058 - 0x0058)
class UPoplarMatchScheduleDefinition : public UGBXDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMatchScheduleDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMetaDictionary
// 0x0000 (0x0058 - 0x0058)
class UPoplarMetaDictionary : public UObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMetaDictionary");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMetaDictionaryDefinition
// 0x0000 (0x0058 - 0x0058)
class UPoplarMetaDictionaryDefinition : public UGBXDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMetaDictionaryDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMetagameGlobals
// 0x0000 (0x0058 - 0x0058)
class UPoplarMetagameGlobals : public UObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMetagameGlobals");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMetagameServer
// 0x0000 (0x0058 - 0x0058)
class UPoplarMetagameServer : public UObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMetagameServer");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMetagameServer_Dev
// 0x0000 (0x0058 - 0x0058)
class UPoplarMetagameServer_Dev : public UPoplarMetagameServer
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMetagameServer_Dev");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMetagameServer_Hydra
// 0x0000 (0x0058 - 0x0058)
class UPoplarMetagameServer_Hydra : public UPoplarMetagameServer
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMetagameServer_Hydra");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMetaLoadout
// 0x0000 (0x0240 - 0x0240)
class APoplarMetaLoadout : public AActor
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMetaLoadout");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMetaLoadoutItem
// 0x0000 (0x0240 - 0x0240)
class APoplarMetaLoadoutItem : public AActor
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMetaLoadoutItem");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarMusicManager
// 0x0000 (0x0240 - 0x0240)
class APoplarMusicManager : public AWorldMusicManager
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarMusicManager");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarPlayerStartRegion
// 0x0000 (0x0240 - 0x0240)
class APoplarPlayerStartRegion : public AActor
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPlayerStartRegion");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarPointCapturePhaseDefinition
// 0x0000 (0x0058 - 0x0058)
class UPoplarPointCapturePhaseDefinition : public UPoplarPhaseDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPointCapturePhaseDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarPopulationOpportunityPointBase
// 0x0000 (0x0348 - 0x0348)
class APoplarPopulationOpportunityPointBase : public APointSpawner
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarPopulationOpportunityPointBase");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarProfileSettings
// 0x0000 (0x0058 - 0x0058)
class UPoplarProfileSettings : public UObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarProfileSettings");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarRecipeProbabilityDefinition
// 0x0000 (0x0068 - 0x0068)
class UPoplarRecipeProbabilityDefinition : public UPoplarMetaItemProbabilityDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarRecipeProbabilityDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarScrollingListDataProviderExtras
// 0x0000 (0x0080 - 0x0080)
class UPoplarScrollingListDataProviderExtras : public UPoplarScrollingListDataProviderBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarScrollingListDataProviderExtras");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarScrollingListDataProviderFrontEnd
// 0x0000 (0x0058 - 0x0058)
class UPoplarScrollingListDataProviderFrontEnd : public UObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarScrollingListDataProviderFrontEnd");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarScrollingListDataProviderFrontEndMain
// 0x0000 (0x0080 - 0x0080)
class UPoplarScrollingListDataProviderFrontEndMain : public UPoplarScrollingListDataProviderBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarScrollingListDataProviderFrontEndMain");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarScrollingListDataProviderFrontendMatchmakingExperience
// 0x0000 (0x0080 - 0x0080)
class UPoplarScrollingListDataProviderFrontendMatchmakingExperience : public UPoplarScrollingListDataProviderBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarScrollingListDataProviderFrontendMatchmakingExperience");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarShop2BasePanelGFxObject
// 0x0000 (0x00D8 - 0x00D8)
class UPoplarShop2BasePanelGFxObject : public UGFxObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarShop2BasePanelGFxObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarShop2GFxMovie
// 0x0000 (0x0450 - 0x0450)
class UPoplarShop2GFxMovie : public UWillowGFxMovie
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarShop2GFxMovie");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarShop2ItemPanelGFxObject
// 0x0000 (0x00D8 - 0x00D8)
class UPoplarShop2ItemPanelGFxObject : public UPoplarShop2BasePanelGFxObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarShop2ItemPanelGFxObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarShop2PlayerPanelGFxObject
// 0x0000 (0x00D8 - 0x00D8)
class UPoplarShop2PlayerPanelGFxObject : public UPoplarShop2BasePanelGFxObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarShop2PlayerPanelGFxObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarShop2StorePanelGFxObject
// 0x0000 (0x00D8 - 0x00D8)
class UPoplarShop2StorePanelGFxObject : public UPoplarShop2BasePanelGFxObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarShop2StorePanelGFxObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarShop3Definition
// 0x0000 (0x0320 - 0x0320)
class UPoplarShop3Definition : public UPoplarInteractiveObjectDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarShop3Definition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarShopGFxMovie
// 0x0000 (0x0450 - 0x0450)
class UPoplarShopGFxMovie : public UWillowGFxMovie
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarShopGFxMovie");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarShopItem
// 0x0000 (0x0D10 - 0x0D10)
class APoplarShopItem : public AWillowItem
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarShopItem");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarShopItemDefinition
// 0x0000 (0x0240 - 0x0240)
class UPoplarShopItemDefinition : public UItemDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarShopItemDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarShopItemPanelGFxObject
// 0x0000 (0x00D8 - 0x00D8)
class UPoplarShopItemPanelGFxObject : public UGFxObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarShopItemPanelGFxObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarShopPlayerPanelGFxObject
// 0x0000 (0x00D8 - 0x00D8)
class UPoplarShopPlayerPanelGFxObject : public UGFxObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarShopPlayerPanelGFxObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarShopStoreScrollingListGFxObject
// 0x0000 (0x00D8 - 0x00D8)
class UPoplarShopStoreScrollingListGFxObject : public UGFxObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarShopStoreScrollingListGFxObject");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarStealthComponent
// 0x0000 (0x0090 - 0x0090)
class UPoplarStealthComponent : public UActorComponent
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarStealthComponent");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarStealthDefinition
// 0x0000 (0x0058 - 0x0058)
class UPoplarStealthDefinition : public UGBXDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarStealthDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarStealthVolume
// 0x0000 (0x0288 - 0x0288)
class APoplarStealthVolume : public AVolume
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarStealthVolume");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarTrackedAssetsDefinition
// 0x0000 (0x0058 - 0x0058)
class UPoplarTrackedAssetsDefinition : public UGBXDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarTrackedAssetsDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarVendingMachine
// 0x0000 (0x2998 - 0x2998)
class APoplarVendingMachine : public APoplarInteractiveObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarVendingMachine");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.PoplarVendingMachineDefinition
// 0x0000 (0x0320 - 0x0320)
class UPoplarVendingMachineDefinition : public UPoplarInteractiveObjectDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.PoplarVendingMachineDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.SourceCommandRingDefinition
// 0x0000 (0x0088 - 0x0088)
class USourceCommandRingDefinition : public UCommandRingDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.SourceCommandRingDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.SpawnFactoryPoplarVendingMachine
// 0x0000 (0x00B0 - 0x00B0)
class USpawnFactoryPoplarVendingMachine : public USpawnFactoryInteractiveObject
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.SpawnFactoryPoplarVendingMachine");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.TargetingCommandRingDefinition
// 0x0000 (0x0088 - 0x0088)
class UTargetingCommandRingDefinition : public UCommandRingDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.TargetingCommandRingDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.UnlockChallengeDefinition
// 0x0000 (0x0138 - 0x0138)
class UUnlockChallengeDefinition : public UUnlockDefinition
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.UnlockChallengeDefinition");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.WeaponBehavior_SpecialMoveUseAction
// 0x0000 (0x0070 - 0x0070)
class UWeaponBehavior_SpecialMoveUseAction : public UWeaponBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.WeaponBehavior_SpecialMoveUseAction");
		}

		return uClassPointer;
	};

};

// Class PoplarGame.WeaponBehavior_WindUpUseAction
// 0x0000 (0x0070 - 0x0070)
class UWeaponBehavior_WindUpUseAction : public UWeaponBehaviorBase
{
public:

public:
	static UClass* StaticClass()
	{
		static UClass* uClassPointer = nullptr;

		if (!uClassPointer)
		{
			uClassPointer = UObject::FindClass("Class PoplarGame.WeaponBehavior_WindUpUseAction");
		}

		return uClassPointer;
	};

};

/*
# ========================================================================================= #
#
# ========================================================================================= #
*/

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
